BgkSetCursor    proc near               ; DATA XREF: .pdata:000000014012BFD0↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     ebx, r8d
                mov     edi, edx
                mov     esi, ecx
                call    sub_1404FFA78
                test    al, al
                jnz     short loc_1409F8516
                mov     eax, 0C0000001h
                jmp     short loc_1409F8536
; ---------------------------------------------------------------------------

loc_1409F8516:                          ; CODE XREF: BgkSetCursor+1D↑j
                mov     rax, cs:qword_140C50A00
                mov     r8d, ebx
                mov     edx, edi
                mov     ecx, esi
                mov     rax, [rax+38h]
                call    sub_1404079D0
                mov     ebx, eax
                call    sub_1404FFAC4
                mov     eax, ebx

loc_1409F8536:                          ; CODE XREF: BgkSetCursor+24↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
BgkSetCursor    endp

algn_1409F8547:                         ; DATA XREF: .pdata:000000014012BFD0↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1409F8550   proc near               ; CODE XREF: sub_1403CC950+E7707↑p
                                        ; DATA XREF: .pdata:000000014012BFDC↑o
                sub     rsp, 28h
                mov     edx, ecx
                lea     rcx, qword_140C13418
                call    sub_1403CE3FC
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8550   endp

algn_1409F8568:                         ; DATA XREF: .pdata:000000014012BFDC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1409F8570   proc near               ; CODE XREF: sub_1409F83DC+16↑p
                                        ; DATA XREF: .pdata:000000014012BFE8↑o
                push    rbx
                sub     rsp, 30h
                mov     rbx, rcx
                call    KeGetCurrentIrql
                cmp     al, 2
                jbe     short loc_1409F8589
                mov     eax, 0C0000001h
                jmp     short loc_1409F85D3
; ---------------------------------------------------------------------------

loc_1409F8589:                          ; CODE XREF: sub_1409F8570+10↑j
                call    sub_14039C2D8
                mov     eax, cs:dword_140C13390
                test    al, 1
                jnz     short loc_1409F859F

loc_1409F8598:                          ; CODE XREF: sub_1409F8570+33↓j
                mov     ebx, 0C0000001h
                jmp     short loc_1409F85CC
; ---------------------------------------------------------------------------

loc_1409F859F:                          ; CODE XREF: sub_1409F8570+26↑j
                bt      eax, 8
                jb      short loc_1409F8598
                cmp     cs:qword_140C13440, 0
                jz      short loc_1409F85C7
                mov     rcx, cs:qword_140C13458
                test    rcx, rcx
                jz      short loc_1409F85C7
                mov     rdx, rbx
                call    sub_1409F9784
                mov     ebx, eax
                jmp     short loc_1409F85CC
; ---------------------------------------------------------------------------

loc_1409F85C7:                          ; CODE XREF: sub_1409F8570+3D↑j
                                        ; sub_1409F8570+49↑j
                mov     ebx, 0C000009Ah

loc_1409F85CC:                          ; CODE XREF: sub_1409F8570+2D↑j
                                        ; sub_1409F8570+55↑j
                call    sub_14039C288
                mov     eax, ebx

loc_1409F85D3:                          ; CODE XREF: sub_1409F8570+17↑j
                add     rsp, 30h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8570   endp

algn_1409F85DA:                         ; DATA XREF: .pdata:000000014012BFE8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1409F85E0   proc near               ; CODE XREF: sub_1409F6B08:loc_1409F831F↑p
                                        ; DATA XREF: .pdata:000000014012BFF4↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                call    KeGetCurrentIrql
                cmp     al, 2
                jbe     short loc_1409F85FA
                mov     eax, 0C0000001h
                jmp     short loc_1409F863A
; ---------------------------------------------------------------------------

loc_1409F85FA:                          ; CODE XREF: sub_1409F85E0+11↑j
                call    sub_14039C2D8
                mov     ebx, cs:dword_140C13390
                xor     edi, edi
                test    bl, 1
                jz      short loc_1409F8633
                xorps   xmm0, xmm0
                mov     cs:qword_140C134F0, rdi
                and     ebx, 0C00h
                movdqu  cs:xmmword_140C13500, xmm0
                call    sub_1409F5F0C
                mov     edi, eax
                cmp     ebx, 0C00h
                jz      short loc_1409F8638

loc_1409F8633:                          ; CODE XREF: sub_1409F85E0+2A↑j
                call    sub_14039C288

loc_1409F8638:                          ; CODE XREF: sub_1409F85E0+51↑j
                mov     eax, edi

loc_1409F863A:                          ; CODE XREF: sub_1409F85E0+18↑j
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F85E0   endp

byte_1409F8646  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012BFF4↑o

; =============== S U B R O U T I N E =======================================


sub_1409F864C   proc near               ; CODE XREF: sub_1409981D8:loc_1409A6B47↑p
                                        ; DATA XREF: .pdata:000000014012C000↑o
                push    rbx
                sub     rsp, 20h
                call    sub_14039C2D8
                mov     eax, cs:dword_140C13390
                test    al, 1
                jnz     short loc_1409F8668
                mov     ebx, 0C0000001h
                jmp     short loc_1409F866F
; ---------------------------------------------------------------------------

loc_1409F8668:                          ; CODE XREF: sub_1409F864C+13↑j
                call    sub_1409F90F4
                mov     ebx, eax

loc_1409F866F:                          ; CODE XREF: sub_1409F864C+1A↑j
                call    sub_14039C288
                mov     eax, ebx
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F864C   endp

byte_1409F867D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012C000↑o

; =============== S U B R O U T I N E =======================================


sub_1409F8684   proc near               ; CODE XREF: sub_1409F84C4:loc_1409F84D8↑p
                                        ; DATA XREF: .pdata:000000014012C00C↑o
                push    rbx
                sub     rsp, 20h
                mov     rbx, rdx
                call    KeGetCurrentIrql
                test    al, al
                jz      short loc_1409F869D
                mov     eax, 0C0000001h
                jmp     short loc_1409F86D0
; ---------------------------------------------------------------------------

loc_1409F869D:                          ; CODE XREF: sub_1409F8684+10↑j
                test    rbx, rbx
                jz      short loc_1409F86CB
                call    sub_14039C2D8
                mov     eax, cs:dword_140C13390
                test    al, 1
                jnz     short loc_1409F86B8
                mov     ebx, 0C0000001h
                jmp     short loc_1409F86C2
; ---------------------------------------------------------------------------

loc_1409F86B8:                          ; CODE XREF: sub_1409F8684+2B↑j
                mov     rdx, rbx
                call    sub_1405C48F0
                mov     ebx, eax

loc_1409F86C2:                          ; CODE XREF: sub_1409F8684+32↑j
                call    sub_14039C288
                mov     eax, ebx
                jmp     short loc_1409F86D0
; ---------------------------------------------------------------------------

loc_1409F86CB:                          ; CODE XREF: sub_1409F8684+1C↑j
                mov     eax, 0C000000Dh

loc_1409F86D0:                          ; CODE XREF: sub_1409F8684+17↑j
                                        ; sub_1409F8684+45↑j
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8684   endp

algn_1409F86D7:                         ; DATA XREF: .pdata:000000014012C00C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1409F86E0   proc near               ; DATA XREF: .pdata:000000014012C018↑o
                                        ; .data:0000000140C03428↓o
                push    rbx
                sub     rsp, 20h
                call    sub_14039C2D8
                cmp     cs:qword_140CDAFD8, 0
                jnz     short loc_1409F86FC
                mov     ebx, 0C0000001h
                jmp     short loc_1409F8703
; ---------------------------------------------------------------------------

loc_1409F86FC:                          ; CODE XREF: sub_1409F86E0+13↑j
                call    sub_1409F8718
                mov     ebx, eax

loc_1409F8703:                          ; CODE XREF: sub_1409F86E0+1A↑j
                call    sub_14039C288
                mov     eax, ebx
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F86E0   endp

algn_1409F8711:                         ; DATA XREF: .pdata:000000014012C018↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1409F8718   proc near               ; CODE XREF: sub_1409F6820:loc_1409F6A3C↑p
                                        ; sub_1409F86E0:loc_1409F86FC↑p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                mov     rax, cs:qword_140CDAFD8
                mov     ecx, [rax+10h]
                and     dword ptr [rax+44h], 0
                and     dword ptr [rax+48h], 0
                call    sub_1405C46D4
                mov     r8d, eax
                test    eax, eax
                js      short loc_1409F8797
                mov     r10, cs:qword_140CDAFD8
                xor     r9d, r9d
                mov     eax, [r10+4]
                lea     r11d, [r9+50h]

loc_1409F874E:                          ; CODE XREF: sub_1409F8718+7D↓j
                xor     ebx, ebx
                test    eax, eax
                jz      short loc_1409F878D

loc_1409F8754:                          ; CODE XREF: sub_1409F8718+73↓j
                lea     rax, [r9+rbx]
                lea     rdx, [rax+rax*2]
                mov     eax, 20h ; ' '
                mov     [r10+rdx*4+58h], ax
                lea     rax, [rbx+7]
                add     rax, r9
                inc     ebx
                lea     rcx, [rax+rax*2]
                mov     eax, [r10+10h]
                mov     [r10+rcx*4], eax
                mov     eax, [r10+0Ch]
                mov     [r10+rdx*4+50h], eax
                mov     eax, [r10+4]
                cmp     ebx, eax
                jb      short loc_1409F8754

loc_1409F878D:                          ; CODE XREF: sub_1409F8718+3A↑j
                add     r9, 19h
                sub     r11, 1
                jnz     short loc_1409F874E

loc_1409F8797:                          ; CODE XREF: sub_1409F8718+22↑j
                mov     eax, r8d
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8718   endp

algn_1409F87A1:                         ; DATA XREF: .pdata:000000014012C024↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1409F87B0   proc near               ; DATA XREF: .pdata:000000014012C030↑o
                                        ; .data:0000000140C03440↓o

var_58          = dword ptr -58h
var_50          = dword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_30          = qword ptr -30h
var_28          = byte ptr -28h
var_24          = byte ptr -24h
var_18          = byte ptr -18h
arg_20          = dword ptr  28h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 60h
                mov     ebp, r9d
                mov     r12d, r8d
                mov     esi, edx
                movzx   r15d, cx
                call    sub_14039C2D8
                mov     rbx, cs:qword_140CDAFD8
                test    rbx, rbx
                jnz     short loc_1409F87F4
                mov     esi, 0C0000001h
                jmp     loc_1409F8895
; ---------------------------------------------------------------------------

loc_1409F87F4:                          ; CODE XREF: sub_1409F87B0+38↑j
                test    dword ptr [rbx+8], 10000h
                jz      short loc_1409F880E
                call    sub_1409F41B4
                mov     rbx, cs:qword_140CDAFD8
                btr     dword ptr [rbx+8], 10h

loc_1409F880E:                          ; CODE XREF: sub_1409F87B0+4B↑j
                mov     r14d, [rsp+78h+arg_20]
                imul    rcx, rsi, 19h
                add     rcx, r12
                lea     rdi, [rcx+rcx*2]
                cmp     [rbx+rdi*4+58h], r15w
                jnz     short loc_1409F883A
                cmp     [rbx+rdi*4+50h], ebp
                jnz     short loc_1409F883A
                cmp     [rbx+rdi*4+54h], r14d
                jnz     short loc_1409F883A
                xor     esi, esi
                jmp     short loc_1409F8895
; ---------------------------------------------------------------------------

loc_1409F883A:                          ; CODE XREF: sub_1409F87B0+77↑j
                                        ; sub_1409F87B0+7D↑j ...
                and     [rsp+78h+var_30], 0
                lea     rax, [rsp+78h+var_28]
                mov     r9d, [rbx+34h]
                movzx   ecx, r15w
                imul    esi, [rbx+30h]
                mov     rdx, [rbx+28h]
                mov     [rsp+78h+var_40], rax
                lea     rax, [rsp+78h+var_24]
                mov     [rsp+78h+var_48], rax
                imul    r9d, r12d
                add     esi, [rbx+3Ch]
                mov     r8d, esi
                mov     [rsp+78h+var_50], ebp
                mov     [rsp+78h+var_58], r14d
                add     r9d, [rbx+40h]
                call    sub_1405C4834
                mov     esi, eax
                test    eax, eax
                js      short loc_1409F8895
                mov     [rbx+rdi*4+58h], r15w
                mov     [rbx+rdi*4+50h], ebp
                mov     [rbx+rdi*4+54h], r14d

loc_1409F8895:                          ; CODE XREF: sub_1409F87B0+3F↑j
                                        ; sub_1409F87B0+88↑j ...
                call    sub_14039C288
                lea     r11, [rsp+78h+var_18]
                mov     eax, esi
                mov     rbx, [r11+20h]
                mov     rbp, [r11+28h]
                mov     rsi, [r11+30h]
                mov     rdi, [r11+38h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r12
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F87B0   endp

byte_1409F88BC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C030↑o

; =============== S U B R O U T I N E =======================================


sub_1409F88C4   proc near               ; CODE XREF: sub_1409F8B60+90↓p
                                        ; DATA XREF: .pdata:000000014012C03C↑o

var_58          = dword ptr -58h
var_50          = dword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_30          = qword ptr -30h
var_28          = byte ptr -28h
arg_8           = byte ptr  10h
arg_20          = dword ptr  28h
arg_28          = byte ptr  30h

                mov     r11, rsp
                mov     [r11+8], rbx
                mov     [r11+18h], rbp
                mov     [r11+20h], rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 50h
                movzx   esi, cx
                mov     edi, r9d
                cmp     edx, 50h ; 'P'
                ja      loc_1409F8B31
                mov     rdx, cs:qword_140CDAFD8
                cmp     r8d, [rdx+4]
                ja      loc_1409F8B31
                xor     r13d, r13d
                lea     rbx, [rdx+44h]
                mov     ecx, esi
                lea     r15, [rdx+3Ch]
                lea     r12, [rdx+30h]
                mov     ebp, r13d
                sub     ecx, 8
                jz      loc_1409F8A74
                sub     ecx, 1
                jz      loc_1409F89B7
                sub     ecx, 1
                jz      loc_1409F8B15
                cmp     ecx, 3
                jz      loc_1409F8B18
                mov     r9d, [r12+4]
                lea     rax, [r11+10h]
                mov     r8d, [r12]
                movzx   ecx, si
                imul    r9d, [rbx+4]
                imul    r8d, [rbx]
                mov     rdx, [rdx+28h]
                mov     r14d, [rsp+78h+arg_20]
                mov     [r11-30h], r13
                add     r9d, [r15+4]
                add     r8d, [r15]
                mov     [r11-40h], rax
                lea     rax, [r11+30h]
                mov     [r11-48h], rax
                mov     [rsp+78h+var_50], edi
                mov     [r11-58h], r14d
                call    sub_1405C4834
                mov     ebp, eax
                test    eax, eax
                js      loc_1409F8B09
                mov     ecx, [rbx]
                imul    rdx, rcx, 19h
                mov     ecx, [rbx+4]
                add     rdx, rcx
                lea     rcx, [rdx+rdx*2]
                mov     rdx, cs:qword_140CDAFD8
                mov     [rdx+rcx*4+58h], si
                mov     [rdx+rcx*4+50h], edi
                mov     [rdx+rcx*4+54h], r14d
                inc     dword ptr [rbx]
                jmp     loc_1409F8B10
; ---------------------------------------------------------------------------

loc_1409F89B7:                          ; CODE XREF: sub_1409F88C4+5C↑j
                mov     r10d, [rbx]
                mov     eax, 50h ; 'P'
                sub     eax, r10d
                mov     ecx, 5
                cmp     eax, ecx
                jnb     short loc_1409F89D5
                mov     ecx, eax
                test    eax, eax
                jz      loc_1409F8B10

loc_1409F89D5:                          ; CODE XREF: sub_1409F88C4+105↑j
                mov     r13d, [rsp+78h+arg_20]
                mov     esi, 20h ; ' '
                mov     r14d, ecx

loc_1409F89E5:                          ; CODE XREF: sub_1409F88C4+1A2↓j
                and     [rsp+78h+var_30], 0
                lea     rax, [rsp+78h+arg_8]
                mov     r9d, [rbx+4]
                mov     ecx, esi
                mov     r8d, [r12]
                imul    r9d, [r12+4]
                mov     rdx, [rdx+28h]
                mov     [rsp+78h+var_40], rax
                lea     rax, [rsp+78h+arg_28]
                mov     [rsp+78h+var_48], rax
                imul    r8d, r10d
                add     r9d, [r15+4]
                mov     [rsp+78h+var_50], edi
                mov     [rsp+78h+var_58], r13d
                add     r8d, [r15]
                call    sub_1405C4834
                mov     rdx, cs:qword_140CDAFD8
                mov     ebp, eax
                test    eax, eax
                js      short loc_1409F8A5D
                mov     eax, [rbx]
                imul    rcx, rax, 19h
                mov     eax, [rbx+4]
                add     rcx, rax
                lea     rax, [rcx+rcx*2]
                mov     [rdx+rax*4+58h], si
                mov     [rdx+rax*4+50h], edi
                mov     [rdx+rax*4+54h], r13d

loc_1409F8A5D:                          ; CODE XREF: sub_1409F88C4+179↑j
                inc     dword ptr [rbx]
                mov     r10d, [rbx]
                sub     r14, 1
                jnz     loc_1409F89E5
                xor     r13d, r13d
                jmp     loc_1409F8B10
; ---------------------------------------------------------------------------

loc_1409F8A74:                          ; CODE XREF: sub_1409F88C4+53↑j
                mov     r8d, [rbx]
                test    r8d, r8d
                jz      loc_1409F8B10
                mov     r14d, [rsp+78h+arg_20]
                lea     rax, [rsp+78h+arg_8]
                dec     r8d
                mov     [rsp+78h+var_30], r13
                mov     [rbx], r8d
                mov     esi, 20h ; ' '
                mov     r9d, [r12+4]
                mov     ecx, esi
                imul    r9d, [rbx+4]
                imul    r8d, [r12]
                mov     rdx, [rdx+28h]
                mov     [rsp+78h+var_40], rax
                lea     rax, [rsp+78h+arg_28]
                mov     [rsp+78h+var_48], rax
                add     r9d, [r15+4]
                add     r8d, [r15]
                mov     [rsp+78h+var_50], edi
                mov     [rsp+78h+var_58], r14d
                call    sub_1405C4834
                mov     ebp, eax
                test    eax, eax
                js      short loc_1409F8B09
                mov     eax, [rbx]
                mov     rdx, cs:qword_140CDAFD8
                imul    rcx, rax, 19h
                mov     eax, [rbx+4]
                add     rcx, rax
                lea     rax, [rcx+rcx*2]
                mov     [rdx+rax*4+58h], si
                mov     [rdx+rax*4+50h], edi
                mov     [rdx+rax*4+54h], r14d
                jmp     short loc_1409F8B10
; ---------------------------------------------------------------------------

loc_1409F8B09:                          ; CODE XREF: sub_1409F88C4+C1↑j
                                        ; sub_1409F88C4+21C↑j
                mov     rdx, cs:qword_140CDAFD8

loc_1409F8B10:                          ; CODE XREF: sub_1409F88C4+EE↑j
                                        ; sub_1409F88C4+10B↑j ...
                cmp     dword ptr [rbx], 50h ; 'P'
                jb      short loc_1409F8B1B

loc_1409F8B15:                          ; CODE XREF: sub_1409F88C4+65↑j
                inc     dword ptr [rbx+4]

loc_1409F8B18:                          ; CODE XREF: sub_1409F88C4+6E↑j
                mov     [rbx], r13d

loc_1409F8B1B:                          ; CODE XREF: sub_1409F88C4+24F↑j
                mov     eax, [rbx+4]
                cmp     eax, [rdx+4]
                jb      short loc_1409F8B2D
                dec     eax
                mov     [rbx+4], eax
                call    sub_1409F8DC0

loc_1409F8B2D:                          ; CODE XREF: sub_1409F88C4+25D↑j
                mov     eax, ebp
                jmp     short loc_1409F8B36
; ---------------------------------------------------------------------------

loc_1409F8B31:                          ; CODE XREF: sub_1409F88C4+25↑j
                                        ; sub_1409F88C4+36↑j
                mov     eax, 0C000000Dh

loc_1409F8B36:                          ; CODE XREF: sub_1409F88C4+26B↑j
                lea     r11, [rsp+78h+var_28]
                mov     rbx, [r11+30h]
                mov     rbp, [r11+40h]
                mov     rsi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F88C4   endp

algn_1409F8B55:                         ; DATA XREF: .pdata:000000014012C03C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1409F8B60   proc near               ; DATA XREF: .pdata:000000014012C048↑o
                                        ; .data:0000000140C03438↓o

var_18          = dword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 30h
                mov     rdi, rcx
                call    sub_14039C2D8
                mov     rdx, cs:qword_140CDAFD8
                xor     esi, esi
                test    rdx, rdx
                jnz     short loc_1409F8BA2
                mov     ebx, 0C0000001h

loc_1409F8B8A:                          ; CODE XREF: sub_1409F8B60+4C↓j
                                        ; sub_1409F8B60+58↓j ...
                call    sub_14039C288
                mov     rsi, [rsp+38h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+38h+arg_0]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                align 2

loc_1409F8BA2:                          ; CODE XREF: sub_1409F8B60+23↑j
                test    rdi, rdi
                jnz     short loc_1409F8BAE
                mov     ebx, 0C000000Dh
                jmp     short loc_1409F8B8A
; ---------------------------------------------------------------------------

loc_1409F8BAE:                          ; CODE XREF: sub_1409F8B60+45↑j
                movzx   ecx, word ptr [rdi]
                test    cx, cx
                jnz     short loc_1409F8BBA
                mov     ebx, esi
                jmp     short loc_1409F8B8A
; ---------------------------------------------------------------------------

loc_1409F8BBA:                          ; CODE XREF: sub_1409F8B60+54↑j
                test    dword ptr [rdx+8], 10000h
                jz      short loc_1409F8BD7
                call    sub_1409F41B4
                mov     rdx, cs:qword_140CDAFD8
                btr     dword ptr [rdx+8], 10h
                movzx   ecx, word ptr [rdi]

loc_1409F8BD7:                          ; CODE XREF: sub_1409F8B60+61↑j
                mov     ebx, esi
                test    cx, cx
                jz      short loc_1409F8B8A

loc_1409F8BDE:                          ; CODE XREF: sub_1409F8B60+B1↓j
                mov     eax, [rdx+10h]
                mov     r9d, [rdx+0Ch]
                mov     r8d, [rdx+48h]
                mov     edx, [rdx+44h]
                mov     [rsp+38h+var_18], eax
                call    sub_1409F88C4
                test    eax, eax
                jns     short loc_1409F8BFE
                test    ebx, ebx
                cmovns  ebx, eax

loc_1409F8BFE:                          ; CODE XREF: sub_1409F8B60+97↑j
                add     rdi, 2
                movzx   ecx, word ptr [rdi]
                test    cx, cx
                jz      short loc_1409F8B8A
                mov     rdx, cs:qword_140CDAFD8
                jmp     short loc_1409F8BDE
sub_1409F8B60   endp

; ---------------------------------------------------------------------------
byte_1409F8C13  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C048↑o

; =============== S U B R O U T I N E =======================================


sub_1409F8C1C   proc near               ; CODE XREF: sub_1409F8FE0+5B↓p
                                        ; sub_1409F8FE0+74↓p
                                        ; DATA XREF: ...

var_38          = dword ptr -38h
var_30          = dword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_10          = qword ptr -10h
arg_0           = byte ptr  8
arg_8           = byte ptr  10h

                sub     rsp, 58h
                mov     r10, cs:qword_140CDAFD8
                mov     eax, [r10+4Ch]
                test    eax, eax
                jnz     short loc_1409F8C58
                mov     eax, [r10+44h]
                imul    rdx, rax, 19h
                mov     eax, [r10+48h]
                add     rdx, rax
                lea     rcx, [rdx+rdx*2]
                movzx   r11d, word ptr [r10+rcx*4+58h]
                lea     rax, [rdx+rdx*2]
                mov     ecx, [r10+rcx*4+50h]
                mov     edx, [r10+rax*4+54h]
                jmp     short loc_1409F8C7E
; ---------------------------------------------------------------------------

loc_1409F8C58:                          ; CODE XREF: sub_1409F8C1C+11↑j
                mov     edx, [r10+10h]
                mov     ecx, [r10+0Ch]
                cmp     eax, 22h ; '"'
                jnb     short loc_1409F8C6D
                mov     r11d, 5Fh ; '_'
                jmp     short loc_1409F8C7E
; ---------------------------------------------------------------------------

loc_1409F8C6D:                          ; CODE XREF: sub_1409F8C1C+47↑j
                mov     r11d, 2584h
                cmp     eax, 43h ; 'C'
                jb      short loc_1409F8C7E
                mov     r11d, 2588h

loc_1409F8C7E:                          ; CODE XREF: sub_1409F8C1C+3A↑j
                                        ; sub_1409F8C1C+4F↑j ...
                and     [rsp+58h+var_10], 0
                lea     rax, [rsp+58h+arg_0]
                mov     r9d, [r10+34h]
                mov     r8d, [r10+30h]
                imul    r9d, [r10+48h]
                imul    r8d, [r10+44h]
                mov     [rsp+58h+var_20], rax
                lea     rax, [rsp+58h+arg_8]
                mov     [rsp+58h+var_28], rax
                mov     [rsp+58h+var_30], ecx
                movzx   ecx, r11w
                add     r9d, [r10+40h]
                add     r8d, [r10+3Ch]
                mov     [rsp+58h+var_38], edx
                mov     rdx, [r10+28h]
                call    sub_1405C4834
                add     rsp, 58h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8C1C   endp

algn_1409F8CCD:                         ; DATA XREF: .pdata:000000014012C054↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1409F8CE0   proc near               ; DATA XREF: .pdata:000000014012C060↑o
                                        ; .data:0000000140C03450↓o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                mov     [rsp+arg_10], rdi
                push    r14
                sub     rsp, 20h
                mov     rdi, r8
                mov     rsi, rdx
                mov     r14, rcx
                call    sub_14039C2D8
                mov     rax, cs:qword_140CDAFD8
                xor     ebx, ebx
                test    rax, rax
                jnz     short loc_1409F8D18
                mov     ebx, 0C0000001h
                jmp     short loc_1409F8D28
; ---------------------------------------------------------------------------

loc_1409F8D18:                          ; CODE XREF: sub_1409F8CE0+2F↑j
                mov     ecx, [rax+44h]
                mov     [r14], ecx
                mov     ecx, [rax+48h]
                mov     [rsi], ecx
                mov     ecx, [rax+4Ch]
                mov     [rdi], ecx

loc_1409F8D28:                          ; CODE XREF: sub_1409F8CE0+36↑j
                call    sub_14039C288
                mov     rsi, [rsp+28h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                mov     rdi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8CE0   endp

algn_1409F8D46:                         ; DATA XREF: .pdata:000000014012C060↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1409F8D50   proc near               ; DATA XREF: .pdata:000000014012C06C↑o
                                        ; .data:0000000140C03448↓o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rdi, rcx
                call    sub_14039C2D8
                mov     rdx, cs:qword_140CDAFD8
                xor     ebx, ebx
                test    rdx, rdx
                jnz     short loc_1409F8D77
                mov     ebx, 0C0000001h
                jmp     short loc_1409F8DA5
; ---------------------------------------------------------------------------

loc_1409F8D77:                          ; CODE XREF: sub_1409F8D50+1E↑j
                mov     eax, [rdx+14h]
                mov     [rdi], eax
                mov     eax, [rdx+18h]
                mov     [rdi+4], eax
                mov     eax, [rdx]
                mov     [rdi+8], eax
                mov     ecx, [rdx+4]
                mov     [rdi+0Ch], ecx
                mov     ecx, [rdx+30h]
                mov     [rdi+10h], ecx
                mov     ecx, [rdx+34h]
                mov     [rdi+14h], ecx
                mov     ecx, [rdx+3Ch]
                mov     [rdi+18h], ecx
                mov     ecx, [rdx+40h]
                mov     [rdi+1Ch], ecx

loc_1409F8DA5:                          ; CODE XREF: sub_1409F8D50+25↑j
                call    sub_14039C288
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8D50   endp

algn_1409F8DB8:                         ; DATA XREF: .pdata:000000014012C06C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1409F8DC0   proc near               ; CODE XREF: sub_1409F88C4+264↑p
                                        ; DATA XREF: .pdata:000000014012C078↑o

var_78          = dword ptr -78h
var_70          = dword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_50          = qword ptr -50h
arg_0           = dword ptr  8
arg_8           = dword ptr  10h
arg_10          = byte ptr  18h
arg_18          = byte ptr  20h

                push    rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 58h
                mov     r10, cs:qword_140CDAFD8
                xor     edi, edi
                xor     ebx, ebx
                lea     r12, [r10+3Ch]
                lea     r13, [r10+30h]

loc_1409F8DE4:                          ; CODE XREF: sub_1409F8DC0+14C↓j
                xor     r8d, r8d
                cmp     dword ptr [r10+4], 1
                jz      loc_1409F8F03

loc_1409F8DF2:                          ; CODE XREF: sub_1409F8DC0+13D↓j
                lea     r15d, [r8+1]
                mov     ebp, r8d
                lea     rax, [rbx+r15]
                lea     r9, [rax+rax*2]
                movzx   r14d, word ptr [r10+r9*4+58h]
                lea     rax, [rbx+rbp]
                lea     rsi, [rax+rax*2]
                cmp     [r10+rsi*4+58h], r14w
                jnz     short loc_1409F8E47
                mov     eax, [r10+r9*4+50h]
                cmp     [r10+rsi*4+50h], eax
                jnz     short loc_1409F8E47
                lea     rax, [rbp+7]
                add     rax, rbx
                lea     rdx, [rax+rax*2]
                lea     rax, [r15+7]
                add     rax, rbx
                lea     rcx, [rax+rax*2]
                mov     eax, [r10+rcx*4]
                cmp     [r10+rdx*4], eax
                jz      loc_1409F8EF1

loc_1409F8E47:                          ; CODE XREF: sub_1409F8DC0+55↑j
                                        ; sub_1409F8DC0+61↑j
                mov     eax, [r10+r9*4+50h]
                and     [rsp+98h+var_50], 0
                mov     r9d, [r13+4]
                mov     rdx, [r10+28h]
                mov     [rsp+98h+arg_0], eax
                lea     rax, [r15+7]
                add     rax, rbx
                imul    r9d, r8d
                mov     r8d, [r13+0]
                imul    r8d, edi
                lea     rcx, [rax+rax*2]
                mov     ecx, [r10+rcx*4]
                lea     rax, [rsp+98h+arg_10]
                add     r9d, [r12+4]
                add     r8d, [r12]
                mov     [rsp+98h+var_60], rax
                lea     rax, [rsp+98h+arg_18]
                mov     [rsp+98h+var_68], rax
                mov     eax, [rsp+98h+arg_0]
                mov     [rsp+98h+var_70], eax
                mov     [rsp+98h+var_78], ecx
                mov     [rsp+98h+arg_8], ecx
                movzx   ecx, r14w
                call    sub_1405C4834
                mov     r10, cs:qword_140CDAFD8
                test    eax, eax
                js      short loc_1409F8EF1
                lea     rax, [rbp+7]
                mov     [r10+rsi*4+58h], r14w
                add     rax, rbx
                lea     rcx, [rax+rax*2]
                mov     eax, [rsp+98h+arg_8]
                mov     [r10+rcx*4], eax
                mov     eax, [rsp+98h+arg_0]
                mov     [r10+rsi*4+50h], eax

loc_1409F8EF1:                          ; CODE XREF: sub_1409F8DC0+81↑j
                                        ; sub_1409F8DC0+107↑j
                mov     eax, [r10+4]
                mov     r8d, r15d
                dec     eax
                cmp     r15d, eax
                jb      loc_1409F8DF2

loc_1409F8F03:                          ; CODE XREF: sub_1409F8DC0+2C↑j
                inc     edi
                add     rbx, 19h
                cmp     edi, 50h ; 'P'
                jb      loc_1409F8DE4
                mov     edi, [r10+4]
                xor     ebx, ebx
                mov     ebp, [r10+10h]
                dec     edi
                mov     r14d, [r10+0Ch]
                xor     esi, esi
                lea     r15d, [rbx+20h]

loc_1409F8F28:                          ; CODE XREF: sub_1409F8DC0+1E7↓j
                and     [rsp+98h+var_50], 0
                lea     rax, [rsp+98h+arg_0]
                mov     r9d, [r13+4]
                mov     ecx, r15d
                mov     r8d, [r13+0]
                mov     rdx, [r10+28h]
                mov     [rsp+98h+var_60], rax
                lea     rax, [rsp+98h+arg_8]
                mov     [rsp+98h+var_68], rax
                imul    r9d, edi
                imul    r8d, ebx
                mov     [rsp+98h+var_70], r14d
                mov     [rsp+98h+var_78], ebp
                add     r9d, [r12+4]
                add     r8d, [r12]
                call    sub_1405C4834
                mov     r10, cs:qword_140CDAFD8
                test    eax, eax
                js      short loc_1409F8F9E
                mov     ecx, edi
                add     rcx, rsi
                lea     rdx, [rcx+rcx*2]
                lea     rax, [rcx+rcx*2]
                mov     [r10+rdx*4+58h], r15w
                mov     [r10+rax*4+54h], ebp
                mov     [r10+rdx*4+50h], r14d

loc_1409F8F9E:                          ; CODE XREF: sub_1409F8DC0+1BF↑j
                inc     ebx
                add     rsi, 19h
                cmp     ebx, 50h ; 'P'
                jb      loc_1409F8F28
                and     dword ptr [r10+44h], 0
                mov     eax, [r10+4]
                dec     eax
                mov     [r10+48h], eax
                add     rsp, 58h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8DC0   endp

algn_1409F8FCE:                         ; DATA XREF: .pdata:000000014012C078↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1409F8FE0   proc near               ; DATA XREF: .pdata:000000014012C084↑o
                                        ; .data:0000000140C03458↓o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 20h
                mov     edi, r8d
                mov     esi, edx
                mov     ebp, ecx
                call    sub_14039C2D8
                mov     rax, cs:qword_140CDAFD8
                xor     ebx, ebx
                test    rax, rax
                jnz     short loc_1409F9015
                mov     ebx, 0C0000001h
                jmp     short loc_1409F9060
; ---------------------------------------------------------------------------

loc_1409F9015:                          ; CODE XREF: sub_1409F8FE0+2C↑j
                cmp     ebp, 50h ; 'P'
                jnb     short loc_1409F905B
                cmp     esi, [rax+4]
                jnb     short loc_1409F905B
                cmp     edi, 64h ; 'd'
                ja      short loc_1409F905B
                cmp     [rax+44h], ebp
                jnz     short loc_1409F9033
                cmp     [rax+48h], esi
                jnz     short loc_1409F9033
                cmp     [rax+4Ch], edi
                jz      short loc_1409F9060

loc_1409F9033:                          ; CODE XREF: sub_1409F8FE0+47↑j
                                        ; sub_1409F8FE0+4C↑j
                cmp     [rax+4Ch], ebx
                jz      short loc_1409F9047
                mov     [rax+4Ch], ebx
                call    sub_1409F8C1C
                mov     rax, cs:qword_140CDAFD8

loc_1409F9047:                          ; CODE XREF: sub_1409F8FE0+56↑j
                mov     [rax+44h], ebp
                mov     [rax+48h], esi
                mov     [rax+4Ch], edi
                test    edi, edi
                jz      short loc_1409F9060
                call    sub_1409F8C1C
                jmp     short loc_1409F9060
; ---------------------------------------------------------------------------

loc_1409F905B:                          ; CODE XREF: sub_1409F8FE0+38↑j
                                        ; sub_1409F8FE0+3D↑j ...
                mov     ebx, 0C000000Dh

loc_1409F9060:                          ; CODE XREF: sub_1409F8FE0+33↑j
                                        ; sub_1409F8FE0+51↑j ...
                call    sub_14039C288
                mov     rbp, [rsp+28h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F8FE0   endp

byte_1409F907D  db 13h dup(0CCh)        ; DATA XREF: .pdata:000000014012C084↑o

; =============== S U B R O U T I N E =======================================


sub_1409F9090   proc near               ; DATA XREF: .pdata:000000014012C090↑o
                                        ; .data:0000000140C03430↓o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rdi, rdx
                mov     rsi, rcx
                call    sub_14039C2D8
                mov     rax, cs:qword_140CDAFD8
                xor     ebx, ebx
                test    rax, rax
                jnz     short loc_1409F90BF
                mov     ebx, 0C0000001h
                jmp     short loc_1409F90D3
; ---------------------------------------------------------------------------

loc_1409F90BF:                          ; CODE XREF: sub_1409F9090+26↑j
                test    rsi, rsi
                jz      short loc_1409F90C9
                mov     ecx, [rsi]
                mov     [rax+0Ch], ecx

loc_1409F90C9:                          ; CODE XREF: sub_1409F9090+32↑j
                test    rdi, rdi
                jz      short loc_1409F90D3
                mov     ecx, [rdi]
                mov     [rax+10h], ecx

loc_1409F90D3:                          ; CODE XREF: sub_1409F9090+2D↑j
                                        ; sub_1409F9090+3C↑j
                call    sub_14039C288
                mov     rsi, [rsp+28h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F9090   endp

byte_1409F90EB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C090↑o

; =============== S U B R O U T I N E =======================================


sub_1409F90F4   proc near               ; CODE XREF: sub_1409F864C:loc_1409F8668↑p
                                        ; DATA XREF: .pdata:000000014012C09C↑o

var_18          = dword ptr -18h
arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 30h
                mov     rbx, cs:qword_140C13460
                lea     rdi, qword_140C13460
                jmp     short loc_1409F912D
; ---------------------------------------------------------------------------

loc_1409F910E:                          ; CODE XREF: sub_1409F90F4+3C↓j
                mov     r9, [rbx+18h]
                lea     r8, [rbx-8]
                mov     edx, 10000h
                mov     [rsp+38h+var_18], 4B424742h
                xor     ecx, ecx
                call    PoSetHiberRange
                mov     rbx, [rbx]

loc_1409F912D:                          ; CODE XREF: sub_1409F90F4+18↑j
                cmp     rbx, rdi
                jnz     short loc_1409F910E
                mov     rbx, [rsp+38h+arg_0]
                xor     eax, eax
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F90F4   endp

byte_1409F9140  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C09C↑o

; =============== S U B R O U T I N E =======================================


sub_1409F9148   proc near               ; CODE XREF: sub_1409F49E8+324F↑p
                                        ; DATA XREF: .pdata:000000014012C0A8↑o

var_18          = qword ptr -18h

                push    rbx
                sub     rsp, 30h
                cmp     cs:byte_140CDAFE1, 0
                jz      short loc_1409F9198
                xor     edx, edx
                lea     rcx, unk_140CF3000
                call    KeInitializeTimerEx
                lea     rbx, unk_140CF2F80
                xor     r8d, r8d
                mov     rcx, rbx
                lea     rdx, sub_1409F64C0
                call    KeInitializeDpc
                xor     r9d, r9d
                mov     [rsp+38h+var_18], rbx
                xor     edx, edx
                lea     rcx, unk_140CF3000
                lea     r8d, [r9+1Eh]
                call    KeSetCoalescableTimer

loc_1409F9198:                          ; CODE XREF: sub_1409F9148+D↑j
                add     rsp, 30h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F9148   endp

byte_1409F919F  db 11h dup(0CCh)        ; DATA XREF: .pdata:000000014012C0A8↑o

; =============== S U B R O U T I N E =======================================


sub_1409F91B0   proc near               ; DATA XREF: .pdata:000000014012C0B4↑o
                                        ; sub_1409F6784+1A8B↑o

var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  8

                mov     r11, rsp
                mov     [r11+8], rbx
                push    rdi
                sub     rsp, 30h
                mov     rax, cs:off_140C007F0
                lea     rcx, [r11-10h]
                and     qword ptr [r11-18h], 0
                and     qword ptr [r11-10h], 0
                call    sub_1404079D0
                lea     r8, [rsp+38h+var_18]
                mov     edx, 3E8h
                mov     rcx, rax
                call    sub_140206038
                mov     edi, eax
                test    eax, eax
                js      loc_1409F9274
                mov     rax, [rsp+38h+var_18]
                xor     edx, edx
                div     [rsp+38h+var_10]
                mov     rbx, rax
                call    sub_14039C2D8
                cmp     rbx, cs:qword_140C13430
                jb      short loc_1409F926F
                cmp     cs:byte_140CF4F10, 0
                jz      short loc_1409F926A
                call    sub_1409F54EC
                xor     edx, edx
                lea     r8, aBgfxSecondaryL_0 ; "BGFX Secondary Logo Bitmap Display Time"...
                mov     r9d, ebx
                lea     ecx, [rdx+65h]
                call    DbgPrintEx
                cmp     cs:qword_140C133D8, 0
                jz      short loc_1409F925B
                mov     ecx, dword ptr cs:qword_140C13510+4
                call    sub_1405C46D4
                mov     rcx, cs:qword_140C133D8
                lea     rdx, qword_140C133EC
                call    sub_1409F9704
                mov     edi, eax

loc_1409F925B:                          ; CODE XREF: sub_1409F91B0+89↑j
                test    edi, edi
                jns     short loc_1409F926A
                mov     ecx, dword ptr cs:qword_140C13510+4
                call    sub_1405C46D4

loc_1409F926A:                          ; CODE XREF: sub_1409F91B0+66↑j
                                        ; sub_1409F91B0+AD↑j
                call    sub_1409F54CC

loc_1409F926F:                          ; CODE XREF: sub_1409F91B0+5D↑j
                call    sub_14039C288

loc_1409F9274:                          ; CODE XREF: sub_1409F91B0+3C↑j
                mov     rbx, [rsp+38h+arg_0]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F91B0   endp

byte_1409F9280  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C0B4↑o

; =============== S U B R O U T I N E =======================================


sub_1409F9288   proc near               ; CODE XREF: sub_1409F6370:loc_1409F7FFB↑p
                                        ; DATA XREF: .pdata:000000014012C0C0↑o

var_38          = qword ptr -38h
var_28          = qword ptr -28h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rbp
                push    rsi
                push    rdi
                push    r14
                sub     rsp, 40h
                and     qword ptr [rax+8], 0
                lea     rcx, [rax+8]
                call    sub_14039BE60
                mov     rdi, rax
                mov     rax, 0F83E0F83E0F83E1h
                imul    [rsp+58h+arg_0]
                mov     rbx, rdx
                sar     rbx, 1
                mov     rax, rbx
                shr     rax, 3Fh
                add     rbx, rax
                mov     rax, 0A3D70A3D70A3D70Bh
                lea     rcx, [rbx+rbx*4]
                add     rcx, rcx
                imul    rcx
                add     rdx, rcx
                sar     rdx, 6
                mov     rax, rdx
                shr     rax, 3Fh
                add     rdx, rax
                mov     rax, cs:qword_140CDAFE8
                lea     r8, [rax+rbx]
                lea     rcx, [rdi+rdx]
                cmp     rcx, r8
                jl      loc_1409F93D3
                movzx   ecx, cs:word_140C10E68
                mov     esi, 1
                mov     ebp, 0E0CBh
                lea     r14d, [rsi+1]
                cmp     cx, bp
                jz      short loc_1409F933C
                sub     rax, rdi
                sub     rax, rdx
                cqo
                idiv    rbx
                cmp     rax, r14
                jl      short loc_1409F933C
                add     cx, si
                mov     cs:word_140C10E68, cx

loc_1409F933C:                          ; CODE XREF: sub_1409F9288+98↑j
                                        ; sub_1409F9288+A8↑j
                mov     eax, 1FAEh
                add     eax, ecx
                cmp     ax, 79h ; 'y'
                ja      short loc_1409F938D
                xor     r8d, r8d
                mov     edx, esi
                mov     ecx, esi
                call    sub_1409F47D8
                movzx   edx, cs:word_140C10E68
                xor     r9d, r9d
                mov     rcx, cs:qword_140C13450
                xor     r8d, r8d
                and     [rsp+58h+var_28], 0
                and     [rsp+58h+var_38], 0
                call    sub_1403ACC88
                xor     r8d, r8d
                mov     edx, esi
                xor     ecx, ecx
                call    sub_1409F47D8
                movzx   ecx, cs:word_140C10E68

loc_1409F938D:                          ; CODE XREF: sub_1409F9288+BF↑j
                mov     eax, 0E04Ah
                cmp     cx, bp
                jz      short loc_1409F939A
                lea     eax, [rsi+rcx]

loc_1409F939A:                          ; CODE XREF: sub_1409F9288+10D↑j
                mov     cs:word_140C10E68, ax
                xor     ecx, ecx
                mov     rax, rbx
                mov     cs:qword_140CDAFE8, rdi
                cqo
                idiv    r14
                mov     rbx, rax
                call    sub_14039BE60
                sub     rax, rdi
                cmp     rax, rbx
                jle     short loc_1409F93D3
                xor     ecx, ecx
                call    sub_14039BE60
                sub     rax, rbx
                mov     cs:qword_140CDAFE8, rax

loc_1409F93D3:                          ; CODE XREF: sub_1409F9288+7A↑j
                                        ; sub_1409F9288+138↑j
                mov     rbx, [rsp+58h+arg_8]
                mov     rbp, [rsp+58h+arg_10]
                add     rsp, 40h
                pop     r14
                pop     rdi
                pop     rsi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F9288   endp

algn_1409F93E7:                         ; DATA XREF: .pdata:000000014012C0C0↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1409F93F0   proc near               ; CODE XREF: sub_1403ACC88+FB1BF↑p
                                        ; sub_1409F9784+1BC↓p
                                        ; DATA XREF: ...

var_78          = dword ptr -78h
var_70          = qword ptr -70h
var_68          = dword ptr -68h
var_60          = qword ptr -60h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+18h], rbx
                mov     [rax+20h], r9
                mov     [rax+10h], rdx
                mov     [rax+8], rcx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 60h
                and     dword ptr [rax-58h], 0
                xor     ebx, ebx
                xor     edi, edi
                mov     [rax-70h], rbx
                mov     rsi, r9
                mov     r15, r8
                mov     rbp, rdx
                mov     r14, rcx
                test    r9, r9
                jz      loc_1409F95F1
                mov     r11d, [rcx]
                test    r11d, r11d
                jz      loc_1409F95F1
                mov     r8d, [rdx]
                test    r8d, r8d
                jz      loc_1409F95F1
                mov     r10d, [rcx+4]
                test    r10d, r10d
                jz      loc_1409F95F1
                mov     r9d, [rdx+4]
                test    r9d, r9d
                jz      loc_1409F95F1
                lea     edx, [rbx+20h]
                cmp     [rcx+8], edx
                jnz     loc_1409F95F1
                cmp     [rbp+8], edx
                jnz     loc_1409F95F1
                mov     r12d, [r15]
                lea     eax, [r12+r9]
                cmp     r10d, eax
                jb      loc_1409F95F1
                mov     ecx, [r15+4]
                lea     eax, [rcx+r8]
                cmp     r11d, eax
                jb      loc_1409F95F1
                mov     rbx, [rsi]
                test    rbx, rbx
                jnz     short loc_1409F94D8
                mov     dword ptr [rsp+98h+var_60+4], r8d
                lea     rcx, [rsp+98h+var_60]
                lea     r8, [rsp+98h+var_70]
                mov     dword ptr [rsp+98h+var_60], r9d
                call    sub_1409F52C0
                mov     rbx, [rsp+98h+var_70]
                mov     edi, eax
                test    eax, eax
                js      loc_1409F95FA
                mov     r10d, [r14+4]
                mov     ecx, [r15+4]
                mov     r12d, [r15]
                jmp     short loc_1409F94EB
; ---------------------------------------------------------------------------

loc_1409F94D8:                          ; CODE XREF: sub_1409F93F0+B1↑j
                cmp     [rbx+4], r9d
                jnz     loc_1409F95EA
                cmp     [rbx], r8d
                jnz     loc_1409F95EA

loc_1409F94EB:                          ; CODE XREF: sub_1409F93F0+E6↑j
                mov     r9d, [rbx]
                mov     r15d, [rbx+8]
                mov     r8, [rbx+18h]
                mov     r13, [rbp+18h]
                shr     r15d, 3
                imul    ecx, r10d
                mov     [rsp+98h+var_48], r8
                mov     dword ptr [rsp+98h+var_70], r15d
                mov     [rsp+98h+var_78], r9d
                lea     edx, [r12+rcx]
                imul    edx, r15d
                add     rdx, [r14+18h]
                mov     [rsp+98h+var_50], rdx
                test    r9d, r9d
                jz      loc_1409F95F6
                mov     ecx, [rbx+4]
                mov     eax, ecx

loc_1409F9530:                          ; CODE XREF: sub_1409F93F0+1EA↓j
                and     [rsp+98h+var_68], 0
                mov     r12, r13
                test    ecx, ecx
                jz      short loc_1409F95A5
                mov     r14d, [rsp+98h+var_68]
                mov     rbp, rdx
                mov     eax, r15d
                mov     [rsp+98h+var_60], rax
                mov     rax, r8
                mov     r15, [rsp+98h+var_60]
                sub     rax, r13
                sub     rbp, r13
                mov     rsi, rax

loc_1409F955D:                          ; CODE XREF: sub_1409F93F0+18F↓j
                mov     r8b, [r12+3]
                mov     edx, [r12]
                mov     ecx, [r12+rbp]
                call    sub_1403AD418
                mov     [rsi+r12], eax
                inc     r14d
                mov     eax, [rbx+4]
                add     r12, r15
                cmp     r14d, eax
                jb      short loc_1409F955D
                mov     r14, [rsp+98h+arg_0]
                mov     rbp, [rsp+98h+arg_8]
                mov     r15d, dword ptr [rsp+98h+var_70]
                mov     rdx, [rsp+98h+var_50]
                mov     r8, [rsp+98h+var_48]
                mov     r9d, [rsp+98h+var_78]

loc_1409F95A5:                          ; CODE XREF: sub_1409F93F0+14A↑j
                mov     ecx, eax
                mov     eax, [rbp+4]
                imul    eax, r15d
                add     r13, rax
                mov     eax, [r14+4]
                imul    eax, r15d
                add     rdx, rax
                mov     eax, ecx
                imul    eax, r15d
                mov     [rsp+98h+var_50], rdx
                add     r8, rax
                mov     eax, ecx
                add     r9d, 0FFFFFFFFh
                mov     [rsp+98h+var_48], r8
                mov     [rsp+98h+var_78], r9d
                jnz     loc_1409F9530
                mov     rsi, [rsp+98h+arg_18]
                jmp     short loc_1409F95F6
; ---------------------------------------------------------------------------

loc_1409F95EA:                          ; CODE XREF: sub_1409F93F0+EC↑j
                                        ; sub_1409F93F0+F5↑j
                mov     edi, 0C000009Ah
                jmp     short loc_1409F95FA
; ---------------------------------------------------------------------------

loc_1409F95F1:                          ; CODE XREF: sub_1409F93F0+3D↑j
                                        ; sub_1409F93F0+49↑j ...
                mov     edi, 0C000000Dh

loc_1409F95F6:                          ; CODE XREF: sub_1409F93F0+135↑j
                                        ; sub_1409F93F0+1F8↑j
                test    edi, edi
                jns     short loc_1409F960F

loc_1409F95FA:                          ; CODE XREF: sub_1409F93F0+D5↑j
                                        ; sub_1409F93F0+1FF↑j
                cmp     qword ptr [rsi], 0
                jnz     short loc_1409F9618
                test    rbx, rbx
                jz      short loc_1409F960F
                mov     rcx, rbx
                call    sub_1409F4290
                xor     ebx, ebx

loc_1409F960F:                          ; CODE XREF: sub_1409F93F0+208↑j
                                        ; sub_1409F93F0+213↑j
                cmp     qword ptr [rsi], 0
                jnz     short loc_1409F9618
                mov     [rsi], rbx

loc_1409F9618:                          ; CODE XREF: sub_1409F93F0+20E↑j
                                        ; sub_1409F93F0+223↑j
                mov     rbx, [rsp+98h+arg_10]
                mov     eax, edi
                add     rsp, 60h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F93F0   endp

byte_1409F9633  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C0CC↑o

; =============== S U B R O U T I N E =======================================


sub_1409F963C   proc near               ; CODE XREF: sub_1403ACF48+FB05D↑p
                                        ; DATA XREF: .pdata:000000014012C0D8↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 20h
                mov     eax, [rcx]
                mov     r14, rcx
                mov     r11d, [rcx+4]
                mov     r12, rdx
                mov     ebp, [rcx+8]
                mov     r10d, [rdx+4]
                mov     ecx, r10d
                mov     ebx, [rdx]
                mov     edi, [r9+4]
                mov     esi, [r8+4]
                shr     ebp, 3
                cmp     ebx, eax
                cmovnb  ebx, eax
                cmp     r10d, r11d
                cmovnb  ecx, r11d
                imul    edi, r10d
                imul    esi, r11d
                imul    ecx, ebp
                add     edi, [r9]
                add     esi, [r8]
                imul    edi, ebp
                imul    esi, ebp
                add     rdi, [rdx+18h]
                add     rsi, [r14+18h]
                test    ebx, ebx
                jz      short loc_1409F96D6
                mov     r15d, ecx

loc_1409F96AE:                          ; CODE XREF: sub_1409F963C+98↓j
                mov     r8, r15
                mov     rdx, rdi
                mov     rcx, rsi
                call    memmove
                mov     eax, [r12+4]
                imul    eax, ebp
                add     rdi, rax
                mov     eax, ebp
                imul    eax, [r14+4]
                add     rsi, rax
                add     ebx, 0FFFFFFFFh
                jnz     short loc_1409F96AE

loc_1409F96D6:                          ; CODE XREF: sub_1409F963C+6D↑j
                mov     rcx, r14
                call    sub_14036477C
                mov     rbx, [rsp+38h+arg_0]
                mov     rbp, [rsp+38h+arg_8]
                mov     rsi, [rsp+38h+arg_10]
                mov     rdi, [rsp+38h+arg_18]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r12
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F963C   endp

byte_1409F96FE  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C0D8↑o

; =============== S U B R O U T I N E =======================================


sub_1409F9704   proc near               ; CODE XREF: sub_1409F6784+1A5F↑p
                                        ; sub_1409F91B0+A4↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_18          = qword ptr  20h

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                and     [rsp+28h+arg_18], 0
                mov     rdi, rdx
                lea     rdx, [rsp+28h+arg_18]
                call    sub_1409F3880
                mov     ebx, eax
                test    eax, eax
                js      short loc_1409F9740
                mov     rcx, [rsp+28h+arg_18]
                mov     rdx, rdi
                call    sub_14039BE78
                mov     rcx, [rsp+28h+arg_18]
                mov     ebx, eax
                call    sub_1409F4290

loc_1409F9740:                          ; CODE XREF: sub_1409F9704+21↑j
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F9704   endp

byte_1409F974E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C0E4↑o

; =============== S U B R O U T I N E =======================================


sub_1409F9754   proc near               ; CODE XREF: sub_1409F9784+5D↓p
                                        ; sub_1409F9784+1CE↓p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                test    rcx, rcx
                jz      short loc_1409F9772
                mov     eax, [rcx+40h]
                test    al, 1
                jz      short loc_1409F9772
                mov     rdx, rcx
                mov     rcx, [rcx+18h]
                call    sub_14039BE78
                jmp     short loc_1409F9777
; ---------------------------------------------------------------------------

loc_1409F9772:                          ; CODE XREF: sub_1409F9754+7↑j
                                        ; sub_1409F9754+E↑j
                mov     eax, 0C000000Dh

loc_1409F9777:                          ; CODE XREF: sub_1409F9754+1C↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F9754   endp

byte_1409F977D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012C0F0↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1409F9784   proc near               ; CODE XREF: sub_1409F8570+4E↑p
                                        ; DATA XREF: .pdata:000000014012C0FC↑o

var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_30          = qword ptr -30h
var_20          = qword ptr -20h
var_10          = qword ptr -10h
var_8           = dword ptr -8
arg_0           = qword ptr  40h
arg_8           = qword ptr  48h
arg_10          = dword ptr  50h
arg_18          = qword ptr  58h
arg_20          = qword ptr  60h

                mov     [rsp-38h+arg_8], rbx
                mov     [rsp-38h+arg_18], r9
                mov     [rsp-38h+arg_10], r8d
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                xor     eax, eax
                mov     rdi, rcx
                xor     ecx, ecx
                mov     [rbp+var_10], rax
                mov     [rbp+arg_10], ecx
                mov     r14, rdx
                mov     [rbp+arg_18], rcx
                mov     [rbp+var_8], eax
                mov     [rbp+arg_0], rcx
                mov     [rbp+arg_20], rcx
                test    rdi, rdi
                jz      loc_1409F9994
                mov     eax, [rdi+40h]
                test    al, 1
                jz      loc_1409F9994
                test    rdx, rdx
                jnz     short loc_1409F97ED
                mov     rcx, rdi
                call    sub_1409F9754
                mov     ebx, eax
                jmp     loc_1409F9990
; ---------------------------------------------------------------------------

loc_1409F97ED:                          ; CODE XREF: sub_1409F9784+58↑j
                cmp     [rdi+44h], ecx
                jz      short loc_1409F97FC
                mov     ebx, 0C000000Dh
                jmp     loc_1409F9990
; ---------------------------------------------------------------------------

loc_1409F97FC:                          ; CODE XREF: sub_1409F9784+6C↑j
                or      rsi, 0FFFFFFFFFFFFFFFFh

loc_1409F9800:                          ; CODE XREF: sub_1409F9784+83↓j
                inc     rsi
                cmp     [rdx+rsi*2], cx
                jnz     short loc_1409F9800
                mov     r12d, ecx
                mov     r15d, ecx
                test    esi, esi
                jz      short loc_1409F9850
                lea     rax, [rdi+28h]
                mov     r13, rdx

loc_1409F981A:                          ; CODE XREF: sub_1409F9784+CA↓j
                movzx   edx, word ptr [r13+0]
                lea     r8, [rbp+arg_10]
                mov     [rsp+60h+var_40], rcx
                mov     rcx, rax
                call    sub_1405C4A10
                xor     ecx, ecx
                mov     ebx, eax
                test    eax, eax
                js      loc_1409F9990
                add     r12d, [rbp+arg_10]
                lea     rax, [rdi+28h]
                inc     r15d
                add     r13, 2
                cmp     r15d, esi
                jb      short loc_1409F981A

loc_1409F9850:                          ; CODE XREF: sub_1409F9784+8D↑j
                lea     rdx, [rbp+arg_0]
                lea     rcx, [rdi+28h]
                call    sub_14039C76C
                mov     ebx, eax
                test    eax, eax
                js      loc_1409F9990
                mov     eax, [rdi+0Ch]
                lea     r8, [rbp+arg_20]
                mov     ecx, dword ptr [rbp+arg_0+4]
                mov     edx, 20h ; ' '
                cmp     ecx, eax
                mov     [rbp+var_8], r12d
                cmova   ecx, eax
                mov     eax, [rdi+8]
                cmp     r12d, eax
                mov     dword ptr [rbp+var_10+4], ecx
                lea     rcx, [rbp+var_10]
                cmova   r12d, eax
                mov     dword ptr [rbp+var_10], r12d
                call    sub_1409F52C0
                mov     r15, [rbp+arg_20]
                mov     ebx, eax
                test    eax, eax
                js      loc_1409F9983
                mov     edx, [rdi+28h]
                mov     rcx, r15
                call    sub_14039C9A0
                xor     ecx, ecx
                xor     eax, eax
                xor     r13d, r13d
                mov     [rbp+arg_18], rcx
                test    esi, esi
                jz      short loc_1409F991C

loc_1409F98C1:                          ; CODE XREF: sub_1409F9784+196↓j
                and     [rsp+60h+var_20], 0
                lea     rdx, [rbp+arg_10]
                movzx   r8d, word ptr [r14]
                mov     r9d, ecx
                mov     [rsp+60h+var_30], rdx
                mov     rcx, r15
                and     [rsp+60h+var_38], 0
                lea     rdx, [rdi+28h]
                mov     dword ptr [rsp+60h+var_40], eax
                call    sub_1403ACF48
                mov     ebx, eax
                cmp     eax, 80000005h
                jz      short loc_1409F991C
                test    eax, eax
                js      loc_1409F9983
                mov     ecx, dword ptr [rbp+arg_18]
                add     ecx, [rbp+arg_10]
                mov     dword ptr [rbp+arg_18], ecx
                cmp     ecx, r12d
                ja      short loc_1409F991C
                inc     r13d
                add     r14, 2
                cmp     r13d, esi
                jnb     short loc_1409F991C
                mov     eax, dword ptr [rbp+arg_18+4]
                jmp     short loc_1409F98C1
; ---------------------------------------------------------------------------

loc_1409F991C:                          ; CODE XREF: sub_1409F9784+13B↑j
                                        ; sub_1409F9784+16F↑j ...
                lea     r8, [rbp+arg_18]
                mov     rcx, rdi
                lea     rdx, [rbp+var_10]
                call    sub_1409F99B8
                mov     rcx, [rdi+18h]
                lea     r9, [rbp+arg_0]
                and     [rbp+arg_0], 0
                lea     r8, [rbp+arg_18]
                mov     rdx, r15
                call    sub_1409F93F0
                mov     rsi, [rbp+arg_0]
                mov     ebx, eax
                test    eax, eax
                js      short loc_1409F9976
                mov     rcx, rdi
                call    sub_1409F9754
                mov     ebx, eax
                test    eax, eax
                js      short loc_1409F9976
                mov     eax, [rdi+4]
                lea     rdx, [rbp+arg_18]
                mov     dword ptr [rbp+arg_18+4], eax
                mov     rcx, rsi
                mov     eax, [rdi]
                add     dword ptr [rbp+arg_18], eax
                call    sub_14039BE78
                mov     ebx, eax

loc_1409F9976:                          ; CODE XREF: sub_1409F9784+1C9↑j
                                        ; sub_1409F9784+1D7↑j
                test    rsi, rsi
                jz      short loc_1409F9983
                mov     rcx, rsi
                call    sub_1409F4290

loc_1409F9983:                          ; CODE XREF: sub_1409F9784+11D↑j
                                        ; sub_1409F9784+173↑j ...
                test    r15, r15
                jz      short loc_1409F9990
                mov     rcx, r15
                call    sub_1409F4290

loc_1409F9990:                          ; CODE XREF: sub_1409F9784+64↑j
                                        ; sub_1409F9784+73↑j ...
                mov     eax, ebx
                jmp     short loc_1409F9999
; ---------------------------------------------------------------------------

loc_1409F9994:                          ; CODE XREF: sub_1409F9784+44↑j
                                        ; sub_1409F9784+4F↑j
                mov     eax, 0C000000Dh

loc_1409F9999:                          ; CODE XREF: sub_1409F9784+20E↑j
                mov     rbx, [rsp+60h+arg_8]
                add     rsp, 60h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409F9784   endp

algn_1409F99B2:                         ; DATA XREF: .pdata:000000014012C0FC↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1409F99B8   proc near               ; CODE XREF: sub_1403ACC88+FB1AC↑p
                                        ; sub_1409F9784+1A3↑p
                                        ; DATA XREF: ...
                and     dword ptr [r8+4], 0
                mov     r9, rcx
                mov     r10d, [rcx+40h]
                test    r10b, 4
                jz      short loc_1409F99CF
                mov     ecx, [rcx+44h]
                jmp     short loc_1409F99E5
; ---------------------------------------------------------------------------

loc_1409F99CF:                          ; CODE XREF: sub_1409F99B8+10↑j
                mov     ecx, [rcx+8]
                sub     ecx, [rdx]
                test    r10b, 8
                jz      short loc_1409F99E3
                mov     [r8], ecx
                sub     ecx, [r9+44h]
                jmp     short loc_1409F99E5
; ---------------------------------------------------------------------------

loc_1409F99E3:                          ; CODE XREF: sub_1409F99B8+20↑j
                shr     ecx, 1

loc_1409F99E5:                          ; CODE XREF: sub_1409F99B8+15↑j
                                        ; sub_1409F99B8+29↑j
                mov     [r8], ecx
                retn
sub_1409F99B8   endp

; ---------------------------------------------------------------------------
                align 2
algn_1409F99EA:                         ; DATA XREF: .pdata:000000014012C108↑o
                align 20h
                dq 0C0h dup(?)
PAGEBGFX        ends

; Section 16. (virtual address 009FA000)
; Virtual size                  : 000195BA ( 103866.)
; Section size in file          : 00019600 ( 103936.)
; Offset to raw data for section: 0094A400
; Flags 68000020: Text Not pageable Executable Readable
; Alignment     : default
; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
INITKDBG        segment para public 'CODE' use64
                assume cs:INITKDBG
                ;org 1409FA000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                db 10h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0BE0h

sub_1409FA010   proc near               ; CODE XREF: sub_1403DB980+F↑p
                                        ; sub_1403E9EB0+11↑p ...

var_CE0         = dword ptr -0CE0h
var_CC0         = qword ptr -0CC0h
var_CB8         = qword ptr -0CB8h
var_CB0         = qword ptr -0CB0h
var_CA8         = qword ptr -0CA8h
var_C90         = qword ptr -0C90h
var_C88         = qword ptr -0C88h
var_C80         = qword ptr -0C80h
var_C78         = dword ptr -0C78h
var_C70         = qword ptr -0C70h
var_C68         = qword ptr -0C68h
var_C60         = qword ptr -0C60h
var_C58         = dword ptr -0C58h
var_C50         = qword ptr -0C50h
var_C48         = qword ptr -0C48h
var_C40         = qword ptr -0C40h
var_C38         = dword ptr -0C38h
var_C30         = qword ptr -0C30h
var_C28         = dword ptr -0C28h
var_C20         = qword ptr -0C20h
var_C18         = dword ptr -0C18h
var_C10         = qword ptr -0C10h
var_C08         = qword ptr -0C08h
var_C00         = byte ptr -0C00h
var_BF8         = qword ptr -0BF8h
var_BF0         = dword ptr -0BF0h
var_BEC         = byte ptr -0BECh
var_BE8         = dword ptr -0BE8h
var_BE4         = dword ptr -0BE4h
var_BE0         = dword ptr -0BE0h
var_BDC         = dword ptr -0BDCh
var_BD8         = qword ptr -0BD8h
var_BD0         = qword ptr -0BD0h
var_BC8         = dword ptr -0BC8h
var_BC4         = dword ptr -0BC4h
var_BC0         = qword ptr -0BC0h
var_BB8         = qword ptr -0BB8h
var_BB0         = qword ptr -0BB0h
var_BA8         = qword ptr -0BA8h
var_BA0         = dword ptr -0BA0h
var_B98         = qword ptr -0B98h
var_B90         = byte ptr -0B90h
var_B8F         = byte ptr -0B8Fh
var_B8E         = byte ptr -0B8Eh
var_B8D         = byte ptr -0B8Dh
var_B8C         = byte ptr -0B8Ch
var_B8B         = byte ptr -0B8Bh
var_B8A         = byte ptr -0B8Ah
var_B89         = byte ptr -0B89h
var_B88         = byte ptr -0B88h
var_B87         = byte ptr -0B87h
var_B86         = byte ptr -0B86h
var_B85         = byte ptr -0B85h
var_B84         = byte ptr -0B84h
var_B83         = byte ptr -0B83h
var_B82         = byte ptr -0B82h
var_B81         = byte ptr -0B81h
var_B80         = byte ptr -0B80h
var_B7F         = byte ptr -0B7Fh
var_B7E         = byte ptr -0B7Eh
var_B7D         = byte ptr -0B7Dh
var_B7C         = byte ptr -0B7Ch
var_B7B         = byte ptr -0B7Bh
var_B7A         = byte ptr -0B7Ah
var_B79         = byte ptr -0B79h
var_B78         = byte ptr -0B78h
var_B77         = byte ptr -0B77h
var_B76         = byte ptr -0B76h
var_B75         = byte ptr -0B75h
var_B74         = byte ptr -0B74h
var_B73         = byte ptr -0B73h
var_B72         = byte ptr -0B72h
var_B71         = byte ptr -0B71h
var_B70         = byte ptr -0B70h
var_B6F         = byte ptr -0B6Fh
var_B6E         = byte ptr -0B6Eh
var_B6D         = byte ptr -0B6Dh
var_B6C         = byte ptr -0B6Ch
var_B6B         = byte ptr -0B6Bh
var_B6A         = byte ptr -0B6Ah
var_B69         = byte ptr -0B69h
var_B68         = byte ptr -0B68h
var_B67         = byte ptr -0B67h
var_B66         = byte ptr -0B66h
var_B65         = byte ptr -0B65h
var_B64         = byte ptr -0B64h
var_B63         = byte ptr -0B63h
var_B62         = byte ptr -0B62h
var_B61         = byte ptr -0B61h
var_B60         = byte ptr -0B60h
var_B5F         = byte ptr -0B5Fh
var_B5E         = byte ptr -0B5Eh
var_B5D         = byte ptr -0B5Dh
var_B5C         = byte ptr -0B5Ch
var_B5B         = byte ptr -0B5Bh
var_B5A         = byte ptr -0B5Ah
var_B59         = byte ptr -0B59h
var_B58         = byte ptr -0B58h
var_B57         = byte ptr -0B57h
var_B56         = byte ptr -0B56h
var_B55         = byte ptr -0B55h
var_B54         = byte ptr -0B54h
var_B53         = byte ptr -0B53h
var_B52         = byte ptr -0B52h
var_B51         = byte ptr -0B51h
var_B50         = qword ptr -0B50h
var_B48         = qword ptr -0B48h
var_B40         = byte ptr -0B40h
var_B3F         = byte ptr -0B3Fh
var_B3E         = byte ptr -0B3Eh
var_B38         = qword ptr -0B38h
var_B30         = qword ptr -0B30h
var_B28         = dword ptr -0B28h
var_B24         = dword ptr -0B24h
var_B20         = dword ptr -0B20h
var_B1C         = dword ptr -0B1Ch
var_B18         = qword ptr -0B18h
var_B10         = qword ptr -0B10h
var_B08         = dword ptr -0B08h
var_B00         = qword ptr -0B00h
var_AF8         = qword ptr -0AF8h
var_AF0         = qword ptr -0AF0h
var_AE8         = qword ptr -0AE8h
var_AE0         = dword ptr -0AE0h
var_AD8         = qword ptr -0AD8h
var_AD0         = dword ptr -0AD0h
var_AC8         = qword ptr -0AC8h
var_AC0         = dword ptr -0AC0h
var_AB8         = qword ptr -0AB8h
var_AB0         = qword ptr -0AB0h
var_AA8         = qword ptr -0AA8h
var_AA0         = qword ptr -0AA0h
var_A98         = qword ptr -0A98h
var_A90         = dword ptr -0A90h
var_A8C         = dword ptr -0A8Ch
var_A88         = dword ptr -0A88h
var_A84         = dword ptr -0A84h
var_A80         = dword ptr -0A80h
var_A7C         = dword ptr -0A7Ch
var_A78         = dword ptr -0A78h
var_A74         = dword ptr -0A74h
var_A70         = dword ptr -0A70h
var_A6C         = dword ptr -0A6Ch
var_A68         = dword ptr -0A68h
var_A64         = dword ptr -0A64h
var_A60         = dword ptr -0A60h
var_A5C         = dword ptr -0A5Ch
var_A58         = qword ptr -0A58h
var_A50         = dword ptr -0A50h
var_A4C         = dword ptr -0A4Ch
var_A48         = dword ptr -0A48h
var_A44         = dword ptr -0A44h
var_A40         = dword ptr -0A40h
var_A3C         = dword ptr -0A3Ch
var_A38         = dword ptr -0A38h
var_A34         = dword ptr -0A34h
var_A30         = dword ptr -0A30h
var_A2C         = dword ptr -0A2Ch
var_A28         = dword ptr -0A28h
var_A24         = dword ptr -0A24h
var_A20         = qword ptr -0A20h
var_A18         = qword ptr -0A18h
var_A10         = qword ptr -0A10h
var_A08         = qword ptr -0A08h
var_A00         = qword ptr -0A00h
var_9F8         = qword ptr -9F8h
var_9F0         = dword ptr -9F0h
var_9EC         = dword ptr -9ECh
var_9E8         = dword ptr -9E8h
var_9E4         = dword ptr -9E4h
var_9E0         = dword ptr -9E0h
var_9DC         = dword ptr -9DCh
var_9D8         = dword ptr -9D8h
var_9D4         = dword ptr -9D4h
var_9D0         = dword ptr -9D0h
var_9CC         = dword ptr -9CCh
var_9C8         = dword ptr -9C8h
var_9C4         = dword ptr -9C4h
var_9C0         = dword ptr -9C0h
var_9BC         = dword ptr -9BCh
var_9B8         = dword ptr -9B8h
var_9B4         = dword ptr -9B4h
var_9B0         = dword ptr -9B0h
var_9AC         = dword ptr -9ACh
var_9A8         = dword ptr -9A8h
var_9A4         = dword ptr -9A4h
var_9A0         = dword ptr -9A0h
var_99C         = dword ptr -99Ch
var_998         = word ptr -998h
var_996         = qword ptr -996h
var_988         = qword ptr -988h
var_980         = qword ptr -980h
var_978         = qword ptr -978h
var_970         = qword ptr -970h
var_968         = qword ptr -968h
var_960         = qword ptr -960h
var_958         = qword ptr -958h
var_950         = qword ptr -950h
var_948         = qword ptr -948h
var_940         = xmmword ptr -940h
var_930         = xmmword ptr -930h
var_920         = byte ptr -920h
var_910         = byte ptr -910h
var_900         = word ptr -900h
var_8FE         = qword ptr -8FEh
var_8F0         = byte ptr -8F0h
var_8E0         = byte ptr -8E0h
var_8D0         = dword ptr -8D0h
var_8C8         = qword ptr -8C8h
var_8C0         = byte ptr -8C0h
var_8B8         = dword ptr -8B8h
var_8B0         = qword ptr -8B0h
var_8A8         = qword ptr -8A8h
var_89C         = dword ptr -89Ch
var_898         = byte ptr -898h
var_888         = dword ptr -888h
var_880         = qword ptr -880h
var_878         = word ptr -878h
var_876         = word ptr -876h
var_870         = qword ptr -870h
var_868         = word ptr -868h
var_866         = word ptr -866h
var_860         = qword ptr -860h
var_858         = qword ptr -858h
var_850         = qword ptr -850h
var_848         = qword ptr -848h
var_840         = qword ptr -840h
var_838         = qword ptr -838h
var_830         = qword ptr -830h
var_828         = qword ptr -828h
var_820         = qword ptr -820h
var_818         = qword ptr -818h
var_810         = qword ptr -810h
var_808         = qword ptr -808h
var_800         = qword ptr -800h
var_7F8         = qword ptr -7F8h
var_7F0         = qword ptr -7F0h
var_7E8         = qword ptr -7E8h
var_7E0         = qword ptr -7E0h
var_7D8         = qword ptr -7D8h
var_7D0         = qword ptr -7D0h
var_7C8         = qword ptr -7C8h
var_7C0         = qword ptr -7C0h
var_7B8         = qword ptr -7B8h
var_7B0         = qword ptr -7B0h
var_7A8         = qword ptr -7A8h
var_7A0         = qword ptr -7A0h
var_798         = qword ptr -798h
var_790         = qword ptr -790h
var_788         = qword ptr -788h
var_780         = qword ptr -780h
var_778         = qword ptr -778h
var_770         = byte ptr -770h
var_760         = byte ptr -760h
var_750         = byte ptr -750h
var_740         = byte ptr -740h
var_730         = dword ptr -730h
var_728         = qword ptr -728h
var_720         = qword ptr -720h
var_718         = qword ptr -718h
var_710         = qword ptr -710h
var_708         = qword ptr -708h
var_700         = word ptr -700h
var_6FE         = word ptr -6FEh
var_6E8         = qword ptr -6E8h
var_6E0         = dword ptr -6E0h
var_6DC         = dword ptr -6DCh
var_6D8         = qword ptr -6D8h
var_6D0         = byte ptr -6D0h
var_6C0         = byte ptr -6C0h
var_690         = qword ptr -690h
var_688         = qword ptr -688h
var_680         = byte ptr -680h
var_678         = byte ptr -678h
var_670         = byte ptr -670h
var_668         = qword ptr -668h
var_660         = qword ptr -660h
var_658         = qword ptr -658h
var_650         = qword ptr -650h
var_648         = qword ptr -648h
var_640         = qword ptr -640h
var_638         = qword ptr -638h
var_630         = qword ptr -630h
var_628         = qword ptr -628h
var_620         = qword ptr -620h
var_618         = qword ptr -618h
var_610         = byte ptr -610h
var_608         = qword ptr -608h
var_600         = qword ptr -600h
var_5F8         = qword ptr -5F8h
var_5F0         = qword ptr -5F0h
var_5E8         = qword ptr -5E8h
var_5E0         = qword ptr -5E0h
var_5D8         = qword ptr -5D8h
var_5D0         = qword ptr -5D0h
var_5C8         = qword ptr -5C8h
var_5C0         = qword ptr -5C0h
var_5B8         = qword ptr -5B8h
var_5B0         = qword ptr -5B0h
var_5A8         = qword ptr -5A8h
var_5A0         = qword ptr -5A0h
var_598         = qword ptr -598h
var_590         = qword ptr -590h
var_588         = qword ptr -588h
var_580         = qword ptr -580h
var_578         = qword ptr -578h
var_570         = qword ptr -570h
var_568         = qword ptr -568h
var_560         = qword ptr -560h
var_558         = qword ptr -558h
var_550         = qword ptr -550h
var_548         = qword ptr -548h
var_540         = qword ptr -540h
var_538         = qword ptr -538h
var_530         = qword ptr -530h
var_528         = qword ptr -528h
var_520         = qword ptr -520h
var_518         = qword ptr -518h
var_510         = qword ptr -510h
var_508         = qword ptr -508h
var_500         = qword ptr -500h
var_4F8         = qword ptr -4F8h
var_4F0         = qword ptr -4F0h
var_4E8         = qword ptr -4E8h
var_4E0         = qword ptr -4E0h
var_4D8         = qword ptr -4D8h
var_4D0         = qword ptr -4D0h
var_4C8         = qword ptr -4C8h
var_4C0         = qword ptr -4C0h
var_4B8         = qword ptr -4B8h
var_4B0         = qword ptr -4B0h
var_4A8         = qword ptr -4A8h
var_4A0         = qword ptr -4A0h
var_498         = qword ptr -498h
var_490         = qword ptr -490h
var_488         = qword ptr -488h
var_480         = qword ptr -480h
var_478         = qword ptr -478h
var_470         = qword ptr -470h
var_468         = qword ptr -468h
var_460         = qword ptr -460h
var_458         = qword ptr -458h
var_450         = qword ptr -450h
var_448         = qword ptr -448h
var_440         = qword ptr -440h
var_438         = qword ptr -438h
var_430         = qword ptr -430h
var_428         = qword ptr -428h
var_420         = qword ptr -420h
var_418         = qword ptr -418h
var_410         = qword ptr -410h
var_408         = qword ptr -408h
var_400         = qword ptr -400h
var_3F8         = qword ptr -3F8h
var_3F0         = qword ptr -3F0h
var_3E8         = qword ptr -3E8h
var_3E0         = qword ptr -3E0h
var_3D8         = qword ptr -3D8h
var_3D0         = qword ptr -3D0h
var_3C8         = qword ptr -3C8h
var_3C0         = qword ptr -3C0h
var_3B8         = qword ptr -3B8h
var_3B0         = qword ptr -3B0h
var_3A8         = qword ptr -3A8h
var_3A0         = qword ptr -3A0h
var_398         = qword ptr -398h
var_390         = qword ptr -390h
var_388         = qword ptr -388h
var_380         = qword ptr -380h
var_378         = qword ptr -378h
var_370         = qword ptr -370h
var_368         = qword ptr -368h
var_360         = qword ptr -360h
var_358         = qword ptr -358h
var_350         = qword ptr -350h
var_348         = qword ptr -348h
var_340         = qword ptr -340h
var_338         = qword ptr -338h
var_330         = qword ptr -330h
var_328         = qword ptr -328h
var_320         = byte ptr -320h
var_310         = byte ptr -310h
var_300         = byte ptr -300h
var_2F0         = byte ptr -2F0h
var_2E0         = byte ptr -2E0h
var_2D0         = byte ptr -2D0h
var_2C0         = byte ptr -2C0h
var_2B0         = byte ptr -2B0h
var_2A0         = byte ptr -2A0h
var_290         = byte ptr -290h
var_280         = byte ptr -280h
var_270         = byte ptr -270h
var_260         = byte ptr -260h
var_250         = qword ptr -250h
var_248         = qword ptr -248h
var_240         = byte ptr -240h
var_228         = byte ptr -228h
var_220         = qword ptr -220h
var_214         = dword ptr -214h
var_210         = byte ptr -210h
var_208         = qword ptr -208h
var_1FC         = dword ptr -1FCh
var_1F8         = byte ptr -1F8h
var_1F0         = qword ptr -1F0h
var_1E4         = dword ptr -1E4h
var_1E0         = qword ptr -1E0h
var_1D8         = byte ptr -1D8h
var_1D0         = byte ptr -1D0h
var_1C8         = qword ptr -1C8h
var_1C0         = qword ptr -1C0h
var_1B8         = qword ptr -1B8h
var_1B0         = qword ptr -1B0h
var_1A8         = qword ptr -1A8h
var_1A0         = byte ptr -1A0h
var_190         = byte ptr -190h
var_180         = byte ptr -180h
var_170         = byte ptr -170h
var_168         = qword ptr -168h
var_158         = byte ptr -158h
var_150         = qword ptr -150h
var_140         = byte ptr -140h
var_138         = qword ptr -138h
var_128         = byte ptr -128h
var_110         = byte ptr -110h
var_F0          = byte ptr -0F0h
var_D0          = byte ptr -0D0h
var_B0          = byte ptr -0B0h
var_90          = byte ptr -90h
var_70          = byte ptr -70h
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = byte ptr  20h
arg_18          = byte ptr  28h

                mov     [rsp-8+arg_0], rcx
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-0BA8h]
                sub     rsp, 0CA8h
                mov     eax, [rcx+990h]
                xor     r9d, r9d
                mov     r12, rcx
                mov     [rbp+0BE0h+var_448], rcx
                mov     ecx, 110000h
                mov     edi, 0FFFFFFF8h
                and     eax, ecx
                mov     r11d, 0FFFFFFFFh
                lea     esi, [r9+1]
                mov     r10d, 12Fh
                cmp     eax, ecx
                jz      loc_1409FA11E
                mov     rdx, [r12+8E0h]
                lea     ecx, [r10+1]
                mov     rax, rdx
                lea     r8d, [r9+26h]

loc_1409FA07A:                          ; CODE XREF: sub_1409FA010+76↓j
                mov     [rax], r9
                add     ecx, edi
                add     rax, 8
                sub     r8, rsi
                jnz     short loc_1409FA07A
                test    ecx, ecx
                jz      short loc_1409FA097

loc_1409FA08C:                          ; CODE XREF: sub_1409FA010+85↓j
                mov     [rax], r9b
                add     rax, rsi
                add     ecx, r11d
                jnz     short loc_1409FA08C

loc_1409FA097:                          ; CODE XREF: sub_1409FA010+7A↑j
                movups  xmm0, xmmword ptr [r12+848h]
                lea     rax, [r12+878h]
                mov     rcx, rax
                movdqu  xmmword ptr [rdx+10h], xmm0
                shr     rcx, 10h
                movups  xmm1, xmmword ptr [r12+858h]
                movdqu  xmmword ptr [rdx+20h], xmm1
                movups  xmm0, xmmword ptr [r12+868h]
                movdqu  xmmword ptr [rdx+120h], xmm0
                mov     qword ptr [rbp+0BE0h+var_8F0+2], rdx
                mov     word ptr [rbp+0BE0h+var_8F0], r10w
                mov     [rdx+10h], ax
                shr     rax, 20h
                mov     [rdx+16h], cx
                mov     [rdx+18h], eax
                cli
                xor     eax, eax
                cmp     [r12+990h], eax
                jge     short loc_1409FA104
                mov     dr7, rax

loc_1409FA101:                          ; CODE XREF: sub_1409FA010+10C↓j
                sti
                jmp     short loc_1409FA120
; ---------------------------------------------------------------------------

loc_1409FA104:                          ; CODE XREF: sub_1409FA010+EC↑j
                sidt    fword ptr [rbp+0BE0h+var_760]
                lidt    fword ptr [rbp+0BE0h+var_8F0]
                mov     dr7, rax
                lidt    fword ptr [rbp+0BE0h+var_760]
                jmp     short loc_1409FA101
; ---------------------------------------------------------------------------

loc_1409FA11E:                          ; CODE XREF: sub_1409FA010+51↑j
                xor     eax, eax

loc_1409FA120:                          ; CODE XREF: sub_1409FA010+F2↑j
                test    dword ptr [r12+994h], 100h
                mov     [rbp+0BE0h+var_BD0], rax
                jz      short loc_1409FA147
                lea     rcx, [rbp+0BE8h]
                mov     rax, [rcx]
                mov     [rbp+0BE0h+var_BD0], rax
                xor     eax, eax
                mov     [rcx], rax
                jmp     short loc_1409FA149
; ---------------------------------------------------------------------------

loc_1409FA147:                          ; CODE XREF: sub_1409FA010+120↑j
                xor     eax, eax

loc_1409FA149:                          ; CODE XREF: sub_1409FA010+135↑j
                mov     r13d, 20h ; ' '
                mov     [r12+828h], eax
                test    dword ptr [r12+990h], 40000000h
                mov     r14, 7010008004002001h
                lea     r15d, [r13-1Ch]
                jz      short loc_1409FA183
                xor     eax, eax
                cmp     [r12+0A78h], rax
                jnz     loc_1409FA419

loc_1409FA183:                          ; CODE XREF: sub_1409FA010+161↑j
                mov     r14, [r12+7B8h]
                lea     rbx, [r12+798h]
                mov     [rbp+0BE0h+arg_8], r14
                lea     rdx, [rbp+0BE0h+var_110]
                mov     rcx, rbx
                mov     r8d, r13d
                mov     r9, r15

loc_1409FA1AA:                          ; CODE XREF: sub_1409FA010+1AE↓j
                mov     rax, [rcx]
                add     r8d, edi
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, rsi
                jnz     short loc_1409FA1AA
                xor     eax, eax
                test    r8d, r8d
                jz      short loc_1409FA1D8

loc_1409FA1C7:                          ; CODE XREF: sub_1409FA010+1C4↓j
                mov     al, [rcx]
                add     rcx, rsi
                mov     [rdx], al
                add     rdx, rsi
                add     r8d, r11d
                jnz     short loc_1409FA1C7
                xor     eax, eax

loc_1409FA1D8:                          ; CODE XREF: sub_1409FA010+1B5↑j
                mov     [r12+7B8h], rax
                mov     ecx, r13d
                mov     [r12+828h], eax
                mov     rdx, r15
                mov     rax, rbx
                xor     r8d, r8d

loc_1409FA1F4:                          ; CODE XREF: sub_1409FA010+1F0↓j
                mov     [rax], r8
                add     ecx, edi
                add     rax, 8
                sub     rdx, rsi
                jnz     short loc_1409FA1F4
                test    ecx, ecx
                jz      short loc_1409FA211

loc_1409FA206:                          ; CODE XREF: sub_1409FA010+1FF↓j
                mov     [rax], r8b
                add     rax, rsi
                add     ecx, r11d
                jnz     short loc_1409FA206

loc_1409FA211:                          ; CODE XREF: sub_1409FA010+1F4↑j
                mov     eax, [r12+7E4h]
                mov     r9, r12
                add     [r12+828h], eax
                mov     rax, r12
                mov     r10d, [r12+7E4h]
                mov     r11d, [r12+814h]
                mov     rsi, [r12+818h]
                lea     rcx, [r12+r10]
                cmp     r12, rcx
                jnb     short loc_1409FA258
                mov     edx, 40h ; '@'

loc_1409FA24D:                          ; CODE XREF: sub_1409FA010+246↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_1409FA24D

loc_1409FA258:                          ; CODE XREF: sub_1409FA010+236↑j
                mov     edi, r10d
                mov     r8, rsi
                shr     edi, 7
                test    edi, edi
                jz      short loc_1409FA2E0
                mov     r14, 7010008004002001h

loc_1409FA26F:                          ; CODE XREF: sub_1409FA010+2C7↓j
                mov     edx, 8
                lea     r12d, [rdx-7]

loc_1409FA278:                          ; CODE XREF: sub_1409FA010+285↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r12
                jnz     short loc_1409FA278
                mov     r12, [rbp+0BE0h+arg_0]
                mov     rcx, r9
                sub     rcx, r12
                xor     rcx, rsi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     eax, edx
                mov     [rbp+0BE0h+var_3D8], rdx
                xor     r11d, eax
                mov     eax, 1
                and     r11d, 3Fh
                cmovz   r11d, eax
                mov     eax, 0FFFFFFFFh
                add     edi, eax
                jnz     short loc_1409FA26F
                mov     r14, [rbp+0BE0h+arg_8]

loc_1409FA2E0:                          ; CODE XREF: sub_1409FA010+253↑j
                and     r10d, 7Fh
                mov     esi, 1
                cmp     r10d, 8
                jb      short loc_1409FA30C
                mov     edx, r10d
                shr     rdx, 3

loc_1409FA2F6:                          ; CODE XREF: sub_1409FA010+2FA↓j
                xor     r8, [r9]
                mov     ecx, r11d
                rol     r8, cl
                add     r9, 8
                add     r10d, 0FFFFFFF8h
                sub     rdx, rsi
                jnz     short loc_1409FA2F6

loc_1409FA30C:                          ; CODE XREF: sub_1409FA010+2DD↑j
                test    r10d, r10d
                jz      short loc_1409FA333
                mov     r12d, 0FFFFFFFFh

loc_1409FA317:                          ; CODE XREF: sub_1409FA010+31A↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     r8, rax
                add     r9, rsi
                rol     r8, cl
                add     r10d, r12d
                jnz     short loc_1409FA317
                mov     r12, [rbp+0BE0h+arg_0]

loc_1409FA333:                          ; CODE XREF: sub_1409FA010+2FF↑j
                mov     [r12+7B8h], r14
                lea     rcx, [rbp+0BE0h+var_110]
                mov     edx, r13d
                mov     r9, r15

loc_1409FA348:                          ; CODE XREF: sub_1409FA010+34C↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [rbx], rax
                add     rcx, 8
                add     rbx, 8
                sub     r9, rsi
                jnz     short loc_1409FA348
                test    edx, edx
                jz      short loc_1409FA377
                mov     r11d, 0FFFFFFFFh

loc_1409FA368:                          ; CODE XREF: sub_1409FA010+365↓j
                mov     al, [rcx]
                add     rcx, rsi
                mov     [rbx], al
                add     rbx, rsi
                add     edx, r11d
                jnz     short loc_1409FA368

loc_1409FA377:                          ; CODE XREF: sub_1409FA010+350↑j
                cmp     [r12+7B8h], r8
                jz      loc_1409FA40F
                mov     rax, [r12+590h]
                xor     edx, edx
                mov     ecx, [r12+7E4h]
                mov     [rax], r12
                mov     [rax+10h], ecx
                mov     eax, [r12+8F8h]
                mov     rcx, [r12+7B8h]
                test    eax, eax
                jnz     short loc_1409FA40F
                mov     rax, [r12+590h]
                xor     rcx, r8
                mov     [rax+18h], rcx
                mov     eax, [r12+8F8h]
                test    eax, eax
                jnz     short loc_1409FA40F
                mov     rax, 0A3A03F5891C8B4E8h
                mov     rcx, r12
                add     rax, r12
                mov     [r12+900h], rax
                xor     eax, eax
                mov     [r12+908h], rax
                mov     qword ptr [r12+910h], 101h
                mov     [r12+918h], r8
                mov     [r12+8F8h], esi
                call    sub_140A113CC

loc_1409FA40F:                          ; CODE XREF: sub_1409FA010+36F↑j
                                        ; sub_1409FA010+39F↑j ...
                mov     r14, 7010008004002001h

loc_1409FA419:                          ; CODE XREF: sub_1409FA010+16D↑j
                or      [r12+990h], r15d
                mov     rdi, 0FFFFFFFFB8797400h
                add     [r12+834h], esi
                mov     r8, 0ABCC77118461CEFDh
                mov     eax, [r12+990h]
                test    al, 8
                jz      loc_1409FA874
                bt      eax, 17h
                jb      loc_1409FA874
                mov     eax, [r12+994h]
                mov     r10, [r12+0A70h]
                mov     r13d, [r12+7E4h]
                mov     r11, [r12+9F8h]
                mov     r15d, [r12+808h]
                mov     [rbp+0BE0h+arg_8], r10
                and     eax, esi
                jz      short loc_1409FA48F
                mov     r11, [r12+5D8h]

loc_1409FA48F:                          ; CODE XREF: sub_1409FA010+475↑j
                mov     rbx, [rbp+0BE0h+arg_0]
                mov     r12, [r12+160h]
                mov     [rbp+0BE0h+var_C40], r12
                mov     rax, [rbx+2C8h]
                mov     [rsp+0CE0h+var_C88], rax
                mov     rax, [rbx+340h]
                mov     [rbp+0BE0h+var_C30], rax
                rdtsc
                shl     rdx, 20h
                mov     r9, rdi
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_3D0], rdx
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                shr     rdx, 1Ah
                imul    rax, rdx, 5F5E100h
                sub     rcx, rax
                sub     r9, rcx
                mov     [rbp+0BE0h+var_AB8], r9
                mov     r8d, [rbx+990h]
                bt      r8d, 1Ah
                jnb     loc_1409FA5B3
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_3C8], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                mov     eax, 2
                cmp     rcx, rax
                jnb     short loc_1409FA5B3
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_3C0], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                add     rcx, rsi
                imul    rcx, r9
                mov     [rbp+0BE0h+var_AB8], rcx
                mov     r8d, [rbx+990h]

loc_1409FA5B3:                          ; CODE XREF: sub_1409FA010+4FC↑j
                                        ; sub_1409FA010+54B↑j
                xor     eax, eax
                mov     esi, r15d
                mov     ebx, eax
                mov     r14d, eax
                lea     ecx, [rax+2]
                test    cl, r8b
                cmovnz  esi, r13d
                test    r8b, r8b
                js      short loc_1409FA5D4
                mov     r13d, eax
                jmp     loc_1409FA6B3
; ---------------------------------------------------------------------------

loc_1409FA5D4:                          ; CODE XREF: sub_1409FA010+5BA↑j
                mov     r9d, 1
                mov     r13d, r9d
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     ecx, 154h
                mov     rbx, rdx
                mov     [rbp+0BE0h+var_3B8], rdx
                mov     rdx, [rbp+0BE0h+arg_0]
                xor     rbx, rax
                mov     r14, rbx
                mov     r8, rbx
                xor     r14, rdx
                lea     rax, [rdx+0A98h]

loc_1409FA626:                          ; CODE XREF: sub_1409FA010+623↓j
                xor     [rax], r8
                lea     rax, [rax-8]
                ror     r8, cl
                sub     ecx, r9d
                jnz     short loc_1409FA626
                lea     r9, [r15-0AA0h]
                mov     r12, r15
                shr     r9, 3
                test    r9d, r9d
                jz      short loc_1409FA686
                movsxd  r10, r9d
                mov     rdi, r13
                add     r10, 153h
                lea     r10, [rdx+r10*8]

loc_1409FA659:                          ; CODE XREF: sub_1409FA010+663↓j
                mov     rdx, [r10]
                lea     rax, [r14+r14]
                mov     ecx, r9d
                lea     r10, [r10-8]
                ror     rdx, cl
                mov     r14, rdx
                xor     r14, rax
                sub     r9d, edi
                jnz     short loc_1409FA659
                mov     r10, [rbp+0BE0h+arg_8]
                mov     r12, r15
                mov     rdx, [rbp+0BE0h+arg_0]

loc_1409FA686:                          ; CODE XREF: sub_1409FA010+636↑j
                mov     ecx, esi
                add     rdx, r12
                sub     ecx, r15d
                shr     ecx, 3
                test    ecx, ecx
                jz      short loc_1409FA6AF
                lea     rdx, [rdx+rcx*8]
                mov     r9, r13
                add     rdx, 0FFFFFFFFFFFFFFF8h

loc_1409FA6A0:                          ; CODE XREF: sub_1409FA010+69D↓j
                xor     [rdx], r8
                lea     rdx, [rdx-8]
                ror     r8, cl
                sub     ecx, r9d
                jnz     short loc_1409FA6A0

loc_1409FA6AF:                          ; CODE XREF: sub_1409FA010+683↑j
                mov     r12, [rbp+0BE0h+var_C40]

loc_1409FA6B3:                          ; CODE XREF: sub_1409FA010+5BF↑j
                test    r10, r10
                jz      short loc_1409FA6DE
                mov     rax, [rbp+0BE0h+var_C30]
                lea     r8, [rbp+0BE0h+var_AB8]
                mov     r9, r12
                mov     [rsp+0CE0h+var_CC0], r10
                mov     r12, [rbp+0BE0h+arg_0]
                mov     edx, esi
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                jmp     short loc_1409FA71E
; ---------------------------------------------------------------------------

loc_1409FA6DE:                          ; CODE XREF: sub_1409FA010+6A6↑j
                xor     edx, edx
                test    r11, r11
                jnz     short loc_1409FA6F8
                lea     r8, [rbp+0BE0h+var_AB8]
                xor     ecx, ecx
                mov     rax, r12
                call    j__guard_dispatch_icall_nop
                jmp     short loc_1409FA717
; ---------------------------------------------------------------------------

loc_1409FA6F8:                          ; CODE XREF: sub_1409FA010+6D3↑j
                lea     rax, [rbp+0BE0h+var_AB8]
                xor     r9d, r9d
                mov     [rsp+0CE0h+var_CC0], rax
                xor     r8d, r8d
                mov     rax, [rsp+0CE0h+var_C88]
                mov     rcx, r11
                call    j__guard_dispatch_icall_nop

loc_1409FA717:                          ; CODE XREF: sub_1409FA010+6E6↑j
                mov     r12, [rbp+0BE0h+arg_0]

loc_1409FA71E:                          ; CODE XREF: sub_1409FA010+6CC↑j
                xor     eax, eax
                test    r13d, r13d
                jz      loc_1409FA85A
                mov     r8, rbx
                lea     rax, [r12+0A98h]
                xor     r8, r12
                mov     ecx, 154h
                mov     r13d, 1

loc_1409FA742:                          ; CODE XREF: sub_1409FA010+73F↓j
                xor     [rax], rbx
                lea     rax, [rax-8]
                ror     rbx, cl
                sub     ecx, r13d
                jnz     short loc_1409FA742
                lea     r9, [r15-0AA0h]
                mov     r11, r15
                shr     r9, 3
                test    r9d, r9d
                jz      short loc_1409FA791
                movsxd  r10, r9d
                add     r10, 153h
                lea     r10, [r12+r10*8]

loc_1409FA772:                          ; CODE XREF: sub_1409FA010+77C↓j
                mov     rdx, [r10]
                lea     rax, [r8+r8]
                mov     ecx, r9d
                lea     r10, [r10-8]
                ror     rdx, cl
                mov     r8, rdx
                xor     r8, rax
                sub     r9d, r13d
                jnz     short loc_1409FA772
                mov     r11, r15

loc_1409FA791:                          ; CODE XREF: sub_1409FA010+752↑j
                sub     esi, r15d
                lea     rcx, [r11+r12]
                shr     esi, 3
                test    esi, esi
                jz      short loc_1409FA7B9
                mov     eax, esi
                dec     rax
                lea     rdx, [rcx+rax*8]

loc_1409FA7A8:                          ; CODE XREF: sub_1409FA010+7A7↓j
                xor     [rdx], rbx
                mov     ecx, esi
                ror     rbx, cl
                lea     rdx, [rdx-8]
                sub     esi, r13d
                jnz     short loc_1409FA7A8

loc_1409FA7B9:                          ; CODE XREF: sub_1409FA010+78D↑j
                cmp     r8, r14
                jz      loc_1409FA86A
                mov     rax, [r12+590h]
                xor     edx, edx
                mov     ecx, [r12+7E4h]
                mov     [rax], r12
                mov     [rax+10h], ecx
                mov     eax, [r12+8F8h]
                test    eax, eax
                jnz     loc_1409FA86A
                mov     rax, [r12+590h]
                mov     rcx, r8
                xor     rcx, r14
                mov     [rax+18h], rcx
                mov     eax, [r12+8F8h]
                test    eax, eax
                jnz     short loc_1409FA86A
                mov     rax, 0A3A03F5891C8B4E8h
                mov     r14, r13
                add     rax, r12
                mov     rcx, r12
                mov     [r12+900h], rax
                xor     eax, eax
                mov     [r12+908h], rax
                mov     qword ptr [r12+910h], 10Eh
                mov     [r12+918h], r8
                mov     [r12+8F8h], r14d
                call    sub_140A113CC
                mov     r15d, 4
                lea     r13d, [r15+1Ch]
                jmp     short loc_1409FA87A
; ---------------------------------------------------------------------------

loc_1409FA85A:                          ; CODE XREF: sub_1409FA010+713↑j
                mov     r15d, 4
                lea     r13d, [r15+1Ch]
                lea     r14d, [r15-3]
                jmp     short loc_1409FA87C
; ---------------------------------------------------------------------------

loc_1409FA86A:                          ; CODE XREF: sub_1409FA010+7AC↑j
                                        ; sub_1409FA010+7D4↑j ...
                mov     r13d, 20h ; ' '
                lea     r15d, [r13-1Ch]

loc_1409FA874:                          ; CODE XREF: sub_1409FA010+434↑j
                                        ; sub_1409FA010+43E↑j
                mov     r14d, 1

loc_1409FA87A:                          ; CODE XREF: sub_1409FA010+848↑j
                xor     eax, eax

loc_1409FA87C:                          ; CODE XREF: sub_1409FA010+858↑j
                mov     esi, [r12+0C4h]
                lea     rcx, [r12+620h]
                mov     [r12+0C4h], eax
                mov     r9, r12
                add     dword ptr [r12+828h], 620h
                mov     rax, r12
                mov     r10d, [r12+814h]
                mov     r11, [r12+818h]
                cmp     r12, rcx
                jnb     short loc_1409FA8CB
                mov     edx, 40h ; '@'

loc_1409FA8C0:                          ; CODE XREF: sub_1409FA010+8B9↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_1409FA8C0

loc_1409FA8CB:                          ; CODE XREF: sub_1409FA010+8A9↑j
                mov     r8, r11
                mov     ebx, 0Ch
                mov     rdi, 7010008004002001h

loc_1409FA8DD:                          ; CODE XREF: sub_1409FA010+925↓j
                mov     edx, 8

loc_1409FA8E2:                          ; CODE XREF: sub_1409FA010+8EF↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r14
                jnz     short loc_1409FA8E2
                mov     rcx, r9
                sub     rcx, r12
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     eax, edx
                mov     [rbp+0BE0h+var_3B0], rdx
                xor     r10d, eax
                mov     eax, 0FFFFFFFFh
                and     r10d, 3Fh
                cmovz   r10d, r14d
                add     ebx, eax
                jnz     short loc_1409FA8DD
                mov     edx, r13d
                mov     r11, r15
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FA944:                          ; CODE XREF: sub_1409FA010+947↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     r11, r14
                jnz     short loc_1409FA944
                mov     r13d, 0FFFFFFFFh
                test    edx, edx
                jz      short loc_1409FA978

loc_1409FA963:                          ; CODE XREF: sub_1409FA010+966↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r14
                rol     r8, cl
                add     edx, r13d
                jnz     short loc_1409FA963

loc_1409FA978:                          ; CODE XREF: sub_1409FA010+951↑j
                mov     [r12+0C4h], esi
                cmp     [r12+0A20h], r8
                jz      loc_1409FAA1B
                mov     rax, [r12+590h]
                mov     ecx, [r12+7E4h]
                mov     [rax], r12
                mov     [rax+10h], ecx
                mov     eax, [r12+8F8h]
                mov     rdx, [r12+0A20h]
                test    eax, eax
                jnz     short loc_1409FAA1B
                mov     rax, [r12+590h]
                mov     rcx, r8
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [r12+8F8h]
                test    eax, eax
                jnz     short loc_1409FAA1B
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r12
                mov     rcx, r12
                mov     [r12+900h], rax
                xor     eax, eax
                mov     [r12+908h], rax
                mov     qword ptr [r12+910h], 109h
                mov     [r12+918h], r8
                mov     [r12+8F8h], r14d
                call    sub_140A113CC

loc_1409FAA1B:                          ; CODE XREF: sub_1409FA010+978↑j
                                        ; sub_1409FA010+9A6↑j ...
                xor     edx, edx
                mov     rcx, r12
                call    sub_140A113CC
                mov     ecx, [r12+970h]
                xor     eax, eax
                mov     [rsp+0CE0h+var_C80], r12
                mov     rsi, r12
                mov     [rbp+0BE0h+var_BC8], eax
                mov     r10, 2E8BA2E8BA2E8BA3h
                mov     [rbp+0BE0h+var_C38], eax
                lea     r9d, [rax+5]
                lea     r8d, [rax+6]
                cmp     ecx, r13d
                jz      loc_1409FAB51
                mov     rax, [r12+278h]
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1409FAA88
                mov     rax, [r12+280h]
                xor     ecx, ecx
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                test    rax, rax
                jz      loc_1409FAB3D

loc_1409FAA88:                          ; CODE XREF: sub_1409FA010+A5B↑j
                mov     rax, [r12+290h]
                lea     rdx, [rbp+0BE0h+var_6C0]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     r14d, eax
                test    eax, eax
                jns     short loc_1409FAABA
                mov     rax, [r12+288h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                xor     eax, eax
                jmp     short loc_1409FAB29
; ---------------------------------------------------------------------------

loc_1409FAABA:                          ; CODE XREF: sub_1409FA010+A94↑j
                mov     [r12+980h], rbx
                mov     rax, [r12+2B8h]
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                mov     rax, [r12+2D8h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                test    rax, rax
                jnz     short loc_1409FAAEF
                mov     ecx, r15d
                jmp     short loc_1409FAB03
; ---------------------------------------------------------------------------

loc_1409FAAEF:                          ; CODE XREF: sub_1409FA010+AD8↑j
                mov     rax, [r12+2E8h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                xor     eax, eax
                mov     ecx, eax

loc_1409FAB03:                          ; CODE XREF: sub_1409FA010+ADD↑j
                mov     eax, [r12+994h]
                and     eax, 0FFFFFFFBh
                or      eax, ecx
                mov     [r12+994h], eax
                add     dword ptr [r12+828h], 10000h
                xor     eax, eax
                mov     r14d, eax

loc_1409FAB29:                          ; CODE XREF: sub_1409FA010+AA8↑j
                test    r14d, r14d
                js      short loc_1409FAB3D
                mov     r13d, 1
                mov     [rbp+0BE0h+var_C38], r13d
                jmp     loc_1409FAEB6
; ---------------------------------------------------------------------------

loc_1409FAB3D:                          ; CODE XREF: sub_1409FA010+A72↑j
                                        ; sub_1409FA010+B1C↑j
                mov     r9d, 5
                mov     r10, 2E8BA2E8BA2E8BA3h
                lea     r8d, [r9+1]

loc_1409FAB51:                          ; CODE XREF: sub_1409FA010+A42↑j
                mov     eax, [r12+994h]
                test    al, 8
                jz      loc_1409FAEAB
                bt      eax, 0Ch
                jb      loc_1409FAEAB
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     [rbp+0BE0h+var_3A8], rdx
                xor     dl, al
                test    dl, 3
                jnz     loc_1409FAEAB
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_3A0], rdx
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, r9d
                ja      loc_1409FAC97
                jz      loc_1409FAC7D
                test    ecx, ecx
                jz      short loc_1409FAC63
                sub     ecx, 1
                jz      short loc_1409FAC4A
                sub     ecx, 1
                jz      short loc_1409FAC30
                cmp     ecx, 1
                jz      short loc_1409FAC12
                mov     [rbp+0BE0h+var_A50], 67076494h
                mov     r9d, [rbp+0BE0h+var_A50]
                rol     r9d, 4
                jmp     loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAC12:                          ; CODE XREF: sub_1409FA010+BE6↑j
                mov     [rbp+0BE0h+var_A4C], 0A8223938h
                mov     r9d, [rbp+0BE0h+var_A4C]
                xor     r9d, 3
                ror     r9d, 0Fh
                jmp     loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAC30:                          ; CODE XREF: sub_1409FA010+BE1↑j
                mov     [rbp+0BE0h+var_A48], 85B5910Dh
                mov     r9d, [rbp+0BE0h+var_A48]
                ror     r9d, 2
                jmp     loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAC4A:                          ; CODE XREF: sub_1409FA010+BDC↑j
                mov     [rbp+0BE0h+var_A44], 0B2AD31A1h
                mov     r9d, [rbp+0BE0h+var_A44]
                rol     r9d, 1
                jmp     loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAC63:                          ; CODE XREF: sub_1409FA010+BD7↑j
                mov     [rbp+0BE0h+var_A40], 0D098D0D8h
                mov     r9d, [rbp+0BE0h+var_A40]
                ror     r9d, 6
                jmp     loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAC7D:                          ; CODE XREF: sub_1409FA010+BCF↑j
                mov     [rbp+0BE0h+var_A3C], 288C49EDh
                mov     r9d, [rbp+0BE0h+var_A3C]
                ror     r9d, 5
                jmp     loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAC97:                          ; CODE XREF: sub_1409FA010+BC9↑j
                sub     ecx, r8d
                jz      loc_1409FADA4
                sub     ecx, 1
                jz      loc_1409FAD8D
                sub     ecx, 1
                jz      loc_1409FAD76
                cmp     ecx, 1
                jz      loc_1409FAD5B
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     r9, rax
                mov     [rbp+0BE0h+var_398], rdx
                xor     r9d, edx
                mov     eax, 4EC4EC4Fh
                mul     r9d
                mov     ecx, r9d
                shr     r9d, 5
                shr     edx, 3
                mov     r8d, r9d
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, 4EC4EC4Fh
                mul     r9d
                add     ecx, 61h ; 'a'
                shr     r9d, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     r8d, eax
                mov     eax, 4EC4EC4Fh
                mul     r9d
                add     r8d, 41h ; 'A'
                or      r8d, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, r9d
                shr     r9d, 5
                shl     r8d, 8
                sub     ecx, eax
                mov     eax, 4EC4EC4Fh
                mul     r9d
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, r8d
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     r9d, eax
                add     r9d, 41h ; 'A'
                or      r9d, ecx
                jmp     short loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAD5B:                          ; CODE XREF: sub_1409FA010+CA5↑j
                mov     [rbp+0BE0h+var_A38], 0B0869E85h
                mov     r9d, [rbp+0BE0h+var_A38]
                xor     r9d, 9
                ror     r9d, 21h
                jmp     short loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAD76:                          ; CODE XREF: sub_1409FA010+C9C↑j
                mov     [rbp+0BE0h+var_A34], 64664142h
                mov     r9d, [rbp+0BE0h+var_A34]
                ror     r9d, 8
                jmp     short loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FAD8D:                          ; CODE XREF: sub_1409FA010+C93↑j
                mov     [rbp+0BE0h+var_A30], 82C6A6D8h
                mov     r9d, [rbp+0BE0h+var_A30]
                rol     r9d, 7
                jmp     short loc_1409FADBC
; ---------------------------------------------------------------------------

loc_1409FADA4:                          ; CODE XREF: sub_1409FA010+C8A↑j
                mov     [rbp+0BE0h+var_A2C], 4E574672h
                mov     r9d, [rbp+0BE0h+var_A2C]
                xor     r9d, r8d
                ror     r9d, 18h

loc_1409FADBC:                          ; CODE XREF: sub_1409FA010+BFD↑j
                                        ; sub_1409FA010+C1B↑j ...
                mov     rax, [r12+0F8h]
                mov     r8d, r9d
                mov     rdx, [r12+768h]
                mov     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     r15, rax
                xor     eax, eax
                test    r15, r15
                jz      loc_1409FAEAD
                mov     rcx, [r12+6E8h]
                mov     rax, [r12+518h]
                mov     r14d, [rcx+rax]
                test    r14d, r14d
                jz      short loc_1409FAE2B
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     [rbp+0BE0h+var_390], rdx
                xor     rax, rdx
                xor     edx, edx
                div     r14
                mov     r14, rdx

loc_1409FAE2B:                          ; CODE XREF: sub_1409FA010+DEE↑j
                mov     rax, [r12+3B0h]
                xor     ecx, ecx
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1409FAE9B

loc_1409FAE42:                          ; CODE XREF: sub_1409FA010+E50↓j
                test    r14d, r14d
                jz      short loc_1409FAE62
                mov     rax, [r12+3B0h]
                mov     rcx, rbx
                add     r14d, r13d
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1409FAE42

loc_1409FAE62:                          ; CODE XREF: sub_1409FA010+E35↑j
                mov     rsi, r12
                test    rbx, rbx
                jz      short loc_1409FAE9B
                mov     rax, [r12+3A0h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jns     short loc_1409FAE92
                mov     rax, [r12+3B8h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                xor     eax, eax
                mov     ebx, eax

loc_1409FAE92:                          ; CODE XREF: sub_1409FA010+E6C↑j
                test    rbx, rbx
                jnz     loc_1409FAF6C

loc_1409FAE9B:                          ; CODE XREF: sub_1409FA010+E30↑j
                                        ; sub_1409FA010+E58↑j
                mov     rax, [r12+100h]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop

loc_1409FAEAB:                          ; CODE XREF: sub_1409FA010+B4B↑j
                                        ; sub_1409FA010+B55↑j ...
                xor     eax, eax

loc_1409FAEAD:                          ; CODE XREF: sub_1409FA010+DD1↑j
                mov     r13d, 1
                mov     [rbp+0BE0h+var_BC8], eax

loc_1409FAEB6:                          ; CODE XREF: sub_1409FA010+B28↑j
                                        ; sub_1409FA010+1093↓j
                mov     [rbp+0BE0h+var_B10], rax
                mov     ecx, 4
                lea     rax, [rbp+0BE0h+var_B08]
                xor     r15d, r15d
                mov     r9d, 0FFFFFFFFh

loc_1409FAED2:                          ; CODE XREF: sub_1409FA010+ECB↓j
                mov     [rax], r15b
                add     rax, r13
                add     ecx, r9d
                jnz     short loc_1409FAED2
                mov     ecx, [r12+820h]
                mov     r11d, 19h
                mov     rdx, [rbp+0BE0h+arg_0]
                add     r12, 82Ch
                mov     [rbp+0BE0h+var_C08], r12
                mov     r14d, 8000h
                mov     [rbp+0BE0h+var_C18], 0C000009Ah
                mov     eax, [r12]
                cmp     [rdx+828h], eax
                jge     loc_140A0666C
                mov     rbx, [rbp+0BE0h+var_380]
                lea     edx, [r11-18h]
                mov     r14, [rbp+0BE0h+var_378]
                mov     r15d, [rbp+0BE0h+var_89C]
                mov     r10d, [rbp+0BE0h+var_8D0]
                mov     [rbp+0BE0h+var_C30], rbx
                mov     [rbp+0BE0h+var_C40], r14
                mov     [rbp+0BE0h+var_C28], r15d
                mov     [rbp+0BE0h+var_BA0], r10d

loc_1409FAF4A:                          ; CODE XREF: sub_1409FA010+1366↓j
                mov     eax, [rsi+990h]
                mov     r8d, 110000h
                and     eax, r8d
                cmp     eax, r8d
                jz      loc_1409FB0A8
                xor     eax, eax
                mov     dr7, rax
                jmp     loc_1409FB0AA
; ---------------------------------------------------------------------------

loc_1409FAF6C:                          ; CODE XREF: sub_1409FA010+E85↑j
                mov     rax, [r12+438h]
                lea     rdx, [rbp+0BE0h+var_6C0]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     rax, [r12+1C0h]
                xor     r9d, r9d
                xor     r8d, r8d
                mov     rdx, r15
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, r15
                mov     rbx, rdx
                mov     [rbp+0BE0h+var_388], rdx
                xor     rbx, rax
                mov     rax, [r12+1B8h]
                call    j__guard_dispatch_icall_nop
                mov     ecx, eax
                xor     edx, edx
                mov     rax, rbx
                div     rcx
                mov     rbx, rdx
                cli
                mov     rcx, gs:20h
                mov     rax, [r12+648h]
                mov     rcx, [rcx+rax]
                sti
                mov     rax, [r12+1C8h]
                lea     rdx, [rbp+0BE0h+var_6D0]
                call    j__guard_dispatch_icall_nop
                mov     rax, [r12+1A8h]
                lea     rcx, [rbp+0BE0h+var_240]
                mov     rdx, r15
                call    j__guard_dispatch_icall_nop
                jmp     short loc_1409FB031
; ---------------------------------------------------------------------------

loc_1409FB02A:                          ; CODE XREF: sub_1409FA010+103E↓j
                test    ebx, ebx
                jz      short loc_1409FB052
                add     ebx, r13d

loc_1409FB031:                          ; CODE XREF: sub_1409FA010+1018↑j
                mov     rax, [r12+1B0h]
                lea     rdx, [rbp+0BE0h+var_240]
                lea     rcx, [rbp+0BE0h+var_B1C]
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jns     short loc_1409FB02A
                jmp     short loc_1409FB06C
; ---------------------------------------------------------------------------

loc_1409FB052:                          ; CODE XREF: sub_1409FA010+101C↑j
                mov     rax, [r12+1A0h]
                lea     rcx, [rbp+0BE0h+var_6D0]
                mov     edx, [rbp+0BE0h+var_B1C]
                call    j__guard_dispatch_icall_nop

loc_1409FB06C:                          ; CODE XREF: sub_1409FA010+1040↑j
                mov     rax, [r12+1D0h]
                lea     rdx, [rbp+0BE0h+var_260]
                lea     rcx, [rbp+0BE0h+var_6D0]
                call    j__guard_dispatch_icall_nop
                mov     rax, [r12+100h]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     r13d, 1
                xor     eax, eax
                mov     [rbp+0BE0h+var_BC8], r13d
                jmp     loc_1409FAEB6
; ---------------------------------------------------------------------------

loc_1409FB0A8:                          ; CODE XREF: sub_1409FA010+F4C↑j
                xor     eax, eax

loc_1409FB0AA:                          ; CODE XREF: sub_1409FA010+F57↑j
                cmp     ecx, [rsi+80Ch]
                jnz     short loc_1409FB0E8
                add     [rsi+830h], edx
                mov     ecx, eax
                cmp     dword ptr [rsi+958h], 0Bh
                jnz     short loc_1409FB0E8
                mov     eax, [rsi+990h]
                test    dl, al
                jnz     short loc_1409FB0E8
                cmp     [rsi+970h], r9d
                jnz     short loc_1409FB0E0
                xor     eax, eax
                mov     [rsi+970h], eax
                jmp     short loc_1409FB0E8
; ---------------------------------------------------------------------------

loc_1409FB0E0:                          ; CODE XREF: sub_1409FA010+10C4↑j
                or      eax, edx
                mov     [rsi+990h], eax

loc_1409FB0E8:                          ; CODE XREF: sub_1409FA010+10A0↑j
                                        ; sub_1409FA010+10B1↑j ...
                mov     rax, [rsi+0A78h]
                mov     r9, rsi
                test    rax, rax
                mov     [rbp+0BE0h+var_BE8], ecx
                cmovnz  r9, rax
                xor     eax, eax
                mov     r8d, eax
                mov     r13d, [r9+808h]
                add     r13, r9
                mov     [rsp+0CE0h+var_C90], r13
                cmp     dword ptr [rbp+0BE0h+var_B10], eax
                jz      short loc_1409FB136
                cmp     dword ptr [rbp+0BE0h+var_B10+4], ecx
                ja      short loc_1409FB136
                mov     r13d, [rbp+0BE0h+var_B08]
                mov     r8d, dword ptr [rbp+0BE0h+var_B10+4]
                add     r13, r9
                mov     [rsp+0CE0h+var_C90], r13

loc_1409FB136:                          ; CODE XREF: sub_1409FA010+1106↑j
                                        ; sub_1409FA010+110E↑j
                mov     edx, 1
                cmp     r8d, ecx
                jz      loc_1409FB26F
                sub     ecx, r8d
                lea     ebx, [rdx+1]
                mov     r10d, ecx
                lea     r14d, [rdx+0Bh]
                add     r8d, ecx
                mov     rsi, 0AAAAAAAAAAAAAAABh

loc_1409FB15E:                          ; CODE XREF: sub_1409FA010+123F↓j
                mov     ecx, [r13+0]
                cmp     ecx, r14d
                jg      short loc_1409FB1AA
                jz      short loc_1409FB1C7
                sub     ecx, 1
                jz      short loc_1409FB1C7
                sub     ecx, 6
                jz      short loc_1409FB199
                sub     ecx, 1
                jz      short loc_1409FB18F
                cmp     ecx, ebx
                jnz     loc_1409FB20B
                mov     eax, [r13+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_1409FB249
; ---------------------------------------------------------------------------

loc_1409FB18F:                          ; CODE XREF: sub_1409FA010+1166↑j
                movzx   eax, word ptr [r13+20h]
                jmp     loc_1409FB243
; ---------------------------------------------------------------------------

loc_1409FB199:                          ; CODE XREF: sub_1409FA010+1161↑j
                mov     eax, [r13+18h]
                add     eax, ebx
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_1409FB249
; ---------------------------------------------------------------------------

loc_1409FB1AA:                          ; CODE XREF: sub_1409FA010+1155↑j
                cmp     ecx, 1Ch
                jz      loc_1409FB23E
                cmp     ecx, 1Eh
                jz      short loc_1409FB212
                cmp     ecx, 20h ; ' '
                jle     short loc_1409FB20B
                cmp     ecx, 22h ; '"'
                jle     short loc_1409FB1E3
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_1409FB20B

loc_1409FB1C7:                          ; CODE XREF: sub_1409FA010+1157↑j
                                        ; sub_1409FA010+115C↑j
                mov     ecx, [r13+10h]
                mov     rax, rsi
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]

loc_1409FB1DC:                          ; CODE XREF: sub_1409FA010+11F9↓j
                                        ; sub_1409FA010+122C↓j
                mov     edx, 1
                jmp     short loc_1409FB249
; ---------------------------------------------------------------------------

loc_1409FB1E3:                          ; CODE XREF: sub_1409FA010+11B0↑j
                mov     ecx, [r13+20h]
                mov     edx, [r13+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_1409FB1DC
; ---------------------------------------------------------------------------

loc_1409FB20B:                          ; CODE XREF: sub_1409FA010+116A↑j
                                        ; sub_1409FA010+11AB↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_1409FB249
; ---------------------------------------------------------------------------

loc_1409FB212:                          ; CODE XREF: sub_1409FA010+11A6↑j
                mov     eax, [r13+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, rsi
                mul     rcx
                movzx   eax, word ptr [r13+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, ebx
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_1409FB1DC
; ---------------------------------------------------------------------------

loc_1409FB23E:                          ; CODE XREF: sub_1409FA010+119D↑j
                movzx   eax, word ptr [r13+28h]

loc_1409FB243:                          ; CODE XREF: sub_1409FA010+1184↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_1409FB249:                          ; CODE XREF: sub_1409FA010+117A↑j
                                        ; sub_1409FA010+1195↑j ...
                add     r13, rax
                sub     r10, rdx
                jnz     loc_1409FB15E
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     r12, [rbp+0BE0h+var_C08]
                mov     rbx, [rbp+0BE0h+var_C30]
                mov     r14, [rbp+0BE0h+var_C40]
                mov     r15d, [rbp+0BE0h+var_C28]
                mov     [rsp+0CE0h+var_C90], r13

loc_1409FB26F:                          ; CODE XREF: sub_1409FA010+112E↑j
                mov     eax, r13d
                mov     dword ptr [rbp+0BE0h+var_B10], edx
                sub     eax, r9d
                mov     dword ptr [rbp+0BE0h+var_B10+4], r8d
                mov     [rbp+0BE0h+var_B08], eax
                mov     r10d, [r13+0]
                mov     dword ptr [rbp+0BE0h+arg_8], r10d
                cmp     r10d, 1Ch
                jg      loc_140A00A01
                jz      loc_1409FFFCE
                mov     r8d, 0Ch
                cmp     r10d, r8d
                jg      loc_1409FC844
                jz      loc_140A04549
                xor     eax, eax
                mov     ecx, r10d
                test    r10d, r10d
                jz      loc_1409FC61F
                sub     ecx, 1
                jz      loc_140A0454B
                sub     ecx, 3
                jz      loc_1409FC38A
                sub     ecx, 1
                jz      loc_1409FC054
                lea     r14d, [r8-0Ah]
                sub     ecx, r14d
                jz      loc_1409FBEE4
                sub     ecx, 1
                jz      loc_1409FBA98
                sub     ecx, r14d
                jz      loc_1409FB701
                cmp     ecx, 1
                jnz     loc_140A05767
                cmp     [rsi+980h], rax
                jnz     short loc_1409FB37B

loc_1409FB312:                          ; CODE XREF: sub_1409FA010+13DC↓j
                                        ; sub_1409FA010+5B16↓j ...
                mov     [rsi+824h], eax

loc_1409FB318:                          ; CODE XREF: sub_1409FA010+13BF↓j
                                        ; sub_1409FA010+1474↓j ...
                xor     r15d, r15d

loc_1409FB31B:                          ; CODE XREF: sub_1409FA010+15A1↓j
                                        ; sub_1409FA010+1697↓j ...
                mov     r14d, 8000h

loc_1409FB321:                          ; CODE XREF: sub_1409FA010+BF33↓j
                mov     edx, [rbp+0BE0h+var_BE8]
                cmp     dword ptr [rsi+824h], 0
                lea     ecx, [rdx-1]
                cmovz   ecx, edx
                mov     edx, 1
                add     ecx, edx
                cmp     [rsi+8F8h], r15d
                jnz     loc_140A06669
                lea     r12, [rsi+82Ch]
                mov     eax, [r12]
                mov     [rbp+0BE0h+var_C08], r12
                cmp     [rsi+828h], eax
                jge     loc_140A06669
                mov     rbx, [rbp+0BE0h+var_C30]
                lea     r11d, [rdx+18h]
                mov     r14, [rbp+0BE0h+var_C40]
                mov     r9d, 0FFFFFFFFh
                mov     r15d, [rbp+0BE0h+var_C28]
                jmp     loc_1409FAF4A
; ---------------------------------------------------------------------------

loc_1409FB37B:                          ; CODE XREF: sub_1409FA010+1300↑j
                cmp     [rsi+824h], eax
                jnz     short loc_1409FB3D9
                mov     eax, [rsi+994h]
                mov     ecx, eax
                shl     ecx, 3
                xor     ecx, eax
                and     ecx, 20h
                xor     ecx, eax
                mov     [rsi+994h], ecx

loc_1409FB39B:                          ; CODE XREF: sub_1409FA010+13D8↓j
                test    cl, 4
                jz      loc_1409FB489
                mov     r14d, [r13+8]
                mov     ecx, [r13+10h]
                and     r14d, 0FFFh
                mov     rbx, [r13+8]
                add     r14, 0FFFh
                add     r14, rcx
                and     rbx, 0FFFFFFFFFFFFF000h
                shr     r14, 0Ch
                test    r14, r14
                jz      loc_1409FB318
                xor     edi, edi
                jmp     short loc_1409FB3F6
; ---------------------------------------------------------------------------

loc_1409FB3D9:                          ; CODE XREF: sub_1409FA010+1371↑j
                mov     ecx, [rsi+994h]
                mov     eax, ecx
                shr     eax, 3
                xor     eax, ecx
                test    al, 4
                jz      short loc_1409FB39B

loc_1409FB3EA:                          ; CODE XREF: sub_1409FA010+5B29↓j
                                        ; sub_1409FA010+5B57↓j ...
                xor     eax, eax
                jmp     loc_1409FB312
; ---------------------------------------------------------------------------

loc_1409FB3F1:                          ; CODE XREF: sub_1409FA010+1467↓j
                mov     edx, 1

loc_1409FB3F6:                          ; CODE XREF: sub_1409FA010+13C7↑j
                mov     rax, [rsi+2B0h]
                mov     rcx, rbx
                sub     r14, rdx
                call    j__guard_dispatch_icall_nop
                test    al, al
                jz      short loc_1409FB463
                cmp     [rsi+8F8h], edi
                jnz     short loc_1409FB463
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_1409FB463:                          ; CODE XREF: sub_1409FA010+13FA↑j
                                        ; sub_1409FA010+1402↑j
                add     dword ptr [rsi+828h], 100h
                add     rbx, 1000h
                test    r14, r14
                jnz     loc_1409FB3F1

loc_1409FB47D:                          ; CODE XREF: sub_1409FA010+8EB3↓j
                mov     rdi, 0FFFFFFFFB8797400h
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_1409FB489:                          ; CODE XREF: sub_1409FA010+138E↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_1409FB4C5
                mov     edx, 40h ; '@'

loc_1409FB4BA:                          ; CODE XREF: sub_1409FA010+14B3↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_1409FB4BA

loc_1409FB4C5:                          ; CODE XREF: sub_1409FA010+14A3↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     r12d, 1
                test    r11d, r11d
                jz      short loc_1409FB545
                mov     rsi, 7010008004002001h

loc_1409FB4E4:                          ; CODE XREF: sub_1409FA010+152E↓j
                mov     edx, 8

loc_1409FB4E9:                          ; CODE XREF: sub_1409FA010+14F6↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r12
                jnz     short loc_1409FB4E9
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r10d, eax
                mov     [rbp+0BE0h+var_370], rdx
                xor     r10d, edx
                mov     eax, 0FFFFFFFFh
                and     r10d, 3Fh
                cmovz   r10d, r12d
                add     r11d, eax
                jnz     short loc_1409FB4E4
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FB545:                          ; CODE XREF: sub_1409FA010+14C8↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_1409FB56C
                mov     edx, r8d
                shr     rdx, 3

loc_1409FB556:                          ; CODE XREF: sub_1409FA010+155A↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, r12
                jnz     short loc_1409FB556

loc_1409FB56C:                          ; CODE XREF: sub_1409FA010+153D↑j
                test    r8d, r8d
                jz      short loc_1409FB590
                mov     esi, 0FFFFFFFFh

loc_1409FB576:                          ; CODE XREF: sub_1409FA010+1579↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, r12
                rol     rbx, cl
                add     r8d, esi
                jnz     short loc_1409FB576
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FB590:                          ; CODE XREF: sub_1409FA010+155F↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r15d, r15d
                jmp     short loc_1409FB5A2
; ---------------------------------------------------------------------------

loc_1409FB59C:                          ; CODE XREF: sub_1409FA010+1595↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_1409FB5A2:                          ; CODE XREF: sub_1409FA010+158A↑j
                test    rax, rax
                jnz     short loc_1409FB59C
                mov     edx, [r13+14h]
                btr     ebx, 1Fh
                cmp     ebx, edx
                jz      loc_1409FB31B
                mov     ecx, [r13+10h]
                mov     r8, [r13+8]
                test    rcx, rcx
                jz      loc_1409FB67C
                mov     eax, [rsi+994h]
                mov     r9d, 40h ; '@'
                test    r9b, al
                jz      loc_1409FB67C
                mov     r12, cr8
                lea     eax, [r9-3Eh]
                mov     cr8, rax
                mov     r14, r8
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, r8
                or      rax, 0FFFh
                mov     [rbp+0BE0h+arg_8], rax
                lea     r13, [r14-1]

loc_1409FB60B:                          ; CODE XREF: sub_1409FA010+1654↓j
                movzx   r15d, r12b

loc_1409FB60F:                          ; CODE XREF: sub_1409FA010+1639↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_1409FB64B
                mov     eax, 1
                cmp     r12b, al
                ja      short loc_1409FB64F
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_1409FB60F
; ---------------------------------------------------------------------------

loc_1409FB64B:                          ; CODE XREF: sub_1409FA010+1615↑j
                test    eax, eax
                js      short loc_1409FB66F

loc_1409FB64F:                          ; CODE XREF: sub_1409FA010+161F↑j
                add     r14, 1000h
                add     r13, 1000h
                cmp     r13, [rbp+0BE0h+arg_8]
                jnz     short loc_1409FB60B

loc_1409FB666:                          ; CODE XREF: sub_1409FA010+280A↓j
                mov     cr8, r15
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_1409FB66F:                          ; CODE XREF: sub_1409FA010+163D↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]
                mov     edx, [r13+14h]

loc_1409FB67C:                          ; CODE XREF: sub_1409FA010+15B2↑j
                                        ; sub_1409FA010+15C7↑j
                mov     eax, [rsi+8F8h]
                xor     r15d, r15d
                test    eax, eax
                jnz     short loc_1409FB6A1
                mov     ecx, ebx
                mov     eax, edx

loc_1409FB68D:                          ; CODE XREF: sub_1409FA010+282F↓j
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_1409FB6A1:                          ; CODE XREF: sub_1409FA010+1677↑j
                                        ; sub_1409FA010+2827↓j
                mov     rcx, [r13+8]

loc_1409FB6A5:                          ; CODE XREF: sub_1409FA010+C654↓j
                test    eax, eax
                jnz     loc_1409FB31B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx

loc_1409FB6E7:                          ; CODE XREF: sub_1409FA010+59B2↓j
                                        ; sub_1409FA010+8FBB↓j
                mov     eax, 1
                mov     [rsi+8F8h], eax

loc_1409FB6F2:                          ; CODE XREF: sub_1409FA010+6222↓j
                                        ; sub_1409FA010+71F4↓j ...
                xor     edx, edx
                mov     rcx, rsi
                call    sub_140A113CC
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_1409FB701:                          ; CODE XREF: sub_1409FA010+12EA↑j
                cmp     [r13+18h], eax
                jz      short loc_1409FB748
                cmp     [rsi+980h], rax
                jz      loc_1409FB8B9
                mov     ecx, [rsi+994h]
                test    cl, 4
                jnz     loc_1409FB8B9
                lea     rax, [rsi+824h]
                xor     r15d, r15d
                cmp     [rax], r15d
                jnz     loc_1409FB8A8
                mov     eax, ecx
                shl     eax, 3
                xor     eax, ecx
                and     eax, 20h
                xor     eax, ecx
                mov     [rsi+994h], eax

loc_1409FB748:                          ; CODE XREF: sub_1409FA010+16F5↑j
                                        ; sub_1409FA010+189B↓j
                mov     edx, [r13+1Ch]
                lea     rax, [rsi+824h]
                mov     r14d, [rax]
                lea     rcx, [r13+30h]
                shl     r14, 4
                add     r14, rcx
                shl     rdx, 4
                add     rdx, rcx
                mov     [rbp+0BE0h+var_C60], rax
                mov     [rbp+0BE0h+arg_8], rdx
                mov     [rsp+0CE0h+var_C88], r14

loc_1409FB778:                          ; CODE XREF: sub_1409FA010+19B4↓j
                xor     eax, eax
                cmp     [r14], eax
                jl      loc_1409FB9A4
                mov     rdi, [r14+8]
                mov     r8d, [r14+4]
                mov     r9, rdi
                add     [rsi+828h], r8d
                mov     rax, rdi
                mov     r11d, [rsi+814h]
                mov     r12d, r8d
                mov     r15, [rsi+818h]
                lea     rcx, [rdi+r8]
                cmp     rdi, rcx
                jnb     short loc_1409FB7C3
                mov     r10d, 40h ; '@'

loc_1409FB7B8:                          ; CODE XREF: sub_1409FA010+17B1↓j
                prefetchnta byte ptr [rax]
                add     rax, r10
                cmp     rax, rcx
                jb      short loc_1409FB7B8

loc_1409FB7C3:                          ; CODE XREF: sub_1409FA010+17A0↑j
                mov     r10d, r8d
                mov     rbx, r15
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_1409FB84B
                mov     esi, 1
                mov     r12d, 0FFFFFFFFh
                mov     r14, 7010008004002001h

loc_1409FB7E7:                          ; CODE XREF: sub_1409FA010+1825↓j
                mov     eax, 8

loc_1409FB7EC:                          ; CODE XREF: sub_1409FA010+17F3↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, rsi
                jnz     short loc_1409FB7EC
                mov     rcx, r9
                sub     rcx, rdi
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     eax, edx
                mov     [rbp+0BE0h+var_368], rdx
                xor     r11d, eax
                and     r11d, 3Fh
                cmovz   r11d, esi
                add     r10d, r12d
                jnz     short loc_1409FB7E7
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     r12, r8
                mov     r14, [rsp+0CE0h+var_C88]
                mov     rdx, [rbp+0BE0h+arg_8]

loc_1409FB84B:                          ; CODE XREF: sub_1409FA010+17C0↑j
                and     r8d, 7Fh
                mov     r10d, 1
                cmp     r8d, 8
                jb      short loc_1409FB878
                mov     eax, r8d
                shr     rax, 3

loc_1409FB862:                          ; CODE XREF: sub_1409FA010+1866↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, r10
                jnz     short loc_1409FB862

loc_1409FB878:                          ; CODE XREF: sub_1409FA010+1849↑j
                test    r8d, r8d
                jz      short loc_1409FB89C
                mov     esi, 0FFFFFFFFh

loc_1409FB882:                          ; CODE XREF: sub_1409FA010+1885↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     rbx, rax
                add     r9, r10
                rol     rbx, cl
                add     r8d, esi
                jnz     short loc_1409FB882
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FB89C:                          ; CODE XREF: sub_1409FA010+186B↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r15d, r15d
                jmp     short loc_1409FB8D1
; ---------------------------------------------------------------------------

loc_1409FB8A8:                          ; CODE XREF: sub_1409FA010+1720↑j
                test    cl, 20h
                jz      loc_1409FB748
                mov     r14d, r15d
                jmp     loc_1409FBA90
; ---------------------------------------------------------------------------

loc_1409FB8B9:                          ; CODE XREF: sub_1409FA010+16FE↑j
                                        ; sub_1409FA010+170D↑j
                mov     r14d, eax
                xor     r15d, r15d
                lea     rax, [rsi+824h]
                jmp     loc_1409FBA90
; ---------------------------------------------------------------------------

loc_1409FB8CB:                          ; CODE XREF: sub_1409FA010+18C4↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_1409FB8D1:                          ; CODE XREF: sub_1409FA010+1896↑j
                test    rax, rax
                jnz     short loc_1409FB8CB
                mov     ecx, [r14]
                btr     ebx, 1Fh
                mov     eax, ecx
                btr     eax, 1Fh
                cmp     ebx, eax
                jz      loc_1409FBA73
                test    r12, r12
                jz      loc_1409FB9F3
                mov     eax, [rsi+994h]
                mov     edx, 40h ; '@'
                test    dl, al
                jz      loc_1409FB9F3
                mov     r13, cr8
                lea     eax, [rdx-3Eh]
                mov     cr8, rax
                mov     r15, rdi
                lea     rax, [rdi-1]
                and     r15, 0FFFFFFFFFFFFF000h
                add     rax, r12
                or      rax, 0FFFh
                mov     [rbp+0BE0h+var_C50], rax
                lea     rax, [r15-1]
                mov     [rsp+0CE0h+var_C88], rax

loc_1409FB936:                          ; CODE XREF: sub_1409FA010+1983↓j
                movzx   r12d, r13b

loc_1409FB93A:                          ; CODE XREF: sub_1409FA010+1964↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_1409FB976
                mov     eax, 1
                cmp     r13b, al
                ja      short loc_1409FB97A
                movzx   r12d, r13b
                mov     cr8, r12
                mov     al, [r15]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_1409FB93A
; ---------------------------------------------------------------------------

loc_1409FB976:                          ; CODE XREF: sub_1409FA010+1940↑j
                test    eax, eax
                js      short loc_1409FB9E7

loc_1409FB97A:                          ; CODE XREF: sub_1409FA010+194A↑j
                mov     rax, [rsp+0CE0h+var_C88]
                mov     ecx, 1000h
                add     rax, rcx
                add     r15, rcx
                mov     [rsp+0CE0h+var_C88], rax
                cmp     rax, [rbp+0BE0h+var_C50]
                jnz     short loc_1409FB936
                mov     cr8, r12

loc_1409FB999:                          ; CODE XREF: sub_1409FA010+19F3↓j
                                        ; sub_1409FA010+1A0D↓j ...
                mov     rdx, [rbp+0BE0h+arg_8]
                mov     r12, [rbp+0BE0h+var_C08]

loc_1409FB9A4:                          ; CODE XREF: sub_1409FA010+176D↑j
                xor     r15d, r15d

loc_1409FB9A7:                          ; CODE XREF: sub_1409FA010+1A67↓j
                add     r14, 10h
                mov     [rsp+0CE0h+var_C88], r14
                cmp     r14, rdx
                jnb     short loc_1409FB9CD
                mov     eax, [r12]
                mov     r13, [rsp+0CE0h+var_C90]
                cmp     [rsi+828h], eax
                jl      loc_1409FB778
                cmp     r14, rdx

loc_1409FB9CD:                          ; CODE XREF: sub_1409FA010+19A3↑j
                mov     rdi, 0FFFFFFFFB8797400h
                jnz     loc_1409FBA7C
                xor     eax, eax
                mov     r14d, eax
                xor     r15d, r15d
                jmp     loc_1409FBA8C
; ---------------------------------------------------------------------------

loc_1409FB9E7:                          ; CODE XREF: sub_1409FA010+1968↑j
                mov     cr8, r12
                mov     ecx, [r14]
                mov     r13, [rsp+0CE0h+var_C90]

loc_1409FB9F3:                          ; CODE XREF: sub_1409FA010+18DE↑j
                                        ; sub_1409FA010+18F1↑j
                mov     eax, ecx
                xor     edx, edx
                mov     ecx, [rsi+8F8h]
                btr     eax, 1Fh
                test    ecx, ecx
                jnz     short loc_1409FB999
                mov     ecx, ebx
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     ecx, [rsi+8F8h]
                test    ecx, ecx
                jnz     loc_1409FB999
                mov     rax, 0A3A03F5891C8B4E8h
                mov     rcx, rsi
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                lea     eax, [rdx+1]
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                jmp     loc_1409FB999
; ---------------------------------------------------------------------------

loc_1409FBA73:                          ; CODE XREF: sub_1409FA010+18D5↑j
                mov     r12, [rbp+0BE0h+var_C08]
                jmp     loc_1409FB9A7
; ---------------------------------------------------------------------------

loc_1409FBA7C:                          ; CODE XREF: sub_1409FA010+19C4↑j
                mov     rax, [rsp+0CE0h+var_C90]
                add     rax, 30h ; '0'
                sub     r14, rax
                sar     r14, 4

loc_1409FBA8C:                          ; CODE XREF: sub_1409FA010+19D2↑j
                mov     rax, [rbp+0BE0h+var_C60]

loc_1409FBA90:                          ; CODE XREF: sub_1409FA010+18A4↑j
                                        ; sub_1409FA010+18B6↑j
                mov     [rax], r14d
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_1409FBA98:                          ; CODE XREF: sub_1409FA010+12E1↑j
                mov     rbx, [r13+18h]
                mov     r12d, 1
                mov     rcx, [rsi+6F0h]
                mov     r14, 0B3B74BDEE4453415h
                mov     rax, [rsi+720h]
                add     rcx, rbx
                movzx   edx, word ptr [r13+22h]
                mov     r15, 0A3A03F5891C8B4E8h
                cmp     [rcx+rax], dx
                jz      short loc_1409FBB1A
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FBB1A
                lea     rax, [rsi+r15]
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rcx, rsi
                lea     rax, [r14+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC
                movzx   edx, word ptr [r13+22h]

loc_1409FBB1A:                          ; CODE XREF: sub_1409FA010+1AC0↑j
                                        ; sub_1409FA010+1ACA↑j
                test    [rsi+728h], dx
                jnz     short loc_1409FBB75
                mov     rcx, [rsi+6F8h]
                add     rcx, rbx
                cmp     [rcx], rcx
                jz      short loc_1409FBB75
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FBB75
                lea     rax, [rsi+r15]
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rcx, rsi
                lea     rax, [r14+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_1409FBB75:                          ; CODE XREF: sub_1409FA010+1B11↑j
                                        ; sub_1409FA010+1B20↑j ...
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r11d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_1409FBBB1
                mov     edx, 40h ; '@'

loc_1409FBBA6:                          ; CODE XREF: sub_1409FA010+1B9F↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_1409FBBA6

loc_1409FBBB1:                          ; CODE XREF: sub_1409FA010+1B8F↑j
                mov     r10d, r8d
                mov     rbx, r15
                shr     r10d, 7
                mov     r13d, 0FFFFFFFFh
                test    r10d, r10d
                jz      short loc_1409FBC2B
                mov     rsi, 7010008004002001h

loc_1409FBBD0:                          ; CODE XREF: sub_1409FA010+1C14↓j
                mov     edx, 8

loc_1409FBBD5:                          ; CODE XREF: sub_1409FA010+1BE2↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r12
                jnz     short loc_1409FBBD5
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                mov     [rbp+0BE0h+var_360], rdx
                xor     edx, eax
                xor     r11d, edx
                and     r11d, 3Fh
                cmovz   r11d, r12d
                add     r10d, r13d
                jnz     short loc_1409FBBD0
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FBC2B:                          ; CODE XREF: sub_1409FA010+1BB4↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_1409FBC52
                mov     edx, r8d
                shr     rdx, 3

loc_1409FBC3C:                          ; CODE XREF: sub_1409FA010+1C40↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, r12
                jnz     short loc_1409FBC3C

loc_1409FBC52:                          ; CODE XREF: sub_1409FA010+1C23↑j
                test    r8d, r8d
                jz      short loc_1409FBC6C

loc_1409FBC57:                          ; CODE XREF: sub_1409FA010+1C5A↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     rbx, rax
                add     r9, r12
                rol     rbx, cl
                add     r8d, r13d
                jnz     short loc_1409FBC57

loc_1409FBC6C:                          ; CODE XREF: sub_1409FA010+1C45↑j
                mov     rax, rbx
                jmp     short loc_1409FBC73
; ---------------------------------------------------------------------------

loc_1409FBC71:                          ; CODE XREF: sub_1409FA010+1C6A↓j
                xor     ebx, eax

loc_1409FBC73:                          ; CODE XREF: sub_1409FA010+1C5F↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_1409FBC71
                mov     r14, [rsp+0CE0h+var_C90]
                btr     ebx, 1Fh
                mov     r13d, eax
                cmp     ebx, [r14+14h]
                jz      loc_1409FBD70
                cmp     [r14], eax
                jnz     short loc_1409FBC9F
                cmp     [r14+18h], eax
                cmovnz  r13d, r12d

loc_1409FBC9F:                          ; CODE XREF: sub_1409FA010+1C85↑j
                mov     ecx, [r14+10h]
                mov     rdx, [r14+8]
                test    rcx, rcx
                jz      loc_1409FBE5F
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_1409FBE5F
                mov     r12, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C88], rax
                lea     rax, [r14-1]
                mov     [rbp+0BE0h+arg_8], rax

loc_1409FBCF8:                          ; CODE XREF: sub_1409FA010+1D55↓j
                movzx   r15d, r12b

loc_1409FBCFC:                          ; CODE XREF: sub_1409FA010+1D2D↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_1409FBD3F
                test    r13d, r13d
                jnz     loc_1409FBE56
                lea     eax, [r13+1]
                cmp     r12b, al
                ja      short loc_1409FBD47
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r13+2]
                mov     cr8, rax
                jmp     short loc_1409FBCFC
; ---------------------------------------------------------------------------

loc_1409FBD3F:                          ; CODE XREF: sub_1409FA010+1D02↑j
                test    eax, eax
                js      loc_1409FBE56

loc_1409FBD47:                          ; CODE XREF: sub_1409FA010+1D14↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     ecx, 1000h
                add     rax, rcx
                add     r14, rcx
                mov     [rbp+0BE0h+arg_8], rax
                cmp     rax, [rsp+0CE0h+var_C88]
                jnz     short loc_1409FBCF8
                mov     cr8, r15
                mov     r14, [rsp+0CE0h+var_C90]

loc_1409FBD70:                          ; CODE XREF: sub_1409FA010+1C7C↑j
                mov     r13, 0A3A03F5891C8B4E8h
                mov     r12, 0B3B74BDEE4453415h
                mov     ebx, 1

loc_1409FBD89:                          ; CODE XREF: sub_1409FA010+1E94↓j
                                        ; sub_1409FA010+1ECF↓j
                lea     rax, [r14+30h]
                xor     r9d, r9d
                mov     [rbp+0BE0h+var_870], rax
                lea     rcx, [rbp+0BE0h+var_878]
                movzx   eax, word ptr [r14+20h]
                xor     r8d, r8d
                mov     [rbp+0BE0h+var_878], ax
                xor     edx, edx
                mov     [rbp+0BE0h+var_876], ax
                lea     rax, [rbp+0BE0h+var_970]
                mov     [rsp+0CE0h+var_CA8], rax
                xor     eax, eax
                mov     [rsp+0CE0h+var_CB0], rax
                mov     byte ptr [rsp+0CE0h+var_CB8], al
                mov     rax, [rsi+508h]
                mov     [rsp+0CE0h+var_CC0], rax
                mov     rax, [rsi+1E8h]
                call    j__guard_dispatch_icall_nop
                xor     r15d, r15d
                test    eax, eax
                js      loc_1409FB31B
                mov     rcx, [rbp+0BE0h+var_970]
                cmp     rcx, [r14+18h]
                jz      short loc_1409FBE45
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FBE45
                lea     rax, [rsi+r13]
                xor     edx, edx
                mov     [rsi+900h], rax
                lea     rax, [r14+r12]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], ebx
                call    sub_140A113CC
                mov     rcx, [rbp+0BE0h+var_970]

loc_1409FBE45:                          ; CODE XREF: sub_1409FA010+1DEB↑j
                                        ; sub_1409FA010+1DF5↑j ...
                mov     rax, [rsi+1E0h]
                call    j__guard_dispatch_icall_nop
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_1409FBE56:                          ; CODE XREF: sub_1409FA010+1D07↑j
                                        ; sub_1409FA010+1D31↑j
                mov     cr8, r15
                mov     r14, [rsp+0CE0h+var_C90]

loc_1409FBE5F:                          ; CODE XREF: sub_1409FA010+1C9A↑j
                                        ; sub_1409FA010+1CAF↑j
                mov     eax, [rsi+8F8h]
                xor     edx, edx
                mov     ecx, [r14+14h]
                test    eax, eax
                jnz     short loc_1409FBE85
                mov     eax, ebx
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_1409FBE85:                          ; CODE XREF: sub_1409FA010+1E5D↑j
                mov     rcx, [r14+8]
                mov     r13, 0A3A03F5891C8B4E8h
                mov     r12, 0B3B74BDEE4453415h
                mov     ebx, 1
                test    eax, eax
                jnz     loc_1409FBD89
                lea     rax, [rsi+r13]
                mov     [rsi+900h], rax
                lea     rax, [r14+r12]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], ebx
                call    sub_140A113CC
                jmp     loc_1409FBD89
; ---------------------------------------------------------------------------

loc_1409FBEE4:                          ; CODE XREF: sub_1409FA010+12D8↑j
                mov     rax, [rsi+1A0h]
                lea     rcx, [rbp+0BE0h+var_1A0]
                mov     edx, [r13+1Ch]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+1D0h]
                lea     rdx, [rbp+0BE0h+var_320]
                lea     rcx, [rbp+0BE0h+var_1A0]
                call    j__guard_dispatch_icall_nop
                xor     eax, eax
                mov     ebx, eax
                cmp     [r13+18h], eax
                jbe     loc_1409FC02F

loc_1409FBF23:                          ; CODE XREF: sub_1409FA010+2012↓j
                mov     eax, ebx
                lea     r10, [rax+rax*2]
                mov     r9d, [r13+r10*8+40h]
                test    [rsi+87Bh], r14b
                jz      short loc_1409FBF5A
                mov     eax, 0C0000082h
                cmp     r9d, eax
                jnz     short loc_1409FBF5A
                mov     eax, gs:1A4h
                cmp     eax, [rsi+8F0h]
                jnz     short loc_1409FBF5A
                mov     rdx, [rsi+8E8h]
                jmp     short loc_1409FBF66
; ---------------------------------------------------------------------------

loc_1409FBF5A:                          ; CODE XREF: sub_1409FA010+1F25↑j
                                        ; sub_1409FA010+1F2F↑j ...
                mov     ecx, r9d
                rdmsr
                shl     rdx, 20h
                or      rdx, rax

loc_1409FBF66:                          ; CODE XREF: sub_1409FA010+1F48↑j
                mov     r8, [r13+r10*8+30h]
                mov     rcx, [r13+r10*8+38h]
                and     rdx, r8
                cmp     rdx, rcx
                jz      loc_1409FBFFE
                mov     r8d, [r13+1Ch]
                mov     eax, [rsi+8F8h]
                shl     r8, 20h
                or      r8, r9
                test    eax, eax
                jnz     loc_1409FC01C
                mov     rax, [rsi+590h]
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_1409FC01C
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], r8
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                jmp     short loc_1409FC01C
; ---------------------------------------------------------------------------

loc_1409FBFFE:                          ; CODE XREF: sub_1409FA010+1F66↑j
                test    dword ptr [rsi+994h], 200h
                jz      short loc_1409FC01C
                cmp     r8, 0FFFFFFFFFFFFFFFFh
                jnz     short loc_1409FC01C
                mov     rax, rdx
                mov     ecx, r9d
                shr     rdx, 20h
                wrmsr

loc_1409FC01C:                          ; CODE XREF: sub_1409FA010+1F7F↑j
                                        ; sub_1409FA010+1F9B↑j ...
                inc     ebx
                cmp     ebx, [r13+18h]
                jb      loc_1409FBF23
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FC02F:                          ; CODE XREF: sub_1409FA010+1F0D↑j
                mov     rax, [rsi+198h]
                lea     rcx, [rbp+0BE0h+var_320]
                call    j__guard_dispatch_icall_nop
                mov     eax, [r13+18h]
                shl     eax, 0Fh

loc_1409FC049:                          ; CODE XREF: sub_1409FA010+2375↓j
                                        ; sub_1409FA010+5FB9↓j
                add     [rsi+828h], eax
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_1409FC054:                          ; CODE XREF: sub_1409FA010+12CB↑j
                mov     ecx, [rsi+830h]
                test    dl, cl
                jz      loc_1409FB318
                mov     r12d, 40000000h
                test    [rsi+990h], r12d
                jnz     short loc_1409FC087
                mov     r14d, eax
                and     ecx, 3
                cmp     cl, 3
                setz    r14b
                mov     dword ptr [rbp+0BE0h+arg_8], r14d
                jmp     short loc_1409FC0DB
; ---------------------------------------------------------------------------

loc_1409FC087:                          ; CODE XREF: sub_1409FA010+205F↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_358], rdx
                xor     rcx, rax
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                lea     rax, [rdx+rdx*2]
                cmp     rcx, rax
                mov     eax, 0
                setz    al
                mov     dword ptr [rbp+0BE0h+arg_8], eax
                xor     eax, eax

loc_1409FC0DB:                          ; CODE XREF: sub_1409FA010+2075↑j
                mov     rbx, [rsi+548h]
                mov     r15d, eax
                mov     [rbp+0BE0h+var_C58], eax
                mov     rax, [rsi+178h]
                call    j__guard_dispatch_icall_nop
                test    [rsi+990h], r12d
                jnz     short loc_1409FC116
                mov     ecx, [rsi+950h]
                cmp     ecx, 7
                jnb     short loc_1409FC116
                mov     r12d, 1
                mov     r14d, r12d
                shl     r14b, cl
                jmp     short loc_1409FC134
; ---------------------------------------------------------------------------

loc_1409FC116:                          ; CODE XREF: sub_1409FA010+20EB↑j
                                        ; sub_1409FA010+20F6↑j
                mov     rax, [rsi+128h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop
                mov     r14b, 80h
                mov     r12d, 1

loc_1409FC134:                          ; CODE XREF: sub_1409FA010+2104↑j
                mov     rax, [rsi+138h]
                xor     edx, edx
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     r8, [rsi+520h]
                mov     rdx, [r8]
                cmp     rdx, r8
                jz      short loc_1409FC179

loc_1409FC154:                          ; CODE XREF: sub_1409FA010+2163↓j
                mov     rax, [rsi+6B8h]
                mov     rcx, rdx
                sub     rcx, [rsi+6D0h]
                lock or [rcx+rax], r14b
                mov     rdx, [rdx]
                add     r15d, r12d
                cmp     rdx, r8
                jnz     short loc_1409FC154
                mov     [rbp+0BE0h+var_C58], r15d

loc_1409FC179:                          ; CODE XREF: sub_1409FA010+2142↑j
                mov     rax, [rsi+550h]
                mov     r15d, 4
                mov     edi, dword ptr [rbp+0BE0h+arg_8]
                mov     r13, [rax]
                mov     rax, [rsi+730h]
                mov     ebx, [rax+r13]
                mov     [rsp+0CE0h+var_C88], rbx

loc_1409FC19F:                          ; CODE XREF: sub_1409FA010+2320↓j
                mov     rax, [rsi+108h]
                mov     rdx, r15
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r12, rax
                xor     eax, eax
                test    r12, r12
                jz      loc_1409FC329
                mov     rbx, [r12]
                sar     rbx, 10h
                and     rbx, 0FFFFFFFFFFFFFFF0h
                mov     al, [rbx]
                and     al, 7Fh
                cmp     al, 3
                jnz     loc_1409FC26B
                mov     r8, [rsi+6B8h]
                mov     rdx, r8
                test    [rbx+r8], r14b
                jnz     short loc_1409FC25D
                mov     rax, [rsi+6C0h]
                mov     ecx, [rbx+rax]
                test    [rsi+6D8h], ecx
                jz      short loc_1409FC25D
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FC25D
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                mov     rdx, [rsi+6B8h]

loc_1409FC25D:                          ; CODE XREF: sub_1409FA010+21D5↑j
                                        ; sub_1409FA010+21E7↑j ...
                mov     al, r14b
                not     al
                lock and [rbx+rdx], al
                jmp     loc_1409FC312
; ---------------------------------------------------------------------------

loc_1409FC26B:                          ; CODE XREF: sub_1409FA010+21C1↑j
                cmp     al, 6
                jnz     short loc_1409FC2B1
                test    edi, edi
                jz      loc_1409FC312
                mov     rcx, [rsi+680h]
                mov     rax, [rbx+rcx+20h]
                cmp     rax, [rsi+320h]
                jz      short loc_1409FC295
                cmp     rax, [rsi+328h]
                jnz     short loc_1409FC2B5

loc_1409FC295:                          ; CODE XREF: sub_1409FA010+227A↑j
                mov     rax, [rsi+330h]
                cmp     [rbx+rcx+30h], rax
                jnz     short loc_1409FC2B5
                mov     rax, [rsi+338h]
                cmp     [rbx+rcx+28h], rax
                jmp     short loc_1409FC2B3
; ---------------------------------------------------------------------------

loc_1409FC2B1:                          ; CODE XREF: sub_1409FA010+225D↑j
                test    al, al

loc_1409FC2B3:                          ; CODE XREF: sub_1409FA010+229F↑j
                jz      short loc_1409FC312

loc_1409FC2B5:                          ; CODE XREF: sub_1409FA010+2283↑j
                                        ; sub_1409FA010+2291↑j
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FC312
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_1409FC312:                          ; CODE XREF: sub_1409FA010+2256↑j
                                        ; sub_1409FA010+2261↑j ...
                mov     rax, [rsi+120h]
                mov     rdx, r12
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rbx, [rsp+0CE0h+var_C88]

loc_1409FC329:                          ; CODE XREF: sub_1409FA010+21A9↑j
                add     r15, 4
                cmp     r15, rbx
                jb      loc_1409FC19F
                mov     rdi, 0FFFFFFFFB8797400h
                cmp     r14b, 80h
                jnz     short loc_1409FC358
                mov     rax, [rsi+130h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop

loc_1409FC358:                          ; CODE XREF: sub_1409FA010+2331↑j
                mov     rcx, [rsi+548h]
                xor     edx, edx
                mov     rax, [rsi+140h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+180h]
                call    j__guard_dispatch_icall_nop
                mov     eax, [rbp+0BE0h+var_C58]
                shr     rbx, 2
                add     eax, ebx

loc_1409FC382:                          ; CODE XREF: sub_1409FA010+260A↓j
                                        ; sub_1409FA010+2B3E↓j
                shl     eax, 8
                jmp     loc_1409FC049
; ---------------------------------------------------------------------------

loc_1409FC38A:                          ; CODE XREF: sub_1409FA010+12C2↑j
                mov     eax, [rsi+830h]
                test    dl, al
                jnz     loc_1409FB318
                mov     rbx, [rsi+548h]
                xor     eax, eax
                mov     r13d, eax
                mov     [rbp+0BE0h+var_C58], eax
                mov     rax, [rsi+178h]
                call    j__guard_dispatch_icall_nop
                test    dword ptr [rsi+990h], 40000000h
                jnz     short loc_1409FC3D5
                mov     ecx, [rsi+950h]
                cmp     ecx, 7
                jnb     short loc_1409FC3D5
                mov     r14d, 1
                shl     r14b, cl
                jmp     short loc_1409FC3ED
; ---------------------------------------------------------------------------

loc_1409FC3D5:                          ; CODE XREF: sub_1409FA010+23AD↑j
                                        ; sub_1409FA010+23B8↑j
                mov     rax, [rsi+128h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop
                mov     r14b, 80h

loc_1409FC3ED:                          ; CODE XREF: sub_1409FA010+23C3↑j
                mov     rax, [rsi+138h]
                xor     edx, edx
                mov     rcx, rbx
                mov     dword ptr [rbp+0BE0h+arg_8], r14d
                call    j__guard_dispatch_icall_nop
                mov     r12, [rsi+520h]
                mov     r15, [r12]
                cmp     r15, r12
                jz      loc_1409FC4D1
                mov     rdi, [rsp+0CE0h+var_C90]

loc_1409FC41E:                          ; CODE XREF: sub_1409FA010+24B0↓j
                mov     rbx, r15
                sub     rbx, [rsi+6D0h]
                cmp     r14b, 80h
                jz      short loc_1409FC4AB
                mov     rax, [rsi+6B8h]
                test    [rbx+rax], r14b
                jz      short loc_1409FC4AB
                mov     rax, [rsi+6C0h]
                mov     ecx, [rbx+rax]
                test    [rsi+6D8h], ecx
                jz      short loc_1409FC4AB
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FC4AB
                mov     ecx, 1
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rdi
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rdi]
                mov     [rsi+910h], rax
                mov     rax, rbx
                or      rax, rcx
                mov     [rsi+918h], rax
                mov     [rsi+8F8h], ecx
                mov     rcx, rsi
                call    sub_140A113CC

loc_1409FC4AB:                          ; CODE XREF: sub_1409FA010+241C↑j
                                        ; sub_1409FA010+2429↑j ...
                mov     rax, [rsi+6B8h]
                lock or [rbx+rax], r14b
                mov     r15, [r15]
                inc     r13d
                cmp     r15, r12
                jnz     loc_1409FC41E
                mov     [rbp+0BE0h+var_C58], r13d
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FC4D1:                          ; CODE XREF: sub_1409FA010+2403↑j
                mov     rcx, [rsi+500h]
                mov     rax, cr8
                mov     [rsp+0CE0h+var_C88], rax
                mov     eax, 0Ch
                mov     cr8, rax
                mov     rax, [rsi+148h]
                lea     rdx, [rbp+0BE0h+var_128]
                call    j__guard_dispatch_icall_nop
                mov     r13, [rsi+4F8h]
                mov     r15, [r13+0]
                cmp     r15, r13
                jz      loc_1409FC5BF
                mov     rdi, [rsp+0CE0h+var_C90]
                mov     r12b, r14b
                movzx   edx, r14b
                not     r12b
                mov     [rbp+0BE0h+var_BF0], edx
                xor     r14d, r14d

loc_1409FC526:                          ; CODE XREF: sub_1409FA010+259B↓j
                mov     rcx, [rsi+6B8h]
                mov     rbx, r15
                sub     rbx, [rsi+6B0h]
                movsx   eax, byte ptr [rcx+rbx]
                test    edx, eax
                jnz     short loc_1409FC5A0
                cmp     [rsi+8F8h], r14d
                jnz     short loc_1409FC5A0
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rdi
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rdi]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                mov     rcx, [rsi+6B8h]
                mov     edx, [rbp+0BE0h+var_BF0]

loc_1409FC5A0:                          ; CODE XREF: sub_1409FA010+252D↑j
                                        ; sub_1409FA010+2536↑j
                lock and [rbx+rcx], r12b
                mov     r15, [r15]
                cmp     r15, r13
                jnz     loc_1409FC526
                mov     r14d, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FC5BF:                          ; CODE XREF: sub_1409FA010+24FB↑j
                mov     rax, [rsi+188h]
                lea     rcx, [rbp+0BE0h+var_128]
                call    j__guard_dispatch_icall_nop
                movzx   eax, byte ptr [rsp+0CE0h+var_C88]
                mov     cr8, rax
                cmp     r14b, 80h
                jnz     short loc_1409FC5F6
                mov     rax, [rsi+130h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop

loc_1409FC5F6:                          ; CODE XREF: sub_1409FA010+25CF↑j
                mov     rcx, [rsi+548h]
                xor     edx, edx
                mov     rax, [rsi+140h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+180h]
                call    j__guard_dispatch_icall_nop
                mov     eax, [rbp+0BE0h+var_C58]
                jmp     loc_1409FC382
; ---------------------------------------------------------------------------

loc_1409FC61F:                          ; CODE XREF: sub_1409FA010+12B0↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r11d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_1409FC65B
                mov     edx, 40h ; '@'

loc_1409FC650:                          ; CODE XREF: sub_1409FA010+2649↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_1409FC650

loc_1409FC65B:                          ; CODE XREF: sub_1409FA010+2639↑j
                mov     r10d, r8d
                mov     rbx, r15
                shr     r10d, 7
                mov     r12d, 1
                test    r10d, r10d
                jz      short loc_1409FC6DA
                mov     rsi, 7010008004002001h

loc_1409FC67A:                          ; CODE XREF: sub_1409FA010+26C3↓j
                mov     edx, 8

loc_1409FC67F:                          ; CODE XREF: sub_1409FA010+268C↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r12
                jnz     short loc_1409FC67F
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                mov     [rbp+0BE0h+var_350], rdx
                xor     edx, eax
                xor     r11d, edx
                mov     eax, 0FFFFFFFFh
                and     r11d, 3Fh
                cmovz   r11d, r12d
                add     r10d, eax
                jnz     short loc_1409FC67A
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FC6DA:                          ; CODE XREF: sub_1409FA010+265E↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_1409FC701
                mov     edx, r8d
                shr     rdx, 3

loc_1409FC6EB:                          ; CODE XREF: sub_1409FA010+26EF↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, r12
                jnz     short loc_1409FC6EB

loc_1409FC701:                          ; CODE XREF: sub_1409FA010+26D2↑j
                test    r8d, r8d
                jz      short loc_1409FC725
                mov     esi, 0FFFFFFFFh

loc_1409FC70B:                          ; CODE XREF: sub_1409FA010+270E↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     rbx, rax
                add     r9, r12
                rol     rbx, cl
                add     r8d, esi
                jnz     short loc_1409FC70B
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FC725:                          ; CODE XREF: sub_1409FA010+26F4↑j
                mov     rax, rbx
                jmp     short loc_1409FC72C
; ---------------------------------------------------------------------------

loc_1409FC72A:                          ; CODE XREF: sub_1409FA010+2723↓j
                xor     ebx, eax

loc_1409FC72C:                          ; CODE XREF: sub_1409FA010+2718↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_1409FC72A
                btr     ebx, 1Fh
                mov     r12d, eax
                cmp     ebx, [r13+14h]
                jz      loc_1409FB318
                cmp     [r13+0], eax
                jnz     short loc_1409FC757
                cmp     [r13+18h], eax
                lea     ecx, [rax+1]
                cmovnz  r12d, ecx

loc_1409FC757:                          ; CODE XREF: sub_1409FA010+273A↑j
                mov     ecx, [r13+10h]
                mov     rdx, [r13+8]
                test    rcx, rcx
                jz      loc_1409FC828
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_1409FC828
                mov     r13, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C88], rax
                lea     rax, [r14-1]
                mov     [rbp+0BE0h+arg_8], rax

loc_1409FC7B0:                          ; CODE XREF: sub_1409FA010+2808↓j
                movzx   r15d, r13b

loc_1409FC7B4:                          ; CODE XREF: sub_1409FA010+27E3↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_1409FC7F5
                test    r12d, r12d
                jnz     short loc_1409FC81F
                lea     eax, [r12+1]
                cmp     r13b, al
                ja      short loc_1409FC7F9
                movzx   r15d, r13b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r12+2]
                mov     cr8, rax
                jmp     short loc_1409FC7B4
; ---------------------------------------------------------------------------

loc_1409FC7F5:                          ; CODE XREF: sub_1409FA010+27BA↑j
                test    eax, eax
                js      short loc_1409FC81F

loc_1409FC7F9:                          ; CODE XREF: sub_1409FA010+27C9↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     r11d, 1000h
                add     rax, r11
                add     r14, r11
                mov     [rbp+0BE0h+arg_8], rax
                cmp     rax, [rsp+0CE0h+var_C88]
                jnz     short loc_1409FC7B0
                jmp     loc_1409FB666
; ---------------------------------------------------------------------------

loc_1409FC81F:                          ; CODE XREF: sub_1409FA010+27BF↑j
                                        ; sub_1409FA010+27E7↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]

loc_1409FC828:                          ; CODE XREF: sub_1409FA010+2752↑j
                                        ; sub_1409FA010+2767↑j
                mov     eax, [rsi+8F8h]
                xor     r15d, r15d
                mov     ecx, [r13+14h]
                test    eax, eax
                jnz     loc_1409FB6A1
                mov     eax, ebx
                jmp     loc_1409FB68D
; ---------------------------------------------------------------------------

loc_1409FC844:                          ; CODE XREF: sub_1409FA010+129C↑j
                cmp     r10d, 0Eh
                jle     loc_1409FFB1B
                mov     ebx, 0Fh
                cmp     r10d, ebx
                jz      loc_1409FF9C7
                cmp     r10d, 15h
                jz      loc_1409FF8CA
                cmp     r10d, 18h
                jz      loc_1409FD1B5
                cmp     r10d, r11d
                jz      loc_1409FCD77
                cmp     r10d, 1Ah
                jz      loc_1409FCB53
                cmp     r10d, 1Bh
                jnz     loc_140A0576C
                mov     eax, [rsi+830h]
                test    dl, al
                jz      loc_1409FB318
                mov     r14, [rsi+5A8h]
                xor     eax, eax
                mov     r15, [rsi+5B0h]
                mov     rbx, [rsi+548h]
                mov     [rsp+0CE0h+var_C78], eax
                mov     rax, [rsi+178h]
                mov     [rbp+0BE0h+var_C50], r14
                mov     [rsp+0CE0h+var_C88], r15
                call    j__guard_dispatch_icall_nop
                test    dword ptr [rsi+990h], 40000000h
                jnz     short loc_1409FC8F0
                mov     ecx, [rsi+950h]
                cmp     ecx, 7
                jnb     short loc_1409FC8F0
                mov     r12d, 1
                mov     r13d, r12d
                shl     r13b, cl
                jmp     short loc_1409FC90E
; ---------------------------------------------------------------------------

loc_1409FC8F0:                          ; CODE XREF: sub_1409FA010+28C5↑j
                                        ; sub_1409FA010+28D0↑j
                mov     rax, [rsi+128h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop
                mov     r13b, 80h
                mov     r12d, 1

loc_1409FC90E:                          ; CODE XREF: sub_1409FA010+28DE↑j
                mov     rax, [rsi+138h]
                xor     edx, edx
                mov     rcx, rbx
                mov     [rbp+0BE0h+var_C58], r13d
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+138h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     r9, [rsi+5A0h]
                xor     eax, eax
                mov     r10d, eax
                mov     [rbp+0BE0h+var_C60], rax
                mov     r8, [r9]
                cmp     r8, r9
                jz      short loc_1409FC99E

loc_1409FC94C:                          ; CODE XREF: sub_1409FA010+2981↓j
                lea     rdx, [r8-18h]
                cmp     rdx, r15
                jz      short loc_1409FC98B
                mov     rax, [rsi+738h]
                mov     rdx, [rdx+rax]
                mov     rax, [rsi+6C0h]
                mov     ecx, [rdx+rax]
                test    [rsi+6D8h], ecx
                jnz     short loc_1409FC97F
                test    r10, r10
                mov     rax, rdx
                cmovnz  rax, r12
                mov     r10, rax

loc_1409FC97F:                          ; CODE XREF: sub_1409FA010+2960↑j
                mov     rax, [rsi+6B8h]
                lock or [rdx+rax], r13b

loc_1409FC98B:                          ; CODE XREF: sub_1409FA010+2943↑j
                mov     r8, [r8]
                cmp     r8, r9
                jnz     short loc_1409FC94C
                mov     [rbp+0BE0h+var_C60], r10
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FC99E:                          ; CODE XREF: sub_1409FA010+293A↑j
                mov     r12, [rsi+520h]
                mov     r14, [r12]
                cmp     r14, r12
                jz      loc_1409FCA9E
                mov     rdi, [rsp+0CE0h+var_C88]
                mov     r15b, r13b
                movzx   r8d, r13b
                not     r15b
                mov     r13d, [rsp+0CE0h+var_C78]
                mov     dword ptr [rbp+0BE0h+arg_8], r8d

loc_1409FC9CD:                          ; CODE XREF: sub_1409FA010+2A71↓j
                mov     rdx, [rsi+6B8h]
                mov     rbx, r14
                sub     rbx, [rsi+6D0h]
                mov     rcx, rdx
                movsx   eax, byte ptr [rdx+rbx]
                test    r8d, eax
                jnz     loc_1409FCA6E
                mov     rax, [rsi+6C8h]
                mov     r8, [rbx+rax]
                xor     eax, eax
                test    r8, r8
                jz      short loc_1409FCA67
                cmp     r8, rdi
                jz      short loc_1409FCA67
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FCA67
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                mov     rcx, [rsi+6B8h]

loc_1409FCA67:                          ; CODE XREF: sub_1409FA010+29EE↑j
                                        ; sub_1409FA010+29F3↑j ...
                mov     r8d, dword ptr [rbp+0BE0h+arg_8]

loc_1409FCA6E:                          ; CODE XREF: sub_1409FA010+29D8↑j
                lock and [rcx+rbx], r15b
                mov     r14, [r14]
                mov     ecx, 1
                add     r13d, ecx
                cmp     r14, r12
                jnz     loc_1409FC9CD
                mov     r15, [rsp+0CE0h+var_C88]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     [rsp+0CE0h+var_C78], r13d
                mov     r13d, [rbp+0BE0h+var_C58]
                jmp     short loc_1409FCAA3
; ---------------------------------------------------------------------------

loc_1409FCA9E:                          ; CODE XREF: sub_1409FA010+299C↑j
                mov     ecx, 1

loc_1409FCAA3:                          ; CODE XREF: sub_1409FA010+2A8C↑j
                mov     rdx, [rbp+0BE0h+var_C60]
                test    rdx, rdx
                jz      short loc_1409FCAFC
                cmp     rdx, rcx
                jz      short loc_1409FCAC3
                mov     rax, [rsi+6B8h]
                mov     cl, r13b
                not     cl
                lock and [rdx+rax], cl
                jmp     short loc_1409FCAFC
; ---------------------------------------------------------------------------

loc_1409FCAC3:                          ; CODE XREF: sub_1409FA010+2A9F↑j
                mov     r10, [rsi+5A0h]
                mov     r9, [r10]
                jmp     short loc_1409FCAF7
; ---------------------------------------------------------------------------

loc_1409FCACF:                          ; CODE XREF: sub_1409FA010+2AEA↓j
                lea     r8, [r9-18h]
                cmp     r8, r15
                jz      short loc_1409FCAF4
                mov     rax, [rsi+738h]
                mov     dl, r13b
                not     dl
                mov     r8, [r8+rax]
                mov     rax, [rsi+6B8h]
                lock and [r8+rax], dl

loc_1409FCAF4:                          ; CODE XREF: sub_1409FA010+2AC6↑j
                mov     r9, [r9]

loc_1409FCAF7:                          ; CODE XREF: sub_1409FA010+2ABD↑j
                cmp     r9, r10
                jnz     short loc_1409FCACF

loc_1409FCAFC:                          ; CODE XREF: sub_1409FA010+2A9A↑j
                                        ; sub_1409FA010+2AB1↑j
                mov     rax, [rsi+140h]
                xor     edx, edx
                mov     rcx, [rbp+0BE0h+var_C50]
                call    j__guard_dispatch_icall_nop
                cmp     r13b, 80h
                jnz     short loc_1409FCB29
                mov     rax, [rsi+130h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop

loc_1409FCB29:                          ; CODE XREF: sub_1409FA010+2B02↑j
                mov     rcx, [rsi+548h]
                xor     edx, edx
                mov     rax, [rsi+140h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+180h]
                call    j__guard_dispatch_icall_nop
                mov     eax, [rsp+0CE0h+var_C78]
                jmp     loc_1409FC382
; ---------------------------------------------------------------------------

loc_1409FCB53:                          ; CODE XREF: sub_1409FA010+286D↑j
                mov     eax, [rsi+830h]
                test    dl, al
                jnz     loc_1409FB318
                mov     r14, [rsi+5A8h]
                xor     eax, eax
                mov     rbx, [rsi+548h]
                mov     r13d, eax
                mov     dword ptr [rbp+0BE0h+arg_8], eax
                mov     rax, [rsi+5B0h]
                mov     [rsp+0CE0h+var_C88], rax
                mov     rax, [rsi+178h]
                mov     [rbp+0BE0h+var_C60], r14
                call    j__guard_dispatch_icall_nop
                test    dword ptr [rsi+990h], 40000000h
                jnz     short loc_1409FCBBB
                mov     ecx, [rsi+950h]
                cmp     ecx, 7
                jnb     short loc_1409FCBBB
                mov     r12d, 1
                mov     r15d, r12d
                shl     r15b, cl
                jmp     short loc_1409FCBD9
; ---------------------------------------------------------------------------

loc_1409FCBBB:                          ; CODE XREF: sub_1409FA010+2B90↑j
                                        ; sub_1409FA010+2B9B↑j
                mov     rax, [rsi+128h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop
                mov     r15b, 80h
                mov     r12d, 1

loc_1409FCBD9:                          ; CODE XREF: sub_1409FA010+2BA9↑j
                mov     rax, [rsi+138h]
                xor     edx, edx
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     r8, [rsi+520h]
                mov     rdx, [r8]
                cmp     rdx, r8
                jz      short loc_1409FCC21

loc_1409FCBF9:                          ; CODE XREF: sub_1409FA010+2C08↓j
                mov     rax, [rsi+6B8h]
                mov     rcx, rdx
                sub     rcx, [rsi+6D0h]
                lock or [rcx+rax], r15b
                mov     rdx, [rdx]
                add     r13d, r12d
                cmp     rdx, r8
                jnz     short loc_1409FCBF9
                mov     dword ptr [rbp+0BE0h+arg_8], r13d

loc_1409FCC21:                          ; CODE XREF: sub_1409FA010+2BE7↑j
                mov     rax, [rsi+138h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     r12, [rsi+5A0h]
                mov     r14, [r12]
                cmp     r14, r12
                jz      loc_1409FCD19
                mov     rax, [rsp+0CE0h+var_C88]
                xor     r13d, r13d
                mov     rdi, [rsp+0CE0h+var_C90]

loc_1409FCC53:                          ; CODE XREF: sub_1409FA010+2CF5↓j
                mov     rcx, r14
                sub     rcx, [rsi+740h]
                cmp     rcx, rax
                jz      loc_1409FCCFF
                mov     r8, [rsi+6B8h]
                mov     rax, [rsi+738h]
                mov     rdx, r8
                mov     rbx, [rcx+rax]
                test    [r8+rbx], r15b
                jnz     short loc_1409FCCF1
                mov     rax, [rsi+6C0h]
                mov     ecx, [rbx+rax]
                test    [rsi+6D8h], ecx
                jz      short loc_1409FCCF1
                cmp     [rsi+8F8h], r13d
                jnz     short loc_1409FCCF1
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rdi
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rdi]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                mov     rdx, [rsi+6B8h]

loc_1409FCCF1:                          ; CODE XREF: sub_1409FA010+2C6F↑j
                                        ; sub_1409FA010+2C81↑j ...
                mov     al, r15b
                not     al
                lock and [rbx+rdx], al
                mov     rax, [rsp+0CE0h+var_C88]

loc_1409FCCFF:                          ; CODE XREF: sub_1409FA010+2C50↑j
                mov     r14, [r14]
                cmp     r14, r12
                jnz     loc_1409FCC53
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FCD19:                          ; CODE XREF: sub_1409FA010+2C30↑j
                mov     rax, [rsi+140h]
                xor     edx, edx
                mov     rcx, [rbp+0BE0h+var_C60]
                call    j__guard_dispatch_icall_nop
                cmp     r15b, 80h
                jnz     short loc_1409FCD46
                mov     rax, [rsi+130h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop

loc_1409FCD46:                          ; CODE XREF: sub_1409FA010+2D1F↑j
                mov     rcx, [rsi+548h]
                xor     edx, edx
                mov     rax, [rsi+140h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+180h]
                call    j__guard_dispatch_icall_nop
                shl     r13d, 8
                add     [rsi+828h], r13d
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_1409FCD77:                          ; CODE XREF: sub_1409FA010+2863↑j
                mov     r12, [rsi+530h]
                xor     eax, eax
                mov     [rsp+0CE0h+var_C78], eax
                mov     rax, [rsi+378h]
                call    j__guard_dispatch_icall_nop
                mov     [rbp+0BE0h+var_C50], rax
                cli
                mov     rcx, gs:20h
                mov     rax, [rsi+648h]
                mov     rcx, [rcx+rax]
                sti
                mov     rax, [rsi+168h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rsi+538h]
                mov     ebx, 1
                mov     rax, [rsi+0F0h]
                mov     dl, bl
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+610h]
                mov     rcx, [rax]
                mov     r13d, [rcx]
                lea     rdx, [rcx+10h]
                mov     [rsp+0CE0h+var_C88], rdx
                lea     rax, ds:0[r13*2]
                add     rax, r13
                lea     rax, [rdx+rax*8]
                mov     [rbp+0BE0h+var_C60], rax
                xor     eax, eax
                mov     dword ptr [rbp+0BE0h+arg_8], eax
                cmp     [rcx+0Ch], al
                jz      short loc_1409FCE1A
                mov     r13d, eax
                mov     rax, [r12]
                jmp     short loc_1409FCE15
; ---------------------------------------------------------------------------

loc_1409FCE0F:                          ; CODE XREF: sub_1409FA010+2E08↓j
                mov     rax, [rax]
                add     r13d, ebx

loc_1409FCE15:                          ; CODE XREF: sub_1409FA010+2DFD↑j
                cmp     rax, r12
                jnz     short loc_1409FCE0F

loc_1409FCE1A:                          ; CODE XREF: sub_1409FA010+2DF4↑j
                mov     r8d, [rsi+810h]
                mov     r15d, r13d
                shl     r15d, 3
                rdtsc
                shl     rdx, 20h
                mov     r9, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     rbx, rdx
                mov     [rbp+0BE0h+var_348], rdx
                xor     ebx, eax
                and     ebx, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                lea     ecx, [rbx+1]
                xor     rax, rdx
                mov     [rbp+0BE0h+var_340], rdx
                xor     edx, edx
                div     rcx
                mov     rax, [rsi+0F8h]
                mov     ecx, 200h
                mov     r14, rdx
                lea     edx, [rbx+r15]
                call    j__guard_dispatch_icall_nop
                mov     r11, rax
                xor     eax, eax
                test    r11, r11
                jnz     short loc_1409FCEB8
                lea     ecx, [rax+1]
                add     [rsi+0A18h], ecx
                jmp     loc_1409FD00A
; ---------------------------------------------------------------------------

loc_1409FCEB8:                          ; CODE XREF: sub_1409FA010+2E98↑j
                mov     r10d, r14d
                mov     r9, r11
                cmp     r14d, 8
                jb      short loc_1409FCF19
                mov     r8d, r14d
                mov     esi, 1
                shr     r8, 3
                mov     rdi, 7010008004002001h

loc_1409FCEDA:                          ; CODE XREF: sub_1409FA010+2EFB↓j
                rdtsc
                shl     rdx, 20h
                add     r10d, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     [rbp+0BE0h+var_338], rdx
                xor     rdx, rax
                mov     [r9], rdx
                add     r9, 8
                sub     r8, rsi
                jnz     short loc_1409FCEDA
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FCF19:                          ; CODE XREF: sub_1409FA010+2EB2↑j
                test    r10d, r10d
                jz      short loc_1409FCF61
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     ecx, 0FFFFFFFFh
                mov     [rbp+0BE0h+var_330], rdx
                xor     rdx, rax
                mov     eax, 1

loc_1409FCF52:                          ; CODE XREF: sub_1409FA010+2F4F↓j
                mov     [r9], dl
                add     r9, rax
                shr     rdx, 8
                add     r10d, ecx
                jnz     short loc_1409FCF52

loc_1409FCF61:                          ; CODE XREF: sub_1409FA010+2F0C↑j
                mov     r8d, r15d
                sub     ebx, r14d
                add     r8, r11
                mov     r10d, r14d
                add     r8, r10
                mov     r14d, 1
                mov     r15, 7010008004002001h
                cmp     ebx, 8
                jb      short loc_1409FCFBE
                mov     r9d, ebx
                shr     r9, 3

loc_1409FCF8C:                          ; CODE XREF: sub_1409FA010+2FAC↓j
                rdtsc
                shl     rdx, 20h
                add     ebx, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     [rbp+0BE0h+var_250], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                sub     r9, r14
                jnz     short loc_1409FCF8C

loc_1409FCFBE:                          ; CODE XREF: sub_1409FA010+2F73↑j
                test    ebx, ebx
                jz      short loc_1409FCFF8
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     [rbp+0BE0h+var_248], rdx
                xor     rdx, rax
                mov     eax, 0FFFFFFFFh

loc_1409FCFEA:                          ; CODE XREF: sub_1409FA010+2FE6↓j
                mov     [r8], dl
                add     r8, r14
                shr     rdx, 8
                add     ebx, eax
                jnz     short loc_1409FCFEA

loc_1409FCFF8:                          ; CODE XREF: sub_1409FA010+2FB0↑j
                lea     r15, [r11+r10]
                mov     [rbp+0BE0h+var_A20], r11
                test    r15, r15
                jnz     short loc_1409FD016
                xor     eax, eax

loc_1409FD00A:                          ; CODE XREF: sub_1409FA010+2EA3↑j
                mov     [rbp+0BE0h+var_A20], rax
                jmp     loc_1409FD152
; ---------------------------------------------------------------------------

loc_1409FD016:                          ; CODE XREF: sub_1409FA010+2FF6↑j
                mov     rbx, [r12]
                cmp     rbx, r12
                jz      short loc_1409FD06C
                mov     edi, dword ptr [rbp+0BE0h+arg_8]

loc_1409FD025:                          ; CODE XREF: sub_1409FA010+3054↓j
                mov     rax, [rsi+750h]
                mov     rcx, rbx
                sub     rcx, [rsi+748h]
                mov     r14, [rcx+rax]
                mov     rax, [rsi+2A8h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jnz     short loc_1409FD05A
                cmp     edi, r13d
                jnb     short loc_1409FD05A
                mov     eax, edi
                inc     edi
                mov     [r15+rax*8], r14

loc_1409FD05A:                          ; CODE XREF: sub_1409FA010+303B↑j
                                        ; sub_1409FA010+3040↑j
                mov     rbx, [rbx]
                inc     [rsp+0CE0h+var_C78]
                cmp     rbx, r12
                jnz     short loc_1409FD025
                mov     dword ptr [rbp+0BE0h+arg_8], edi

loc_1409FD06C:                          ; CODE XREF: sub_1409FA010+300D↑j
                mov     r14d, dword ptr [rbp+0BE0h+arg_8]
                mov     rcx, r15
                mov     rax, [rsi+398h]
                mov     edx, r14d
                call    j__guard_dispatch_icall_nop
                mov     r12, [rsp+0CE0h+var_C88]
                mov     r13, [rbp+0BE0h+var_C60]
                mov     rdi, [rsp+0CE0h+var_C90]

loc_1409FD093:                          ; CODE XREF: sub_1409FA010+3135↓j
                mov     rbx, [r12+8]
                mov     rax, [rsi+2A8h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jnz     loc_1409FD13E
                xor     eax, eax
                lea     edx, [r14-1]
                mov     r8d, eax
                test    edx, edx
                js      short loc_1409FD0E8

loc_1409FD0BC:                          ; CODE XREF: sub_1409FA010+30CF↓j
                lea     ecx, [rdx+r8]
                sar     ecx, 1
                movsxd  rax, ecx
                cmp     rbx, [r15+rax*8]
                jnb     short loc_1409FD0D6
                xor     eax, eax
                test    ecx, ecx
                jz      short loc_1409FD0E8
                lea     edx, [rcx-1]
                jmp     short loc_1409FD0DC
; ---------------------------------------------------------------------------

loc_1409FD0D6:                          ; CODE XREF: sub_1409FA010+30B9↑j
                jbe     short loc_1409FD0E1
                lea     r8d, [rcx+1]

loc_1409FD0DC:                          ; CODE XREF: sub_1409FA010+30C4↑j
                cmp     edx, r8d
                jge     short loc_1409FD0BC

loc_1409FD0E1:                          ; CODE XREF: sub_1409FA010:loc_1409FD0D6↑j
                cmp     edx, r8d
                jge     short loc_1409FD13E
                xor     eax, eax

loc_1409FD0E8:                          ; CODE XREF: sub_1409FA010+30AA↑j
                                        ; sub_1409FA010+30BF↑j
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FD13E
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rdi
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rdi]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_1409FD13E:                          ; CODE XREF: sub_1409FA010+3099↑j
                                        ; sub_1409FA010+30D4↑j ...
                add     r12, 18h
                cmp     r12, r13
                jb      loc_1409FD093
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FD152:                          ; CODE XREF: sub_1409FA010+3001↑j
                mov     rcx, [rsi+538h]
                mov     rax, [rsi+118h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+170h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+380h]
                mov     rcx, [rbp+0BE0h+var_C50]
                call    j__guard_dispatch_icall_nop
                xor     eax, eax
                cmp     [rbp+0BE0h+var_A20], rax
                jz      loc_1409FB318
                mov     eax, [rsp+0CE0h+var_C78]
                shl     eax, 9
                add     [rsi+828h], eax
                mov     rax, [rsi+100h]
                mov     rcx, [rbp+0BE0h+var_A20]

loc_1409FD1AB:                          ; CODE XREF: sub_1409FA010+6050↓j
                call    j__guard_dispatch_icall_nop
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_1409FD1B5:                          ; CODE XREF: sub_1409FA010+285A↑j
                mov     r12d, 40000000h
                test    [rsi+990h], r12d
                jz      short loc_1409FD220
                test    dword ptr [rsi+994h], 1000h
                jnz     short loc_1409FD220
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_1E0], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 2
                lea     rax, [rdx+rdx*4]
                mov     edx, 1
                sub     rcx, rax
                mov     [rsi+824h], ecx

loc_1409FD220:                          ; CODE XREF: sub_1409FA010+31B2↑j
                                        ; sub_1409FA010+31BE↑j ...
                mov     ecx, [rsi+824h]
                xor     eax, eax
                test    ecx, ecx
                jz      loc_1409FF739
                sub     ecx, 1
                jz      loc_1409FF5CF
                sub     ecx, 1
                jz      loc_1409FF427
                sub     ecx, 1
                jz      loc_1409FD5A7
                sub     ecx, 1
                jz      loc_1409FD3FC
                cmp     ecx, 1
                jnz     loc_1409FF8BA
                mov     rbx, r13
                mov     [rbp+0BE0h+arg_10], 0FFh
                mov     r13d, eax
                mov     r14d, eax
                mov     r15d, eax
                jmp     short loc_1409FD274
; ---------------------------------------------------------------------------

loc_1409FD272:                          ; CODE XREF: sub_1409FA010+33DA↓j
                xor     eax, eax

loc_1409FD274:                          ; CODE XREF: sub_1409FA010+3260↑j
                mov     [rbp+0BE0h+var_960], rax
                lea     r9, [rbp+0BE0h+var_A98]
                mov     rax, [rsi+430h]
                lea     r8, [rbp+0BE0h+arg_10]
                lea     rdx, [rbp+0BE0h+var_960]
                mov     ecx, r14d
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jz      loc_1409FD3DB
                mov     r12d, 1

loc_1409FD2AD:                          ; CODE XREF: sub_1409FA010+33C5↓j
                mov     rax, [rsi+208h]
                lea     rdx, [rbp+0BE0h+var_1D8]
                mov     rcx, [rbp+0BE0h+var_A98]
                add     r13d, r12d
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     loc_1409FD3AF
                test    dword ptr [rsi+990h], 40000000h
                jz      short loc_1409FD326
                mov     rcx, [rsi+0A80h]
                lea     edx, [rax+30h]
                lea     r8d, [rax+6]

loc_1409FD2ED:                          ; CODE XREF: sub_1409FA010+32F1↓j
                mov     rax, [rbx]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     rbx, 8
                add     rcx, 8
                sub     r8, r12
                jnz     short loc_1409FD2ED
                test    edx, edx
                jz      short loc_1409FD31F
                mov     esi, 0FFFFFFFFh

loc_1409FD30C:                          ; CODE XREF: sub_1409FA010+3308↓j
                mov     al, [rbx]
                add     rbx, r12
                mov     [rcx], al
                add     rcx, r12
                add     edx, esi
                jnz     short loc_1409FD30C
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FD31F:                          ; CODE XREF: sub_1409FA010+32F5↑j
                mov     rbx, [rsi+0A80h]

loc_1409FD326:                          ; CODE XREF: sub_1409FA010+32CD↑j
                mov     rax, [rbp+0BE0h+var_A98]
                mov     [rbx+18h], rax
                mov     rax, [rsi+590h]
                mov     [rax], rbx
                mov     dword ptr [rax+10h], 30h ; '0'
                mov     rax, [rbp+0BE0h+var_A98]
                mov     rcx, [rsi+590h]
                mov     [rcx+8], rax
                xor     eax, eax
                mov     dword ptr [rcx+14h], 1000h
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FD3AF
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rbx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rbx]
                mov     [rsi+910h], rax
                mov     [rsi+918h], r15
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_1409FD3AF:                          ; CODE XREF: sub_1409FA010+32BD↑j
                                        ; sub_1409FA010+3353↑j
                mov     rax, [rsi+430h]
                lea     r9, [rbp+0BE0h+var_A98]
                lea     r8, [rbp+0BE0h+arg_10]
                mov     ecx, r14d
                lea     rdx, [rbp+0BE0h+var_960]
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jnz     loc_1409FD2AD

loc_1409FD3DB:                          ; CODE XREF: sub_1409FA010+3291↑j
                mov     edx, 1
                add     r14d, edx
                add     r15, rdx
                cmp     r14d, 3
                jb      loc_1409FD272
                mov     rdi, 0FFFFFFFFB8797400h
                jmp     loc_1409FF885
; ---------------------------------------------------------------------------

loc_1409FD3FC:                          ; CODE XREF: sub_1409FA010+323E↑j
                mov     r13d, eax
                mov     [rbp+0BE0h+var_BE0], eax
                mov     rax, [rsi+318h]
                xor     ecx, ecx
                call    j__guard_dispatch_icall_nop
                mov     r15, rax
                xor     eax, eax
                test    r15, r15
                jz      loc_1409FF880
                mov     rdi, [rsp+0CE0h+var_C90]

loc_1409FD423:                          ; CODE XREF: sub_1409FA010+358C↓j
                mov     [rbp+0BE0h+var_968], rax
                lea     rdx, [rbp+0BE0h+var_968]
                mov     rax, [rsi+310h]
                mov     rcx, r15
                mov     rbx, rdi
                mov     r12d, 1
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jz      loc_1409FD57E
                lea     edi, [r12+5]
                xor     r13d, r13d

loc_1409FD45D:                          ; CODE XREF: sub_1409FA010+355F↓j
                mov     rax, [rsi+208h]
                lea     rdx, [rbp+0BE0h+var_1D0]
                mov     rcx, r14
                inc     r12d
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     loc_1409FD553
                test    dword ptr [rsi+990h], 40000000h
                lea     r9d, [rax+1]
                jz      short loc_1409FD4D5
                mov     rcx, [rsi+0A80h]
                lea     edx, [rax+30h]
                mov     r8, rdi

loc_1409FD49C:                          ; CODE XREF: sub_1409FA010+34A0↓j
                mov     rax, [rbx]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     rbx, 8
                add     rcx, 8
                sub     r8, r9
                jnz     short loc_1409FD49C
                test    edx, edx
                jz      short loc_1409FD4CE
                mov     r13d, 0FFFFFFFFh

loc_1409FD4BC:                          ; CODE XREF: sub_1409FA010+34B9↓j
                mov     al, [rbx]
                add     rbx, r9
                mov     [rcx], al
                add     rcx, r9
                add     edx, r13d
                jnz     short loc_1409FD4BC
                xor     r13d, r13d

loc_1409FD4CE:                          ; CODE XREF: sub_1409FA010+34A4↑j
                mov     rbx, [rsi+0A80h]

loc_1409FD4D5:                          ; CODE XREF: sub_1409FA010+347D↑j
                mov     [rbx+18h], r14
                mov     [rbx+20h], r15
                mov     rax, [rsi+590h]
                mov     [rax], rbx
                mov     dword ptr [rax+10h], 30h ; '0'
                mov     rax, [rsi+590h]
                mov     [rax+8], r14
                mov     dword ptr [rax+14h], 1000h
                cmp     [rsi+8F8h], r13d
                jnz     short loc_1409FD553
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rbx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rbx]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r9d
                call    sub_140A113CC

loc_1409FD553:                          ; CODE XREF: sub_1409FA010+3469↑j
                                        ; sub_1409FA010+34F7↑j
                mov     rax, [rsi+310h]
                lea     rdx, [rbp+0BE0h+var_968]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jnz     loc_1409FD45D
                mov     r13d, [rbp+0BE0h+var_BE0]
                mov     rdi, [rsp+0CE0h+var_C90]

loc_1409FD57E:                          ; CODE XREF: sub_1409FA010+343F↑j
                mov     rax, [rsi+318h]
                add     r13d, r12d
                mov     rcx, r15
                mov     [rbp+0BE0h+var_BE0], r13d
                call    j__guard_dispatch_icall_nop
                mov     r15, rax
                xor     eax, eax
                test    r15, r15
                jnz     loc_1409FD423
                jmp     loc_1409FF879
; ---------------------------------------------------------------------------

loc_1409FD5A7:                          ; CODE XREF: sub_1409FA010+3235↑j
                mov     r13d, eax
                mov     rax, [rsi+4F0h]
                mov     rbx, rsi
                mov     [rbp+0BE0h+var_B50], rbx
                mov     r14, [rax]
                mov     [rbp+0BE0h+var_C08], r14
                test    [rsi+990h], r12d
                jz      short loc_1409FD5D2
                xor     eax, eax
                jmp     loc_1409FF885
; ---------------------------------------------------------------------------

loc_1409FD5D2:                          ; CODE XREF: sub_1409FA010+35B9↑j
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, [rcx+28h]
                test    rax, rax
                jz      loc_1409FD67F
                mov     edx, 1
                mov     r13d, edx
                cmp     r14, rax
                jz      loc_1409FF885
                mov     [rcx+18h], r14
                mov     rax, [rsi+590h]
                mov     [rax], rcx
                mov     dword ptr [rax+10h], 30h ; '0'
                mov     rax, [rsi+590h]
                mov     [rax+8], r14
                mov     dword ptr [rax+14h], 1000h
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     loc_1409FF885
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     qword ptr [rsi+918h], 5
                mov     [rsi+8F8h], edx
                xor     edx, edx
                call    sub_140A113CC

loc_1409FD677:                          ; CODE XREF: sub_1409FA010+5412↓j
                mov     rdx, r13
                jmp     loc_1409FF885
; ---------------------------------------------------------------------------

loc_1409FD67F:                          ; CODE XREF: sub_1409FA010+35CE↑j
                test    r14, r14
                jz      loc_1409FF880
                mov     rax, [rsi+200h]
                lea     rdx, [rbp+0BE0h+var_228]
                mov     r15d, 1
                mov     [rbp+0BE0h+var_B98], rsi
                mov     rcx, r14
                mov     [rbp+0BE0h+var_BE0], r15d
                call    j__guard_dispatch_icall_nop
                mov     r13, [rbp+0BE0h+var_220]
                mov     r12d, [rbp+0BE0h+var_214]
                mov     [rbp+0BE0h+var_C48], rax
                xor     eax, eax
                mov     dword ptr [rbp+0BE0h+arg_8], r12d
                mov     [rbp+0BE0h+var_BE4], r12d
                mov     [rsp+0CE0h+var_C68], r13
                test    r13, r13
                jnz     short loc_1409FD6DF
                mov     ecx, 0C000007Bh
                jmp     loc_1409FF3EB
; ---------------------------------------------------------------------------

loc_1409FD6DF:                          ; CODE XREF: sub_1409FA010+36C3↑j
                mov     [rbp+0BE0h+var_AD8], rax
                mov     ecx, 4
                lea     rax, [rbp+0BE0h+var_AD0]
                xor     edx, edx
                mov     r8d, 0FFFFFFFFh

loc_1409FD6FA:                          ; CODE XREF: sub_1409FA010+36F2↓j
                mov     [rax], dl
                add     rax, r15
                add     ecx, r8d
                jnz     short loc_1409FD6FA
                xor     eax, eax
                mov     r15d, eax
                cmp     [rsi+80Ch], eax
                jbe     loc_1409FD90E
                mov     edx, [rbp+0BE0h+var_AD0]
                mov     r9d, dword ptr [rbp+0BE0h+var_AD8+4]
                mov     r10d, dword ptr [rbp+0BE0h+var_AD8]

loc_1409FD729:                          ; CODE XREF: sub_1409FA010+38F6↓j
                mov     rax, [rsi+0A78h]
                mov     r14, rsi
                test    rax, rax
                cmovnz  r14, rax
                xor     eax, eax
                mov     [rsp+0CE0h+var_C88], r14
                mov     r11d, eax
                mov     r8d, [r14+808h]
                add     r8, r14
                test    r10d, r10d
                jz      short loc_1409FD761
                cmp     r9d, r15d
                ja      short loc_1409FD761
                mov     r8d, edx
                mov     r11d, r9d
                add     r8, r14

loc_1409FD761:                          ; CODE XREF: sub_1409FA010+3741↑j
                                        ; sub_1409FA010+3746↑j
                cmp     r11d, r15d
                jz      loc_1409FD89E
                mov     edi, 2
                mov     eax, r15d
                sub     eax, r11d
                mov     r14, 0AAAAAAAAAAAAAAABh
                mov     r9d, eax
                add     r11d, eax
                lea     r12d, [rdi+0Ah]

loc_1409FD789:                          ; CODE XREF: sub_1409FA010+3869↓j
                mov     ecx, [r8]
                cmp     ecx, r12d
                jg      short loc_1409FD7D4
                jz      short loc_1409FD7F1
                sub     ecx, 1
                jz      short loc_1409FD7F1
                sub     ecx, 6
                jz      short loc_1409FD7C3
                sub     ecx, 1
                jz      short loc_1409FD7B9
                cmp     ecx, edi
                jnz     loc_1409FD830
                mov     eax, [r8+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_1409FD86E
; ---------------------------------------------------------------------------

loc_1409FD7B9:                          ; CODE XREF: sub_1409FA010+3790↑j
                movzx   eax, word ptr [r8+20h]
                jmp     loc_1409FD868
; ---------------------------------------------------------------------------

loc_1409FD7C3:                          ; CODE XREF: sub_1409FA010+378B↑j
                mov     eax, [r8+18h]
                add     eax, edi
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_1409FD86E
; ---------------------------------------------------------------------------

loc_1409FD7D4:                          ; CODE XREF: sub_1409FA010+377F↑j
                cmp     ecx, 1Ch
                jz      loc_1409FD863
                cmp     ecx, 1Eh
                jz      short loc_1409FD837
                cmp     ecx, 20h ; ' '
                jle     short loc_1409FD830
                cmp     ecx, 22h ; '"'
                jle     short loc_1409FD808
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_1409FD830

loc_1409FD7F1:                          ; CODE XREF: sub_1409FA010+3781↑j
                                        ; sub_1409FA010+3786↑j
                mov     ecx, [r8+10h]
                mov     rax, r14
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_1409FD86E
; ---------------------------------------------------------------------------

loc_1409FD808:                          ; CODE XREF: sub_1409FA010+37DA↑j
                mov     ecx, [r8+20h]
                mov     edx, [r8+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_1409FD86E
; ---------------------------------------------------------------------------

loc_1409FD830:                          ; CODE XREF: sub_1409FA010+3794↑j
                                        ; sub_1409FA010+37D5↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_1409FD86E
; ---------------------------------------------------------------------------

loc_1409FD837:                          ; CODE XREF: sub_1409FA010+37D0↑j
                mov     eax, [r8+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r14
                mul     rcx
                movzx   eax, word ptr [r8+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, edi
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_1409FD86E
; ---------------------------------------------------------------------------

loc_1409FD863:                          ; CODE XREF: sub_1409FA010+37C7↑j
                movzx   eax, word ptr [r8+28h]

loc_1409FD868:                          ; CODE XREF: sub_1409FA010+37AE↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_1409FD86E:                          ; CODE XREF: sub_1409FA010+37A4↑j
                                        ; sub_1409FA010+37BF↑j ...
                add     r8, rax
                mov     eax, 1
                sub     r9, rax
                jnz     loc_1409FD789
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r14, [rsp+0CE0h+var_C88]
                mov     r12d, dword ptr [rbp+0BE0h+arg_8]
                mov     r13, [rsp+0CE0h+var_C68]
                jmp     short loc_1409FD8A3
; ---------------------------------------------------------------------------

loc_1409FD89E:                          ; CODE XREF: sub_1409FA010+3754↑j
                mov     eax, 1

loc_1409FD8A3:                          ; CODE XREF: sub_1409FA010+388C↑j
                mov     edx, r8d
                mov     dword ptr [rbp+0BE0h+var_AD8], eax
                sub     edx, r14d
                mov     dword ptr [rbp+0BE0h+var_AD8+4], r11d
                mov     [rbp+0BE0h+var_AD0], edx
                mov     r10d, eax
                movsxd  rcx, dword ptr [r8]
                mov     r9d, r11d
                cmp     ecx, 2Bh ; '+'
                ja      short loc_1409FD8EA
                mov     r11, 80000001002h
                bt      r11, rcx
                jnb     short loc_1409FD8EA
                mov     rax, [rbp+0BE0h+var_C48]
                cmp     [r8+8], rax
                jnz     short loc_1409FD8EA
                cmp     [r8+10h], r12d
                jz      short loc_1409FD911

loc_1409FD8EA:                          ; CODE XREF: sub_1409FA010+38B8↑j
                                        ; sub_1409FA010+38C8↑j ...
                lea     eax, [rcx-21h]
                mov     ecx, 1
                cmp     eax, ecx
                ja      short loc_1409FD8FC
                cmp     [r8+20h], r13
                jz      short loc_1409FD911

loc_1409FD8FC:                          ; CODE XREF: sub_1409FA010+38E4↑j
                add     r15d, ecx
                cmp     r15d, [rsi+80Ch]
                jb      loc_1409FD729
                xor     eax, eax

loc_1409FD90E:                          ; CODE XREF: sub_1409FA010+36FF↑j
                mov     r8, rax

loc_1409FD911:                          ; CODE XREF: sub_1409FA010+38D8↑j
                                        ; sub_1409FA010+38EA↑j
                mov     r14, [rbp+0BE0h+var_C08]
                mov     [rbp+0BE0h+var_B38], r8
                test    r8, r8
                jz      short loc_1409FD92B
                mov     ecx, 0C000010Eh
                jmp     loc_1409FF3EB
; ---------------------------------------------------------------------------

loc_1409FD92B:                          ; CODE XREF: sub_1409FA010+390F↑j
                mov     rax, [rsi+2A8h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                test    dword ptr [rsi+990h], 40000000h
                mov     r15d, eax
                mov     dword ptr [rbp+0BE0h+var_BF8], eax
                mov     eax, [rbp+0BE0h+var_BE4]
                mov     [rbp+0BE0h+var_C58], eax
                jz      short loc_1409FD973
                mov     r8d, 9
                lea     rcx, [rbp+0BE0h+var_B50]
                mov     rdx, r13
                call    sub_140A1DFE4
                mov     rbx, [rbp+0BE0h+var_B50]
                jmp     loc_1409FF3E9
; ---------------------------------------------------------------------------

loc_1409FD973:                          ; CODE XREF: sub_1409FA010+3940↑j
                xor     eax, eax
                lea     r9, [rbp+0BE0h+var_BE4]
                xor     r8d, r8d
                mov     [rbp+0BE0h+var_7B0], rax
                mov     [rbp+0BE0h+var_9B8], eax
                mov     rcx, r13
                mov     rax, [rsi+1F0h]
                lea     r12d, [r8+1]
                mov     dl, r12b
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                lea     r8d, [r12+0Bh]
                neg     rax
                mov     [rbp+0BE0h+var_7C8], rdx
                lea     r9, [rbp+0BE0h+var_BE4]
                mov     dl, r12b
                sbb     ecx, ecx
                and     ecx, [rbp+0BE0h+var_BE4]
                mov     [rbp+0BE0h+var_BE4], ecx
                mov     rax, [rsi+1F0h]
                mov     [rbp+0BE0h+var_9C4], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                mov     [rbp+0BE0h+var_C50], rax
                neg     rax
                mov     [rbp+0BE0h+var_7C0], rdx
                lea     r8d, [r12+9]
                mov     dl, r12b
                sbb     ecx, ecx
                lea     r9, [rbp+0BE0h+var_BE4]
                and     ecx, [rbp+0BE0h+var_BE4]
                mov     [rbp+0BE0h+var_BE4], ecx
                mov     rax, [rsi+1F0h]
                mov     [rsp+0CE0h+var_C78], ecx
                mov     [rbp+0BE0h+var_9C0], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                neg     rax
                mov     [rbp+0BE0h+var_7B8], rdx
                sbb     ecx, ecx
                and     ecx, [rbp+0BE0h+var_BE4]
                mov     [rbp+0BE0h+var_BE4], ecx
                mov     rax, [rsi+1F8h]
                mov     [rbp+0BE0h+var_9BC], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jnz     short loc_1409FDA53

loc_1409FDA45:                          ; CODE XREF: sub_1409FA010+444D↓j
                                        ; sub_1409FA010+4499↓j ...
                mov     ecx, 0C000007Bh

loc_1409FDA4A:                          ; CODE XREF: sub_1409FA010+3BB3↓j
                                        ; sub_1409FA010+3E54↓j
                mov     r14, [rbp+0BE0h+var_C08]
                jmp     loc_1409FF3EB
; ---------------------------------------------------------------------------

loc_1409FDA53:                          ; CODE XREF: sub_1409FA010+3A33↑j
                mov     rax, [rsi+498h]
                lea     rdx, [rbp+0BE0h+var_888]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r8d, [rsi+924h]
                mov     [rbp+0BE0h+var_7A8], rax
                mov     eax, [rbp+0BE0h+var_888]
                mov     [rbp+0BE0h+var_9B4], eax
                mov     eax, [r14+54h]
                mov     [rbp+0BE0h+var_9C8], eax
                mov     eax, r15d
                mov     r15d, [rsi+7E4h]
                neg     eax
                mov     [rbp+0BE0h+var_7D0], r13
                sbb     r9d, r9d
                and     r9d, 0Bh
                lea     eax, [r15+120h]
                mov     dword ptr [rbp+0BE0h+arg_8], r9d
                cmp     eax, [rsi+0A1Ch]
                jbe     loc_1409FDBC8
                mov     edx, eax
                mov     rcx, rsi
                call    sub_140A10B30
                mov     r14, rax
                mov     [rsp+0CE0h+var_C88], rax
                xor     eax, eax
                test    r14, r14
                jz      loc_1409FDBBA
                mov     ecx, [rsi+990h]
                test    cl, 4
                jnz     loc_1409FDBA9
                mov     eax, [rsi+7E4h]
                and     ecx, 20000000h
                mov     r9, [rsi+7C8h]
                neg     ecx
                mov     rcx, rsi
                sbb     r8d, r8d
                and     r8d, [rsi+924h]
                cmp     eax, 8
                jb      short loc_1409FDB35
                mov     edx, eax
                shr     rdx, 3
                xor     r12d, r12d
                lea     r10d, [r12+1]

loc_1409FDB22:                          ; CODE XREF: sub_1409FA010+3B1F↓j
                mov     [rcx], r12
                add     eax, 0FFFFFFF8h
                add     rcx, 8
                sub     rdx, r10
                jnz     short loc_1409FDB22
                lea     r12d, [rdx+1]

loc_1409FDB35:                          ; CODE XREF: sub_1409FA010+3B02↑j
                xor     edx, edx
                test    eax, eax
                jz      short loc_1409FDB4B
                mov     r10d, 0FFFFFFFFh

loc_1409FDB41:                          ; CODE XREF: sub_1409FA010+3B39↓j
                mov     [rcx], dl
                add     rcx, r12
                add     eax, r10d
                jnz     short loc_1409FDB41

loc_1409FDB4B:                          ; CODE XREF: sub_1409FA010+3B29↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], r8d
                cmp     r8d, 3
                jz      short loc_1409FDB93
                test    dword ptr [r14+990h], 10000000h
                mov     rcx, rdx
                cmovz   ecx, r8d
                test    ecx, ecx
                jz      short loc_1409FDB8A
                mov     rax, [r14+228h]
                lea     rcx, [r9-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_1409FDBA2
; ---------------------------------------------------------------------------

loc_1409FDB8A:                          ; CODE XREF: sub_1409FA010+3B63↑j
                mov     rax, [r14+100h]
                jmp     short loc_1409FDB9A
; ---------------------------------------------------------------------------

loc_1409FDB93:                          ; CODE XREF: sub_1409FA010+3B4D↑j
                mov     rax, [r14+368h]

loc_1409FDB9A:                          ; CODE XREF: sub_1409FA010+3B81↑j
                mov     rcx, r9
                call    j__guard_dispatch_icall_nop

loc_1409FDBA2:                          ; CODE XREF: sub_1409FA010+3B78↑j
                mov     [r14+924h], ebx

loc_1409FDBA9:                          ; CODE XREF: sub_1409FA010+3AD7↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rbp+0BE0h+arg_8]
                jmp     short loc_1409FDBD6
; ---------------------------------------------------------------------------

loc_1409FDBBA:                          ; CODE XREF: sub_1409FA010+3AC8↑j
                                        ; sub_1409FA010+40A7↓j ...
                mov     [rbp+0BE0h+var_B98], rax

loc_1409FDBBE:                          ; CODE XREF: sub_1409FA010+488B↓j
                mov     ecx, 0C000009Ah
                jmp     loc_1409FDA4A
; ---------------------------------------------------------------------------

loc_1409FDBC8:                          ; CODE XREF: sub_1409FA010+3AAB↑j
                mov     r14, rsi
                mov     [rsp+0CE0h+var_C88], rsi
                mov     [rsi+7E4h], eax

loc_1409FDBD6:                          ; CODE XREF: sub_1409FA010+3BA8↑j
                mov     eax, 6
                lea     r12, [r14+r15]
                add     [r14+80Ch], eax
                lea     rdi, [rbp+0BE0h+var_7D0]
                mov     [rbp+0BE0h+var_958], r12
                lea     rsi, [rbp+0BE0h+var_9C8]
                mov     [rbp+0BE0h+var_B38], r12
                xor     r10d, r10d
                lea     r11d, [rax-5]
                mov     [rbp+0BE0h+var_C60], rax

loc_1409FDC0D:                          ; CODE XREF: sub_1409FA010+3D9A↓j
                mov     r13d, [rsi]
                mov     rdx, rax
                mov     r15, [rdi]
                mov     ecx, 30h ; '0'
                mov     [rbp+0BE0h+var_BF0], r13d
                mov     rax, r12

loc_1409FDC22:                          ; CODE XREF: sub_1409FA010+3C1F↓j
                mov     [rax], r10
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r11
                jnz     short loc_1409FDC22
                test    ecx, ecx
                jz      short loc_1409FDC44
                mov     edx, 0FFFFFFFFh

loc_1409FDC3A:                          ; CODE XREF: sub_1409FA010+3C32↓j
                mov     [rax], r10b
                add     rax, r11
                add     ecx, edx
                jnz     short loc_1409FDC3A

loc_1409FDC44:                          ; CODE XREF: sub_1409FA010+3C23↑j
                mov     [r12], r9d
                lea     rcx, [r15+r13]
                mov     [r12+8], r15
                mov     r10, r15
                mov     [r12+10h], r13d
                mov     rax, r15
                add     [r14+828h], r13d
                mov     ebx, [r14+814h]
                mov     r11, [r14+818h]
                cmp     r15, rcx
                jnb     short loc_1409FDC86
                mov     edx, 40h ; '@'

loc_1409FDC7B:                          ; CODE XREF: sub_1409FA010+3C74↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_1409FDC7B

loc_1409FDC86:                          ; CODE XREF: sub_1409FA010+3C64↑j
                mov     r9d, r13d
                mov     r8, r11
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_1409FDD06
                mov     r13, 7010008004002001h

loc_1409FDC9F:                          ; CODE XREF: sub_1409FA010+3CEB↓j
                mov     edx, 8
                lea     r14d, [rdx-7]

loc_1409FDCA8:                          ; CODE XREF: sub_1409FA010+3CB4↓j
                mov     rax, [r10]
                mov     ecx, ebx
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r14
                jnz     short loc_1409FDCA8
                mov     rcx, r10
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     ebx, edx
                mov     [rbp+0BE0h+var_1C8], rdx
                xor     ebx, eax
                mov     rax, r14
                and     ebx, 3Fh
                cmovz   ebx, eax
                mov     eax, 0FFFFFFFFh
                add     r9d, eax
                jnz     short loc_1409FDC9F
                mov     r14, [rsp+0CE0h+var_C88]
                mov     r13d, [rbp+0BE0h+var_BF0]

loc_1409FDD06:                          ; CODE XREF: sub_1409FA010+3C83↑j
                mov     edx, r13d
                mov     r11d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_1409FDD32
                mov     r9d, edx
                shr     r9, 3

loc_1409FDD1E:                          ; CODE XREF: sub_1409FA010+3D20↓j
                xor     r8, [r10]
                mov     ecx, ebx
                rol     r8, cl
                add     r10, 8
                add     edx, 0FFFFFFF8h
                sub     r9, r11
                jnz     short loc_1409FDD1E

loc_1409FDD32:                          ; CODE XREF: sub_1409FA010+3D05↑j
                test    edx, edx
                jz      short loc_1409FDD55
                mov     r14d, 0FFFFFFFFh

loc_1409FDD3C:                          ; CODE XREF: sub_1409FA010+3D3E↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, ebx
                xor     r8, rax
                add     r10, r11
                rol     r8, cl
                add     edx, r14d
                jnz     short loc_1409FDD3C
                mov     r14, [rsp+0CE0h+var_C88]

loc_1409FDD55:                          ; CODE XREF: sub_1409FA010+3D24↑j
                mov     rax, r8
                shr     rax, 1Fh
                xor     r10d, r10d
                jmp     short loc_1409FDD68
; ---------------------------------------------------------------------------

loc_1409FDD61:                          ; CODE XREF: sub_1409FA010+3D5B↓j
                xor     r8d, eax
                shr     rax, 1Fh

loc_1409FDD68:                          ; CODE XREF: sub_1409FA010+3D4F↑j
                test    rax, rax
                jnz     short loc_1409FDD61
                mov     r9d, dword ptr [rbp+0BE0h+arg_8]
                btr     r8d, 1Fh
                mov     [r12+14h], r8d
                add     rdi, 8
                add     [r14+828h], r13d
                lea     r13d, [rax+4]
                mov     r12, [rbp+0BE0h+var_958]
                lea     eax, [r13+2]
                add     r12, 30h ; '0'
                add     rsi, r13
                sub     [rbp+0BE0h+var_C60], r11
                mov     [rbp+0BE0h+var_958], r12
                jnz     loc_1409FDC0D
                mov     rbx, [rbp+0BE0h+var_B38]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r12, [rsp+0CE0h+var_C68]
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     r15d, dword ptr [rbp+0BE0h+var_BF8]
                mov     dword ptr [rbx], 2Ch ; ','
                mov     [rbx+18h], r12
                test    dword ptr [r14+990h], 10200000h
                jnz     short loc_1409FDE0C
                test    r15d, r15d
                jnz     short loc_1409FDE11
                test    dword ptr [r14+994h], 8000h
                jz      short loc_1409FDE19
                or      [rbx+20h], r11d
                mov     rdx, r12
                mov     rcx, r14
                call    sub_140A11C50
                test    eax, eax
                jz      short loc_1409FDE19
                or      [rbx+20h], r13d

loc_1409FDE0C:                          ; CODE XREF: sub_1409FA010+3DD1↑j
                test    r15d, r15d
                jz      short loc_1409FDE19

loc_1409FDE11:                          ; CODE XREF: sub_1409FA010+3DD6↑j
                mov     eax, 2
                or      [rbx+20h], eax

loc_1409FDE19:                          ; CODE XREF: sub_1409FA010+3DE3↑j
                                        ; sub_1409FA010+3DF6↑j ...
                mov     r8d, [rbp+0BE0h+var_C58]
                lea     rax, [rbp+0BE0h+var_A28]
                mov     rdx, [rbp+0BE0h+var_C48]
                lea     rcx, [rbp+0BE0h+var_B98]
                mov     [rsp+0CE0h+var_CA8], rax
                mov     rbx, r14
                lea     rax, [rbp+0BE0h+var_B24]
                mov     [rbp+0BE0h+var_B98], r14
                mov     [rsp+0CE0h+var_CB0], rax
                mov     r9, r12
                mov     dword ptr [rsp+0CE0h+var_CB8], 9
                mov     dword ptr [rsp+0CE0h+var_CC0], r15d
                mov     [rbp+0BE0h+var_B50], rbx
                call    sub_140A10098
                mov     ecx, eax
                test    eax, eax
                js      loc_1409FDA4A
                mov     rbx, [rbp+0BE0h+var_B98]
                mov     rcx, [rbp+0BE0h+var_B38]
                mov     rax, rbx
                mov     r9d, [rbp+0BE0h+var_A28]
                sub     rax, r14
                mov     r15d, [rbp+0BE0h+var_B24]
                add     rcx, rax
                sub     r9d, [rbp+0BE0h+var_B24]
                add     r15, r12
                mov     [rbp+0BE0h+var_B38], rcx
                xor     r8d, r8d
                mov     [rbp+0BE0h+var_B50], rbx
                lea     r13, [rcx+0C0h]
                mov     ecx, 30h ; '0'
                mov     [rsp+0CE0h+var_C88], r13
                mov     rax, r13
                lea     edx, [rcx-2Ah]
                lea     r10d, [rcx-2Fh]

loc_1409FDEC2:                          ; CODE XREF: sub_1409FA010+3EBF↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r10
                jnz     short loc_1409FDEC2
                mov     rdx, r10
                test    ecx, ecx
                jz      short loc_1409FDEE9
                mov     r10d, 0FFFFFFFFh

loc_1409FDEDE:                          ; CODE XREF: sub_1409FA010+3ED7↓j
                mov     [rax], r8b
                add     rax, rdx
                add     ecx, r10d
                jnz     short loc_1409FDEDE

loc_1409FDEE9:                          ; CODE XREF: sub_1409FA010+3EC6↑j
                mov     eax, dword ptr [rbp+0BE0h+arg_8]
                mov     r10, r15
                mov     [r13+0], eax
                mov     rax, r15
                mov     [r13+8], r15
                mov     [r13+10h], r9d
                add     [rbx+828h], r9d
                mov     r14d, [rbx+814h]
                mov     r12, [rbx+818h]
                mov     ecx, r9d
                add     rcx, r15
                cmp     r15, rcx
                jnb     short loc_1409FDF32
                mov     r8d, 40h ; '@'

loc_1409FDF27:                          ; CODE XREF: sub_1409FA010+3F20↓j
                prefetchnta byte ptr [rax]
                add     rax, r8
                cmp     rax, rcx
                jb      short loc_1409FDF27

loc_1409FDF32:                          ; CODE XREF: sub_1409FA010+3F0F↑j
                mov     r11d, r9d
                mov     r8, r12
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_1409FDFB7
                mov     edi, 0FFFFFFFFh
                mov     r13, 7010008004002001h

loc_1409FDF50:                          ; CODE XREF: sub_1409FA010+3F94↓j
                mov     eax, 8

loc_1409FDF55:                          ; CODE XREF: sub_1409FA010+3F5C↓j
                xor     r8, [r10]
                mov     ecx, r14d
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, rdx
                jnz     short loc_1409FDF55
                mov     rcx, r10
                sub     rcx, r15
                xor     rcx, r12
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     r14d, edx
                mov     [rbp+0BE0h+var_1C0], rdx
                xor     r14d, eax
                mov     edx, 1
                and     r14d, 3Fh
                cmovz   r14d, edx
                add     r11d, edi
                jnz     short loc_1409FDF50
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r13, [rsp+0CE0h+var_C88]

loc_1409FDFB7:                          ; CODE XREF: sub_1409FA010+3F2F↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_1409FDFDE
                mov     eax, r9d
                shr     rax, 3

loc_1409FDFC8:                          ; CODE XREF: sub_1409FA010+3FCC↓j
                xor     r8, [r10]
                mov     ecx, r14d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_1409FDFC8

loc_1409FDFDE:                          ; CODE XREF: sub_1409FA010+3FAF↑j
                test    r9d, r9d
                jz      short loc_1409FE002
                mov     esi, 0FFFFFFFFh

loc_1409FDFE8:                          ; CODE XREF: sub_1409FA010+3FEB↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r14d
                xor     r8, rax
                add     r10, rdx
                rol     r8, cl
                add     r9d, esi
                jnz     short loc_1409FDFE8
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FE002:                          ; CODE XREF: sub_1409FA010+3FD1↑j
                mov     rax, r8
                shr     rax, 1Fh
                xor     ecx, ecx
                jmp     short loc_1409FE014
; ---------------------------------------------------------------------------

loc_1409FE00D:                          ; CODE XREF: sub_1409FA010+4007↓j
                xor     r8d, eax
                shr     rax, 1Fh

loc_1409FE014:                          ; CODE XREF: sub_1409FA010+3FFB↑j
                test    rax, rax
                jnz     short loc_1409FE00D
                mov     r15d, dword ptr [rbp+0BE0h+var_BF8]
                btr     r8d, 1Fh
                mov     [r13+14h], r8d
                mov     rdx, [rbp+0BE0h+var_B38]
                mov     dword ptr [rdx+0F0h], 30h ; '0'
                cmp     [rdx+100h], eax
                jz      short loc_1409FE056
                mov     eax, [rdx+108h]
                test    r15d, r15d
                setnz   cl
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [rdx+108h], ecx

loc_1409FE056:                          ; CODE XREF: sub_1409FA010+402D↑j
                mov     rcx, [rbp+0BE0h+var_B38]
                mov     eax, r15d
                add     rcx, 60h ; '`'
                mov     [rbp+0BE0h+var_B50], rbx
                neg     eax
                mov     [rbp+0BE0h+var_AB0], rcx
                sbb     r12d, r12d
                neg     r12d
                add     r12d, 0Dh
                test    rcx, rcx
                jnz     loc_1409FE328
                mov     r15d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r15+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_1409FE185
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jz      loc_1409FDBBA
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_1409FE17B
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                mov     r10d, 1
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_1409FE10C
                mov     ecx, eax
                shr     rcx, 3
                xor     r9d, r9d

loc_1409FE0FD:                          ; CODE XREF: sub_1409FA010+40FA↓j
                mov     [rbx], r9
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r10
                jnz     short loc_1409FE0FD

loc_1409FE10C:                          ; CODE XREF: sub_1409FA010+40E2↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_1409FE122
                mov     r9d, 0FFFFFFFFh

loc_1409FE118:                          ; CODE XREF: sub_1409FA010+4110↓j
                mov     [rbx], cl
                add     rbx, r10
                add     eax, r9d
                jnz     short loc_1409FE118

loc_1409FE122:                          ; CODE XREF: sub_1409FA010+4100↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_1409FE165
                test    dword ptr [r14+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_1409FE15C
                mov     rax, [r14+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_1409FE174
; ---------------------------------------------------------------------------

loc_1409FE15C:                          ; CODE XREF: sub_1409FA010+4135↑j
                mov     rax, [r14+100h]
                jmp     short loc_1409FE16C
; ---------------------------------------------------------------------------

loc_1409FE165:                          ; CODE XREF: sub_1409FA010+4123↑j
                mov     rax, [r14+368h]

loc_1409FE16C:                          ; CODE XREF: sub_1409FA010+4153↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_1409FE174:                          ; CODE XREF: sub_1409FA010+414A↑j
                mov     [r14+924h], ebx

loc_1409FE17B:                          ; CODE XREF: sub_1409FA010+40B6↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                jmp     short loc_1409FE18E
; ---------------------------------------------------------------------------

loc_1409FE185:                          ; CODE XREF: sub_1409FA010+408F↑j
                mov     r14, rbx
                mov     [rbx+7E4h], eax

loc_1409FE18E:                          ; CODE XREF: sub_1409FA010+4173↑j
                add     r15, r14
                mov     r9d, 1
                add     [r14+80Ch], r9d
                mov     rax, r15
                mov     [rbp+0BE0h+var_880], r15
                xor     r8d, r8d
                lea     ecx, [r9+2Fh]
                lea     edx, [rcx-2Ah]

loc_1409FE1B2:                          ; CODE XREF: sub_1409FA010+41AF↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r9
                jnz     short loc_1409FE1B2
                test    ecx, ecx
                jz      short loc_1409FE1D4
                mov     edx, 0FFFFFFFFh

loc_1409FE1CA:                          ; CODE XREF: sub_1409FA010+41C2↓j
                mov     [rax], r8b
                add     rax, r9
                add     ecx, edx
                jnz     short loc_1409FE1CA

loc_1409FE1D4:                          ; CODE XREF: sub_1409FA010+41B3↑j
                mov     r13, [rbp+0BE0h+var_C50]
                mov     [r15], r12d
                mov     r9, r13
                mov     r12d, [rsp+0CE0h+var_C78]
                mov     [r15+8], r13
                mov     [r15+10h], r12d
                add     [r14+828h], r12d
                mov     r11d, [r14+814h]
                lea     rcx, [r12+r13]
                mov     rbx, [r14+818h]
                cmp     r13, rcx
                jnb     short loc_1409FE21C
                mov     rax, r13
                mov     edx, 40h ; '@'

loc_1409FE211:                          ; CODE XREF: sub_1409FA010+420A↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_1409FE211

loc_1409FE21C:                          ; CODE XREF: sub_1409FA010+41F7↑j
                mov     r10d, r12d
                mov     r8, rbx
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_1409FE2A2
                mov     esi, 1
                mov     rdi, 7010008004002001h
                mov     r12d, 0FFFFFFFFh

loc_1409FE240:                          ; CODE XREF: sub_1409FA010+427F↓j
                mov     eax, 8

loc_1409FE245:                          ; CODE XREF: sub_1409FA010+424C↓j
                xor     r8, [r9]
                mov     ecx, r11d
                rol     r8, cl
                xor     r8, [r9+8]
                add     r9, 10h
                rol     r8, cl
                sub     rax, rsi
                jnz     short loc_1409FE245
                mov     rcx, r9
                sub     rcx, r13
                xor     rcx, rbx
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r11d, edx
                mov     [rbp+0BE0h+var_1B8], rdx
                xor     r11d, eax
                and     r11d, 3Fh
                cmovz   r11d, esi
                add     r10d, r12d
                jnz     short loc_1409FE240
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r12d, [rsp+0CE0h+var_C78]

loc_1409FE2A2:                          ; CODE XREF: sub_1409FA010+4219↑j
                mov     edx, r12d
                mov     r10d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_1409FE2CE
                mov     eax, edx
                shr     rax, 3

loc_1409FE2B9:                          ; CODE XREF: sub_1409FA010+42BC↓j
                xor     r8, [r9]
                mov     ecx, r11d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r10
                jnz     short loc_1409FE2B9

loc_1409FE2CE:                          ; CODE XREF: sub_1409FA010+42A1↑j
                test    edx, edx
                jz      short loc_1409FE2F0
                mov     esi, 0FFFFFFFFh

loc_1409FE2D7:                          ; CODE XREF: sub_1409FA010+42D9↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     r8, rax
                add     r9, r10
                rol     r8, cl
                add     edx, esi
                jnz     short loc_1409FE2D7
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FE2F0:                          ; CODE XREF: sub_1409FA010+42C0↑j
                mov     rax, r8
                jmp     short loc_1409FE2F8
; ---------------------------------------------------------------------------

loc_1409FE2F5:                          ; CODE XREF: sub_1409FA010+42EF↓j
                xor     r8d, eax

loc_1409FE2F8:                          ; CODE XREF: sub_1409FA010+42E3↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_1409FE2F5
                btr     r8d, 1Fh
                mov     rbx, r14
                mov     [r15+14h], r8d
                mov     rax, [rbp+0BE0h+var_880]
                mov     r15d, dword ptr [rbp+0BE0h+var_BF8]
                mov     [rbp+0BE0h+var_AB0], rax
                add     [r14+828h], r12d
                jmp     short loc_1409FE334
; ---------------------------------------------------------------------------

loc_1409FE328:                          ; CODE XREF: sub_1409FA010+4071↑j
                mov     r13, [rbp+0BE0h+var_C50]
                mov     [rcx], r12d
                mov     r12d, [rsp+0CE0h+var_C78]

loc_1409FE334:                          ; CODE XREF: sub_1409FA010+4316↑j
                test    dword ptr [rbx+990h], 40000000h
                jz      short loc_1409FE35E
                test    r12d, r12d
                jz      short loc_1409FE35E
                mov     r9, [rbp+0BE0h+var_AB0]
                mov     r8d, r12d
                add     r9, 1Ch
                mov     rdx, r13
                mov     rcx, rbx
                call    sub_1403EA0CC

loc_1409FE35E:                          ; CODE XREF: sub_1409FA010+432E↑j
                                        ; sub_1409FA010+4333↑j
                mov     rax, [rbp+0BE0h+var_AB0]
                xor     ecx, ecx
                mov     r12, [rsp+0CE0h+var_C68]
                mov     [rbp+0BE0h+var_B50], rbx
                mov     [rax+18h], ecx
                lea     r13d, [rcx+1]
                mov     rax, [rbp+0BE0h+var_AB0]
                or      [rax+18h], r13d
                xor     eax, eax
                mov     r14, [rbp+0BE0h+var_B38]
                test    r15d, r15d
                setnz   cl
                mov     dword ptr [r14+90h], 23h ; '#'
                mov     eax, [r14+0B8h]
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [r14+0B8h], ecx
                cmp     dword ptr [r14+0A0h], 94h
                jb      short loc_1409FE430
                mov     rax, [rbx+1F8h]
                mov     rcx, r12
                mov     r15, [r14+98h]
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      loc_1409FDBBA
                mov     ecx, [rax+50h]
                mov     eax, 2
                or      [r14+0B8h], eax
                add     rcx, r12
                mov     rax, [r15+70h]
                cmp     rax, r12
                jb      short loc_1409FE410
                cmp     rax, rcx
                jnb     short loc_1409FE410
                mov     rax, [rax]
                mov     [r14+0A8h], rax
                or      dword ptr [r14+0B8h], 4

loc_1409FE410:                          ; CODE XREF: sub_1409FA010+43E7↑j
                                        ; sub_1409FA010+43EC↑j
                mov     rax, [r15+78h]
                cmp     rax, r12
                jb      short loc_1409FE430
                cmp     rax, rcx
                jnb     short loc_1409FE430
                mov     rax, [rax]
                mov     [r14+0B0h], rax
                or      dword ptr [r14+0B8h], 8

loc_1409FE430:                          ; CODE XREF: sub_1409FA010+43AD↑j
                                        ; sub_1409FA010+4407↑j ...
                test    dword ptr [rbx+990h], 400000h
                mov     [rbp+0BE0h+var_B98], rbx
                jz      loc_1409FF3DC
                mov     rax, [rbx+1F8h]
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                mov     [rbp+0BE0h+var_C20], rax
                mov     r15, rax
                test    rax, rax
                jz      loc_1409FDA45
                movzx   r10d, word ptr [r15+6]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mov     ecx, [rbp+0BE0h+var_C58]
                mul     rcx
                xor     eax, eax
                mov     word ptr [rbp+0BE0h+arg_8], r10w
                mov     r9, rdx
                shr     r9, 3
                mov     [rbp+0BE0h+var_C50], r9
                test    r10w, r10w
                jnz     short loc_1409FE4F4
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0DA76
                cmp     [rbx+8F8h], eax
                jnz     loc_1409FDA45
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     [rbx+900h], rax
                xor     eax, eax
                mov     [rbx+908h], rax
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], r12
                mov     [rbx+8F8h], r13d

loc_1409FE4E5:                          ; CODE XREF: sub_1409FA010+47D6↓j
                                        ; sub_1409FA010+4838↓j
                xor     edx, edx
                mov     rcx, rbx
                call    sub_140A113CC
                jmp     loc_1409FDA45
; ---------------------------------------------------------------------------

loc_1409FE4F4:                          ; CODE XREF: sub_1409FA010+4481↑j
                mov     rdx, [rbp+0BE0h+var_C48]
                movzx   r11d, word ptr [r15+14h]
                mov     r13, rdx
                mov     eax, r9d
                add     r11, 18h
                add     r11, r15
                mov     [rsp+0CE0h+var_C88], r11
                lea     r12, [rax+rax*2]
                shl     r12, 2
                mov     [rsp+0CE0h+var_C70], r12
                lea     rax, [r12+rdx]
                xor     edx, edx
                mov     [rbp+0BE0h+var_C10], rax
                xor     eax, eax
                mov     r14, [rbp+0BE0h+var_C10]
                mov     ecx, eax
                mov     [rsp+0CE0h+var_C78], eax
                movzx   eax, r10w
                test    eax, eax
                jz      loc_1409FE770
                mov     r8, r11
                mov     [rbp+0BE0h+var_C60], r11
                lea     r15d, [rdx+1]

loc_1409FE549:                          ; CODE XREF: sub_1409FA010+474B↓j
                mov     edx, [r8+10h]
                mov     eax, [r8+8]
                cmp     edx, eax
                mov     r9d, [r8+0Ch]
                cmovbe  edx, eax
                mov     [rbp+0BE0h+var_BF0], r9d
                add     edx, r9d
                mov     [rbp+0BE0h+var_BC4], edx
                test    ecx, ecx
                jz      short loc_1409FE57E
                lea     eax, [rcx-1]
                lea     rax, [rax+rax*4]
                cmp     edx, [r11+rax*8+0Ch]
                jb      loc_1409FE78D
                mov     ecx, [rsp+0CE0h+var_C78]

loc_1409FE57E:                          ; CODE XREF: sub_1409FA010+4556↑j
                cmp     r13, r14
                jz      loc_1409FE746

loc_1409FE587:                          ; CODE XREF: sub_1409FA010+4715↓j
                mov     ecx, [r13+0]
                mov     eax, [r13+4]
                cmp     ecx, edx
                jnb     loc_1409FE72B
                cmp     eax, r9d
                jbe     loc_1409FE72B
                cmp     ecx, r9d
                jb      loc_1409FE7EB
                cmp     eax, edx
                ja      loc_1409FE7EB
                mov     eax, [r13+8]
                mov     ecx, 1
                test    cl, al
                mov     [rbp+0BE0h+var_1B0], r13
                mov     rcx, [rsp+0CE0h+var_C68]
                jnz     short loc_1409FE5D5
                mov     al, [rax+rcx]
                test    al, 20h
                jz      loc_1409FE71D

loc_1409FE5D5:                          ; CODE XREF: sub_1409FA010+45B8↑j
                mov     eax, [r8+8]
                mov     rdx, rcx
                mov     r15d, [r8+10h]
                mov     rcx, r13
                mov     r12d, [r8+0Ch]
                cmp     r15d, eax
                cmovbe  r15d, eax
                mov     rax, [rbx+418h]
                add     r15d, r12d
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                cmp     [rax], r12d
                jb      short loc_1409FE60B
                cmp     [rax+4], r15d
                jbe     short loc_1409FE67B

loc_1409FE60B:                          ; CODE XREF: sub_1409FA010+45F3↑j
                mov     r8, [rsp+0CE0h+var_C68]
                mov     eax, 80000000h
                mov     edx, r14d
                sub     edx, r8d
                or      edx, eax
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0DB01
                cmp     [rbx+8F8h], eax
                jnz     short loc_1409FE67B
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rbx
                mov     rcx, rbx
                mov     [rbx+900h], rax
                xor     eax, eax
                mov     [rbx+908h], rax
                mov     eax, 1
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], r8
                mov     [rbx+8F8h], eax
                call    sub_140A113CC

loc_1409FE67B:                          ; CODE XREF: sub_1409FA010+45F9↑j
                                        ; sub_1409FA010+4625↑j
                mov     r8d, [r14]
                mov     rcx, r14
                add     r8, [rsp+0CE0h+var_C68]
                mov     rax, [rbx+420h]
                mov     rdx, [rsp+0CE0h+var_C68]
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                cmp     [rax], r12d
                jb      short loc_1409FE6A5
                cmp     [rax+4], r15d
                jbe     short loc_1409FE712

loc_1409FE6A5:                          ; CODE XREF: sub_1409FA010+468D↑j
                mov     r8, [rsp+0CE0h+var_C68]
                mov     eax, 80000000h
                sub     edx, r8d
                or      edx, eax
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0DAD5
                cmp     [rbx+8F8h], eax
                jnz     short loc_1409FE712
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rbx
                mov     rcx, rbx
                mov     [rbx+900h], rax
                xor     eax, eax
                mov     [rbx+908h], rax
                mov     eax, 1
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], r8
                mov     [rbx+8F8h], eax
                call    sub_140A113CC

loc_1409FE712:                          ; CODE XREF: sub_1409FA010+4693↑j
                                        ; sub_1409FA010+46BC↑j
                mov     edx, [rbp+0BE0h+var_BC4]
                mov     r8, [rbp+0BE0h+var_C60]
                mov     r9d, [rbp+0BE0h+var_BF0]

loc_1409FE71D:                          ; CODE XREF: sub_1409FA010+45BF↑j
                add     r13, 0Ch
                cmp     r13, [rbp+0BE0h+var_C10]
                jnz     loc_1409FE587

loc_1409FE72B:                          ; CODE XREF: sub_1409FA010+4581↑j
                                        ; sub_1409FA010+458A↑j
                mov     ecx, [rsp+0CE0h+var_C78]
                mov     r15d, 1
                movzx   r10d, word ptr [rbp+0BE0h+arg_8]
                mov     r11, [rsp+0CE0h+var_C88]
                mov     r14, [rbp+0BE0h+var_C10]

loc_1409FE746:                          ; CODE XREF: sub_1409FA010+4571↑j
                add     ecx, r15d
                movzx   eax, r10w
                add     r8, 28h ; '('
                mov     [rsp+0CE0h+var_C78], ecx
                mov     [rbp+0BE0h+var_C60], r8
                cmp     ecx, eax
                jb      loc_1409FE549
                mov     r9, [rbp+0BE0h+var_C50]
                xor     edx, edx
                mov     r15, [rbp+0BE0h+var_C20]
                mov     r12, [rsp+0CE0h+var_C70]

loc_1409FE770:                          ; CODE XREF: sub_1409FA010+4528↑j
                cmp     r13, r14
                jz      loc_1409FE84D
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0DB60
                xor     eax, eax
                jmp     short loc_1409FE7FD
; ---------------------------------------------------------------------------

loc_1409FE78D:                          ; CODE XREF: sub_1409FA010+4564↑j
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0DAA4
                cmp     [rbx+8F8h], eax
                jnz     loc_1409FDA45
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     [rbx+900h], rax
                xor     eax, eax
                mov     [rbx+908h], rax
                mov     rax, [rsp+0CE0h+var_C68]
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], rax
                mov     [rbx+8F8h], r15d
                jmp     loc_1409FE4E5
; ---------------------------------------------------------------------------

loc_1409FE7EB:                          ; CODE XREF: sub_1409FA010+4593↑j
                                        ; sub_1409FA010+459B↑j
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0DB2D

loc_1409FE7FD:                          ; CODE XREF: sub_1409FA010+477B↑j
                cmp     [rbx+8F8h], eax
                jnz     loc_1409FDA45
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     [rbx+900h], rax
                xor     eax, eax
                mov     [rbx+908h], rax
                mov     rax, [rsp+0CE0h+var_C68]
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], rax
                mov     eax, 1
                mov     [rbx+8F8h], eax
                jmp     loc_1409FE4E5
; ---------------------------------------------------------------------------

loc_1409FE84D:                          ; CODE XREF: sub_1409FA010+4763↑j
                xor     r11d, r11d
                test    r9d, r9d
                jz      short loc_1409FE85E
                lea     ecx, [r9+6]
                and     ecx, 0FFFFFFF8h
                jmp     short loc_1409FE861
; ---------------------------------------------------------------------------

loc_1409FE85E:                          ; CODE XREF: sub_1409FA010+4843↑j
                mov     ecx, r11d

loc_1409FE861:                          ; CODE XREF: sub_1409FA010+484C↑j
                mov     r14d, [rbx+7E4h]
                lea     eax, [rax+rax*2]
                mov     r8d, [rbx+924h]
                lea     ecx, [rcx+rax*8]
                lea     eax, [r14+30h]
                add     eax, ecx
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_1409FE978
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     [rbp+0BE0h+var_C20], rax
                mov     r13, rax
                test    rax, rax
                jz      loc_1409FDBBE
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_1409FE95F
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                mov     r10d, 1
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_1409FE8F0
                mov     ecx, eax
                shr     rcx, 3
                xor     r9d, r9d

loc_1409FE8E1:                          ; CODE XREF: sub_1409FA010+48DE↓j
                mov     [rbx], r9
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r10
                jnz     short loc_1409FE8E1

loc_1409FE8F0:                          ; CODE XREF: sub_1409FA010+48C6↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_1409FE906
                mov     r9d, 0FFFFFFFFh

loc_1409FE8FC:                          ; CODE XREF: sub_1409FA010+48F4↓j
                mov     [rbx], cl
                add     rbx, r10
                add     eax, r9d
                jnz     short loc_1409FE8FC

loc_1409FE906:                          ; CODE XREF: sub_1409FA010+48E4↑j
                mov     ebx, [r13+924h]
                mov     [r13+924h], edx
                cmp     edx, 3
                jz      short loc_1409FE949
                test    dword ptr [r13+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_1409FE940
                mov     rax, [r13+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_1409FE958
; ---------------------------------------------------------------------------

loc_1409FE940:                          ; CODE XREF: sub_1409FA010+4919↑j
                mov     rax, [r13+100h]
                jmp     short loc_1409FE950
; ---------------------------------------------------------------------------

loc_1409FE949:                          ; CODE XREF: sub_1409FA010+4907↑j
                mov     rax, [r13+368h]

loc_1409FE950:                          ; CODE XREF: sub_1409FA010+4937↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_1409FE958:                          ; CODE XREF: sub_1409FA010+492E↑j
                mov     [r13+924h], ebx

loc_1409FE95F:                          ; CODE XREF: sub_1409FA010+489A↑j
                and     dword ptr [r13+990h], 0FFFFFFFBh
                mov     r9, [rbp+0BE0h+var_C50]
                xor     r11d, r11d
                movzx   r10d, word ptr [rbp+0BE0h+arg_8]
                jmp     short loc_1409FE985
; ---------------------------------------------------------------------------

loc_1409FE978:                          ; CODE XREF: sub_1409FA010+4871↑j
                mov     r13, rbx
                mov     [rbp+0BE0h+var_C20], rbx
                mov     [rbx+7E4h], eax

loc_1409FE985:                          ; CODE XREF: sub_1409FA010+4966↑j
                mov     ebx, 1
                lea     r8, [r14+r13]
                add     [r13+80Ch], ebx
                mov     rax, r8
                mov     [rbp+0BE0h+var_848], r8
                lea     ecx, [rbx+2Fh]
                lea     edx, [rbx+5]

loc_1409FE9A5:                          ; CODE XREF: sub_1409FA010+49A2↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_1409FE9A5
                test    ecx, ecx
                jz      short loc_1409FE9C7
                mov     edx, 0FFFFFFFFh

loc_1409FE9BD:                          ; CODE XREF: sub_1409FA010+49B5↓j
                mov     [rax], r11b
                add     rax, rbx
                add     ecx, edx
                jnz     short loc_1409FE9BD

loc_1409FE9C7:                          ; CODE XREF: sub_1409FA010+49A6↑j
                mov     rax, [rbp+0BE0h+var_C48]
                mov     dword ptr [r8], 1Eh
                mov     [r8+8], rax
                xor     eax, eax
                mov     [r8+10h], eax
                mov     rcx, [r13+818h]
                mov     rax, rcx
                jmp     short loc_1409FE9EA
; ---------------------------------------------------------------------------

loc_1409FE9E8:                          ; CODE XREF: sub_1409FA010+49E1↓j
                xor     ecx, eax

loc_1409FE9EA:                          ; CODE XREF: sub_1409FA010+49D6↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_1409FE9E8
                btr     ecx, 1Fh
                mov     rbx, r13
                mov     [r8+14h], ecx
                mov     r8d, 0FFFEh
                mov     rax, [rbp+0BE0h+var_848]
                mov     rcx, [rsp+0CE0h+var_C68]
                mov     [rbp+0BE0h+var_B18], rax
                mov     [rbp+0BE0h+var_B98], rbx
                mov     [rax+18h], rcx
                mov     ecx, [r15+50h]
                mov     rax, [rbp+0BE0h+var_B18]
                mov     [rax+20h], ecx
                mov     rax, [rbp+0BE0h+var_B18]
                mov     ecx, [rbp+0BE0h+var_C58]
                mov     [rax+24h], ecx
                mov     rax, [rbp+0BE0h+var_B18]
                mov     [rax+28h], r10w
                xor     eax, eax
                cmp     dword ptr [rbp+0BE0h+var_BF8], eax
                mov     ecx, eax
                mov     rdx, [rbp+0BE0h+var_B18]
                setnz   cl
                movzx   eax, word ptr [rdx+2Ah]
                and     ax, r8w
                or      cx, ax
                mov     [rdx+2Ah], cx
                mov     rcx, [rbp+0BE0h+var_B18]
                lea     rdx, [rcx+30h]
                mov     [rbp+0BE0h+var_C50], rdx
                test    r9d, r9d
                jz      short loc_1409FEA8B
                lea     r14d, [r9-1]
                add     r14, 7
                and     r14, 0FFFFFFFFFFFFFFF8h
                add     r14, rdx
                jmp     short loc_1409FEA8E
; ---------------------------------------------------------------------------

loc_1409FEA8B:                          ; CODE XREF: sub_1409FA010+4A68↑j
                mov     r14, rdx

loc_1409FEA8E:                          ; CODE XREF: sub_1409FA010+4A79↑j
                movzx   eax, word ptr [rcx+28h]
                mov     [rbp+0BE0h+var_C60], r14
                lea     rcx, [rax+rax*2]
                xor     eax, eax
                test    r9d, r9d
                lea     r8, [r14+rcx*8]
                mov     r9, [rbp+0BE0h+var_C48]
                mov     [rsp+0CE0h+var_C70], r8
                lea     r15d, [rax+0Ch]
                cmovz   r15, r12
                add     r15, r9
                mov     [rbp+0BE0h+var_BF8], r15
                cmp     ax, r10w
                jnb     short loc_1409FEAFD
                movzx   edx, r10w
                lea     rax, [r14+8]
                xor     r10d, r10d
                mov     r12d, 80000000h
                lea     esi, [r10+2]
                lea     r11d, [r10+1]

loc_1409FEADA:                          ; CODE XREF: sub_1409FA010+4AE4↓j
                mov     rcx, rsi

loc_1409FEADD:                          ; CODE XREF: sub_1409FA010+4ADF↓j
                mov     [rax-8], r10d
                mov     [rax-4], r10d
                mov     [rax], r12d
                add     rax, 0Ch
                sub     rcx, r11
                jnz     short loc_1409FEADD
                sub     rdx, r11
                jnz     short loc_1409FEADA
                mov     rsi, [rsp+0CE0h+var_C80]
                xor     eax, eax

loc_1409FEAFD:                          ; CODE XREF: sub_1409FA010+4AAF↑j
                cmp     r14, r8
                jz      loc_1409FF3DC
                mov     r12, [rsp+0CE0h+var_C88]
                jmp     short loc_1409FEB0F
; ---------------------------------------------------------------------------

loc_1409FEB0D:                          ; CODE XREF: sub_1409FA010+53C2↓j
                xor     eax, eax

loc_1409FEB0F:                          ; CODE XREF: sub_1409FA010+4AFB↑j
                mov     r11d, eax
                mov     eax, [r12+24h]
                bt      eax, 19h
                jb      loc_1409FED21
                mov     ecx, [r12]
                cmp     ecx, 54494E49h
                jnz     short loc_1409FEB3C
                cmp     dword ptr [r12+4], 4742444Bh
                jz      loc_1409FED21

loc_1409FEB3C:                          ; CODE XREF: sub_1409FA010+4B1B↑j
                cmp     ecx, 45474150h
                jnz     short loc_1409FEB74
                movzx   eax, word ptr [r12+4]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_1409FED21
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_1409FED21
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_1409FED21

loc_1409FEB74:                          ; CODE XREF: sub_1409FA010+4B32↑j
                cmp     ecx, 41525245h
                jnz     short loc_1409FEB8D
                mov     eax, 4154h
                cmp     [r12+4], ax
                jz      loc_1409FED21

loc_1409FEB8D:                          ; CODE XREF: sub_1409FA010+4B6A↑j
                mov     rax, [r13+938h]
                mov     r10d, 7
                mov     r8, [r13+930h]
                mov     r9, r12
                mov     [rbp+0BE0h+var_828], rax
                mov     rax, [r13+940h]
                mov     [rbp+0BE0h+var_820], rax
                lea     ebx, [r10-6]
                mov     rax, [r13+948h]
                mov     [rbp+0BE0h+var_818], rax
                mov     [rbp+0BE0h+var_830], r8

loc_1409FEBD2:                          ; CODE XREF: sub_1409FA010+4BDD↓j
                movzx   edx, byte ptr [r9]
                add     r9, rbx
                movzx   eax, byte ptr [r8]
                add     r8, rbx
                cmp     rdx, rax
                jnz     short loc_1409FEBF4
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_1409FEBD2
                jmp     loc_1409FECA1
; ---------------------------------------------------------------------------

loc_1409FEBF4:                          ; CODE XREF: sub_1409FA010+4BD3↑j
                mov     r9, [rbp+0BE0h+var_828]
                mov     r8d, 8
                mov     r10, r12

loc_1409FEC04:                          ; CODE XREF: sub_1409FA010+4C0F↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_1409FEC45
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_1409FEC04
                test    r8d, r8d
                jz      short loc_1409FECA1

loc_1409FEC26:                          ; CODE XREF: sub_1409FA010+4C31↓j
                movzx   edx, byte ptr [r10]
                add     r10, rbx
                movzx   eax, byte ptr [r9]
                add     r9, rbx
                cmp     rdx, rax
                jnz     short loc_1409FEC45
                mov     eax, 0FFFFFFFFh
                add     r8d, eax
                jnz     short loc_1409FEC26
                jmp     short loc_1409FECA1
; ---------------------------------------------------------------------------

loc_1409FEC45:                          ; CODE XREF: sub_1409FA010+4C05↑j
                                        ; sub_1409FA010+4C27↑j
                mov     r8, [rbp+0BE0h+var_820]
                mov     r10d, 4
                mov     r9, r12

loc_1409FEC55:                          ; CODE XREF: sub_1409FA010+4C60↓j
                movzx   edx, byte ptr [r9]
                add     r9, rbx
                movzx   eax, byte ptr [r8]
                add     r8, rbx
                cmp     rdx, rax
                jnz     short loc_1409FEC74
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_1409FEC55
                jmp     short loc_1409FECA1
; ---------------------------------------------------------------------------

loc_1409FEC74:                          ; CODE XREF: sub_1409FA010+4C56↑j
                mov     r8, [rbp+0BE0h+var_818]
                mov     r10d, 6
                mov     r9, r12

loc_1409FEC84:                          ; CODE XREF: sub_1409FA010+4C8F↓j
                movzx   edx, byte ptr [r9]
                add     r9, rbx
                movzx   eax, byte ptr [r8]
                add     r8, rbx
                cmp     rdx, rax
                jnz     short loc_1409FECA4
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_1409FEC84

loc_1409FECA1:                          ; CODE XREF: sub_1409FA010+4BDF↑j
                                        ; sub_1409FA010+4C14↑j ...
                mov     r11d, ebx

loc_1409FECA4:                          ; CODE XREF: sub_1409FA010+4C85↑j
                mov     r9, [rbp+0BE0h+var_C48]

loc_1409FECA8:                          ; CODE XREF: sub_1409FA010+4D19↓j
                mov     ecx, [r12+24h]
                xor     eax, eax
                test    ecx, ecx
                cmovs   r11d, ebx
                mov     dword ptr [rbp+0BE0h+arg_8], r11d
                test    r11d, r11d
                jz      short loc_1409FECEC
                cmp     dword ptr [r12], 54494E49h
                jnz     short loc_1409FECEC
                cmp     dword ptr [r12+4], 4742444Bh
                jnz     short loc_1409FECEC
                test    dword ptr [r13+994h], 2000h
                cmovnz  r11d, eax
                mov     dword ptr [rbp+0BE0h+arg_8], r11d

loc_1409FECEC:                          ; CODE XREF: sub_1409FA010+4CAF↑j
                                        ; sub_1409FA010+4CB9↑j ...
                test    dword ptr [r13+994h], 4000h
                jz      short loc_1409FED2E
                bt      ecx, 1Dh
                mov     rcx, [rsp+0CE0h+var_C68]
                jnb     short loc_1409FED33
                cmp     rcx, [r13+5E8h]
                jz      short loc_1409FED16
                cmp     rcx, [r13+5F0h]
                jnz     short loc_1409FED33

loc_1409FED16:                          ; CODE XREF: sub_1409FA010+4CFB↑j
                mov     r11d, ebx
                mov     dword ptr [rbp+0BE0h+arg_8], ebx
                jmp     short loc_1409FED33
; ---------------------------------------------------------------------------

loc_1409FED21:                          ; CODE XREF: sub_1409FA010+4B0B↑j
                                        ; sub_1409FA010+4B26↑j ...
                mov     ebx, 1
                mov     r11d, ebx
                jmp     loc_1409FECA8
; ---------------------------------------------------------------------------

loc_1409FED2E:                          ; CODE XREF: sub_1409FA010+4CE7↑j
                mov     rcx, [rsp+0CE0h+var_C68]

loc_1409FED33:                          ; CODE XREF: sub_1409FA010+4CF2↑j
                                        ; sub_1409FA010+4D04↑j ...
                mov     ebx, [r12+0Ch]
                mov     r12d, [r12+10h]
                mov     rax, [rsp+0CE0h+var_C88]
                mov     r8, [rbp+0BE0h+var_C10]
                mov     [rsp+0CE0h+var_C78], ebx
                mov     eax, [rax+8]
                cmp     r12d, eax
                cmovbe  r12d, eax
                add     r12d, ebx
                mov     [rbp+0BE0h+var_BF0], r12d
                cmp     r9, r8
                jz      short loc_1409FED69
                mov     r13d, [r9]
                mov     eax, [r9+4]
                jmp     short loc_1409FED6E
; ---------------------------------------------------------------------------

loc_1409FED69:                          ; CODE XREF: sub_1409FA010+4D4E↑j
                xor     eax, eax
                mov     r13d, eax

loc_1409FED6E:                          ; CODE XREF: sub_1409FA010+4D57↑j
                mov     [rbp+0BE0h+var_BC4], eax
                mov     [rbp+0BE0h+var_C58], ebx
                cmp     r9, r8
                jz      loc_1409FEF30
                cmp     r13d, ebx
                jbe     loc_1409FEF30
                cmp     eax, r12d
                ja      loc_1409FEF30
                test    r11d, r11d
                jnz     loc_1409FEF30
                mov     [r14], ebx
                lea     rdx, [rbp+0BE0h+var_9C8]
                mov     [r14+4], r13d
                lea     r8, [rbp+0BE0h+var_7D0]
                mov     eax, [r14]
                mov     r10d, r13d
                sub     r10d, eax
                mov     [rbp+0BE0h+var_C58], r13d
                mov     r11d, r10d
                lea     r14, [rcx+rax]
                add     r11, r14
                xor     eax, eax
                mov     r9d, eax

loc_1409FEDC9:                          ; CODE XREF: sub_1409FA010+4DDE↓j
                mov     rcx, [r8]
                mov     eax, [rdx]
                add     rax, rcx
                cmp     r14, rax
                jnb     short loc_1409FEDDF
                cmp     r11, rcx
                ja      loc_1409FEF28

loc_1409FEDDF:                          ; CODE XREF: sub_1409FA010+4DC4↑j
                inc     r9d
                add     r8, 8
                add     rdx, 4
                cmp     r9d, 6
                jb      short loc_1409FEDC9
                mov     r15, [rbp+0BE0h+var_C20]
                mov     rbx, r14
                mov     rax, r14
                add     [r15+828h], r10d
                mov     r12d, [r15+814h]
                mov     r15, [r15+818h]
                cmp     r14, r11
                jnb     short loc_1409FEE24
                mov     ecx, 40h ; '@'

loc_1409FEE19:                          ; CODE XREF: sub_1409FA010+4E12↓j
                prefetchnta byte ptr [rax]
                add     rax, rcx
                cmp     rax, r11
                jb      short loc_1409FEE19

loc_1409FEE24:                          ; CODE XREF: sub_1409FA010+4E02↑j
                mov     r9d, r10d
                mov     r8, r15
                shr     r9d, 7
                mov     r11d, 1
                test    r9d, r9d
                jz      short loc_1409FEEA4
                mov     rsi, 7010008004002001h

loc_1409FEE43:                          ; CODE XREF: sub_1409FA010+4E8D↓j
                mov     edx, 8

loc_1409FEE48:                          ; CODE XREF: sub_1409FA010+4E55↓j
                mov     rax, [rbx]
                mov     ecx, r12d
                xor     rax, r8
                mov     r8, [rbx+8]
                rol     rax, cl
                add     rbx, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r11
                jnz     short loc_1409FEE48
                mov     rcx, rbx
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r12d, edx
                mov     [rbp+0BE0h+var_1A8], rdx
                xor     r12d, eax
                mov     eax, 0FFFFFFFFh
                and     r12d, 3Fh
                cmovz   r12d, r11d
                add     r9d, eax
                jnz     short loc_1409FEE43
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FEEA4:                          ; CODE XREF: sub_1409FA010+4E27↑j
                and     r10d, 7Fh
                cmp     r10d, 8
                jb      short loc_1409FEECB
                mov     edx, r10d
                shr     rdx, 3

loc_1409FEEB5:                          ; CODE XREF: sub_1409FA010+4EB9↓j
                xor     r8, [rbx]
                mov     ecx, r12d
                rol     r8, cl
                add     rbx, 8
                add     r10d, 0FFFFFFF8h
                sub     rdx, r11
                jnz     short loc_1409FEEB5

loc_1409FEECB:                          ; CODE XREF: sub_1409FA010+4E9C↑j
                test    r10d, r10d
                jz      short loc_1409FEEEE
                mov     esi, 0FFFFFFFFh

loc_1409FEED5:                          ; CODE XREF: sub_1409FA010+4ED7↓j
                movzx   eax, byte ptr [rbx]
                mov     ecx, r12d
                xor     r8, rax
                add     rbx, r11
                rol     r8, cl
                add     r10d, esi
                jnz     short loc_1409FEED5
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FEEEE:                          ; CODE XREF: sub_1409FA010+4EBE↑j
                mov     rax, r8
                shr     rax, 1Fh
                xor     edx, edx
                jmp     short loc_1409FEF00
; ---------------------------------------------------------------------------

loc_1409FEEF9:                          ; CODE XREF: sub_1409FA010+4EF3↓j
                xor     r8d, eax
                shr     rax, 1Fh

loc_1409FEF00:                          ; CODE XREF: sub_1409FA010+4EE7↑j
                test    rax, rax
                jnz     short loc_1409FEEF9
                mov     rax, [rbp+0BE0h+var_C60]
                btr     r8d, 1Fh
                mov     r12d, [rbp+0BE0h+var_BF0]
                mov     ebx, [rsp+0CE0h+var_C78]
                mov     r15, [rbp+0BE0h+var_BF8]
                mov     r9, [rbp+0BE0h+var_C48]
                mov     [rax+8], r8d
                mov     r8, [rbp+0BE0h+var_C10]
                jmp     short loc_1409FEF32
; ---------------------------------------------------------------------------

loc_1409FEF28:                          ; CODE XREF: sub_1409FA010+4DC9↑j
                mov     r8, [rbp+0BE0h+var_C10]
                mov     r9, [rbp+0BE0h+var_C48]

loc_1409FEF30:                          ; CODE XREF: sub_1409FA010+4D67↑j
                                        ; sub_1409FA010+4D70↑j ...
                xor     edx, edx

loc_1409FEF32:                          ; CODE XREF: sub_1409FA010+4F16↑j
                cmp     r13d, ebx
                jb      loc_1409FF1BF
                cmp     [rbp+0BE0h+var_BC4], r12d
                ja      loc_1409FF1BF
                cmp     r9, r8
                jz      loc_1409FF1BF
                mov     r13d, [r15+4]
                cmp     r13d, r12d
                ja      loc_1409FF1BF
                mov     rax, [rbp+0BE0h+var_C50]
                mov     ecx, 1

loc_1409FEF64:                          ; CODE XREF: sub_1409FA010+51A9↓j
                cmp     r15, r8
                jz      loc_1409FF1BF
                cmp     dword ptr [rbp+0BE0h+arg_8], edx
                jz      short loc_1409FEF7D
                mov     r8b, 80h
                jmp     loc_1409FF187
; ---------------------------------------------------------------------------

loc_1409FEF7D:                          ; CODE XREF: sub_1409FA010+4F63↑j
                mov     r15d, [r15]
                mov     ebx, [r9+4]
                mov     r11, [rbp+0BE0h+var_C20]
                mov     [rbp+0BE0h+var_C58], r15d
                cmp     r15d, ebx
                jnb     short loc_1409FEFFB
                test    dword ptr [r11+990h], 200000h
                jz      loc_140A0DB93
                xor     eax, eax
                cmp     [r11+8F8h], eax
                jnz     short loc_1409FEFFB
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r11
                mov     rcx, r11
                mov     [r11+900h], rax
                xor     eax, eax
                mov     [r11+908h], rax
                mov     rax, [rsp+0CE0h+var_C68]
                mov     qword ptr [r11+910h], 10Fh
                mov     [r11+918h], rax
                mov     eax, 1
                mov     [r11+8F8h], eax
                call    sub_140A113CC
                mov     r11, [rbp+0BE0h+var_C20]

loc_1409FEFFB:                          ; CODE XREF: sub_1409FA010+4F7F↑j
                                        ; sub_1409FA010+4F9B↑j
                mov     r14, rbx
                lea     rdx, [rbp+0BE0h+var_9C8]
                add     r14, [rsp+0CE0h+var_C68]
                lea     r8, [rbp+0BE0h+var_7D0]
                mov     r9d, r15d
                sub     r9d, ebx
                mov     ebx, r9d
                add     rbx, r14
                xor     eax, eax
                mov     r10d, eax

loc_1409FF022:                          ; CODE XREF: sub_1409FA010+503B↓j
                mov     rcx, [r8]
                mov     eax, [rdx]
                add     rax, rcx
                cmp     r14, rax
                jnb     short loc_1409FF038
                cmp     rbx, rcx
                ja      loc_1409FF171

loc_1409FF038:                          ; CODE XREF: sub_1409FA010+501D↑j
                mov     eax, 4
                inc     r10d
                add     rdx, rax
                add     r8, 8
                cmp     r10d, 6
                jb      short loc_1409FF022
                cmp     r9d, eax
                jb      loc_1409FF171
                add     [r11+828h], r9d
                mov     rax, r14
                mov     r12d, [r11+814h]
                mov     r15, [r11+818h]
                mov     r11, r14
                cmp     r14, rbx
                jnb     short loc_1409FF086
                mov     ecx, 40h ; '@'

loc_1409FF07B:                          ; CODE XREF: sub_1409FA010+5074↓j
                prefetchnta byte ptr [rax]
                add     rax, rcx
                cmp     rax, rbx
                jb      short loc_1409FF07B

loc_1409FF086:                          ; CODE XREF: sub_1409FA010+5064↑j
                mov     r10d, r9d
                mov     r8, r15
                shr     r10d, 7
                mov     ebx, 1
                test    r10d, r10d
                jz      short loc_1409FF105
                mov     rsi, 7010008004002001h

loc_1409FF0A4:                          ; CODE XREF: sub_1409FA010+50EE↓j
                mov     edx, 8

loc_1409FF0A9:                          ; CODE XREF: sub_1409FA010+50B6↓j
                mov     rax, [r11]
                mov     ecx, r12d
                xor     rax, r8
                mov     r8, [r11+8]
                rol     rax, cl
                add     r11, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, rbx
                jnz     short loc_1409FF0A9
                mov     rcx, r11
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r12d, edx
                mov     [rbp+0BE0h+var_690], rdx
                xor     r12d, eax
                mov     eax, 0FFFFFFFFh
                and     r12d, 3Fh
                cmovz   r12d, ebx
                add     r10d, eax
                jnz     short loc_1409FF0A4
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FF105:                          ; CODE XREF: sub_1409FA010+5088↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_1409FF12C
                mov     edx, r9d
                shr     rdx, 3

loc_1409FF116:                          ; CODE XREF: sub_1409FA010+511A↓j
                xor     r8, [r11]
                mov     ecx, r12d
                rol     r8, cl
                add     r11, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, rbx
                jnz     short loc_1409FF116

loc_1409FF12C:                          ; CODE XREF: sub_1409FA010+50FD↑j
                test    r9d, r9d
                jz      short loc_1409FF150
                mov     esi, 0FFFFFFFFh

loc_1409FF136:                          ; CODE XREF: sub_1409FA010+5139↓j
                movzx   eax, byte ptr [r11]
                mov     ecx, r12d
                xor     r8, rax
                add     r11, rbx
                rol     r8, cl
                add     r9d, esi
                jnz     short loc_1409FF136
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FF150:                          ; CODE XREF: sub_1409FA010+511F↑j
                mov     rax, r8
                shr     rax, 7
                xor     edx, edx
                jmp     short loc_1409FF162
; ---------------------------------------------------------------------------

loc_1409FF15B:                          ; CODE XREF: sub_1409FA010+5155↓j
                xor     r8b, al
                shr     rax, 7

loc_1409FF162:                          ; CODE XREF: sub_1409FA010+5149↑j
                test    rax, rax
                jnz     short loc_1409FF15B
                mov     r12d, [rbp+0BE0h+var_BF0]
                and     r8b, 7Fh
                jmp     short loc_1409FF176
; ---------------------------------------------------------------------------

loc_1409FF171:                          ; CODE XREF: sub_1409FA010+5022↑j
                                        ; sub_1409FA010+5040↑j
                xor     edx, edx
                mov     r8b, 80h

loc_1409FF176:                          ; CODE XREF: sub_1409FA010+515F↑j
                mov     r9, [rbp+0BE0h+var_C48]
                mov     ecx, 1
                mov     r15, [rbp+0BE0h+var_BF8]
                mov     rax, [rbp+0BE0h+var_C50]

loc_1409FF187:                          ; CODE XREF: sub_1409FA010+4F68↑j
                mov     [rax], r8b
                mov     r8d, 0Ch
                mov     rax, [rbp+0BE0h+var_C50]
                add     r9, r8
                add     r15, r8
                mov     [rbp+0BE0h+var_C48], r9
                mov     r8, [rbp+0BE0h+var_C10]
                add     rax, rcx
                mov     [rbp+0BE0h+var_C50], rax
                mov     [rbp+0BE0h+var_BF8], r15
                cmp     r15, r8
                jz      short loc_1409FF1B6
                mov     r13d, [r15+4]

loc_1409FF1B6:                          ; CODE XREF: sub_1409FA010+51A0↑j
                cmp     r13d, r12d
                jbe     loc_1409FEF64

loc_1409FF1BF:                          ; CODE XREF: sub_1409FA010+4F25↑j
                                        ; sub_1409FA010+4F2F↑j ...
                mov     r14, [rbp+0BE0h+var_C60]
                xor     eax, eax
                cmp     dword ptr [rbp+0BE0h+arg_8], eax
                jnz     loc_1409FF367
                mov     eax, [rbp+0BE0h+var_C58]
                cmp     eax, r12d
                jz      loc_1409FF367
                mov     [r14+0Ch], eax
                lea     rdx, [rbp+0BE0h+var_9C8]
                mov     [r14+10h], r12d
                lea     r8, [rbp+0BE0h+var_7D0]
                mov     eax, [r14+0Ch]
                mov     r9d, r12d
                mov     ebx, eax
                sub     r9d, eax
                add     rbx, [rsp+0CE0h+var_C68]
                mov     r11d, r9d
                add     r11, rbx
                xor     eax, eax
                mov     r10d, eax

loc_1409FF20F:                          ; CODE XREF: sub_1409FA010+5224↓j
                mov     rcx, [r8]
                mov     eax, [rdx]
                add     rax, rcx
                cmp     rbx, rax
                jnb     short loc_1409FF225
                cmp     r11, rcx
                ja      loc_1409FF363

loc_1409FF225:                          ; CODE XREF: sub_1409FA010+520A↑j
                inc     r10d
                add     r8, 8
                add     rdx, 4
                cmp     r10d, 6
                jb      short loc_1409FF20F
                mov     r13, [rbp+0BE0h+var_C20]
                mov     r10, rbx
                mov     rax, rbx
                add     [r13+828h], r9d
                mov     r14d, [r13+814h]
                mov     r15, [r13+818h]
                cmp     rbx, r11
                jnb     short loc_1409FF26A
                mov     ecx, 40h ; '@'

loc_1409FF25F:                          ; CODE XREF: sub_1409FA010+5258↓j
                prefetchnta byte ptr [rax]
                add     rax, rcx
                cmp     rax, r11
                jb      short loc_1409FF25F

loc_1409FF26A:                          ; CODE XREF: sub_1409FA010+5248↑j
                mov     r11d, r9d
                mov     r8, r15
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_1409FF2EE
                mov     r13, 7010008004002001h

loc_1409FF283:                          ; CODE XREF: sub_1409FA010+52D3↓j
                mov     edx, 8
                lea     esi, [rdx-7]

loc_1409FF28B:                          ; CODE XREF: sub_1409FA010+5298↓j
                mov     rax, [r10]
                mov     ecx, r14d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, rsi
                jnz     short loc_1409FF28B
                mov     rcx, r10
                sub     rcx, rbx
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     r14d, edx
                mov     [rbp+0BE0h+var_688], rdx
                xor     r14d, eax
                mov     rax, rsi
                and     r14d, 3Fh
                cmovz   r14d, eax
                mov     eax, 0FFFFFFFFh
                add     r11d, eax
                jnz     short loc_1409FF283
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     r13, [rbp+0BE0h+var_C20]

loc_1409FF2EE:                          ; CODE XREF: sub_1409FA010+5267↑j
                and     r9d, 7Fh
                mov     r11d, 1
                cmp     r9d, 8
                jb      short loc_1409FF31B
                mov     edx, r9d
                shr     rdx, 3

loc_1409FF305:                          ; CODE XREF: sub_1409FA010+5309↓j
                xor     r8, [r10]
                mov     ecx, r14d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r11
                jnz     short loc_1409FF305

loc_1409FF31B:                          ; CODE XREF: sub_1409FA010+52EC↑j
                test    r9d, r9d
                jz      short loc_1409FF33F
                mov     r12d, 0FFFFFFFFh

loc_1409FF326:                          ; CODE XREF: sub_1409FA010+5329↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r14d
                xor     r8, rax
                add     r10, r11
                rol     r8, cl
                add     r9d, r12d
                jnz     short loc_1409FF326
                mov     r12d, [rbp+0BE0h+var_BF0]

loc_1409FF33F:                          ; CODE XREF: sub_1409FA010+530E↑j
                mov     rax, r8
                jmp     short loc_1409FF347
; ---------------------------------------------------------------------------

loc_1409FF344:                          ; CODE XREF: sub_1409FA010+533E↓j
                xor     r8d, eax

loc_1409FF347:                          ; CODE XREF: sub_1409FA010+5332↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_1409FF344
                mov     r14, [rbp+0BE0h+var_C60]
                btr     r8d, 1Fh
                mov     r9, [rbp+0BE0h+var_C48]
                mov     [r14+14h], r8d
                jmp     short loc_1409FF36B
; ---------------------------------------------------------------------------

loc_1409FF363:                          ; CODE XREF: sub_1409FA010+520F↑j
                mov     r9, [rbp+0BE0h+var_C48]

loc_1409FF367:                          ; CODE XREF: sub_1409FA010+51BB↑j
                                        ; sub_1409FA010+51C7↑j
                mov     r13, [rbp+0BE0h+var_C20]

loc_1409FF36B:                          ; CODE XREF: sub_1409FA010+5351↑j
                mov     rdx, [rbp+0BE0h+var_C10]
                mov     r15, [rbp+0BE0h+var_BF8]
                cmp     r9, rdx
                jz      short loc_1409FF3B7
                mov     eax, [r9]
                mov     ecx, [r9+4]
                cmp     eax, [rsp+0CE0h+var_C78]
                jb      short loc_1409FF3B7
                cmp     ecx, r12d
                ja      short loc_1409FF3B7
                cmp     r15, rdx
                jz      short loc_1409FF3AB
                mov     rax, [rbp+0BE0h+var_C50]
                mov     byte ptr [rax], 80h
                inc     rax
                mov     [rbp+0BE0h+var_C50], rax
                mov     eax, 0Ch
                add     r15, rax
                mov     [rbp+0BE0h+var_BF8], r15
                jmp     short loc_1409FF3B0
; ---------------------------------------------------------------------------

loc_1409FF3AB:                          ; CODE XREF: sub_1409FA010+537D↑j
                mov     eax, 0Ch

loc_1409FF3B0:                          ; CODE XREF: sub_1409FA010+5399↑j
                add     r9, rax
                mov     [rbp+0BE0h+var_C48], r9

loc_1409FF3B7:                          ; CODE XREF: sub_1409FA010+5366↑j
                                        ; sub_1409FA010+5373↑j ...
                mov     r12, [rsp+0CE0h+var_C88]
                add     r14, 18h
                add     r12, 28h ; '('
                mov     [rbp+0BE0h+var_C60], r14
                mov     [rsp+0CE0h+var_C88], r12
                cmp     r14, [rsp+0CE0h+var_C70]
                jnz     loc_1409FEB0D
                mov     rbx, [rbp+0BE0h+var_B98]

loc_1409FF3DC:                          ; CODE XREF: sub_1409FA010+442E↑j
                                        ; sub_1409FA010+4AF0↑j
                mov     r14, [rbp+0BE0h+var_C08]
                xor     eax, eax
                mov     [rbp+0BE0h+var_B50], rbx

loc_1409FF3E9:                          ; CODE XREF: sub_1409FA010+395E↑j
                mov     ecx, eax

loc_1409FF3EB:                          ; CODE XREF: sub_1409FA010+36CA↑j
                                        ; sub_1409FA010+3916↑j ...
                mov     rdx, [rsp+0CE0h+var_C90]
                mov     r8d, 80000000h
                sub     rdx, rsi
                mov     [rsp+0CE0h+var_C80], rbx
                add     rdx, rbx
                mov     rsi, rbx
                mov     [rsp+0CE0h+var_C90], rdx
                lea     eax, [rcx+r8]
                test    r8d, eax
                jnz     short loc_1409FF41A
                cmp     ecx, 0C000010Eh
                jnz     short loc_1409FF41E

loc_1409FF41A:                          ; CODE XREF: sub_1409FA010+5400↑j
                mov     [rdx+28h], r14

loc_1409FF41E:                          ; CODE XREF: sub_1409FA010+5408↑j
                mov     r13d, [rbp+0BE0h+var_BE0]
                jmp     loc_1409FD677
; ---------------------------------------------------------------------------

loc_1409FF427:                          ; CODE XREF: sub_1409FA010+322C↑j
                mov     rbx, r13
                mov     [rbp+0BE0h+var_BE0], eax
                mov     r13, rax
                mov     r15d, eax
                mov     r12d, eax
                jmp     short loc_1409FF43A
; ---------------------------------------------------------------------------

loc_1409FF438:                          ; CODE XREF: sub_1409FA010+55AA↓j
                xor     eax, eax

loc_1409FF43A:                          ; CODE XREF: sub_1409FA010+5426↑j
                mov     [rbp+0BE0h+var_B20], eax

loc_1409FF440:                          ; CODE XREF: sub_1409FA010+546E↓j
                                        ; sub_1409FA010+54C3↓j
                mov     rax, [rsi+2F8h]
                lea     r8, [rbp+0BE0h+var_A18]
                lea     rdx, [rbp+0BE0h+var_B20]
                mov     ecx, r12d
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jz      loc_1409FF5A7
                mov     rax, [rsi+2D8h]
                mov     rcx, [rbp+0BE0h+var_A18]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jz      short loc_1409FF440
                mov     rax, [rsi+2E0h]
                mov     edi, 1
                add     r15d, edi
                mov     rcx, r14
                mov     [rbp+0BE0h+var_BE0], r15d
                call    j__guard_dispatch_icall_nop
                mov     r15, rax
                lea     rdx, [rbp+0BE0h+var_680]
                mov     rax, [rsi+208h]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      short loc_1409FF4D8
                mov     rax, [rsi+2E8h]
                mov     rdx, r14
                mov     rcx, [rbp+0BE0h+var_A18]
                call    j__guard_dispatch_icall_nop
                mov     r15d, [rbp+0BE0h+var_BE0]
                jmp     loc_1409FF440
; ---------------------------------------------------------------------------

loc_1409FF4D8:                          ; CODE XREF: sub_1409FA010+54A7↑j
                test    dword ptr [rsi+990h], 40000000h
                jz      short loc_1409FF52D
                mov     rcx, [rsi+0A80h]
                mov     edx, 30h ; '0'
                lea     r8d, [rdx-2Ah]

loc_1409FF4F4:                          ; CODE XREF: sub_1409FA010+54F8↓j
                mov     rax, [rbx]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     rbx, 8
                add     rcx, 8
                sub     r8, rdi
                jnz     short loc_1409FF4F4
                test    edx, edx
                jz      short loc_1409FF526
                mov     esi, 0FFFFFFFFh

loc_1409FF513:                          ; CODE XREF: sub_1409FA010+550F↓j
                mov     al, [rbx]
                add     rbx, rdi
                mov     [rcx], al
                add     rcx, rdi
                add     edx, esi
                jnz     short loc_1409FF513
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FF526:                          ; CODE XREF: sub_1409FA010+54FC↑j
                mov     rbx, [rsi+0A80h]

loc_1409FF52D:                          ; CODE XREF: sub_1409FA010+54D2↑j
                mov     [rbx+18h], r15
                mov     rax, [rsi+590h]
                mov     [rax], rbx
                mov     dword ptr [rax+10h], 30h ; '0'
                mov     rax, [rsi+590h]
                mov     [rax+8], r15
                mov     dword ptr [rax+14h], 1000h
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FF5A7
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rbx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rbx]
                mov     [rsi+910h], rax
                mov     [rsi+918h], r13
                mov     [rsi+8F8h], edi
                call    sub_140A113CC

loc_1409FF5A7:                          ; CODE XREF: sub_1409FA010+544F↑j
                                        ; sub_1409FA010+554C↑j
                mov     r15d, [rbp+0BE0h+var_BE0]
                mov     edx, 1
                add     r12d, edx
                add     r13, rdx
                cmp     r12d, 3
                jb      loc_1409FF438
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r13d, r15d
                jmp     loc_1409FF885
; ---------------------------------------------------------------------------

loc_1409FF5CF:                          ; CODE XREF: sub_1409FA010+3223↑j
                mov     rbx, r13
                mov     [rbp+0BE0h+var_950], rax
                mov     r13d, eax
                mov     r15, cr8
                mov     [rbp+0BE0h+arg_8], r15
                mov     cr8, r8
                mov     rax, [rsi+308h]
                lea     rcx, [rbp+0BE0h+var_950]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jz      loc_1409FF72C
                mov     edi, 1

loc_1409FF60F:                          ; CODE XREF: sub_1409FA010+5708↓j
                mov     rax, [rsi+208h]
                lea     rdx, [rbp+0BE0h+var_678]
                mov     rcx, r14
                add     r13d, edi
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     loc_1409FF6FF
                test    [rsi+990h], r12d
                jz      short loc_1409FF681
                mov     rcx, [rsi+0A80h]
                lea     edx, [rax+30h]
                lea     r8d, [rax+6]

loc_1409FF648:                          ; CODE XREF: sub_1409FA010+564C↓j
                mov     rax, [rbx]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     rbx, 8
                add     rcx, 8
                sub     r8, rdi
                jnz     short loc_1409FF648
                test    edx, edx
                jz      short loc_1409FF67A
                mov     esi, 0FFFFFFFFh

loc_1409FF667:                          ; CODE XREF: sub_1409FA010+5663↓j
                mov     al, [rbx]
                add     rbx, rdi
                mov     [rcx], al
                add     rcx, rdi
                add     edx, esi
                jnz     short loc_1409FF667
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FF67A:                          ; CODE XREF: sub_1409FA010+5650↑j
                mov     rbx, [rsi+0A80h]

loc_1409FF681:                          ; CODE XREF: sub_1409FA010+5628↑j
                mov     [rbx+18h], r14
                mov     rax, [rsi+590h]
                mov     [rax], rbx
                mov     dword ptr [rax+10h], 30h ; '0'
                mov     rax, [rsi+590h]
                mov     [rax+8], r14
                mov     dword ptr [rax+14h], 1000h
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FF6FF
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rbx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rbx]
                mov     [rsi+910h], rax
                mov     qword ptr [rsi+918h], 4
                mov     [rsi+8F8h], edi
                call    sub_140A113CC

loc_1409FF6FF:                          ; CODE XREF: sub_1409FA010+561B↑j
                                        ; sub_1409FA010+56A0↑j
                mov     rax, [rsi+308h]
                lea     rcx, [rbp+0BE0h+var_950]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jnz     loc_1409FF60F
                mov     r15, [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FF72C:                          ; CODE XREF: sub_1409FA010+55F4↑j
                movzx   eax, r15b
                mov     cr8, rax
                jmp     loc_1409FF880
; ---------------------------------------------------------------------------

loc_1409FF739:                          ; CODE XREF: sub_1409FA010+321A↑j
                mov     [rbp+0BE0h+var_948], rax
                lea     rcx, [rbp+0BE0h+var_948]
                mov     rbx, r13
                mov     r13d, eax
                mov     rax, [rsi+300h]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jz      loc_1409FF880
                mov     edi, 1

loc_1409FF76A:                          ; CODE XREF: sub_1409FA010+5863↓j
                mov     rax, [rsi+208h]
                lea     rdx, [rbp+0BE0h+var_670]
                mov     rcx, r14
                add     r13d, edi
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     loc_1409FF85A
                test    [rsi+990h], r12d
                jz      short loc_1409FF7DC
                mov     rcx, [rsi+0A80h]
                lea     edx, [rax+30h]
                lea     r8d, [rax+6]

loc_1409FF7A3:                          ; CODE XREF: sub_1409FA010+57A7↓j
                mov     rax, [rbx]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     rbx, 8
                add     rcx, 8
                sub     r8, rdi
                jnz     short loc_1409FF7A3
                test    edx, edx
                jz      short loc_1409FF7D5
                mov     esi, 0FFFFFFFFh

loc_1409FF7C2:                          ; CODE XREF: sub_1409FA010+57BE↓j
                mov     al, [rbx]
                add     rbx, rdi
                mov     [rcx], al
                add     rcx, rdi
                add     edx, esi
                jnz     short loc_1409FF7C2
                mov     rsi, [rsp+0CE0h+var_C80]

loc_1409FF7D5:                          ; CODE XREF: sub_1409FA010+57AB↑j
                mov     rbx, [rsi+0A80h]

loc_1409FF7DC:                          ; CODE XREF: sub_1409FA010+5783↑j
                mov     [rbx+18h], r14
                mov     rax, [rsi+590h]
                mov     [rax], rbx
                mov     dword ptr [rax+10h], 30h ; '0'
                mov     rax, [rsi+590h]
                mov     [rax+8], r14
                mov     dword ptr [rax+14h], 1000h
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FF85A
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rbx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rbx]
                mov     [rsi+910h], rax
                mov     qword ptr [rsi+918h], 3
                mov     [rsi+8F8h], edi
                call    sub_140A113CC

loc_1409FF85A:                          ; CODE XREF: sub_1409FA010+5776↑j
                                        ; sub_1409FA010+57FB↑j
                mov     rax, [rsi+300h]
                lea     rcx, [rbp+0BE0h+var_948]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jnz     loc_1409FF76A

loc_1409FF879:                          ; CODE XREF: sub_1409FA010+3592↑j
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FF880:                          ; CODE XREF: sub_1409FA010+3408↑j
                                        ; sub_1409FA010+3672↑j ...
                mov     edx, 1

loc_1409FF885:                          ; CODE XREF: sub_1409FA010+33E7↑j
                                        ; sub_1409FA010+35BD↑j ...
                shl     r13d, 0Ch
                add     [rsi+828h], r13d
                add     [rsi+824h], edx
                mov     eax, [rsi+82Ch]
                cmp     [rsi+828h], eax
                jge     short loc_1409FF8C0
                mov     r13, [rsp+0CE0h+var_C90]
                mov     r8d, 0Ch
                mov     r12d, 40000000h
                jmp     loc_1409FD220
; ---------------------------------------------------------------------------

loc_1409FF8BA:                          ; CODE XREF: sub_1409FA010+3247↑j
                mov     [rsi+824h], eax

loc_1409FF8C0:                          ; CODE XREF: sub_1409FA010+5892↑j
                mov     [rsp+0CE0h+var_C80], rsi
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_1409FF8CA:                          ; CODE XREF: sub_1409FA010+2850↑j
                mov     edx, [r13+2Ch]
                lea     rcx, [rbp+0BE0h+var_310]
                mov     rax, [rsi+1A0h]
                mov     ebx, [r13+28h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+1D0h]
                lea     rdx, [rbp+0BE0h+var_300]
                lea     rcx, [rbp+0BE0h+var_310]
                call    j__guard_dispatch_icall_nop
                cmp     dword ptr [rbp+0BE0h+arg_8], 26h ; '&'
                jz      short loc_1409FF916
                test    ebx, ebx
                jz      short loc_1409FF911
                mov     rbx, cr4
                jmp     short loc_1409FF925
; ---------------------------------------------------------------------------

loc_1409FF911:                          ; CODE XREF: sub_1409FA010+58FA↑j
                mov     rbx, cr0
                jmp     short loc_1409FF925
; ---------------------------------------------------------------------------

loc_1409FF916:                          ; CODE XREF: sub_1409FA010+58F6↑j
                xor     ecx, ecx
                xgetbv
                shl     rdx, 20h
                or      rdx, rax
                mov     rbx, rdx

loc_1409FF925:                          ; CODE XREF: sub_1409FA010+58FF↑j
                                        ; sub_1409FA010+5904↑j
                mov     rax, [rsi+198h]
                lea     rcx, [rbp+0BE0h+var_300]
                call    j__guard_dispatch_icall_nop
                mov     r8, [r13+18h]
                xor     r15d, r15d
                mov     rcx, [r13+20h]
                and     r8, rbx
                cmp     r8, rcx
                jz      loc_1409FB31B
                mov     eax, [r13+28h]
                mov     edx, [r13+2Ch]
                shl     rdx, 20h
                or      rdx, rax
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     loc_1409FB31B
                mov     rax, [rsi+590h]
                xor     rcx, r8
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     loc_1409FB31B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdx
                jmp     loc_1409FB6E7
; ---------------------------------------------------------------------------

loc_1409FF9C7:                          ; CODE XREF: sub_1409FA010+2846↑j
                cmp     dword ptr [rsi+958h], 0Bh
                jnz     loc_1409FB318
                add     dword ptr [rsi+828h], 100h
                mov     r15, [rsi+588h]
                mov     rax, [rsi+2D8h]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jz      loc_1409FB318
                mov     rax, [rsi+2E0h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                xor     edx, edx
                mov     rax, [r13+18h]
                test    rax, rax
                jz      short loc_1409FFA84
                cmp     rax, rbx
                jz      loc_1409FFB04
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     loc_1409FFB04
                mov     rax, 0A3A03F5891C8B4E8h
                mov     rcx, rsi
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                lea     eax, [rdx+1]
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                jmp     loc_1409FFB04
; ---------------------------------------------------------------------------

loc_1409FFA84:                          ; CODE XREF: sub_1409FA010+5A0B↑j
                mov     eax, [rsi+974h]
                mov     rcx, [rsi+978h]
                test    rax, rax
                jz      short loc_1409FFAA7
                lea     rdx, [rax-1]
                add     rdx, rcx
                cmp     rbx, rcx
                jb      short loc_1409FFAA7
                cmp     rbx, rdx
                jbe     short loc_1409FFB00

loc_1409FFAA7:                          ; CODE XREF: sub_1409FA010+5A84↑j
                                        ; sub_1409FA010+5A90↑j
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FFB00
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_1409FFB00:                          ; CODE XREF: sub_1409FA010+5A95↑j
                                        ; sub_1409FA010+5A9F↑j
                mov     [r13+18h], rbx

loc_1409FFB04:                          ; CODE XREF: sub_1409FA010+5A10↑j
                                        ; sub_1409FA010+5A1E↑j ...
                mov     rax, [rsi+2E8h]
                mov     rdx, r14
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_1409FFB1B:                          ; CODE XREF: sub_1409FA010+2838↑j
                jnz     short loc_1409FFB6D
                xor     eax, eax
                cmp     [rsi+980h], rax
                jz      loc_1409FB312
                mov     ecx, [rsi+994h]
                mov     eax, ecx
                shr     eax, 2
                and     eax, edx
                jnz     loc_1409FB3EA
                xor     edx, edx
                cmp     [rsi+824h], edx
                lea     edx, [rax+1]
                jnz     short loc_1409FFB60
                mov     eax, ecx
                shl     eax, 3
                xor     eax, ecx
                and     eax, 20h
                xor     eax, ecx
                mov     [rsi+994h], eax
                jmp     short loc_1409FFB6D
; ---------------------------------------------------------------------------

loc_1409FFB60:                          ; CODE XREF: sub_1409FA010+5B3A↑j
                shr     ecx, 5
                and     ecx, edx
                cmp     eax, ecx
                jnz     loc_1409FB3EA

loc_1409FFB6D:                          ; CODE XREF: sub_1409FA010:loc_1409FFB1B↑j
                                        ; sub_1409FA010+5B4E↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_1409FFBAA
                mov     r11d, 40h ; '@'

loc_1409FFB9F:                          ; CODE XREF: sub_1409FA010+5B98↓j
                prefetchnta byte ptr [rax]
                add     rax, r11
                cmp     rax, rcx
                jb      short loc_1409FFB9F

loc_1409FFBAA:                          ; CODE XREF: sub_1409FA010+5B87↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     r12d, 0FFFFFFFFh
                test    r11d, r11d
                jz      short loc_1409FFC2B
                mov     rdi, 7010008004002001h

loc_1409FFBC9:                          ; CODE XREF: sub_1409FA010+5C0D↓j
                mov     eax, 8

loc_1409FFBCE:                          ; CODE XREF: sub_1409FA010+5BD5↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_1409FFBCE
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, edx
                mov     [rbp+0BE0h+var_668], rdx
                xor     r10d, eax
                mov     edx, 1
                and     r10d, 3Fh
                cmovz   r10d, edx
                add     r11d, r12d
                jnz     short loc_1409FFBC9
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_1409FFC2B:                          ; CODE XREF: sub_1409FA010+5BAD↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_1409FFC52
                mov     eax, r8d
                shr     rax, 3

loc_1409FFC3C:                          ; CODE XREF: sub_1409FA010+5C40↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_1409FFC3C

loc_1409FFC52:                          ; CODE XREF: sub_1409FA010+5C23↑j
                test    r8d, r8d
                jz      short loc_1409FFC6C

loc_1409FFC57:                          ; CODE XREF: sub_1409FA010+5C5A↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_1409FFC57

loc_1409FFC6C:                          ; CODE XREF: sub_1409FA010+5C45↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r15d, r15d
                jmp     short loc_1409FFC7E
; ---------------------------------------------------------------------------

loc_1409FFC78:                          ; CODE XREF: sub_1409FA010+5C71↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_1409FFC7E:                          ; CODE XREF: sub_1409FA010+5C66↑j
                test    rax, rax
                jnz     short loc_1409FFC78
                btr     ebx, 1Fh
                cmp     ebx, [r13+14h]
                jz      loc_1409FFD6B
                lock or [rsp+0CE0h+var_CE0], eax
                mov     eax, [r13+18h]
                test    dl, al
                jz      short loc_1409FFCAE
                mov     rax, [rsi+580h]
                mov     cl, [rax]
                test    cl, cl
                jnz     loc_1409FFD6B

loc_1409FFCAE:                          ; CODE XREF: sub_1409FA010+5C8B↑j
                mov     ecx, [r13+10h]
                mov     rdx, [r13+8]
                test    rcx, rcx
                jz      loc_1409FFE0A
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_1409FFE0A
                mov     r12, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rbp+0BE0h+arg_8], rax
                lea     r13, [r14-1]

loc_1409FFD02:                          ; CODE XREF: sub_1409FA010+5D4D↓j
                movzx   r15d, r12b

loc_1409FFD06:                          ; CODE XREF: sub_1409FA010+5D30↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_1409FFD42
                mov     eax, 1
                cmp     r12b, al
                ja      short loc_1409FFD4A
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_1409FFD06
; ---------------------------------------------------------------------------

loc_1409FFD42:                          ; CODE XREF: sub_1409FA010+5D0C↑j
                test    eax, eax
                js      loc_1409FFE01

loc_1409FFD4A:                          ; CODE XREF: sub_1409FA010+5D16↑j
                mov     r11d, 1000h
                add     r14, r11
                add     r13, r11
                cmp     r13, [rbp+0BE0h+arg_8]
                jnz     short loc_1409FFD02
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]
                xor     r15d, r15d

loc_1409FFD6B:                          ; CODE XREF: sub_1409FA010+5C7B↑j
                                        ; sub_1409FA010+5C98↑j
                mov     ebx, 1

loc_1409FFD70:                          ; CODE XREF: sub_1409FA010+5E2C↓j
                                        ; sub_1409FA010+5E7C↓j
                test    dword ptr [rsi+990h], 40000000h
                jz      loc_1409FB31B
                mov     r8d, [r13+10h]
                test    r8d, r8d
                jz      loc_1409FB318
                mov     rdx, [r13+8]
                lea     r9, [rbp+0BE0h+var_2F0]
                mov     rcx, rsi
                call    sub_1403EA0CC
                mov     r8d, 10h
                lea     r9, [r13+1Ch]
                lea     r10, [rbp+0BE0h+var_2F0]

loc_1409FFDB1:                          ; CODE XREF: sub_1409FA010+5DC0↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     loc_1409FFE91
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_1409FFDB1
                test    r8d, r8d
                jz      loc_1409FFFBE

loc_1409FFDDB:                          ; CODE XREF: sub_1409FA010+5DEA↓j
                movzx   edx, byte ptr [r10]
                add     r10, rbx
                movzx   eax, byte ptr [r9]
                add     r9, rbx
                cmp     rdx, rax
                jnz     loc_1409FFE91
                mov     eax, 0FFFFFFFFh
                add     r8d, eax
                jnz     short loc_1409FFDDB
                jmp     loc_1409FFFBE
; ---------------------------------------------------------------------------

loc_1409FFE01:                          ; CODE XREF: sub_1409FA010+5D34↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]

loc_1409FFE0A:                          ; CODE XREF: sub_1409FA010+5CA9↑j
                                        ; sub_1409FA010+5CBE↑j
                mov     eax, [rsi+8F8h]
                xor     r15d, r15d
                mov     ecx, [r13+14h]
                test    eax, eax
                jnz     short loc_1409FFE31
                mov     eax, ebx
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_1409FFE31:                          ; CODE XREF: sub_1409FA010+5E09↑j
                mov     rcx, [r13+8]
                mov     ebx, 1
                test    eax, eax
                jnz     loc_1409FFD70
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], ebx
                call    sub_140A113CC
                jmp     loc_1409FFD70
; ---------------------------------------------------------------------------

loc_1409FFE91:                          ; CODE XREF: sub_1409FA010+5DB2↑j
                                        ; sub_1409FA010+5DDC↑j
                xor     eax, eax
                lock or [rsp+0CE0h+var_CE0], eax
                mov     eax, [r13+18h]
                test    bl, al
                jz      short loc_1409FFEB0
                mov     rax, [rsi+580h]
                mov     cl, [rax]
                test    cl, cl
                jnz     loc_1409FFFBE

loc_1409FFEB0:                          ; CODE XREF: sub_1409FA010+5E8D↑j
                mov     edx, [r13+10h]
                mov     rcx, [r13+8]
                test    rdx, rdx
                jz      loc_1409FFF6A
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_1409FFF6A
                mov     r15, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     rbx, rcx
                lea     r13, [rdx-1]
                and     rbx, 0FFFFFFFFFFFFF000h
                add     r13, rcx
                or      r13, 0FFFh
                lea     r12, [rbx-1]

loc_1409FFEFE:                          ; CODE XREF: sub_1409FA010+5F40↓j
                movzx   r14d, r15b

loc_1409FFF02:                          ; CODE XREF: sub_1409FA010+5F2B↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_1409FFF3D
                mov     eax, 1
                cmp     r15b, al
                ja      short loc_1409FFF41
                movzx   r14d, r15b
                mov     cr8, r14
                mov     al, [rbx]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_1409FFF02
; ---------------------------------------------------------------------------

loc_1409FFF3D:                          ; CODE XREF: sub_1409FA010+5F08↑j
                test    eax, eax
                js      short loc_1409FFF58

loc_1409FFF41:                          ; CODE XREF: sub_1409FA010+5F12↑j
                mov     r11d, 1000h
                add     rbx, r11
                add     r12, r11
                cmp     r12, r13
                jnz     short loc_1409FFEFE
                mov     cr8, r14
                jmp     short loc_1409FFFBE
; ---------------------------------------------------------------------------

loc_1409FFF58:                          ; CODE XREF: sub_1409FA010+5F2F↑j
                mov     cr8, r14
                mov     r13, [rsp+0CE0h+var_C90]
                mov     ebx, 1
                mov     rcx, [r13+8]

loc_1409FFF6A:                          ; CODE XREF: sub_1409FA010+5EAB↑j
                                        ; sub_1409FA010+5EC0↑j
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_1409FFFBE
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], ebx
                call    sub_140A113CC

loc_1409FFFBE:                          ; CODE XREF: sub_1409FA010+5DC5↑j
                                        ; sub_1409FA010+5DEC↑j ...
                mov     rax, [rsp+0CE0h+var_C90]
                mov     eax, [rax+10h]
                shl     eax, 4
                jmp     loc_1409FC049
; ---------------------------------------------------------------------------

loc_1409FFFCE:                          ; CODE XREF: sub_1409FA010+128D↑j
                mov     r8d, [r13+10h]
                test    r8d, r8d
                jnz     loc_140A005B3
                lea     rax, [r13+30h]
                xor     r9d, r9d
                mov     [rbp+0BE0h+var_860], rax
                lea     rcx, [rbp+0BE0h+var_868]
                movzx   eax, word ptr [r13+28h]
                xor     r8d, r8d
                mov     [rbp+0BE0h+var_868], ax
                xor     edx, edx
                mov     [rbp+0BE0h+var_866], ax
                lea     rax, [rbp+0BE0h+var_B30]
                mov     [rsp+0CE0h+var_CA8], rax
                xor     eax, eax
                mov     [rsp+0CE0h+var_CB0], rax
                mov     byte ptr [rsp+0CE0h+var_CB8], al
                mov     rax, [rsi+510h]
                mov     [rsp+0CE0h+var_CC0], rax
                mov     rax, [rsi+1E8h]
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                js      loc_1409FB318
                mov     rax, [rbp+0BE0h+var_B30]
                mov     ecx, [rax+10h]
                mov     eax, 10h
                test    al, cl
                jnz     short loc_140A00065
                mov     rax, [rsi+1E0h]
                mov     rcx, [rbp+0BE0h+var_B30]
                jmp     loc_1409FD1AB
; ---------------------------------------------------------------------------

loc_140A00065:                          ; CODE XREF: sub_1409FA010+6040↑j
                mov     rcx, [rsi+1E8h]
                lea     rdx, [rbp+0BE0h+var_170]
                mov     rax, [rsi+200h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rbp+0BE0h+var_168]
                test    rcx, rcx
                jz      short loc_140A000AB
                mov     rax, [rsi+1F8h]
                mov     rbx, rcx
                mov     [rbp+0BE0h+var_C30], rcx
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      short loc_140A000AB
                mov     r15d, [rax+50h]
                mov     [rbp+0BE0h+var_C28], r15d

loc_140A000AB:                          ; CODE XREF: sub_1409FA010+6079↑j
                                        ; sub_1409FA010+6091↑j
                mov     rcx, [r13+18h]
                lea     rdx, [rbp+0BE0h+var_158]
                mov     rax, [rsi+200h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rbp+0BE0h+var_150]
                test    rcx, rcx
                jz      short loc_140A000F0
                mov     rax, [rsi+1F8h]
                mov     r14, rcx
                mov     [rbp+0BE0h+var_C40], rcx
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      short loc_140A000F0
                mov     r10d, [rax+50h]
                mov     [rbp+0BE0h+var_BA0], r10d
                jmp     short loc_140A000F4
; ---------------------------------------------------------------------------

loc_140A000F0:                          ; CODE XREF: sub_1409FA010+60BC↑j
                                        ; sub_1409FA010+60D4↑j
                mov     r10d, [rbp+0BE0h+var_BA0]

loc_140A000F4:                          ; CODE XREF: sub_1409FA010+60DE↑j
                test    dword ptr [rsi+990h], 40000000h
                jnz     short loc_140A00117
                mov     rax, [rbp+0BE0h+var_B30]
                add     rax, 70h ; 'p'
                mov     [r13+8], rax
                mov     dword ptr [r13+10h], 0E0h

loc_140A00117:                          ; CODE XREF: sub_1409FA010+60EE↑j
                mov     rcx, [rbp+0BE0h+var_B30]
                xor     eax, eax
                mov     r12d, r15d
                mov     dl, al
                mov     [rbp+0BE0h+arg_8], r12
                lea     r11d, [rax+1]

loc_140A00130:                          ; CODE XREF: sub_1409FA010+6230↓j
                movzx   eax, dl
                mov     r9, [rcx+rax*8+70h]
                test    r12, r12
                jz      short loc_140A00152
                lea     rax, [rbx-1]
                add     rax, r12
                cmp     r9, rbx
                jb      short loc_140A00152
                cmp     r9, rax
                jbe     loc_140A00237

loc_140A00152:                          ; CODE XREF: sub_1409FA010+612B↑j
                                        ; sub_1409FA010+6137↑j
                xor     r15d, r15d
                mov     eax, r10d
                test    r10d, r10d
                jz      short loc_140A00172
                lea     r8, [r14-1]
                add     r8, rax
                cmp     r9, r14
                jb      short loc_140A00172
                cmp     r9, r8
                jbe     loc_140A0023A

loc_140A00172:                          ; CODE XREF: sub_1409FA010+614B↑j
                                        ; sub_1409FA010+6157↑j
                test    dword ptr [rsi+990h], 40000000h
                jz      short loc_140A001CA
                mov     rcx, [rsi+0A80h]
                mov     edx, 30h ; '0'
                lea     r8d, [rdx-2Ah]

loc_140A0018E:                          ; CODE XREF: sub_1409FA010+6193↓j
                mov     rax, [r13+0]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r13, 8
                add     rcx, 8
                sub     r8, r11
                jnz     short loc_140A0018E
                test    edx, edx
                jz      short loc_140A001C3
                mov     esi, 0FFFFFFFFh

loc_140A001AE:                          ; CODE XREF: sub_1409FA010+61AC↓j
                mov     al, [r13+0]
                add     r13, r11
                mov     [rcx], al
                add     rcx, r11
                add     edx, esi
                jnz     short loc_140A001AE
                mov     rsi, [rsp+0CE0h+var_C80]

loc_140A001C3:                          ; CODE XREF: sub_1409FA010+6197↑j
                mov     r13, [rsi+0A80h]

loc_140A001CA:                          ; CODE XREF: sub_1409FA010+616C↑j
                mov     [r13+20h], r9
                mov     rax, [rsi+590h]
                mov     [rax], r13
                mov     dword ptr [rax+10h], 30h ; '0'
                xor     eax, eax
                mov     rcx, [r13+8]
                cmp     [rsi+8F8h], eax
                jnz     loc_1409FB31B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     [rsi+8F8h], r11d
                jmp     loc_1409FB6F2
; ---------------------------------------------------------------------------

loc_140A00237:                          ; CODE XREF: sub_1409FA010+613C↑j
                xor     r15d, r15d

loc_140A0023A:                          ; CODE XREF: sub_1409FA010+615C↑j
                add     dl, r11b
                cmp     dl, 1Ch
                jb      loc_140A00130
                test    dword ptr [rsi+990h], 40000000h
                jnz     loc_1409FBE45
                mov     r14, [r13+8]
                mov     r9d, [r13+10h]
                mov     r10, r14
                add     [rsi+828h], r9d
                mov     rax, r14
                mov     ebx, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r9]
                cmp     r14, rcx
                jnb     short loc_140A00291
                mov     edx, 40h ; '@'

loc_140A00286:                          ; CODE XREF: sub_1409FA010+627F↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A00286

loc_140A00291:                          ; CODE XREF: sub_1409FA010+626F↑j
                mov     r11d, r9d
                mov     r8, r15
                shr     r11d, 7
                mov     edx, 1
                test    r11d, r11d
                jz      short loc_140A00318
                mov     edi, 0FFFFFFFFh
                mov     r12, 7010008004002001h

loc_140A002B4:                          ; CODE XREF: sub_1409FA010+62F3↓j
                mov     eax, 8

loc_140A002B9:                          ; CODE XREF: sub_1409FA010+62BF↓j
                xor     r8, [r10]
                mov     ecx, ebx
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, rdx
                jnz     short loc_140A002B9
                mov     rcx, r10
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     ebx, edx
                mov     [rbp+0BE0h+var_660], rdx
                xor     ebx, eax
                mov     edx, 1
                and     ebx, 3Fh
                cmovz   ebx, edx
                add     r11d, edi
                jnz     short loc_140A002B4
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r12, [rbp+0BE0h+arg_8]

loc_140A00318:                          ; CODE XREF: sub_1409FA010+6293↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_140A0033E
                mov     eax, r9d
                shr     rax, 3

loc_140A00329:                          ; CODE XREF: sub_1409FA010+632C↓j
                xor     r8, [r10]
                mov     ecx, ebx
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A00329

loc_140A0033E:                          ; CODE XREF: sub_1409FA010+6310↑j
                test    r9d, r9d
                jz      short loc_140A00361
                mov     esi, 0FFFFFFFFh

loc_140A00348:                          ; CODE XREF: sub_1409FA010+634A↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, ebx
                xor     r8, rax
                add     r10, rdx
                rol     r8, cl
                add     r9d, esi
                jnz     short loc_140A00348
                mov     rsi, [rsp+0CE0h+var_C80]

loc_140A00361:                          ; CODE XREF: sub_1409FA010+6331↑j
                mov     rax, r8
                jmp     short loc_140A00369
; ---------------------------------------------------------------------------

loc_140A00366:                          ; CODE XREF: sub_1409FA010+6360↓j
                xor     r8d, eax

loc_140A00369:                          ; CODE XREF: sub_1409FA010+6354↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A00366
                btr     r8d, 1Fh
                mov     [r13+14h], r8d
                mov     rax, [rbp+0BE0h+var_B30]
                mov     r14, [rax+50h]
                xor     eax, eax
                mov     r10d, eax
                test    r14, r14
                jz      short loc_140A00409
                mov     r10d, [r14]
                mov     r8b, al
                lea     r9d, [r10-8]
                shr     r9d, 3
                test    r9d, r9d
                jz      short loc_140A00409
                mov     r11, [rbp+0BE0h+var_C30]
                mov     rbx, [rbp+0BE0h+var_C40]
                mov     r15d, [rbp+0BE0h+var_BA0]

loc_140A003AF:                          ; CODE XREF: sub_1409FA010+63F7↓j
                movzx   eax, r8b
                mov     rcx, [r14+rax*8+8]
                test    rcx, rcx
                jz      short loc_140A003FD
                test    r12, r12
                jz      short loc_140A003D3
                lea     rax, [r11-1]
                add     rax, r12
                cmp     rcx, r11
                jb      short loc_140A003D3
                cmp     rcx, rax
                jbe     short loc_140A003FD

loc_140A003D3:                          ; CODE XREF: sub_1409FA010+63B0↑j
                                        ; sub_1409FA010+63BC↑j
                mov     rax, r15
                test    r15d, r15d
                jz      loc_140A00522
                lea     rdx, [rbx-1]
                add     rdx, rax
                cmp     rcx, rbx
                jb      loc_140A00522
                cmp     rcx, rdx
                ja      loc_140A00522
                mov     edx, 1

loc_140A003FD:                          ; CODE XREF: sub_1409FA010+63AB↑j
                                        ; sub_1409FA010+63C1↑j
                add     r8b, dl
                movzx   eax, r8b
                cmp     eax, r9d
                jb      short loc_140A003AF

loc_140A00409:                          ; CODE XREF: sub_1409FA010+637E↑j
                                        ; sub_1409FA010+6391↑j
                add     [rsi+828h], r10d
                mov     r9, r14
                mov     r11d, [rsi+814h]
                mov     rax, r14
                mov     r15, [rsi+818h]
                mov     ecx, r10d
                add     rcx, r14
                cmp     r14, rcx
                jnb     short loc_140A00440
                mov     r8d, 40h ; '@'

loc_140A00435:                          ; CODE XREF: sub_1409FA010+642E↓j
                prefetchnta byte ptr [rax]
                add     rax, r8
                cmp     rax, rcx
                jb      short loc_140A00435

loc_140A00440:                          ; CODE XREF: sub_1409FA010+641D↑j
                mov     ebx, r10d
                mov     r8, r15
                shr     ebx, 7
                mov     r12d, 0FFFFFFFFh
                test    ebx, ebx
                jz      short loc_140A004C6
                mov     rdi, 7010008004002001h

loc_140A0045D:                          ; CODE XREF: sub_1409FA010+64A8↓j
                mov     edx, 8
                lea     esi, [rdx-7]

loc_140A00465:                          ; CODE XREF: sub_1409FA010+6472↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, rsi
                jnz     short loc_140A00465
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r11d, edx
                mov     [rbp+0BE0h+var_658], rdx
                xor     r11d, eax
                mov     rdx, rsi
                and     r11d, 3Fh
                cmovz   r11d, edx
                add     ebx, r12d
                jnz     short loc_140A0045D
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A004C6:                          ; CODE XREF: sub_1409FA010+6441↑j
                and     r10d, 7Fh
                cmp     r10d, 8
                jb      short loc_140A004FC
                mov     edx, r10d
                mov     esi, 1
                shr     rdx, 3

loc_140A004DC:                          ; CODE XREF: sub_1409FA010+64E0↓j
                xor     r8, [r9]
                mov     ecx, r11d
                rol     r8, cl
                add     r9, 8
                add     r10d, 0FFFFFFF8h
                sub     rdx, rsi
                jnz     short loc_140A004DC
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     edx, 1

loc_140A004FC:                          ; CODE XREF: sub_1409FA010+64BE↑j
                test    r10d, r10d
                jz      short loc_140A00516

loc_140A00501:                          ; CODE XREF: sub_1409FA010+6504↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     r8, rax
                add     r9, rdx
                rol     r8, cl
                add     r10d, r12d
                jnz     short loc_140A00501

loc_140A00516:                          ; CODE XREF: sub_1409FA010+64EF↑j
                mov     rax, r8
                shr     rax, 1Fh
                xor     r15d, r15d
                jmp     short loc_140A005A0
; ---------------------------------------------------------------------------

loc_140A00522:                          ; CODE XREF: sub_1409FA010+63C9↑j
                                        ; sub_1409FA010+63D9↑j ...
                mov     [r13+20h], rcx
                mov     rax, [rsi+590h]
                mov     [rax], r13
                mov     dword ptr [rax+10h], 30h ; '0'
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     loc_1409FB318
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], r14

loc_140A0057F:                          ; CODE XREF: sub_1409FA010+6F47↓j
                mov     eax, 1
                mov     [rsi+8F8h], eax

loc_140A0058A:                          ; CODE XREF: sub_1409FA010+69EC↓j
                xor     edx, edx
                mov     rcx, rsi
                call    sub_140A113CC
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_140A00599:                          ; CODE XREF: sub_1409FA010+6593↓j
                xor     r8d, eax
                shr     rax, 1Fh

loc_140A005A0:                          ; CODE XREF: sub_1409FA010+6510↑j
                test    rax, rax
                jnz     short loc_140A00599
                btr     r8d, 1Fh
                mov     [r13+2Ch], r8d
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A005B3:                          ; CODE XREF: sub_1409FA010+5FC5↑j
                mov     r14, [r13+8]
                add     [rsi+828h], r8d
                mov     r9, r14
                mov     r11d, [rsi+814h]
                mov     rax, r14
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A005EC
                mov     r10d, 40h ; '@'

loc_140A005E1:                          ; CODE XREF: sub_1409FA010+65DA↓j
                prefetchnta byte ptr [rax]
                add     rax, r10
                cmp     rax, rcx
                jb      short loc_140A005E1

loc_140A005EC:                          ; CODE XREF: sub_1409FA010+65C9↑j
                mov     r10d, r8d
                mov     rbx, r15
                shr     r10d, 7
                mov     r12d, 0FFFFFFFFh
                test    r10d, r10d
                jz      short loc_140A0066D
                mov     rdi, 7010008004002001h

loc_140A0060B:                          ; CODE XREF: sub_1409FA010+664F↓j
                mov     eax, 8

loc_140A00610:                          ; CODE XREF: sub_1409FA010+6617↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_140A00610
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r11d, edx
                mov     [rbp+0BE0h+var_650], rdx
                xor     r11d, eax
                mov     edx, 1
                and     r11d, 3Fh
                cmovz   r11d, edx
                add     r10d, r12d
                jnz     short loc_140A0060B
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0066D:                          ; CODE XREF: sub_1409FA010+65EF↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A00694
                mov     eax, r8d
                shr     rax, 3

loc_140A0067E:                          ; CODE XREF: sub_1409FA010+6682↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A0067E

loc_140A00694:                          ; CODE XREF: sub_1409FA010+6665↑j
                test    r8d, r8d
                jz      short loc_140A006AE

loc_140A00699:                          ; CODE XREF: sub_1409FA010+669C↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_140A00699

loc_140A006AE:                          ; CODE XREF: sub_1409FA010+6687↑j
                mov     rax, rbx
                jmp     short loc_140A006B5
; ---------------------------------------------------------------------------

loc_140A006B3:                          ; CODE XREF: sub_1409FA010+66AC↓j
                xor     ebx, eax

loc_140A006B5:                          ; CODE XREF: sub_1409FA010+66A1↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A006B3
                mov     r12, [rsp+0CE0h+var_C90]
                btr     ebx, 1Fh
                mov     r13d, eax
                cmp     ebx, [r12+14h]
                jz      loc_140A007B7
                cmp     [r12], eax
                jnz     short loc_140A006E4
                cmp     [r12+18h], eax
                cmovnz  r13d, edx

loc_140A006E4:                          ; CODE XREF: sub_1409FA010+66C9↑j
                mov     ecx, [r12+10h]
                mov     rdx, [r12+8]
                test    rcx, rcx
                jz      loc_140A008E7
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A008E7
                mov     r12, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     rax, [r14-1]
                mov     [rbp+0BE0h+arg_8], rax

loc_140A0073F:                          ; CODE XREF: sub_1409FA010+679C↓j
                movzx   r15d, r12b

loc_140A00743:                          ; CODE XREF: sub_1409FA010+6774↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A00786
                test    r13d, r13d
                jnz     loc_140A008DE
                lea     eax, [r13+1]
                cmp     r12b, al
                ja      short loc_140A0078E
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r13+2]
                mov     cr8, rax
                jmp     short loc_140A00743
; ---------------------------------------------------------------------------

loc_140A00786:                          ; CODE XREF: sub_1409FA010+6749↑j
                test    eax, eax
                js      loc_140A008DE

loc_140A0078E:                          ; CODE XREF: sub_1409FA010+675B↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     ecx, 1000h
                add     rax, rcx
                add     r14, rcx
                mov     [rbp+0BE0h+arg_8], rax
                cmp     rax, [rsp+0CE0h+var_C70]
                jnz     short loc_140A0073F
                mov     cr8, r15
                mov     r12, [rsp+0CE0h+var_C90]

loc_140A007B7:                          ; CODE XREF: sub_1409FA010+66BF↑j
                mov     r13d, 1

loc_140A007BD:                          ; CODE XREF: sub_1409FA010+6909↓j
                                        ; sub_1409FA010+695A↓j
                mov     rax, [r12+8]
                sub     rax, 70h ; 'p'
                mov     [rbp+0BE0h+var_B30], rax
                mov     r15, [rax+50h]
                xor     eax, eax
                mov     r9d, eax
                test    r15, r15
                jz      short loc_140A007DE
                mov     r9d, [r15]

loc_140A007DE:                          ; CODE XREF: sub_1409FA010+67C9↑j
                add     [rsi+828h], r9d
                mov     r10, r15
                mov     r11d, [rsi+814h]
                mov     rax, r15
                mov     r14, [rsi+818h]
                mov     ecx, r9d
                add     rcx, r15
                cmp     r15, rcx
                jnb     short loc_140A00814
                mov     edx, 40h ; '@'

loc_140A00809:                          ; CODE XREF: sub_1409FA010+6802↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A00809

loc_140A00814:                          ; CODE XREF: sub_1409FA010+67F2↑j
                mov     ebx, r9d
                mov     r8, r14
                shr     ebx, 7
                test    ebx, ebx
                jz      short loc_140A0088B
                mov     rsi, 7010008004002001h

loc_140A0082B:                          ; CODE XREF: sub_1409FA010+6874↓j
                mov     edx, 8

loc_140A00830:                          ; CODE XREF: sub_1409FA010+683D↓j
                mov     rax, [r10]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r13
                jnz     short loc_140A00830
                mov     rcx, r10
                sub     rcx, r15
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r11d, edx
                mov     [rbp+0BE0h+var_648], rdx
                xor     r11d, eax
                mov     eax, 0FFFFFFFFh
                and     r11d, 3Fh
                cmovz   r11d, r13d
                add     ebx, eax
                jnz     short loc_140A0082B
                mov     rsi, [rsp+0CE0h+var_C80]

loc_140A0088B:                          ; CODE XREF: sub_1409FA010+680F↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_140A008B2
                mov     edx, r9d
                shr     rdx, 3

loc_140A0089C:                          ; CODE XREF: sub_1409FA010+68A0↓j
                xor     r8, [r10]
                mov     ecx, r11d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A0089C

loc_140A008B2:                          ; CODE XREF: sub_1409FA010+6883↑j
                test    r9d, r9d
                jz      short loc_140A008D6
                mov     esi, 0FFFFFFFFh

loc_140A008BC:                          ; CODE XREF: sub_1409FA010+68BF↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r11d
                xor     r8, rax
                add     r10, r13
                rol     r8, cl
                add     r9d, esi
                jnz     short loc_140A008BC
                mov     rsi, [rsp+0CE0h+var_C80]

loc_140A008D6:                          ; CODE XREF: sub_1409FA010+68A5↑j
                mov     rax, r8
                jmp     loc_140A00972
; ---------------------------------------------------------------------------

loc_140A008DE:                          ; CODE XREF: sub_1409FA010+674E↑j
                                        ; sub_1409FA010+6778↑j
                mov     cr8, r15
                mov     r12, [rsp+0CE0h+var_C90]

loc_140A008E7:                          ; CODE XREF: sub_1409FA010+66E1↑j
                                        ; sub_1409FA010+66F6↑j
                mov     eax, [rsi+8F8h]
                mov     edx, [r12+14h]
                test    eax, eax
                jnz     short loc_140A0090C
                mov     rax, [rsi+590h]
                mov     ecx, ebx
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A0090C:                          ; CODE XREF: sub_1409FA010+68E4↑j
                mov     rcx, [r12+8]
                mov     r13d, 1
                test    eax, eax
                jnz     loc_140A007BD
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r12]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], r13d
                call    sub_140A113CC
                jmp     loc_140A007BD
; ---------------------------------------------------------------------------

loc_140A0096F:                          ; CODE XREF: sub_1409FA010+6969↓j
                xor     r8d, eax

loc_140A00972:                          ; CODE XREF: sub_1409FA010+68C9↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0096F
                mov     edx, [r12+2Ch]
                btr     r8d, 1Fh
                cmp     r8d, edx
                jz      loc_1409FB318
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     loc_1409FB318
                mov     rax, [rsi+590h]
                mov     ecx, r8d
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     loc_1409FB318
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r12]
                mov     [rsi+910h], rax
                mov     [rsi+918h], r15
                mov     [rsi+8F8h], r13d
                jmp     loc_140A0058A
; ---------------------------------------------------------------------------

loc_140A00A01:                          ; CODE XREF: sub_1409FA010+1287↑j
                cmp     r10d, 25h ; '%'
                jg      loc_140A02FD0
                jz      loc_140A02F5A
                mov     ecx, r10d
                sub     ecx, 1Dh
                jz      loc_140A02B0C
                sub     ecx, 1
                jz      loc_140A0237D
                sub     ecx, 1
                jz      loc_140A016D9
                sub     ecx, 1
                jz      loc_140A016C9
                sub     ecx, 1
                jz      loc_140A016B9
                sub     ecx, 2
                jz      loc_140A00F5C
                cmp     ecx, 1
                jnz     loc_140A05767
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A00A90
                mov     r11d, 40h ; '@'

loc_140A00A85:                          ; CODE XREF: sub_1409FA010+6A7E↓j
                prefetchnta byte ptr [rax]
                add     rax, r11
                cmp     rax, rcx
                jb      short loc_140A00A85

loc_140A00A90:                          ; CODE XREF: sub_1409FA010+6A6D↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     r12d, 0FFFFFFFFh
                test    r11d, r11d
                jz      short loc_140A00B11
                mov     rdi, 7010008004002001h

loc_140A00AAF:                          ; CODE XREF: sub_1409FA010+6AF3↓j
                mov     eax, 8

loc_140A00AB4:                          ; CODE XREF: sub_1409FA010+6ABB↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_140A00AB4
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, edx
                mov     [rbp+0BE0h+var_640], rdx
                xor     r10d, eax
                mov     edx, 1
                and     r10d, 3Fh
                cmovz   r10d, edx
                add     r11d, r12d
                jnz     short loc_140A00AAF
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A00B11:                          ; CODE XREF: sub_1409FA010+6A93↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A00B38
                mov     eax, r8d
                shr     rax, 3

loc_140A00B22:                          ; CODE XREF: sub_1409FA010+6B26↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A00B22

loc_140A00B38:                          ; CODE XREF: sub_1409FA010+6B09↑j
                test    r8d, r8d
                jz      short loc_140A00B52

loc_140A00B3D:                          ; CODE XREF: sub_1409FA010+6B40↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_140A00B3D

loc_140A00B52:                          ; CODE XREF: sub_1409FA010+6B2B↑j
                mov     rax, rbx
                jmp     short loc_140A00B59
; ---------------------------------------------------------------------------

loc_140A00B57:                          ; CODE XREF: sub_1409FA010+6B50↓j
                xor     ebx, eax

loc_140A00B59:                          ; CODE XREF: sub_1409FA010+6B45↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A00B57
                btr     ebx, 1Fh
                mov     r12d, eax
                cmp     ebx, [r13+14h]
                jz      loc_140A00CD0
                cmp     [r13+0], eax
                jnz     short loc_140A00B81
                cmp     [r13+18h], eax
                cmovnz  r12d, edx

loc_140A00B81:                          ; CODE XREF: sub_1409FA010+6B67↑j
                mov     ecx, [r13+10h]
                mov     rdx, [r13+8]
                test    rcx, rcx
                jz      loc_140A00C55
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A00C55
                mov     r13, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     rax, [r14-1]
                mov     [rbp+0BE0h+arg_8], rax

loc_140A00BDA:                          ; CODE XREF: sub_1409FA010+6C31↓j
                movzx   r15d, r13b

loc_140A00BDE:                          ; CODE XREF: sub_1409FA010+6C0D↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A00C1F
                test    r12d, r12d
                jnz     short loc_140A00C4C
                lea     eax, [r12+1]
                cmp     r13b, al
                ja      short loc_140A00C23
                movzx   r15d, r13b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r12+2]
                mov     cr8, rax
                jmp     short loc_140A00BDE
; ---------------------------------------------------------------------------

loc_140A00C1F:                          ; CODE XREF: sub_1409FA010+6BE4↑j
                test    eax, eax
                js      short loc_140A00C4C

loc_140A00C23:                          ; CODE XREF: sub_1409FA010+6BF3↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     ecx, 1000h
                add     rax, rcx
                add     r14, rcx
                mov     [rbp+0BE0h+arg_8], rax
                cmp     rax, [rsp+0CE0h+var_C70]
                jnz     short loc_140A00BDA
                mov     cr8, r15
                jmp     loc_140A00CD0
; ---------------------------------------------------------------------------

loc_140A00C4C:                          ; CODE XREF: sub_1409FA010+6BE9↑j
                                        ; sub_1409FA010+6C11↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]

loc_140A00C55:                          ; CODE XREF: sub_1409FA010+6B7C↑j
                                        ; sub_1409FA010+6B91↑j
                mov     eax, [rsi+8F8h]
                mov     edx, [r13+14h]
                test    eax, eax
                jnz     short loc_140A00C79
                mov     rax, [rsi+590h]
                mov     ecx, ebx
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A00C79:                          ; CODE XREF: sub_1409FA010+6C51↑j
                mov     rcx, [r13+8]
                test    eax, eax
                jnz     short loc_140A00CD0
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A00CD0:                          ; CODE XREF: sub_1409FA010+6B5D↑j
                                        ; sub_1409FA010+6C37↑j ...
                mov     rcx, [rsi+540h]
                mov     r14, cr8
                mov     eax, 0Fh
                mov     cr8, rax
                mov     rax, [rsi+150h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+610h]
                mov     r12, [rsp+0CE0h+var_C90]
                mov     rcx, [rax]
                mov     eax, [rcx]
                lea     rbx, [rcx+10h]
                mov     r15b, [rcx+0Ch]
                lea     rcx, [rax+rax*2]
                lea     r13, [rbx+rcx*8]

loc_140A00D11:                          ; CODE XREF: sub_1409FA010+6D5D↓j
                mov     r8d, 18h
                lea     r9, [r12+18h]
                mov     r10, rbx

loc_140A00D1F:                          ; CODE XREF: sub_1409FA010+6D2A↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A00D66
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A00D1F
                test    r8d, r8d
                jz      short loc_140A00D6F
                mov     r11d, 1

loc_140A00D47:                          ; CODE XREF: sub_1409FA010+6D54↓j
                movzx   edx, byte ptr [r10]
                add     r10, r11
                movzx   eax, byte ptr [r9]
                add     r9, r11
                cmp     rdx, rax
                jnz     short loc_140A00D66
                mov     eax, 0FFFFFFFFh
                add     r8d, eax
                jz      short loc_140A00D6F
                jmp     short loc_140A00D47
; ---------------------------------------------------------------------------

loc_140A00D66:                          ; CODE XREF: sub_1409FA010+6D20↑j
                                        ; sub_1409FA010+6D48↑j
                add     rbx, 18h
                cmp     rbx, r13
                jb      short loc_140A00D11

loc_140A00D6F:                          ; CODE XREF: sub_1409FA010+6D2F↑j
                                        ; sub_1409FA010+6D52↑j
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rcx, [rsi+540h]
                mov     rax, [rsi+190h]
                call    j__guard_dispatch_icall_nop
                movzx   eax, r14b
                mov     cr8, rax
                xor     eax, eax
                test    r15b, r15b
                jz      short loc_140A00E12
                mov     eax, [rsi+994h]
                mov     ecx, 10h
                test    cl, al
                jz      short loc_140A00E02
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A00E02
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rax
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A00E02:                          ; CODE XREF: sub_1409FA010+6D93↑j
                                        ; sub_1409FA010+6D9D↑j
                mov     ecx, 1
                cmp     [r12+18h], rcx
                jz      short loc_140A00E76
                xor     eax, eax
                jmp     short loc_140A00E17
; ---------------------------------------------------------------------------

loc_140A00E12:                          ; CODE XREF: sub_1409FA010+6D84↑j
                mov     ecx, 1

loc_140A00E17:                          ; CODE XREF: sub_1409FA010+6E00↑j
                cmp     rbx, r13
                jnz     short loc_140A00E76
                mov     r13, 0B3B74BDEE4453415h
                mov     r12, [rsp+0CE0h+var_C90]
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A00E85
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                lea     rax, [r12+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r12]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], ecx
                mov     rcx, rsi
                call    sub_140A113CC
                jmp     short loc_140A00E85
; ---------------------------------------------------------------------------

loc_140A00E76:                          ; CODE XREF: sub_1409FA010+6DFC↑j
                                        ; sub_1409FA010+6E0A↑j
                mov     r12, [rsp+0CE0h+var_C90]
                mov     r13, 0B3B74BDEE4453415h

loc_140A00E85:                          ; CODE XREF: sub_1409FA010+6E21↑j
                                        ; sub_1409FA010+6E64↑j
                mov     rcx, [rsi+540h]
                mov     r15, cr8
                mov     eax, 0Fh
                mov     cr8, rax
                mov     rax, [rsi+150h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+610h]
                mov     rcx, [rax]
                mov     eax, [rcx]
                lea     rbx, [rcx+10h]
                lea     rcx, [rax+rax*2]
                xor     eax, eax
                lea     r14, [rbx+rcx*8]
                jmp     short loc_140A00EE8
; ---------------------------------------------------------------------------

loc_140A00EC1:                          ; CODE XREF: sub_1409FA010+6EE2↓j
                mov     rcx, [rbx+8]
                cmp     rcx, rdx
                jb      short loc_140A00EF4
                mov     rax, rcx
                and     rax, 0FFFFFFFFFFFFF000h
                cmp     rax, rcx
                jnz     short loc_140A00EF4
                mov     eax, [rbx+10h]
                add     rax, rcx
                cmp     rax, rcx
                jbe     short loc_140A00EF4
                cmp     rax, rdx
                jz      short loc_140A00EF4

loc_140A00EE8:                          ; CODE XREF: sub_1409FA010+6EAF↑j
                add     rbx, 18h
                mov     rdx, rax
                cmp     rbx, r14
                jb      short loc_140A00EC1

loc_140A00EF4:                          ; CODE XREF: sub_1409FA010+6EB8↑j
                                        ; sub_1409FA010+6EC6↑j ...
                mov     rcx, [rsi+540h]
                mov     rax, [rsi+190h]
                call    j__guard_dispatch_icall_nop
                movzx   eax, r15b
                mov     cr8, rax
                cmp     rbx, r14
                jz      loc_1409FB318
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     loc_1409FB318
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                lea     rax, [r12+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r12]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                jmp     loc_140A0057F
; ---------------------------------------------------------------------------

loc_140A00F5C:                          ; CODE XREF: sub_1409FA010+6A34↑j
                mov     ecx, [r13+28h]
                and     ecx, edx
                jz      short loc_140A00F81
                xor     eax, eax
                cmp     [rsi+980h], rax
                jz      loc_1409FB312
                mov     eax, [rsi+994h]
                test    al, 4
                jnz     loc_1409FB3EA

loc_140A00F81:                          ; CODE XREF: sub_1409FA010+6F52↑j
                xor     eax, eax
                test    ecx, ecx
                jz      loc_140A0149C
                mov     edx, [rsi+994h]
                mov     ecx, edx
                cmp     [rsi+824h], eax
                jnz     short loc_140A00FAD
                shl     ecx, 3
                xor     ecx, edx
                and     ecx, 20h
                xor     ecx, edx
                mov     [rsi+994h], ecx
                jmp     short loc_140A00FBE
; ---------------------------------------------------------------------------

loc_140A00FAD:                          ; CODE XREF: sub_1409FA010+6F89↑j
                mov     eax, edx
                shr     eax, 3
                xor     eax, edx
                test    al, 4
                jnz     loc_1409FB3EA
                xor     eax, eax

loc_140A00FBE:                          ; CODE XREF: sub_1409FA010+6F9B↑j
                cmp     [rsi+980h], rax
                jz      loc_140A01491
                mov     edx, ecx
                cmp     [rsi+824h], eax
                jnz     short loc_140A00FE7
                shl     edx, 3
                xor     edx, ecx
                and     edx, 20h
                xor     edx, ecx
                mov     [rsi+994h], edx
                jmp     short loc_140A00FF6
; ---------------------------------------------------------------------------

loc_140A00FE7:                          ; CODE XREF: sub_1409FA010+6FC3↑j
                mov     eax, ecx
                shr     eax, 3
                xor     eax, ecx
                test    al, 4
                jnz     loc_140A0148F

loc_140A00FF6:                          ; CODE XREF: sub_1409FA010+6FD5↑j
                test    dl, 4
                jz      loc_140A01209
                mov     r14d, [r13+8]
                mov     r12d, 1
                mov     ecx, [r13+10h]
                and     r14d, 0FFFh
                mov     rbx, [r13+8]
                add     r14, 0FFFh
                add     r14, rcx
                and     rbx, 0FFFFFFFFFFFFF000h
                shr     r14, 0Ch
                test    r14, r14
                jz      loc_140A010BE
                xor     edi, edi

loc_140A01038:                          ; CODE XREF: sub_1409FA010+70A5↓j
                mov     rax, [rsi+2B0h]
                mov     rcx, rbx
                sub     r14, r12
                call    j__guard_dispatch_icall_nop
                test    al, al
                jz      short loc_140A010A1
                cmp     [rsi+8F8h], edi
                jnz     short loc_140A010A1
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_140A010A1:                          ; CODE XREF: sub_1409FA010+703C↑j
                                        ; sub_1409FA010+7044↑j
                add     dword ptr [rsi+828h], 100h
                add     rbx, 1000h
                test    r14, r14
                jnz     short loc_140A01038
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A010BE:                          ; CODE XREF: sub_1409FA010+7020↑j
                                        ; sub_1409FA010+73E4↓j
                xor     r15d, r15d

loc_140A010C1:                          ; CODE XREF: sub_1409FA010+7322↓j
                mov     r14, 0B3B74BDEE4453415h

loc_140A010CB:                          ; CODE XREF: sub_1409FA010+7432↓j
                                        ; sub_1409FA010+747A↓j
                mov     eax, [r13+28h]
                mov     ecx, 2
                test    cl, al
                jz      loc_1409FB31B
                mov     rbx, [r13+8]
                test    al, 4
                jz      loc_140A01171
                mov     rax, [rbx+70h]
                mov     rdx, [r13+18h]
                mov     rcx, [rax]
                cmp     rcx, rdx
                jz      short loc_140A01171
                mov     rax, [rsi+590h]
                mov     [rax], rcx
                mov     dword ptr [rax+10h], 100h
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A01127
                mov     rax, [rsi+590h]
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A01127:                          ; CODE XREF: sub_1409FA010+7101↑j
                mov     rcx, [rbx+70h]
                test    eax, eax
                jnz     short loc_140A01171
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                lea     rax, [r14+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_140A01171:                          ; CODE XREF: sub_1409FA010+70D2↑j
                                        ; sub_1409FA010+70E6↑j ...
                mov     eax, [r13+28h]
                test    al, 8
                jz      loc_1409FB31B
                mov     rax, [rbx+78h]
                mov     rdx, [r13+20h]
                mov     rcx, [rax]
                cmp     rcx, rdx
                jz      loc_1409FB31B
                mov     rax, [rsi+590h]
                mov     [rax], rcx
                mov     dword ptr [rax+10h], 100h
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A011C0
                mov     rax, [rsi+590h]
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A011C0:                          ; CODE XREF: sub_1409FA010+719A↑j
                mov     rcx, [rbx+78h]
                test    eax, eax
                jnz     loc_1409FB31B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                lea     rax, [r14+r13]

loc_140A011E4:                          ; CODE XREF: sub_1409FA010+987D↓j
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     [rsi+8F8h], r12d
                jmp     loc_1409FB6F2
; ---------------------------------------------------------------------------

loc_140A01209:                          ; CODE XREF: sub_1409FA010+6FE9↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r11d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A01245
                mov     edx, 40h ; '@'

loc_140A0123A:                          ; CODE XREF: sub_1409FA010+7233↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A0123A

loc_140A01245:                          ; CODE XREF: sub_1409FA010+7223↑j
                mov     r10d, r8d
                mov     rbx, r15
                shr     r10d, 7
                mov     r12d, 1
                test    r10d, r10d
                jz      short loc_140A012C5
                mov     rsi, 7010008004002001h

loc_140A01264:                          ; CODE XREF: sub_1409FA010+72AE↓j
                mov     edx, 8

loc_140A01269:                          ; CODE XREF: sub_1409FA010+7276↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r12
                jnz     short loc_140A01269
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r11d, edx
                mov     [rbp+0BE0h+var_638], rdx
                xor     r11d, eax
                mov     eax, 0FFFFFFFFh
                and     r11d, 3Fh
                cmovz   r11d, r12d
                add     r10d, eax
                jnz     short loc_140A01264
                mov     rsi, [rsp+0CE0h+var_C80]

loc_140A012C5:                          ; CODE XREF: sub_1409FA010+7248↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A012EC
                mov     edx, r8d
                shr     rdx, 3

loc_140A012D6:                          ; CODE XREF: sub_1409FA010+72DA↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, r12
                jnz     short loc_140A012D6

loc_140A012EC:                          ; CODE XREF: sub_1409FA010+72BD↑j
                test    r8d, r8d
                jz      short loc_140A01310
                mov     esi, 0FFFFFFFFh

loc_140A012F6:                          ; CODE XREF: sub_1409FA010+72F9↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     rbx, rax
                add     r9, r12
                rol     rbx, cl
                add     r8d, esi
                jnz     short loc_140A012F6
                mov     rsi, [rsp+0CE0h+var_C80]

loc_140A01310:                          ; CODE XREF: sub_1409FA010+72DF↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r15d, r15d
                jmp     short loc_140A01322
; ---------------------------------------------------------------------------

loc_140A0131C:                          ; CODE XREF: sub_1409FA010+7315↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A01322:                          ; CODE XREF: sub_1409FA010+730A↑j
                test    rax, rax
                jnz     short loc_140A0131C
                mov     r8d, [r13+14h]
                btr     ebx, 1Fh
                cmp     ebx, r8d
                jz      loc_140A010C1
                mov     ecx, [r13+10h]
                mov     rdx, [r13+8]
                test    rcx, rcx
                jz      loc_140A01406
                mov     eax, [rsi+994h]
                mov     r9d, 40h ; '@'
                test    r9b, al
                jz      loc_140A01406
                mov     r12, cr8
                lea     eax, [r9-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rbp+0BE0h+arg_8], rax
                lea     r13, [r14-1]

loc_140A0138C:                          ; CODE XREF: sub_1409FA010+73D3↓j
                movzx   r15d, r12b

loc_140A01390:                          ; CODE XREF: sub_1409FA010+73BA↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A013CC
                mov     eax, 1
                cmp     r12b, al
                ja      short loc_140A013D0
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_140A01390
; ---------------------------------------------------------------------------

loc_140A013CC:                          ; CODE XREF: sub_1409FA010+7396↑j
                test    eax, eax
                js      short loc_140A013F9

loc_140A013D0:                          ; CODE XREF: sub_1409FA010+73A0↑j
                mov     r11d, 1000h
                add     r14, r11
                add     r13, r11
                cmp     r13, [rbp+0BE0h+arg_8]
                jnz     short loc_140A0138C

loc_140A013E5:                          ; CODE XREF: sub_1409FA010+7681↓j
                mov     cr8, r15

loc_140A013E9:                          ; CODE XREF: sub_1409FA010+75B0↓j
                mov     r13, [rsp+0CE0h+var_C90]

loc_140A013EE:                          ; CODE XREF: sub_1409FA010+7487↓j
                mov     r12d, 1
                jmp     loc_140A010BE
; ---------------------------------------------------------------------------

loc_140A013F9:                          ; CODE XREF: sub_1409FA010+73BE↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]
                mov     r8d, [r13+14h]

loc_140A01406:                          ; CODE XREF: sub_1409FA010+7333↑j
                                        ; sub_1409FA010+7348↑j
                mov     eax, [rsi+8F8h]
                xor     r15d, r15d
                test    eax, eax
                jnz     short loc_140A0142C
                mov     ecx, r8d

loc_140A01416:                          ; CODE XREF: sub_1409FA010+76A4↓j
                mov     eax, ebx
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A0142C:                          ; CODE XREF: sub_1409FA010+7401↑j
                                        ; sub_1409FA010+769E↓j
                mov     rcx, [r13+8]
                mov     r14, 0B3B74BDEE4453415h
                mov     r12d, 1
                test    eax, eax
                jnz     loc_140A010CB
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                lea     rax, [r14+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC
                jmp     loc_140A010CB
; ---------------------------------------------------------------------------

loc_140A0148F:                          ; CODE XREF: sub_1409FA010+6FE0↑j
                xor     eax, eax

loc_140A01491:                          ; CODE XREF: sub_1409FA010+6FB5↑j
                mov     [rsi+824h], eax
                jmp     loc_140A013EE
; ---------------------------------------------------------------------------

loc_140A0149C:                          ; CODE XREF: sub_1409FA010+6F75↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A014D9
                mov     r11d, 40h ; '@'

loc_140A014CE:                          ; CODE XREF: sub_1409FA010+74C7↓j
                prefetchnta byte ptr [rax]
                add     rax, r11
                cmp     rax, rcx
                jb      short loc_140A014CE

loc_140A014D9:                          ; CODE XREF: sub_1409FA010+74B6↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     r12d, 0FFFFFFFFh
                test    r11d, r11d
                jz      short loc_140A0155A
                mov     rdi, 7010008004002001h

loc_140A014F8:                          ; CODE XREF: sub_1409FA010+753C↓j
                mov     eax, 8

loc_140A014FD:                          ; CODE XREF: sub_1409FA010+7504↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_140A014FD
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, edx
                mov     [rbp+0BE0h+var_630], rdx
                xor     r10d, eax
                mov     edx, 1
                and     r10d, 3Fh
                cmovz   r10d, edx
                add     r11d, r12d
                jnz     short loc_140A014F8
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0155A:                          ; CODE XREF: sub_1409FA010+74DC↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A01581
                mov     eax, r8d
                shr     rax, 3

loc_140A0156B:                          ; CODE XREF: sub_1409FA010+756F↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A0156B

loc_140A01581:                          ; CODE XREF: sub_1409FA010+7552↑j
                test    r8d, r8d
                jz      short loc_140A0159B

loc_140A01586:                          ; CODE XREF: sub_1409FA010+7589↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_140A01586

loc_140A0159B:                          ; CODE XREF: sub_1409FA010+7574↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     ecx, ecx
                jmp     short loc_140A015AC
; ---------------------------------------------------------------------------

loc_140A015A6:                          ; CODE XREF: sub_1409FA010+759F↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A015AC:                          ; CODE XREF: sub_1409FA010+7594↑j
                test    rax, rax
                jnz     short loc_140A015A6
                mov     r13d, eax
                btr     ebx, 1Fh
                mov     rax, [rsp+0CE0h+var_C90]
                cmp     ebx, [rax+14h]
                jz      loc_140A013E9
                cmp     [rax], ecx
                jnz     short loc_140A015D1
                cmp     [rax+18h], ecx
                cmovnz  r13d, edx

loc_140A015D1:                          ; CODE XREF: sub_1409FA010+75B8↑j
                mov     ecx, [rax+10h]
                mov     rdx, [rax+8]
                test    rcx, rcx
                jz      loc_140A0169A
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A0169A
                mov     r12, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     rax, [r14-1]
                mov     [rbp+0BE0h+arg_8], rax

loc_140A01629:                          ; CODE XREF: sub_1409FA010+767F↓j
                movzx   r15d, r12b

loc_140A0162D:                          ; CODE XREF: sub_1409FA010+765A↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A0166C
                test    r13d, r13d
                jnz     short loc_140A01696
                lea     eax, [r13+1]
                cmp     r12b, al
                ja      short loc_140A01670
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r13+2]
                mov     cr8, rax
                jmp     short loc_140A0162D
; ---------------------------------------------------------------------------

loc_140A0166C:                          ; CODE XREF: sub_1409FA010+7633↑j
                test    eax, eax
                js      short loc_140A01696

loc_140A01670:                          ; CODE XREF: sub_1409FA010+7641↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     r11d, 1000h
                add     rax, r11
                add     r14, r11
                mov     [rbp+0BE0h+arg_8], rax
                cmp     rax, [rsp+0CE0h+var_C70]
                jnz     short loc_140A01629
                jmp     loc_140A013E5
; ---------------------------------------------------------------------------

loc_140A01696:                          ; CODE XREF: sub_1409FA010+7638↑j
                                        ; sub_1409FA010+765E↑j
                mov     cr8, r15

loc_140A0169A:                          ; CODE XREF: sub_1409FA010+75CB↑j
                                        ; sub_1409FA010+75E0↑j
                mov     r13, [rsp+0CE0h+var_C90]
                xor     r15d, r15d
                mov     eax, [rsi+8F8h]
                mov     ecx, [r13+14h]
                test    eax, eax
                jnz     loc_140A0142C
                jmp     loc_140A01416
; ---------------------------------------------------------------------------

loc_140A016B9:                          ; CODE XREF: sub_1409FA010+6A2B↑j
                mov     rdx, r13
                mov     rcx, rsi
                call    sub_1403EA1AC
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_140A016C9:                          ; CODE XREF: sub_1409FA010+6A22↑j
                mov     rdx, r13
                mov     rcx, rsi
                call    sub_1403EB118
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_140A016D9:                          ; CODE XREF: sub_1409FA010+6A19↑j
                mov     eax, [rsi+830h]
                test    dl, al
                jz      loc_1409FB318
                xor     eax, eax
                cmp     [rsi+980h], rax
                jz      short loc_140A0172E
                mov     eax, [rsi+994h]
                test    al, 4
                jnz     short loc_140A0172C
                mov     rax, [rsi+3D0h]
                lea     rdx, [rbp+0BE0h+var_840]
                xor     r9d, r9d
                xor     r8d, r8d
                lea     ecx, [r9+1Ah]
                call    j__guard_dispatch_icall_nop
                mov     rbx, [rbp+0BE0h+var_840]
                xor     ecx, ecx
                test    eax, eax
                mov     eax, ecx
                cmovs   rbx, rcx
                jmp     short loc_140A01731
; ---------------------------------------------------------------------------

loc_140A0172C:                          ; CODE XREF: sub_1409FA010+76EA↑j
                xor     eax, eax

loc_140A0172E:                          ; CODE XREF: sub_1409FA010+76E0↑j
                mov     rbx, rax

loc_140A01731:                          ; CODE XREF: sub_1409FA010+771A↑j
                mov     r14d, eax
                mov     [rsp+0CE0h+var_C78], eax
                mov     rax, [rsi+3B0h]
                xor     ecx, ecx
                mov     [rsp+0CE0h+var_C88], rbx
                call    j__guard_dispatch_icall_nop
                xor     r15d, r15d
                lea     r12d, [r15+1]
                test    rax, rax
                jz      loc_140A01F64
                mov     rdi, rax

loc_140A0175E:                          ; CODE XREF: sub_1409FA010+7F47↓j
                mov     rcx, rdi
                cmp     rbx, rdi
                jnz     loc_140A01B2B
                mov     rax, [rsi+3A0h]
                mov     r12, r13
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                js      loc_140A01F34
                mov     rax, [rsi+3E0h]
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop
                mov     bl, al
                mov     [rbp+0BE0h+var_B40], al
                mov     rax, [rsi+3E8h]
                lea     rdx, [rbp+0BE0h+arg_18]
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop
                mov     byte ptr [rbp+0BE0h+arg_8], al
                mov     rcx, rdi
                mov     rax, [rsi+3F0h]
                call    j__guard_dispatch_icall_nop
                mov     [rsp+0CE0h+var_C70], rax
                cmp     bl, 61h ; 'a'
                jz      short loc_140A01846
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A01846
                mov     rax, [rsi+590h]
                movzx   ecx, bl
                xor     rcx, 61h
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A01846
                mov     rax, 0A3A03F5891C8B4E8h
                mov     r15d, 1
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rcx, rsi
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r15d
                call    sub_140A113CC
                jmp     short loc_140A0184C
; ---------------------------------------------------------------------------

loc_140A01846:                          ; CODE XREF: sub_1409FA010+77BB↑j
                                        ; sub_1409FA010+77C5↑j ...
                mov     r15d, 1

loc_140A0184C:                          ; CODE XREF: sub_1409FA010+7834↑j
                xor     eax, eax
                movzx   ecx, bl
                and     ecx, 7
                mov     r14b, al
                mov     r13b, al
                sub     ecx, 1
                jz      short loc_140A018CF
                cmp     ecx, 1
                jz      short loc_140A018C2
                test    bl, 7
                jz      short loc_140A018D2
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A018D2
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                mov     rax, [rsp+0CE0h+var_C90]
                movsxd  rax, dword ptr [rax]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r15d
                call    sub_140A113CC
                jmp     short loc_140A018D2
; ---------------------------------------------------------------------------

loc_140A018C2:                          ; CODE XREF: sub_1409FA010+7852↑j
                mov     eax, 10h
                mov     r14b, al
                mov     r13b, al
                jmp     short loc_140A018D2
; ---------------------------------------------------------------------------

loc_140A018CF:                          ; CODE XREF: sub_1409FA010+784D↑j
                mov     r14b, 30h ; '0'

loc_140A018D2:                          ; CODE XREF: sub_1409FA010+7857↑j
                                        ; sub_1409FA010+785F↑j ...
                mov     r15, [rsi+5C8h]
                movzx   ebx, bl
                shr     rbx, 4
                mov     al, [r15+rbx*2]
                or      al, r14b
                mov     r14, [rsp+0CE0h+var_C90]
                cmp     al, byte ptr [rbp+0BE0h+arg_8]
                jz      short loc_140A0194C
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A0194C
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A0194C:                          ; CODE XREF: sub_1409FA010+78E2↑j
                                        ; sub_1409FA010+78EC↑j
                mov     al, [r15+rbx*2+1]
                mov     ebx, 1
                or      al, r13b
                cmp     al, [rbp+0BE0h+arg_18]
                jz      short loc_140A019B4
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A019B6
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], ebx
                call    sub_140A113CC

loc_140A019B4:                          ; CODE XREF: sub_1409FA010+794F↑j
                xor     eax, eax

loc_140A019B6:                          ; CODE XREF: sub_1409FA010+7959↑j
                cmp     rdi, [rsi+4E0h]
                jz      short loc_140A019D0
                mov     rax, [rsi+3D8h]
                mov     edx, ebx
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A019D0:                          ; CODE XREF: sub_1409FA010+79AD↑j
                mov     [rbp+0BE0h+var_C60], rax
                mov     r14, rax
                test    rax, rax
                jz      loc_140A01F08
                mov     rcx, [rax]
                mov     rbx, rax
                test    rcx, rcx
                jz      loc_140A01EF9
                mov     r14b, byte ptr [rbp+0BE0h+arg_8]
                mov     r13, [rsp+0CE0h+var_C70]

loc_140A019FB:                          ; CODE XREF: sub_1409FA010+7B10↓j
                and     rcx, 0FFFFFFFFFFFFFFFCh
                mov     [rbx], rcx
                mov     rax, [rsi+1E0h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rbx+8]
                movzx   edx, [rbp+0BE0h+arg_18]
                mov     r15, rcx
                movzx   eax, r14b
                and     r15, 0FFFFFFFFFFFF0000h
                cmp     r15, r13
                cmovz   edx, eax
                mov     rax, [rsi+3F8h]
                shr     rcx, 6
                and     cl, 0Fh
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jnz     loc_140A01B16
                test    dword ptr [rsi+990h], 40000000h
                lea     r9d, [rax+1]
                jz      short loc_140A01AA6
                mov     rcx, [rsi+0A80h]
                lea     edx, [rax+30h]
                lea     r8d, [rax+6]

loc_140A01A66:                          ; CODE XREF: sub_1409FA010+7A6B↓j
                mov     rax, [r12]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r12, 8
                add     rcx, 8
                sub     r8, r9
                jnz     short loc_140A01A66
                test    edx, edx
                jz      short loc_140A01A9F
                mov     r14d, 0FFFFFFFFh

loc_140A01A87:                          ; CODE XREF: sub_1409FA010+7A86↓j
                mov     al, [r12]
                add     r12, r9
                mov     [rcx], al
                add     rcx, r9
                add     edx, r14d
                jnz     short loc_140A01A87
                mov     r14b, byte ptr [rbp+0BE0h+arg_8]

loc_140A01A9F:                          ; CODE XREF: sub_1409FA010+7A6F↑j
                mov     r12, [rsi+0A80h]

loc_140A01AA6:                          ; CODE XREF: sub_1409FA010+7A46↑j
                mov     [r12+18h], r15
                mov     rax, [rbx]
                mov     [r12+20h], rax
                mov     eax, [rbx+8]
                shr     rax, 6
                and     al, 0Fh
                mov     [r12+28h], al
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A01B16
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r12]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r9d
                call    sub_140A113CC

loc_140A01B16:                          ; CODE XREF: sub_1409FA010+7A32↑j
                                        ; sub_1409FA010+7AB9↑j
                add     rbx, 30h ; '0'
                mov     rcx, [rbx]
                test    rcx, rcx
                jnz     loc_140A019FB
                jmp     loc_140A01EF5
; ---------------------------------------------------------------------------

loc_140A01B2B:                          ; CODE XREF: sub_1409FA010+7754↑j
                mov     rax, [rsi+3C8h]
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jz      loc_140A01F3A
                mov     rax, [rsi+3A0h]
                mov     rcx, rdi
                mov     r12, r13
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                js      loc_140A01F34
                mov     rax, [rsi+3E0h]
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop
                mov     bl, al
                mov     [rbp+0BE0h+var_B3F], al
                mov     rax, [rsi+3E8h]
                lea     rdx, [rbp+0BE0h+var_BEC]
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop
                mov     byte ptr [rbp+0BE0h+arg_8], al
                mov     rcx, rdi
                mov     rax, [rsi+3F0h]
                call    j__guard_dispatch_icall_nop
                mov     [rsp+0CE0h+var_C70], rax
                cmp     bl, 61h ; 'a'
                jz      short loc_140A01C1B
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A01C1B
                mov     rax, [rsi+590h]
                movzx   ecx, bl
                xor     rcx, 61h
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A01C1B
                mov     rax, 0A3A03F5891C8B4E8h
                mov     r15d, 1
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rcx, rsi
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r15d
                call    sub_140A113CC
                jmp     short loc_140A01C21
; ---------------------------------------------------------------------------

loc_140A01C1B:                          ; CODE XREF: sub_1409FA010+7B90↑j
                                        ; sub_1409FA010+7B9A↑j ...
                mov     r15d, 1

loc_140A01C21:                          ; CODE XREF: sub_1409FA010+7C09↑j
                xor     eax, eax
                movzx   ecx, bl
                and     ecx, 7
                mov     r14b, al
                mov     r13b, al
                sub     ecx, 1
                jz      short loc_140A01CA4
                cmp     ecx, 1
                jz      short loc_140A01C97
                test    bl, 7
                jz      short loc_140A01CA7
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A01CA7
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                mov     rax, [rsp+0CE0h+var_C90]
                movsxd  rax, dword ptr [rax]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r15d
                call    sub_140A113CC
                jmp     short loc_140A01CA7
; ---------------------------------------------------------------------------

loc_140A01C97:                          ; CODE XREF: sub_1409FA010+7C27↑j
                mov     eax, 10h
                mov     r14b, al
                mov     r13b, al
                jmp     short loc_140A01CA7
; ---------------------------------------------------------------------------

loc_140A01CA4:                          ; CODE XREF: sub_1409FA010+7C22↑j
                mov     r14b, 30h ; '0'

loc_140A01CA7:                          ; CODE XREF: sub_1409FA010+7C2C↑j
                                        ; sub_1409FA010+7C34↑j ...
                mov     r15, [rsi+5C8h]
                movzx   ebx, bl
                shr     rbx, 4
                mov     al, [r15+rbx*2]
                or      al, r14b
                mov     r14, [rsp+0CE0h+var_C90]
                cmp     al, byte ptr [rbp+0BE0h+arg_8]
                jz      short loc_140A01D21
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A01D21
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A01D21:                          ; CODE XREF: sub_1409FA010+7CB7↑j
                                        ; sub_1409FA010+7CC1↑j
                mov     al, [r15+rbx*2+1]
                mov     ebx, 1
                or      al, r13b
                cmp     al, [rbp+0BE0h+var_BEC]
                jz      short loc_140A01D86
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A01D88
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], ebx
                call    sub_140A113CC

loc_140A01D86:                          ; CODE XREF: sub_1409FA010+7D21↑j
                xor     eax, eax

loc_140A01D88:                          ; CODE XREF: sub_1409FA010+7D2B↑j
                cmp     rdi, [rsi+4E0h]
                jz      short loc_140A01DA2
                mov     rax, [rsi+3D8h]
                mov     edx, ebx
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A01DA2:                          ; CODE XREF: sub_1409FA010+7D7F↑j
                mov     [rbp+0BE0h+var_C60], rax
                mov     r14, rax
                test    rax, rax
                jz      loc_140A01F08
                mov     rcx, [rax]
                mov     rbx, rax
                test    rcx, rcx
                jz      loc_140A01EF9
                mov     r14b, byte ptr [rbp+0BE0h+arg_8]
                mov     r13, [rsp+0CE0h+var_C70]

loc_140A01DCD:                          ; CODE XREF: sub_1409FA010+7EDF↓j
                and     rcx, 0FFFFFFFFFFFFFFFCh
                mov     [rbx], rcx
                mov     rax, [rsi+1E0h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rbx+8]
                movzx   edx, [rbp+0BE0h+var_BEC]
                mov     r15, rcx
                movzx   eax, r14b
                and     r15, 0FFFFFFFFFFFF0000h
                cmp     r15, r13
                cmovz   edx, eax
                mov     rax, [rsi+3F8h]
                shr     rcx, 6
                and     cl, 0Fh
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jnz     loc_140A01EE5
                test    dword ptr [rsi+990h], 40000000h
                lea     r9d, [rax+1]
                jz      short loc_140A01E75
                mov     rcx, [rsi+0A80h]
                lea     edx, [rax+30h]
                lea     r8d, [rax+6]

loc_140A01E35:                          ; CODE XREF: sub_1409FA010+7E3A↓j
                mov     rax, [r12]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r12, 8
                add     rcx, 8
                sub     r8, r9
                jnz     short loc_140A01E35
                test    edx, edx
                jz      short loc_140A01E6E
                mov     r14d, 0FFFFFFFFh

loc_140A01E56:                          ; CODE XREF: sub_1409FA010+7E55↓j
                mov     al, [r12]
                add     r12, r9
                mov     [rcx], al
                add     rcx, r9
                add     edx, r14d
                jnz     short loc_140A01E56
                mov     r14b, byte ptr [rbp+0BE0h+arg_8]

loc_140A01E6E:                          ; CODE XREF: sub_1409FA010+7E3E↑j
                mov     r12, [rsi+0A80h]

loc_140A01E75:                          ; CODE XREF: sub_1409FA010+7E15↑j
                mov     [r12+18h], r15
                mov     rax, [rbx]
                mov     [r12+20h], rax
                mov     eax, [rbx+8]
                shr     rax, 6
                and     al, 0Fh
                mov     [r12+28h], al
                xor     eax, eax
                cmp     [rsi+8F8h], eax
                jnz     short loc_140A01EE5
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r12]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r9d
                call    sub_140A113CC

loc_140A01EE5:                          ; CODE XREF: sub_1409FA010+7E01↑j
                                        ; sub_1409FA010+7E88↑j
                add     rbx, 30h ; '0'
                mov     rcx, [rbx]
                test    rcx, rcx
                jnz     loc_140A01DCD

loc_140A01EF5:                          ; CODE XREF: sub_1409FA010+7B16↑j
                mov     r14, [rbp+0BE0h+var_C60]

loc_140A01EF9:                          ; CODE XREF: sub_1409FA010+79D9↑j
                                        ; sub_1409FA010+7DAB↑j
                mov     rax, [rsi+100h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop

loc_140A01F08:                          ; CODE XREF: sub_1409FA010+79CA↑j
                                        ; sub_1409FA010+7D9C↑j
                mov     rax, [rsi+3A8h]
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop
                mov     r13, [rsp+0CE0h+var_C90]
                mov     eax, 8000h
                add     [rsi+828h], eax
                mov     r14d, [rsp+0CE0h+var_C78]
                xor     r15d, r15d
                mov     rbx, [rsp+0CE0h+var_C88]

loc_140A01F34:                          ; CODE XREF: sub_1409FA010+776B↑j
                                        ; sub_1409FA010+7B43↑j
                mov     r12d, 1

loc_140A01F3A:                          ; CODE XREF: sub_1409FA010+7B29↑j
                mov     rax, [rsi+3B0h]
                add     r14d, r12d
                mov     rcx, rdi
                mov     [rsp+0CE0h+var_C78], r14d
                call    j__guard_dispatch_icall_nop
                mov     rdi, rax
                test    rax, rax
                jnz     loc_140A0175E
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A01F64:                          ; CODE XREF: sub_1409FA010+7745↑j
                mov     r13, [rsi+4E0h]
                mov     rax, [rsi+3A0h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                js      loc_140A02357
                mov     rax, [rsi+3E0h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     bl, al
                mov     [rbp+0BE0h+var_B3E], al
                mov     rax, [rsi+3E8h]
                lea     rdx, [rbp+0BE0h+var_C00]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     byte ptr [rbp+0BE0h+arg_8], al
                mov     rcx, r13
                mov     rax, [rsi+3F0h]
                call    j__guard_dispatch_icall_nop
                mov     [rsp+0CE0h+var_C70], rax
                cmp     bl, 72h ; 'r'
                jz      short loc_140A02042
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A02042
                mov     rax, [rsi+590h]
                movzx   ecx, bl
                xor     rcx, 72h
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A02042
                mov     r15, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rcx, rsi
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r15
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r15]
                mov     [rsi+910h], rax
                mov     [rsi+918h], r13
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC
                jmp     short loc_140A02047
; ---------------------------------------------------------------------------

loc_140A02042:                          ; CODE XREF: sub_1409FA010+7FB9↑j
                                        ; sub_1409FA010+7FC3↑j ...
                mov     r15, [rsp+0CE0h+var_C90]

loc_140A02047:                          ; CODE XREF: sub_1409FA010+8030↑j
                xor     edx, edx
                movzx   ecx, bl
                and     ecx, 7
                mov     r14b, dl
                mov     r12b, dl
                sub     ecx, 1
                jz      short loc_140A020C7
                cmp     ecx, 1
                jz      short loc_140A020BA
                test    bl, 7
                jz      short loc_140A020CA
                cmp     [rsi+8F8h], edx
                jnz     short loc_140A020CA
                mov     rax, 0A3A03F5891C8B4E8h
                mov     rcx, rsi
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r15
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r15]
                mov     [rsi+910h], rax
                lea     eax, [rdx+1]
                mov     [rsi+918h], r13
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                xor     edx, edx
                jmp     short loc_140A020CA
; ---------------------------------------------------------------------------

loc_140A020BA:                          ; CODE XREF: sub_1409FA010+804D↑j
                mov     eax, 10h
                mov     r14b, al
                mov     r12b, al
                jmp     short loc_140A020CA
; ---------------------------------------------------------------------------

loc_140A020C7:                          ; CODE XREF: sub_1409FA010+8048↑j
                mov     r14b, 30h ; '0'

loc_140A020CA:                          ; CODE XREF: sub_1409FA010+8052↑j
                                        ; sub_1409FA010+805A↑j ...
                mov     r15, [rsi+5C8h]
                movzx   ebx, bl
                shr     rbx, 4
                mov     al, [r15+rbx*2]
                or      al, r14b
                mov     r14, [rsp+0CE0h+var_C90]
                cmp     al, byte ptr [rbp+0BE0h+arg_8]
                jz      short loc_140A02142
                cmp     [rsi+8F8h], edx
                jnz     short loc_140A02142
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r14
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], r13
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A02142:                          ; CODE XREF: sub_1409FA010+80DA↑j
                                        ; sub_1409FA010+80E2↑j
                mov     al, [r15+rbx*2+1]
                xor     r15d, r15d
                or      al, r12b
                lea     ebx, [r15+1]
                cmp     al, [rbp+0BE0h+var_C00]
                jz      short loc_140A021A8
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A021A8
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r14
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     [rsi+918h], r13
                mov     [rsi+8F8h], ebx
                call    sub_140A113CC

loc_140A021A8:                          ; CODE XREF: sub_1409FA010+8144↑j
                                        ; sub_1409FA010+814D↑j
                cmp     r13, [rsi+4E0h]
                jz      short loc_140A021C7
                mov     rax, [rsi+3D8h]
                mov     edx, ebx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                jmp     short loc_140A021CA
; ---------------------------------------------------------------------------

loc_140A021C7:                          ; CODE XREF: sub_1409FA010+819F↑j
                mov     r14, r15

loc_140A021CA:                          ; CODE XREF: sub_1409FA010+81B5↑j
                mov     [rbp+0BE0h+var_C60], r14
                test    r14, r14
                jz      loc_140A02338
                mov     rcx, [r14]
                mov     rbx, r14
                test    rcx, rcx
                jz      loc_140A02329
                mov     dil, byte ptr [rbp+0BE0h+arg_8]
                mov     r12, [rsp+0CE0h+var_C70]
                mov     r14, [rsp+0CE0h+var_C90]

loc_140A021F7:                          ; CODE XREF: sub_1409FA010+8308↓j
                and     rcx, 0FFFFFFFFFFFFFFFCh
                mov     [rbx], rcx
                mov     rax, [rsi+1E0h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rbx+8]
                movzx   edx, [rbp+0BE0h+var_C00]
                mov     r15, rcx
                movzx   eax, dil
                and     r15, 0FFFFFFFFFFFF0000h
                cmp     r15, r12
                cmovz   edx, eax
                mov     rax, [rsi+3F8h]
                shr     rcx, 6
                and     cl, 0Fh
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jnz     loc_140A0230B
                test    dword ptr [rsi+990h], 40000000h
                lea     r10d, [rax+1]
                jz      short loc_140A0229B
                mov     rcx, [rsi+0A80h]
                lea     edx, [rax+30h]
                lea     r8d, [rax+6]

loc_140A0225F:                          ; CODE XREF: sub_1409FA010+8263↓j
                mov     rax, [r14]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r14, 8
                add     rcx, 8
                sub     r8, r10
                jnz     short loc_140A0225F
                test    edx, edx
                jz      short loc_140A02294
                mov     edi, 0FFFFFFFFh

loc_140A0227E:                          ; CODE XREF: sub_1409FA010+827B↓j
                mov     al, [r14]
                add     r14, r10
                mov     [rcx], al
                add     rcx, r10
                add     edx, edi
                jnz     short loc_140A0227E
                mov     dil, byte ptr [rbp+0BE0h+arg_8]

loc_140A02294:                          ; CODE XREF: sub_1409FA010+8267↑j
                mov     r14, [rsi+0A80h]

loc_140A0229B:                          ; CODE XREF: sub_1409FA010+823F↑j
                mov     [r14+18h], r15
                xor     r15d, r15d
                mov     rax, [rbx]
                mov     [r14+20h], rax
                mov     eax, [rbx+8]
                shr     rax, 6
                and     al, 0Fh
                mov     [r14+28h], al
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A0230E
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r14
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     [rsi+918h], r13
                mov     [rsi+8F8h], r10d
                call    sub_140A113CC
                jmp     short loc_140A0230E
; ---------------------------------------------------------------------------

loc_140A0230B:                          ; CODE XREF: sub_1409FA010+822B↑j
                xor     r15d, r15d

loc_140A0230E:                          ; CODE XREF: sub_1409FA010+82AD↑j
                                        ; sub_1409FA010+82F9↑j
                add     rbx, 30h ; '0'
                mov     rcx, [rbx]
                test    rcx, rcx
                jnz     loc_140A021F7
                mov     r14, [rbp+0BE0h+var_C60]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A02329:                          ; CODE XREF: sub_1409FA010+81D0↑j
                mov     rax, [rsi+100h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop

loc_140A02338:                          ; CODE XREF: sub_1409FA010+81C1↑j
                mov     rax, [rsi+3A8h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r14d, [rsp+0CE0h+var_C78]
                mov     eax, 8000h
                add     [rsi+828h], eax

loc_140A02357:                          ; CODE XREF: sub_1409FA010+7F6C↑j
                mov     rcx, [rsp+0CE0h+var_C88]
                test    rcx, rcx
                jz      short loc_140A0236D
                mov     rax, [rsi+1E0h]
                call    j__guard_dispatch_icall_nop

loc_140A0236D:                          ; CODE XREF: sub_1409FA010+834F↑j
                shl     r14d, 8
                add     [rsi+828h], r14d
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A0237D:                          ; CODE XREF: sub_1409FA010+6A10↑j
                test    [r13+2Ah], dl
                jz      short loc_140A023C1
                xor     r15d, r15d
                cmp     [rsi+980h], r15
                jz      loc_140A0244D
                mov     ecx, [rsi+994h]
                test    cl, 4
                jnz     loc_140A0244D
                cmp     [rsi+824h], r15d
                jnz     loc_140A02444
                mov     eax, ecx
                shl     eax, 3
                xor     eax, ecx
                and     eax, 20h
                xor     eax, ecx
                mov     [rsi+994h], eax

loc_140A023C1:                          ; CODE XREF: sub_1409FA010+8371↑j
                                        ; sub_1409FA010+8437↓j
                mov     r10, [r13+8]
                xor     r14d, r14d
                mov     r8d, [rsi+824h]
                mov     [rbp+0BE0h+var_C10], r10
                lea     rax, [r8+r8*2]
                lea     rcx, [r10+rax*4]
                mov     rax, 0AAAAAAAAAAAAAAABh
                lea     r11, [rcx+0Ch]
                mov     [rsp+0CE0h+var_C70], rcx
                mov     ecx, [r13+24h]
                mul     rcx
                mov     [rbp+0BE0h+var_C60], r11
                mov     r9, rdx
                shr     r9, 3
                mov     eax, r9d
                mov     [rbp+0BE0h+var_C48], r9
                lea     rcx, [rax+rax*2]
                lea     rax, [r10+rcx*4]
                mov     [rbp+0BE0h+var_C20], rax
                lea     rax, [r13+30h]
                lea     r15, [rax+r8]
                mov     [rsp+0CE0h+var_C88], r15
                lea     r10d, [r9-1]
                mov     dword ptr [rbp+0BE0h+arg_8], r10d
                test    r9d, r9d
                jz      short loc_140A02459
                mov     edx, r10d
                add     rdx, 7
                and     rdx, 0FFFFFFFFFFFFFFF8h
                add     rdx, rax
                mov     [rbp+0BE0h+var_C50], rdx
                jmp     short loc_140A02467
; ---------------------------------------------------------------------------

loc_140A02444:                          ; CODE XREF: sub_1409FA010+8399↑j
                test    cl, 20h
                jz      loc_140A023C1

loc_140A0244D:                          ; CODE XREF: sub_1409FA010+837D↑j
                                        ; sub_1409FA010+838C↑j ...
                mov     [rsi+824h], r15d
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A02459:                          ; CODE XREF: sub_1409FA010+841E↑j
                mov     rdx, rax
                mov     [rbp+0BE0h+var_C50], rax
                mov     dword ptr [rbp+0BE0h+arg_8], r10d

loc_140A02467:                          ; CODE XREF: sub_1409FA010+8432↑j
                movzx   eax, word ptr [r13+28h]
                lea     rcx, [rax+rax*2]
                lea     rax, [rdx+rcx*8]
                mov     [rsp+0CE0h+var_C68], rax
                test    r9d, r9d
                jz      loc_140A027AB
                cmp     r8d, r10d
                jnb     loc_140A027AB
                mov     rdi, [rsp+0CE0h+var_C70]

loc_140A02490:                          ; CODE XREF: sub_1409FA010+874F↓j
                cmp     [r15], r14b
                jl      loc_140A02738
                mov     eax, [rdi+4]
                mov     r9d, [r11]
                mov     r13d, eax
                sub     r9d, eax
                mov     rax, [rsp+0CE0h+var_C90]
                mov     r12d, r9d
                add     r13, [rax+18h]
                add     [rsi+828h], r9d
                mov     r10, r13
                mov     ebx, [rsi+814h]
                mov     rax, r13
                mov     r14, [rsi+818h]
                lea     rcx, [r9+r13]
                mov     [rsp+0CE0h+var_C70], r13
                cmp     r13, rcx
                jnb     short loc_140A024E9
                mov     edx, 40h ; '@'

loc_140A024DE:                          ; CODE XREF: sub_1409FA010+84D7↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A024DE

loc_140A024E9:                          ; CODE XREF: sub_1409FA010+84C7↑j
                mov     r11d, r9d
                mov     r8, r14
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A0256A
                mov     rsi, 7010008004002001h

loc_140A02502:                          ; CODE XREF: sub_1409FA010+854E↓j
                mov     edx, 8
                lea     r15d, [rdx-7]

loc_140A0250B:                          ; CODE XREF: sub_1409FA010+8517↓j
                mov     rax, [r10]
                mov     ecx, ebx
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r15
                jnz     short loc_140A0250B
                mov     rcx, r10
                sub     rcx, r13
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     ebx, edx
                mov     [rbp+0BE0h+var_628], rdx
                xor     ebx, eax
                mov     rax, r15
                and     ebx, 3Fh
                cmovz   ebx, eax
                mov     eax, 0FFFFFFFFh
                add     r11d, eax
                jnz     short loc_140A02502
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     r15, [rsp+0CE0h+var_C88]

loc_140A0256A:                          ; CODE XREF: sub_1409FA010+84E6↑j
                and     r9d, 7Fh
                mov     r11d, 1
                cmp     r9d, 8
                jb      short loc_140A02596
                mov     edx, r9d
                shr     rdx, 3

loc_140A02581:                          ; CODE XREF: sub_1409FA010+8584↓j
                xor     r8, [r10]
                mov     ecx, ebx
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r11
                jnz     short loc_140A02581

loc_140A02596:                          ; CODE XREF: sub_1409FA010+8568↑j
                xor     r14d, r14d
                test    r9d, r9d
                jz      short loc_140A025BB
                mov     r14d, 0FFFFFFFFh

loc_140A025A4:                          ; CODE XREF: sub_1409FA010+85A6↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, ebx
                xor     r8, rax
                add     r10, r11
                rol     r8, cl
                add     r9d, r14d
                jnz     short loc_140A025A4
                xor     r14d, r14d

loc_140A025BB:                          ; CODE XREF: sub_1409FA010+858C↑j
                mov     rax, r8
                jmp     short loc_140A025C3
; ---------------------------------------------------------------------------

loc_140A025C0:                          ; CODE XREF: sub_1409FA010+85BA↓j
                xor     r8b, al

loc_140A025C3:                          ; CODE XREF: sub_1409FA010+85AE↑j
                shr     rax, 7
                test    rax, rax
                jnz     short loc_140A025C0
                movzx   ecx, byte ptr [r15]
                mov     eax, ecx
                movzx   edx, r8b
                and     edx, 7Fh
                and     eax, 7Fh
                mov     [rbp+0BE0h+var_C58], edx
                cmp     edx, eax
                jz      loc_140A02720
                test    r12, r12
                jz      loc_140A026A3
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A026A3
                mov     r15, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     rbx, r13
                dec     r12
                and     rbx, 0FFFFFFFFFFFFF000h
                add     r13, r12
                or      r13, 0FFFh
                lea     r12, [rbx-1]

loc_140A0262C:                          ; CODE XREF: sub_1409FA010+866F↓j
                movzx   r14d, r15b

loc_140A02630:                          ; CODE XREF: sub_1409FA010+8659↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A0266B
                mov     eax, 1
                cmp     r15b, al
                ja      short loc_140A02671
                movzx   r14d, r15b
                mov     cr8, r14
                mov     al, [rbx]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_140A02630
; ---------------------------------------------------------------------------

loc_140A0266B:                          ; CODE XREF: sub_1409FA010+8636↑j
                xor     ecx, ecx
                test    eax, eax
                js      short loc_140A0268D

loc_140A02671:                          ; CODE XREF: sub_1409FA010+8640↑j
                mov     eax, 1000h
                add     rbx, rax
                add     r12, rax
                cmp     r12, r13
                jnz     short loc_140A0262C
                mov     cr8, r14
                xor     r14d, r14d
                jmp     loc_140A02720
; ---------------------------------------------------------------------------

loc_140A0268D:                          ; CODE XREF: sub_1409FA010+865F↑j
                mov     cr8, r14
                mov     rax, [rsp+0CE0h+var_C88]
                xor     r14d, r14d
                mov     edx, [rbp+0BE0h+var_C58]
                mov     r13, [rsp+0CE0h+var_C70]
                mov     cl, [rax]

loc_140A026A3:                          ; CODE XREF: sub_1409FA010+85DA↑j
                                        ; sub_1409FA010+85EF↑j
                movzx   eax, cl
                mov     ecx, [rsi+8F8h]
                and     eax, 7Fh
                test    ecx, ecx
                jnz     short loc_140A02720
                mov     ecx, edx
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     ecx, [rsi+8F8h]
                test    ecx, ecx
                jnz     short loc_140A02720
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], r13
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A02720:                          ; CODE XREF: sub_1409FA010+85D1↑j
                                        ; sub_1409FA010+8678↑j ...
                mov     r15, [rsp+0CE0h+var_C88]
                mov     eax, 40h ; '@'
                add     [rsi+828h], eax
                mov     r11, [rbp+0BE0h+var_C60]
                mov     r12, [rbp+0BE0h+var_C08]

loc_140A02738:                          ; CODE XREF: sub_1409FA010+8483↑j
                mov     eax, 0Ch
                inc     r15
                add     r11, rax
                mov     [rsp+0CE0h+var_C88], r15
                add     rdi, rax
                mov     [rbp+0BE0h+var_C60], r11
                cmp     r11, [rbp+0BE0h+var_C20]
                jnb     short loc_140A02765
                mov     eax, [r12]
                cmp     [rsi+828h], eax
                jl      loc_140A02490

loc_140A02765:                          ; CODE XREF: sub_1409FA010+8743↑j
                sub     rdi, [rbp+0BE0h+var_C10]
                mov     rax, 2AAAAAAAAAAAAAABh
                mov     r10d, dword ptr [rbp+0BE0h+arg_8]
                mov     r9, [rbp+0BE0h+var_C48]
                imul    rdi
                mov     rdi, 0FFFFFFFFB8797400h
                sar     rdx, 1
                mov     rax, rdx
                shr     rax, 3Fh
                add     rdx, rax
                mov     r8d, edx
                mov     [rsi+824h], edx
                mov     rdx, [rbp+0BE0h+var_C50]
                cmp     r8d, r10d
                jb      loc_1409FB318

loc_140A027AB:                          ; CODE XREF: sub_1409FA010+846C↑j
                                        ; sub_1409FA010+8475↑j
                mov     eax, [rsi+82Ch]
                xor     r15d, r15d
                cmp     [rsi+828h], eax
                jge     loc_1409FB31B
                test    r9d, r9d
                jz      short loc_140A027CB
                sub     r8d, r9d
                inc     r8d

loc_140A027CB:                          ; CODE XREF: sub_1409FA010+87B3↑j
                mov     eax, r8d
                lea     rcx, [rax+rax*2]
                lea     rcx, [rdx+rcx*8]
                mov     [rbp+0BE0h+var_C60], rcx

loc_140A027DA:                          ; CODE XREF: sub_1409FA010+8A4E↓j
                mov     rdi, [rsp+0CE0h+var_C90]
                lea     rdx, [rcx+8]
                mov     eax, 2
                mov     [rbp+0BE0h+arg_8], rdx
                mov     r12d, eax
                mov     [rsp+0CE0h+var_C88], rax
                lea     eax, [r12-1]
                lea     ecx, [rax+0Bh]

loc_140A027FF:                          ; CODE XREF: sub_1409FA010+8A18↓j
                cmp     [rdx], r15d
                jl      loc_140A02A16
                mov     eax, [rdx-8]
                mov     r8d, [rdx-4]
                mov     r13d, eax
                add     r13, [rdi+18h]
                sub     r8d, eax
                add     [rsi+828h], r8d
                mov     r9, r13
                mov     r10d, [rsi+814h]
                mov     rax, r13
                mov     r14, [rsi+818h]
                lea     rcx, [r8+r13]
                mov     r15d, r8d
                mov     [rbp+0BE0h+var_C50], r13
                mov     [rsp+0CE0h+var_C70], r15
                cmp     r13, rcx
                jnb     short loc_140A0285A
                mov     r11d, 40h ; '@'

loc_140A0284F:                          ; CODE XREF: sub_1409FA010+8848↓j
                prefetchnta byte ptr [rax]
                add     rax, r11
                cmp     rax, rcx
                jb      short loc_140A0284F

loc_140A0285A:                          ; CODE XREF: sub_1409FA010+8837↑j
                mov     r11d, r8d
                mov     rbx, r14
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A028E5
                mov     esi, 0FFFFFFFFh
                mov     r12d, 1
                mov     r15, 7010008004002001h

loc_140A0287E:                          ; CODE XREF: sub_1409FA010+88BD↓j
                mov     eax, 8

loc_140A02883:                          ; CODE XREF: sub_1409FA010+888A↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, r12
                jnz     short loc_140A02883
                mov     rcx, r9
                sub     rcx, r13
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     r10d, edx
                mov     [rbp+0BE0h+var_620], rdx
                xor     r10d, eax
                and     r10d, 3Fh
                cmovz   r10d, r12d
                add     r11d, esi
                jnz     short loc_140A0287E
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     r15, [rsp+0CE0h+var_C70]
                mov     rdx, [rbp+0BE0h+arg_8]
                mov     r12, [rsp+0CE0h+var_C88]

loc_140A028E5:                          ; CODE XREF: sub_1409FA010+8857↑j
                and     r8d, 7Fh
                mov     r14d, 1
                cmp     r8d, 8
                jb      short loc_140A02912
                mov     eax, r8d
                shr     rax, 3

loc_140A028FC:                          ; CODE XREF: sub_1409FA010+8900↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, r14
                jnz     short loc_140A028FC

loc_140A02912:                          ; CODE XREF: sub_1409FA010+88E3↑j
                test    r8d, r8d
                jz      short loc_140A02932
                mov     r11d, 0FFFFFFFFh

loc_140A0291D:                          ; CODE XREF: sub_1409FA010+8920↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, r14
                rol     rbx, cl
                add     r8d, r11d
                jnz     short loc_140A0291D

loc_140A02932:                          ; CODE XREF: sub_1409FA010+8905↑j
                mov     rax, rbx
                jmp     short loc_140A02939
; ---------------------------------------------------------------------------

loc_140A02937:                          ; CODE XREF: sub_1409FA010+8930↓j
                xor     ebx, eax

loc_140A02939:                          ; CODE XREF: sub_1409FA010+8925↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A02937
                mov     ecx, [rdx]
                btr     ebx, 1Fh
                mov     eax, ecx
                btr     eax, 1Fh
                cmp     ebx, eax
                jz      loc_140A02A0B
                test    r15, r15
                jz      loc_140A02A7F
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A02A7F
                mov     r12, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, r13
                lea     rax, [r13-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, r15
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     r13, [r14-1]

loc_140A029A0:                          ; CODE XREF: sub_1409FA010+89E9↓j
                movzx   r15d, r12b

loc_140A029A4:                          ; CODE XREF: sub_1409FA010+89CE↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A029E0
                mov     eax, 1
                cmp     r12b, al
                ja      short loc_140A029E8
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_140A029A4
; ---------------------------------------------------------------------------

loc_140A029E0:                          ; CODE XREF: sub_1409FA010+89AA↑j
                test    eax, eax
                js      loc_140A02A69

loc_140A029E8:                          ; CODE XREF: sub_1409FA010+89B4↑j
                mov     r11d, 1000h
                add     r14, r11
                add     r13, r11
                cmp     r13, [rsp+0CE0h+var_C70]
                jnz     short loc_140A029A0
                mov     cr8, r15
                mov     rdx, [rbp+0BE0h+arg_8]
                mov     r12, [rsp+0CE0h+var_C88]

loc_140A02A0B:                          ; CODE XREF: sub_1409FA010+8940↑j
                xor     r15d, r15d

loc_140A02A0E:                          ; CODE XREF: sub_1409FA010+8A80↓j
                                        ; sub_1409FA010+8A9E↓j ...
                mov     ecx, 0Ch
                lea     eax, [rcx-0Bh]

loc_140A02A16:                          ; CODE XREF: sub_1409FA010+87F2↑j
                add     rdx, rcx
                sub     r12, rax
                mov     [rbp+0BE0h+arg_8], rdx
                mov     [rsp+0CE0h+var_C88], r12
                jnz     loc_140A027FF
                mov     rcx, [rbp+0BE0h+var_C60]
                mov     rdi, 0FFFFFFFFB8797400h
                add     [rsi+824h], eax
                add     rcx, 18h
                mov     [rbp+0BE0h+var_C60], rcx
                cmp     rcx, [rsp+0CE0h+var_C68]
                jz      loc_140A0244D
                mov     eax, [rsi+82Ch]
                cmp     [rsi+828h], eax
                jl      loc_140A027DA
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A02A69:                          ; CODE XREF: sub_1409FA010+89D2↑j
                mov     cr8, r15
                mov     rdx, [rbp+0BE0h+arg_8]
                mov     r13, [rbp+0BE0h+var_C50]
                mov     r12, [rsp+0CE0h+var_C88]
                mov     ecx, [rdx]

loc_140A02A7F:                          ; CODE XREF: sub_1409FA010+8949↑j
                                        ; sub_1409FA010+895E↑j
                mov     eax, ecx
                xor     r15d, r15d
                mov     ecx, [rsi+8F8h]
                btr     eax, 1Fh
                test    ecx, ecx
                jnz     loc_140A02A0E
                mov     ecx, ebx
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     ecx, [rsi+8F8h]
                test    ecx, ecx
                jnz     loc_140A02A0E
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rdi
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rdi]
                mov     [rsi+910h], rax
                lea     eax, [rcx+1]
                mov     [rsi+918h], r13
                mov     rcx, rsi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                mov     rdx, [rbp+0BE0h+arg_8]
                jmp     loc_140A02A0E
; ---------------------------------------------------------------------------

loc_140A02B0C:                          ; CODE XREF: sub_1409FA010+6A07↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A02B49
                mov     r11d, 40h ; '@'

loc_140A02B3E:                          ; CODE XREF: sub_1409FA010+8B37↓j
                prefetchnta byte ptr [rax]
                add     rax, r11
                cmp     rax, rcx
                jb      short loc_140A02B3E

loc_140A02B49:                          ; CODE XREF: sub_1409FA010+8B26↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     r12d, 0FFFFFFFFh
                test    r11d, r11d
                jz      short loc_140A02BCA
                mov     rdi, 7010008004002001h

loc_140A02B68:                          ; CODE XREF: sub_1409FA010+8BAC↓j
                mov     eax, 8

loc_140A02B6D:                          ; CODE XREF: sub_1409FA010+8B74↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_140A02B6D
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, eax
                mov     [rbp+0BE0h+var_618], rdx
                xor     r10d, edx
                mov     edx, 1
                and     r10d, 3Fh
                cmovz   r10d, edx
                add     r11d, r12d
                jnz     short loc_140A02B68
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A02BCA:                          ; CODE XREF: sub_1409FA010+8B4C↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A02BF1
                mov     eax, r8d
                shr     rax, 3

loc_140A02BDB:                          ; CODE XREF: sub_1409FA010+8BDF↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A02BDB

loc_140A02BF1:                          ; CODE XREF: sub_1409FA010+8BC2↑j
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A02C0E

loc_140A02BF9:                          ; CODE XREF: sub_1409FA010+8BFC↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_140A02BF9

loc_140A02C0E:                          ; CODE XREF: sub_1409FA010+8BE7↑j
                mov     rax, rbx
                jmp     short loc_140A02C15
; ---------------------------------------------------------------------------

loc_140A02C13:                          ; CODE XREF: sub_1409FA010+8C0C↓j
                xor     ebx, eax

loc_140A02C15:                          ; CODE XREF: sub_1409FA010+8C01↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A02C13
                btr     ebx, 1Fh
                mov     r12d, r15d
                cmp     ebx, [r13+14h]
                jz      loc_140A02D14
                cmp     [r13+0], r15d
                jnz     short loc_140A02C3D
                cmp     [r13+18h], r15d
                cmovnz  r12d, edx

loc_140A02C3D:                          ; CODE XREF: sub_1409FA010+8C23↑j
                mov     ecx, [r13+10h]
                mov     rdx, [r13+8]
                test    rcx, rcx
                jz      loc_140A02ED4
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A02ED4
                mov     r13, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     rax, [r14-1]
                mov     [rbp+0BE0h+arg_8], rax

loc_140A02C96:                          ; CODE XREF: sub_1409FA010+8CF6↓j
                movzx   r15d, r13b

loc_140A02C9A:                          ; CODE XREF: sub_1409FA010+8CCD↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A02CDF
                test    r12d, r12d
                jnz     loc_140A02EC8
                lea     eax, [r12+1]
                cmp     r13b, al
                ja      short loc_140A02CE7
                movzx   r15d, r13b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r12+2]
                mov     cr8, rax
                jmp     short loc_140A02C9A
; ---------------------------------------------------------------------------

loc_140A02CDF:                          ; CODE XREF: sub_1409FA010+8CA0↑j
                test    eax, eax
                js      loc_140A02EC8

loc_140A02CE7:                          ; CODE XREF: sub_1409FA010+8CB3↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     r11d, 1000h
                add     rax, r11
                add     r14, r11
                mov     [rbp+0BE0h+arg_8], rax
                cmp     rax, [rsp+0CE0h+var_C70]
                jnz     short loc_140A02C96
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]
                xor     r15d, r15d

loc_140A02D14:                          ; CODE XREF: sub_1409FA010+8C19↑j
                mov     r14d, 1

loc_140A02D1A:                          ; CODE XREF: sub_1409FA010+8EF4↓j
                                        ; sub_1409FA010+8F45↓j
                mov     eax, [r13+10h]
                mov     r12, [r13+8]
                shr     eax, 4
                mov     [rbp+0BE0h+arg_8], r12
                test    eax, eax
                jz      loc_1409FB31B
                mov     edi, eax
                mov     [rsp+0CE0h+var_C88], rdi

loc_140A02D3B:                          ; CODE XREF: sub_1409FA010+8EAD↓j
                mov     rax, [r12]
                lea     rdx, [rbp+0BE0h+var_988]
                mov     rbx, r13
                mov     r13d, r14d
                mov     r15, [rax]
                xor     eax, eax
                mov     [rbp+0BE0h+var_988], rax
                mov     rcx, r15
                mov     rax, [rsi+310h]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jz      loc_140A02E9F
                mov     edi, 6
                xor     r12d, r12d

loc_140A02D7B:                          ; CODE XREF: sub_1409FA010+8E7D↓j
                mov     rax, [rsi+208h]
                lea     rdx, [rbp+0BE0h+var_610]
                mov     rcx, r14
                inc     r13d
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     loc_140A02E71
                test    dword ptr [rsi+990h], 40000000h
                lea     r9d, [rax+1]
                jz      short loc_140A02DF3
                mov     rcx, [rsi+0A80h]
                lea     edx, [rax+30h]
                mov     r8, rdi

loc_140A02DBA:                          ; CODE XREF: sub_1409FA010+8DBE↓j
                mov     rax, [rbx]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     rbx, 8
                add     rcx, 8
                sub     r8, r9
                jnz     short loc_140A02DBA
                test    edx, edx
                jz      short loc_140A02DEC
                mov     r12d, 0FFFFFFFFh

loc_140A02DDA:                          ; CODE XREF: sub_1409FA010+8DD7↓j
                mov     al, [rbx]
                add     rbx, r9
                mov     [rcx], al
                add     rcx, r9
                add     edx, r12d
                jnz     short loc_140A02DDA
                xor     r12d, r12d

loc_140A02DEC:                          ; CODE XREF: sub_1409FA010+8DC2↑j
                mov     rbx, [rsi+0A80h]

loc_140A02DF3:                          ; CODE XREF: sub_1409FA010+8D9B↑j
                mov     [rbx+18h], r14
                mov     [rbx+20h], r15
                mov     rax, [rsi+590h]
                mov     [rax], rbx
                mov     dword ptr [rax+10h], 30h ; '0'
                mov     rax, [rsi+590h]
                mov     [rax+8], r14
                mov     dword ptr [rax+14h], 1000h
                cmp     [rsi+8F8h], r12d
                jnz     short loc_140A02E71
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rbx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rbx]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r9d
                call    sub_140A113CC

loc_140A02E71:                          ; CODE XREF: sub_1409FA010+8D87↑j
                                        ; sub_1409FA010+8E15↑j
                mov     rax, [rsi+310h]
                lea     rdx, [rbp+0BE0h+var_988]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jnz     loc_140A02D7B
                mov     r12, [rbp+0BE0h+arg_8]
                mov     rdi, [rsp+0CE0h+var_C88]

loc_140A02E9F:                          ; CODE XREF: sub_1409FA010+8D5D↑j
                mov     r13, [rsp+0CE0h+var_C90]
                add     r12, 10h
                mov     r14d, 1
                mov     [rbp+0BE0h+arg_8], r12
                sub     rdi, r14
                mov     [rsp+0CE0h+var_C88], rdi
                jnz     loc_140A02D3B
                jmp     loc_1409FB47D
; ---------------------------------------------------------------------------

loc_140A02EC8:                          ; CODE XREF: sub_1409FA010+8CA5↑j
                                        ; sub_1409FA010+8CD1↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]
                xor     r15d, r15d

loc_140A02ED4:                          ; CODE XREF: sub_1409FA010+8C38↑j
                                        ; sub_1409FA010+8C4D↑j
                mov     eax, [rsi+8F8h]
                mov     edx, [r13+14h]
                test    eax, eax
                jnz     short loc_140A02EF8
                mov     rax, [rsi+590h]
                mov     ecx, ebx
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A02EF8:                          ; CODE XREF: sub_1409FA010+8ED0↑j
                mov     rcx, [r13+8]
                mov     r14d, 1
                test    eax, eax
                jnz     loc_140A02D1A
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], r14d
                call    sub_140A113CC
                jmp     loc_140A02D1A
; ---------------------------------------------------------------------------

loc_140A02F5A:                          ; CODE XREF: sub_1409FA010+69FB↑j
                mov     eax, [rsi+994h]
                mov     ecx, 2
                test    cl, al
                jnz     loc_1409FB318
                mov     rax, [rsi+428h]
                call    j__guard_dispatch_icall_nop
                xor     r15d, r15d
                test    al, al
                jz      loc_1409FB31B
                cmp     [rsi+8F8h], r15d
                jnz     loc_1409FB31B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], r15
                jmp     loc_1409FB6E7
; ---------------------------------------------------------------------------

loc_140A02FD0:                          ; CODE XREF: sub_1409FA010+69F5↑j
                cmp     r10d, 26h ; '&'
                jz      loc_140A065C9
                jle     loc_140A05767
                cmp     r10d, 2Ah ; '*'
                jle     loc_140A0561F
                cmp     r10d, 2Bh ; '+'
                jz      loc_140A04543
                cmp     r10d, 2Ch ; ','
                jz      loc_140A03988
                cmp     r10d, 2Eh ; '.'
                jz      loc_140A03892
                cmp     r10d, 2Fh ; '/'
                jz      loc_140A03686
                cmp     r10d, 30h ; '0'
                jnz     loc_140A05767
                xor     r15d, r15d
                cmp     [r13+10h], r15d
                jz      loc_1409FB31B
                test    dword ptr [rsi+994h], 4000h
                jz      short loc_140A03054
                mov     rcx, [rsi+4E0h]

loc_140A0303C:                          ; CODE XREF: sub_1409FA010+9042↓j
                cli
                mov     eax, [rsi+990h]
                shr     eax, 0Ah
                and     eax, 1Fh
                lock bts [rcx], eax
                jnb     short loc_140A03054
                sti
                pause
                jmp     short loc_140A0303C
; ---------------------------------------------------------------------------

loc_140A03054:                          ; CODE XREF: sub_1409FA010+9023↑j
                                        ; sub_1409FA010+903D↑j
                mov     eax, [r13+18h]
                test    dl, al
                jnz     loc_140A032F3
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A0309D
                mov     r11d, 40h ; '@'

loc_140A03092:                          ; CODE XREF: sub_1409FA010+908B↓j
                prefetchnta byte ptr [rax]
                add     rax, r11
                cmp     rax, rcx
                jb      short loc_140A03092

loc_140A0309D:                          ; CODE XREF: sub_1409FA010+907A↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     r12d, 0FFFFFFFFh
                test    r11d, r11d
                jz      short loc_140A0311E
                mov     rdi, 7010008004002001h

loc_140A030BC:                          ; CODE XREF: sub_1409FA010+9100↓j
                mov     eax, 8

loc_140A030C1:                          ; CODE XREF: sub_1409FA010+90C8↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_140A030C1
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, eax
                mov     [rbp+0BE0h+var_608], rdx
                xor     r10d, edx
                mov     edx, 1
                and     r10d, 3Fh
                cmovz   r10d, edx
                add     r11d, r12d
                jnz     short loc_140A030BC
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0311E:                          ; CODE XREF: sub_1409FA010+90A0↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A03145
                mov     eax, r8d
                shr     rax, 3

loc_140A0312F:                          ; CODE XREF: sub_1409FA010+9133↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A0312F

loc_140A03145:                          ; CODE XREF: sub_1409FA010+9116↑j
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A03162

loc_140A0314D:                          ; CODE XREF: sub_1409FA010+9150↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_140A0314D

loc_140A03162:                          ; CODE XREF: sub_1409FA010+913B↑j
                mov     rax, rbx
                jmp     short loc_140A03169
; ---------------------------------------------------------------------------

loc_140A03167:                          ; CODE XREF: sub_1409FA010+9160↓j
                xor     ebx, eax

loc_140A03169:                          ; CODE XREF: sub_1409FA010+9155↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A03167
                mov     r8, [rsp+0CE0h+var_C90]
                btr     ebx, 1Fh
                mov     r13d, r15d
                cmp     ebx, [r8+14h]
                jz      loc_140A0364C
                cmp     [r8], r15d
                jnz     short loc_140A03195
                cmp     [r8+18h], r15d
                cmovnz  r13d, edx

loc_140A03195:                          ; CODE XREF: sub_1409FA010+917B↑j
                mov     ecx, [r8+10h]
                mov     rdx, [r8+8]
                test    rcx, rcx
                jz      loc_140A0326E
                mov     eax, [rsi+994h]
                mov     r9d, 40h ; '@'
                test    r9b, al
                jz      loc_140A0326E
                mov     r12, cr8
                lea     eax, [r9-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     rax, [r14-1]
                mov     [rbp+0BE0h+arg_8], rax

loc_140A031EE:                          ; CODE XREF: sub_1409FA010+9244↓j
                movzx   r15d, r12b

loc_140A031F2:                          ; CODE XREF: sub_1409FA010+921F↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A03231
                test    r13d, r13d
                jnz     short loc_140A03262
                lea     eax, [r13+1]
                cmp     r12b, al
                ja      short loc_140A03235
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r13+2]
                mov     cr8, rax
                jmp     short loc_140A031F2
; ---------------------------------------------------------------------------

loc_140A03231:                          ; CODE XREF: sub_1409FA010+91F8↑j
                test    eax, eax
                js      short loc_140A03262

loc_140A03235:                          ; CODE XREF: sub_1409FA010+9206↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     r11d, 1000h
                add     rax, r11
                add     r14, r11
                mov     [rbp+0BE0h+arg_8], rax
                cmp     rax, [rsp+0CE0h+var_C70]
                jnz     short loc_140A031EE

loc_140A03256:                          ; CODE XREF: sub_1409FA010+95C4↓j
                mov     cr8, r15
                xor     r15d, r15d
                jmp     loc_140A0364C
; ---------------------------------------------------------------------------

loc_140A03262:                          ; CODE XREF: sub_1409FA010+91FD↑j
                                        ; sub_1409FA010+9223↑j
                mov     cr8, r15
                mov     r8, [rsp+0CE0h+var_C90]
                xor     r15d, r15d

loc_140A0326E:                          ; CODE XREF: sub_1409FA010+9190↑j
                                        ; sub_1409FA010+91A5↑j
                mov     eax, [rsi+8F8h]
                mov     edx, [r8+14h]
                test    eax, eax
                jnz     short loc_140A03292
                mov     rax, [rsi+590h]
                mov     ecx, ebx
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A03292:                          ; CODE XREF: sub_1409FA010+926A↑j
                mov     rcx, [r8+8]
                test    eax, eax
                jnz     loc_140A0364C
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r8
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r8]

loc_140A032C9:                          ; CODE XREF: sub_1409FA010+9630↓j
                mov     [rsi+910h], rax
                mov     r12d, 1
                mov     [rsi+918h], rcx
                xor     edx, edx
                mov     rcx, rsi
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC
                jmp     loc_140A03652
; ---------------------------------------------------------------------------

loc_140A032F3:                          ; CODE XREF: sub_1409FA010+904A↑j
                cmp     [rsi+980h], r15
                jz      loc_140A03645
                mov     edx, [rsi+994h]
                mov     ecx, edx
                cmp     [rsi+824h], r15d
                jnz     short loc_140A03323
                shl     ecx, 3
                xor     ecx, edx
                and     ecx, 20h
                xor     ecx, edx
                mov     [rsi+994h], ecx
                jmp     short loc_140A03332
; ---------------------------------------------------------------------------

loc_140A03323:                          ; CODE XREF: sub_1409FA010+92FF↑j
                mov     eax, edx
                shr     eax, 3
                xor     eax, edx
                test    al, 4
                jnz     loc_140A03645

loc_140A03332:                          ; CODE XREF: sub_1409FA010+9311↑j
                test    cl, 4
                jz      loc_140A033FE
                mov     ecx, [r13+8]
                mov     r14d, [r13+10h]
                and     ecx, 0FFFh
                mov     rbx, [r13+8]
                add     r14, 0FFFh
                add     r14, rcx
                and     rbx, 0FFFFFFFFFFFFF000h
                shr     r14, 0Ch
                test    r14, r14
                jz      loc_140A0364C
                mov     rdi, 0B3B74BDEE4453415h
                mov     r12d, 1

loc_140A0337B:                          ; CODE XREF: sub_1409FA010+93E0↓j
                mov     rax, [rsi+2B0h]
                mov     rcx, rbx
                sub     r14, r12
                call    j__guard_dispatch_icall_nop
                test    al, al
                jz      short loc_140A033DC
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A033DC
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                lea     rax, [rdi+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_140A033DC:                          ; CODE XREF: sub_1409FA010+937F↑j
                                        ; sub_1409FA010+9388↑j
                add     dword ptr [rsi+828h], 100h
                add     rbx, 1000h
                test    r14, r14
                jnz     short loc_140A0337B
                mov     rdi, 0FFFFFFFFB8797400h
                jmp     loc_140A03652
; ---------------------------------------------------------------------------

loc_140A033FE:                          ; CODE XREF: sub_1409FA010+9325↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A0343A
                mov     edx, 40h ; '@'

loc_140A0342F:                          ; CODE XREF: sub_1409FA010+9428↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A0342F

loc_140A0343A:                          ; CODE XREF: sub_1409FA010+9418↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     r12d, 1
                test    r11d, r11d
                jz      short loc_140A034BD
                mov     rdi, 7010008004002001h

loc_140A03459:                          ; CODE XREF: sub_1409FA010+949D↓j
                mov     eax, 8

loc_140A0345E:                          ; CODE XREF: sub_1409FA010+9465↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, r12
                jnz     short loc_140A0345E
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, eax
                mov     [rbp+0BE0h+var_600], rdx
                xor     r10d, edx
                mov     edx, 0FFFFFFFFh
                and     r10d, 3Fh
                cmovz   r10d, r12d
                add     r11d, edx
                jnz     short loc_140A03459
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h
                jmp     short loc_140A034C2
; ---------------------------------------------------------------------------

loc_140A034BD:                          ; CODE XREF: sub_1409FA010+943D↑j
                mov     edx, 0FFFFFFFFh

loc_140A034C2:                          ; CODE XREF: sub_1409FA010+94AB↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A034E9
                mov     eax, r8d
                shr     rax, 3

loc_140A034D3:                          ; CODE XREF: sub_1409FA010+94D7↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, r12
                jnz     short loc_140A034D3

loc_140A034E9:                          ; CODE XREF: sub_1409FA010+94BA↑j
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A03506

loc_140A034F1:                          ; CODE XREF: sub_1409FA010+94F4↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, r12
                rol     rbx, cl
                add     r8d, edx
                jnz     short loc_140A034F1

loc_140A03506:                          ; CODE XREF: sub_1409FA010+94DF↑j
                mov     rax, rbx
                jmp     short loc_140A0350D
; ---------------------------------------------------------------------------

loc_140A0350B:                          ; CODE XREF: sub_1409FA010+9504↓j
                xor     ebx, eax

loc_140A0350D:                          ; CODE XREF: sub_1409FA010+94F9↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0350B
                mov     r8d, [r13+14h]
                btr     ebx, 1Fh
                cmp     ebx, r8d
                jz      loc_140A0364C
                mov     ecx, [r13+10h]
                mov     rdx, [r13+8]
                test    rcx, rcx
                jz      loc_140A035E9
                mov     eax, [rsi+994h]
                mov     r9d, 40h ; '@'
                test    r9b, al
                jz      loc_140A035E9
                mov     r12, cr8
                lea     eax, [r9-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rbp+0BE0h+arg_8], rax
                lea     r13, [r14-1]

loc_140A0357B:                          ; CODE XREF: sub_1409FA010+95C2↓j
                movzx   r15d, r12b

loc_140A0357F:                          ; CODE XREF: sub_1409FA010+95A9↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A035BB
                mov     eax, 1
                cmp     r12b, al
                ja      short loc_140A035BF
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_140A0357F
; ---------------------------------------------------------------------------

loc_140A035BB:                          ; CODE XREF: sub_1409FA010+9585↑j
                test    eax, eax
                js      short loc_140A035D9

loc_140A035BF:                          ; CODE XREF: sub_1409FA010+958F↑j
                mov     r11d, 1000h
                add     r14, r11
                add     r13, r11
                cmp     r13, [rbp+0BE0h+arg_8]
                jnz     short loc_140A0357B
                jmp     loc_140A03256
; ---------------------------------------------------------------------------

loc_140A035D9:                          ; CODE XREF: sub_1409FA010+95AD↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]
                xor     r15d, r15d
                mov     r8d, [r13+14h]

loc_140A035E9:                          ; CODE XREF: sub_1409FA010+9522↑j
                                        ; sub_1409FA010+9537↑j
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A0360C
                mov     eax, r8d
                mov     ecx, ebx
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A0360C:                          ; CODE XREF: sub_1409FA010+95E1↑j
                mov     rcx, [r13+8]
                test    eax, eax
                jnz     short loc_140A0364C
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                jmp     loc_140A032C9
; ---------------------------------------------------------------------------

loc_140A03645:                          ; CODE XREF: sub_1409FA010+92EA↑j
                                        ; sub_1409FA010+931C↑j
                mov     [rsi+824h], r15d

loc_140A0364C:                          ; CODE XREF: sub_1409FA010+9172↑j
                                        ; sub_1409FA010+924D↑j ...
                mov     r12d, 1

loc_140A03652:                          ; CODE XREF: sub_1409FA010+92DE↑j
                                        ; sub_1409FA010+93E9↑j
                test    dword ptr [rsi+994h], 4000h
                jz      loc_1409FB31B
                mov     ecx, [rsi+990h]
                mov     edx, r12d
                mov     r8, [rsi+4E0h]
                shr     ecx, 0Ah
                and     ecx, 1Fh
                shl     edx, cl
                not     edx
                lock and [r8], edx
                sti
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A03686:                          ; CODE XREF: sub_1409FA010+8FFC↑j
                mov     rcx, gs:20h
                mov     rax, [rsi+648h]
                mov     rcx, [rax+rcx]
                mov     rax, [rsi+688h]
                add     rcx, [rsi+6A8h]
                mov     rcx, [rcx+rax]
                mov     [rbp+0BE0h+var_BC0], rcx
                mov     rax, [rsi+490h]
                call    j__guard_dispatch_icall_nop
                mov     r9d, 0FFFFFFFFh
                xor     r15d, r15d
                mov     r14, rax
                cmp     rax, r9
                jnz     loc_140A03802
                mov     [rbp+0BE0h+var_BC0], r15
                mov     rcx, [rsi+988h]
                test    rcx, rcx
                jz      short loc_140A03704
                mov     rax, [rsi+480h]
                lea     rdx, [rbp+0BE0h+var_BC0]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rbp+0BE0h+var_BC0]
                test    eax, eax
                cmovs   rcx, r15
                mov     [rbp+0BE0h+var_BC0], rcx
                test    rcx, rcx
                jnz     short loc_140A03716

loc_140A03704:                          ; CODE XREF: sub_1409FA010+96CF↑j
                mov     rax, [rsi+3C0h]
                xor     ecx, ecx
                call    j__guard_dispatch_icall_nop
                mov     [rbp+0BE0h+var_BC0], rax

loc_140A03716:                          ; CODE XREF: sub_1409FA010+96F2↑j
                mov     [rsi+988h], r15
                mov     ebx, r15d
                mov     rcx, [rbp+0BE0h+var_BC0]
                test    rcx, rcx
                jz      loc_140A037F4
                mov     r12d, 1

loc_140A03733:                          ; CODE XREF: sub_1409FA010+97AD↓j
                mov     rax, [rsi+3A0h]
                add     ebx, r12d
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                js      short loc_140A037A1
                mov     rax, [rsi+438h]
                lea     rdx, [rbp+0BE0h+var_70]
                mov     rcx, [rbp+0BE0h+var_BC0]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+490h]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                lea     rcx, [rbp+0BE0h+var_70]
                mov     rax, [rsi+440h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+3A8h]
                mov     rcx, [rbp+0BE0h+var_BC0]
                call    j__guard_dispatch_icall_nop
                mov     eax, 0FFFFFFFFh
                cmp     r14, rax
                jnz     short loc_140A037C2
                cmp     ebx, 100h
                ja      short loc_140A037C2

loc_140A037A1:                          ; CODE XREF: sub_1409FA010+9734↑j
                mov     rax, [rsi+3C0h]
                mov     rcx, [rbp+0BE0h+var_BC0]
                call    j__guard_dispatch_icall_nop
                mov     [rbp+0BE0h+var_BC0], rax
                mov     rcx, rax
                test    rax, rax
                jz      short loc_140A037F4
                jmp     loc_140A03733
; ---------------------------------------------------------------------------

loc_140A037C2:                          ; CODE XREF: sub_1409FA010+9787↑j
                                        ; sub_1409FA010+978F↑j
                mov     rax, [rsi+488h]
                mov     rcx, [rbp+0BE0h+var_BC0]
                call    j__guard_dispatch_icall_nop
                mov     [rsi+988h], rax
                mov     rax, [rsi+1E0h]
                mov     rcx, [rbp+0BE0h+var_BC0]
                call    j__guard_dispatch_icall_nop
                mov     r9d, 0FFFFFFFFh
                cmp     r14, r9
                jnz     short loc_140A03808

loc_140A037F4:                          ; CODE XREF: sub_1409FA010+9717↑j
                                        ; sub_1409FA010+97AB↑j
                shl     ebx, 0Ch
                add     [rsi+828h], ebx
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A03802:                          ; CODE XREF: sub_1409FA010+96BB↑j
                mov     r12d, 1

loc_140A03808:                          ; CODE XREF: sub_1409FA010+97E2↑j
                test    dword ptr [rsi+990h], 40000000h
                jz      short loc_140A03857
                mov     rcx, [rsi+0A80h]
                mov     edx, 30h ; '0'
                lea     r8d, [rdx-2Ah]

loc_140A03824:                          ; CODE XREF: sub_1409FA010+9829↓j
                mov     rax, [r13+0]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r13, 8
                add     rcx, 8
                sub     r8, r12
                jnz     short loc_140A03824
                test    edx, edx
                jz      short loc_140A03850

loc_140A0383F:                          ; CODE XREF: sub_1409FA010+983E↓j
                mov     al, [r13+0]
                add     r13, r12
                mov     [rcx], al
                add     rcx, r12
                add     edx, r9d
                jnz     short loc_140A0383F

loc_140A03850:                          ; CODE XREF: sub_1409FA010+982D↑j
                mov     r13, [rsi+0A80h]

loc_140A03857:                          ; CODE XREF: sub_1409FA010+9802↑j
                mov     [r13+18h], r14
                mov     rcx, [rbp+0BE0h+var_BC0]
                cmp     [rsi+8F8h], r15d

loc_140A03866:                          ; CODE XREF: sub_1409FA010+B752↓j
                jnz     loc_1409FB31B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                jmp     loc_140A011E4
; ---------------------------------------------------------------------------

loc_140A03892:                          ; CODE XREF: sub_1409FA010+8FF2↑j
                mov     eax, [rsi+830h]
                test    dl, al
                jnz     loc_1409FB318
                mov     r15, [rsi+548h]
                xor     eax, eax
                mov     r14d, eax
                mov     rax, [rsi+178h]
                call    j__guard_dispatch_icall_nop
                test    dword ptr [rsi+990h], 40000000h
                jnz     short loc_140A038DC
                mov     ecx, [rsi+950h]
                cmp     ecx, 7
                jnb     short loc_140A038DC
                mov     r12d, 1
                mov     ebx, r12d
                shl     bl, cl
                jmp     short loc_140A038F9
; ---------------------------------------------------------------------------

loc_140A038DC:                          ; CODE XREF: sub_1409FA010+98B2↑j
                                        ; sub_1409FA010+98BD↑j
                mov     rax, [rsi+128h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop
                mov     bl, 80h
                mov     r12d, 1

loc_140A038F9:                          ; CODE XREF: sub_1409FA010+98CA↑j
                mov     rax, [rsi+138h]
                xor     edx, edx
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                cmp     bl, 80h
                jz      short loc_140A03942
                mov     r8, [rsi+520h]
                mov     rdx, [r8]
                cmp     rdx, r8
                jz      short loc_140A03957
                not     bl

loc_140A03920:                          ; CODE XREF: sub_1409FA010+992E↓j
                mov     rax, [rsi+6B8h]
                mov     rcx, rdx
                sub     rcx, [rsi+6D0h]
                lock and [rcx+rax], bl
                mov     rdx, [rdx]
                add     r14d, r12d
                cmp     rdx, r8
                jnz     short loc_140A03920
                jmp     short loc_140A03957
; ---------------------------------------------------------------------------

loc_140A03942:                          ; CODE XREF: sub_1409FA010+98FD↑j
                mov     rax, [rsi+130h]
                xor     edx, edx
                mov     rcx, [rsi+0A00h]
                call    j__guard_dispatch_icall_nop

loc_140A03957:                          ; CODE XREF: sub_1409FA010+990C↑j
                                        ; sub_1409FA010+9930↑j
                mov     rcx, [rsi+548h]
                xor     edx, edx
                mov     rax, [rsi+140h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+180h]
                call    j__guard_dispatch_icall_nop
                shl     r14d, 7
                add     [rsi+828h], r14d
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_140A03988:                          ; CODE XREF: sub_1409FA010+8FE8↑j
                mov     ecx, [r13+20h]
                mov     edx, 2
                xor     r15d, r15d
                mov     [rbp+0BE0h+var_C48], rsi
                test    dl, cl
                jz      loc_140A03E1A
                cmp     [rsi+980h], r15
                jz      loc_140A0244D
                mov     eax, [rsi+994h]
                test    al, 4
                jnz     loc_140A0244D
                test    dl, cl
                jz      loc_140A03E1A
                mov     edx, eax
                mov     ecx, eax
                cmp     [rsi+824h], r15d
                jnz     short loc_140A039E2
                shl     ecx, 3
                xor     ecx, eax
                and     ecx, 20h
                xor     ecx, eax
                mov     [rsi+994h], ecx
                jmp     short loc_140A039F1
; ---------------------------------------------------------------------------

loc_140A039E2:                          ; CODE XREF: sub_1409FA010+99BE↑j
                mov     eax, edx
                shr     eax, 3
                xor     eax, edx
                test    al, 4
                jnz     loc_140A0244D

loc_140A039F1:                          ; CODE XREF: sub_1409FA010+99D0↑j
                cmp     [rsi+980h], r15
                jz      loc_140A03E0E
                mov     edx, ecx
                cmp     [rsi+824h], r15d
                jnz     short loc_140A03A1B
                shl     edx, 3
                xor     edx, ecx
                and     edx, 20h
                xor     edx, ecx
                mov     [rsi+994h], edx
                jmp     short loc_140A03A2A
; ---------------------------------------------------------------------------

loc_140A03A1B:                          ; CODE XREF: sub_1409FA010+99F7↑j
                mov     eax, ecx
                shr     eax, 3
                xor     eax, ecx
                test    al, 4
                jnz     loc_140A03E0E

loc_140A03A2A:                          ; CODE XREF: sub_1409FA010+9A09↑j
                test    dl, 4
                jz      loc_140A03AF7
                mov     r14d, [r13+8]
                mov     ecx, [r13+10h]
                and     r14d, 0FFFh
                mov     rbx, [r13+8]
                add     r14, 0FFFh
                add     r14, rcx
                and     rbx, 0FFFFFFFFFFFFF000h
                shr     r14, 0Ch
                test    r14, r14
                jz      loc_140A03CE4
                mov     rdi, 0B3B74BDEE4453415h
                mov     r12d, 1

loc_140A03A74:                          ; CODE XREF: sub_1409FA010+9AD9↓j
                mov     rax, [rsi+2B0h]
                mov     rcx, rbx
                sub     r14, r12
                call    j__guard_dispatch_icall_nop
                test    al, al
                jz      short loc_140A03AD5
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A03AD5
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                lea     rax, [rdi+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_140A03AD5:                          ; CODE XREF: sub_1409FA010+9A78↑j
                                        ; sub_1409FA010+9A81↑j
                add     dword ptr [rsi+828h], 100h
                add     rbx, 1000h
                test    r14, r14
                jnz     short loc_140A03A74
                mov     rdi, 0FFFFFFFFB8797400h
                jmp     loc_140A03CE4
; ---------------------------------------------------------------------------

loc_140A03AF7:                          ; CODE XREF: sub_1409FA010+9A1D↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r11d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A03B33
                mov     edx, 40h ; '@'

loc_140A03B28:                          ; CODE XREF: sub_1409FA010+9B21↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A03B28

loc_140A03B33:                          ; CODE XREF: sub_1409FA010+9B11↑j
                mov     r10d, r8d
                mov     rbx, r15
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A03BB3
                mov     rsi, 7010008004002001h
                mov     r12d, 1

loc_140A03B52:                          ; CODE XREF: sub_1409FA010+9B9C↓j
                mov     edx, 8

loc_140A03B57:                          ; CODE XREF: sub_1409FA010+9B64↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r12
                jnz     short loc_140A03B57
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r11d, eax
                mov     [rbp+0BE0h+var_5F8], rdx
                xor     r11d, edx
                mov     eax, 0FFFFFFFFh
                and     r11d, 3Fh
                cmovz   r11d, r12d
                add     r10d, eax
                jnz     short loc_140A03B52
                mov     rsi, [rsp+0CE0h+var_C80]

loc_140A03BB3:                          ; CODE XREF: sub_1409FA010+9B30↑j
                and     r8d, 7Fh
                mov     r10d, 1
                cmp     r8d, 8
                jb      short loc_140A03BE0
                mov     edx, r8d
                shr     rdx, 3

loc_140A03BCA:                          ; CODE XREF: sub_1409FA010+9BCE↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, r10
                jnz     short loc_140A03BCA

loc_140A03BE0:                          ; CODE XREF: sub_1409FA010+9BB1↑j
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A03C06
                mov     r15d, 0FFFFFFFFh

loc_140A03BEE:                          ; CODE XREF: sub_1409FA010+9BF1↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     rbx, rax
                add     r9, r10
                rol     rbx, cl
                add     r8d, r15d
                jnz     short loc_140A03BEE
                xor     r15d, r15d

loc_140A03C06:                          ; CODE XREF: sub_1409FA010+9BD6↑j
                mov     rax, rbx
                jmp     short loc_140A03C0D
; ---------------------------------------------------------------------------

loc_140A03C0B:                          ; CODE XREF: sub_1409FA010+9C04↓j
                xor     ebx, eax

loc_140A03C0D:                          ; CODE XREF: sub_1409FA010+9BF9↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A03C0B
                mov     r8d, [r13+14h]
                btr     ebx, 1Fh
                cmp     ebx, r8d
                jz      loc_140A03CE4
                mov     ecx, [r13+10h]
                mov     rdx, [r13+8]
                test    rcx, rcx
                jz      loc_140A03D8B
                mov     eax, [rsi+994h]
                mov     r9d, 40h ; '@'
                test    r9b, al
                jz      loc_140A03D8B
                mov     r12, cr8
                lea     eax, [r9-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rbp+0BE0h+arg_8], rax
                lea     r13, [r14-1]

loc_140A03C7B:                          ; CODE XREF: sub_1409FA010+9CC6↓j
                movzx   r15d, r12b

loc_140A03C7F:                          ; CODE XREF: sub_1409FA010+9CA9↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A03CBB
                mov     eax, 1
                cmp     r12b, al
                ja      short loc_140A03CC3
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_140A03C7F
; ---------------------------------------------------------------------------

loc_140A03CBB:                          ; CODE XREF: sub_1409FA010+9C85↑j
                test    eax, eax
                js      loc_140A03D7B

loc_140A03CC3:                          ; CODE XREF: sub_1409FA010+9C8F↑j
                mov     r11d, 1000h
                add     r14, r11
                add     r13, r11
                cmp     r13, [rbp+0BE0h+arg_8]
                jnz     short loc_140A03C7B

loc_140A03CD8:                          ; CODE XREF: sub_1409FA010+A002↓j
                mov     cr8, r15
                xor     r15d, r15d

loc_140A03CDF:                          ; CODE XREF: sub_1409FA010+9F2F↓j
                mov     r13, [rsp+0CE0h+var_C90]

loc_140A03CE4:                          ; CODE XREF: sub_1409FA010+9A4E↑j
                                        ; sub_1409FA010+9AE2↑j ...
                mov     eax, [r13+20h]
                mov     r14d, 1
                test    r14b, al
                jz      loc_1409FB31B
                mov     rbx, [r13+18h]
                mov     rax, [rsi+1F8h]
                mov     rcx, rbx
                mov     [rsp+0CE0h+var_C88], rbx
                call    j__guard_dispatch_icall_nop
                movzx   r15d, word ptr [rax+14h]
                add     r15, 18h
                add     r15, rax
                movzx   eax, word ptr [rax+6]
                lea     rcx, [rax+rax*4]
                lea     rax, [r15+rcx*8]
                mov     [rsp+0CE0h+var_C70], rax
                cmp     r15, rax
                jz      loc_1409FB318
                mov     r12d, [rsi+824h]
                xor     edx, edx
                test    r12d, r12d
                jnz     short loc_140A03D53
                mov     dword ptr [rsi+824h], 1000h
                mov     r12d, 1000h

loc_140A03D53:                          ; CODE XREF: sub_1409FA010+9D31↑j
                mov     eax, r12d
                cmp     rbx, [rsi+5E8h]
                jz      loc_140A0403F
                cmp     rbx, [rsi+5F0h]
                jz      loc_140A0403F
                mov     dword ptr [rbp+0BE0h+arg_8], edx
                jmp     loc_140A04049
; ---------------------------------------------------------------------------

loc_140A03D7B:                          ; CODE XREF: sub_1409FA010+9CAD↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]
                xor     r15d, r15d
                mov     r8d, [r13+14h]

loc_140A03D8B:                          ; CODE XREF: sub_1409FA010+9C22↑j
                                        ; sub_1409FA010+9C37↑j
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A03DAE
                mov     ecx, r8d
                mov     eax, ebx
                xor     rcx, rax

loc_140A03D9D:                          ; CODE XREF: sub_1409FA010+A02A↓j
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A03DAE:                          ; CODE XREF: sub_1409FA010+9D83↑j
                                        ; sub_1409FA010+A01F↓j
                mov     rcx, [r13+8]
                test    eax, eax
                jnz     loc_140A03CE4
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                jmp     loc_140A03CE4
; ---------------------------------------------------------------------------

loc_140A03E0E:                          ; CODE XREF: sub_1409FA010+99E8↑j
                                        ; sub_1409FA010+9A14↑j
                mov     [rsi+824h], r15d
                jmp     loc_140A03CE4
; ---------------------------------------------------------------------------

loc_140A03E1A:                          ; CODE XREF: sub_1409FA010+998A↑j
                                        ; sub_1409FA010+99AD↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A03E56
                mov     edx, 40h ; '@'

loc_140A03E4B:                          ; CODE XREF: sub_1409FA010+9E44↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A03E4B

loc_140A03E56:                          ; CODE XREF: sub_1409FA010+9E34↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     edx, 1
                mov     r12d, 0FFFFFFFFh
                test    r11d, r11d
                jz      short loc_140A03EDC
                mov     rdi, 7010008004002001h

loc_140A03E7A:                          ; CODE XREF: sub_1409FA010+9EBE↓j
                mov     eax, 8

loc_140A03E7F:                          ; CODE XREF: sub_1409FA010+9E86↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_140A03E7F
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, eax
                mov     [rbp+0BE0h+var_5F0], rdx
                xor     r10d, edx
                mov     edx, 1
                and     r10d, 3Fh
                cmovz   r10d, edx
                add     r11d, r12d
                jnz     short loc_140A03E7A
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A03EDC:                          ; CODE XREF: sub_1409FA010+9E5E↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A03F03
                mov     eax, r8d
                shr     rax, 3

loc_140A03EED:                          ; CODE XREF: sub_1409FA010+9EF1↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A03EED

loc_140A03F03:                          ; CODE XREF: sub_1409FA010+9ED4↑j
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A03F20

loc_140A03F0B:                          ; CODE XREF: sub_1409FA010+9F0E↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_140A03F0B

loc_140A03F20:                          ; CODE XREF: sub_1409FA010+9EF9↑j
                mov     rax, rbx
                jmp     short loc_140A03F27
; ---------------------------------------------------------------------------

loc_140A03F25:                          ; CODE XREF: sub_1409FA010+9F1E↓j
                xor     ebx, eax

loc_140A03F27:                          ; CODE XREF: sub_1409FA010+9F13↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A03F25
                mov     rax, [rsp+0CE0h+var_C90]
                btr     ebx, 1Fh
                mov     r13d, r15d
                cmp     ebx, [rax+14h]
                jz      loc_140A03CDF
                cmp     [rax], r15d
                jnz     short loc_140A03F52
                cmp     [rax+18h], r15d
                cmovnz  r13d, edx

loc_140A03F52:                          ; CODE XREF: sub_1409FA010+9F38↑j
                mov     ecx, [rax+10h]
                mov     rdx, [rax+8]
                test    rcx, rcx
                jz      loc_140A0401E
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A0401E
                mov     r12, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     rax, [r14-1]
                mov     [rbp+0BE0h+arg_8], rax

loc_140A03FAA:                          ; CODE XREF: sub_1409FA010+A000↓j
                movzx   r15d, r12b

loc_140A03FAE:                          ; CODE XREF: sub_1409FA010+9FDB↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A03FED
                test    r13d, r13d
                jnz     short loc_140A04017
                lea     eax, [r13+1]
                cmp     r12b, al
                ja      short loc_140A03FF1
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r13+2]
                mov     cr8, rax
                jmp     short loc_140A03FAE
; ---------------------------------------------------------------------------

loc_140A03FED:                          ; CODE XREF: sub_1409FA010+9FB4↑j
                test    eax, eax
                js      short loc_140A04017

loc_140A03FF1:                          ; CODE XREF: sub_1409FA010+9FC2↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     r11d, 1000h
                add     rax, r11
                add     r14, r11
                mov     [rbp+0BE0h+arg_8], rax
                cmp     rax, [rsp+0CE0h+var_C70]
                jnz     short loc_140A03FAA
                jmp     loc_140A03CD8
; ---------------------------------------------------------------------------

loc_140A04017:                          ; CODE XREF: sub_1409FA010+9FB9↑j
                                        ; sub_1409FA010+9FDF↑j
                mov     cr8, r15
                xor     r15d, r15d

loc_140A0401E:                          ; CODE XREF: sub_1409FA010+9F4C↑j
                                        ; sub_1409FA010+9F61↑j
                mov     r13, [rsp+0CE0h+var_C90]
                mov     eax, [rsi+8F8h]
                mov     edx, [r13+14h]
                test    eax, eax
                jnz     loc_140A03DAE
                mov     ecx, ebx
                xor     rcx, rdx
                jmp     loc_140A03D9D
; ---------------------------------------------------------------------------

loc_140A0403F:                          ; CODE XREF: sub_1409FA010+9D4D↑j
                                        ; sub_1409FA010+9D5A↑j
                mov     dword ptr [rbp+0BE0h+arg_8], r14d
                mov     r12d, eax

loc_140A04049:                          ; CODE XREF: sub_1409FA010+9D66↑j
                mov     esi, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, [rsp+0CE0h+var_C70]

loc_140A04054:                          ; CODE XREF: sub_1409FA010+A188↓j
                mov     ecx, [r15+10h]
                mov     eax, [r15+8]
                cmp     ecx, eax
                mov     r11d, [r15+0Ch]
                cmovbe  ecx, eax
                lea     r13d, [r11+0FFFh]
                add     r13d, ecx
                and     r13d, 0FFFFF000h
                cmp     r12d, r13d
                jnb     loc_140A0418D
                mov     eax, [r15+24h]
                bt      eax, 19h
                jb      loc_140A0418A
                mov     ecx, [r15]
                cmp     ecx, 54494E49h
                jnz     short loc_140A040A6
                cmp     dword ptr [r15+4], 4742444Bh
                jz      loc_140A0418A

loc_140A040A6:                          ; CODE XREF: sub_1409FA010+A086↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A040E3
                movzx   eax, word ptr [r15+4]
                mov     r8d, 7877h
                cmp     ax, r8w
                jz      loc_140A0418A
                mov     r8d, 7277h
                cmp     ax, r8w
                jz      loc_140A0418A
                mov     r8d, 7777h
                cmp     ax, r8w
                jz      loc_140A0418A

loc_140A040E3:                          ; CODE XREF: sub_1409FA010+A09C↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A040FB
                mov     eax, 4154h
                cmp     [r15+4], ax
                jz      loc_140A0418A

loc_140A040FB:                          ; CODE XREF: sub_1409FA010+A0D9↑j
                mov     rcx, [rbp+0BE0h+var_C48]
                test    rcx, rcx
                jz      short loc_140A0413E
                mov     rax, [rcx+938h]
                mov     r8, [rcx+930h]
                mov     qword ptr [rbp+0BE0h+var_940+8], rax
                mov     rax, [rcx+940h]
                mov     qword ptr [rbp+0BE0h+var_930], rax
                mov     rax, [rcx+948h]
                mov     qword ptr [rbp+0BE0h+var_930+8], rax
                mov     qword ptr [rbp+0BE0h+var_940], r8
                jmp     short loc_140A04161
; ---------------------------------------------------------------------------

loc_140A0413E:                          ; CODE XREF: sub_1409FA010+A0F2↑j
                movups  xmm0, xmmword ptr cs:off_140C0F040 ; "PAGEVRF"
                movups  xmm1, xmmword ptr cs:off_140C0F050 ; "INIT"
                movups  [rbp+0BE0h+var_940], xmm0
                mov     r8, qword ptr [rbp+0BE0h+var_940]
                movups  [rbp+0BE0h+var_930], xmm1

loc_140A04161:                          ; CODE XREF: sub_1409FA010+A12C↑j
                mov     r10d, 7
                mov     r9, r15
                mov     r14d, 0FFFFFFFFh

loc_140A04170:                          ; CODE XREF: sub_1409FA010+A176↓j
                movzx   edx, byte ptr [r9]
                inc     r9
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A041CB
                add     r10d, r14d
                jnz     short loc_140A04170

loc_140A04188:                          ; CODE XREF: sub_1409FA010+A207↓j
                                        ; sub_1409FA010+A234↓j ...
                xor     edx, edx

loc_140A0418A:                          ; CODE XREF: sub_1409FA010+A077↑j
                                        ; sub_1409FA010+A090↑j ...
                mov     r12d, r13d

loc_140A0418D:                          ; CODE XREF: sub_1409FA010+A069↑j
                mov     r8, [rbp+0BE0h+var_C48]

loc_140A04191:                          ; CODE XREF: sub_1409FA010+A3FE↓j
                add     r15, 28h ; '('
                cmp     r15, rdi
                jnz     loc_140A04054

loc_140A0419E:                          ; CODE XREF: sub_1409FA010+A3F3↓j
                mov     rsi, [rsp+0CE0h+var_C80]
                cmp     r15, rdi
                mov     rdi, 0FFFFFFFFB8797400h
                jnz     loc_140A04537
                cmp     r12d, r13d
                jb      loc_140A04537
                xor     r15d, r15d
                mov     [r8+824h], r15d
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A041CB:                          ; CODE XREF: sub_1409FA010+A171↑j
                mov     r9, qword ptr [rbp+0BE0h+var_940+8]
                mov     r8d, 8
                mov     r10, r15

loc_140A041DB:                          ; CODE XREF: sub_1409FA010+A1E6↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A0421C
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A041DB
                xor     edx, edx
                test    r8d, r8d
                jz      short loc_140A0418A

loc_140A041FF:                          ; CODE XREF: sub_1409FA010+A205↓j
                movzx   edx, byte ptr [r10]
                inc     r10
                movzx   eax, byte ptr [r9]
                inc     r9
                cmp     rdx, rax
                jnz     short loc_140A0421C
                add     r8d, r14d
                jnz     short loc_140A041FF
                jmp     loc_140A04188
; ---------------------------------------------------------------------------

loc_140A0421C:                          ; CODE XREF: sub_1409FA010+A1DC↑j
                                        ; sub_1409FA010+A200↑j
                mov     r8, qword ptr [rbp+0BE0h+var_930]
                mov     r10d, 4
                mov     r9, r15

loc_140A0422C:                          ; CODE XREF: sub_1409FA010+A232↓j
                movzx   edx, byte ptr [r9]
                inc     r9
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A04249
                add     r10d, r14d
                jnz     short loc_140A0422C
                jmp     loc_140A04188
; ---------------------------------------------------------------------------

loc_140A04249:                          ; CODE XREF: sub_1409FA010+A22D↑j
                mov     r8, qword ptr [rbp+0BE0h+var_930+8]
                mov     r10d, 6
                mov     r9, r15

loc_140A04259:                          ; CODE XREF: sub_1409FA010+A25F↓j
                movzx   edx, byte ptr [r9]
                inc     r9
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A04276
                add     r10d, r14d
                jnz     short loc_140A04259
                jmp     loc_140A04188
; ---------------------------------------------------------------------------

loc_140A04276:                          ; CODE XREF: sub_1409FA010+A25A↑j
                mov     eax, [r15+24h]
                xor     edx, edx
                test    eax, eax
                js      loc_140A0418A
                bt      eax, 1Dh
                jnb     loc_140A0418A
                lea     r9d, [rdx+1]
                mov     r14d, r9d
                test    esi, esi
                jz      short loc_140A042AC
                mov     eax, [r15]
                cmp     eax, 2E656461h
                jz      short loc_140A042AC
                cmp     eax, 45474150h
                cmovnz  r14d, edx

loc_140A042AC:                          ; CODE XREF: sub_1409FA010+A287↑j
                                        ; sub_1409FA010+A291↑j
                mov     r8, [rbp+0BE0h+var_C48]
                cmp     r12d, r11d
                cmovnb  r11d, r12d
                mov     r12d, r11d

loc_140A042BA:                          ; CODE XREF: sub_1409FA010+A3E6↓j
                mov     eax, r12d
                add     rbx, rax
                test    byte ptr [r8+87Bh], 4
                jz      short loc_140A0432F
                mov     ecx, 0FFFFFFFFh
                mov     eax, ecx
                xbegin  $+6

loc_140A042D7:                          ; CODE XREF: sub_1409FA010+A2C1↑j
                cmp     eax, ecx
                jnz     short loc_140A042E2
                mov     al, [rbx]
                xend
                jmp     short loc_140A04316
; ---------------------------------------------------------------------------

loc_140A042E2:                          ; CODE XREF: sub_1409FA010+A2C9↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     [rbp+0BE0h+var_5E8], rdx
                xor     dl, al
                mov     eax, 0Fh
                test    al, dl
                jz      short loc_140A0432D
                xor     edx, edx

loc_140A04316:                          ; CODE XREF: sub_1409FA010+A2D0↑j
                add     [r8+83Ch], r9d
                add     dword ptr [r8+828h], 100h
                jmp     loc_140A043D7
; ---------------------------------------------------------------------------

loc_140A0432D:                          ; CODE XREF: sub_1409FA010+A302↑j
                xor     edx, edx

loc_140A0432F:                          ; CODE XREF: sub_1409FA010+A2B8↑j
                test    r14d, r14d
                jz      loc_140A04413
                mov     rax, [r8+450h]
                lea     rcx, [rbp+0BE0h+var_708]
                mov     rdx, rbx
                call    j__guard_dispatch_icall_nop
                xor     edx, edx
                test    eax, eax
                jns     loc_140A0448C
                cmp     eax, 0C0000005h
                jnz     short loc_140A043CD
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     eax, [rcx+20h]
                test    al, 4
                jz      short loc_140A04371
                cmp     [r15+24h], edx
                jge     short loc_140A043CD

loc_140A04371:                          ; CODE XREF: sub_1409FA010+A359↑j
                mov     r8, [rbp+0BE0h+var_C48]
                cmp     [r8+8F8h], edx
                jnz     short loc_140A043D1
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, r8
                mov     [r8+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [r8+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, r8
                mov     [r8+910h], rax
                mov     eax, 1
                mov     [r8+918h], rbx
                mov     [r8+8F8h], eax
                call    sub_140A113CC
                xor     edx, edx

loc_140A043CD:                          ; CODE XREF: sub_1409FA010+A34D↑j
                                        ; sub_1409FA010+A35F↑j
                mov     r8, [rbp+0BE0h+var_C48]

loc_140A043D1:                          ; CODE XREF: sub_1409FA010+A36C↑j
                                        ; sub_1409FA010+A522↓j
                mov     r9d, 1

loc_140A043D7:                          ; CODE XREF: sub_1409FA010+A318↑j
                mov     eax, [r8+828h]
                add     r12d, 1000h
                cmp     r12d, r13d
                jnb     short loc_140A043FC
                mov     rbx, [rsp+0CE0h+var_C88]
                cmp     eax, [r8+82Ch]
                jl      loc_140A042BA

loc_140A043FC:                          ; CODE XREF: sub_1409FA010+A3D8↑j
                cmp     eax, [r8+82Ch]
                jge     loc_140A0419E
                mov     rbx, [rsp+0CE0h+var_C88]
                jmp     loc_140A04191
; ---------------------------------------------------------------------------

loc_140A04413:                          ; CODE XREF: sub_1409FA010+A322↑j
                mov     r9d, 0FFFh
                mov     [rbp+0BE0h+var_708], rdx
                mov     [rbp+0BE0h+var_6FE], dx
                mov     rax, rbx
                and     rax, r9
                mov     [rbp+0BE0h+var_6E0], 1000h
                add     rax, 1FFFh
                mov     rcx, rbx
                shr     rax, 0Ch
                add     ax, 6
                shl     ax, 3
                mov     [rbp+0BE0h+var_700], ax
                mov     rax, rbx
                and     rax, 0FFFFFFFFFFFFF000h
                mov     [rbp+0BE0h+var_6E8], rax
                mov     eax, ebx
                and     eax, r9d
                mov     [rbp+0BE0h+var_6DC], eax
                mov     rax, [r8+458h]
                call    j__guard_dispatch_icall_nop
                mov     [rbp+0BE0h+var_5E0], rax
                shr     rax, 0Ch
                mov     [rbp+0BE0h+var_6D8], rax

loc_140A0448C:                          ; CODE XREF: sub_1409FA010+A342↑j
                mov     rcx, [rbp+0BE0h+var_C48]
                mov     eax, 1
                add     [rcx+840h], eax
                mov     eax, [rbp+0BE0h+var_6DC]
                add     rax, [rbp+0BE0h+var_6E8]
                mov     [rcx+0A68h], rax
                mov     rax, [rsp+0CE0h+var_C90]
                mov     [rcx+0A60h], rax
                mov     rbx, cr8
                mov     eax, 2
                mov     cr8, rax
                mov     rax, [rcx+5F8h]
                xor     r8d, r8d
                add     rcx, 0A40h
                mov     edx, [rax]
                call    sub_140A13550
                mov     rdx, [rbp+0BE0h+var_C48]
                mov     ecx, [rdx+7F4h]
                mov     rax, [rdx+448h]
                add     rcx, rdx
                call    j__guard_dispatch_icall_nop
                mov     r8, rax
                mov     [rbp+0BE0h+var_C48], rax
                movzx   eax, bl
                mov     cr8, rax
                xor     edx, edx
                test    r14d, r14d
                jz      short loc_140A04527
                mov     rax, [r8+460h]
                lea     rcx, [rbp+0BE0h+var_708]
                call    j__guard_dispatch_icall_nop
                mov     r8, [rbp+0BE0h+var_C48]
                xor     edx, edx

loc_140A04527:                          ; CODE XREF: sub_1409FA010+A4FC↑j
                add     dword ptr [r8+828h], 14000h
                jmp     loc_140A043D1
; ---------------------------------------------------------------------------

loc_140A04537:                          ; CODE XREF: sub_1409FA010+A19D↑j
                                        ; sub_1409FA010+A1A6↑j
                mov     [r8+824h], r12d
                jmp     loc_1409FB318
; ---------------------------------------------------------------------------

loc_140A04543:                          ; CODE XREF: sub_1409FA010+8FDE↑j
                mov     r8d, 0Ch

loc_140A04549:                          ; CODE XREF: sub_1409FA010+12A2↑j
                xor     eax, eax

loc_140A0454B:                          ; CODE XREF: sub_1409FA010+12B9↑j
                cmp     r10d, r8d
                jnz     loc_140A04878
                cmp     [rsi+980h], rax
                jz      loc_1409FB312
                mov     edx, [rsi+994h]
                mov     ecx, edx
                cmp     [rsi+824h], eax
                jnz     short loc_140A04583
                shl     ecx, 3
                xor     ecx, edx
                and     ecx, 20h
                xor     ecx, edx
                mov     [rsi+994h], ecx
                jmp     short loc_140A04594
; ---------------------------------------------------------------------------

loc_140A04583:                          ; CODE XREF: sub_1409FA010+A55F↑j
                mov     eax, edx
                shr     eax, 3
                xor     eax, edx
                test    al, 4
                jnz     loc_1409FB3EA
                xor     eax, eax

loc_140A04594:                          ; CODE XREF: sub_1409FA010+A571↑j
                test    cl, 4
                jz      loc_140A04873
                mov     r15, [r13+20h]
                mov     eax, [r13+28h]
                test    r15, r15
                jz      short loc_140A045D2
                mov     ebx, [rsi+824h]
                sub     eax, ebx
                mov     r14d, eax
                add     r14, 0FFFh
                lea     ecx, [r15+rbx]
                and     ecx, 0FFFh
                add     r14, rcx
                shr     r14, 0Ch
                add     rbx, r15
                jmp     short loc_140A045F3
; ---------------------------------------------------------------------------

loc_140A045D2:                          ; CODE XREF: sub_1409FA010+A598↑j
                mov     r14d, [r13+8]
                mov     ecx, [r13+10h]
                and     r14d, 0FFFh
                mov     rbx, [r13+8]
                add     r14, 0FFFh
                add     r14, rcx
                shr     r14, 0Ch

loc_140A045F3:                          ; CODE XREF: sub_1409FA010+A5C0↑j
                and     rbx, 0FFFFFFFFFFFFF000h
                test    r14, r14
                jz      loc_140A046AE
                xor     edi, edi

loc_140A04605:                          ; CODE XREF: sub_1409FA010+A691↓j
                mov     rax, [rsi+2B0h]
                mov     rcx, rbx
                dec     r14
                call    j__guard_dispatch_icall_nop
                test    al, al
                jz      short loc_140A04672
                cmp     [rsi+8F8h], edi
                jnz     short loc_140A04672
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A04672:                          ; CODE XREF: sub_1409FA010+A609↑j
                                        ; sub_1409FA010+A611↑j
                add     dword ptr [rsi+828h], 100h
                add     rbx, 1000h
                test    r15, r15
                jz      short loc_140A0469E
                add     dword ptr [rsi+824h], 1000h
                mov     eax, [r12]
                cmp     [rsi+828h], eax
                jge     short loc_140A046A7

loc_140A0469E:                          ; CODE XREF: sub_1409FA010+A676↑j
                test    r14, r14
                jnz     loc_140A04605

loc_140A046A7:                          ; CODE XREF: sub_1409FA010+A68C↑j
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A046AE:                          ; CODE XREF: sub_1409FA010+A5ED↑j
                test    r15, r15
                jz      short loc_140A046C2
                xor     r15d, r15d
                test    r14, r14
                jnz     short loc_140A046C2
                mov     [rsi+824h], r15d

loc_140A046C2:                          ; CODE XREF: sub_1409FA010+A6A1↑j
                                        ; sub_1409FA010+A6A9↑j
                cmp     [rsi+824h], r15d
                jnz     loc_1409FB31B
                mov     rcx, [rsi+540h]
                mov     r15, cr8
                mov     eax, 0Fh
                mov     cr8, rax
                mov     rax, [rsi+150h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+610h]
                mov     r14, [rsp+0CE0h+var_C90]
                mov     rcx, [rax]
                mov     eax, [rcx]
                lea     rbx, [rcx+10h]
                mov     r12b, [rcx+0Ch]
                lea     rcx, [rax+rax*2]
                lea     r13, [rbx+rcx*8]

loc_140A04710:                          ; CODE XREF: sub_1409FA010+A75B↓j
                mov     r8d, 18h
                lea     r9, [r14+18h]
                mov     r10, rbx

loc_140A0471D:                          ; CODE XREF: sub_1409FA010+A728↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A04764
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A0471D
                test    r8d, r8d
                jz      short loc_140A0476D
                mov     r11d, 1

loc_140A04745:                          ; CODE XREF: sub_1409FA010+A752↓j
                movzx   edx, byte ptr [r10]
                add     r10, r11
                movzx   eax, byte ptr [r9]
                add     r9, r11
                cmp     rdx, rax
                jnz     short loc_140A04764
                mov     eax, 0FFFFFFFFh
                add     r8d, eax
                jz      short loc_140A0476D
                jmp     short loc_140A04745
; ---------------------------------------------------------------------------

loc_140A04764:                          ; CODE XREF: sub_1409FA010+A71E↑j
                                        ; sub_1409FA010+A746↑j
                add     rbx, 18h
                cmp     rbx, r13
                jb      short loc_140A04710

loc_140A0476D:                          ; CODE XREF: sub_1409FA010+A72D↑j
                                        ; sub_1409FA010+A750↑j
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rcx, [rsi+540h]
                mov     rax, [rsi+190h]
                call    j__guard_dispatch_icall_nop
                movzx   eax, r15b
                mov     cr8, rax
                xor     r15d, r15d
                test    r12b, r12b
                jz      short loc_140A0480F
                mov     eax, [rsi+994h]
                lea     ecx, [r15+10h]
                test    cl, al
                jz      short loc_140A047FE
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A047FE
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                lea     eax, [r15+1]
                mov     [rsi+918h], rax
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A047FE:                          ; CODE XREF: sub_1409FA010+A791↑j
                                        ; sub_1409FA010+A79A↑j
                mov     edx, 1
                cmp     [r14+18h], rdx
                jz      loc_1409FB31B
                jmp     short loc_140A04814
; ---------------------------------------------------------------------------

loc_140A0480F:                          ; CODE XREF: sub_1409FA010+A783↑j
                mov     edx, 1

loc_140A04814:                          ; CODE XREF: sub_1409FA010+A7FD↑j
                cmp     rbx, r13
                jnz     loc_1409FB31B
                cmp     [rsi+8F8h], r15d
                jnz     loc_1409FB31B
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx

loc_140A04868:                          ; CODE XREF: sub_1409FA010+B7C0↓j
                mov     [rsi+8F8h], edx
                jmp     loc_1409FB6F2
; ---------------------------------------------------------------------------

loc_140A04873:                          ; CODE XREF: sub_1409FA010+A587↑j
                mov     edx, 1

loc_140A04878:                          ; CODE XREF: sub_1409FA010+A53E↑j
                cmp     [rsi+824h], eax
                jnz     short loc_140A0489C
                cmp     r10d, r8d
                jnz     loc_140A04DB2
                cmp     [rsi+980h], rax
                jnz     loc_140A04A35
                mov     [rsi+824h], eax

loc_140A0489C:                          ; CODE XREF: sub_1409FA010+A86E↑j
                                        ; sub_1409FA010+AD07↓j
                xor     r15d, r15d

loc_140A0489F:                          ; CODE XREF: sub_1409FA010+AA74↓j
                                        ; sub_1409FA010+AD9D↓j ...
                mov     r9, [r13+8]
                mov     r8d, [rsi+824h]
                mov     ecx, [r13+10h]
                mov     [rbp+0BE0h+var_C10], r9
                lea     rax, [r8+r8*2]
                lea     r14, [r9+rax*4]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                mov     [rsp+0CE0h+var_C88], r14
                shr     rdx, 3
                lea     rax, [rdx+rdx*2]
                lea     r12, [r9+rax*4]
                mov     [rbp+0BE0h+var_C20], r12
                lea     r12, ds:30h[r8*4]
                add     r12, r13
                mov     [rbp+0BE0h+var_C50], r12
                cmp     r14, [rbp+0BE0h+var_C20]
                jz      loc_140A05471
                mov     rdi, [rbp+0BE0h+var_C20]

loc_140A048F9:                          ; CODE XREF: sub_1409FA010+B382↓j
                cmp     [r12], r15d
                jl      loc_140A05369
                mov     eax, [r14]
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     r13d, eax
                mov     r15d, [r14+4]
                sub     r15d, eax
                add     r13, [rcx+20h]
                mov     [rsp+0CE0h+var_C70], r13
                cmp     r10d, 2Bh ; '+'
                jz      loc_140A05009
                add     [rsi+828h], r15d
                mov     r9, r13
                mov     r10d, [rsi+814h]
                mov     rax, r13
                mov     r11, [rsi+818h]
                mov     ecx, r15d
                add     rcx, r13
                cmp     r13, rcx
                jnb     short loc_140A0495E
                mov     edx, 40h ; '@'

loc_140A04953:                          ; CODE XREF: sub_1409FA010+A94C↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A04953

loc_140A0495E:                          ; CODE XREF: sub_1409FA010+A93C↑j
                mov     r8d, r15d
                mov     rbx, r11
                shr     r8d, 7
                test    r8d, r8d
                jz      short loc_140A049E1
                mov     r12, 7010008004002001h

loc_140A04977:                          ; CODE XREF: sub_1409FA010+A9C7↓j
                mov     edx, 8
                lea     edi, [rdx-7]

loc_140A0497F:                          ; CODE XREF: sub_1409FA010+A98C↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, rdi
                jnz     short loc_140A0497F
                mov     rcx, r9
                sub     rcx, r13
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     r10d, eax
                mov     [rbp+0BE0h+var_5C8], rdx
                xor     r10d, edx
                mov     rax, rdi
                and     r10d, 3Fh
                cmovz   r10d, eax
                mov     eax, 0FFFFFFFFh
                add     r8d, eax
                jnz     short loc_140A04977
                mov     r12, [rbp+0BE0h+var_C50]
                mov     rdi, [rbp+0BE0h+var_C20]

loc_140A049E1:                          ; CODE XREF: sub_1409FA010+A95B↑j
                mov     edx, r15d
                mov     r11d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A04A0E
                mov     r8d, edx
                shr     r8, 3

loc_140A049F9:                          ; CODE XREF: sub_1409FA010+A9FC↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     r8, r11
                jnz     short loc_140A049F9

loc_140A04A0E:                          ; CODE XREF: sub_1409FA010+A9E0↑j
                test    edx, edx
                jz      short loc_140A04A2D
                mov     r8d, 0FFFFFFFFh

loc_140A04A18:                          ; CODE XREF: sub_1409FA010+AA1B↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, r11
                rol     rbx, cl
                add     edx, r8d
                jnz     short loc_140A04A18

loc_140A04A2D:                          ; CODE XREF: sub_1409FA010+AA00↑j
                mov     rax, rbx
                jmp     loc_140A04FF3
; ---------------------------------------------------------------------------

loc_140A04A35:                          ; CODE XREF: sub_1409FA010+A880↑j
                mov     eax, [rsi+994h]
                mov     ecx, eax
                shl     ecx, 3
                xor     ecx, eax
                and     ecx, 20h
                xor     ecx, eax
                mov     [rsi+994h], ecx
                test    cl, 4
                jz      loc_140A04B25
                mov     r14d, [r13+8]
                xor     r15d, r15d
                mov     ecx, [r13+10h]
                and     r14d, 0FFFh
                mov     rbx, [r13+8]
                add     r14, 0FFFh
                add     r14, rcx
                and     rbx, 0FFFFFFFFFFFFF000h
                shr     r14, 0Ch
                test    r14, r14
                jz      loc_140A0489F
                jmp     short loc_140A04A91
; ---------------------------------------------------------------------------

loc_140A04A8C:                          ; CODE XREF: sub_1409FA010+AB03↓j
                mov     edx, 1

loc_140A04A91:                          ; CODE XREF: sub_1409FA010+AA7A↑j
                mov     rax, [rsi+2B0h]
                mov     rcx, rbx
                sub     r14, rdx
                call    j__guard_dispatch_icall_nop
                test    al, al
                jz      short loc_140A04AFF
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A04AFF
                mov     rax, 0A3A03F5891C8B4E8h
                mov     edi, 1
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rcx, rsi
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], edi
                call    sub_140A113CC

loc_140A04AFF:                          ; CODE XREF: sub_1409FA010+AA95↑j
                                        ; sub_1409FA010+AA9E↑j
                add     dword ptr [rsi+828h], 100h
                add     rbx, 1000h
                test    r14, r14
                jnz     loc_140A04A8C
                mov     rdi, 0FFFFFFFFB8797400h
                jmp     loc_140A04DA6
; ---------------------------------------------------------------------------

loc_140A04B25:                          ; CODE XREF: sub_1409FA010+AA40↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r11d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A04B62
                mov     r10d, 40h ; '@'

loc_140A04B57:                          ; CODE XREF: sub_1409FA010+AB50↓j
                prefetchnta byte ptr [rax]
                add     rax, r10
                cmp     rax, rcx
                jb      short loc_140A04B57

loc_140A04B62:                          ; CODE XREF: sub_1409FA010+AB3F↑j
                mov     r10d, r8d
                mov     rbx, r15
                shr     r10d, 7
                mov     r12d, 0FFFFFFFFh
                test    r10d, r10d
                jz      short loc_140A04BEA
                mov     rdi, 7010008004002001h

loc_140A04B81:                          ; CODE XREF: sub_1409FA010+ABCC↓j
                mov     edx, 8
                lea     esi, [rdx-7]

loc_140A04B89:                          ; CODE XREF: sub_1409FA010+AB96↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, rsi
                jnz     short loc_140A04B89
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r11d, eax
                mov     [rbp+0BE0h+var_5D8], rdx
                xor     r11d, edx
                mov     rdx, rsi
                and     r11d, 3Fh
                cmovz   r11d, edx
                add     r10d, r12d
                jnz     short loc_140A04B81
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A04BEA:                          ; CODE XREF: sub_1409FA010+AB65↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A04C20
                mov     edx, r8d
                mov     esi, 1
                shr     rdx, 3

loc_140A04C00:                          ; CODE XREF: sub_1409FA010+AC04↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, rsi
                jnz     short loc_140A04C00
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     edx, 1

loc_140A04C20:                          ; CODE XREF: sub_1409FA010+ABE2↑j
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A04C3D

loc_140A04C28:                          ; CODE XREF: sub_1409FA010+AC2B↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_140A04C28

loc_140A04C3D:                          ; CODE XREF: sub_1409FA010+AC16↑j
                mov     rax, rbx
                jmp     short loc_140A04C44
; ---------------------------------------------------------------------------

loc_140A04C42:                          ; CODE XREF: sub_1409FA010+AC3B↓j
                xor     ebx, eax

loc_140A04C44:                          ; CODE XREF: sub_1409FA010+AC30↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A04C42
                mov     r8d, [r13+14h]
                btr     ebx, 1Fh
                cmp     ebx, r8d
                jz      loc_140A04DA6
                mov     ecx, [r13+10h]
                mov     rdx, [r13+8]
                test    rcx, rcx
                jz      loc_140A04D2C
                mov     eax, [rsi+994h]
                mov     r9d, 40h ; '@'
                test    r9b, al
                jz      loc_140A04D2C
                mov     r12, cr8
                lea     eax, [r9-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     r13, [r14-1]

loc_140A04CB0:                          ; CODE XREF: sub_1409FA010+ACF5↓j
                movzx   r15d, r12b

loc_140A04CB4:                          ; CODE XREF: sub_1409FA010+ACDE↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A04CF0
                mov     eax, 1
                cmp     r12b, al
                ja      short loc_140A04CF4
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_140A04CB4
; ---------------------------------------------------------------------------

loc_140A04CF0:                          ; CODE XREF: sub_1409FA010+ACBA↑j
                test    eax, eax
                js      short loc_140A04D1C

loc_140A04CF4:                          ; CODE XREF: sub_1409FA010+ACC4↑j
                mov     r11d, 1000h
                add     r14, r11
                add     r13, r11
                cmp     r13, [rsp+0CE0h+var_C70]
                jnz     short loc_140A04CB0

loc_140A04D07:                          ; CODE XREF: sub_1409FA010+AFA6↓j
                mov     cr8, r15
                mov     r10d, dword ptr [rbp+0BE0h+arg_8]
                mov     r13, [rsp+0CE0h+var_C90]
                jmp     loc_140A0489C
; ---------------------------------------------------------------------------

loc_140A04D1C:                          ; CODE XREF: sub_1409FA010+ACE2↑j
                mov     cr8, r15
                mov     r13, [rsp+0CE0h+var_C90]
                xor     r15d, r15d
                mov     r8d, [r13+14h]

loc_140A04D2C:                          ; CODE XREF: sub_1409FA010+AC59↑j
                                        ; sub_1409FA010+AC6E↑j
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A04D51
                mov     ecx, ebx
                mov     eax, r8d

loc_140A04D3B:                          ; CODE XREF: sub_1409FA010+AFCB↓j
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax

loc_140A04D51:                          ; CODE XREF: sub_1409FA010+AD24↑j
                                        ; sub_1409FA010+AFC3↓j
                mov     rcx, [r13+8]
                jnz     short loc_140A04DA6
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A04DA6:                          ; CODE XREF: sub_1409FA010+AB10↑j
                                        ; sub_1409FA010+AC48↑j ...
                mov     r10d, dword ptr [rbp+0BE0h+arg_8]
                jmp     loc_140A0489F
; ---------------------------------------------------------------------------

loc_140A04DB2:                          ; CODE XREF: sub_1409FA010+A873↑j
                mov     r14, [r13+8]
                mov     r8d, [r13+10h]
                mov     r9, r14
                add     [rsi+828h], r8d
                mov     rax, r14
                mov     r10d, [rsi+814h]
                mov     r15, [rsi+818h]
                lea     rcx, [r14+r8]
                cmp     r14, rcx
                jnb     short loc_140A04DEF
                mov     r11d, 40h ; '@'

loc_140A04DE4:                          ; CODE XREF: sub_1409FA010+ADDD↓j
                prefetchnta byte ptr [rax]
                add     rax, r11
                cmp     rax, rcx
                jb      short loc_140A04DE4

loc_140A04DEF:                          ; CODE XREF: sub_1409FA010+ADCC↑j
                mov     r11d, r8d
                mov     rbx, r15
                shr     r11d, 7
                mov     r12d, 0FFFFFFFFh
                test    r11d, r11d
                jz      short loc_140A04E77
                mov     rdi, 7010008004002001h

loc_140A04E0E:                          ; CODE XREF: sub_1409FA010+AE59↓j
                mov     edx, 8
                lea     esi, [rdx-7]

loc_140A04E16:                          ; CODE XREF: sub_1409FA010+AE23↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, rsi
                jnz     short loc_140A04E16
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, eax
                mov     [rbp+0BE0h+var_5D0], rdx
                xor     r10d, edx
                mov     rdx, rsi
                and     r10d, 3Fh
                cmovz   r10d, edx
                add     r11d, r12d
                jnz     short loc_140A04E0E
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A04E77:                          ; CODE XREF: sub_1409FA010+ADF2↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A04EAD
                mov     edx, r8d
                mov     esi, 1
                shr     rdx, 3

loc_140A04E8D:                          ; CODE XREF: sub_1409FA010+AE91↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, rsi
                jnz     short loc_140A04E8D
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     edx, 1

loc_140A04EAD:                          ; CODE XREF: sub_1409FA010+AE6F↑j
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A04ECA

loc_140A04EB5:                          ; CODE XREF: sub_1409FA010+AEB8↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, r12d
                jnz     short loc_140A04EB5

loc_140A04ECA:                          ; CODE XREF: sub_1409FA010+AEA3↑j
                mov     rax, rbx
                jmp     short loc_140A04ED1
; ---------------------------------------------------------------------------

loc_140A04ECF:                          ; CODE XREF: sub_1409FA010+AEC8↓j
                xor     ebx, eax

loc_140A04ED1:                          ; CODE XREF: sub_1409FA010+AEBD↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A04ECF
                mov     rax, [rsp+0CE0h+var_C90]
                btr     ebx, 1Fh
                mov     r13d, r15d
                cmp     ebx, [rax+14h]
                jz      loc_140A04FE0
                cmp     [rax], r15d
                jnz     short loc_140A04EFC
                cmp     [rax+18h], r15d
                cmovnz  r13d, edx

loc_140A04EFC:                          ; CODE XREF: sub_1409FA010+AEE2↑j
                mov     ecx, [rax+10h]
                mov     rdx, [rax+8]
                test    rcx, rcx
                jz      loc_140A04FC2
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A04FC2
                mov     r12, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+0CE0h+var_C70], rax
                lea     rax, [r14-1]
                mov     [rsp+0CE0h+var_C88], rax

loc_140A04F52:                          ; CODE XREF: sub_1409FA010+AFA4↓j
                movzx   r15d, r12b

loc_140A04F56:                          ; CODE XREF: sub_1409FA010+AF83↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A04F95
                test    r13d, r13d
                jnz     short loc_140A04FBB
                lea     eax, [r13+1]
                cmp     r12b, al
                ja      short loc_140A04F99
                movzx   r15d, r12b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r13+2]
                mov     cr8, rax
                jmp     short loc_140A04F56
; ---------------------------------------------------------------------------

loc_140A04F95:                          ; CODE XREF: sub_1409FA010+AF5C↑j
                test    eax, eax
                js      short loc_140A04FBB

loc_140A04F99:                          ; CODE XREF: sub_1409FA010+AF6A↑j
                mov     rax, [rsp+0CE0h+var_C88]
                mov     r11d, 1000h
                add     rax, r11
                add     r14, r11
                mov     [rsp+0CE0h+var_C88], rax
                cmp     rax, [rsp+0CE0h+var_C70]
                jnz     short loc_140A04F52
                jmp     loc_140A04D07
; ---------------------------------------------------------------------------

loc_140A04FBB:                          ; CODE XREF: sub_1409FA010+AF61↑j
                                        ; sub_1409FA010+AF87↑j
                mov     cr8, r15
                xor     r15d, r15d

loc_140A04FC2:                          ; CODE XREF: sub_1409FA010+AEF6↑j
                                        ; sub_1409FA010+AF0B↑j
                mov     r13, [rsp+0CE0h+var_C90]
                mov     eax, [rsi+8F8h]
                mov     ecx, [r13+14h]
                test    eax, eax
                jnz     loc_140A04D51
                mov     eax, ebx
                jmp     loc_140A04D3B
; ---------------------------------------------------------------------------

loc_140A04FE0:                          ; CODE XREF: sub_1409FA010+AED9↑j
                mov     r10d, dword ptr [rbp+0BE0h+arg_8]
                mov     r13, [rsp+0CE0h+var_C90]
                jmp     loc_140A0489F
; ---------------------------------------------------------------------------

loc_140A04FF1:                          ; CODE XREF: sub_1409FA010+AFEA↓j
                xor     ebx, eax

loc_140A04FF3:                          ; CODE XREF: sub_1409FA010+AA20↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A04FF1
                btr     ebx, 1Fh
                mov     [rbp+0BE0h+var_C60], rbx
                jmp     loc_140A052A7
; ---------------------------------------------------------------------------

loc_140A05009:                          ; CODE XREF: sub_1409FA010+A912↑j
                mov     r8d, r15d
                mov     rdx, r13
                mov     rcx, rsi
                call    sub_140A115E8
                mov     ebx, eax
                mov     eax, r15d
                shl     eax, 3
                add     [rsi+828h], eax
                mov     eax, [rsi+994h]
                mov     [rbp+0BE0h+var_C60], rbx
                bt      eax, 0Bh
                jnb     loc_140A052A7
                lea     rbx, [r13-6]
                xor     r10d, r10d
                lea     r14, [rbx+5]
                mov     al, [r14]
                cmp     byte ptr [rbx], 4Ch ; 'L'
                jnz     loc_140A05242
                cmp     byte ptr [rbx+1], 87h
                jnz     loc_140A05242
                cmp     [rbx+2], r10b
                jnz     loc_140A05242
                cmp     byte ptr [rbx+3], 98h
                jnz     loc_140A05242
                cmp     byte ptr [rbx+4], 0C3h
                jnz     loc_140A05242
                cmp     al, 90h
                jz      short loc_140A05084
                cmp     al, 0F1h
                jnz     loc_140A05242

loc_140A05084:                          ; CODE XREF: sub_1409FA010+B06A↑j
                mov     rcx, [rsi+4E0h]

loc_140A0508B:                          ; CODE XREF: sub_1409FA010+B091↓j
                cli
                mov     eax, [rsi+990h]
                shr     eax, 0Ah
                and     eax, 1Fh
                lock bts [rcx], eax
                jnb     short loc_140A050A3
                sti
                pause
                jmp     short loc_140A0508B
; ---------------------------------------------------------------------------

loc_140A050A3:                          ; CODE XREF: sub_1409FA010+B08C↑j
                mov     rdx, [rsi+8E0h]
                mov     r8d, 26h ; '&'
                mov     ecx, 130h
                mov     rax, rdx
                lea     r9d, [r8-25h]

loc_140A050BC:                          ; CODE XREF: sub_1409FA010+B0B9↓j
                mov     [rax], r10
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     r8, r9
                jnz     short loc_140A050BC
                test    ecx, ecx
                jz      short loc_140A050E0
                mov     r8d, 0FFFFFFFFh

loc_140A050D5:                          ; CODE XREF: sub_1409FA010+B0CE↓j
                mov     [rax], r10b
                add     rax, r9
                add     ecx, r8d
                jnz     short loc_140A050D5

loc_140A050E0:                          ; CODE XREF: sub_1409FA010+B0BD↑j
                movups  xmm0, xmmword ptr [rsi+848h]
                mov     eax, 12Fh
                movdqu  xmmword ptr [rdx+10h], xmm0
                movups  xmm1, xmmword ptr [rsi+858h]
                movdqu  xmmword ptr [rdx+20h], xmm1
                movups  xmm0, xmmword ptr [rsi+868h]
                movdqu  xmmword ptr [rdx+120h], xmm0
                mov     word ptr [rbp+0BE0h+var_8E0], ax
                lea     rax, [rsi+88Ch]
                mov     qword ptr [rbp+0BE0h+var_8E0+2], rdx
                mov     rcx, rax
                mov     [rdx+10h], ax
                shr     rcx, 10h
                mov     [rbp+0BE0h+var_5C0], rax
                shr     rax, 20h
                mov     [rdx+16h], cx
                mov     [rdx+18h], eax
                sidt    fword ptr [rbp+0BE0h+var_740]
                lidt    fword ptr [rbp+0BE0h+var_8E0]
                mov     byte ptr [r14], 0F1h
                mov     al, [r14]
                cmp     al, 0F1h
                jnz     loc_140A051FD
                test    dword ptr [rsi+994h], 20000h
                jnz     short loc_140A051AD
                mov     rdx, gs:20h
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     rax, [rsi+4C0h]
                add     rcx, rsi
                mov     [rax], rcx
                lea     rcx, [rbx+6]
                mov     rax, [rsi+4C8h]
                mov     [rax], rdx
                mov     rax, [rsi+4D0h]
                mov     [rax], rcx
                mov     rax, [rsi+4D8h]
                mov     qword ptr [rax], 113h

loc_140A051AD:                          ; CODE XREF: sub_1409FA010+B155↑j
                mov     rax, r14
                call    j__guard_dispatch_icall_nop
                xor     r10d, r10d
                test    dword ptr [rsi+994h], 20000h
                jnz     short loc_140A051F6
                mov     rax, [rsi+4C0h]
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     [rax], rcx
                mov     rax, [rsi+4C8h]
                mov     [rax], r10
                mov     rax, [rsi+4D0h]
                mov     [rax], r10
                mov     rax, [rsi+4D8h]
                mov     [rax], r10

loc_140A051F6:                          ; CODE XREF: sub_1409FA010+B1B2↑j
                mov     al, [r14]
                cmp     al, 0F1h
                jz      short loc_140A05202

loc_140A051FD:                          ; CODE XREF: sub_1409FA010+B145↑j
                mov     r9d, r10d
                jmp     short loc_140A05215
; ---------------------------------------------------------------------------

loc_140A05202:                          ; CODE XREF: sub_1409FA010+B1EB↑j
                mov     byte ptr [r14], 90h
                mov     r9d, 1
                mov     al, [r14]
                cmp     al, 90h
                cmovnz  r9d, r10d

loc_140A05215:                          ; CODE XREF: sub_1409FA010+B1F0↑j
                lidt    fword ptr [rbp+0BE0h+var_740]
                mov     ecx, [rsi+990h]
                mov     edx, 1
                mov     r8, [rsi+4E0h]
                shr     ecx, 0Ah
                and     ecx, 1Fh
                shl     edx, cl
                not     edx
                lock and [r8], edx
                sti
                test    r9d, r9d
                jnz     short loc_140A0529E

loc_140A05242:                          ; CODE XREF: sub_1409FA010+B03A↑j
                                        ; sub_1409FA010+B044↑j ...
                cmp     [rsi+8F8h], r10d
                jnz     short loc_140A0529E
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A0529E:                          ; CODE XREF: sub_1409FA010+B230↑j
                                        ; sub_1409FA010+B239↑j
                mov     rbx, [rbp+0BE0h+var_C60]
                mov     r14, [rsp+0CE0h+var_C88]

loc_140A052A7:                          ; CODE XREF: sub_1409FA010+AFF4↑j
                                        ; sub_1409FA010+B023↑j
                mov     ecx, [r12]
                mov     eax, ecx
                btr     eax, 1Fh
                cmp     ebx, eax
                jz      loc_140A05366
                mov     edx, r15d
                xor     r15d, r15d
                test    rdx, rdx
                jz      loc_140A053EA
                mov     eax, [rsi+994h]
                lea     r8d, [r15+40h]
                test    r8b, al
                jz      loc_140A053EA
                mov     r15, cr8
                lea     eax, [r8-3Eh]
                mov     cr8, rax
                mov     rbx, r13
                dec     r13
                and     rbx, 0FFFFFFFFFFFFF000h
                add     r13, rdx
                or      r13, 0FFFh
                lea     r12, [rbx-1]

loc_140A05302:                          ; CODE XREF: sub_1409FA010+B347↓j
                movzx   r14d, r15b

loc_140A05306:                          ; CODE XREF: sub_1409FA010+B32F↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A05341
                mov     eax, 1
                cmp     r15b, al
                ja      short loc_140A05349
                movzx   r14d, r15b
                mov     cr8, r14
                mov     al, [rbx]
                mov     rax, cr8
                mov     eax, 2
                mov     cr8, rax
                jmp     short loc_140A05306
; ---------------------------------------------------------------------------

loc_140A05341:                          ; CODE XREF: sub_1409FA010+B30C↑j
                test    eax, eax
                js      loc_140A053D2

loc_140A05349:                          ; CODE XREF: sub_1409FA010+B316↑j
                mov     eax, 1000h
                add     rbx, rax
                add     r12, rax
                cmp     r12, r13
                jnz     short loc_140A05302
                mov     cr8, r14
                mov     r14, [rsp+0CE0h+var_C88]
                mov     r12, [rbp+0BE0h+var_C50]

loc_140A05366:                          ; CODE XREF: sub_1409FA010+B2A3↑j
                xor     r15d, r15d

loc_140A05369:                          ; CODE XREF: sub_1409FA010+A8ED↑j
                                        ; sub_1409FA010+B45C↓j
                add     r12, 4
                add     r14, 0Ch
                mov     [rbp+0BE0h+var_C50], r12
                mov     [rsp+0CE0h+var_C88], r14
                cmp     r14, rdi
                jnb     short loc_140A05398
                mov     rax, [rbp+0BE0h+var_C08]
                mov     r10d, dword ptr [rbp+0BE0h+arg_8]
                mov     eax, [rax]
                cmp     [rsi+828h], eax
                jl      loc_140A048F9

loc_140A05398:                          ; CODE XREF: sub_1409FA010+B36D↑j
                mov     rdi, 0FFFFFFFFB8797400h
                cmp     r14, [rbp+0BE0h+var_C20]
                jz      loc_140A05471
                sub     r14, [rbp+0BE0h+var_C10]
                mov     rax, 2AAAAAAAAAAAAAABh
                imul    r14
                sar     rdx, 1
                mov     rax, rdx
                shr     rax, 3Fh
                add     rdx, rax
                mov     [rsi+824h], edx
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A053D2:                          ; CODE XREF: sub_1409FA010+B333↑j
                mov     cr8, r14
                mov     r12, [rbp+0BE0h+var_C50]
                xor     r15d, r15d
                mov     rbx, [rbp+0BE0h+var_C60]
                mov     r13, [rsp+0CE0h+var_C70]
                mov     ecx, [r12]

loc_140A053EA:                          ; CODE XREF: sub_1409FA010+B2B2↑j
                                        ; sub_1409FA010+B2C5↑j
                mov     eax, ecx
                mov     ecx, [rsi+8F8h]
                btr     eax, 1Fh
                test    ecx, ecx
                jnz     short loc_140A05467
                mov     ecx, ebx
                xor     rcx, rax
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx
                mov     ecx, [rsi+8F8h]
                test    ecx, ecx
                jnz     short loc_140A05467
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], r13
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A05467:                          ; CODE XREF: sub_1409FA010+B3E8↑j
                                        ; sub_1409FA010+B402↑j
                mov     r14, [rsp+0CE0h+var_C88]
                jmp     loc_140A05369
; ---------------------------------------------------------------------------

loc_140A05471:                          ; CODE XREF: sub_1409FA010+A8DF↑j
                                        ; sub_1409FA010+B393↑j
                mov     rcx, [rsi+540h]
                mov     r15, cr8
                mov     eax, 0Fh
                mov     cr8, rax
                mov     rax, [rsi+150h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+610h]
                mov     r14, [rsp+0CE0h+var_C90]
                mov     rcx, [rax]
                mov     eax, [rcx]
                lea     rbx, [rcx+10h]
                mov     r12b, [rcx+0Ch]
                lea     rcx, [rax+rax*2]
                lea     r13, [rbx+rcx*8]

loc_140A054B2:                          ; CODE XREF: sub_1409FA010+B4FD↓j
                mov     r8d, 18h
                lea     r9, [r14+18h]
                mov     r10, rbx

loc_140A054BF:                          ; CODE XREF: sub_1409FA010+B4CA↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A05506
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A054BF
                test    r8d, r8d
                jz      short loc_140A0550F
                mov     r11d, 1

loc_140A054E7:                          ; CODE XREF: sub_1409FA010+B4F4↓j
                movzx   edx, byte ptr [r10]
                add     r10, r11
                movzx   eax, byte ptr [r9]
                add     r9, r11
                cmp     rdx, rax
                jnz     short loc_140A05506
                mov     eax, 0FFFFFFFFh
                add     r8d, eax
                jz      short loc_140A0550F
                jmp     short loc_140A054E7
; ---------------------------------------------------------------------------

loc_140A05506:                          ; CODE XREF: sub_1409FA010+B4C0↑j
                                        ; sub_1409FA010+B4E8↑j
                add     rbx, 18h
                cmp     rbx, r13
                jb      short loc_140A054B2

loc_140A0550F:                          ; CODE XREF: sub_1409FA010+B4CF↑j
                                        ; sub_1409FA010+B4F2↑j
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rcx, [rsi+540h]
                mov     rax, [rsi+190h]
                call    j__guard_dispatch_icall_nop
                movzx   eax, r15b
                mov     cr8, rax
                xor     r15d, r15d
                test    r12b, r12b
                jz      short loc_140A055B1
                mov     eax, [rsi+994h]
                lea     ecx, [r15+10h]
                test    cl, al
                jz      short loc_140A055A0
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A055A0
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                lea     eax, [r15+1]
                mov     [rsi+918h], rax
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A055A0:                          ; CODE XREF: sub_1409FA010+B533↑j
                                        ; sub_1409FA010+B53C↑j
                mov     edx, 1
                cmp     [r14+18h], rdx
                jz      loc_140A0244D
                jmp     short loc_140A055B6
; ---------------------------------------------------------------------------

loc_140A055B1:                          ; CODE XREF: sub_1409FA010+B525↑j
                mov     edx, 1

loc_140A055B6:                          ; CODE XREF: sub_1409FA010+B59F↑j
                cmp     rbx, r13
                jnz     loc_140A0244D
                cmp     [rsi+8F8h], r15d
                jnz     loc_140A0244D
                mov     rcx, [rsp+0CE0h+var_C90]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rsi
                mov     [rsi+910h], rax
                mov     [rsi+918h], rbx
                mov     [rsi+8F8h], edx
                xor     edx, edx
                call    sub_140A113CC
                jmp     loc_140A0244D
; ---------------------------------------------------------------------------

loc_140A0561F:                          ; CODE XREF: sub_1409FA010+8FD4↑j
                mov     eax, [r13+24h]
                add     [rsi+828h], eax
                mov     ebx, [r13+20h]
                mov     r9d, [r13+24h]
                add     rbx, rsi
                mov     r11d, [rsi+814h]
                mov     r10, rbx
                mov     r15, [rsi+818h]
                mov     rax, rbx
                lea     rcx, [rbx+r9]
                cmp     rbx, rcx
                jnb     short loc_140A05661
                mov     edx, 40h ; '@'

loc_140A05656:                          ; CODE XREF: sub_1409FA010+B64F↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A05656

loc_140A05661:                          ; CODE XREF: sub_1409FA010+B63F↑j
                mov     r14d, r9d
                mov     r8, r15
                shr     r14d, 7
                mov     r12d, 1
                test    r14d, r14d
                jz      short loc_140A056E1
                mov     rsi, 7010008004002001h

loc_140A05680:                          ; CODE XREF: sub_1409FA010+B6CA↓j
                mov     edx, 8

loc_140A05685:                          ; CODE XREF: sub_1409FA010+B692↓j
                mov     rax, [r10]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r12
                jnz     short loc_140A05685
                mov     rcx, r10
                sub     rcx, rbx
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r11d, eax
                mov     [rbp+0BE0h+var_5B8], rdx
                xor     r11d, edx
                mov     eax, 0FFFFFFFFh
                and     r11d, 3Fh
                cmovz   r11d, r12d
                add     r14d, eax
                jnz     short loc_140A05680
                mov     rsi, [rsp+0CE0h+var_C80]

loc_140A056E1:                          ; CODE XREF: sub_1409FA010+B664↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_140A05708
                mov     edx, r9d
                shr     rdx, 3

loc_140A056F2:                          ; CODE XREF: sub_1409FA010+B6F6↓j
                xor     r8, [r10]
                mov     ecx, r11d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r12
                jnz     short loc_140A056F2

loc_140A05708:                          ; CODE XREF: sub_1409FA010+B6D9↑j
                xor     r15d, r15d
                test    r9d, r9d
                jz      short loc_140A0572E
                mov     r15d, 0FFFFFFFFh

loc_140A05716:                          ; CODE XREF: sub_1409FA010+B719↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r11d
                xor     r8, rax
                add     r10, r12
                rol     r8, cl
                add     r9d, r15d
                jnz     short loc_140A05716
                xor     r15d, r15d

loc_140A0572E:                          ; CODE XREF: sub_1409FA010+B6FE↑j
                mov     rcx, [r13+18h]
                cmp     r8, rcx
                jz      loc_1409FB31B
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A05759
                mov     rax, [rsi+590h]
                xor     rcx, r8
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A05759:                          ; CODE XREF: sub_1409FA010+B733↑j
                mov     ecx, [r13+20h]
                add     rcx, rsi
                test    eax, eax
                jmp     loc_140A03866
; ---------------------------------------------------------------------------

loc_140A05767:                          ; CODE XREF: sub_1409FA010+12F3↑j
                                        ; sub_1409FA010+6A3D↑j ...
                mov     ebx, 0Fh

loc_140A0576C:                          ; CODE XREF: sub_1409FA010+2877↑j
                sub     r10d, 2
                jz      loc_140A05F48
                sub     r10d, 1
                jz      loc_140A05B3A
                cmp     r10d, 14h
                jz      short loc_140A057D5
                xor     r15d, r15d
                cmp     [rsi+8F8h], r15d
                jnz     loc_1409FB31B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r13
                mov     [rsi+908h], rax
                mov     qword ptr [rsi+910h], 101h
                mov     [rsi+918h], r15
                jmp     loc_140A04868
; ---------------------------------------------------------------------------

loc_140A057D5:                          ; CODE XREF: sub_1409FA010+B774↑j
                mov     edx, [r13+28h]
                lea     rcx, [rbp+0BE0h+var_2E0]
                mov     rax, [rsi+1A0h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+1D0h]
                lea     rdx, [rbp+0BE0h+var_2D0]
                lea     rcx, [rbp+0BE0h+var_2E0]
                call    j__guard_dispatch_icall_nop
                mov     r8, [rsi+0A10h]
                xor     r15d, r15d
                test    r8, r8
                jz      short loc_140A05825
                mov     ebx, [r8+320h]
                mov     r8, [rsi+0A10h]
                jmp     short loc_140A05836
; ---------------------------------------------------------------------------

loc_140A05825:                          ; CODE XREF: sub_1409FA010+B803↑j
                mov     ecx, 832h
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     rbx, rax

loc_140A05836:                          ; CODE XREF: sub_1409FA010+B813↑j
                test    r8, r8
                jz      short loc_140A05844
                mov     r14d, [r8+340h]
                jmp     short loc_140A05855
; ---------------------------------------------------------------------------

loc_140A05844:                          ; CODE XREF: sub_1409FA010+B829↑j
                mov     ecx, 834h
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     r14, rax

loc_140A05855:                          ; CODE XREF: sub_1409FA010+B832↑j
                mov     rax, [rsi+198h]
                lea     rcx, [rbp+0BE0h+var_2D0]
                call    j__guard_dispatch_icall_nop
                mov     ecx, 10h
                test    [rsi+87Bh], cl
                jz      loc_140A059BE
                cli
                mov     rdx, [rsi+8E0h]
                mov     r8d, 26h ; '&'
                mov     ecx, 130h
                mov     rax, rdx
                lea     r12d, [r8-25h]

loc_140A05893:                          ; CODE XREF: sub_1409FA010+B890↓j
                mov     [rax], r15
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     r8, r12
                jnz     short loc_140A05893
                test    ecx, ecx
                jz      short loc_140A058B7
                mov     r8d, 0FFFFFFFFh

loc_140A058AC:                          ; CODE XREF: sub_1409FA010+B8A5↓j
                mov     [rax], r15b
                add     rax, r12
                add     ecx, r8d
                jnz     short loc_140A058AC

loc_140A058B7:                          ; CODE XREF: sub_1409FA010+B894↑j
                movups  xmm0, xmmword ptr [rsi+848h]
                mov     eax, 12Fh
                movdqu  xmmword ptr [rdx+10h], xmm0
                movups  xmm1, xmmword ptr [rsi+858h]
                movdqu  xmmword ptr [rdx+20h], xmm1
                movups  xmm0, xmmword ptr [rsi+868h]
                movdqu  xmmword ptr [rdx+120h], xmm0
                mov     word ptr [rbp+0BE0h+var_920], ax
                lea     rax, [rsi+878h]
                mov     qword ptr [rbp+0BE0h+var_920+2], rdx
                mov     rcx, rax
                mov     [rdx+10h], ax
                shr     rcx, 10h
                mov     [rbp+0BE0h+var_5B0], rax
                shr     rax, 20h
                mov     [rdx+16h], cx
                mov     [rdx+18h], eax
                sidt    fword ptr [rbp+0BE0h+var_770]
                lidt    fword ptr [rbp+0BE0h+var_920]
                test    dword ptr [rsi+994h], 20000h
                jnz     short loc_140A05971
                mov     rdx, gs:20h
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     rax, [rsi+4C0h]
                add     rcx, rsi
                mov     [rax], rcx
                mov     rax, [rsi+4C8h]
                mov     [rax], rdx
                mov     rax, [rsi+4D0h]
                mov     [rax], r15
                mov     rax, [rsi+4D8h]
                mov     qword ptr [rax], 115h

loc_140A05971:                          ; CODE XREF: sub_1409FA010+B91D↑j
                call    sub_140A12FA0
                test    dword ptr [rsi+994h], 20000h
                jnz     short loc_140A059B4
                mov     rax, [rsi+4C0h]
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     [rax], rcx
                mov     rax, [rsi+4C8h]
                mov     [rax], r15
                mov     rax, [rsi+4D0h]
                mov     [rax], r15
                mov     rax, [rsi+4D8h]
                mov     [rax], r15

loc_140A059B4:                          ; CODE XREF: sub_1409FA010+B970↑j
                lidt    fword ptr [rbp+0BE0h+var_770]
                sti
                jmp     short loc_140A059C4
; ---------------------------------------------------------------------------

loc_140A059BE:                          ; CODE XREF: sub_1409FA010+B863↑j
                mov     r12d, 1

loc_140A059C4:                          ; CODE XREF: sub_1409FA010+B9AC↑j
                mov     eax, [r13+1Ch]
                mov     r8d, [r13+18h]
                and     eax, ebx
                cmp     eax, r8d
                jnz     short loc_140A059F2
                bt      ebx, 10h
                jb      loc_140A05A7C
                cmp     bl, 0D1h
                jz      loc_140A05A7C
                lea     eax, [rbx+3]
                cmp     al, r12b
                jbe     loc_140A05A7C

loc_140A059F2:                          ; CODE XREF: sub_1409FA010+B9C1↑j
                mov     edx, [r13+28h]
                mov     rax, 32000000000h
                shl     rdx, 30h
                or      rdx, r8
                or      rdx, rax
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A05A7C
                mov     rax, [rsi+590h]
                mov     ecx, ebx
                xor     rcx, r8
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A05A7C
                mov     rax, 0A3A03F5891C8B4E8h
                mov     rbx, 0B3B74BDEE4453415h
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                lea     rax, [rbx+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdx
                xor     edx, edx
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC
                jmp     short loc_140A05A86
; ---------------------------------------------------------------------------

loc_140A05A7C:                          ; CODE XREF: sub_1409FA010+B9C7↑j
                                        ; sub_1409FA010+B9D0↑j ...
                mov     rbx, 0B3B74BDEE4453415h

loc_140A05A86:                          ; CODE XREF: sub_1409FA010+BA6A↑j
                mov     eax, [r13+24h]
                mov     r8d, [r13+20h]
                and     eax, r14d
                cmp     eax, r8d
                jnz     short loc_140A05AB8
                bt      r14d, 10h
                jb      loc_140A05F36
                cmp     r14b, 0D1h
                jz      loc_140A05F36
                lea     eax, [r14+3]
                cmp     al, r12b
                jbe     loc_140A05F36

loc_140A05AB8:                          ; CODE XREF: sub_1409FA010+BA84↑j
                mov     edx, [r13+28h]
                mov     rax, 34000000000h
                shl     rdx, 30h
                or      rdx, r8
                or      rdx, rax
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     loc_140A05F36
                mov     rax, [rsi+590h]
                mov     ecx, r14d
                xor     rcx, r8
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     loc_140A05F36
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                lea     rax, [rbx+r13]
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r13+0]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rdx
                mov     [rsi+8F8h], r12d
                jmp     loc_140A05F2C
; ---------------------------------------------------------------------------

loc_140A05B3A:                          ; CODE XREF: sub_1409FA010+B76A↑j
                mov     edx, [r13+28h]
                lea     rcx, [rbp+0BE0h+var_2C0]
                mov     rax, [rsi+1A0h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+1D0h]
                lea     rdx, [rbp+0BE0h+var_2B0]
                lea     rcx, [rbp+0BE0h+var_2C0]
                call    j__guard_dispatch_icall_nop
                lea     rdx, [rbp+0BE0h+var_190]
                lea     rcx, [rbp+0BE0h+var_998]
                call    sub_140A12F60
                mov     r15, [rbp+0BE0h+var_996]
                mov     ecx, 2
                mov     r14d, [r13+10h]
                test    [rsi+87Bh], cl
                jz      loc_140A05CC6
                mov     rdx, [rsi+8E0h]
                mov     r8d, 26h ; '&'
                mov     ecx, 130h
                mov     rax, rdx
                xor     r12d, r12d
                lea     r9d, [r8-25h]

loc_140A05BB6:                          ; CODE XREF: sub_1409FA010+BBB3↓j
                mov     [rax], r12
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     r8, r9
                jnz     short loc_140A05BB6
                test    ecx, ecx
                jz      short loc_140A05BDA
                mov     r8d, 0FFFFFFFFh

loc_140A05BCF:                          ; CODE XREF: sub_1409FA010+BBC8↓j
                mov     [rax], r12b
                add     rax, r9
                add     ecx, r8d
                jnz     short loc_140A05BCF

loc_140A05BDA:                          ; CODE XREF: sub_1409FA010+BBB7↑j
                movups  xmm0, xmmword ptr [rsi+848h]
                mov     eax, 12Fh
                movdqu  xmmword ptr [rdx+10h], xmm0
                movups  xmm1, xmmword ptr [rsi+858h]
                movdqu  xmmword ptr [rdx+20h], xmm1
                movups  xmm0, xmmword ptr [rsi+868h]
                movdqu  xmmword ptr [rdx+120h], xmm0
                mov     word ptr [rbp+0BE0h+var_910], ax
                lea     rax, [rsi+878h]
                mov     qword ptr [rbp+0BE0h+var_910+2], rdx
                mov     rcx, rax
                mov     [rdx+10h], ax
                shr     rcx, 10h
                mov     [rbp+0BE0h+var_5A8], rax
                shr     rax, 20h
                mov     [rdx+16h], cx
                mov     [rdx+18h], eax
                cli
                sidt    fword ptr [rbp+0BE0h+var_750]
                lidt    fword ptr [rbp+0BE0h+var_910]
                mov     dr7, r12
                lea     rax, [rsi+87Eh]
                mov     [rdx+10h], ax
                mov     rcx, rax
                shr     rcx, 10h
                shr     rax, 20h
                mov     [rdx+16h], cx
                mov     [rdx+18h], eax
                test    byte ptr [rsi+87Bh], 20h
                jnz     short loc_140A05C7F
                call    sub_140A12FD0
                mov     [rsi+8E8h], rax
                jmp     short loc_140A05CB0
; ---------------------------------------------------------------------------

loc_140A05C7F:                          ; CODE XREF: sub_1409FA010+BC5F↑j
                lea     rbx, [rsi+8AAh]
                call    sub_140A12F80
                mov     [rbx], ax
                mov     dr0, rbx
                mov     eax, 70001h
                mov     dr7, rax
                mov     rcx, rbx
                call    sub_140A12FC0
                mov     [rsi+8E8h], rax
                mov     dr7, r12
                mov     dr0, r12

loc_140A05CB0:                          ; CODE XREF: sub_1409FA010+BC6D↑j
                mov     eax, gs:1A4h
                mov     [rsi+8F0h], eax
                lidt    fword ptr [rbp+0BE0h+var_750]
                sti

loc_140A05CC6:                          ; CODE XREF: sub_1409FA010+BB84↑j
                call    sub_140A12F70
                movzx   r12d, ax
                call    sub_140A12F90
                add     [rsi+828h], r14d
                lea     rcx, [r15+r14]
                mov     r9d, [rsi+814h]
                movzx   r13d, ax
                mov     r11, [rsi+818h]
                mov     r8, r15
                mov     rax, r15
                cmp     r15, rcx
                jnb     short loc_140A05D0C
                mov     edx, 40h ; '@'

loc_140A05D01:                          ; CODE XREF: sub_1409FA010+BCFA↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A05D01

loc_140A05D0C:                          ; CODE XREF: sub_1409FA010+BCEA↑j
                mov     r10d, r14d
                mov     rbx, r11
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A05D93
                mov     rdi, 7010008004002001h

loc_140A05D25:                          ; CODE XREF: sub_1409FA010+BD75↓j
                mov     edx, 8
                lea     esi, [rdx-7]

loc_140A05D2D:                          ; CODE XREF: sub_1409FA010+BD3A↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, rsi
                jnz     short loc_140A05D2D
                mov     rcx, r8
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r9d, eax
                mov     [rbp+0BE0h+var_5A0], rdx
                xor     r9d, edx
                mov     rax, rsi
                and     r9d, 3Fh
                cmovz   r9d, eax
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_140A05D25
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A05D93:                          ; CODE XREF: sub_1409FA010+BD09↑j
                and     r14d, 7Fh
                mov     r10d, 1
                cmp     r14d, 8
                jb      short loc_140A05DC0
                mov     edx, r14d
                shr     rdx, 3

loc_140A05DAA:                          ; CODE XREF: sub_1409FA010+BDAE↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     r14d, 0FFFFFFF8h
                sub     rdx, r10
                jnz     short loc_140A05DAA

loc_140A05DC0:                          ; CODE XREF: sub_1409FA010+BD91↑j
                xor     r15d, r15d
                test    r14d, r14d
                jz      short loc_140A05DE6
                mov     r15d, 0FFFFFFFFh

loc_140A05DCE:                          ; CODE XREF: sub_1409FA010+BDD1↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r10
                rol     rbx, cl
                add     r14d, r15d
                jnz     short loc_140A05DCE
                xor     r15d, r15d

loc_140A05DE6:                          ; CODE XREF: sub_1409FA010+BDB6↑j
                mov     rax, rbx
                jmp     short loc_140A05DED
; ---------------------------------------------------------------------------

loc_140A05DEB:                          ; CODE XREF: sub_1409FA010+BDE4↓j
                xor     ebx, eax

loc_140A05DED:                          ; CODE XREF: sub_1409FA010+BDD9↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A05DEB
                mov     rax, [rsi+198h]
                lea     rcx, [rbp+0BE0h+var_2B0]
                btr     ebx, 1Fh
                call    j__guard_dispatch_icall_nop
                mov     r9, [rsp+0CE0h+var_C90]
                mov     r11d, 40h ; '@'
                cmp     ebx, [r9+14h]
                jnz     short loc_140A05E3C
                movzx   eax, word ptr [r9+2Ch]
                cmp     [rbp+0BE0h+var_998], ax
                jnz     short loc_140A05E3C
                test    r12w, r12w
                jnz     short loc_140A05E3C
                cmp     r13w, r11w
                jz      loc_140A05F36

loc_140A05E3C:                          ; CODE XREF: sub_1409FA010+BE0C↑j
                                        ; sub_1409FA010+BE1A↑j ...
                test    dword ptr [rsi+990h], 40000000h
                mov     r10d, 1
                jz      short loc_140A05E97
                mov     rcx, [rsi+0A80h]
                lea     edx, [r10+2Fh]
                lea     r8d, [r10+5]

loc_140A05E5D:                          ; CODE XREF: sub_1409FA010+BE61↓j
                mov     rax, [r9]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r9, 8
                add     rcx, 8
                sub     r8, r10
                jnz     short loc_140A05E5D
                test    edx, edx
                jz      short loc_140A05E90
                mov     r15d, 0FFFFFFFFh

loc_140A05E7D:                          ; CODE XREF: sub_1409FA010+BE7B↓j
                mov     al, [r9]
                add     r9, r10
                mov     [rcx], al
                add     rcx, r10
                add     edx, r15d
                jnz     short loc_140A05E7D
                xor     r15d, r15d

loc_140A05E90:                          ; CODE XREF: sub_1409FA010+BE65↑j
                mov     r9, [rsi+0A80h]

loc_140A05E97:                          ; CODE XREF: sub_1409FA010+BE3C↑j
                mov     rax, [rbp+0BE0h+var_996]
                mov     ecx, ebx
                mov     [r9+18h], rax
                mov     [r9+20h], rcx
                test    r12w, r12w
                jz      short loc_140A05EB4
                movzx   eax, r12w
                jmp     short loc_140A05EBE
; ---------------------------------------------------------------------------

loc_140A05EB4:                          ; CODE XREF: sub_1409FA010+BE9C↑j
                cmp     r13w, r11w
                jz      short loc_140A05EC2
                movzx   eax, r13w

loc_140A05EBE:                          ; CODE XREF: sub_1409FA010+BEA2↑j
                mov     [r9+18h], rax

loc_140A05EC2:                          ; CODE XREF: sub_1409FA010+BEA8↑j
                mov     eax, [rsi+8F8h]
                mov     edx, [r9+14h]
                test    eax, eax
                jnz     short loc_140A05EE4
                mov     rax, [rsi+590h]
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A05EE4:                          ; CODE XREF: sub_1409FA010+BEBE↑j
                mov     rcx, [r9+8]
                test    eax, eax
                jnz     short loc_140A05F36
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r9
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r9]
                mov     [rsi+910h], rax
                mov     [rsi+918h], rcx
                mov     [rsi+8F8h], r10d

loc_140A05F2C:                          ; CODE XREF: sub_1409FA010+BB25↑j
                xor     edx, edx
                mov     rcx, rsi
                call    sub_140A113CC

loc_140A05F36:                          ; CODE XREF: sub_1409FA010+BA8B↑j
                                        ; sub_1409FA010+BA95↑j ...
                mov     r14d, 8000h
                add     [rsi+828h], r14d
                jmp     loc_1409FB321
; ---------------------------------------------------------------------------

loc_140A05F48:                          ; CODE XREF: sub_1409FA010+B760↑j
                mov     edx, [r13+28h]
                lea     rcx, [rbp+0BE0h+var_2A0]
                mov     rax, [rsi+1A0h]
                xor     r15d, r15d
                mov     dword ptr [rbp+0BE0h+var_BF8], r15d
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+1D0h]
                lea     rdx, [rbp+0BE0h+var_290]
                lea     rcx, [rbp+0BE0h+var_2A0]
                call    j__guard_dispatch_icall_nop
                lea     rdx, [rbp+0BE0h+var_900]
                lea     rcx, [rbp+0BE0h+var_180]
                call    sub_140A12F60
                mov     rcx, [rbp+0BE0h+var_8FE]
                mov     edi, r15d
                mov     [rsp+0CE0h+var_C70], rcx
                add     rcx, 4
                mov     [rsp+0CE0h+var_C88], rcx

loc_140A05FAB:                          ; CODE XREF: sub_1409FA010+C23A↓j
                mov     rax, [rsi+8C8h]
                mov     r10, r15
                mov     [rbp+0BE0h+var_B00], rax
                mov     r14, r15
                mov     r8, [rsi+8D0h]
                mov     r12d, [rsi+8ACh]
                mov     r13d, [rsi+8B0h]
                mov     [rbp+0BE0h+var_C60], r8
                mov     [rsp+0CE0h+var_C68], r15
                mov     [rbp+0BE0h+var_C50], r15
                mov     r15, cr8
                mov     cr8, rbx
                movzx   eax, word ptr [rcx-4]
                movzx   r9d, word ptr [rcx]
                mov     word ptr [rbp+0BE0h+var_BD8], ax
                movzx   eax, word ptr [rcx+2]
                mov     word ptr [rbp+0BE0h+var_BD8+2], ax
                mov     eax, [rcx+4]
                mov     rcx, [rsi+618h]
                mov     dword ptr [rbp+0BE0h+var_BD8+4], eax
                mov     rbx, [rbp+0BE0h+var_BD8]
                mov     eax, edi
                mov     word ptr [rbp+0BE0h+arg_8], r9w
                lea     rdx, [rcx+rax*8]
                cmp     rbx, rdx
                jnz     short loc_140A06089
                mov     eax, 6000h
                test    ax, r9w
                jz      short loc_140A0603C
                movzx   eax, r15b
                mov     cr8, rax
                xor     r15d, r15d
                jmp     loc_140A06200
; ---------------------------------------------------------------------------

loc_140A0603C:                          ; CODE XREF: sub_1409FA010+C01A↑j
                mov     rax, [rsi+470h]
                mov     ecx, edi
                call    j__guard_dispatch_icall_nop
                mov     r14, [rax]
                test    r14, r14
                jz      short loc_140A0607B
                mov     r12, [r12+r14]
                mov     [rsp+0CE0h+var_C68], r12
                cmp     edi, 30h ; '0'
                jnb     short loc_140A06070
                movzx   eax, r15b
                mov     cr8, rax
                xor     r15d, r15d
                jmp     loc_140A061FB
; ---------------------------------------------------------------------------

loc_140A06070:                          ; CODE XREF: sub_1409FA010+C04E↑j
                mov     r13, [r13+r14+0]
                mov     r8, [rbp+0BE0h+var_C60]
                jmp     short loc_140A06091
; ---------------------------------------------------------------------------

loc_140A0607B:                          ; CODE XREF: sub_1409FA010+C040↑j
                mov     r8, [rbp+0BE0h+var_C60]
                or      r14, 0FFFFFFFFFFFFFFFFh
                mov     r13, [rbp+0BE0h+var_C50]
                jmp     short loc_140A0608C
; ---------------------------------------------------------------------------

loc_140A06089:                          ; CODE XREF: sub_1409FA010+C00F↑j
                mov     r13, r10

loc_140A0608C:                          ; CODE XREF: sub_1409FA010+C077↑j
                mov     r12, [rsp+0CE0h+var_C68]

loc_140A06091:                          ; CODE XREF: sub_1409FA010+C069↑j
                movzx   eax, r15b
                mov     cr8, rax
                xor     r15d, r15d
                test    r14, r14
                jnz     short loc_140A060EA
                mov     rdx, [rbp+0BE0h+var_B00]
                cmp     rbx, rdx
                jb      loc_140A061FB
                cmp     rbx, r8
                ja      loc_140A061FB
                mov     r8d, dword ptr [rbp+0BE0h+var_BD8]
                mov     rcx, [rsi+8D8h]
                sub     r8d, edx
                mov     rax, [rsi+210h]
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      loc_140A061FB
                mov     eax, [rax+24h]
                bt      eax, 19h
                jb      loc_140A061FB

loc_140A060EA:                          ; CODE XREF: sub_1409FA010+C08F↑j
                mov     rax, [rsp+0CE0h+var_C88]
                mov     ecx, 10h
                cmp     [rax-2], cx
                jnz     loc_140A061FB
                movzx   ecx, word ptr [rax]
                mov     edx, 1F00h
                movzx   eax, cx
                and     ax, dx
                mov     edx, 0E00h
                cmp     ax, dx
                jnz     loc_140A061FB
                mov     eax, 8000h
                test    ax, cx
                jz      loc_140A061FB
                mov     rax, [rsi+260h]
                lea     rdx, [rbp+0BE0h+var_B00]
                xor     r8d, r8d
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      short loc_140A0616A
                mov     eax, [rax]
                mov     rcx, [rbp+0BE0h+var_B00]
                add     rax, rcx
                cmp     rax, rbx
                jnz     short loc_140A0616A
                cmp     rcx, [rsi+8C8h]
                jnz     short loc_140A0616A
                test    r14, r14
                jnz     short loc_140A06173
                jmp     loc_140A0622F
; ---------------------------------------------------------------------------

loc_140A0616A:                          ; CODE XREF: sub_1409FA010+C134↑j
                                        ; sub_1409FA010+C145↑j ...
                test    r14, r14
                jz      loc_140A061FB

loc_140A06173:                          ; CODE XREF: sub_1409FA010+C153↑j
                mov     eax, 6000h
                test    word ptr [rbp+0BE0h+arg_8], ax
                jnz     short loc_140A061FB
                cmp     r14, 0FFFFFFFFFFFFFFFFh
                jz      loc_140A0622F
                mov     rax, [rsi+260h]
                lea     rdx, [rbp+0BE0h+var_B00]
                xor     r8d, r8d
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      short loc_140A061FB
                mov     eax, [rax]
                mov     rdx, [rbp+0BE0h+var_B00]
                add     rax, rdx
                cmp     rax, r12
                jnz     short loc_140A061FB
                cmp     rdx, [rsi+8C8h]
                jnz     short loc_140A061FB
                mov     rcx, [rsi+8D8h]
                mov     r8d, r12d
                mov     rax, [rsi+210h]
                sub     r8d, edx
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      short loc_140A061FB
                mov     eax, [rax+24h]
                bt      eax, 19h
                jb      short loc_140A061FB
                cmp     edi, 0FEh
                jnz     short loc_140A0622F
                cmp     r13, [rsi+8B8h]
                jz      short loc_140A0622F

loc_140A061FB:                          ; CODE XREF: sub_1409FA010+C05B↑j
                                        ; sub_1409FA010+C09B↑j ...
                mov     r10, [rsp+0CE0h+var_C68]

loc_140A06200:                          ; CODE XREF: sub_1409FA010+C027↑j
                mov     rax, [rsi+590h]
                mov     [rax], rbx
                mov     dword ptr [rax+10h], 80h
                test    r10, r10
                jz      short loc_140A06228
                mov     rax, [rsi+590h]
                mov     [rax+8], r10
                mov     dword ptr [rax+14h], 80h

loc_140A06228:                          ; CODE XREF: sub_1409FA010+C204↑j
                mov     dword ptr [rbp+0BE0h+var_BF8], 1

loc_140A0622F:                          ; CODE XREF: sub_1409FA010+C155↑j
                                        ; sub_1409FA010+C175↑j ...
                mov     rcx, [rsp+0CE0h+var_C88]
                inc     edi
                add     rcx, 10h
                mov     ebx, 0Fh
                mov     [rsp+0CE0h+var_C88], rcx
                cmp     edi, 0FFh
                jbe     loc_140A05FAB
                lea     ecx, [rbx-0Eh]
                mov     rdi, 0FFFFFFFFB8797400h
                test    [rsi+87Bh], cl
                jz      loc_140A06334
                cli
                mov     r14d, 0C0000082h
                mov     ecx, r14d
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                lea     rdx, [rsi+87Ah]
                mov     rbx, rax
                mov     rax, rdx
                shr     rdx, 20h
                wrmsr
                mov     r13d, 20000h
                test    [rsi+994h], r13d
                jnz     short loc_140A062DD
                mov     rdx, gs:20h
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     rax, [rsi+4C0h]
                add     rcx, rsi
                mov     [rax], rcx
                mov     rax, [rsi+4C8h]
                mov     [rax], rdx
                mov     rax, [rsi+4D0h]
                mov     [rax], r14
                mov     rax, [rsi+4D8h]
                mov     qword ptr [rax], 112h

loc_140A062DD:                          ; CODE XREF: sub_1409FA010+C289↑j
                lea     rax, [rsi+87Ch]
                call    j__guard_dispatch_icall_nop
                test    [rsi+994h], r13d
                jnz     short loc_140A06324
                mov     rax, [rsi+4C0h]
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     [rax], rcx
                mov     rax, [rsi+4C8h]
                mov     [rax], r15
                mov     rax, [rsi+4D0h]
                mov     [rax], r15
                mov     rax, [rsi+4D8h]
                mov     [rax], r15

loc_140A06324:                          ; CODE XREF: sub_1409FA010+C2E0↑j
                mov     rdx, rbx
                mov     rax, rbx
                shr     rdx, 20h
                mov     ecx, r14d
                wrmsr
                sti

loc_140A06334:                          ; CODE XREF: sub_1409FA010+C250↑j
                mov     r15, [rsp+0CE0h+var_C70]
                add     dword ptr [rsi+828h], 350h
                mov     r8, r15
                mov     ebx, [rsi+828h]
                mov     rax, r15
                mov     r9d, [rsi+814h]
                mov     r11, [rsi+818h]
                lea     rcx, [r15+350h]
                cmp     r15, rcx
                jnb     short loc_140A06379
                mov     edx, 40h ; '@'

loc_140A0636E:                          ; CODE XREF: sub_1409FA010+C367↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A0636E

loc_140A06379:                          ; CODE XREF: sub_1409FA010+C357↑j
                mov     r10d, 6
                mov     r14, r11
                mov     rsi, 7010008004002001h
                lea     r13d, [r10+2]

loc_140A06390:                          ; CODE XREF: sub_1409FA010+C3E2↓j
                mov     rdx, r13
                mov     r12d, 1

loc_140A06399:                          ; CODE XREF: sub_1409FA010+C3A7↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, r14
                add     r8, r13
                rol     rax, cl
                mov     r14, [r8]
                add     r8, r13
                xor     r14, rax
                rol     r14, cl
                sub     rdx, r12
                jnz     short loc_140A06399
                mov     rcx, r8
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r9d, eax
                mov     [rbp+0BE0h+var_598], rdx
                xor     r9d, edx
                mov     rax, r12
                and     r9d, 3Fh
                cmovz   r9d, eax
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_140A06390
                mov     rsi, [rsp+0CE0h+var_C80]
                lea     edx, [r10+50h]
                mov     r12d, dword ptr [rbp+0BE0h+var_BF8]
                lea     r10d, [rdx-46h]
                lea     r11d, [rdx-4Fh]

loc_140A06409:                          ; CODE XREF: sub_1409FA010+C40B↓j
                xor     r14, [r8]
                mov     ecx, r9d
                rol     r14, cl
                add     r8, r13
                add     edx, 0FFFFFFF8h
                sub     r10, r11
                jnz     short loc_140A06409
                test    edx, edx
                jz      short loc_140A06439
                mov     r10, rax

loc_140A06424:                          ; CODE XREF: sub_1409FA010+C427↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     r14, rax
                add     r8, r11
                rol     r14, cl
                add     edx, r10d
                jnz     short loc_140A06424

loc_140A06439:                          ; CODE XREF: sub_1409FA010+C40F↑j
                mov     rax, r14
                jmp     short loc_140A06441
; ---------------------------------------------------------------------------

loc_140A0643E:                          ; CODE XREF: sub_1409FA010+C438↓j
                xor     r14d, eax

loc_140A06441:                          ; CODE XREF: sub_1409FA010+C42C↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0643E
                lea     eax, [rbx+10h]
                btr     r14d, 1Fh
                mov     [rsi+828h], eax
                lea     rdx, [r15+0E10h]
                mov     r9d, [rsi+814h]
                lea     rcx, [r15+0E20h]
                mov     rbx, [rsi+818h]
                mov     rax, rdx
                cmp     rdx, rcx
                jnb     short loc_140A0648D
                mov     r8d, 40h ; '@'

loc_140A06482:                          ; CODE XREF: sub_1409FA010+C47B↓j
                prefetchnta byte ptr [rax]
                add     rax, r8
                cmp     rax, rcx
                jb      short loc_140A06482

loc_140A0648D:                          ; CODE XREF: sub_1409FA010+C46A↑j
                mov     eax, 2
                lea     r8d, [rax+0Eh]

loc_140A06496:                          ; CODE XREF: sub_1409FA010+C499↓j
                xor     rbx, [rdx]
                mov     ecx, r9d
                rol     rbx, cl
                add     rdx, r13
                add     r8d, 0FFFFFFF8h
                sub     rax, r11
                jnz     short loc_140A06496
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A064D0
                mov     r15d, 0FFFFFFFFh

loc_140A064B9:                          ; CODE XREF: sub_1409FA010+C4BB↓j
                movzx   eax, byte ptr [rdx]
                mov     ecx, r9d
                xor     rbx, rax
                add     rdx, r11
                rol     rbx, cl
                add     r8d, r15d
                jnz     short loc_140A064B9
                xor     r15d, r15d

loc_140A064D0:                          ; CODE XREF: sub_1409FA010+C4A1↑j
                mov     rax, rbx
                jmp     short loc_140A064D7
; ---------------------------------------------------------------------------

loc_140A064D5:                          ; CODE XREF: sub_1409FA010+C4CE↓j
                xor     ebx, eax

loc_140A064D7:                          ; CODE XREF: sub_1409FA010+C4C3↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A064D5
                mov     rax, [rsi+198h]
                lea     rcx, [rbp+0BE0h+var_290]
                btr     ebx, 1Fh
                call    j__guard_dispatch_icall_nop
                mov     r8, [rsp+0CE0h+var_C90]
                mov     edx, [r8+14h]
                cmp     r14d, edx
                jnz     short loc_140A06524
                mov     eax, ebx
                cmp     rax, [r8+18h]
                jnz     short loc_140A06524
                movzx   eax, word ptr [r8+2Ch]
                cmp     [rbp+0BE0h+var_900], ax
                jnz     short loc_140A06524
                test    r12d, r12d
                jz      loc_140A065BA

loc_140A06524:                          ; CODE XREF: sub_1409FA010+C4F3↑j
                                        ; sub_1409FA010+C4FB↑j ...
                test    r12d, r12d
                jnz     short loc_140A0655F
                mov     eax, ebx
                cmp     rax, [r8+18h]
                jnz     short loc_140A06542
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A0655F
                mov     ecx, r14d
                xor     rcx, rdx
                jmp     short loc_140A06554
; ---------------------------------------------------------------------------

loc_140A06542:                          ; CODE XREF: sub_1409FA010+C51F↑j
                mov     eax, [r8+18h]
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A0655F
                mov     ecx, ebx
                xor     rcx, rax

loc_140A06554:                          ; CODE XREF: sub_1409FA010+C530↑j
                mov     rax, [rsi+590h]
                mov     [rax+18h], rcx

loc_140A0655F:                          ; CODE XREF: sub_1409FA010+C517↑j
                                        ; sub_1409FA010+C528↑j ...
                mov     rcx, [r8+8]
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A065BA
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r8
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r8]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A065BA:                          ; CODE XREF: sub_1409FA010+C50E↑j
                                        ; sub_1409FA010+C55A↑j
                add     dword ptr [rsi+828h], 10000h
                jmp     loc_1409FB31B
; ---------------------------------------------------------------------------

loc_140A065C9:                          ; CODE XREF: sub_1409FA010+8FC4↑j
                mov     edx, [r13+2Ch]
                lea     rcx, [rbp+0BE0h+var_280]
                mov     rax, [rsi+1A0h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+1D0h]
                lea     rdx, [rbp+0BE0h+var_270]
                lea     rcx, [rbp+0BE0h+var_280]
                call    j__guard_dispatch_icall_nop
                xor     ecx, ecx
                xgetbv
                shl     rdx, 20h
                lea     rcx, [rbp+0BE0h+var_270]
                or      rdx, rax
                mov     rax, [rsi+198h]
                mov     rbx, rdx
                call    j__guard_dispatch_icall_nop
                mov     r8, [r13+18h]
                xor     r15d, r15d
                mov     rdx, [r13+20h]
                and     r8, rbx
                cmp     r8, rdx
                jz      loc_1409FB31B
                mov     eax, [r13+28h]
                mov     ecx, [r13+2Ch]
                shl     rcx, 20h
                or      rcx, rax
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     loc_1409FB31B
                mov     rax, [rsi+590h]
                xor     rdx, r8
                mov     [rax+18h], rdx
                mov     eax, [rsi+8F8h]
                jmp     loc_1409FB6A5
; ---------------------------------------------------------------------------

loc_140A06669:                          ; CODE XREF: sub_1409FA010+132F↑j
                                        ; sub_1409FA010+134A↑j
                mov     r13, rdx

loc_140A0666C:                          ; CODE XREF: sub_1409FA010+F04↑j
                mov     [rsi+820h], ecx
                cmp     [rbp+0BE0h+var_BC8], r15d
                jz      short loc_140A066E2
                mov     rcx, gs:20h
                mov     rax, [rsi+648h]
                mov     rdx, [rax+rcx]
                lea     rcx, [rbp+0BE0h+var_260]
                mov     rax, [rsi+688h]
                add     rdx, [rsi+6A8h]
                mov     rbx, [rdx+rax]
                mov     rax, [rsi+198h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+440h]
                lea     rcx, [rbp+0BE0h+var_6C0]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+3A8h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsi+3B8h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A066E2:                          ; CODE XREF: sub_1409FA010+C666↑j
                cmp     [rbp+0BE0h+var_C38], r15d
                jz      loc_140A0677D
                test    [rsi+990h], r14d
                jnz     short loc_140A066FE
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A0677D

loc_140A066FE:                          ; CODE XREF: sub_1409FA010+C6E3↑j
                mov     rbx, [rsi+980h]
                lea     rdx, [rbp+0BE0h+var_6C0]
                mov     [rsi+980h], r15
                mov     rcx, rbx
                mov     rax, [rsi+298h]
                call    j__guard_dispatch_icall_nop
                mov     eax, [rsi+990h]
                test    r13b, al
                jz      short loc_140A06769
                and     eax, 0FFFFFFFEh
                mov     rcx, rbx
                mov     [rsi+990h], eax
                mov     rax, [rsi+280h]
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                test    rax, rax
                jz      short loc_140A0675E
                mov     rax, [rsi+2A0h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A06763
; ---------------------------------------------------------------------------

loc_140A0675E:                          ; CODE XREF: sub_1409FA010+C73B↑j
                mov     eax, 0FFFFFFFFh

loc_140A06763:                          ; CODE XREF: sub_1409FA010+C74C↑j
                mov     [rsi+970h], eax

loc_140A06769:                          ; CODE XREF: sub_1409FA010+C71B↑j
                test    rbx, rbx
                jz      short loc_140A0677D
                mov     rax, [rsi+288h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A0677D:                          ; CODE XREF: sub_1409FA010+C6D6↑j
                                        ; sub_1409FA010+C6EC↑j ...
                mov     eax, [rsi+990h]
                mov     ecx, 800008h
                and     eax, ecx
                cmp     eax, ecx
                jnz     loc_140A06B73
                mov     eax, [rsi+994h]
                mov     r11d, [rsi+808h]
                and     eax, r13d
                mov     rax, [rsi+0A70h]
                mov     r10d, [rsi+7E4h]
                mov     r12, [rsi+9F8h]
                mov     [rsp+0CE0h+var_C70], rax
                mov     dword ptr [rbp+0BE0h+arg_8], r11d
                jz      short loc_140A067CC
                mov     r12, [rsi+5D8h]

loc_140A067CC:                          ; CODE XREF: sub_1409FA010+C7B3↑j
                mov     rax, [rsi+160h]
                mov     [rbp+0BE0h+var_C40], rax
                mov     rax, [rsi+2C8h]
                mov     [rbp+0BE0h+var_BD8], rax
                mov     rax, [rsi+340h]
                mov     [rbp+0BE0h+var_C30], rax
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     r9, rdi
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_590], rdx
                xor     rcx, rax
                mov     rax, 0ABCC77118461CEFDh
                mul     rcx
                shr     rdx, 1Ah
                imul    rax, rdx, 5F5E100h
                sub     rcx, rax
                sub     r9, rcx
                mov     [rbp+0BE0h+var_AA8], r9
                mov     r8d, [rsi+990h]
                bt      r8d, 1Ah
                jnb     loc_140A068F4
                rdtsc
                shl     rdx, 20h
                mov     r14, 0CCCCCCCCCCCCCCCDh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_588], rdx
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                mov     eax, 2
                cmp     rcx, rax
                jnb     short loc_140A068F4
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_580], rdx
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                add     rcx, r13
                imul    rcx, r9
                mov     [rbp+0BE0h+var_AA8], rcx
                mov     r8d, [rsi+990h]

loc_140A068F4:                          ; CODE XREF: sub_1409FA010+C841↑j
                                        ; sub_1409FA010+C893↑j
                mov     ecx, 2
                mov     r14d, r11d
                test    cl, r8b
                mov     rbx, r15
                cmovnz  r14d, r10d
                test    r8b, r8b
                js      short loc_140A06916
                xor     r9d, r9d
                mov     r13d, r9d
                jmp     loc_140A069E0
; ---------------------------------------------------------------------------

loc_140A06916:                          ; CODE XREF: sub_1409FA010+C8F9↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     ecx, 154h
                mov     rbx, rdx
                mov     [rbp+0BE0h+var_578], rdx
                xor     rbx, rax
                mov     edx, 1
                mov     r15, rbx
                lea     rax, [rsi+0A98h]
                xor     r15, rsi
                mov     r10, rbx

loc_140A0695D:                          ; CODE XREF: sub_1409FA010+C959↓j
                xor     [rax], r10
                lea     rax, [rax-8]
                ror     r10, cl
                sub     ecx, edx
                jnz     short loc_140A0695D
                lea     r8, [r11-0AA0h]
                shr     r8, 3
                test    r8d, r8d
                jz      short loc_140A069B4
                movsxd  r9, r8d
                add     rsi, 0A98h
                mov     rdi, rdx
                lea     r9, [rsi+r9*8]

loc_140A0698C:                          ; CODE XREF: sub_1409FA010+C996↓j
                mov     rdx, [r9]
                lea     rax, [r15+r15]
                mov     ecx, r8d
                lea     r9, [r9-8]
                ror     rdx, cl
                mov     r15, rdx
                xor     r15, rax
                sub     r8d, edi
                jnz     short loc_140A0698C
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A069B4:                          ; CODE XREF: sub_1409FA010+C969↑j
                mov     ecx, r14d
                lea     rdx, [rsi+r11]
                sub     ecx, r11d
                shr     ecx, 3
                test    ecx, ecx
                jz      short loc_140A069E0
                lea     rdx, [rdx+rcx*8]
                mov     eax, 1
                add     rdx, 0FFFFFFFFFFFFFFF8h

loc_140A069D2:                          ; CODE XREF: sub_1409FA010+C9CE↓j
                xor     [rdx], r10
                lea     rdx, [rdx-8]
                ror     r10, cl
                sub     ecx, eax
                jnz     short loc_140A069D2

loc_140A069E0:                          ; CODE XREF: sub_1409FA010+C901↑j
                                        ; sub_1409FA010+C9B3↑j
                mov     rax, [rsp+0CE0h+var_C70]
                test    rax, rax
                jz      short loc_140A06A0B
                mov     r9, [rbp+0BE0h+var_C40]
                lea     r8, [rbp+0BE0h+var_AA8]
                mov     [rsp+0CE0h+var_CC0], rax
                mov     edx, r14d
                mov     rax, [rbp+0BE0h+var_C30]
                mov     rcx, rsi
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A06A44
; ---------------------------------------------------------------------------

loc_140A06A0B:                          ; CODE XREF: sub_1409FA010+C9D8↑j
                xor     edx, edx
                test    r12, r12
                jnz     short loc_140A06A26
                mov     rax, [rbp+0BE0h+var_C40]
                lea     r8, [rbp+0BE0h+var_AA8]
                xor     ecx, ecx
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A06A44
; ---------------------------------------------------------------------------

loc_140A06A26:                          ; CODE XREF: sub_1409FA010+CA00↑j
                lea     rax, [rbp+0BE0h+var_AA8]
                xor     r9d, r9d
                mov     [rsp+0CE0h+var_CC0], rax
                xor     r8d, r8d
                mov     rax, [rbp+0BE0h+var_BD8]
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop

loc_140A06A44:                          ; CODE XREF: sub_1409FA010+C9F9↑j
                                        ; sub_1409FA010+CA14↑j
                test    r13d, r13d
                jz      loc_140A06B70
                mov     r9, rbx
                lea     rax, [rsi+0A98h]
                xor     r9, rsi
                mov     ecx, 154h
                mov     r10d, 1

loc_140A06A65:                          ; CODE XREF: sub_1409FA010+CA62↓j
                xor     [rax], rbx
                lea     rax, [rax-8]
                ror     rbx, cl
                sub     ecx, r10d
                jnz     short loc_140A06A65
                mov     r12d, dword ptr [rbp+0BE0h+arg_8]
                mov     r11d, r12d
                lea     r8, [r12-0AA0h]
                shr     r8, 3
                test    r8d, r8d
                jz      short loc_140A06AC4
                movsxd  r10, r8d
                lea     r11d, [rcx+1]
                add     r10, 153h
                lea     r10, [rsi+r10*8]

loc_140A06AA1:                          ; CODE XREF: sub_1409FA010+CAAB↓j
                mov     rdx, [r10]
                lea     rax, [r9+r9]
                mov     ecx, r8d
                lea     r10, [r10-8]
                ror     rdx, cl
                mov     r9, rdx
                xor     r9, rax
                sub     r8d, r11d
                jnz     short loc_140A06AA1
                mov     r11, r12
                lea     r10d, [r8+1]

loc_140A06AC4:                          ; CODE XREF: sub_1409FA010+CA7D↑j
                sub     r14d, r12d
                lea     rcx, [rsi+r11]
                shr     r14d, 3
                test    r14d, r14d
                jz      short loc_140A06AF0
                mov     edx, r14d
                dec     rdx
                lea     rdx, [rcx+rdx*8]

loc_140A06ADE:                          ; CODE XREF: sub_1409FA010+CADE↓j
                xor     [rdx], rbx
                mov     ecx, r14d
                ror     rbx, cl
                lea     rdx, [rdx-8]
                sub     r14d, r10d
                jnz     short loc_140A06ADE

loc_140A06AF0:                          ; CODE XREF: sub_1409FA010+CAC2↑j
                cmp     r9, r15
                jz      short loc_140A06B70
                mov     rax, [rsi+590h]
                mov     ecx, [rsi+7E4h]
                mov     [rax], rsi
                mov     [rax+10h], ecx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A06B29
                mov     rax, [rsi+590h]
                mov     rcx, r9
                xor     rcx, r15
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A06B29:                          ; CODE XREF: sub_1409FA010+CB00↑j
                xor     r15d, r15d
                test    eax, eax
                jnz     short loc_140A06B73
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 10Eh
                mov     [rsi+918h], r9
                mov     [rsi+8F8h], r10d
                call    sub_140A113CC
                jmp     short loc_140A06B73
; ---------------------------------------------------------------------------

loc_140A06B70:                          ; CODE XREF: sub_1409FA010+CA37↑j
                                        ; sub_1409FA010+CAE3↑j
                xor     r15d, r15d

loc_140A06B73:                          ; CODE XREF: sub_1409FA010+C77C↑j
                                        ; sub_1409FA010+CB1E↑j ...
                mov     eax, [rsi+958h]
                mov     r12d, 1
                cmp     eax, 0Bh
                jz      loc_140A0B51C
                cmp     eax, r12d
                jz      loc_140A0B51C
                cmp     [rsi+8F8h], r15d
                jnz     loc_140A0B521
                mov     rax, [rsi+960h]
                mov     rcx, [rax]
                cmp     rcx, [rsi+968h]
                jz      loc_140A0B2D6
                mov     ecx, [rsi+970h]
                mov     r13d, 0FFFFFFFFh
                mov     rbx, rsi
                mov     [rbp+0BE0h+var_C60], rbx
                cmp     ecx, r13d
                jz      short loc_140A06BDE
                mov     rax, [rsi+278h]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                jmp     short loc_140A06BE1
; ---------------------------------------------------------------------------

loc_140A06BDE:                          ; CODE XREF: sub_1409FA010+CBBB↑j
                mov     r14, r15

loc_140A06BE1:                          ; CODE XREF: sub_1409FA010+CBCC↑j
                test    r14, r14
                jnz     short loc_140A06C00
                mov     rax, [rsi+280h]
                xor     ecx, ecx
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jz      loc_140A0B51C

loc_140A06C00:                          ; CODE XREF: sub_1409FA010+CBD4↑j
                mov     rax, [rsi+290h]
                lea     rdx, [rbp+0BE0h+var_6C0]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                xor     r12d, r12d
                mov     r15d, eax
                test    eax, eax
                jns     short loc_140A06C31
                mov     rax, [rsi+288h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A06C93
; ---------------------------------------------------------------------------

loc_140A06C31:                          ; CODE XREF: sub_1409FA010+CC0E↑j
                mov     [rsi+980h], r14
                mov     rax, [rsi+2B8h]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                mov     rax, [rsi+2D8h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                test    rax, rax
                jnz     short loc_140A06C63
                lea     ecx, [rax+4]
                jmp     short loc_140A06C75
; ---------------------------------------------------------------------------

loc_140A06C63:                          ; CODE XREF: sub_1409FA010+CC4C↑j
                mov     rax, [rsi+2E8h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     ecx, r12d

loc_140A06C75:                          ; CODE XREF: sub_1409FA010+CC51↑j
                mov     eax, [rsi+994h]
                mov     r15d, r12d
                and     eax, 0FFFFFFFBh
                or      eax, ecx
                mov     [rsi+994h], eax
                add     dword ptr [rsi+828h], 10000h

loc_140A06C93:                          ; CODE XREF: sub_1409FA010+CC1F↑j
                test    r15d, r15d
                js      loc_140A0B515
                mov     rax, [rsi+2A0h]
                mov     rcx, [rsi+980h]
                call    j__guard_dispatch_icall_nop
                xor     r15d, r15d
                test    eax, eax
                jnz     loc_140A0B2A7
                mov     rax, [rsi+578h]
                lea     ecx, [r15+20h]
                mov     rdx, [rsi+968h]
                lea     rbx, [rbp+0BE0h+var_858]
                add     rax, rcx
                mov     [rsp+0CE0h+var_C88], r15
                mov     [rbp+0BE0h+var_858], rax
                mov     rax, [rsi+570h]
                add     rax, rcx
                mov     [rbp+0BE0h+var_BD8], rdx
                mov     [rbp+0BE0h+var_850], rax
                mov     rax, [rsi+960h]
                mov     esi, r15d
                mov     [rbp+0BE0h+var_C50], rax
                mov     [rbp+0BE0h+var_C40], rbx
                mov     [rbp+0BE0h+var_C30], 2

loc_140A06D11:                          ; CODE XREF: sub_1409FA010+CF3B↓j
                mov     r12, [rbx]
                xor     rsi, rax
                mov     r9d, esi
                mov     [rsp+0CE0h+var_C70], r12
                mov     r13d, 3Fh ; '?'
                and     r9d, r13d
                mov     rdi, [r12]
                mov     r15d, [r12+10h]
                mov     r10, rdi
                mov     r11d, r15d
                mov     dword ptr [rbp+0BE0h+arg_8], r15d
                shl     r11d, 2
                mov     rax, rdi
                mov     ecx, r11d
                add     rcx, rdi
                cmp     rdi, rcx
                jnb     short loc_140A06D5F
                lea     r8d, [r13+1]

loc_140A06D54:                          ; CODE XREF: sub_1409FA010+CD4D↓j
                prefetchnta byte ptr [rax]
                add     rax, r8
                cmp     rax, rcx
                jb      short loc_140A06D54

loc_140A06D5F:                          ; CODE XREF: sub_1409FA010+CD3E↑j
                mov     r14d, r11d
                mov     r8, rsi
                shr     r14d, 7
                test    r14d, r14d
                jz      short loc_140A06DE7
                mov     ebx, 0FFFFFFFFh
                mov     r12d, 1
                mov     r15, 7010008004002001h

loc_140A06D83:                          ; CODE XREF: sub_1409FA010+CDC1↓j
                mov     eax, 8

loc_140A06D88:                          ; CODE XREF: sub_1409FA010+CD8F↓j
                xor     r8, [r10]
                mov     ecx, r9d
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, r12
                jnz     short loc_140A06D88
                mov     rcx, r10
                sub     rcx, rdi
                xor     rcx, rsi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     r9d, edx
                mov     [rbp+0BE0h+var_570], rdx
                xor     r9d, eax
                and     r9d, r13d
                cmovz   r9d, r12d
                add     r14d, ebx
                jnz     short loc_140A06D83
                mov     r15d, dword ptr [rbp+0BE0h+arg_8]
                mov     r12, [rsp+0CE0h+var_C70]
                mov     rbx, [rbp+0BE0h+var_C40]
                mov     rdx, [rbp+0BE0h+var_BD8]

loc_140A06DE7:                          ; CODE XREF: sub_1409FA010+CD5C↑j
                and     r11d, 7Fh
                mov     r14d, 1
                cmp     r11d, 8
                jb      short loc_140A06E14
                mov     eax, r11d
                shr     rax, 3

loc_140A06DFE:                          ; CODE XREF: sub_1409FA010+CE02↓j
                xor     r8, [r10]
                mov     ecx, r9d
                rol     r8, cl
                add     r10, 8
                add     r11d, 0FFFFFFF8h
                sub     rax, r14
                jnz     short loc_140A06DFE

loc_140A06E14:                          ; CODE XREF: sub_1409FA010+CDE5↑j
                test    r11d, r11d
                jz      short loc_140A06E33
                mov     esi, 0FFFFFFFFh

loc_140A06E1E:                          ; CODE XREF: sub_1409FA010+CE21↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r9d
                xor     r8, rax
                add     r10, r14
                rol     r8, cl
                add     r11d, esi
                jnz     short loc_140A06E1E

loc_140A06E33:                          ; CODE XREF: sub_1409FA010+CE07↑j
                mov     r12, [r12+18h]
                xor     r8, rdx
                mov     r11d, r8d
                mov     r10, r12
                and     r11d, r13d
                mov     rax, r12
                mov     r13d, r15d
                lea     rcx, [r12+r13]
                cmp     r12, rcx
                jnb     short loc_140A06E63
                mov     edx, 40h ; '@'

loc_140A06E58:                          ; CODE XREF: sub_1409FA010+CE51↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A06E58

loc_140A06E63:                          ; CODE XREF: sub_1409FA010+CE41↑j
                mov     r14d, r15d
                mov     r9, r8
                shr     r14d, 7
                test    r14d, r14d
                jz      short loc_140A06EE1
                mov     rbx, 7010008004002001h

loc_140A06E7C:                          ; CODE XREF: sub_1409FA010+CECB↓j
                mov     edx, 8
                lea     esi, [rdx-7]

loc_140A06E84:                          ; CODE XREF: sub_1409FA010+CE91↓j
                mov     rax, [r10]
                mov     ecx, r11d
                xor     rax, r9
                mov     r9, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r9, rax
                rol     r9, cl
                sub     rdx, rsi
                jnz     short loc_140A06E84
                mov     rcx, r10
                sub     rcx, r12
                xor     rcx, r8
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     [rbp+0BE0h+var_568], rdx
                xor     edx, eax
                xor     r11d, edx
                mov     rax, rsi
                and     r11d, 3Fh
                cmovz   r11d, eax
                mov     eax, 0FFFFFFFFh
                add     r14d, eax
                jnz     short loc_140A06E7C
                mov     rbx, [rbp+0BE0h+var_C40]

loc_140A06EE1:                          ; CODE XREF: sub_1409FA010+CE60↑j
                and     r15d, 7Fh
                mov     r12d, 1
                cmp     r15d, 8
                jb      short loc_140A06F0E
                mov     edx, r15d
                shr     rdx, 3

loc_140A06EF8:                          ; CODE XREF: sub_1409FA010+CEFC↓j
                xor     r9, [r10]
                mov     ecx, r11d
                rol     r9, cl
                add     r10, 8
                add     r15d, 0FFFFFFF8h
                sub     rdx, r12
                jnz     short loc_140A06EF8

loc_140A06F0E:                          ; CODE XREF: sub_1409FA010+CEDF↑j
                mov     r14d, 0FFFFFFFFh
                test    r15d, r15d
                jz      short loc_140A06F2E

loc_140A06F19:                          ; CODE XREF: sub_1409FA010+CF1C↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r11d
                xor     r9, rax
                add     r10, r12
                rol     r9, cl
                add     r15d, r14d
                jnz     short loc_140A06F19

loc_140A06F2E:                          ; CODE XREF: sub_1409FA010+CF07↑j
                mov     rax, [rbp+0BE0h+var_C50]
                add     rbx, 8
                mov     rdx, [rbp+0BE0h+var_BD8]
                mov     rsi, rdi
                xor     rsi, r13
                mov     [rbp+0BE0h+var_C40], rbx
                xor     rsi, r9
                sub     [rbp+0BE0h+var_C30], r12
                jnz     loc_140A06D11
                mov     [rsp+0CE0h+var_C88], rsi
                lea     rdx, [rbp+0BE0h+var_980]
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rcx, rdi
                mov     rax, [rsi+208h]
                call    j__guard_dispatch_icall_nop
                mov     rbx, [rbp+0BE0h+var_C60]
                xor     r15d, r15d
                mov     rdi, 0FFFFFFFFB8797400h
                cmp     [rbp+0BE0h+var_980], r15
                jz      loc_140A0773F
                rdtsc
                shl     rdx, 20h
                mov     r8, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_560], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                lea     eax, [r15+5]
                cmp     ecx, eax
                ja      loc_140A07097
                jz      loc_140A0707D
                test    ecx, ecx
                jz      short loc_140A07063
                sub     ecx, 1
                jz      short loc_140A0704A
                sub     ecx, 1
                jz      short loc_140A07030
                cmp     ecx, 1
                jz      short loc_140A07012
                mov     [rbp+0BE0h+var_9DC], 67076494h
                mov     r9d, [rbp+0BE0h+var_9DC]
                rol     r9d, 4
                jmp     loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A07012:                          ; CODE XREF: sub_1409FA010+CFE6↑j
                mov     [rbp+0BE0h+var_9D8], 0A8223938h
                mov     r9d, [rbp+0BE0h+var_9D8]
                xor     r9d, 3
                ror     r9d, 0Fh
                jmp     loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A07030:                          ; CODE XREF: sub_1409FA010+CFE1↑j
                mov     [rbp+0BE0h+var_9D4], 85B5910Dh
                mov     r9d, [rbp+0BE0h+var_9D4]
                ror     r9d, 2
                jmp     loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A0704A:                          ; CODE XREF: sub_1409FA010+CFDC↑j
                mov     [rbp+0BE0h+var_9D0], 0B2AD31A1h
                mov     r9d, [rbp+0BE0h+var_9D0]
                rol     r9d, 1
                jmp     loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A07063:                          ; CODE XREF: sub_1409FA010+CFD7↑j
                mov     [rbp+0BE0h+var_9CC], 0D098D0D8h
                mov     r9d, [rbp+0BE0h+var_9CC]
                ror     r9d, 6
                jmp     loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A0707D:                          ; CODE XREF: sub_1409FA010+CFCF↑j
                mov     [rbp+0BE0h+var_A90], 288C49EDh
                mov     r9d, [rbp+0BE0h+var_A90]
                ror     r9d, 5
                jmp     loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A07097:                          ; CODE XREF: sub_1409FA010+CFC9↑j
                sub     ecx, 6
                jz      loc_140A071A2
                sub     ecx, 1
                jz      loc_140A0718B
                sub     ecx, 1
                jz      loc_140A07174
                cmp     ecx, 1
                jz      loc_140A07159
                rdtsc
                shl     rdx, 20h
                mov     r10d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     r9, rdx
                mov     [rbp+0BE0h+var_558], rdx
                xor     r9d, eax
                mov     eax, r10d
                mul     r9d
                mov     ecx, r9d
                shr     r9d, 5
                shr     edx, 3
                mov     r8d, r9d
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r10d
                mul     r9d
                add     ecx, 61h ; 'a'
                shr     r9d, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     r8d, eax
                mov     eax, r10d
                mul     r9d
                add     r8d, 41h ; 'A'
                or      r8d, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, r9d
                shr     r9d, 5
                shl     r8d, 8
                sub     ecx, eax
                mov     eax, r10d
                mul     r9d
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, r8d
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     r9d, eax
                add     r9d, 41h ; 'A'
                or      r9d, ecx
                jmp     short loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A07159:                          ; CODE XREF: sub_1409FA010+D0A5↑j
                mov     [rbp+0BE0h+var_A8C], 0B0869E85h
                mov     r9d, [rbp+0BE0h+var_A8C]
                xor     r9d, 9
                ror     r9d, 21h
                jmp     short loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A07174:                          ; CODE XREF: sub_1409FA010+D09C↑j
                mov     [rbp+0BE0h+var_A88], 64664142h
                mov     r9d, [rbp+0BE0h+var_A88]
                ror     r9d, 8
                jmp     short loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A0718B:                          ; CODE XREF: sub_1409FA010+D093↑j
                mov     [rbp+0BE0h+var_A84], 82C6A6D8h
                mov     r9d, [rbp+0BE0h+var_A84]
                rol     r9d, 7
                jmp     short loc_140A071BB
; ---------------------------------------------------------------------------

loc_140A071A2:                          ; CODE XREF: sub_1409FA010+D08A↑j
                mov     [rbp+0BE0h+var_A80], 4E574672h
                mov     r9d, [rbp+0BE0h+var_A80]
                xor     r9d, 6
                ror     r9d, 18h

loc_140A071BB:                          ; CODE XREF: sub_1409FA010+CFFD↑j
                                        ; sub_1409FA010+D01B↑j ...
                mov     rax, [rsi+0F8h]
                mov     r13d, 80h
                mov     edx, r13d
                mov     r8d, r9d
                mov     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     [rbp+0BE0h+var_BD8], rax
                mov     r9, rax
                test    rax, rax
                jz      loc_140A07AB7
                mov     ecx, r13d
                lea     edx, [r13-70h]

loc_140A071EF:                          ; CODE XREF: sub_1409FA010+D1EC↓j
                mov     [rax], r15
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r12
                jnz     short loc_140A071EF
                test    ecx, ecx
                jz      short loc_140A0720D

loc_140A07202:                          ; CODE XREF: sub_1409FA010+D1FB↓j
                mov     [rax], r15b
                add     rax, r12
                add     ecx, r14d
                jnz     short loc_140A07202

loc_140A0720D:                          ; CODE XREF: sub_1409FA010+D1F0↑j
                mov     rax, [rbp+0BE0h+var_980]
                mov     rcx, r15
                mov     [rbp+0BE0h+var_AF8], rax
                mov     [r9], rax
                mov     rax, [rsp+0CE0h+var_C88]
                mov     [rbp+0BE0h+var_C30], rax
                mov     dword ptr [rbp+0BE0h+arg_8], r15d
                mov     [rbp+0BE0h+var_C08], rcx

loc_140A07235:                          ; CODE XREF: sub_1409FA010+D695↓j
                mov     rcx, [r9+rcx*8]
                mov     [rbp+0BE0h+var_AF8], rcx
                test    rcx, rcx
                jz      loc_140A07737
                mov     r13d, eax
                mov     rax, [rsi+1F8h]
                and     r13d, 3Fh
                call    j__guard_dispatch_icall_nop
                mov     [rbp+0BE0h+var_C40], rax
                test    rax, rax
                jz      loc_140A076B0
                movzx   r14d, word ptr [rax+14h]
                mov     rbx, [rbp+0BE0h+var_C30]
                add     r14, 18h
                add     r14, rax
                movzx   eax, word ptr [rax+6]
                lea     rcx, [rax+rax*4]
                lea     rax, [r14+rcx*8]
                mov     [rbp+0BE0h+var_C50], rax
                mov     rdi, rax

loc_140A0728C:                          ; CODE XREF: sub_1409FA010+D535↓j
                mov     eax, [r14+24h]
                mov     r11d, r15d
                bt      eax, 19h
                jb      loc_140A07418
                mov     ecx, [r14]
                cmp     ecx, 54494E49h
                jnz     short loc_140A072B6
                cmp     dword ptr [r14+4], 4742444Bh
                jz      loc_140A07418

loc_140A072B6:                          ; CODE XREF: sub_1409FA010+D296↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A072ED
                movzx   eax, word ptr [r14+4]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_140A07418
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_140A07418
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_140A07418

loc_140A072ED:                          ; CODE XREF: sub_1409FA010+D2AC↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A07305
                mov     eax, 4154h
                cmp     [r14+4], ax
                jz      loc_140A07418

loc_140A07305:                          ; CODE XREF: sub_1409FA010+D2E3↑j
                mov     rax, [rsi+938h]
                mov     r9, r14
                mov     r8, [rsi+930h]
                mov     r10d, 7
                mov     [rbp+0BE0h+var_808], rax
                sub     r9, r8
                mov     rax, [rsi+940h]
                mov     [rbp+0BE0h+var_800], rax
                mov     rax, [rsi+948h]
                mov     [rbp+0BE0h+var_7F8], rax
                mov     [rbp+0BE0h+var_810], r8

loc_140A07349:                          ; CODE XREF: sub_1409FA010+D352↓j
                movzx   edx, byte ptr [r9+r8]
                movzx   eax, byte ptr [r8]
                add     r8, r12
                cmp     rdx, rax
                jnz     short loc_140A07369
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_140A07349
                jmp     loc_140A07418
; ---------------------------------------------------------------------------

loc_140A07369:                          ; CODE XREF: sub_1409FA010+D348↑j
                mov     r9, [rbp+0BE0h+var_808]
                mov     r8d, 8
                mov     r10, r14

loc_140A07379:                          ; CODE XREF: sub_1409FA010+D384↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A073BA
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A07379
                test    r8d, r8d
                jz      short loc_140A07418

loc_140A0739B:                          ; CODE XREF: sub_1409FA010+D3A6↓j
                movzx   edx, byte ptr [r10]
                add     r10, r12
                movzx   eax, byte ptr [r9]
                add     r9, r12
                cmp     rdx, rax
                jnz     short loc_140A073BA
                mov     eax, 0FFFFFFFFh
                add     r8d, eax
                jnz     short loc_140A0739B
                jmp     short loc_140A07418
; ---------------------------------------------------------------------------

loc_140A073BA:                          ; CODE XREF: sub_1409FA010+D37A↑j
                                        ; sub_1409FA010+D39C↑j
                mov     r8, [rbp+0BE0h+var_800]
                mov     r9, r14
                sub     r9, r8
                mov     r10d, 4

loc_140A073CD:                          ; CODE XREF: sub_1409FA010+D3D6↓j
                movzx   edx, byte ptr [r9+r8]
                movzx   eax, byte ptr [r8]
                add     r8, r12
                cmp     rdx, rax
                jnz     short loc_140A073EA
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_140A073CD
                jmp     short loc_140A07418
; ---------------------------------------------------------------------------

loc_140A073EA:                          ; CODE XREF: sub_1409FA010+D3CC↑j
                mov     r8, [rbp+0BE0h+var_7F8]
                mov     r9, r14
                sub     r9, r8
                mov     r10d, 6

loc_140A073FD:                          ; CODE XREF: sub_1409FA010+D406↓j
                movzx   edx, byte ptr [r9+r8]
                movzx   eax, byte ptr [r8]
                add     r8, r12
                cmp     rdx, rax
                jnz     short loc_140A0741B
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_140A073FD

loc_140A07418:                          ; CODE XREF: sub_1409FA010+D287↑j
                                        ; sub_1409FA010+D2A0↑j ...
                mov     r11d, r12d

loc_140A0741B:                          ; CODE XREF: sub_1409FA010+D3FC↑j
                cmp     [r14+24h], r15d
                mov     eax, [r14+8]
                mov     r9d, [r14+10h]
                cmovl   r11d, r12d
                cmp     r9d, eax
                cmovbe  r9d, eax
                mov     eax, [r14+0Ch]
                test    r11d, r11d
                jnz     loc_140A0753E
                mov     r15d, eax
                mov     ecx, r9d
                add     r15, [rbp+0BE0h+var_AF8]
                mov     r11d, r13d
                add     rcx, r15
                mov     r10, r15
                mov     rax, r15
                cmp     r15, rcx
                jnb     short loc_140A0746D
                mov     edx, 40h ; '@'

loc_140A07462:                          ; CODE XREF: sub_1409FA010+D45B↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A07462

loc_140A0746D:                          ; CODE XREF: sub_1409FA010+D44B↑j
                mov     r12d, r9d
                mov     r8, rbx
                shr     r12d, 7
                test    r12d, r12d
                jz      short loc_140A074EC
                mov     edi, 1
                mov     rsi, 7010008004002001h

loc_140A0748B:                          ; CODE XREF: sub_1409FA010+D4CF↓j
                mov     eax, 8

loc_140A07490:                          ; CODE XREF: sub_1409FA010+D497↓j
                xor     r8, [r10]
                mov     ecx, r11d
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, rdi
                jnz     short loc_140A07490
                mov     rcx, r10
                sub     rcx, r15
                xor     rcx, rbx
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r11d, edx
                mov     [rbp+0BE0h+var_550], rdx
                xor     r11d, eax
                mov     edx, 0FFFFFFFFh
                and     r11d, 3Fh
                cmovz   r11d, edi
                add     r12d, edx
                jnz     short loc_140A0748B
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, [rbp+0BE0h+var_C50]
                jmp     short loc_140A074F1
; ---------------------------------------------------------------------------

loc_140A074EC:                          ; CODE XREF: sub_1409FA010+D46A↑j
                mov     edx, 0FFFFFFFFh

loc_140A074F1:                          ; CODE XREF: sub_1409FA010+D4DA↑j
                and     r9d, 7Fh
                mov     r12d, 1
                cmp     r9d, 8
                jb      short loc_140A0751E
                mov     eax, r9d
                shr     rax, 3

loc_140A07508:                          ; CODE XREF: sub_1409FA010+D50C↓j
                xor     r8, [r10]
                mov     ecx, r11d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rax, r12
                jnz     short loc_140A07508

loc_140A0751E:                          ; CODE XREF: sub_1409FA010+D4EF↑j
                xor     r15d, r15d
                test    r9d, r9d
                jz      short loc_140A0753B

loc_140A07526:                          ; CODE XREF: sub_1409FA010+D529↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r11d
                xor     r8, rax
                add     r10, r12
                rol     r8, cl
                add     r9d, edx
                jnz     short loc_140A07526

loc_140A0753B:                          ; CODE XREF: sub_1409FA010+D514↑j
                mov     rbx, r8

loc_140A0753E:                          ; CODE XREF: sub_1409FA010+D429↑j
                add     r14, 28h ; '('
                cmp     r14, rdi
                jnz     loc_140A0728C
                mov     r8d, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     [rbp+0BE0h+var_C30], rbx
                test    r8d, r8d
                jnz     loc_140A0767F
                mov     rdx, [rbp+0BE0h+var_C40]
                mov     r13, [rbp+0BE0h+var_AF8]
                mov     ecx, [rdx+94h]
                cmp     ecx, 14h
                jb      loc_140A0767F
                mov     eax, [rdx+90h]
                lea     r12, [rax+rcx]
                add     r12, r13
                lea     r15, [rax+r13]
                cmp     r15, r12
                jz      loc_140A07676
                xor     r10d, r10d

loc_140A0759D:                          ; CODE XREF: sub_1409FA010+D649↓j
                cmp     [r15+0Ch], r10d
                jz      loc_140A0766F
                mov     eax, [r15+10h]
                test    eax, eax
                jz      loc_140A0766F
                mov     r14, [rax+r13]
                test    r14, r14
                jz      loc_140A0764C
                cmp     r14, r13
                jb      short loc_140A075D0
                mov     eax, [rdx+50h]
                add     rax, r13
                cmp     r14, rax
                jb      short loc_140A0764C

loc_140A075D0:                          ; CODE XREF: sub_1409FA010+D5B3↑j
                mov     rax, [rsi+2A8h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                xor     r10d, r10d
                test    eax, eax
                jz      short loc_140A07648
                mov     rax, [rsi+208h]
                lea     rdx, [rbp+0BE0h+var_AF8]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     rdx, [rbp+0BE0h+var_AF8]
                xor     r10d, r10d
                lea     r11d, [r10+10h]
                test    rdx, rdx
                jz      short loc_140A07642
                mov     r9, [rbp+0BE0h+var_BD8]
                mov     ecx, r10d
                mov     rax, r9

loc_140A07619:                          ; CODE XREF: sub_1409FA010+D61F↓j
                mov     r8, [rax]
                cmp     r8, rdx
                jz      short loc_140A07639
                test    r8, r8
                jz      short loc_140A07633
                inc     ecx
                add     rax, 8
                cmp     ecx, r11d
                jb      short loc_140A07619
                jmp     short loc_140A07639
; ---------------------------------------------------------------------------

loc_140A07633:                          ; CODE XREF: sub_1409FA010+D614↑j
                mov     eax, ecx
                mov     [r9+rax*8], rdx

loc_140A07639:                          ; CODE XREF: sub_1409FA010+D60F↑j
                                        ; sub_1409FA010+D621↑j
                cmp     ecx, r11d
                jz      loc_140A0772D

loc_140A07642:                          ; CODE XREF: sub_1409FA010+D5FD↑j
                mov     rdx, [rbp+0BE0h+var_C40]
                jmp     short loc_140A07652
; ---------------------------------------------------------------------------

loc_140A07648:                          ; CODE XREF: sub_1409FA010+D5D4↑j
                mov     rdx, [rbp+0BE0h+var_C40]

loc_140A0764C:                          ; CODE XREF: sub_1409FA010+D5AA↑j
                                        ; sub_1409FA010+D5BE↑j
                mov     r11d, 10h

loc_140A07652:                          ; CODE XREF: sub_1409FA010+D636↑j
                add     r15, 14h
                cmp     r15, r12
                jnz     loc_140A0759D
                mov     r8d, dword ptr [rbp+0BE0h+arg_8]
                xor     r15d, r15d
                lea     r12d, [r15+1]
                jmp     short loc_140A07685
; ---------------------------------------------------------------------------

loc_140A0766F:                          ; CODE XREF: sub_1409FA010+D591↑j
                                        ; sub_1409FA010+D59D↑j
                mov     r8d, dword ptr [rbp+0BE0h+arg_8]

loc_140A07676:                          ; CODE XREF: sub_1409FA010+D584↑j
                mov     r12d, 1
                xor     r15d, r15d

loc_140A0767F:                          ; CODE XREF: sub_1409FA010+D550↑j
                                        ; sub_1409FA010+D56A↑j
                mov     r11d, 10h

loc_140A07685:                          ; CODE XREF: sub_1409FA010+D65D↑j
                mov     rcx, [rbp+0BE0h+var_C08]
                add     r8d, r12d
                mov     rax, [rbp+0BE0h+var_C30]
                add     rcx, r12
                mov     r9, [rbp+0BE0h+var_BD8]
                mov     dword ptr [rbp+0BE0h+arg_8], r8d
                mov     [rbp+0BE0h+var_C08], rcx
                cmp     r8d, r11d
                jb      loc_140A07235
                jmp     loc_140A07737
; ---------------------------------------------------------------------------

loc_140A076B0:                          ; CODE XREF: sub_1409FA010+D253↑j
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A076FB
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 102h
                mov     qword ptr [rsi+918h], 0FFFFFFFFC000007Bh
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_140A076FB:                          ; CODE XREF: sub_1409FA010+D6A7↑j
                mov     r14, [rsp+0CE0h+var_C88]

loc_140A07700:                          ; CODE XREF: sub_1409FA010+D72D↓j
                cmp     r14, [rsi+968h]
                jz      short loc_140A0770E
                test    r14, r14
                jnz     short loc_140A0771B

loc_140A0770E:                          ; CODE XREF: sub_1409FA010+D6F7↑j
                mov     rax, 95EA5DE843D5D824h
                xor     r14, rax

loc_140A0771B:                          ; CODE XREF: sub_1409FA010+D6FC↑j
                mov     rax, [rsi+100h]
                mov     rcx, [rbp+0BE0h+var_BD8]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A07744
; ---------------------------------------------------------------------------

loc_140A0772D:                          ; CODE XREF: sub_1409FA010+D62C↑j
                mov     rax, [rbp+0BE0h+var_C30]
                mov     r12d, 1

loc_140A07737:                          ; CODE XREF: sub_1409FA010+D233↑j
                                        ; sub_1409FA010+D69B↑j
                mov     r14, rax
                xor     r15d, r15d
                jmp     short loc_140A07700
; ---------------------------------------------------------------------------

loc_140A0773F:                          ; CODE XREF: sub_1409FA010+CF76↑j
                mov     r14, [rsp+0CE0h+var_C88]

loc_140A07744:                          ; CODE XREF: sub_1409FA010+D71B↑j
                mov     rax, [rsi+960h]
                mov     rcx, [rax]
                cmp     r14, rcx
                jz      short loc_140A077CF
                mov     eax, [rsi+994h]
                mov     ecx, 40h ; '@'
                test    cl, al
                jnz     short loc_140A077CF
                mov     rax, [rsi+960h]
                mov     rdx, [rax]
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A077CF
                mov     rax, [rsi+590h]
                mov     rcx, r14
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A077CF
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 102h
                mov     [rsi+918h], r14
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_140A077CF:                          ; CODE XREF: sub_1409FA010+D741↑j
                                        ; sub_1409FA010+D750↑j ...
                mov     r10d, r15d
                mov     r12d, 2
                lea     r15, [rbp+0BE0h+var_850]
                xor     ebx, ebx
                mov     r14d, 0FFFFFFFFh

loc_140A077E7:                          ; CODE XREF: sub_1409FA010+D82A↓j
                mov     rax, [r15]
                mov     r9d, ebx
                mov     r11, [rax]
                lea     r8d, [r10+rax]
                mov     r13d, [rax+10h]
                add     r8d, r11d
                test    r13d, r13d
                jz      short loc_140A0782C
                mov     r14, r11

loc_140A07803:                          ; CODE XREF: sub_1409FA010+D814↓j
                movsxd  rdx, dword ptr [r14]
                inc     r9d
                mov     rax, rdx
                lea     r14, [r14+4]
                sar     rax, 4
                mov     ecx, [rax+r11]
                add     ecx, edx
                xor     r8d, ecx
                imul    r8d, r9d
                cmp     r9d, r13d
                jb      short loc_140A07803
                mov     r14d, 0FFFFFFFFh

loc_140A0782C:                          ; CODE XREF: sub_1409FA010+D7EE↑j
                lea     r10d, [r10+r8*2]
                sub     r15, 8
                add     r8d, r8d
                add     r12d, r14d
                jnz     short loc_140A077E7
                mov     rax, [rsi+598h]
                mov     rbx, [rbp+0BE0h+var_C60]
                mov     r9d, [rax]
                cmp     r10d, r9d
                jz      short loc_140A078CA
                xor     r15d, r15d
                test    dword ptr [rsi+990h], 20000h
                jz      short loc_140A078CD
                mov     eax, [rsi+8F8h]
                test    eax, eax
                jnz     short loc_140A0787F
                mov     rdx, [rsi+590h]
                mov     ecx, r8d
                xor     rcx, r9
                mov     [rdx+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A0787F:                          ; CODE XREF: sub_1409FA010+D856↑j
                mov     ecx, r8d
                test    eax, eax
                jnz     short loc_140A078CD
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     eax, 1
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 107h
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                jmp     short loc_140A078CD
; ---------------------------------------------------------------------------

loc_140A078CA:                          ; CODE XREF: sub_1409FA010+D83D↑j
                xor     r15d, r15d

loc_140A078CD:                          ; CODE XREF: sub_1409FA010+D84C↑j
                                        ; sub_1409FA010+D874↑j ...
                mov     eax, [rsi+958h]
                cmp     eax, 7
                jl      loc_140A07B48
                jz      loc_140A08D3A
                cmp     eax, 8
                jz      loc_140A0AD4D
                cmp     eax, 9
                jnz     loc_140A0B24F
                xor     r10d, r10d

loc_140A078F7:                          ; CODE XREF: sub_1409FA010+10F6E↓j
                mov     r15, [rbx+600h]
                test    r15, r15
                jz      loc_140A0B24C
                mov     r15, [r15]
                test    r15, r15
                jz      loc_140A0B24C
                lock or [rsp+0CE0h+var_CE0], r10d
                mov     r12d, [r15+7E4h]
                mov     r9, r15
                mov     r10d, [r15+814h]
                mov     rax, r15
                mov     r14, [r15+818h]
                mov     dword ptr [rbp+0BE0h+arg_8], r12d
                lea     rcx, [r15+r12]
                cmp     r15, rcx
                jnb     short loc_140A07953
                mov     edx, 40h ; '@'

loc_140A07948:                          ; CODE XREF: sub_1409FA010+D941↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A07948

loc_140A07953:                          ; CODE XREF: sub_1409FA010+D931↑j
                mov     r11d, r12d
                mov     r8, r14
                shr     r11d, 7
                mov     r13d, 1
                test    r11d, r11d
                jz      short loc_140A079D4
                mov     r12, 7010008004002001h

loc_140A07972:                          ; CODE XREF: sub_1409FA010+D9BB↓j
                mov     edx, 8

loc_140A07977:                          ; CODE XREF: sub_1409FA010+D984↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r13
                jnz     short loc_140A07977
                mov     rcx, r9
                sub     rcx, r15
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                mov     [rbp+0BE0h+var_4E0], rdx
                xor     edx, eax
                xor     r10d, edx
                mov     eax, 0FFFFFFFFh
                and     r10d, 3Fh
                cmovz   r10d, r13d
                add     r11d, eax
                jnz     short loc_140A07972
                mov     r12d, dword ptr [rbp+0BE0h+arg_8]

loc_140A079D4:                          ; CODE XREF: sub_1409FA010+D956↑j
                mov     edx, r12d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A079FB
                mov     r11d, edx
                shr     r11, 3

loc_140A079E6:                          ; CODE XREF: sub_1409FA010+D9E9↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     r11, r13
                jnz     short loc_140A079E6

loc_140A079FB:                          ; CODE XREF: sub_1409FA010+D9CD↑j
                xor     r11d, r11d
                test    edx, edx
                jz      short loc_140A07A20
                mov     r11d, 0FFFFFFFFh

loc_140A07A08:                          ; CODE XREF: sub_1409FA010+DA0B↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r13
                rol     r8, cl
                add     edx, r11d
                jnz     short loc_140A07A08
                xor     r11d, r11d

loc_140A07A20:                          ; CODE XREF: sub_1409FA010+D9F0↑j
                mov     rax, [rbx+608h]
                cmp     r8, [rax]
                jz      loc_140A0AF83
                mov     rax, [rbx+590h]
                mov     [rax], r15
                xor     r15d, r15d
                mov     [rax+10h], r12d
                mov     rax, [rbx+608h]
                mov     rcx, [rax]
                mov     eax, [rbx+8F8h]
                test    eax, eax
                jnz     loc_140A08D8D
                mov     rax, [rbx+590h]
                xor     rcx, r8
                mov     [rax+18h], rcx
                mov     eax, [rbx+8F8h]
                test    eax, eax
                jnz     loc_140A08D8D
                mov     rax, 0A3A03F5891C8B4E8h
                lea     r12d, [r15+1]
                add     rax, rbx
                mov     [rbx+900h], rax
                mov     [rbx+908h], r15
                mov     qword ptr [rbx+910h], 111h
                mov     [rbx+918h], r8

loc_140A07AA6:                          ; CODE XREF: sub_1409FA010+11292↓j
                xor     edx, edx
                mov     [rbx+8F8h], r12d
                mov     rcx, rbx
                call    sub_140A113CC

loc_140A07AB7:                          ; CODE XREF: sub_1409FA010+D1D2↑j
                                        ; sub_1409FA010+ED83↓j ...
                mov     r13d, 0FFFFFFFFh

loc_140A07ABD:                          ; CODE XREF: sub_1409FA010+1129D↓j
                mov     ecx, 8000h
                test    [rbx+990h], ecx
                jnz     short loc_140A07AD7
                cmp     [rbx+8F8h], r15d
                jnz     loc_140A0B51C

loc_140A07AD7:                          ; CODE XREF: sub_1409FA010+DAB8↑j
                mov     r14, [rbx+980h]
                lea     rdx, [rbp+0BE0h+var_6C0]
                mov     [rbx+980h], r15
                mov     rcx, r14
                mov     rax, [rbx+298h]
                call    j__guard_dispatch_icall_nop
                mov     eax, [rbx+990h]
                test    r12b, al
                jz      loc_140A0B2B9
                and     eax, 0FFFFFFFEh
                mov     rcx, r14
                mov     [rbx+990h], eax
                mov     rax, [rbx+280h]
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                test    rax, rax
                jz      loc_140A0B2B2
                mov     rax, [rbx+2A0h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     [rbx+970h], eax
                jmp     loc_140A0B2B9
; ---------------------------------------------------------------------------

loc_140A07B48:                          ; CODE XREF: sub_1409FA010+D8C6↑j
                mov     rdx, [rsi+578h]
                mov     rcx, [rsi+570h]
                mov     [rbp+0BE0h+arg_8], rdx
                add     rdx, 20h ; ' '
                mov     [rbp+0BE0h+var_C30], rdx
                mov     edx, 2
                mov     [rbp+0BE0h+var_C40], rcx
                lea     r13, [rcx+20h]
                mov     [rsp+0CE0h+var_C70], r13
                cmp     eax, edx
                jge     loc_140A07E1E
                mov     r12, [r13+0]
                mov     r13d, [rsi+7E4h]
                mov     r15d, [rcx+30h]
                mov     r8d, [rsi+924h]
                shl     r15d, 2
                lea     eax, [r13+30h]
                cmp     eax, [rsi+0A1Ch]
                jbe     loc_140A07C85
                mov     edx, eax
                mov     rcx, rsi
                call    sub_140A10B30
                xor     r9d, r9d
                mov     r14, rax
                test    rax, rax
                jz      loc_140A08D98
                mov     ecx, [rsi+990h]
                test    cl, 4
                jnz     loc_140A07C7B
                mov     eax, [rsi+7E4h]
                lea     r10d, [r9+1]
                mov     r8, [rsi+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rsi+924h]
                cmp     eax, 8
                jb      short loc_140A07C0C
                mov     ecx, eax
                shr     rcx, 3

loc_140A07BFD:                          ; CODE XREF: sub_1409FA010+DBFA↓j
                mov     [rsi], r9
                add     eax, 0FFFFFFF8h
                add     rsi, 8
                sub     rcx, r10
                jnz     short loc_140A07BFD

loc_140A07C0C:                          ; CODE XREF: sub_1409FA010+DBE5↑j
                test    eax, eax
                jz      short loc_140A07C1F
                mov     ecx, 0FFFFFFFFh

loc_140A07C15:                          ; CODE XREF: sub_1409FA010+DC0D↓j
                mov     [rsi], r9b
                add     rsi, r10
                add     eax, ecx
                jnz     short loc_140A07C15

loc_140A07C1F:                          ; CODE XREF: sub_1409FA010+DBFE↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A07C65
                test    dword ptr [r14+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A07C5C
                mov     rax, [r14+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A07C74
; ---------------------------------------------------------------------------

loc_140A07C5C:                          ; CODE XREF: sub_1409FA010+DC35↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A07C6C
; ---------------------------------------------------------------------------

loc_140A07C65:                          ; CODE XREF: sub_1409FA010+DC20↑j
                mov     rax, [r14+368h]

loc_140A07C6C:                          ; CODE XREF: sub_1409FA010+DC53↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A07C74:                          ; CODE XREF: sub_1409FA010+DC4A↑j
                mov     [r14+924h], ebx

loc_140A07C7B:                          ; CODE XREF: sub_1409FA010+DBBB↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                jmp     short loc_140A07C8E
; ---------------------------------------------------------------------------

loc_140A07C85:                          ; CODE XREF: sub_1409FA010+DB93↑j
                mov     r14, rsi
                mov     [rsi+7E4h], eax

loc_140A07C8E:                          ; CODE XREF: sub_1409FA010+DC73↑j
                lea     rbx, [r14+r13]
                mov     r8d, 1
                add     [r14+80Ch], r8d
                mov     rax, rbx
                mov     [rbp+0BE0h+var_548], rbx
                xor     r13d, r13d
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A07CB3:                          ; CODE XREF: sub_1409FA010+DCB0↓j
                mov     [rax], r13
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A07CB3
                test    ecx, ecx
                jz      short loc_140A07CD5
                mov     edx, 0FFFFFFFFh

loc_140A07CCB:                          ; CODE XREF: sub_1409FA010+DCC3↓j
                mov     [rax], r13b
                add     rax, r8
                add     ecx, edx
                jnz     short loc_140A07CCB

loc_140A07CD5:                          ; CODE XREF: sub_1409FA010+DCB4↑j
                mov     dword ptr [rbx], 0Bh
                mov     r9, r12
                mov     [rbx+8], r12
                mov     rax, r12
                mov     [rbx+10h], r15d
                add     [r14+828h], r15d
                mov     r10d, [r14+814h]
                mov     rsi, [r14+818h]
                mov     ecx, r15d
                add     rcx, r12
                cmp     r12, rcx
                jnb     short loc_140A07D19
                mov     edx, 40h ; '@'

loc_140A07D0E:                          ; CODE XREF: sub_1409FA010+DD07↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A07D0E

loc_140A07D19:                          ; CODE XREF: sub_1409FA010+DCF7↑j
                mov     r11d, r15d
                mov     r8, rsi
                shr     r11d, 7
                mov     r13d, 1
                test    r11d, r11d
                jz      short loc_140A07D9B
                mov     rdi, 7010008004002001h

loc_140A07D38:                          ; CODE XREF: sub_1409FA010+DD82↓j
                mov     edx, 8

loc_140A07D3D:                          ; CODE XREF: sub_1409FA010+DD4A↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r13
                jnz     short loc_140A07D3D
                mov     rcx, r9
                sub     rcx, r12
                xor     rcx, rsi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, edx
                mov     [rbp+0BE0h+var_540], rdx
                xor     r10d, eax
                mov     eax, 0FFFFFFFFh
                and     r10d, 3Fh
                cmovz   r10d, r13d
                add     r11d, eax
                jnz     short loc_140A07D38
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A07D9B:                          ; CODE XREF: sub_1409FA010+DD1C↑j
                mov     edx, r15d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A07DC2
                mov     r11d, edx
                shr     r11, 3

loc_140A07DAD:                          ; CODE XREF: sub_1409FA010+DDB0↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     r11, r13
                jnz     short loc_140A07DAD

loc_140A07DC2:                          ; CODE XREF: sub_1409FA010+DD94↑j
                xor     r11d, r11d
                test    edx, edx
                jz      short loc_140A07DE7
                mov     r11d, 0FFFFFFFFh

loc_140A07DCF:                          ; CODE XREF: sub_1409FA010+DDD2↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r13
                rol     r8, cl
                add     edx, r11d
                jnz     short loc_140A07DCF
                xor     r11d, r11d

loc_140A07DE7:                          ; CODE XREF: sub_1409FA010+DDB7↑j
                mov     rax, r8
                jmp     short loc_140A07DEF
; ---------------------------------------------------------------------------

loc_140A07DEC:                          ; CODE XREF: sub_1409FA010+DDE6↓j
                xor     r8d, eax

loc_140A07DEF:                          ; CODE XREF: sub_1409FA010+DDDA↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A07DEC
                mov     r13, [rsp+0CE0h+var_C70]
                btr     r8d, 1Fh
                mov     [rbx+14h], r8d
                mov     eax, 2
                add     [r14+828h], r15d
                mov     rbx, r14
                mov     [r14+958h], eax
                jmp     short loc_140A07E21
; ---------------------------------------------------------------------------

loc_140A07E1E:                          ; CODE XREF: sub_1409FA010+DB69↑j
                xor     r11d, r11d

loc_140A07E21:                          ; CODE XREF: sub_1409FA010+DE0C↑j
                cmp     dword ptr [rbx+958h], 3
                jge     loc_140A08065
                mov     r14d, [rbx+7E4h]
                mov     r15d, 20h ; ' '
                mov     r12d, [rbx+838h]
                cmp     r12d, 7
                mov     r8d, [rbx+924h]
                cmovnz  r15d, r11d
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A07F3B
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     rsi, rax
                test    rax, rax
                jz      loc_140A08D98
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A07F32
                mov     eax, [rbx+7E4h]
                lea     r9d, [r11+1]
                mov     r8, [rbx+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A07EC4
                mov     ecx, eax
                shr     rcx, 3

loc_140A07EB5:                          ; CODE XREF: sub_1409FA010+DEB2↓j
                mov     [rbx], r11
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r9
                jnz     short loc_140A07EB5

loc_140A07EC4:                          ; CODE XREF: sub_1409FA010+DE9D↑j
                test    eax, eax
                jz      short loc_140A07ED7
                mov     ecx, 0FFFFFFFFh

loc_140A07ECD:                          ; CODE XREF: sub_1409FA010+DEC5↓j
                mov     [rbx], r11b
                add     rbx, r9
                add     eax, ecx
                jnz     short loc_140A07ECD

loc_140A07ED7:                          ; CODE XREF: sub_1409FA010+DEB6↑j
                mov     ebx, [rsi+924h]
                mov     [rsi+924h], edx
                cmp     edx, 3
                jz      short loc_140A07F1A
                test    dword ptr [rsi+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A07F11
                mov     rax, [rsi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A07F29
; ---------------------------------------------------------------------------

loc_140A07F11:                          ; CODE XREF: sub_1409FA010+DEEA↑j
                mov     rax, [rsi+100h]
                jmp     short loc_140A07F21
; ---------------------------------------------------------------------------

loc_140A07F1A:                          ; CODE XREF: sub_1409FA010+DED6↑j
                mov     rax, [rsi+368h]

loc_140A07F21:                          ; CODE XREF: sub_1409FA010+DF08↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A07F29:                          ; CODE XREF: sub_1409FA010+DEFF↑j
                mov     [rsi+924h], ebx
                xor     r11d, r11d

loc_140A07F32:                          ; CODE XREF: sub_1409FA010+DE73↑j
                and     dword ptr [rsi+990h], 0FFFFFFFBh
                jmp     short loc_140A07F44
; ---------------------------------------------------------------------------

loc_140A07F3B:                          ; CODE XREF: sub_1409FA010+DE4B↑j
                mov     rsi, rbx
                mov     [rbx+7E4h], eax

loc_140A07F44:                          ; CODE XREF: sub_1409FA010+DF29↑j
                mov     r8d, 1
                lea     rbx, [rsi+r14]
                add     [rsi+80Ch], r8d
                mov     rax, rbx
                mov     [rbp+0BE0h+var_538], rbx
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A07F66:                          ; CODE XREF: sub_1409FA010+DF63↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A07F66
                test    ecx, ecx
                jz      short loc_140A07F88
                mov     edx, 0FFFFFFFFh

loc_140A07F7E:                          ; CODE XREF: sub_1409FA010+DF76↓j
                mov     [rax], r11b
                add     rax, r8
                add     ecx, edx
                jnz     short loc_140A07F7E

loc_140A07F88:                          ; CODE XREF: sub_1409FA010+DF67↑j
                mov     [rbx], r15d
                mov     r14d, 20h ; ' '
                mov     [rbx+8], r13
                cmp     r12d, 7
                jnz     short loc_140A07FAD
                lea     r9, [rbx+18h]
                mov     r8d, r14d
                mov     rdx, r13
                mov     rcx, rsi
                call    sub_1403EA0CC

loc_140A07FAD:                          ; CODE XREF: sub_1409FA010+DF89↑j
                mov     rcx, [rbp+0BE0h+var_C40]
                mov     r8, r13
                mov     [rbx+10h], r14d
                add     rcx, 40h ; '@'
                add     [rsi+828h], r14d
                mov     rax, r13
                mov     r11d, [rsi+814h]
                mov     rdx, [rsi+818h]
                cmp     r13, rcx
                jnb     short loc_140A07FEA
                mov     r9d, 40h ; '@'

loc_140A07FDF:                          ; CODE XREF: sub_1409FA010+DFD8↓j
                prefetchnta byte ptr [rax]
                add     rax, r9
                cmp     rax, rcx
                jb      short loc_140A07FDF

loc_140A07FEA:                          ; CODE XREF: sub_1409FA010+DFC7↑j
                mov     r10d, 4
                mov     r9d, r14d
                lea     r15d, [r10-3]

loc_140A07FF7:                          ; CODE XREF: sub_1409FA010+DFFB↓j
                xor     rdx, [r8]
                mov     ecx, r11d
                rol     rdx, cl
                add     r8, 8
                add     r9d, 0FFFFFFF8h
                sub     r10, r15
                jnz     short loc_140A07FF7
                test    r9d, r9d
                jz      short loc_140A08033
                mov     edi, 0FFFFFFFFh

loc_140A08017:                          ; CODE XREF: sub_1409FA010+E01A↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r11d
                xor     rdx, rax
                add     r8, r15
                rol     rdx, cl
                add     r9d, edi
                jnz     short loc_140A08017
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A08033:                          ; CODE XREF: sub_1409FA010+E000↑j
                mov     rax, rdx
                shr     rax, 1Fh
                xor     r11d, r11d
                jmp     short loc_140A08045
; ---------------------------------------------------------------------------

loc_140A0803F:                          ; CODE XREF: sub_1409FA010+E038↓j
                xor     edx, eax
                shr     rax, 1Fh

loc_140A08045:                          ; CODE XREF: sub_1409FA010+E02D↑j
                test    rax, rax
                jnz     short loc_140A0803F
                btr     edx, 1Fh
                mov     [rbx+14h], edx
                mov     rbx, rsi
                add     [rsi+828h], r14d
                mov     dword ptr [rsi+958h], 3

loc_140A08065:                          ; CODE XREF: sub_1409FA010+DE18↑j
                cmp     dword ptr [rbx+958h], 4
                mov     r13, [rbp+0BE0h+var_C30]
                jge     loc_140A08318
                mov     rax, [rbp+0BE0h+arg_8]
                mov     r14d, [rbx+7E4h]
                mov     r12, [r13+0]
                mov     r8d, [rbx+924h]
                mov     r15d, [rax+30h]
                shl     r15d, 2
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A08181
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     rsi, rax
                test    rax, rax
                jz      loc_140A08D98
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A08178
                mov     eax, [rbx+7E4h]
                lea     r9d, [r11+1]
                mov     r8, [rbx+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A0810A
                mov     ecx, eax
                shr     rcx, 3

loc_140A080FB:                          ; CODE XREF: sub_1409FA010+E0F8↓j
                mov     [rbx], r11
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r9
                jnz     short loc_140A080FB

loc_140A0810A:                          ; CODE XREF: sub_1409FA010+E0E3↑j
                test    eax, eax
                jz      short loc_140A0811D
                mov     ecx, 0FFFFFFFFh

loc_140A08113:                          ; CODE XREF: sub_1409FA010+E10B↓j
                mov     [rbx], r11b
                add     rbx, r9
                add     eax, ecx
                jnz     short loc_140A08113

loc_140A0811D:                          ; CODE XREF: sub_1409FA010+E0FC↑j
                mov     ebx, [rsi+924h]
                mov     [rsi+924h], edx
                cmp     edx, 3
                jz      short loc_140A08160
                test    dword ptr [rsi+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A08157
                mov     rax, [rsi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A0816F
; ---------------------------------------------------------------------------

loc_140A08157:                          ; CODE XREF: sub_1409FA010+E130↑j
                mov     rax, [rsi+100h]
                jmp     short loc_140A08167
; ---------------------------------------------------------------------------

loc_140A08160:                          ; CODE XREF: sub_1409FA010+E11C↑j
                mov     rax, [rsi+368h]

loc_140A08167:                          ; CODE XREF: sub_1409FA010+E14E↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A0816F:                          ; CODE XREF: sub_1409FA010+E145↑j
                mov     [rsi+924h], ebx
                xor     r11d, r11d

loc_140A08178:                          ; CODE XREF: sub_1409FA010+E0B9↑j
                and     dword ptr [rsi+990h], 0FFFFFFFBh
                jmp     short loc_140A0818A
; ---------------------------------------------------------------------------

loc_140A08181:                          ; CODE XREF: sub_1409FA010+E091↑j
                mov     rsi, rbx
                mov     [rbx+7E4h], eax

loc_140A0818A:                          ; CODE XREF: sub_1409FA010+E16F↑j
                mov     r8d, 1
                lea     rbx, [rsi+r14]
                add     [rsi+80Ch], r8d
                mov     rax, rbx
                mov     [rbp+0BE0h+var_530], rbx
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A081AC:                          ; CODE XREF: sub_1409FA010+E1A9↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A081AC
                test    ecx, ecx
                jz      short loc_140A081CE
                mov     edx, 0FFFFFFFFh

loc_140A081C4:                          ; CODE XREF: sub_1409FA010+E1BC↓j
                mov     [rax], r11b
                add     rax, r8
                add     ecx, edx
                jnz     short loc_140A081C4

loc_140A081CE:                          ; CODE XREF: sub_1409FA010+E1AD↑j
                mov     dword ptr [rbx], 0Bh
                mov     r9, r12
                mov     [rbx+8], r12
                mov     rax, r12
                mov     [rbx+10h], r15d
                add     [rsi+828h], r15d
                mov     r10d, [rsi+814h]
                mov     r14, [rsi+818h]
                mov     ecx, r15d
                add     rcx, r12
                cmp     r12, rcx
                jnb     short loc_140A08212
                mov     edx, 40h ; '@'

loc_140A08207:                          ; CODE XREF: sub_1409FA010+E200↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A08207

loc_140A08212:                          ; CODE XREF: sub_1409FA010+E1F0↑j
                mov     r11d, r15d
                mov     r8, r14
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A08298
                mov     rdi, 7010008004002001h

loc_140A0822B:                          ; CODE XREF: sub_1409FA010+E27B↓j
                mov     edx, 8
                lea     r13d, [rdx-7]

loc_140A08234:                          ; CODE XREF: sub_1409FA010+E241↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r13
                jnz     short loc_140A08234
                mov     rcx, r9
                sub     rcx, r12
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     [rbp+0BE0h+var_528], rdx
                xor     edx, eax
                xor     r10d, edx
                mov     rax, r13
                and     r10d, 3Fh
                cmovz   r10d, eax
                mov     eax, 0FFFFFFFFh
                add     r11d, eax
                jnz     short loc_140A0822B
                mov     r13, [rbp+0BE0h+var_C30]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A08298:                          ; CODE XREF: sub_1409FA010+E20F↑j
                mov     edx, r15d
                mov     r14d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A082C5
                mov     r11d, edx
                shr     r11, 3

loc_140A082B0:                          ; CODE XREF: sub_1409FA010+E2B3↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     r11, r14
                jnz     short loc_140A082B0

loc_140A082C5:                          ; CODE XREF: sub_1409FA010+E297↑j
                xor     r11d, r11d
                test    edx, edx
                jz      short loc_140A082EA
                mov     r11d, 0FFFFFFFFh

loc_140A082D2:                          ; CODE XREF: sub_1409FA010+E2D5↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r14
                rol     r8, cl
                add     edx, r11d
                jnz     short loc_140A082D2
                xor     r11d, r11d

loc_140A082EA:                          ; CODE XREF: sub_1409FA010+E2BA↑j
                mov     rax, r8
                jmp     short loc_140A082F2
; ---------------------------------------------------------------------------

loc_140A082EF:                          ; CODE XREF: sub_1409FA010+E2E9↓j
                xor     r8d, eax

loc_140A082F2:                          ; CODE XREF: sub_1409FA010+E2DD↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A082EF
                btr     r8d, 1Fh
                mov     [rbx+14h], r8d
                mov     rbx, rsi
                add     [rsi+828h], r15d
                mov     dword ptr [rsi+958h], 4

loc_140A08318:                          ; CODE XREF: sub_1409FA010+E060↑j
                cmp     dword ptr [rbx+958h], 5
                jge     loc_140A0855A
                mov     r14d, [rbx+7E4h]
                mov     r15d, 20h ; ' '
                mov     r12d, [rbx+838h]
                cmp     r12d, 7
                mov     r8d, [rbx+924h]
                cmovnz  r15d, r11d
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A08432
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     rsi, rax
                test    rax, rax
                jz      loc_140A08D98
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A08429
                mov     eax, [rbx+7E4h]
                lea     r9d, [r11+1]
                mov     r8, [rbx+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A083BB
                mov     ecx, eax
                shr     rcx, 3

loc_140A083AC:                          ; CODE XREF: sub_1409FA010+E3A9↓j
                mov     [rbx], r11
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r9
                jnz     short loc_140A083AC

loc_140A083BB:                          ; CODE XREF: sub_1409FA010+E394↑j
                test    eax, eax
                jz      short loc_140A083CE
                mov     ecx, 0FFFFFFFFh

loc_140A083C4:                          ; CODE XREF: sub_1409FA010+E3BC↓j
                mov     [rbx], r11b
                add     rbx, r9
                add     eax, ecx
                jnz     short loc_140A083C4

loc_140A083CE:                          ; CODE XREF: sub_1409FA010+E3AD↑j
                mov     ebx, [rsi+924h]
                mov     [rsi+924h], edx
                cmp     edx, 3
                jz      short loc_140A08411
                test    dword ptr [rsi+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A08408
                mov     rax, [rsi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A08420
; ---------------------------------------------------------------------------

loc_140A08408:                          ; CODE XREF: sub_1409FA010+E3E1↑j
                mov     rax, [rsi+100h]
                jmp     short loc_140A08418
; ---------------------------------------------------------------------------

loc_140A08411:                          ; CODE XREF: sub_1409FA010+E3CD↑j
                mov     rax, [rsi+368h]

loc_140A08418:                          ; CODE XREF: sub_1409FA010+E3FF↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A08420:                          ; CODE XREF: sub_1409FA010+E3F6↑j
                mov     [rsi+924h], ebx
                xor     r11d, r11d

loc_140A08429:                          ; CODE XREF: sub_1409FA010+E36A↑j
                and     dword ptr [rsi+990h], 0FFFFFFFBh
                jmp     short loc_140A0843B
; ---------------------------------------------------------------------------

loc_140A08432:                          ; CODE XREF: sub_1409FA010+E342↑j
                mov     rsi, rbx
                mov     [rbx+7E4h], eax

loc_140A0843B:                          ; CODE XREF: sub_1409FA010+E420↑j
                mov     r8d, 1
                lea     rbx, [rsi+r14]
                add     [rsi+80Ch], r8d
                mov     rax, rbx
                mov     [rbp+0BE0h+var_520], rbx
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A0845D:                          ; CODE XREF: sub_1409FA010+E45A↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A0845D
                test    ecx, ecx
                jz      short loc_140A0847F
                mov     edx, 0FFFFFFFFh

loc_140A08475:                          ; CODE XREF: sub_1409FA010+E46D↓j
                mov     [rax], r11b
                add     rax, r8
                add     ecx, edx
                jnz     short loc_140A08475

loc_140A0847F:                          ; CODE XREF: sub_1409FA010+E45E↑j
                mov     [rbx], r15d
                mov     r14d, 20h ; ' '
                mov     [rbx+8], r13
                cmp     r12d, 7
                jnz     short loc_140A084A4
                lea     r9, [rbx+18h]
                mov     r8d, r14d
                mov     rdx, r13
                mov     rcx, rsi
                call    sub_1403EA0CC

loc_140A084A4:                          ; CODE XREF: sub_1409FA010+E480↑j
                mov     rcx, [rbp+0BE0h+arg_8]
                mov     r8, r13
                mov     [rbx+10h], r14d
                add     rcx, 40h ; '@'
                add     [rsi+828h], r14d
                mov     rax, r13
                mov     r11d, [rsi+814h]
                mov     rdx, [rsi+818h]
                cmp     r13, rcx
                jnb     short loc_140A084E4
                mov     r9d, 40h ; '@'

loc_140A084D9:                          ; CODE XREF: sub_1409FA010+E4D2↓j
                prefetchnta byte ptr [rax]
                add     rax, r9
                cmp     rax, rcx
                jb      short loc_140A084D9

loc_140A084E4:                          ; CODE XREF: sub_1409FA010+E4C1↑j
                mov     r10d, 4
                mov     r9d, r14d
                lea     r12d, [r10-3]

loc_140A084F1:                          ; CODE XREF: sub_1409FA010+E4F5↓j
                xor     rdx, [r8]
                mov     ecx, r11d
                rol     rdx, cl
                add     r8, 8
                add     r9d, 0FFFFFFF8h
                sub     r10, r12
                jnz     short loc_140A084F1
                xor     r15d, r15d
                test    r9d, r9d
                jz      short loc_140A0852D
                mov     r15d, 0FFFFFFFFh

loc_140A08515:                          ; CODE XREF: sub_1409FA010+E518↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r11d
                xor     rdx, rax
                add     r8, r12
                rol     rdx, cl
                add     r9d, r15d
                jnz     short loc_140A08515
                xor     r15d, r15d

loc_140A0852D:                          ; CODE XREF: sub_1409FA010+E4FD↑j
                mov     rax, rdx
                jmp     short loc_140A08534
; ---------------------------------------------------------------------------

loc_140A08532:                          ; CODE XREF: sub_1409FA010+E52B↓j
                xor     edx, eax

loc_140A08534:                          ; CODE XREF: sub_1409FA010+E520↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A08532
                btr     edx, 1Fh
                mov     [rbx+14h], edx
                mov     rbx, rsi
                add     [rsi+828h], r14d
                mov     dword ptr [rsi+958h], 5
                jmp     short loc_140A0855D
; ---------------------------------------------------------------------------

loc_140A0855A:                          ; CODE XREF: sub_1409FA010+E30F↑j
                xor     r15d, r15d

loc_140A0855D:                          ; CODE XREF: sub_1409FA010+E548↑j
                mov     eax, [rbx+958h]
                mov     r12d, 6
                mov     rsi, rbx
                mov     r14, rbx
                cmp     eax, r12d
                jge     loc_140A0894C
                test    dword ptr [rbx+990h], 40000000h
                mov     r13d, r15d
                mov     r15, [rbp+0BE0h+var_C40]
                mov     rax, [r15+20h]
                mov     [rbp+0BE0h+var_BD8], rax
                jnz     loc_140A08931
                xor     eax, eax
                mov     ebx, eax
                cmp     [r15+30h], eax
                jbe     loc_140A08931
                mov     rdi, [rbp+0BE0h+var_BD8]

loc_140A085A9:                          ; CODE XREF: sub_1409FA010+E5D1↓j
                mov     eax, ebx
                lea     rdx, [rbp+0BE0h+var_898]
                xor     r8d, r8d
                movsxd  rcx, dword ptr [rdi+rax*4]
                mov     rax, [rsi+260h]
                sar     rcx, 4
                add     rcx, rdi
                call    j__guard_dispatch_icall_nop
                mov     r9d, 1
                test    rax, rax
                jnz     short loc_140A085DA
                add     r13d, r9d

loc_140A085DA:                          ; CODE XREF: sub_1409FA010+E5C5↑j
                add     ebx, r9d
                cmp     ebx, [r15+30h]
                jb      short loc_140A085A9
                xor     r15d, r15d
                mov     rdi, 0FFFFFFFFB8797400h
                test    r13d, r13d
                jz      loc_140A08934
                mov     r14d, [rsi+7E4h]
                mov     ecx, r13d
                mov     r8d, [rsi+924h]
                shl     ecx, 4
                add     ecx, 30h ; '0'
                add     ecx, r14d
                cmp     ecx, [rsi+0A1Ch]
                jbe     loc_140A08703
                mov     edx, ecx
                mov     rcx, rsi
                call    sub_140A10B30
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A086F6
                mov     ecx, [rsi+990h]
                test    cl, 4
                jnz     loc_140A086E7
                mov     eax, [rsi+7E4h]
                lea     r9d, [r15+1]
                mov     r8, [rsi+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rsi+924h]
                cmp     eax, 8
                jb      short loc_140A0867C
                mov     ecx, eax
                shr     rcx, 3

loc_140A0866D:                          ; CODE XREF: sub_1409FA010+E66A↓j
                mov     [rsi], r15
                add     eax, 0FFFFFFF8h
                add     rsi, 8
                sub     rcx, r9
                jnz     short loc_140A0866D

loc_140A0867C:                          ; CODE XREF: sub_1409FA010+E655↑j
                test    eax, eax
                jz      short loc_140A0868F
                mov     ecx, 0FFFFFFFFh

loc_140A08685:                          ; CODE XREF: sub_1409FA010+E67D↓j
                mov     [rsi], r15b
                add     rsi, r9
                add     eax, ecx
                jnz     short loc_140A08685

loc_140A0868F:                          ; CODE XREF: sub_1409FA010+E66E↑j
                mov     esi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A086D2
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r15d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A086C9
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A086E1
; ---------------------------------------------------------------------------

loc_140A086C9:                          ; CODE XREF: sub_1409FA010+E6A2↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A086D9
; ---------------------------------------------------------------------------

loc_140A086D2:                          ; CODE XREF: sub_1409FA010+E68E↑j
                mov     rax, [rbx+368h]

loc_140A086D9:                          ; CODE XREF: sub_1409FA010+E6C0↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A086E1:                          ; CODE XREF: sub_1409FA010+E6B7↑j
                mov     [rbx+924h], esi

loc_140A086E7:                          ; CODE XREF: sub_1409FA010+E62B↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                mov     r9d, 1
                jmp     short loc_140A0870C
; ---------------------------------------------------------------------------

loc_140A086F6:                          ; CODE XREF: sub_1409FA010+E61C↑j
                mov     eax, 0C000022Dh
                mov     r14, rsi
                jmp     loc_140A08937
; ---------------------------------------------------------------------------

loc_140A08703:                          ; CODE XREF: sub_1409FA010+E606↑j
                mov     rbx, rsi
                mov     [rsi+7E4h], ecx

loc_140A0870C:                          ; CODE XREF: sub_1409FA010+E6E4↑j
                add     [rbx+80Ch], r9d
                lea     rcx, [rbx+r14]
                mov     [rbp+0BE0h+var_838], rcx
                mov     rax, rcx
                mov     edx, 30h ; '0'
                mov     r8, r12

loc_140A08729:                          ; CODE XREF: sub_1409FA010+E726↓j
                mov     [rax], r15
                add     edx, 0FFFFFFF8h
                add     rax, 8
                sub     r8, r9
                jnz     short loc_140A08729
                test    edx, edx
                jz      short loc_140A0874D
                mov     r8d, 0FFFFFFFFh

loc_140A08742:                          ; CODE XREF: sub_1409FA010+E73B↓j
                mov     [rax], r15b
                add     rax, r9
                add     edx, r8d
                jnz     short loc_140A08742

loc_140A0874D:                          ; CODE XREF: sub_1409FA010+E72A↑j
                mov     dword ptr [rcx], 0Ah
                mov     [rcx+8], r15
                mov     [rcx+10h], r15d
                mov     rdx, [rbx+818h]
                mov     rax, rdx
                jmp     short loc_140A08769
; ---------------------------------------------------------------------------

loc_140A08767:                          ; CODE XREF: sub_1409FA010+E760↓j
                xor     edx, eax

loc_140A08769:                          ; CODE XREF: sub_1409FA010+E755↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A08767
                btr     edx, 1Fh
                mov     r14, rbx
                mov     [rcx+14h], edx
                mov     rax, [rbp+0BE0h+var_838]
                mov     [rbp+0BE0h+var_A10], rax
                mov     [rax+18h], r9d
                mov     rax, [rbp+0BE0h+var_A10]
                mov     r9, [rbp+0BE0h+var_C40]
                mov     [rax+1Ch], r13d
                xor     eax, eax
                mov     r12d, eax
                mov     rcx, [rbp+0BE0h+var_A10]
                lea     r15, [rcx+30h]
                cmp     [r9+30h], eax
                jbe     loc_140A088A9

loc_140A087B7:                          ; CODE XREF: sub_1409FA010+E88A↓j
                mov     rcx, [rbp+0BE0h+var_BD8]
                lea     rdx, [rbp+0BE0h+var_898]
                mov     eax, r12d
                xor     r8d, r8d
                movsxd  rsi, dword ptr [rcx+rax*4]
                mov     rax, [rbx+260h]
                sar     rsi, 4
                add     rsi, rcx
                mov     rcx, rsi
                mov     [rsp+0CE0h+var_C70], rsi
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     loc_140A08889
                lea     r11d, [rax+4]
                mov     r8, rsi
                add     [rbx+828h], r11d
                lea     rcx, [rsi+4]
                mov     r10d, [rbx+814h]
                mov     rax, rsi
                mov     rdx, [rbx+818h]
                cmp     rsi, rcx
                jnb     short loc_140A08827
                lea     r9d, [r11+3Ch]

loc_140A0881C:                          ; CODE XREF: sub_1409FA010+E815↓j
                prefetchnta byte ptr [rax]
                add     rax, r9
                cmp     rax, rcx
                jb      short loc_140A0881C

loc_140A08827:                          ; CODE XREF: sub_1409FA010+E806↑j
                mov     r9d, r11d
                mov     edi, 1
                mov     esi, 0FFFFFFFFh

loc_140A08834:                          ; CODE XREF: sub_1409FA010+E837↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rdx, rax
                add     r8, rdi
                rol     rdx, cl
                add     r9d, esi
                jnz     short loc_140A08834
                mov     rsi, [rsp+0CE0h+var_C70]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     rax, rdx
                jmp     short loc_140A0885C
; ---------------------------------------------------------------------------

loc_140A0885A:                          ; CODE XREF: sub_1409FA010+E853↓j
                xor     edx, eax

loc_140A0885C:                          ; CODE XREF: sub_1409FA010+E848↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0885A
                xor     edx, [r15]
                mov     eax, 0FFFFFFFFh
                btr     edx, 1Fh
                xor     [r15], edx
                mov     [r15+4], r11d
                mov     [r15+8], rsi
                add     r15, 10h
                add     r13d, eax
                jz      loc_140A0892B

loc_140A08889:                          ; CODE XREF: sub_1409FA010+E7DA↑j
                mov     rax, [rbp+0BE0h+var_C40]
                mov     r9d, 1
                add     r12d, r9d
                cmp     r12d, [rax+30h]
                jb      loc_140A087B7
                mov     rcx, [rbp+0BE0h+var_A10]
                jmp     short loc_140A088AF
; ---------------------------------------------------------------------------

loc_140A088A9:                          ; CODE XREF: sub_1409FA010+E7A1↑j
                mov     r9d, 1

loc_140A088AF:                          ; CODE XREF: sub_1409FA010+E897↑j
                xor     r15d, r15d
                test    r13d, r13d
                jz      loc_140A08AAE
                cmp     [rbx+8F8h], r15d
                jnz     loc_140A08D9B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     [rbx+900h], rax
                test    rcx, rcx
                jz      short loc_140A088F0
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                jmp     short loc_140A088F3
; ---------------------------------------------------------------------------

loc_140A088F0:                          ; CODE XREF: sub_1409FA010+E8CF↑j
                mov     rax, r15

loc_140A088F3:                          ; CODE XREF: sub_1409FA010+E8DE↑j
                mov     [rbx+908h], rax
                test    rcx, rcx
                jz      short loc_140A08904
                movsxd  rax, dword ptr [rcx]
                jmp     short loc_140A08907
; ---------------------------------------------------------------------------

loc_140A08904:                          ; CODE XREF: sub_1409FA010+E8ED↑j
                mov     rax, r15

loc_140A08907:                          ; CODE XREF: sub_1409FA010+E8F2↑j
                mov     [rbx+910h], rax
                mov     [rbx+918h], r15
                mov     [rbx+8F8h], r9d

loc_140A0891C:                          ; CODE XREF: sub_1409FA010+ECFD↓j
                xor     edx, edx
                mov     rcx, rbx
                call    sub_140A113CC
                jmp     loc_140A08D9B
; ---------------------------------------------------------------------------

loc_140A0892B:                          ; CODE XREF: sub_1409FA010+E873↑j
                mov     r12d, 6

loc_140A08931:                          ; CODE XREF: sub_1409FA010+E581↑j
                                        ; sub_1409FA010+E58F↑j
                xor     r15d, r15d

loc_140A08934:                          ; CODE XREF: sub_1409FA010+E5E0↑j
                                        ; sub_1409FA010+EAA4↓j
                mov     eax, r15d

loc_140A08937:                          ; CODE XREF: sub_1409FA010+E6EE↑j
                mov     rbx, r14
                test    eax, eax
                js      loc_140A08D9B
                mov     [r14+958h], r12d
                mov     eax, r12d

loc_140A0894C:                          ; CODE XREF: sub_1409FA010+E562↑j
                cmp     eax, 7
                jge     loc_140A08D2A
                test    dword ptr [r14+990h], 40000000h
                mov     r13d, r15d
                mov     rdx, [rbp+0BE0h+var_C30]
                mov     rsi, [rdx]
                mov     [rbp+0BE0h+var_C40], rsi
                jnz     loc_140A08D15
                mov     rax, [rbp+0BE0h+arg_8]
                mov     ebx, r15d
                cmp     [rax+30h], r15d
                jbe     loc_140A08D15
                mov     rdi, rax

loc_140A0898B:                          ; CODE XREF: sub_1409FA010+E9B2↓j
                mov     eax, ebx
                lea     rdx, [rbp+0BE0h+var_8C0]
                xor     r8d, r8d
                movsxd  rcx, dword ptr [rsi+rax*4]
                mov     rax, [r14+260h]
                sar     rcx, 4
                add     rcx, rsi
                call    j__guard_dispatch_icall_nop
                mov     r10d, 1
                test    rax, rax
                jnz     short loc_140A089BC
                add     r13d, r10d

loc_140A089BC:                          ; CODE XREF: sub_1409FA010+E9A7↑j
                add     ebx, r10d
                cmp     ebx, [rdi+30h]
                jb      short loc_140A0898B
                mov     rdi, 0FFFFFFFFB8797400h
                test    r13d, r13d
                jz      loc_140A08D15
                mov     r15d, [r14+7E4h]
                mov     ecx, r13d
                mov     r8d, [r14+924h]
                shl     ecx, 4
                add     ecx, 30h ; '0'
                add     ecx, r15d
                cmp     ecx, [r14+0A1Ch]
                jbe     loc_140A08AF7
                mov     edx, ecx
                mov     rcx, r14
                call    sub_140A10B30
                xor     r9d, r9d
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A08AEA
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A08ADB
                mov     eax, [r14+7E4h]
                lea     r10d, [r9+1]
                mov     r8, [r14+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A08A61
                mov     ecx, eax
                shr     rcx, 3

loc_140A08A52:                          ; CODE XREF: sub_1409FA010+EA4F↓j
                mov     [r14], r9
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, r10
                jnz     short loc_140A08A52

loc_140A08A61:                          ; CODE XREF: sub_1409FA010+EA3A↑j
                test    eax, eax
                jz      short loc_140A08A74
                mov     ecx, 0FFFFFFFFh

loc_140A08A6A:                          ; CODE XREF: sub_1409FA010+EA62↓j
                mov     [r14], r9b
                add     r14, r10
                add     eax, ecx
                jnz     short loc_140A08A6A

loc_140A08A74:                          ; CODE XREF: sub_1409FA010+EA53↑j
                mov     esi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A08AC2
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A08AB9
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A08AD1
; ---------------------------------------------------------------------------

loc_140A08AAE:                          ; CODE XREF: sub_1409FA010+E8A5↑j
                mov     r12d, 6
                jmp     loc_140A08934
; ---------------------------------------------------------------------------

loc_140A08AB9:                          ; CODE XREF: sub_1409FA010+EA87↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A08AC9
; ---------------------------------------------------------------------------

loc_140A08AC2:                          ; CODE XREF: sub_1409FA010+EA73↑j
                mov     rax, [rbx+368h]

loc_140A08AC9:                          ; CODE XREF: sub_1409FA010+EAB0↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A08AD1:                          ; CODE XREF: sub_1409FA010+EA9C↑j
                mov     [rbx+924h], esi
                mov     rsi, [rbp+0BE0h+var_C40]

loc_140A08ADB:                          ; CODE XREF: sub_1409FA010+EA0E↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                mov     r10d, 1
                jmp     short loc_140A08B01
; ---------------------------------------------------------------------------

loc_140A08AEA:                          ; CODE XREF: sub_1409FA010+E9FE↑j
                mov     eax, 0C000022Dh
                xor     r15d, r15d
                jmp     loc_140A08D18
; ---------------------------------------------------------------------------

loc_140A08AF7:                          ; CODE XREF: sub_1409FA010+E9E5↑j
                mov     rbx, r14
                mov     [r14+7E4h], ecx

loc_140A08B01:                          ; CODE XREF: sub_1409FA010+EAD8↑j
                add     [rbx+80Ch], r10d
                lea     rcx, [rbx+r15]
                mov     [rbp+0BE0h+var_8C8], rcx
                mov     rax, rcx
                xor     r9d, r9d
                mov     edx, 30h ; '0'
                mov     r8, r12

loc_140A08B21:                          ; CODE XREF: sub_1409FA010+EB1E↓j
                mov     [rax], r9
                add     edx, 0FFFFFFF8h
                add     rax, 8
                sub     r8, r10
                jnz     short loc_140A08B21
                test    edx, edx
                jz      short loc_140A08B45
                mov     r8d, 0FFFFFFFFh

loc_140A08B3A:                          ; CODE XREF: sub_1409FA010+EB33↓j
                mov     [rax], r9b
                add     rax, r10
                add     edx, r8d
                jnz     short loc_140A08B3A

loc_140A08B45:                          ; CODE XREF: sub_1409FA010+EB22↑j
                mov     dword ptr [rcx], 0Ah
                mov     [rcx+8], r9
                mov     [rcx+10h], r9d
                mov     rdx, [rbx+818h]
                mov     rax, rdx
                jmp     short loc_140A08B61
; ---------------------------------------------------------------------------

loc_140A08B5F:                          ; CODE XREF: sub_1409FA010+EB58↓j
                xor     edx, eax

loc_140A08B61:                          ; CODE XREF: sub_1409FA010+EB4D↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A08B5F
                btr     edx, 1Fh
                mov     r14, rbx
                mov     [rcx+14h], edx
                mov     r12d, r9d
                mov     rax, [rbp+0BE0h+var_8C8]
                mov     [rbp+0BE0h+var_A58], rax
                mov     [rax+18h], r10d
                mov     rax, [rbp+0BE0h+var_A58]
                mov     [rax+1Ch], r13d
                mov     rax, [rbp+0BE0h+arg_8]
                mov     rcx, [rbp+0BE0h+var_A58]
                lea     r15, [rcx+30h]
                cmp     [rax+30h], r9d
                jbe     loc_140A08CA4

loc_140A08BB0:                          ; CODE XREF: sub_1409FA010+EC87↓j
                mov     eax, r12d
                lea     rdx, [rbp+0BE0h+var_8C0]
                xor     r8d, r8d
                movsxd  rsi, dword ptr [rsi+rax*4]
                mov     rax, [rbx+260h]
                sar     rsi, 4
                add     rsi, [rbp+0BE0h+var_C40]
                mov     rcx, rsi
                mov     [rsp+0CE0h+var_C70], rsi
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     loc_140A08C7F
                lea     r11d, [rax+4]
                mov     r8, rsi
                add     [rbx+828h], r11d
                lea     rcx, [rsi+4]
                mov     r10d, [rbx+814h]
                mov     rax, rsi
                mov     rdx, [rbx+818h]
                cmp     rsi, rcx
                jnb     short loc_140A08C1D
                lea     r9d, [r11+3Ch]

loc_140A08C12:                          ; CODE XREF: sub_1409FA010+EC0B↓j
                prefetchnta byte ptr [rax]
                add     rax, r9
                cmp     rax, rcx
                jb      short loc_140A08C12

loc_140A08C1D:                          ; CODE XREF: sub_1409FA010+EBFC↑j
                mov     r9d, r11d
                mov     edi, 1
                mov     esi, 0FFFFFFFFh

loc_140A08C2A:                          ; CODE XREF: sub_1409FA010+EC2D↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rdx, rax
                add     r8, rdi
                rol     rdx, cl
                add     r9d, esi
                jnz     short loc_140A08C2A
                mov     rsi, [rsp+0CE0h+var_C70]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     rax, rdx
                jmp     short loc_140A08C52
; ---------------------------------------------------------------------------

loc_140A08C50:                          ; CODE XREF: sub_1409FA010+EC49↓j
                xor     edx, eax

loc_140A08C52:                          ; CODE XREF: sub_1409FA010+EC3E↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A08C50
                xor     edx, [r15]
                mov     eax, 0FFFFFFFFh
                btr     edx, 1Fh
                xor     [r15], edx
                mov     [r15+4], r11d
                mov     [r15+8], rsi
                add     r15, 10h
                add     r13d, eax
                jz      loc_140A08D12

loc_140A08C7F:                          ; CODE XREF: sub_1409FA010+EBD0↑j
                mov     rax, [rbp+0BE0h+arg_8]
                mov     r10d, 1
                mov     rsi, [rbp+0BE0h+var_C40]
                add     r12d, r10d
                cmp     r12d, [rax+30h]
                jb      loc_140A08BB0
                mov     rcx, [rbp+0BE0h+var_A58]

loc_140A08CA4:                          ; CODE XREF: sub_1409FA010+EB9A↑j
                xor     r15d, r15d
                test    r13d, r13d
                jz      short loc_140A08D15
                cmp     [rbx+8F8h], r15d
                jnz     loc_140A08D9B
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     [rbx+900h], rax
                test    rcx, rcx
                jz      short loc_140A08CE1
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                jmp     short loc_140A08CE4
; ---------------------------------------------------------------------------

loc_140A08CE1:                          ; CODE XREF: sub_1409FA010+ECC0↑j
                mov     rax, r15

loc_140A08CE4:                          ; CODE XREF: sub_1409FA010+ECCF↑j
                mov     [rbx+908h], rax
                test    rcx, rcx
                jz      short loc_140A08CF5
                movsxd  rax, dword ptr [rcx]
                jmp     short loc_140A08CF8
; ---------------------------------------------------------------------------

loc_140A08CF5:                          ; CODE XREF: sub_1409FA010+ECDE↑j
                mov     rax, r15

loc_140A08CF8:                          ; CODE XREF: sub_1409FA010+ECE3↑j
                mov     [rbx+910h], rax
                mov     [rbx+918h], r15
                mov     [rbx+8F8h], r10d
                jmp     loc_140A0891C
; ---------------------------------------------------------------------------

loc_140A08D12:                          ; CODE XREF: sub_1409FA010+EC69↑j
                xor     r15d, r15d

loc_140A08D15:                          ; CODE XREF: sub_1409FA010+E95E↑j
                                        ; sub_1409FA010+E972↑j ...
                mov     eax, r15d

loc_140A08D18:                          ; CODE XREF: sub_1409FA010+EAE2↑j
                mov     rbx, r14
                test    eax, eax
                js      short loc_140A08D9B
                mov     dword ptr [r14+958h], 7

loc_140A08D2A:                          ; CODE XREF: sub_1409FA010+E93F↑j
                mov     eax, r15d

loc_140A08D2D:                          ; CODE XREF: sub_1409FA010+ED90↓j
                mov     rsi, rbx
                test    eax, eax
                js      short loc_140A08D8D
                mov     r14d, 0FFFFFFFFh

loc_140A08D3A:                          ; CODE XREF: sub_1409FA010+D8CC↑j
                mov     rax, [rbx+570h]
                lea     rdx, [rbp+0BE0h+var_210]
                mov     rsi, rbx
                mov     [rsp+0CE0h+var_C80], rbx
                mov     [rbp+0BE0h+var_BA8], rbx
                mov     rcx, [rax+20h]
                mov     rax, [rbx+200h]
                mov     [rbp+0BE0h+var_C40], rcx
                call    j__guard_dispatch_icall_nop
                mov     r13d, [rbp+0BE0h+var_1FC]
                mov     r12, rax
                mov     [rbp+0BE0h+var_C30], rax
                mov     rax, [rbp+0BE0h+var_208]
                mov     dword ptr [rbp+0BE0h+arg_8], r13d
                mov     [rbp+0BE0h+var_C08], rax
                test    rax, rax
                jnz     short loc_140A08DA2

loc_140A08D8D:                          ; CODE XREF: sub_1409FA010+DA43↑j
                                        ; sub_1409FA010+DA5F↑j ...
                mov     r12d, 1
                jmp     loc_140A07AB7
; ---------------------------------------------------------------------------

loc_140A08D98:                          ; CODE XREF: sub_1409FA010+DBAC↑j
                                        ; sub_1409FA010+DE64↑j ...
                xor     r15d, r15d

loc_140A08D9B:                          ; CODE XREF: sub_1409FA010+E8B2↑j
                                        ; sub_1409FA010+E916↑j ...
                mov     eax, 0C000022Dh
                jmp     short loc_140A08D2D
; ---------------------------------------------------------------------------

loc_140A08DA2:                          ; CODE XREF: sub_1409FA010+ED7B↑j
                mov     ecx, 4
                mov     [rbp+0BE0h+var_AE8], r15
                lea     rax, [rbp+0BE0h+var_AE0]
                lea     edx, [rcx-3]

loc_140A08DB8:                          ; CODE XREF: sub_1409FA010+EDB1↓j
                mov     [rax], r15b
                add     rax, rdx
                add     ecx, r14d
                jnz     short loc_140A08DB8
                xor     edx, edx
                cmp     [rbx+80Ch], edx
                jbe     loc_140A08FCF
                mov     ecx, [rbp+0BE0h+var_AE0]
                mov     r9d, dword ptr [rbp+0BE0h+var_AE8+4]
                mov     r11d, dword ptr [rbp+0BE0h+var_AE8]

loc_140A08DE5:                          ; CODE XREF: sub_1409FA010+EFB5↓j
                mov     rax, [rbx+0A78h]
                mov     r14, rbx
                test    rax, rax
                mov     r10d, edx
                cmovnz  r14, rax
                mov     [rsp+0CE0h+var_C70], r14
                mov     r8d, [r14+808h]
                add     r8, r14
                test    r11d, r11d
                jz      short loc_140A08E1B
                cmp     r9d, r15d
                ja      short loc_140A08E1B
                mov     r8d, ecx
                mov     r10d, r9d
                add     r8, r14

loc_140A08E1B:                          ; CODE XREF: sub_1409FA010+EDFB↑j
                                        ; sub_1409FA010+EE00↑j
                cmp     r10d, r15d
                jz      loc_140A08F59
                mov     esi, 0Ch
                mov     eax, r15d
                sub     eax, r10d
                mov     r14, 0AAAAAAAAAAAAAAABh
                mov     r9d, eax
                add     r10d, eax
                lea     r12d, [rsi-0Ah]

loc_140A08E43:                          ; CODE XREF: sub_1409FA010+EF25↓j
                mov     ecx, [r8]
                cmp     ecx, esi
                jg      short loc_140A08E8F
                jz      short loc_140A08EAC
                sub     ecx, 1
                jz      short loc_140A08EAC
                sub     ecx, 6
                jz      short loc_140A08E7D
                sub     ecx, 1
                jz      short loc_140A08E73
                cmp     ecx, r12d
                jnz     loc_140A08EEB
                mov     eax, [r8+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A08F2A
; ---------------------------------------------------------------------------

loc_140A08E73:                          ; CODE XREF: sub_1409FA010+EE49↑j
                movzx   eax, word ptr [r8+20h]
                jmp     loc_140A08F24
; ---------------------------------------------------------------------------

loc_140A08E7D:                          ; CODE XREF: sub_1409FA010+EE44↑j
                mov     eax, [r8+18h]
                add     eax, r12d
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A08F2A
; ---------------------------------------------------------------------------

loc_140A08E8F:                          ; CODE XREF: sub_1409FA010+EE38↑j
                cmp     ecx, 1Ch
                jz      loc_140A08F1F
                cmp     ecx, 1Eh
                jz      short loc_140A08EF2
                cmp     ecx, 20h ; ' '
                jle     short loc_140A08EEB
                cmp     ecx, 22h ; '"'
                jle     short loc_140A08EC3
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A08EEB

loc_140A08EAC:                          ; CODE XREF: sub_1409FA010+EE3A↑j
                                        ; sub_1409FA010+EE3F↑j
                mov     ecx, [r8+10h]
                mov     rax, r14
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A08F2A
; ---------------------------------------------------------------------------

loc_140A08EC3:                          ; CODE XREF: sub_1409FA010+EE95↑j
                mov     ecx, [r8+20h]
                mov     edx, [r8+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A08F2A
; ---------------------------------------------------------------------------

loc_140A08EEB:                          ; CODE XREF: sub_1409FA010+EE4E↑j
                                        ; sub_1409FA010+EE90↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A08F2A
; ---------------------------------------------------------------------------

loc_140A08EF2:                          ; CODE XREF: sub_1409FA010+EE8B↑j
                mov     eax, [r8+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r14
                mul     rcx
                movzx   eax, word ptr [r8+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, r12d
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A08F2A
; ---------------------------------------------------------------------------

loc_140A08F1F:                          ; CODE XREF: sub_1409FA010+EE82↑j
                movzx   eax, word ptr [r8+28h]

loc_140A08F24:                          ; CODE XREF: sub_1409FA010+EE68↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A08F2A:                          ; CODE XREF: sub_1409FA010+EE5E↑j
                                        ; sub_1409FA010+EE7A↑j ...
                add     r8, rax
                mov     eax, 1
                sub     r9, rax
                jnz     loc_140A08E43
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r14, [rsp+0CE0h+var_C70]
                mov     r12, [rbp+0BE0h+var_C30]
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]
                jmp     short loc_140A08F5E
; ---------------------------------------------------------------------------

loc_140A08F59:                          ; CODE XREF: sub_1409FA010+EE0E↑j
                mov     eax, 1

loc_140A08F5E:                          ; CODE XREF: sub_1409FA010+EF47↑j
                mov     ecx, r8d
                mov     dword ptr [rbp+0BE0h+var_AE8], eax
                sub     ecx, r14d
                mov     dword ptr [rbp+0BE0h+var_AE8+4], r10d
                mov     [rbp+0BE0h+var_AE0], ecx
                mov     r11d, eax
                movsxd  rdx, dword ptr [r8]
                mov     r9d, r10d
                cmp     edx, 2Bh ; '+'
                ja      short loc_140A08FA1
                mov     r10, 80000001002h
                bt      r10, rdx
                jnb     short loc_140A08FA1
                cmp     [r8+8], r12
                jnz     short loc_140A08FA1
                cmp     [r8+10h], r13d
                jz      short loc_140A08FCA

loc_140A08FA1:                          ; CODE XREF: sub_1409FA010+EF73↑j
                                        ; sub_1409FA010+EF83↑j ...
                lea     eax, [rdx-21h]
                mov     edx, 1
                cmp     eax, edx
                ja      short loc_140A08FB7
                mov     rax, [rbp+0BE0h+var_C08]
                cmp     [r8+20h], rax
                jz      short loc_140A08FCA

loc_140A08FB7:                          ; CODE XREF: sub_1409FA010+EF9B↑j
                add     r15d, edx
                cmp     r15d, [rbx+80Ch]
                jnb     short loc_140A08FCF
                xor     edx, edx
                jmp     loc_140A08DE5
; ---------------------------------------------------------------------------

loc_140A08FCA:                          ; CODE XREF: sub_1409FA010+EF8F↑j
                                        ; sub_1409FA010+EFA5↑j
                xor     r15d, r15d
                jmp     short loc_140A08FD5
; ---------------------------------------------------------------------------

loc_140A08FCF:                          ; CODE XREF: sub_1409FA010+EDBB↑j
                                        ; sub_1409FA010+EFB1↑j
                xor     r15d, r15d
                mov     r8d, r15d

loc_140A08FD5:                          ; CODE XREF: sub_1409FA010+EFBD↑j
                test    r8, r8
                jz      short loc_140A08FE2

loc_140A08FDA:                          ; CODE XREF: sub_1409FA010+10C59↓j
                mov     rsi, rbx
                jmp     loc_140A0ACF0
; ---------------------------------------------------------------------------

loc_140A08FE2:                          ; CODE XREF: sub_1409FA010+EFC8↑j
                mov     r13, [rbp+0BE0h+var_C40]
                lea     rdx, [rbp+0BE0h+var_1F8]
                mov     rax, [rbx+200h]
                mov     rcx, r13
                mov     [rbp+0BE0h+var_BB0], rbx
                call    j__guard_dispatch_icall_nop
                mov     r12d, [rbp+0BE0h+var_1E4]
                mov     [rbp+0BE0h+var_C10], rax
                mov     rax, [rbp+0BE0h+var_1F0]
                mov     dword ptr [rbp+0BE0h+arg_8], r12d
                mov     [rbp+0BE0h+var_BDC], r12d
                mov     [rsp+0CE0h+var_C68], rax
                test    rax, rax
                jnz     short loc_140A09039

loc_140A09027:                          ; CODE XREF: sub_1409FA010+F3A9↓j
                mov     [rbp+0BE0h+var_C18], 0C000007Bh

loc_140A0902E:                          ; CODE XREF: sub_1409FA010+F4E9↓j
                                        ; sub_1409FA010+FA42↓j
                mov     r13d, 80000000h
                jmp     loc_140A0AC3F
; ---------------------------------------------------------------------------

loc_140A09039:                          ; CODE XREF: sub_1409FA010+F015↑j
                mov     ecx, 4
                mov     [rbp+0BE0h+var_AC8], r15
                lea     rax, [rbp+0BE0h+var_AC0]
                mov     r8d, 0FFFFFFFFh
                lea     edx, [rcx-3]

loc_140A09055:                          ; CODE XREF: sub_1409FA010+F04E↓j
                mov     [rax], r15b
                add     rax, rdx
                add     ecx, r8d
                jnz     short loc_140A09055
                xor     edx, edx
                cmp     [rbx+80Ch], edx
                jbe     loc_140A09276
                mov     ecx, [rbp+0BE0h+var_AC0]
                mov     r9d, dword ptr [rbp+0BE0h+var_AC8+4]
                mov     r11d, dword ptr [rbp+0BE0h+var_AC8]

loc_140A09082:                          ; CODE XREF: sub_1409FA010+F257↓j
                mov     rax, [rbx+0A78h]
                mov     r14, rbx
                test    rax, rax
                mov     r10d, edx
                cmovnz  r14, rax
                mov     [rsp+0CE0h+var_C70], r14
                mov     r8d, [r14+808h]
                add     r8, r14
                test    r11d, r11d
                jz      short loc_140A090B8
                cmp     r9d, r15d
                ja      short loc_140A090B8
                mov     r8d, ecx
                mov     r10d, r9d
                add     r8, r14

loc_140A090B8:                          ; CODE XREF: sub_1409FA010+F098↑j
                                        ; sub_1409FA010+F09D↑j
                cmp     r10d, r15d
                jz      loc_140A091F6
                mov     esi, 0Ch
                mov     eax, r15d
                sub     eax, r10d
                mov     r14, 0AAAAAAAAAAAAAAABh
                mov     r9d, eax
                add     r10d, eax
                lea     r12d, [rsi-0Ah]

loc_140A090E0:                          ; CODE XREF: sub_1409FA010+F1C2↓j
                mov     ecx, [r8]
                cmp     ecx, esi
                jg      short loc_140A0912C
                jz      short loc_140A09149
                sub     ecx, 1
                jz      short loc_140A09149
                sub     ecx, 6
                jz      short loc_140A0911A
                sub     ecx, 1
                jz      short loc_140A09110
                cmp     ecx, r12d
                jnz     loc_140A09188
                mov     eax, [r8+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A091C7
; ---------------------------------------------------------------------------

loc_140A09110:                          ; CODE XREF: sub_1409FA010+F0E6↑j
                movzx   eax, word ptr [r8+20h]
                jmp     loc_140A091C1
; ---------------------------------------------------------------------------

loc_140A0911A:                          ; CODE XREF: sub_1409FA010+F0E1↑j
                mov     eax, [r8+18h]
                add     eax, r12d
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A091C7
; ---------------------------------------------------------------------------

loc_140A0912C:                          ; CODE XREF: sub_1409FA010+F0D5↑j
                cmp     ecx, 1Ch
                jz      loc_140A091BC
                cmp     ecx, 1Eh
                jz      short loc_140A0918F
                cmp     ecx, 20h ; ' '
                jle     short loc_140A09188
                cmp     ecx, 22h ; '"'
                jle     short loc_140A09160
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A09188

loc_140A09149:                          ; CODE XREF: sub_1409FA010+F0D7↑j
                                        ; sub_1409FA010+F0DC↑j
                mov     ecx, [r8+10h]
                mov     rax, r14
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A091C7
; ---------------------------------------------------------------------------

loc_140A09160:                          ; CODE XREF: sub_1409FA010+F132↑j
                mov     ecx, [r8+20h]
                mov     edx, [r8+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A091C7
; ---------------------------------------------------------------------------

loc_140A09188:                          ; CODE XREF: sub_1409FA010+F0EB↑j
                                        ; sub_1409FA010+F12D↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A091C7
; ---------------------------------------------------------------------------

loc_140A0918F:                          ; CODE XREF: sub_1409FA010+F128↑j
                mov     eax, [r8+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r14
                mul     rcx
                movzx   eax, word ptr [r8+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, r12d
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A091C7
; ---------------------------------------------------------------------------

loc_140A091BC:                          ; CODE XREF: sub_1409FA010+F11F↑j
                movzx   eax, word ptr [r8+28h]

loc_140A091C1:                          ; CODE XREF: sub_1409FA010+F105↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A091C7:                          ; CODE XREF: sub_1409FA010+F0FB↑j
                                        ; sub_1409FA010+F117↑j ...
                add     r8, rax
                mov     eax, 1
                sub     r9, rax
                jnz     loc_140A090E0
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r14, [rsp+0CE0h+var_C70]
                mov     r12d, dword ptr [rbp+0BE0h+arg_8]
                mov     r13, [rbp+0BE0h+var_C40]
                jmp     short loc_140A091FB
; ---------------------------------------------------------------------------

loc_140A091F6:                          ; CODE XREF: sub_1409FA010+F0AB↑j
                mov     eax, 1

loc_140A091FB:                          ; CODE XREF: sub_1409FA010+F1E4↑j
                mov     ecx, r8d
                mov     dword ptr [rbp+0BE0h+var_AC8], eax
                sub     ecx, r14d
                mov     dword ptr [rbp+0BE0h+var_AC8+4], r10d
                mov     [rbp+0BE0h+var_AC0], ecx
                mov     r11d, eax
                movsxd  rdx, dword ptr [r8]
                mov     r9d, r10d
                cmp     edx, 2Bh ; '+'
                ja      short loc_140A09242
                mov     r10, 80000001002h
                bt      r10, rdx
                jnb     short loc_140A09242
                mov     rax, [rbp+0BE0h+var_C10]
                cmp     [r8+8], rax
                jnz     short loc_140A09242
                cmp     [r8+10h], r12d
                jz      short loc_140A0926C

loc_140A09242:                          ; CODE XREF: sub_1409FA010+F210↑j
                                        ; sub_1409FA010+F220↑j ...
                lea     eax, [rdx-21h]
                mov     edx, 1
                cmp     eax, edx
                ja      short loc_140A09259
                mov     r14, [rsp+0CE0h+var_C68]
                cmp     [r8+20h], r14
                jz      short loc_140A09271

loc_140A09259:                          ; CODE XREF: sub_1409FA010+F23C↑j
                add     r15d, edx
                cmp     r15d, [rbx+80Ch]
                jnb     short loc_140A09276
                xor     edx, edx
                jmp     loc_140A09082
; ---------------------------------------------------------------------------

loc_140A0926C:                          ; CODE XREF: sub_1409FA010+F230↑j
                xor     r15d, r15d
                jmp     short loc_140A0927C
; ---------------------------------------------------------------------------

loc_140A09271:                          ; CODE XREF: sub_1409FA010+F247↑j
                xor     r15d, r15d
                jmp     short loc_140A09281
; ---------------------------------------------------------------------------

loc_140A09276:                          ; CODE XREF: sub_1409FA010+F058↑j
                                        ; sub_1409FA010+F253↑j
                xor     r15d, r15d
                mov     r8d, r15d

loc_140A0927C:                          ; CODE XREF: sub_1409FA010+F25F↑j
                mov     r14, [rsp+0CE0h+var_C68]

loc_140A09281:                          ; CODE XREF: sub_1409FA010+F264↑j
                mov     [rbp+0BE0h+var_B48], r8
                test    r8, r8
                jnz     loc_140A0AC47
                mov     rax, [rbx+2A8h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     ecx, [rbp+0BE0h+var_BDC]
                mov     [rbp+0BE0h+var_C58], ecx
                mov     [rbp+0BE0h+var_C38], eax
                test    eax, eax
                jz      loc_140A0AC47
                test    dword ptr [rbx+990h], 40000000h
                jz      short loc_140A092DD
                mov     r8d, 0Fh
                lea     rcx, [rbp+0BE0h+var_BA8]
                mov     rdx, r14
                call    sub_140A1DFE4
                mov     rsi, [rbp+0BE0h+var_BA8]
                mov     ecx, eax
                mov     [rbp+0BE0h+var_C18], eax
                jmp     loc_140A0AC25
; ---------------------------------------------------------------------------

loc_140A092DD:                          ; CODE XREF: sub_1409FA010+F2AB↑j
                mov     rax, [rbx+1F0h]
                lea     r9, [rbp+0BE0h+var_BDC]
                xor     r8d, r8d
                mov     [rbp+0BE0h+var_780], r15
                mov     [rbp+0BE0h+var_9A0], r15d
                mov     r15, [rsp+0CE0h+var_C68]
                mov     rcx, r15
                lea     r13d, [r8+1]
                mov     dl, r13b
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                lea     r8d, [r13+0Bh]
                neg     rax
                mov     [rbp+0BE0h+var_798], rdx
                lea     r9, [rbp+0BE0h+var_BDC]
                mov     dl, r13b
                sbb     ecx, ecx
                and     ecx, [rbp+0BE0h+var_BDC]
                mov     [rbp+0BE0h+var_BDC], ecx
                mov     rax, [rbx+1F0h]
                mov     [rbp+0BE0h+var_9AC], ecx
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                mov     [rbp+0BE0h+var_BD8], rax
                neg     rax
                mov     [rbp+0BE0h+var_790], rdx
                lea     r8d, [r13+9]
                mov     dl, r13b
                sbb     ecx, ecx
                lea     r9, [rbp+0BE0h+var_BDC]
                and     ecx, [rbp+0BE0h+var_BDC]
                mov     [rbp+0BE0h+var_BDC], ecx
                mov     rax, [rbx+1F0h]
                mov     dword ptr [rbp+0BE0h+arg_8], ecx
                mov     [rbp+0BE0h+var_9A8], ecx
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                neg     rax
                mov     [rbp+0BE0h+var_788], rdx
                sbb     ecx, ecx
                and     ecx, [rbp+0BE0h+var_BDC]
                mov     [rbp+0BE0h+var_BDC], ecx
                mov     rax, [rbx+1F8h]
                mov     [rbp+0BE0h+var_9A4], ecx
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                xor     r12d, r12d
                mov     r14, rax
                test    rax, rax
                jnz     short loc_140A093BE
                xor     r15d, r15d
                jmp     loc_140A09027
; ---------------------------------------------------------------------------

loc_140A093BE:                          ; CODE XREF: sub_1409FA010+F3A4↑j
                mov     rax, [rbx+498h]
                lea     rdx, [rbp+0BE0h+var_8B8]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     r8d, [rbx+924h]
                mov     [rbp+0BE0h+var_778], rax
                mov     eax, [rbp+0BE0h+var_8B8]
                mov     [rbp+0BE0h+var_99C], eax
                mov     eax, [r14+54h]
                mov     [rbp+0BE0h+var_7A0], r15
                mov     r15d, [rbx+7E4h]
                mov     [rbp+0BE0h+var_9B0], eax
                lea     eax, [r15+120h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A094FE
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     [rbp+0BE0h+var_C40], rax
                mov     r14, rax
                test    rax, rax
                jz      loc_140A094F2
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A094E8
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A09479
                mov     ecx, eax
                shr     rcx, 3

loc_140A0946A:                          ; CODE XREF: sub_1409FA010+F467↓j
                mov     [rbx], r12
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A0946A

loc_140A09479:                          ; CODE XREF: sub_1409FA010+F452↑j
                test    eax, eax
                jz      short loc_140A0948C
                mov     ecx, 0FFFFFFFFh

loc_140A09482:                          ; CODE XREF: sub_1409FA010+F47A↓j
                mov     [rbx], r12b
                add     rbx, r13
                add     eax, ecx
                jnz     short loc_140A09482

loc_140A0948C:                          ; CODE XREF: sub_1409FA010+F46B↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A094D2
                test    dword ptr [r14+990h], 10000000h
                mov     ecx, r12d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A094C9
                mov     rax, [r14+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A094E1
; ---------------------------------------------------------------------------

loc_140A094C9:                          ; CODE XREF: sub_1409FA010+F4A2↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A094D9
; ---------------------------------------------------------------------------

loc_140A094D2:                          ; CODE XREF: sub_1409FA010+F48D↑j
                mov     rax, [r14+368h]

loc_140A094D9:                          ; CODE XREF: sub_1409FA010+F4C0↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A094E1:                          ; CODE XREF: sub_1409FA010+F4B7↑j
                mov     [r14+924h], ebx

loc_140A094E8:                          ; CODE XREF: sub_1409FA010+F42C↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                jmp     short loc_140A0950B
; ---------------------------------------------------------------------------

loc_140A094F2:                          ; CODE XREF: sub_1409FA010+F41D↑j
                xor     r15d, r15d
                mov     [rbp+0BE0h+var_BB0], r15
                jmp     loc_140A0902E
; ---------------------------------------------------------------------------

loc_140A094FE:                          ; CODE XREF: sub_1409FA010+F403↑j
                mov     r14, rbx
                mov     [rbp+0BE0h+var_C40], rbx
                mov     [rbx+7E4h], eax

loc_140A0950B:                          ; CODE XREF: sub_1409FA010+F4E0↑j
                mov     eax, 6
                lea     r10, [r14+r15]
                add     [r14+80Ch], eax
                lea     r13, [rbp+0BE0h+var_7A0]
                mov     [rbp+0BE0h+var_978], r10
                lea     rdi, [rbp+0BE0h+var_9B0]
                mov     [rbp+0BE0h+var_B48], r10
                lea     ebx, [rax-5]
                mov     [rbp+0BE0h+var_C30], rax

loc_140A0953E:                          ; CODE XREF: sub_1409FA010+F6C7↓j
                mov     r15d, [rdi]
                mov     rdx, rax
                mov     rsi, [r13+0]
                mov     ecx, 30h ; '0'
                mov     [rbp+0BE0h+var_BE8], r15d
                mov     rax, r10

loc_140A09554:                          ; CODE XREF: sub_1409FA010+F551↓j
                mov     [rax], r12
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_140A09554
                test    ecx, ecx
                jz      short loc_140A09576
                mov     edx, 0FFFFFFFFh

loc_140A0956C:                          ; CODE XREF: sub_1409FA010+F564↓j
                mov     [rax], r12b
                add     rax, rbx
                add     ecx, edx
                jnz     short loc_140A0956C

loc_140A09576:                          ; CODE XREF: sub_1409FA010+F555↑j
                mov     dword ptr [r10], 0Bh
                lea     rcx, [rsi+r15]
                mov     [r10+8], rsi
                mov     r9, rsi
                mov     [r10+10h], r15d
                mov     rax, rsi
                add     [r14+828h], r15d
                mov     r11d, [r14+814h]
                mov     r12, [r14+818h]
                cmp     rsi, rcx
                jnb     short loc_140A095B9
                mov     edx, 40h ; '@'

loc_140A095AE:                          ; CODE XREF: sub_1409FA010+F5A7↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A095AE

loc_140A095B9:                          ; CODE XREF: sub_1409FA010+F597↑j
                mov     ebx, r15d
                mov     r8, r12
                shr     ebx, 7
                test    ebx, ebx
                jz      short loc_140A09639
                mov     r15, 7010008004002001h

loc_140A095D0:                          ; CODE XREF: sub_1409FA010+F61F↓j
                mov     edx, 8
                lea     r14d, [rdx-7]

loc_140A095D9:                          ; CODE XREF: sub_1409FA010+F5E6↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r14
                jnz     short loc_140A095D9
                mov     rcx, r9
                sub     rcx, rsi
                xor     rcx, r12
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     [rbp+0BE0h+var_518], rdx
                xor     edx, eax
                xor     r11d, edx
                mov     rax, r14
                and     r11d, 3Fh
                cmovz   r11d, eax
                mov     eax, 0FFFFFFFFh
                add     ebx, eax
                jnz     short loc_140A095D0
                mov     r14, [rbp+0BE0h+var_C40]
                mov     r15d, [rbp+0BE0h+var_BE8]

loc_140A09639:                          ; CODE XREF: sub_1409FA010+F5B4↑j
                mov     edx, r15d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A09669
                mov     ebx, edx
                mov     r14d, 1
                shr     rbx, 3

loc_140A09650:                          ; CODE XREF: sub_1409FA010+F653↓j
                xor     r8, [r9]
                mov     ecx, r11d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     rbx, r14
                jnz     short loc_140A09650
                mov     r14, [rbp+0BE0h+var_C40]

loc_140A09669:                          ; CODE XREF: sub_1409FA010+F632↑j
                xor     r12d, r12d
                lea     ebx, [r12+1]
                test    edx, edx
                jz      short loc_140A09693
                mov     r12d, 0FFFFFFFFh

loc_140A0967B:                          ; CODE XREF: sub_1409FA010+F67E↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     r8, rax
                add     r9, rbx
                rol     r8, cl
                add     edx, r12d
                jnz     short loc_140A0967B
                xor     r12d, r12d

loc_140A09693:                          ; CODE XREF: sub_1409FA010+F663↑j
                mov     rax, r8
                jmp     short loc_140A0969B
; ---------------------------------------------------------------------------

loc_140A09698:                          ; CODE XREF: sub_1409FA010+F692↓j
                xor     r8d, eax

loc_140A0969B:                          ; CODE XREF: sub_1409FA010+F686↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A09698
                btr     r8d, 1Fh
                add     rdi, 4
                mov     [r10+14h], r8d
                add     r13, 8
                add     [r14+828h], r15d
                mov     eax, 6
                mov     r10, [rbp+0BE0h+var_978]
                add     r10, 30h ; '0'
                sub     [rbp+0BE0h+var_C30], rbx
                mov     [rbp+0BE0h+var_978], r10
                jnz     loc_140A0953E
                mov     rax, [rbp+0BE0h+var_B48]
                mov     ecx, 2
                mov     r13, [rsp+0CE0h+var_C68]
                mov     rsi, r14
                mov     r8d, [rbp+0BE0h+var_C58]
                mov     r9, r13
                mov     rdx, [rbp+0BE0h+var_C10]
                mov     dword ptr [rax], 2Ch ; ','
                mov     [rax+18h], r13
                or      [rax+20h], ecx
                lea     rax, [rbp+0BE0h+var_A7C]
                mov     [rsp+0CE0h+var_CA8], rax
                lea     rax, [rbp+0BE0h+var_B28]
                mov     [rsp+0CE0h+var_CB0], rax
                lea     eax, [rcx+0Dh]
                mov     dword ptr [rsp+0CE0h+var_CB8], eax
                lea     rcx, [rbp+0BE0h+var_BB0]
                mov     eax, [rbp+0BE0h+var_C38]
                mov     dword ptr [rsp+0CE0h+var_CC0], eax
                mov     [rbp+0BE0h+var_BB0], r14
                mov     [rbp+0BE0h+var_BA8], r14
                call    sub_140A10098
                xor     r15d, r15d
                mov     rdi, 0FFFFFFFFB8797400h
                test    eax, eax
                jns     short loc_140A09758
                mov     ecx, eax
                mov     [rbp+0BE0h+var_C18], eax
                jmp     loc_140A0AC25
; ---------------------------------------------------------------------------

loc_140A09758:                          ; CODE XREF: sub_1409FA010+F73C↑j
                mov     rsi, [rbp+0BE0h+var_BB0]
                mov     rcx, [rbp+0BE0h+var_B48]
                mov     rax, rsi
                mov     r9d, [rbp+0BE0h+var_A7C]
                sub     rax, r14
                sub     r9d, [rbp+0BE0h+var_B28]
                add     rcx, rax
                mov     ebx, [rbp+0BE0h+var_B28]
                mov     [rbp+0BE0h+var_B48], rcx
                add     rbx, r13
                mov     [rbp+0BE0h+var_BA8], rsi
                lea     r12, [rcx+0C0h]
                mov     ecx, 30h ; '0'
                mov     rax, r12
                lea     edx, [rcx-2Ah]
                lea     r8d, [rcx-2Fh]

loc_140A097A4:                          ; CODE XREF: sub_1409FA010+F7A1↓j
                mov     [rax], r15
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A097A4
                mov     rdx, r8
                test    ecx, ecx
                jz      short loc_140A097CB
                mov     r8d, 0FFFFFFFFh

loc_140A097C0:                          ; CODE XREF: sub_1409FA010+F7B9↓j
                mov     [rax], r15b
                add     rax, rdx
                add     ecx, r8d
                jnz     short loc_140A097C0

loc_140A097CB:                          ; CODE XREF: sub_1409FA010+F7A8↑j
                mov     dword ptr [r12], 0Bh
                mov     r10, rbx
                mov     [r12+8], rbx
                mov     rax, rbx
                mov     [r12+10h], r9d
                add     [rsi+828h], r9d
                mov     r11d, [rsi+814h]
                mov     r15, [rsi+818h]
                mov     ecx, r9d
                add     rcx, rbx
                cmp     rbx, rcx
                jnb     short loc_140A09814
                mov     r8d, 40h ; '@'

loc_140A09809:                          ; CODE XREF: sub_1409FA010+F802↓j
                prefetchnta byte ptr [rax]
                add     rax, r8
                cmp     rax, rcx
                jb      short loc_140A09809

loc_140A09814:                          ; CODE XREF: sub_1409FA010+F7F1↑j
                mov     r14d, r9d
                mov     r8, r15
                shr     r14d, 7
                test    r14d, r14d
                jz      short loc_140A0989B
                mov     rdi, 7010008004002001h

loc_140A0982D:                          ; CODE XREF: sub_1409FA010+F87D↓j
                mov     edx, 8
                lea     r13d, [rdx-7]

loc_140A09836:                          ; CODE XREF: sub_1409FA010+F843↓j
                mov     rax, [r10]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r13
                jnz     short loc_140A09836
                mov     rcx, r10
                sub     rcx, rbx
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     [rbp+0BE0h+var_510], rdx
                xor     edx, eax
                xor     r11d, edx
                mov     eax, 0FFFFFFFFh
                and     r11d, 3Fh
                mov     rdx, r13
                cmovz   r11d, edx
                add     r14d, eax
                jnz     short loc_140A0982D
                mov     r13, [rsp+0CE0h+var_C68]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0989B:                          ; CODE XREF: sub_1409FA010+F811↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_140A098D2
                mov     edx, r9d
                mov     r13d, 1
                shr     rdx, 3

loc_140A098B2:                          ; CODE XREF: sub_1409FA010+F8B6↓j
                xor     r8, [r10]
                mov     ecx, r11d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A098B2
                mov     r13, [rsp+0CE0h+var_C68]
                mov     edx, 1

loc_140A098D2:                          ; CODE XREF: sub_1409FA010+F893↑j
                xor     r15d, r15d
                test    r9d, r9d
                jz      short loc_140A098F8
                mov     r15d, 0FFFFFFFFh

loc_140A098E0:                          ; CODE XREF: sub_1409FA010+F8E3↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r11d
                xor     r8, rax
                add     r10, rdx
                rol     r8, cl
                add     r9d, r15d
                jnz     short loc_140A098E0
                xor     r15d, r15d

loc_140A098F8:                          ; CODE XREF: sub_1409FA010+F8C8↑j
                mov     rax, r8
                jmp     short loc_140A09900
; ---------------------------------------------------------------------------

loc_140A098FD:                          ; CODE XREF: sub_1409FA010+F8F7↓j
                xor     r8d, eax

loc_140A09900:                          ; CODE XREF: sub_1409FA010+F8EB↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A098FD
                btr     r8d, 1Fh
                mov     [r12+14h], r8d
                mov     r12d, 1
                mov     rax, [rbp+0BE0h+var_B48]
                mov     dword ptr [rax+0F0h], 30h ; '0'
                cmp     [rax+100h], r15d
                jz      short loc_140A0993A
                or      [rax+108h], r12d

loc_140A0993A:                          ; CODE XREF: sub_1409FA010+F921↑j
                mov     rax, [rbp+0BE0h+var_B48]
                add     rax, 60h ; '`'
                mov     [rbp+0BE0h+var_BA8], rsi
                mov     [rbp+0BE0h+var_AA0], rax
                jnz     loc_140A09BF3
                mov     r14d, [rsi+7E4h]
                mov     r8d, [rsi+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rsi+0A1Ch]
                jbe     loc_140A09A57
                mov     edx, eax
                mov     rcx, rsi
                call    sub_140A10B30
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A09A44
                mov     ecx, [rsi+990h]
                test    cl, 4
                jnz     loc_140A09A3B
                mov     eax, [rsi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rsi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rsi+924h]
                cmp     eax, 8
                jb      short loc_140A099D0
                mov     ecx, eax
                shr     rcx, 3

loc_140A099C1:                          ; CODE XREF: sub_1409FA010+F9BE↓j
                mov     [rsi], r15
                add     eax, 0FFFFFFF8h
                add     rsi, 8
                sub     rcx, r12
                jnz     short loc_140A099C1

loc_140A099D0:                          ; CODE XREF: sub_1409FA010+F9A9↑j
                test    eax, eax
                jz      short loc_140A099E3
                mov     ecx, 0FFFFFFFFh

loc_140A099D9:                          ; CODE XREF: sub_1409FA010+F9D1↓j
                mov     [rsi], r15b
                add     rsi, r12
                add     eax, ecx
                jnz     short loc_140A099D9

loc_140A099E3:                          ; CODE XREF: sub_1409FA010+F9C2↑j
                mov     esi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A09A26
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r15d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A09A1D
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A09A35
; ---------------------------------------------------------------------------

loc_140A09A1D:                          ; CODE XREF: sub_1409FA010+F9F6↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A09A2D
; ---------------------------------------------------------------------------

loc_140A09A26:                          ; CODE XREF: sub_1409FA010+F9E2↑j
                mov     rax, [rbx+368h]

loc_140A09A2D:                          ; CODE XREF: sub_1409FA010+FA14↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A09A35:                          ; CODE XREF: sub_1409FA010+FA0B↑j
                mov     [rbx+924h], esi

loc_140A09A3B:                          ; CODE XREF: sub_1409FA010+F983↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A09A60
; ---------------------------------------------------------------------------

loc_140A09A44:                          ; CODE XREF: sub_1409FA010+F974↑j
                                        ; sub_1409FA010+FC7A↓j
                mov     [rbp+0BE0h+var_BB0], r15
                mov     rbx, rsi
                mov     [rbp+0BE0h+var_C18], 0C000009Ah
                jmp     loc_140A0902E
; ---------------------------------------------------------------------------

loc_140A09A57:                          ; CODE XREF: sub_1409FA010+F95E↑j
                mov     rbx, rsi
                mov     [rsi+7E4h], eax

loc_140A09A60:                          ; CODE XREF: sub_1409FA010+FA32↑j
                add     [rbx+80Ch], r12d
                lea     rsi, [rbx+r14]
                mov     ecx, 30h ; '0'
                mov     [rbp+0BE0h+var_8B0], rsi
                mov     rax, rsi
                lea     edx, [rcx-2Ah]

loc_140A09A7D:                          ; CODE XREF: sub_1409FA010+FA7A↓j
                mov     [rax], r15
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r12
                jnz     short loc_140A09A7D
                test    ecx, ecx
                jz      short loc_140A09A9F
                mov     edx, 0FFFFFFFFh

loc_140A09A95:                          ; CODE XREF: sub_1409FA010+FA8D↓j
                mov     [rax], r15b
                add     rax, r12
                add     ecx, edx
                jnz     short loc_140A09A95

loc_140A09A9F:                          ; CODE XREF: sub_1409FA010+FA7E↑j
                mov     r12, [rbp+0BE0h+var_BD8]
                mov     r15d, dword ptr [rbp+0BE0h+arg_8]
                mov     r9, r12
                mov     dword ptr [rsi], 0Eh
                mov     [rsi+8], r12
                mov     [rsi+10h], r15d
                add     [rbx+828h], r15d
                lea     rcx, [r12+r15]
                mov     r10d, [rbx+814h]
                mov     r14, [rbx+818h]
                cmp     r12, rcx
                jnb     short loc_140A09AEC
                mov     rax, r12
                mov     edx, 40h ; '@'

loc_140A09AE1:                          ; CODE XREF: sub_1409FA010+FADA↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A09AE1

loc_140A09AEC:                          ; CODE XREF: sub_1409FA010+FAC7↑j
                mov     r11d, r15d
                mov     r8, r14
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A09B74
                mov     rdi, 7010008004002001h
                mov     r13d, 1
                mov     r15d, 0FFFFFFFFh

loc_140A09B11:                          ; CODE XREF: sub_1409FA010+FB4F↓j
                mov     eax, 8

loc_140A09B16:                          ; CODE XREF: sub_1409FA010+FB1D↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                xor     r8, [r9+8]
                add     r9, 10h
                rol     r8, cl
                sub     rax, r13
                jnz     short loc_140A09B16
                mov     rcx, r9
                sub     rcx, r12
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     [rbp+0BE0h+var_508], rdx
                xor     edx, eax
                xor     r10d, edx
                and     r10d, 3Fh
                cmovz   r10d, r13d
                add     r11d, r15d
                jnz     short loc_140A09B11
                mov     r15d, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r13, [rsp+0CE0h+var_C68]

loc_140A09B74:                          ; CODE XREF: sub_1409FA010+FAE9↑j
                mov     edx, r15d
                mov     r14d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A09BA0
                mov     eax, edx
                shr     rax, 3

loc_140A09B8B:                          ; CODE XREF: sub_1409FA010+FB8E↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r14
                jnz     short loc_140A09B8B

loc_140A09BA0:                          ; CODE XREF: sub_1409FA010+FB73↑j
                test    edx, edx
                jz      short loc_140A09BBF
                mov     r11d, 0FFFFFFFFh

loc_140A09BAA:                          ; CODE XREF: sub_1409FA010+FBAD↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r14
                rol     r8, cl
                add     edx, r11d
                jnz     short loc_140A09BAA

loc_140A09BBF:                          ; CODE XREF: sub_1409FA010+FB92↑j
                mov     rax, r8
                jmp     short loc_140A09BC7
; ---------------------------------------------------------------------------

loc_140A09BC4:                          ; CODE XREF: sub_1409FA010+FBBE↓j
                xor     r8d, eax

loc_140A09BC7:                          ; CODE XREF: sub_1409FA010+FBB2↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A09BC4
                btr     r8d, 1Fh
                mov     [rsi+14h], r8d
                mov     rsi, rbx
                mov     rax, [rbp+0BE0h+var_8B0]
                mov     [rbp+0BE0h+var_AA0], rax
                add     [rbx+828h], r15d
                jmp     short loc_140A09C04
; ---------------------------------------------------------------------------

loc_140A09BF3:                          ; CODE XREF: sub_1409FA010+F940↑j
                mov     r15d, dword ptr [rbp+0BE0h+arg_8]
                mov     r12, [rbp+0BE0h+var_BD8]
                mov     dword ptr [rax], 0Eh

loc_140A09C04:                          ; CODE XREF: sub_1409FA010+FBE1↑j
                test    dword ptr [rsi+990h], 40000000h
                jz      short loc_140A09C2E
                test    r15d, r15d
                jz      short loc_140A09C2E
                mov     r9, [rbp+0BE0h+var_AA0]
                mov     r8d, r15d
                add     r9, 1Ch
                mov     rdx, r12
                mov     rcx, rsi
                call    sub_1403EA0CC

loc_140A09C2E:                          ; CODE XREF: sub_1409FA010+FBFE↑j
                                        ; sub_1409FA010+FC03↑j
                mov     rax, [rbp+0BE0h+var_AA0]
                xor     r15d, r15d
                mov     [rbp+0BE0h+var_BA8], rsi
                mov     [rax+18h], r15d
                lea     ecx, [r15+1]
                mov     rax, [rbp+0BE0h+var_AA0]
                or      [rax+18h], ecx
                mov     rbx, [rbp+0BE0h+var_B48]
                mov     dword ptr [rbx+90h], 23h ; '#'
                or      [rbx+0B8h], ecx
                cmp     dword ptr [rbx+0A0h], 94h
                jb      short loc_140A09CE5
                mov     rax, [rsi+1F8h]
                mov     rcx, r13
                mov     r14, [rbx+98h]
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      loc_140A09A44
                mov     ecx, [rax+50h]
                lea     eax, [r15+2]
                or      [rbx+0B8h], eax
                add     rcx, r13
                mov     rax, [r14+70h]
                cmp     rax, r13
                jb      short loc_140A09CBF
                cmp     rax, rcx
                jnb     short loc_140A09CBF
                mov     rax, [rax]
                mov     [rbx+0A8h], rax
                or      dword ptr [rbx+0B8h], 4

loc_140A09CBF:                          ; CODE XREF: sub_1409FA010+FC97↑j
                                        ; sub_1409FA010+FC9C↑j
                mov     rax, [r14+78h]
                mov     r14, [rsp+0CE0h+var_C68]
                cmp     rax, r14
                jb      short loc_140A09CEA
                cmp     rax, rcx
                jnb     short loc_140A09CEA
                mov     rax, [rax]
                mov     [rbx+0B0h], rax
                or      dword ptr [rbx+0B8h], 8
                jmp     short loc_140A09CEA
; ---------------------------------------------------------------------------

loc_140A09CE5:                          ; CODE XREF: sub_1409FA010+FC5F↑j
                mov     r14, [rsp+0CE0h+var_C68]

loc_140A09CEA:                          ; CODE XREF: sub_1409FA010+FCBB↑j
                                        ; sub_1409FA010+FCC0↑j ...
                test    dword ptr [rsi+990h], 400000h
                mov     [rbp+0BE0h+var_BB0], rsi
                jz      loc_140A0AC1B
                mov     rax, [rsi+1F8h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                mov     [rsp+0CE0h+var_C70], rax
                mov     r15, rax
                test    rax, rax
                jnz     short loc_140A09D2A
                mov     ecx, 0C000007Bh

loc_140A09D22:                          ; CODE XREF: sub_1409FA010+101D5↓j
                xor     r15d, r15d
                jmp     loc_140A0AC22
; ---------------------------------------------------------------------------

loc_140A09D2A:                          ; CODE XREF: sub_1409FA010+FD0B↑j
                movzx   r10d, word ptr [r15+6]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mov     r12d, [rbp+0BE0h+var_C58]
                mul     r12
                mov     word ptr [rbp+0BE0h+arg_8], r10w
                mov     r9, rdx
                shr     r9, 3
                mov     [rbp+0BE0h+var_C40], r9
                test    r10w, r10w
                jnz     short loc_140A09DC0
                test    dword ptr [rsi+990h], 200000h
                jz      loc_140A0DBC6

loc_140A09D69:                          ; CODE XREF: sub_1409FA010+10039↓j
                                        ; sub_1409FA010+100A7↓j
                xor     r15d, r15d
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A09DB6
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                lea     eax, [r15+1]
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 10Fh
                mov     [rsi+918h], r14
                mov     [rsi+8F8h], eax

loc_140A09DAC:                          ; CODE XREF: sub_1409FA010+10092↓j
                xor     edx, edx
                mov     rcx, rsi
                call    sub_140A113CC

loc_140A09DB6:                          ; CODE XREF: sub_1409FA010+FD63↑j
                                        ; sub_1409FA010+10058↓j
                mov     ecx, 0C000007Bh
                jmp     loc_140A0AC22
; ---------------------------------------------------------------------------

loc_140A09DC0:                          ; CODE XREF: sub_1409FA010+FD47↑j
                mov     rdx, [rbp+0BE0h+var_C10]
                lea     r8, [r15+18h]
                mov     eax, r9d
                mov     ecx, r11d
                mov     rbx, rdx
                mov     [rsp+0CE0h+var_C78], ecx
                lea     r13, [rax+rax*2]
                shl     r13, 2
                mov     [rbp+0BE0h+var_C30], r13
                lea     rax, [rdx+r13]
                mov     [rbp+0BE0h+var_C48], rax
                movzx   eax, word ptr [r15+14h]
                mov     r11, [rbp+0BE0h+var_C48]
                add     r8, rax
                movzx   eax, r10w
                mov     [rbp+0BE0h+var_C50], r8
                test    eax, eax
                jz      loc_140A0A030
                xor     r9d, r9d
                lea     r12, [r8+8]
                lea     r13d, [r9+1]

loc_140A09E10:                          ; CODE XREF: sub_1409FA010+10009↓j
                mov     r15d, [r12+8]
                mov     eax, [r12]
                cmp     r15d, eax
                mov     edx, [r12+4]
                cmovbe  r15d, eax
                mov     [rbp+0BE0h+var_C28], edx
                add     r15d, edx
                test    ecx, ecx
                jz      short loc_140A09E45
                lea     eax, [rcx-1]
                lea     rax, [rax+rax*4]
                cmp     r15d, [r8+rax*8+0Ch]
                jb      loc_140A0A04E
                mov     ecx, [rsp+0CE0h+var_C78]

loc_140A09E45:                          ; CODE XREF: sub_1409FA010+FE1D↑j
                cmp     rbx, r11
                jz      loc_140A0A008

loc_140A09E4E:                          ; CODE XREF: sub_1409FA010+FFD8↓j
                mov     ecx, [rbx]
                mov     eax, [rbx+4]
                cmp     ecx, r15d
                jnb     loc_140A09FEE
                cmp     eax, edx
                jbe     loc_140A09FEE
                cmp     ecx, edx
                jb      loc_140A0A0A7
                cmp     eax, r15d
                ja      loc_140A0A0A7
                mov     eax, [rbx+8]
                mov     ecx, 1
                test    cl, al
                jnz     short loc_140A09E8D
                mov     al, [rax+r14]
                test    al, 20h
                jz      loc_140A09FE0

loc_140A09E8D:                          ; CODE XREF: sub_1409FA010+FE6F↑j
                mov     eax, [r12]
                mov     ecx, [r12+4]
                mov     r14d, [r12+8]
                cmp     r14d, eax
                mov     rdx, [rsp+0CE0h+var_C68]
                cmovbe  r14d, eax
                mov     [rbp+0BE0h+var_C38], ecx
                mov     rax, [rsi+418h]
                add     r14d, ecx
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     r13, rax
                mov     eax, [rbp+0BE0h+var_C38]
                cmp     [r13+0], eax
                jb      short loc_140A09ECE
                cmp     [r13+4], r14d
                jbe     short loc_140A09F3A

loc_140A09ECE:                          ; CODE XREF: sub_1409FA010+FEB6↑j
                mov     r8, [rsp+0CE0h+var_C68]
                mov     edx, r13d
                sub     edx, r8d
                mov     eax, 80000000h
                or      edx, eax
                test    dword ptr [rsi+990h], 200000h
                jz      loc_140A0DC82
                xor     ecx, ecx
                cmp     [rsi+8F8h], ecx
                jnz     short loc_140A09F3A
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                lea     eax, [rcx+1]
                mov     [rsi+908h], rcx
                mov     rcx, rsi
                mov     qword ptr [rsi+910h], 10Fh
                mov     [rsi+918h], r8
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A09F3A:                          ; CODE XREF: sub_1409FA010+FEBC↑j
                                        ; sub_1409FA010+FEE8↑j
                mov     r8d, [r13+0]
                mov     rcx, r13
                add     r8, [rsp+0CE0h+var_C68]
                mov     rax, [rsi+420h]
                mov     rdx, [rsp+0CE0h+var_C68]
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                mov     eax, [rbp+0BE0h+var_C38]
                cmp     [rdx], eax
                jb      short loc_140A09F67
                cmp     [rdx+4], r14d
                jbe     short loc_140A09FD5

loc_140A09F67:                          ; CODE XREF: sub_1409FA010+FF4F↑j
                mov     r14, [rsp+0CE0h+var_C68]
                mov     eax, 80000000h
                sub     edx, r14d
                or      edx, eax
                test    dword ptr [rsi+990h], 200000h
                jz      loc_140A0DC53
                xor     r9d, r9d
                cmp     [rsi+8F8h], r9d
                jnz     short loc_140A09FDD
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                lea     eax, [r9+1]
                mov     [rsi+908h], r9
                mov     qword ptr [rsi+910h], 10Fh
                mov     [rsi+918h], r14
                mov     [rsi+8F8h], eax
                call    sub_140A113CC
                jmp     short loc_140A09FDA
; ---------------------------------------------------------------------------

loc_140A09FD5:                          ; CODE XREF: sub_1409FA010+FF55↑j
                mov     r14, [rsp+0CE0h+var_C68]

loc_140A09FDA:                          ; CODE XREF: sub_1409FA010+FFC3↑j
                xor     r9d, r9d

loc_140A09FDD:                          ; CODE XREF: sub_1409FA010+FF80↑j
                mov     edx, [rbp+0BE0h+var_C28]

loc_140A09FE0:                          ; CODE XREF: sub_1409FA010+FE77↑j
                add     rbx, 0Ch
                cmp     rbx, [rbp+0BE0h+var_C48]
                jnz     loc_140A09E4E

loc_140A09FEE:                          ; CODE XREF: sub_1409FA010+FE46↑j
                                        ; sub_1409FA010+FE4E↑j
                mov     ecx, [rsp+0CE0h+var_C78]
                mov     r13d, 1
                movzx   r10d, word ptr [rbp+0BE0h+arg_8]
                mov     r8, [rbp+0BE0h+var_C50]
                mov     r11, [rbp+0BE0h+var_C48]

loc_140A0A008:                          ; CODE XREF: sub_1409FA010+FE38↑j
                add     ecx, r13d
                movzx   eax, r10w
                add     r12, 28h ; '('
                mov     [rsp+0CE0h+var_C78], ecx
                cmp     ecx, eax
                jb      loc_140A09E10
                mov     r9, [rbp+0BE0h+var_C40]
                mov     r15, [rsp+0CE0h+var_C70]
                mov     r13, [rbp+0BE0h+var_C30]
                mov     r12d, [rbp+0BE0h+var_C58]

loc_140A0A030:                          ; CODE XREF: sub_1409FA010+FDEF↑j
                cmp     rbx, r11
                jz      loc_140A0A0BC
                test    dword ptr [rsi+990h], 200000h
                jz      loc_140A0DBF4
                jmp     loc_140A09D69
; ---------------------------------------------------------------------------

loc_140A0A04E:                          ; CODE XREF: sub_1409FA010+FE2B↑j
                test    dword ptr [rsi+990h], 200000h
                jz      loc_140A0DC24
                xor     r15d, r15d
                cmp     [rsi+8F8h], r15d
                jnz     loc_140A09DB6
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 10Fh
                mov     [rsi+918h], r14
                mov     [rsi+8F8h], r13d
                jmp     loc_140A09DAC
; ---------------------------------------------------------------------------

loc_140A0A0A7:                          ; CODE XREF: sub_1409FA010+FE56↑j
                                        ; sub_1409FA010+FE5F↑j
                test    dword ptr [rsi+990h], 200000h
                jz      loc_140A0DCAE
                jmp     loc_140A09D69
; ---------------------------------------------------------------------------

loc_140A0A0BC:                          ; CODE XREF: sub_1409FA010+10023↑j
                xor     r11d, r11d
                test    r9d, r9d
                jz      short loc_140A0A0CD
                lea     ecx, [r9+6]
                and     ecx, 0FFFFFFF8h
                jmp     short loc_140A0A0D0
; ---------------------------------------------------------------------------

loc_140A0A0CD:                          ; CODE XREF: sub_1409FA010+100B2↑j
                mov     ecx, r11d

loc_140A0A0D0:                          ; CODE XREF: sub_1409FA010+100BB↑j
                mov     r14d, [rsi+7E4h]
                lea     eax, [rax+rax*2]
                mov     r8d, [rsi+924h]
                lea     eax, [rax+6]
                lea     eax, [rcx+rax*8]
                add     eax, r14d
                cmp     eax, [rsi+0A1Ch]
                jbe     loc_140A0A1EA
                mov     edx, eax
                mov     rcx, rsi
                call    sub_140A10B30
                xor     r11d, r11d
                mov     [rbp+0BE0h+var_C30], rax
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A0A1E0
                mov     ecx, [rsi+990h]
                test    cl, 4
                jnz     loc_140A0A1CB
                mov     eax, [rsi+7E4h]
                lea     r9d, [r11+1]
                mov     r8, [rsi+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rsi+924h]
                cmp     eax, 8
                jb      short loc_140A0A15D
                mov     ecx, eax
                shr     rcx, 3

loc_140A0A14E:                          ; CODE XREF: sub_1409FA010+1014B↓j
                mov     [rsi], r11
                add     eax, 0FFFFFFF8h
                add     rsi, 8
                sub     rcx, r9
                jnz     short loc_140A0A14E

loc_140A0A15D:                          ; CODE XREF: sub_1409FA010+10136↑j
                test    eax, eax
                jz      short loc_140A0A170
                mov     ecx, 0FFFFFFFFh

loc_140A0A166:                          ; CODE XREF: sub_1409FA010+1015E↓j
                mov     [rsi], r11b
                add     rsi, r9
                add     eax, ecx
                jnz     short loc_140A0A166

loc_140A0A170:                          ; CODE XREF: sub_1409FA010+1014F↑j
                mov     esi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A0A1B3
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A0A1AA
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A0A1C2
; ---------------------------------------------------------------------------

loc_140A0A1AA:                          ; CODE XREF: sub_1409FA010+10183↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A0A1BA
; ---------------------------------------------------------------------------

loc_140A0A1B3:                          ; CODE XREF: sub_1409FA010+1016F↑j
                mov     rax, [rbx+368h]

loc_140A0A1BA:                          ; CODE XREF: sub_1409FA010+101A1↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A0A1C2:                          ; CODE XREF: sub_1409FA010+10198↑j
                mov     [rbx+924h], esi
                xor     r11d, r11d

loc_140A0A1CB:                          ; CODE XREF: sub_1409FA010+1010C↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                mov     r9, [rbp+0BE0h+var_C40]
                movzx   r10d, word ptr [rbp+0BE0h+arg_8]
                jmp     short loc_140A0A1F7
; ---------------------------------------------------------------------------

loc_140A0A1E0:                          ; CODE XREF: sub_1409FA010+100FD↑j
                mov     ecx, 0C000009Ah
                jmp     loc_140A09D22
; ---------------------------------------------------------------------------

loc_140A0A1EA:                          ; CODE XREF: sub_1409FA010+100E0↑j
                mov     rbx, rsi
                mov     [rsi+7E4h], eax
                mov     [rbp+0BE0h+var_C30], rbx

loc_140A0A1F7:                          ; CODE XREF: sub_1409FA010+101CE↑j
                mov     esi, 1
                lea     rcx, [rbx+r14]
                add     [rbx+80Ch], esi
                mov     rax, rcx
                mov     [rbp+0BE0h+var_8A8], rcx
                lea     edx, [rsi+2Fh]
                lea     r8d, [rsi+5]

loc_140A0A217:                          ; CODE XREF: sub_1409FA010+10214↓j
                mov     [rax], r11
                add     edx, 0FFFFFFF8h
                add     rax, 8
                sub     r8, rsi
                jnz     short loc_140A0A217
                test    edx, edx
                jz      short loc_140A0A23B
                mov     r8d, 0FFFFFFFFh

loc_140A0A230:                          ; CODE XREF: sub_1409FA010+10229↓j
                mov     [rax], r11b
                add     rax, rsi
                add     edx, r8d
                jnz     short loc_140A0A230

loc_140A0A23B:                          ; CODE XREF: sub_1409FA010+10218↑j
                mov     rax, [rbp+0BE0h+var_C10]
                mov     dword ptr [rcx], 1Eh
                mov     [rcx+8], rax
                mov     [rcx+10h], r11d
                mov     rdx, [rbx+818h]
                mov     rax, rdx
                jmp     short loc_140A0A25B
; ---------------------------------------------------------------------------

loc_140A0A259:                          ; CODE XREF: sub_1409FA010+10252↓j
                xor     edx, eax

loc_140A0A25B:                          ; CODE XREF: sub_1409FA010+10247↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0A259
                mov     r8, [rsp+0CE0h+var_C68]
                btr     edx, 1Fh
                mov     [rcx+14h], edx
                mov     rsi, rbx
                mov     rax, [rbp+0BE0h+var_8A8]
                mov     [rbp+0BE0h+var_AF0], rax
                mov     [rbp+0BE0h+var_BB0], rbx
                mov     [rax+18h], r8
                mov     ecx, [r15+50h]
                xor     r15d, r15d
                mov     rax, [rbp+0BE0h+var_AF0]
                mov     [rax+20h], ecx
                mov     ecx, 1
                mov     rax, [rbp+0BE0h+var_AF0]
                mov     [rax+24h], r12d
                mov     rax, [rbp+0BE0h+var_AF0]
                mov     [rax+28h], r10w
                mov     rax, [rbp+0BE0h+var_AF0]
                or      [rax+2Ah], cx
                mov     rcx, [rbp+0BE0h+var_AF0]
                lea     rdx, [rcx+30h]
                mov     [rsp+0CE0h+var_C88], rdx
                test    r9d, r9d
                jz      short loc_140A0A2E7
                lea     r12d, [r9-1]
                add     r12, 7
                and     r12, 0FFFFFFFFFFFFFFF8h
                add     r12, rdx
                jmp     short loc_140A0A2EA
; ---------------------------------------------------------------------------

loc_140A0A2E7:                          ; CODE XREF: sub_1409FA010+102C4↑j
                mov     r12, rdx

loc_140A0A2EA:                          ; CODE XREF: sub_1409FA010+102D5↑j
                movzx   eax, word ptr [rcx+28h]
                test    r9d, r9d
                mov     r14d, 0Ch
                mov     [rbp+0BE0h+var_C60], r12
                cmovz   r14, r13
                mov     r9d, 1
                mov     r13, [rbp+0BE0h+var_C10]
                add     r14, r13
                lea     rcx, [rax+rax*2]
                mov     [rsp+0CE0h+var_C80], r14
                lea     r11, [r12+rcx*8]
                mov     [rsp+0CE0h+var_C70], r11
                cmp     r15w, r10w
                jnb     short loc_140A0A358
                movzx   edx, r10w
                lea     rax, [r12+8]
                mov     r10d, 80000000h
                lea     r14d, [r9+1]

loc_140A0A337:                          ; CODE XREF: sub_1409FA010+10341↓j
                mov     rcx, r14

loc_140A0A33A:                          ; CODE XREF: sub_1409FA010+1033C↓j
                mov     [rax-8], r15d
                mov     [rax-4], r15d
                mov     [rax], r10d
                add     rax, 0Ch
                sub     rcx, r9
                jnz     short loc_140A0A33A
                sub     rdx, r9
                jnz     short loc_140A0A337
                mov     r14, [rsp+0CE0h+var_C80]

loc_140A0A358:                          ; CODE XREF: sub_1409FA010+10312↑j
                cmp     r12, r11
                jz      loc_140A0AC1B
                mov     rsi, [rbp+0BE0h+var_C50]

loc_140A0A365:                          ; CODE XREF: sub_1409FA010+10C02↓j
                mov     eax, [rsi+24h]
                mov     r11d, r15d
                bt      eax, 19h
                jb      loc_140A0A4F7
                mov     ecx, [rsi]
                cmp     ecx, 54494E49h
                jnz     short loc_140A0A38C
                cmp     dword ptr [rsi+4], 4742444Bh
                jz      loc_140A0A4F7

loc_140A0A38C:                          ; CODE XREF: sub_1409FA010+1036D↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A0A3C2
                movzx   eax, word ptr [rsi+4]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_140A0A4F7
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_140A0A4F7
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_140A0A4F7

loc_140A0A3C2:                          ; CODE XREF: sub_1409FA010+10382↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A0A3D9
                mov     eax, 4154h
                cmp     [rsi+4], ax
                jz      loc_140A0A4F7

loc_140A0A3D9:                          ; CODE XREF: sub_1409FA010+103B8↑j
                mov     rax, [rbx+938h]
                mov     r9, rsi
                mov     r8, [rbx+930h]
                mov     r10d, 7
                mov     [rbp+0BE0h+var_7E8], rax
                sub     r9, r8
                mov     rax, [rbx+940h]
                mov     [rbp+0BE0h+var_7E0], rax
                mov     rax, [rbx+948h]
                mov     [rbp+0BE0h+var_7D8], rax
                mov     [rbp+0BE0h+var_7F0], r8

loc_140A0A41D:                          ; CODE XREF: sub_1409FA010+10426↓j
                movzx   edx, byte ptr [r8+r9]
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A0A43D
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_140A0A41D
                jmp     loc_140A0A4EC
; ---------------------------------------------------------------------------

loc_140A0A43D:                          ; CODE XREF: sub_1409FA010+1041C↑j
                mov     r9, [rbp+0BE0h+var_7E8]
                mov     r8d, 8
                mov     r10, rsi

loc_140A0A44D:                          ; CODE XREF: sub_1409FA010+10458↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A0A48E
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A0A44D
                test    r8d, r8d
                jz      short loc_140A0A4EC

loc_140A0A46F:                          ; CODE XREF: sub_1409FA010+1047A↓j
                movzx   edx, byte ptr [r10]
                inc     r10
                movzx   eax, byte ptr [r9]
                inc     r9
                cmp     rdx, rax
                jnz     short loc_140A0A48E
                mov     eax, 0FFFFFFFFh
                add     r8d, eax
                jnz     short loc_140A0A46F
                jmp     short loc_140A0A4EC
; ---------------------------------------------------------------------------

loc_140A0A48E:                          ; CODE XREF: sub_1409FA010+1044E↑j
                                        ; sub_1409FA010+10470↑j
                mov     r8, [rbp+0BE0h+var_7E0]
                mov     r9, rsi
                sub     r9, r8
                mov     r10d, 4

loc_140A0A4A1:                          ; CODE XREF: sub_1409FA010+104AA↓j
                movzx   edx, byte ptr [r9+r8]
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A0A4BE
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_140A0A4A1
                jmp     short loc_140A0A4EC
; ---------------------------------------------------------------------------

loc_140A0A4BE:                          ; CODE XREF: sub_1409FA010+104A0↑j
                mov     r8, [rbp+0BE0h+var_7D8]
                mov     r9, rsi
                sub     r9, r8
                mov     r10d, 6

loc_140A0A4D1:                          ; CODE XREF: sub_1409FA010+104DA↓j
                movzx   edx, byte ptr [r9+r8]
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A0A4FC
                mov     eax, 0FFFFFFFFh
                add     r10d, eax
                jnz     short loc_140A0A4D1

loc_140A0A4EC:                          ; CODE XREF: sub_1409FA010+10428↑j
                                        ; sub_1409FA010+1045D↑j ...
                mov     r9d, 1
                mov     r11d, r9d
                jmp     short loc_140A0A502
; ---------------------------------------------------------------------------

loc_140A0A4F7:                          ; CODE XREF: sub_1409FA010+1035F↑j
                                        ; sub_1409FA010+10376↑j ...
                mov     r11d, r9d
                jmp     short loc_140A0A507
; ---------------------------------------------------------------------------

loc_140A0A4FC:                          ; CODE XREF: sub_1409FA010+104D0↑j
                mov     r9d, 1

loc_140A0A502:                          ; CODE XREF: sub_1409FA010+104E5↑j
                mov     r8, [rsp+0CE0h+var_C68]

loc_140A0A507:                          ; CODE XREF: sub_1409FA010+104EA↑j
                mov     ecx, [rsi+24h]
                test    ecx, ecx
                cmovs   r11d, r9d
                mov     dword ptr [rbp+0BE0h+arg_8], r11d
                test    r11d, r11d
                jz      short loc_140A0A542
                cmp     dword ptr [rsi], 54494E49h
                jnz     short loc_140A0A542
                cmp     dword ptr [rsi+4], 4742444Bh
                jnz     short loc_140A0A542
                test    dword ptr [rbx+994h], 2000h
                cmovnz  r11d, r15d
                mov     dword ptr [rbp+0BE0h+arg_8], r11d

loc_140A0A542:                          ; CODE XREF: sub_1409FA010+1050A↑j
                                        ; sub_1409FA010+10512↑j ...
                test    dword ptr [rbx+994h], 4000h
                jz      short loc_140A0A570
                bt      ecx, 1Dh
                jnb     short loc_140A0A570
                cmp     r8, [rbx+5E8h]
                jz      short loc_140A0A566
                cmp     r8, [rbx+5F0h]
                jnz     short loc_140A0A570

loc_140A0A566:                          ; CODE XREF: sub_1409FA010+1054B↑j
                mov     r11d, r9d
                mov     dword ptr [rbp+0BE0h+arg_8], r9d

loc_140A0A570:                          ; CODE XREF: sub_1409FA010+1053C↑j
                                        ; sub_1409FA010+10542↑j ...
                mov     ecx, [rsi+10h]
                mov     eax, [rsi+8]
                cmp     ecx, eax
                mov     edx, [rsi+0Ch]
                mov     r9, [rbp+0BE0h+var_C48]
                cmovbe  ecx, eax
                add     ecx, edx
                mov     [rbp+0BE0h+var_C58], edx
                xor     r10d, r10d
                mov     [rsp+0CE0h+var_C78], ecx
                cmp     r13, r9
                jz      short loc_140A0A59D
                mov     r15d, [r13+0]
                mov     r13d, [r13+4]
                jmp     short loc_140A0A5A0
; ---------------------------------------------------------------------------

loc_140A0A59D:                          ; CODE XREF: sub_1409FA010+10581↑j
                mov     r13d, r10d

loc_140A0A5A0:                          ; CODE XREF: sub_1409FA010+1058B↑j
                mov     [rbp+0BE0h+var_C28], edx
                cmp     [rbp+0BE0h+var_C10], r9
                jz      loc_140A0A766
                cmp     r15d, edx
                jbe     loc_140A0A766
                cmp     r13d, ecx
                ja      loc_140A0A766
                test    r11d, r11d
                jnz     loc_140A0A766
                mov     [r12], edx
                lea     rcx, [rbp+0BE0h+var_9B0]
                mov     [r12+4], r15d
                lea     rdx, [rbp+0BE0h+var_7A0]
                mov     eax, [r12]
                mov     r9d, r15d
                sub     r9d, eax
                mov     [rbp+0BE0h+var_C28], r15d
                mov     r14d, r9d
                lea     rsi, [r8+rax]
                mov     r8d, r10d
                add     r14, rsi

loc_140A0A5FA:                          ; CODE XREF: sub_1409FA010+1060F↓j
                mov     r10, [rdx]
                mov     eax, [rcx]
                add     rax, r10
                cmp     rsi, rax
                jnb     short loc_140A0A610
                cmp     r14, r10
                ja      loc_140A0A756

loc_140A0A610:                          ; CODE XREF: sub_1409FA010+105F5↑j
                inc     r8d
                add     rdx, 8
                add     rcx, 4
                cmp     r8d, 6
                jb      short loc_140A0A5FA
                add     [rbx+828h], r9d
                mov     r10, rsi
                mov     r11d, [rbx+814h]
                mov     rax, rsi
                mov     r12, [rbx+818h]
                cmp     rsi, r14
                jnb     short loc_140A0A651
                mov     ecx, 40h ; '@'

loc_140A0A646:                          ; CODE XREF: sub_1409FA010+1063F↓j
                prefetchnta byte ptr [rax]
                add     rax, rcx
                cmp     rax, r14
                jb      short loc_140A0A646

loc_140A0A651:                          ; CODE XREF: sub_1409FA010+1062F↑j
                mov     r14d, r9d
                mov     r8, r12
                shr     r14d, 7
                test    r14d, r14d
                jz      short loc_140A0A6D6
                mov     rbx, 7010008004002001h

loc_140A0A66A:                          ; CODE XREF: sub_1409FA010+106B9↓j
                mov     edx, 8
                lea     edi, [rdx-7]

loc_140A0A672:                          ; CODE XREF: sub_1409FA010+1067F↓j
                mov     rax, [r10]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, rdi
                jnz     short loc_140A0A672
                mov     rcx, r10
                sub     rcx, rsi
                xor     rcx, r12
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     [rbp+0BE0h+var_500], rdx
                xor     edx, eax
                xor     r11d, edx
                mov     rax, rdi
                and     r11d, 3Fh
                cmovz   r11d, eax
                mov     eax, 0FFFFFFFFh
                add     r14d, eax
                jnz     short loc_140A0A66A
                mov     rbx, [rbp+0BE0h+var_C30]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0A6D6:                          ; CODE XREF: sub_1409FA010+1064E↑j
                and     r9d, 7Fh
                mov     r14d, 1
                cmp     r9d, 8
                jb      short loc_140A0A703
                mov     edx, r9d
                shr     rdx, 3

loc_140A0A6ED:                          ; CODE XREF: sub_1409FA010+106F1↓j
                xor     r8, [r10]
                mov     ecx, r11d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r14
                jnz     short loc_140A0A6ED

loc_140A0A703:                          ; CODE XREF: sub_1409FA010+106D4↑j
                xor     esi, esi
                test    r9d, r9d
                jz      short loc_140A0A726
                mov     esi, 0FFFFFFFFh

loc_140A0A70F:                          ; CODE XREF: sub_1409FA010+10712↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r11d
                xor     r8, rax
                add     r10, r14
                rol     r8, cl
                add     r9d, esi
                jnz     short loc_140A0A70F
                xor     esi, esi

loc_140A0A726:                          ; CODE XREF: sub_1409FA010+106F8↑j
                mov     rax, r8
                jmp     short loc_140A0A72E
; ---------------------------------------------------------------------------

loc_140A0A72B:                          ; CODE XREF: sub_1409FA010+10725↓j
                xor     r8d, eax

loc_140A0A72E:                          ; CODE XREF: sub_1409FA010+10719↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0A72B
                mov     rax, [rbp+0BE0h+var_C60]
                btr     r8d, 1Fh
                mov     ecx, [rsp+0CE0h+var_C78]
                mov     r14, [rsp+0CE0h+var_C80]
                mov     edx, [rbp+0BE0h+var_C58]
                mov     r9, [rbp+0BE0h+var_C48]
                mov     [rax+8], r8d
                jmp     short loc_140A0A768
; ---------------------------------------------------------------------------

loc_140A0A756:                          ; CODE XREF: sub_1409FA010+105FA↑j
                mov     ecx, [rsp+0CE0h+var_C78]
                mov     r14, [rsp+0CE0h+var_C80]
                mov     edx, [rbp+0BE0h+var_C58]
                mov     r9, [rbp+0BE0h+var_C48]

loc_140A0A766:                          ; CODE XREF: sub_1409FA010+10597↑j
                                        ; sub_1409FA010+105A0↑j ...
                xor     esi, esi

loc_140A0A768:                          ; CODE XREF: sub_1409FA010+10744↑j
                cmp     r15d, edx
                jb      loc_140A0AA06
                cmp     r13d, ecx
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]
                ja      loc_140A0AA0D
                mov     r8, [rbp+0BE0h+var_C10]
                cmp     r8, r9
                jz      loc_140A0AA0D
                mov     r12d, [r14+4]
                cmp     r12d, ecx
                ja      loc_140A0AA0D
                mov     rax, [rsp+0CE0h+var_C88]
                mov     edx, 1
                lea     r10d, [rdx+0Bh]

loc_140A0A7A9:                          ; CODE XREF: sub_1409FA010+109EE↓j
                cmp     r14, r9
                jz      loc_140A0AA0D
                test    r13d, r13d
                jz      short loc_140A0A7BF
                mov     r8b, 80h
                jmp     loc_140A0A9CF
; ---------------------------------------------------------------------------

loc_140A0A7BF:                          ; CODE XREF: sub_1409FA010+107A5↑j
                mov     rax, [rsp+0CE0h+var_C80]
                mov     r14d, [r8+4]
                mov     r15d, [rax]
                mov     [rbp+0BE0h+var_C28], r15d
                cmp     r15d, r14d
                jnb     short loc_140A0A833
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0DCDF
                cmp     [rbx+8F8h], esi
                jnz     short loc_140A0A833
                mov     rdx, [rsp+0CE0h+var_C68]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     rcx, rbx
                mov     [rbx+900h], rax
                mov     eax, 1
                mov     [rbx+908h], rsi
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], rdx
                xor     edx, edx
                mov     [rbx+8F8h], eax
                call    sub_140A113CC

loc_140A0A833:                          ; CODE XREF: sub_1409FA010+107C2↑j
                                        ; sub_1409FA010+107DA↑j
                mov     rsi, r14
                lea     rcx, [rbp+0BE0h+var_9B0]
                add     rsi, [rsp+0CE0h+var_C68]
                lea     rdx, [rbp+0BE0h+var_7A0]
                mov     r9d, r15d
                sub     r9d, r14d
                mov     r14d, r9d
                add     r14, rsi
                xor     eax, eax
                mov     r8d, eax

loc_140A0A85A:                          ; CODE XREF: sub_1409FA010+10873↓j
                mov     r10, [rdx]
                mov     eax, [rcx]
                add     rax, r10
                cmp     rsi, rax
                jnb     short loc_140A0A870
                cmp     r14, r10
                ja      loc_140A0A9AE

loc_140A0A870:                          ; CODE XREF: sub_1409FA010+10855↑j
                mov     eax, 4
                inc     r8d
                add     rcx, rax
                add     rdx, 8
                cmp     r8d, 6
                jb      short loc_140A0A85A
                cmp     r9d, eax
                jb      loc_140A0A9AE
                add     [rbx+828h], r9d
                mov     r10, rsi
                mov     r11d, [rbx+814h]
                mov     rax, rsi
                mov     r15, [rbx+818h]
                cmp     rsi, r14
                jnb     short loc_140A0A8BE
                mov     ecx, 40h ; '@'

loc_140A0A8B3:                          ; CODE XREF: sub_1409FA010+108AC↓j
                prefetchnta byte ptr [rax]
                add     rax, rcx
                cmp     rax, r14
                jb      short loc_140A0A8B3

loc_140A0A8BE:                          ; CODE XREF: sub_1409FA010+1089C↑j
                mov     r14d, r9d
                mov     r8, r15
                shr     r14d, 7
                test    r14d, r14d
                jz      short loc_140A0A947
                mov     rdi, 7010008004002001h

loc_140A0A8D7:                          ; CODE XREF: sub_1409FA010+10927↓j
                mov     edx, 8
                lea     r13d, [rdx-7]

loc_140A0A8E0:                          ; CODE XREF: sub_1409FA010+108ED↓j
                mov     rax, [r10]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r13
                jnz     short loc_140A0A8E0
                mov     rcx, r10
                sub     rcx, rsi
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     [rbp+0BE0h+var_4F8], rdx
                xor     edx, eax
                xor     r11d, edx
                mov     rax, r13
                and     r11d, 3Fh
                cmovz   r11d, eax
                mov     eax, 0FFFFFFFFh
                add     r14d, eax
                jnz     short loc_140A0A8D7
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0A947:                          ; CODE XREF: sub_1409FA010+108BB↑j
                and     r9d, 7Fh
                mov     r14d, 1
                cmp     r9d, 8
                jb      short loc_140A0A974
                mov     edx, r9d
                shr     rdx, 3

loc_140A0A95E:                          ; CODE XREF: sub_1409FA010+10962↓j
                xor     r8, [r10]
                mov     ecx, r11d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r14
                jnz     short loc_140A0A95E

loc_140A0A974:                          ; CODE XREF: sub_1409FA010+10945↑j
                xor     esi, esi
                test    r9d, r9d
                jz      short loc_140A0A997
                mov     esi, 0FFFFFFFFh

loc_140A0A980:                          ; CODE XREF: sub_1409FA010+10983↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r11d
                xor     r8, rax
                add     r10, r14
                rol     r8, cl
                add     r9d, esi
                jnz     short loc_140A0A980
                xor     esi, esi

loc_140A0A997:                          ; CODE XREF: sub_1409FA010+10969↑j
                mov     rax, r8
                jmp     short loc_140A0A99F
; ---------------------------------------------------------------------------

loc_140A0A99C:                          ; CODE XREF: sub_1409FA010+10996↓j
                xor     r8b, al

loc_140A0A99F:                          ; CODE XREF: sub_1409FA010+1098A↑j
                shr     rax, 7
                test    rax, rax
                jnz     short loc_140A0A99C
                and     r8b, 7Fh
                jmp     short loc_140A0A9B3
; ---------------------------------------------------------------------------

loc_140A0A9AE:                          ; CODE XREF: sub_1409FA010+1085A↑j
                                        ; sub_1409FA010+10878↑j
                xor     esi, esi
                mov     r8b, 80h

loc_140A0A9B3:                          ; CODE XREF: sub_1409FA010+1099C↑j
                mov     r9, [rbp+0BE0h+var_C48]
                mov     r10d, 0Ch
                mov     r14, [rsp+0CE0h+var_C80]
                mov     ecx, [rsp+0CE0h+var_C78]
                mov     rax, [rsp+0CE0h+var_C88]
                lea     edx, [r10-0Bh]

loc_140A0A9CF:                          ; CODE XREF: sub_1409FA010+107AA↑j
                mov     [rax], r8b
                add     r14, r10
                mov     r8, [rbp+0BE0h+var_C10]
                mov     rax, [rsp+0CE0h+var_C88]
                add     r8, r10
                add     rax, rdx
                mov     [rbp+0BE0h+var_C10], r8
                mov     [rsp+0CE0h+var_C88], rax
                mov     [rsp+0CE0h+var_C80], r14
                cmp     r14, r9
                jz      short loc_140A0A9FB
                mov     r12d, [r14+4]

loc_140A0A9FB:                          ; CODE XREF: sub_1409FA010+109E5↑j
                cmp     r12d, ecx
                jbe     loc_140A0A7A9
                jmp     short loc_140A0AA0D
; ---------------------------------------------------------------------------

loc_140A0AA06:                          ; CODE XREF: sub_1409FA010+1075B↑j
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]

loc_140A0AA0D:                          ; CODE XREF: sub_1409FA010+1076B↑j
                                        ; sub_1409FA010+10778↑j ...
                mov     r12, [rbp+0BE0h+var_C60]
                xor     r15d, r15d
                test    r13d, r13d
                jnz     loc_140A0AB97
                mov     eax, [rbp+0BE0h+var_C28]
                cmp     eax, ecx
                jz      loc_140A0AB97
                mov     rsi, [rsp+0CE0h+var_C68]
                lea     rdx, [rbp+0BE0h+var_7A0]
                mov     [r12+0Ch], eax
                lea     r13d, [r15+1]
                mov     [r12+10h], ecx
                mov     r9d, ecx
                mov     eax, [r12+0Ch]
                lea     rcx, [rbp+0BE0h+var_9B0]
                sub     r9d, eax
                add     rsi, rax
                mov     r14d, r9d
                mov     r8d, r15d
                add     r14, rsi

loc_140A0AA60:                          ; CODE XREF: sub_1409FA010+10A75↓j
                mov     r10, [rdx]
                mov     eax, [rcx]
                add     rax, r10
                cmp     rsi, rax
                jnb     short loc_140A0AA76
                cmp     r14, r10
                ja      loc_140A0AB97

loc_140A0AA76:                          ; CODE XREF: sub_1409FA010+10A5B↑j
                add     r8d, r13d
                add     rdx, 8
                add     rcx, 4
                cmp     r8d, 6
                jb      short loc_140A0AA60
                add     [rbx+828h], r9d
                mov     r10, rsi
                mov     r11d, [rbx+814h]
                mov     rax, rsi
                mov     r15, [rbx+818h]
                cmp     rsi, r14
                jnb     short loc_140A0AAB7
                mov     ecx, 40h ; '@'

loc_140A0AAAC:                          ; CODE XREF: sub_1409FA010+10AA5↓j
                prefetchnta byte ptr [rax]
                add     rax, rcx
                cmp     rax, r14
                jb      short loc_140A0AAAC

loc_140A0AAB7:                          ; CODE XREF: sub_1409FA010+10A95↑j
                mov     r14d, r9d
                mov     r8, r15
                shr     r14d, 7
                test    r14d, r14d
                jz      short loc_140A0AB2F
                mov     r12, 7010008004002001h

loc_140A0AAD0:                          ; CODE XREF: sub_1409FA010+10B19↓j
                mov     edx, 8

loc_140A0AAD5:                          ; CODE XREF: sub_1409FA010+10AE2↓j
                mov     rax, [r10]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r13
                jnz     short loc_140A0AAD5
                mov     rcx, r10
                sub     rcx, rsi
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                mov     [rbp+0BE0h+var_4F0], rdx
                xor     edx, eax
                xor     r11d, edx
                mov     eax, 0FFFFFFFFh
                and     r11d, 3Fh
                cmovz   r11d, r13d
                add     r14d, eax
                jnz     short loc_140A0AAD0
                mov     r12, [rbp+0BE0h+var_C60]

loc_140A0AB2F:                          ; CODE XREF: sub_1409FA010+10AB4↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_140A0AB56
                mov     edx, r9d
                shr     rdx, 3

loc_140A0AB40:                          ; CODE XREF: sub_1409FA010+10B44↓j
                xor     r8, [r10]
                mov     ecx, r11d
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A0AB40

loc_140A0AB56:                          ; CODE XREF: sub_1409FA010+10B27↑j
                xor     r15d, r15d
                test    r9d, r9d
                jz      short loc_140A0AB7C
                mov     r15d, 0FFFFFFFFh

loc_140A0AB64:                          ; CODE XREF: sub_1409FA010+10B67↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r11d
                xor     r8, rax
                add     r10, r13
                rol     r8, cl
                add     r9d, r15d
                jnz     short loc_140A0AB64
                xor     r15d, r15d

loc_140A0AB7C:                          ; CODE XREF: sub_1409FA010+10B4C↑j
                mov     rax, r8
                jmp     short loc_140A0AB84
; ---------------------------------------------------------------------------

loc_140A0AB81:                          ; CODE XREF: sub_1409FA010+10B7B↓j
                xor     r8d, eax

loc_140A0AB84:                          ; CODE XREF: sub_1409FA010+10B6F↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0AB81
                btr     r8d, 1Fh
                mov     [r12+14h], r8d

loc_140A0AB97:                          ; CODE XREF: sub_1409FA010+10A07↑j
                                        ; sub_1409FA010+10A12↑j ...
                mov     rdx, [rbp+0BE0h+var_C48]
                mov     r13, [rbp+0BE0h+var_C10]
                mov     r14, [rsp+0CE0h+var_C80]
                cmp     r13, rdx
                jz      short loc_140A0ABEC
                mov     eax, [r13+0]
                mov     ecx, [r13+4]
                cmp     eax, [rbp+0BE0h+var_C58]
                jb      short loc_140A0ABEC
                cmp     ecx, [rsp+0CE0h+var_C78]
                ja      short loc_140A0ABEC
                cmp     r14, rdx
                jz      short loc_140A0ABE0
                mov     rax, [rsp+0CE0h+var_C88]
                mov     byte ptr [rax], 80h
                inc     rax
                mov     [rsp+0CE0h+var_C88], rax
                mov     eax, 0Ch
                add     r14, rax
                mov     [rsp+0CE0h+var_C80], r14
                jmp     short loc_140A0ABE5
; ---------------------------------------------------------------------------

loc_140A0ABE0:                          ; CODE XREF: sub_1409FA010+10BAF↑j
                mov     eax, 0Ch

loc_140A0ABE5:                          ; CODE XREF: sub_1409FA010+10BCE↑j
                add     r13, rax
                mov     [rbp+0BE0h+var_C10], r13

loc_140A0ABEC:                          ; CODE XREF: sub_1409FA010+10B97↑j
                                        ; sub_1409FA010+10BA4↑j ...
                mov     rsi, [rbp+0BE0h+var_C50]
                add     r12, 18h
                add     rsi, 28h ; '('
                mov     [rbp+0BE0h+var_C60], r12
                mov     [rbp+0BE0h+var_C50], rsi
                cmp     r12, [rsp+0CE0h+var_C70]
                jz      short loc_140A0AC17
                mov     r8, [rsp+0CE0h+var_C68]
                mov     r9d, 1
                jmp     loc_140A0A365
; ---------------------------------------------------------------------------

loc_140A0AC17:                          ; CODE XREF: sub_1409FA010+10BF5↑j
                mov     rsi, [rbp+0BE0h+var_BB0]

loc_140A0AC1B:                          ; CODE XREF: sub_1409FA010+FCE8↑j
                                        ; sub_1409FA010+1034B↑j
                mov     [rbp+0BE0h+var_BA8], rsi
                mov     ecx, r15d

loc_140A0AC22:                          ; CODE XREF: sub_1409FA010+FD15↑j
                                        ; sub_1409FA010+FDAB↑j
                mov     [rbp+0BE0h+var_C18], ecx

loc_140A0AC25:                          ; CODE XREF: sub_1409FA010+F2C8↑j
                                        ; sub_1409FA010+F743↑j
                mov     r13d, 80000000h
                mov     rbx, rsi
                lea     eax, [rcx+r13]
                test    r13d, eax
                jnz     short loc_140A0AC4D
                cmp     ecx, 0C000010Eh
                jz      short loc_140A0AC4D

loc_140A0AC3F:                          ; CODE XREF: sub_1409FA010+F024↑j
                mov     ecx, [rbp+0BE0h+var_C18]
                jmp     loc_140A0ACDB
; ---------------------------------------------------------------------------

loc_140A0AC47:                          ; CODE XREF: sub_1409FA010+F27B↑j
                                        ; sub_1409FA010+F29B↑j
                mov     r13d, 80000000h

loc_140A0AC4D:                          ; CODE XREF: sub_1409FA010+10C25↑j
                                        ; sub_1409FA010+10C2D↑j
                mov     r12, [rbp+0BE0h+var_C08]
                mov     rax, [rsi+1F8h]
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                mov     ecx, [rax+94h]
                cmp     ecx, 14h
                jb      loc_140A08FDA
                mov     eax, [rax+90h]
                lea     r15, [r12+rcx]
                add     r15, rax
                lea     r14, [r12+rax]
                cmp     r14, r15
                jz      short loc_140A0ACD5
                xor     ecx, ecx

loc_140A0AC87:                          ; CODE XREF: sub_1409FA010+10CC3↓j
                cmp     [r14+0Ch], ecx
                jz      short loc_140A0ACD5
                mov     eax, [r14+10h]
                test    eax, eax
                jz      short loc_140A0ACD5
                mov     rdx, [rax+r12]
                test    rdx, rdx
                jz      short loc_140A0ACCC
                mov     r8d, 8000000Fh
                lea     rcx, [rbp+0BE0h+var_BA8]
                call    sub_140A0E0FC
                mov     rsi, [rbp+0BE0h+var_BA8]
                mov     ecx, eax
                add     eax, r13d
                mov     rbx, rsi
                test    r13d, eax
                jnz     short loc_140A0ACCA
                cmp     ecx, 0C000010Eh
                jnz     loc_140A0AE54

loc_140A0ACCA:                          ; CODE XREF: sub_1409FA010+10CAC↑j
                xor     ecx, ecx

loc_140A0ACCC:                          ; CODE XREF: sub_1409FA010+10C8C↑j
                add     r14, 14h
                cmp     r14, r15
                jnz     short loc_140A0AC87

loc_140A0ACD5:                          ; CODE XREF: sub_1409FA010+10C73↑j
                                        ; sub_1409FA010+10C7B↑j ...
                xor     r15d, r15d
                mov     ecx, r15d

loc_140A0ACDB:                          ; CODE XREF: sub_1409FA010+10C32↑j
                                        ; sub_1409FA010+10E47↓j
                lea     eax, [rcx+r13]
                test    r13d, eax
                jnz     short loc_140A0ACF0
                cmp     ecx, 0C000010Eh
                jnz     loc_140A08D8D

loc_140A0ACF0:                          ; CODE XREF: sub_1409FA010+EFCD↑j
                                        ; sub_1409FA010+10CD2↑j
                mov     rax, [rbx+570h]
                lea     rdx, [rbp+0BE0h+var_140]
                mov     rcx, [rax+20h]
                mov     rax, [rbx+200h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rbp+0BE0h+var_138]
                test    rcx, rcx
                jz      loc_140A0B25E
                mov     [rbx+978h], rcx
                mov     rax, [rbx+1F8h]
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      loc_140A0B25E
                mov     eax, [rax+50h]
                mov     [rbx+974h], eax
                mov     dword ptr [rbx+958h], 8

loc_140A0AD4D:                          ; CODE XREF: sub_1409FA010+D8D5↑j
                mov     r15, [rbx+600h]
                xor     r10d, r10d
                test    r15, r15
                jz      loc_140A0AF74
                cmp     [r15], r10
                jz      loc_140A0AF74
                mov     r9d, [rbx+838h]
                lea     r12d, [r10+20h]
                mov     r13d, [rbx+7E4h]
                cmp     r9d, 7
                mov     r8d, [rbx+924h]
                cmovnz  r12d, r10d
                mov     dword ptr [rbp+0BE0h+arg_8], r9d
                lea     eax, [r13+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A0AE9A
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r10d, r10d
                mov     r14, rax
                test    rax, rax
                jz      loc_140A0AE8F
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A0AE7E
                mov     eax, [rbx+7E4h]
                lea     r9d, [r10+1]
                mov     r8, [rbx+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A0AE04
                mov     ecx, eax
                shr     rcx, 3

loc_140A0ADF5:                          ; CODE XREF: sub_1409FA010+10DF2↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r9
                jnz     short loc_140A0ADF5

loc_140A0AE04:                          ; CODE XREF: sub_1409FA010+10DDD↑j
                test    eax, eax
                jz      short loc_140A0AE17
                mov     ecx, 0FFFFFFFFh

loc_140A0AE0D:                          ; CODE XREF: sub_1409FA010+10E05↓j
                mov     [rbx], r10b
                add     rbx, r9
                add     eax, ecx
                jnz     short loc_140A0AE0D

loc_140A0AE17:                          ; CODE XREF: sub_1409FA010+10DF6↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A0AE65
                test    dword ptr [r14+990h], 10000000h
                mov     ecx, r10d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A0AE5C
                mov     rax, [r14+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A0AE74
; ---------------------------------------------------------------------------

loc_140A0AE54:                          ; CODE XREF: sub_1409FA010+10CB4↑j
                xor     r15d, r15d
                jmp     loc_140A0ACDB
; ---------------------------------------------------------------------------

loc_140A0AE5C:                          ; CODE XREF: sub_1409FA010+10E2D↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A0AE6C
; ---------------------------------------------------------------------------

loc_140A0AE65:                          ; CODE XREF: sub_1409FA010+10E18↑j
                mov     rax, [r14+368h]

loc_140A0AE6C:                          ; CODE XREF: sub_1409FA010+10E53↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A0AE74:                          ; CODE XREF: sub_1409FA010+10E42↑j
                mov     [r14+924h], ebx
                xor     r10d, r10d

loc_140A0AE7E:                          ; CODE XREF: sub_1409FA010+10DB3↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rbp+0BE0h+arg_8]
                jmp     short loc_140A0AEA3
; ---------------------------------------------------------------------------

loc_140A0AE8F:                          ; CODE XREF: sub_1409FA010+10DA4↑j
                                        ; sub_1409FA010+10FBE↓j
                mov     rbx, rsi
                xor     r15d, r15d
                jmp     loc_140A08D8D
; ---------------------------------------------------------------------------

loc_140A0AE9A:                          ; CODE XREF: sub_1409FA010+10D8B↑j
                mov     r14, rbx
                mov     [rbx+7E4h], eax

loc_140A0AEA3:                          ; CODE XREF: sub_1409FA010+10E7D↑j
                mov     r8d, 1
                lea     rbx, [r14+r13]
                add     [r14+80Ch], r8d
                mov     rax, rbx
                mov     [rbp+0BE0h+var_4E8], rbx
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A0AEC5:                          ; CODE XREF: sub_1409FA010+10EC2↓j
                mov     [rax], r10
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A0AEC5
                test    ecx, ecx
                jz      short loc_140A0AEE7
                mov     edx, 0FFFFFFFFh

loc_140A0AEDD:                          ; CODE XREF: sub_1409FA010+10ED5↓j
                mov     [rax], r10b
                add     rax, r8
                add     ecx, edx
                jnz     short loc_140A0AEDD

loc_140A0AEE7:                          ; CODE XREF: sub_1409FA010+10EC6↑j
                mov     [rbx], r12d
                mov     [rbx+8], r15
                cmp     r9d, 7
                jnz     short loc_140A0AF0C
                lea     r9, [rbx+18h]
                mov     r8d, 8
                mov     rdx, r15
                mov     rcx, r14
                call    sub_1403EA0CC
                xor     r10d, r10d

loc_140A0AF0C:                          ; CODE XREF: sub_1409FA010+10EE2↑j
                mov     dword ptr [rbx+10h], 8
                lea     rdx, [r15+8]
                add     dword ptr [r14+828h], 8
                mov     rax, r15
                mov     ecx, [r14+814h]
                mov     r8, [r14+818h]
                cmp     r15, rdx
                jnb     short loc_140A0AF46
                mov     r9d, 40h ; '@'

loc_140A0AF3B:                          ; CODE XREF: sub_1409FA010+10F34↓j
                prefetchnta byte ptr [rax]
                add     rax, r9
                cmp     rax, rdx
                jb      short loc_140A0AF3B

loc_140A0AF46:                          ; CODE XREF: sub_1409FA010+10F23↑j
                mov     rax, [r15]
                xor     rax, r8
                rol     rax, cl
                mov     rcx, rax
                jmp     short loc_140A0AF56
; ---------------------------------------------------------------------------

loc_140A0AF54:                          ; CODE XREF: sub_1409FA010+10F4D↓j
                xor     eax, ecx

loc_140A0AF56:                          ; CODE XREF: sub_1409FA010+10F42↑j
                shr     rcx, 1Fh
                test    rcx, rcx
                jnz     short loc_140A0AF54
                btr     eax, 1Fh
                mov     rsi, r14
                mov     [rbx+14h], eax
                mov     rbx, r14
                add     dword ptr [r14+828h], 8

loc_140A0AF74:                          ; CODE XREF: sub_1409FA010+10D4A↑j
                                        ; sub_1409FA010+10D53↑j
                mov     dword ptr [rbx+958h], 9
                jmp     loc_140A078F7
; ---------------------------------------------------------------------------

loc_140A0AF83:                          ; CODE XREF: sub_1409FA010+DA1A↑j
                mov     r9d, [rbx+838h]
                mov     r13d, 20h ; ' '
                mov     eax, [rbx+7E4h]
                cmp     r9d, 7
                mov     r8d, [rbx+924h]
                cmovnz  r13d, r11d
                mov     [rbp+0BE0h+var_C38], eax
                add     eax, 30h ; '0'
                mov     [rbp+0BE0h+var_BE8], r9d
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A0B09E
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     r14, rax
                test    rax, rax
                jz      loc_140A0AE8F
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A0B090
                mov     eax, [rbx+7E4h]
                lea     r9d, [r11+1]
                mov     r8, [rbx+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A0B01E
                mov     ecx, eax
                shr     rcx, 3

loc_140A0B00F:                          ; CODE XREF: sub_1409FA010+1100C↓j
                mov     [rbx], r11
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r9
                jnz     short loc_140A0B00F

loc_140A0B01E:                          ; CODE XREF: sub_1409FA010+10FF7↑j
                test    eax, eax
                jz      short loc_140A0B031
                mov     ecx, 0FFFFFFFFh

loc_140A0B027:                          ; CODE XREF: sub_1409FA010+1101F↓j
                mov     [rbx], r11b
                add     rbx, r9
                add     eax, ecx
                jnz     short loc_140A0B027

loc_140A0B031:                          ; CODE XREF: sub_1409FA010+11010↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A0B077
                test    dword ptr [r14+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A0B06E
                mov     rax, [r14+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A0B086
; ---------------------------------------------------------------------------

loc_140A0B06E:                          ; CODE XREF: sub_1409FA010+11047↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A0B07E
; ---------------------------------------------------------------------------

loc_140A0B077:                          ; CODE XREF: sub_1409FA010+11032↑j
                mov     rax, [r14+368h]

loc_140A0B07E:                          ; CODE XREF: sub_1409FA010+11065↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A0B086:                          ; CODE XREF: sub_1409FA010+1105C↑j
                mov     [r14+924h], ebx
                xor     r11d, r11d

loc_140A0B090:                          ; CODE XREF: sub_1409FA010+10FCD↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                mov     r9d, [rbp+0BE0h+var_BE8]
                jmp     short loc_140A0B0A7
; ---------------------------------------------------------------------------

loc_140A0B09E:                          ; CODE XREF: sub_1409FA010+10FA5↑j
                mov     r14, rbx
                mov     [rbx+7E4h], eax

loc_140A0B0A7:                          ; CODE XREF: sub_1409FA010+1108C↑j
                mov     ebx, [rbp+0BE0h+var_C38]
                mov     r8d, 1
                add     [r14+80Ch], r8d
                add     rbx, r14
                mov     [rsp+0CE0h+var_C70], rbx
                mov     rax, rbx
                lea     ecx, [r8+2Fh]
                mov     [rbp+0BE0h+var_4D8], rbx
                lea     edx, [rcx-2Ah]

loc_140A0B0D0:                          ; CODE XREF: sub_1409FA010+110CD↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A0B0D0
                test    ecx, ecx
                jz      short loc_140A0B0F2
                mov     edx, 0FFFFFFFFh

loc_140A0B0E8:                          ; CODE XREF: sub_1409FA010+110E0↓j
                mov     [rax], r11b
                add     rax, r8
                add     ecx, edx
                jnz     short loc_140A0B0E8

loc_140A0B0F2:                          ; CODE XREF: sub_1409FA010+110D1↑j
                mov     [rbx], r13d
                mov     [rbx+8], r15
                cmp     r9d, 7
                jnz     short loc_140A0B116
                test    r12d, r12d
                jz      short loc_140A0B116
                lea     r9, [rbx+18h]
                mov     r8d, r12d
                mov     rdx, r15
                mov     rcx, r14
                call    sub_1403EA0CC

loc_140A0B116:                          ; CODE XREF: sub_1409FA010+110ED↑j
                                        ; sub_1409FA010+110F2↑j
                mov     [rbx+10h], r12d
                mov     r9, r15
                add     [r14+828h], r12d
                mov     rax, r15
                mov     r10d, [r14+814h]
                mov     rsi, [r14+818h]
                mov     ecx, r12d
                add     rcx, r15
                cmp     r15, rcx
                jnb     short loc_140A0B150
                mov     edx, 40h ; '@'

loc_140A0B145:                          ; CODE XREF: sub_1409FA010+1113E↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A0B145

loc_140A0B150:                          ; CODE XREF: sub_1409FA010+1112E↑j
                mov     r11d, r12d
                mov     r8, rsi
                shr     r11d, 7
                mov     r13d, 1
                test    r11d, r11d
                jz      short loc_140A0B1D8
                mov     ebx, 0FFFFFFFFh
                mov     r12, 7010008004002001h

loc_140A0B174:                          ; CODE XREF: sub_1409FA010+111B3↓j
                mov     eax, 8

loc_140A0B179:                          ; CODE XREF: sub_1409FA010+11180↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                xor     r8, [r9+8]
                add     r9, 10h
                rol     r8, cl
                sub     rax, r13
                jnz     short loc_140A0B179
                mov     rcx, r9
                sub     rcx, r15
                xor     rcx, rsi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     r10d, edx
                mov     [rbp+0BE0h+var_4D0], rdx
                xor     r10d, eax
                and     r10d, 3Fh
                cmovz   r10d, r13d
                add     r11d, ebx
                jnz     short loc_140A0B174
                mov     rbx, [rsp+0CE0h+var_C70]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r12d, dword ptr [rbp+0BE0h+arg_8]

loc_140A0B1D8:                          ; CODE XREF: sub_1409FA010+11153↑j
                mov     edx, r12d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A0B1FE
                mov     eax, edx
                shr     rax, 3

loc_140A0B1E9:                          ; CODE XREF: sub_1409FA010+111EC↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r13
                jnz     short loc_140A0B1E9

loc_140A0B1FE:                          ; CODE XREF: sub_1409FA010+111D1↑j
                xor     r15d, r15d
                test    edx, edx
                jz      short loc_140A0B223
                mov     r15d, 0FFFFFFFFh

loc_140A0B20B:                          ; CODE XREF: sub_1409FA010+1120E↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r13
                rol     r8, cl
                add     edx, r15d
                jnz     short loc_140A0B20B
                xor     r15d, r15d

loc_140A0B223:                          ; CODE XREF: sub_1409FA010+111F3↑j
                mov     rax, r8
                jmp     short loc_140A0B22B
; ---------------------------------------------------------------------------

loc_140A0B228:                          ; CODE XREF: sub_1409FA010+11222↓j
                xor     r8d, eax

loc_140A0B22B:                          ; CODE XREF: sub_1409FA010+11216↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0B228
                btr     r8d, 1Fh
                mov     rsi, r14
                mov     [rbx+14h], r8d
                mov     rbx, r14
                add     [r14+828h], r12d
                jmp     short loc_140A0B24F
; ---------------------------------------------------------------------------

loc_140A0B24C:                          ; CODE XREF: sub_1409FA010+D8F1↑j
                                        ; sub_1409FA010+D8FD↑j
                xor     r15d, r15d

loc_140A0B24F:                          ; CODE XREF: sub_1409FA010+D8DE↑j
                                        ; sub_1409FA010+1123A↑j
                mov     dword ptr [rbx+958h], 0Bh
                jmp     loc_140A08D8D
; ---------------------------------------------------------------------------

loc_140A0B25E:                          ; CODE XREF: sub_1409FA010+10D08↑j
                                        ; sub_1409FA010+10D24↑j
                mov     r12d, 1
                cmp     [rbx+8F8h], r15d
                jnz     loc_140A07AB7
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     [rbx+900h], rax
                mov     [rbx+908h], r15
                mov     qword ptr [rbx+910h], 105h
                mov     qword ptr [rbx+918h], 0FFFFFFFFC000007Bh
                jmp     loc_140A07AA6
; ---------------------------------------------------------------------------

loc_140A0B2A7:                          ; CODE XREF: sub_1409FA010+CCA4↑j
                mov     r12d, 1
                jmp     loc_140A07ABD
; ---------------------------------------------------------------------------

loc_140A0B2B2:                          ; CODE XREF: sub_1409FA010+DB18↑j
                mov     [rbx+970h], r13d

loc_140A0B2B9:                          ; CODE XREF: sub_1409FA010+DAF4↑j
                                        ; sub_1409FA010+DB33↑j
                test    r14, r14
                jz      loc_140A0B51C
                mov     rax, [rbx+288h]
                mov     rcx, r14

loc_140A0B2CC:                          ; CODE XREF: sub_1409FA010+11500↓j
                call    j__guard_dispatch_icall_nop
                jmp     loc_140A0B51C
; ---------------------------------------------------------------------------

loc_140A0B2D6:                          ; CODE XREF: sub_1409FA010+CB9F↑j
                mov     eax, [rsi+830h]
                test    r12b, al
                jz      loc_140A0B51C
                mov     ecx, [rsi+970h]
                mov     r13d, 0FFFFFFFFh
                cmp     ecx, r13d
                jz      short loc_140A0B307
                mov     rax, [rsi+278h]
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                jmp     short loc_140A0B30A
; ---------------------------------------------------------------------------

loc_140A0B307:                          ; CODE XREF: sub_1409FA010+112E4↑j
                mov     rbx, r15

loc_140A0B30A:                          ; CODE XREF: sub_1409FA010+112F5↑j
                test    rbx, rbx
                jnz     short loc_140A0B329
                mov     rax, [rsi+280h]
                xor     ecx, ecx
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A0B51C

loc_140A0B329:                          ; CODE XREF: sub_1409FA010+112FD↑j
                mov     rax, [rsi+290h]
                lea     rdx, [rbp+0BE0h+var_6C0]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     r14d, eax
                test    eax, eax
                jns     short loc_140A0B357
                mov     rax, [rsi+288h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A0B3B9
; ---------------------------------------------------------------------------

loc_140A0B357:                          ; CODE XREF: sub_1409FA010+11334↑j
                mov     [rsi+980h], rbx
                mov     rax, [rsi+2B8h]
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                mov     rax, [rsi+2D8h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                test    rax, rax
                jnz     short loc_140A0B389
                lea     ecx, [rax+4]
                jmp     short loc_140A0B39B
; ---------------------------------------------------------------------------

loc_140A0B389:                          ; CODE XREF: sub_1409FA010+11372↑j
                mov     rax, [rsi+2E8h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     ecx, r15d

loc_140A0B39B:                          ; CODE XREF: sub_1409FA010+11377↑j
                mov     eax, [rsi+994h]
                mov     r14d, r15d
                and     eax, 0FFFFFFFBh
                or      eax, ecx
                mov     [rsi+994h], eax
                add     dword ptr [rsi+828h], 10000h

loc_140A0B3B9:                          ; CODE XREF: sub_1409FA010+11345↑j
                test    r14d, r14d
                js      loc_140A0B51C
                mov     rax, [rsi+960h]
                mov     rcx, [rax]
                cmp     rcx, [rsi+968h]
                jnz     loc_140A0B47A
                mov     rax, [rsi+570h]
                cmp     [rax+30h], r15d
                jz      loc_140A0B47A
                lock or [rsp+0CE0h+var_CE0], r15d
                mov     rax, [rsi+960h]
                mov     rcx, [rax]
                cmp     rcx, [rsi+968h]
                jnz     short loc_140A0B47A
                mov     rax, [rsi+960h]
                mov     rdx, [rax]
                mov     eax, [rsi+8F8h]
                mov     rcx, [rsi+968h]
                test    eax, eax
                jnz     short loc_140A0B47A
                mov     rax, [rsi+590h]
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]
                mov     rcx, [rsi+968h]
                test    eax, eax
                jnz     short loc_140A0B47A
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 103h
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_140A0B47A:                          ; CODE XREF: sub_1409FA010+113C3↑j
                                        ; sub_1409FA010+113D4↑j ...
                mov     ecx, 8000h
                test    [rsi+990h], ecx
                jnz     short loc_140A0B494
                cmp     [rsi+8F8h], r15d
                jnz     loc_140A0B51C

loc_140A0B494:                          ; CODE XREF: sub_1409FA010+11475↑j
                mov     rbx, [rsi+980h]
                lea     rdx, [rbp+0BE0h+var_6C0]
                mov     [rsi+980h], r15
                mov     rcx, rbx
                mov     rax, [rsi+298h]
                call    j__guard_dispatch_icall_nop
                mov     eax, [rsi+990h]
                test    r12b, al
                jz      short loc_140A0B501
                and     eax, 0FFFFFFFEh
                mov     rcx, rbx
                mov     [rsi+990h], eax
                mov     rax, [rsi+280h]
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                test    rax, rax
                jz      short loc_140A0B4FA
                mov     rax, [rsi+2A0h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     [rsi+970h], eax
                jmp     short loc_140A0B501
; ---------------------------------------------------------------------------

loc_140A0B4FA:                          ; CODE XREF: sub_1409FA010+114D1↑j
                mov     [rsi+970h], r13d

loc_140A0B501:                          ; CODE XREF: sub_1409FA010+114B1↑j
                                        ; sub_1409FA010+114E8↑j
                test    rbx, rbx
                jz      short loc_140A0B51C
                mov     rax, [rsi+288h]
                mov     rcx, rbx
                jmp     loc_140A0B2CC
; ---------------------------------------------------------------------------

loc_140A0B515:                          ; CODE XREF: sub_1409FA010+CC86↑j
                xor     r15d, r15d
                lea     r12d, [r15+1]

loc_140A0B51C:                          ; CODE XREF: sub_1409FA010+CB72↑j
                                        ; sub_1409FA010+CB7B↑j ...
                mov     [rsp+0CE0h+var_C80], rsi

loc_140A0B521:                          ; CODE XREF: sub_1409FA010+CB88↑j
                test    dword ptr [rsi+990h], 2000000h
                jz      short loc_140A0B5AA
                mov     rbx, [rsi+998h]
                mov     rax, [rsi+390h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jz      short loc_140A0B58E
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A0B58E
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 110h
                mov     [rsi+918h], r15
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC

loc_140A0B58E:                          ; CODE XREF: sub_1409FA010+11535↑j
                                        ; sub_1409FA010+1153E↑j
                mov     rax, [rsi+388h]
                lea     rdx, sub_140A12EF0
                xor     r9d, r9d
                mov     r8, rsi
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A0B5AA:                          ; CODE XREF: sub_1409FA010+1151B↑j
                mov     edx, r12d
                mov     rcx, rsi
                call    sub_140A113CC
                test    dword ptr [rsi+994h], 100h
                jz      short loc_140A0B5CC
                mov     rax, [rbp+0BE0h+var_BD0]
                mov     [rbp+0BE8h], rax

loc_140A0B5CC:                          ; CODE XREF: sub_1409FA010+115AF↑j
                mov     r9d, [rsi+990h]
                mov     r8d, r9d
                bt      r9d, 12h
                jnb     loc_140A0B681
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_4C8], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                mov     eax, 2
                cmp     rcx, rax
                jnb     short loc_140A0B681
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A0B681
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     rcx, rsi
                mov     [rsi+900h], rax
                mov     [rsi+908h], r15
                mov     qword ptr [rsi+910h], 108h
                mov     [rsi+918h], r15
                mov     [rsi+8F8h], r12d
                call    sub_140A113CC
                mov     r8d, [rsi+990h]

loc_140A0B681:                          ; CODE XREF: sub_1409FA010+115CB↑j
                                        ; sub_1409FA010+11621↑j ...
                mov     r10d, 8000h
                bt      r8d, 1Eh
                jb      short loc_140A0B6FD
                test    r10d, r8d
                jnz     short loc_140A0B69C
                cmp     [rsi+8F8h], r15d
                jnz     short loc_140A0B6FD

loc_140A0B69C:                          ; CODE XREF: sub_1409FA010+11681↑j
                mov     rcx, [rbp+0BE0h+arg_0]
                test    [rcx+990h], r10d
                jnz     short loc_140A0B6FD
                add     rcx, 8F8h
                cmp     [rcx], r15d
                jz      short loc_140A0B6FD
                mov     r8d, 28h ; '('
                lea     rdx, [rsi+8F8h]
                lea     r9d, [r8-23h]

loc_140A0B6C9:                          ; CODE XREF: sub_1409FA010+116CE↓j
                mov     rax, [rdx]
                add     r8d, 0FFFFFFF8h
                mov     [rcx], rax
                add     rdx, 8
                add     rcx, 8
                sub     r9, r12
                jnz     short loc_140A0B6C9
                test    r8d, r8d
                jz      short loc_140A0B6FD
                mov     r15d, 0FFFFFFFFh

loc_140A0B6EB:                          ; CODE XREF: sub_1409FA010+116E8↓j
                mov     al, [rdx]
                add     rdx, r12
                mov     [rcx], al
                add     rcx, r12
                add     r8d, r15d
                jnz     short loc_140A0B6EB
                xor     r15d, r15d

loc_140A0B6FD:                          ; CODE XREF: sub_1409FA010+1167C↑j
                                        ; sub_1409FA010+1168A↑j ...
                test    [rsi+990h], r10d
                jnz     short loc_140A0B713
                cmp     [rsi+8F8h], r15d
                jnz     loc_140A0C664

loc_140A0B713:                          ; CODE XREF: sub_1409FA010+116F4↑j
                mov     eax, [rsi+0A28h]
                test    eax, eax
                jz      loc_140A0C664
                lea     r14, [rsi+rax]
                mov     r11, [r14+8]
                mov     [rbp+0BE0h+var_C20], r14
                test    r11, r11
                jz      loc_140A0B9F4
                mov     r9d, [r14+10h]
                mov     r8, r11
                add     [rsi+828h], r9d
                mov     rax, r11
                mov     r10d, [rsi+814h]
                mov     r12, [rsi+818h]
                lea     rcx, [r11+r9]
                cmp     r11, rcx
                jnb     short loc_140A0B76E
                mov     edx, 40h ; '@'

loc_140A0B763:                          ; CODE XREF: sub_1409FA010+1175C↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A0B763

loc_140A0B76E:                          ; CODE XREF: sub_1409FA010+1174C↑j
                mov     r15d, r9d
                mov     rbx, r12
                shr     r15d, 7
                mov     r13d, 1
                test    r15d, r15d
                jz      short loc_140A0B7EC
                mov     rdi, 7010008004002001h

loc_140A0B78D:                          ; CODE XREF: sub_1409FA010+117D1↓j
                mov     eax, 8

loc_140A0B792:                          ; CODE XREF: sub_1409FA010+11799↓j
                xor     rbx, [r8]
                mov     ecx, r10d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, r13
                jnz     short loc_140A0B792
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r12
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r10d, edx
                mov     [rbp+0BE0h+var_4C0], rdx
                xor     r10d, eax
                mov     edx, 0FFFFFFFFh
                and     r10d, 3Fh
                cmovz   r10d, r13d
                add     r15d, edx
                jnz     short loc_140A0B78D
                mov     rdi, 0FFFFFFFFB8797400h
                jmp     short loc_140A0B7F1
; ---------------------------------------------------------------------------

loc_140A0B7EC:                          ; CODE XREF: sub_1409FA010+11771↑j
                mov     edx, 0FFFFFFFFh

loc_140A0B7F1:                          ; CODE XREF: sub_1409FA010+117DA↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_140A0B818
                mov     eax, r9d
                shr     rax, 3

loc_140A0B802:                          ; CODE XREF: sub_1409FA010+11806↓j
                xor     rbx, [r8]
                mov     ecx, r10d
                rol     rbx, cl
                add     r8, 8
                add     r9d, 0FFFFFFF8h
                sub     rax, r13
                jnz     short loc_140A0B802

loc_140A0B818:                          ; CODE XREF: sub_1409FA010+117E9↑j
                xor     r15d, r15d
                test    r9d, r9d
                jz      short loc_140A0B835

loc_140A0B820:                          ; CODE XREF: sub_1409FA010+11823↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     r9d, edx
                jnz     short loc_140A0B820

loc_140A0B835:                          ; CODE XREF: sub_1409FA010+1180E↑j
                mov     rax, rbx
                jmp     short loc_140A0B83C
; ---------------------------------------------------------------------------

loc_140A0B83A:                          ; CODE XREF: sub_1409FA010+11833↓j
                xor     ebx, eax

loc_140A0B83C:                          ; CODE XREF: sub_1409FA010+11828↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0B83A
                btr     ebx, 1Fh
                mov     r12d, r15d
                cmp     ebx, [r14+14h]
                jz      loc_140A0B9BD
                cmp     [r14], r15d
                jnz     short loc_140A0B863
                cmp     [r14+18h], r15d
                cmovnz  r12d, r13d

loc_140A0B863:                          ; CODE XREF: sub_1409FA010+11849↑j
                mov     ecx, [r14+10h]
                mov     rdx, [r14+8]
                test    rcx, rcx
                jz      loc_140A0B943
                mov     eax, [rsi+994h]
                mov     r8d, 40h ; '@'
                test    r8b, al
                jz      loc_140A0B943
                mov     rax, cr8
                mov     [rbp+0BE0h+arg_8], rax
                mov     r8d, 2
                mov     cr8, r8
                dec     rcx
                mov     r15, rdx
                and     r15, 0FFFFFFFFFFFFF000h
                add     rcx, rdx
                or      rcx, 0FFFh
                mov     [rsp+0CE0h+var_C70], rcx
                lea     rcx, [r15-1]
                mov     [rbp+0BE0h+var_BD0], rcx

loc_140A0B8C2:                          ; CODE XREF: sub_1409FA010+1191E↓j
                movzx   r13d, al

loc_140A0B8C6:                          ; CODE XREF: sub_1409FA010+118F9↓j
                mov     rax, [rsi+468h]
                xor     edx, edx
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A0B90B
                test    r12d, r12d
                jnz     short loc_140A0B93C
                mov     rax, [rbp+0BE0h+arg_8]
                lea     ecx, [r12+1]
                cmp     al, cl
                ja      short loc_140A0B916
                movzx   r13d, al
                mov     cr8, r13
                mov     al, [r15]
                mov     rax, cr8
                lea     eax, [rcx+1]
                mov     cr8, rax
                jmp     short loc_140A0B8C6
; ---------------------------------------------------------------------------

loc_140A0B90B:                          ; CODE XREF: sub_1409FA010+118CC↑j
                test    eax, eax
                js      short loc_140A0B93C
                mov     rax, [rbp+0BE0h+arg_8]

loc_140A0B916:                          ; CODE XREF: sub_1409FA010+118E1↑j
                mov     rcx, [rbp+0BE0h+var_BD0]
                mov     edx, 1000h
                add     rcx, rdx
                add     r15, rdx
                mov     [rbp+0BE0h+var_BD0], rcx
                cmp     rcx, [rsp+0CE0h+var_C70]
                jnz     short loc_140A0B8C2
                mov     cr8, r13
                xor     r15d, r15d
                jmp     loc_140A0B9BD
; ---------------------------------------------------------------------------

loc_140A0B93C:                          ; CODE XREF: sub_1409FA010+118D1↑j
                                        ; sub_1409FA010+118FD↑j
                mov     cr8, r13
                xor     r15d, r15d

loc_140A0B943:                          ; CODE XREF: sub_1409FA010+1185E↑j
                                        ; sub_1409FA010+11873↑j
                mov     eax, [rsi+8F8h]
                mov     edx, [r14+14h]
                test    eax, eax
                jnz     short loc_140A0B967
                mov     rax, [rsi+590h]
                mov     ecx, ebx
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rsi+8F8h]

loc_140A0B967:                          ; CODE XREF: sub_1409FA010+1193F↑j
                mov     rcx, [r14+8]
                test    eax, eax
                jnz     short loc_140A0B9BD
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rsi
                mov     [rsi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r14
                mov     [rsi+908h], rax
                movsxd  rax, dword ptr [r14]
                mov     [rsi+910h], rax
                mov     eax, 1
                mov     [rsi+918h], rcx
                mov     rcx, rsi
                mov     [rsi+8F8h], eax
                call    sub_140A113CC

loc_140A0B9BD:                          ; CODE XREF: sub_1409FA010+11840↑j
                                        ; sub_1409FA010+11927↑j ...
                mov     rcx, [r14+18h]
                mov     rax, [rsi+100h]
                call    j__guard_dispatch_icall_nop
                mov     [r14+8], r15
                mov     [r14+10h], r15d
                mov     rcx, [rsi+818h]
                mov     rax, rcx
                jmp     short loc_140A0B9E3
; ---------------------------------------------------------------------------

loc_140A0B9E1:                          ; CODE XREF: sub_1409FA010+119DA↓j
                xor     ecx, eax

loc_140A0B9E3:                          ; CODE XREF: sub_1409FA010+119CF↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0B9E1
                btr     ecx, 1Fh
                mov     [r14+14h], ecx

loc_140A0B9F4:                          ; CODE XREF: sub_1409FA010+11720↑j
                rdtsc
                shl     rdx, 20h
                mov     r9, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_4B8], rdx
                xor     rcx, rax
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                lea     rax, [rdx+rdx*2]
                cmp     rcx, rax
                jnz     loc_140A0C670
                mov     r8d, [rsi+810h]
                lea     r12, [r14+18h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     rbx, rdx
                mov     [rbp+0BE0h+var_4B0], rdx
                xor     ebx, eax
                and     ebx, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     ecx, [rsi+990h]
                lea     r9d, [rbx+1]
                xor     rax, rdx
                mov     [rbp+0BE0h+var_4A8], rdx
                xor     edx, edx
                shr     ecx, 13h
                div     r9
                mov     rax, [rsi+0F8h]
                and     ecx, 200h
                mov     r15, rdx
                lea     edx, [rbx+0AA0h]
                call    j__guard_dispatch_icall_nop
                mov     r11, rax
                test    rax, rax
                jnz     loc_140A0BE7E
                lea     r15d, [rax+1]
                add     [rsi+0A18h], r15d

loc_140A0BADE:                          ; CODE XREF: sub_1409FA010+11FBE↓j
                                        ; sub_1409FA010+1264F↓j ...
                mov     r9, 7010008004002001h

loc_140A0BAE8:                          ; CODE XREF: sub_1409FA010+12667↓j
                mov     r13d, [rsi+990h]
                mov     [rbp+0BE0h+var_C38], r11d
                mov     [rbp+0BE0h+var_C40], r11
                mov     dword ptr [rbp+0BE0h+arg_8], r13d
                bt      r13d, 1Eh
                jb      loc_140A0CA53
                mov     r14, [rbp+0BE0h+arg_0]
                cmp     rsi, r14
                jnz     loc_140A0CB56
                mov     eax, 8000h
                test    eax, r13d
                jnz     short loc_140A0BB30
                cmp     [rsi+8F8h], r11d
                jnz     loc_140A0C811

loc_140A0BB30:                          ; CODE XREF: sub_1409FA010+11B11↑j
                mov     r8d, [r14+924h]
                mov     rcx, r14
                mov     edx, [r14+7E4h]
                call    sub_140A10B30
                mov     rsi, rax
                test    rax, rax
                jz      loc_140A0C811
                mov     ecx, [rsi+954h]
                mov     r15, 7010008004002001h
                mov     r12d, [rsi+0A2Ch]
                mov     rax, [rax+7C8h]
                add     r12d, 0FFFFFF38h
                mov     [rbp+0BE0h+var_C28], ecx
                mov     ecx, [rsi+990h]
                mov     [rbp+0BE0h+var_C38], ecx
                mov     rcx, [rsi+4E8h]
                shr     r12d, 3
                mov     [rbp+0BE0h+var_C30], rcx
                mov     rcx, [rsi+5C0h]
                mov     [rbp+0BE0h+var_BD0], rcx
                mov     [rbp+0BE0h+var_C40], rax
                mov     dword ptr [rbp+0BE0h+arg_8], r12d
                mov     [rsi+0C4h], r12d

loc_140A0BBAF:                          ; CODE XREF: sub_1409FA010+11BC5↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rbx, rdx
                mov     [rbp+0BE0h+var_460], rdx
                xor     rbx, rax
                jz      short loc_140A0BBAF
                mov     rax, [rsi+7B8h]
                lea     r14, [rsi+798h]
                mov     r11d, 20h ; ' '
                mov     [rsp+0CE0h+var_C70], rax
                mov     eax, [rsi+828h]
                lea     rdx, [rbp+0BE0h+var_D0]
                mov     [rbp+0BE0h+var_BE8], eax
                mov     r8d, r11d
                mov     rcx, r14
                xor     r15d, r15d
                lea     r10d, [r11-1Ch]
                mov     r9d, r10d
                lea     r13d, [r11-1Fh]

loc_140A0BC14:                          ; CODE XREF: sub_1409FA010+11C19↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, r13
                jnz     short loc_140A0BC14
                test    r8d, r8d
                jz      short loc_140A0BC48
                mov     r15d, 0FFFFFFFFh

loc_140A0BC36:                          ; CODE XREF: sub_1409FA010+11C33↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [rdx], al
                add     rdx, r13
                add     r8d, r15d
                jnz     short loc_140A0BC36
                xor     r15d, r15d

loc_140A0BC48:                          ; CODE XREF: sub_1409FA010+11C1E↑j
                mov     [rsi+7B8h], r15
                mov     ecx, r11d
                mov     [rsi+828h], r15d
                mov     rax, r14
                mov     rdx, r10

loc_140A0BC5F:                          ; CODE XREF: sub_1409FA010+11C5C↓j
                mov     [rax], r15
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A0BC5F
                mov     edx, 0FFFFFFFFh
                test    ecx, ecx
                jz      short loc_140A0BC81

loc_140A0BC77:                          ; CODE XREF: sub_1409FA010+11C6F↓j
                mov     [rax], r15b
                add     rax, r13
                add     ecx, edx
                jnz     short loc_140A0BC77

loc_140A0BC81:                          ; CODE XREF: sub_1409FA010+11C65↑j
                mov     eax, [rsi+7E4h]
                mov     r10, rsi
                add     [rsi+828h], eax
                mov     rax, rsi
                mov     r11d, [rsi+7E4h]
                mov     r9d, [rsi+814h]
                mov     r13, [rsi+818h]
                lea     rcx, [rsi+r11]
                cmp     rsi, rcx
                jnb     short loc_140A0BCC2
                mov     r8d, 40h ; '@'

loc_140A0BCB7:                          ; CODE XREF: sub_1409FA010+11CB0↓j
                prefetchnta byte ptr [rax]
                add     rax, r8
                cmp     rax, rcx
                jb      short loc_140A0BCB7

loc_140A0BCC2:                          ; CODE XREF: sub_1409FA010+11C9F↑j
                mov     r15d, r11d
                mov     r8, r13
                shr     r15d, 7
                test    r15d, r15d
                jz      short loc_140A0BD4B
                mov     r12, 7010008004002001h

loc_140A0BCDB:                          ; CODE XREF: sub_1409FA010+11D2B↓j
                mov     edx, 8
                lea     edi, [rdx-7]

loc_140A0BCE3:                          ; CODE XREF: sub_1409FA010+11CF0↓j
                mov     rax, [r10]
                mov     ecx, r9d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, rdi
                jnz     short loc_140A0BCE3
                mov     rcx, r10
                sub     rcx, rsi
                xor     rcx, r13
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     r9d, eax
                mov     [rbp+0BE0h+var_458], rdx
                xor     r9d, edx
                mov     rax, rdi
                and     r9d, 3Fh
                mov     edx, 0FFFFFFFFh
                cmovz   r9d, eax
                add     r15d, edx
                jnz     short loc_140A0BCDB
                mov     r12d, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0BD4B:                          ; CODE XREF: sub_1409FA010+11CBF↑j
                and     r11d, 7Fh
                mov     r13d, 1
                cmp     r11d, 8
                jb      short loc_140A0BD7D
                mov     edx, r11d
                shr     rdx, 3

loc_140A0BD62:                          ; CODE XREF: sub_1409FA010+11D66↓j
                xor     r8, [r10]
                mov     ecx, r9d
                rol     r8, cl
                add     r10, 8
                add     r11d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A0BD62
                mov     edx, 0FFFFFFFFh

loc_140A0BD7D:                          ; CODE XREF: sub_1409FA010+11D49↑j
                test    r11d, r11d
                jz      short loc_140A0BD97

loc_140A0BD82:                          ; CODE XREF: sub_1409FA010+11D85↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r9d
                xor     r8, rax
                add     r10, r13
                rol     r8, cl
                add     r11d, edx
                jnz     short loc_140A0BD82

loc_140A0BD97:                          ; CODE XREF: sub_1409FA010+11D70↑j
                mov     rax, [rsp+0CE0h+var_C70]
                lea     rcx, [rbp+0BE0h+var_D0]
                mov     r9d, 4
                mov     [rsi+7B8h], rax
                mov     eax, [rbp+0BE0h+var_BE8]
                mov     edx, r9d
                add     [rsi+828h], eax
                lea     r10d, [r9+1Ch]

loc_140A0BDC0:                          ; CODE XREF: sub_1409FA010+11DC5↓j
                mov     rax, [rcx]
                add     r10d, 0FFFFFFF8h
                mov     [r14], rax
                add     rcx, 8
                add     r14, 8
                sub     rdx, r13
                jnz     short loc_140A0BDC0
                xor     r11d, r11d
                test    r10d, r10d
                jz      short loc_140A0BDF8
                mov     r11d, 0FFFFFFFFh

loc_140A0BDE5:                          ; CODE XREF: sub_1409FA010+11DE3↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [r14], al
                add     r14, r13
                add     r10d, r11d
                jnz     short loc_140A0BDE5
                xor     r11d, r11d

loc_140A0BDF8:                          ; CODE XREF: sub_1409FA010+11DCD↑j
                mov     [rsi+7B8h], r8
                test    dword ptr [rsi+990h], 40000000h
                jnz     loc_140A0D037
                mov     eax, r11d
                mov     rcx, rsi
                mov     r11d, 19h

loc_140A0BE1B:                          ; CODE XREF: sub_1409FA010+11E18↓j
                xor     [rcx], rbx
                add     eax, r13d
                lea     rcx, [rcx+8]
                cmp     eax, r11d
                jb      short loc_140A0BE1B
                xor     r15d, r15d
                mov     [rbp+0BE0h+var_A00], rbx
                mov     r8d, r12d
                test    r12d, r12d
                jz      loc_140A0C67C
                mov     edx, r12d
                dec     rdx
                lea     rdx, [rcx+rdx*8]

loc_140A0BE4A:                          ; CODE XREF: sub_1409FA010+11E6C↓j
                xor     [rdx], rbx
                lea     rax, [rbp+0BE0h+var_A00]
                mov     ecx, r8d
                lea     rdx, [rdx-8]
                ror     rbx, cl
                mov     [rbp+0BE0h+var_A00], rbx
                and     ebx, 3Fh
                btc     [rax], rbx
                sub     r8d, r13d
                jz      loc_140A0C67C
                mov     rbx, [rbp+0BE0h+var_A00]
                jmp     short loc_140A0BE4A
; ---------------------------------------------------------------------------

loc_140A0BE7E:                          ; CODE XREF: sub_1409FA010+11ABD↑j
                mov     r9d, r15d
                mov     r8, r11
                cmp     r15d, 8
                jb      short loc_140A0BED8
                mov     r10d, r15d
                mov     r13d, 1
                shr     r10, 3
                mov     r14, 7010008004002001h

loc_140A0BEA1:                          ; CODE XREF: sub_1409FA010+11EC2↓j
                rdtsc
                shl     rdx, 20h
                add     r9d, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                mov     [rbp+0BE0h+var_4A0], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                sub     r10, r13
                jnz     short loc_140A0BEA1
                mov     r14, [rbp+0BE0h+var_C20]

loc_140A0BED8:                          ; CODE XREF: sub_1409FA010+11E78↑j
                test    r9d, r9d
                jz      short loc_140A0BF20
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     ecx, 0FFFFFFFFh
                mov     [rbp+0BE0h+var_498], rdx
                xor     rdx, rax
                mov     eax, 1

loc_140A0BF11:                          ; CODE XREF: sub_1409FA010+11F0E↓j
                mov     [r8], dl
                add     r8, rax
                shr     rdx, 8
                add     r9d, ecx
                jnz     short loc_140A0BF11

loc_140A0BF20:                          ; CODE XREF: sub_1409FA010+11ECB↑j
                mov     r9d, r15d
                sub     ebx, r15d
                add     r9, r11
                mov     r15d, 1
                lea     r8, [r9+0AA0h]
                cmp     ebx, 8
                jb      short loc_140A0BF7E
                mov     r10d, ebx
                mov     r13, 7010008004002001h
                shr     r10, 3

loc_140A0BF4C:                          ; CODE XREF: sub_1409FA010+11F6C↓j
                rdtsc
                shl     rdx, 20h
                add     ebx, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                mov     [rbp+0BE0h+var_490], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                sub     r10, r15
                jnz     short loc_140A0BF4C

loc_140A0BF7E:                          ; CODE XREF: sub_1409FA010+11F29↑j
                test    ebx, ebx
                jz      short loc_140A0BFBF
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     [rbp+0BE0h+var_488], rdx
                xor     rdx, rax
                mov     eax, 0FFFFFFFFh

loc_140A0BFB1:                          ; CODE XREF: sub_1409FA010+11FAD↓j
                mov     [r8], dl
                add     r8, r15
                shr     rdx, 8
                add     ebx, eax
                jnz     short loc_140A0BFB1

loc_140A0BFBF:                          ; CODE XREF: sub_1409FA010+11F70↑j
                test    r12, r12
                jz      short loc_140A0BFC8
                mov     [r12], r11

loc_140A0BFC8:                          ; CODE XREF: sub_1409FA010+11FB2↑j
                xor     r11d, r11d
                test    r9, r9
                jz      loc_140A0BADE
                mov     r10d, 0AA0h
                mov     [r14+8], r9
                mov     [r14+10h], r10d
                mov     r8d, r10d
                mov     r14d, 154h
                mov     rcx, rsi
                mov     rdx, r9

loc_140A0BFF1:                          ; CODE XREF: sub_1409FA010+11FF6↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r14, r15
                jnz     short loc_140A0BFF1
                test    r8d, r8d
                jz      short loc_140A0C028
                mov     r10d, 0FFFFFFFFh

loc_140A0C013:                          ; CODE XREF: sub_1409FA010+12010↓j
                mov     al, [rcx]
                add     rcx, r15
                mov     [rdx], al
                add     rdx, r15
                add     r8d, r10d
                jnz     short loc_140A0C013
                mov     r10d, 0AA0h

loc_140A0C028:                          ; CODE XREF: sub_1409FA010+11FFB↑j
                bts     dword ptr [r9+990h], 13h
                mov     r14, 7010008004002001h
                mov     [r9+7E4h], r10d
                mov     [r9+808h], r10d
                and     dword ptr [r9+990h], 0FFFFFFFDh
                mov     eax, [r9+7E4h]
                mov     [r9+0A2Ch], eax
                add     eax, 0FFFFFF38h
                mov     ecx, [r9+954h]
                mov     [rbp+0BE0h+var_C28], ecx
                mov     ecx, [r9+990h]
                mov     dword ptr [rbp+0BE0h+arg_8], ecx
                mov     rcx, [r9+4E8h]
                shr     eax, 3
                mov     [rbp+0BE0h+var_C30], rcx
                mov     rcx, [r9+5C0h]
                mov     [rbp+0BE0h+var_C40], rcx
                mov     [rbp+0BE0h+var_C38], eax
                mov     [r9+0C4h], eax

loc_140A0C09E:                          ; CODE XREF: sub_1409FA010+120B4↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                mov     rbx, rdx
                mov     [rbp+0BE0h+var_480], rdx
                xor     rbx, rax
                jz      short loc_140A0C09E
                mov     rax, [r9+7B8h]
                lea     r12, [r9+798h]
                mov     r14, [rbp+0BE0h+var_C20]
                lea     rdx, [rbp+0BE0h+var_F0]
                mov     r15d, 20h ; ' '
                mov     [rbp+0BE0h+var_BD0], rax
                mov     eax, [r9+828h]
                mov     r8d, r15d
                mov     [rbp+0BE0h+var_BE8], eax
                mov     rcx, r12
                lea     r11d, [r15-1Ch]
                mov     r10d, r11d
                lea     r13d, [r15-1Fh]

loc_140A0C104:                          ; CODE XREF: sub_1409FA010+12109↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r10, r13
                jnz     short loc_140A0C104
                test    r8d, r8d
                jz      short loc_140A0C138
                mov     r10d, 0FFFFFFFFh

loc_140A0C126:                          ; CODE XREF: sub_1409FA010+12123↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [rdx], al
                add     rdx, r13
                add     r8d, r10d
                jnz     short loc_140A0C126
                xor     r10d, r10d

loc_140A0C138:                          ; CODE XREF: sub_1409FA010+1210E↑j
                mov     [r9+7B8h], r10
                mov     ecx, r15d
                mov     [r9+828h], r10d
                mov     rax, r12
                mov     rdx, r11

loc_140A0C14F:                          ; CODE XREF: sub_1409FA010+1214C↓j
                mov     [rax], r10
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A0C14F
                test    ecx, ecx
                jz      short loc_140A0C171
                mov     edx, 0FFFFFFFFh

loc_140A0C167:                          ; CODE XREF: sub_1409FA010+1215F↓j
                mov     [rax], r10b
                add     rax, r13
                add     ecx, edx
                jnz     short loc_140A0C167

loc_140A0C171:                          ; CODE XREF: sub_1409FA010+12150↑j
                mov     eax, [r9+7E4h]
                mov     r10, r9
                add     [r9+828h], eax
                mov     rax, r9
                mov     r11d, [r9+7E4h]
                mov     r15d, [r9+814h]
                mov     rdx, [r9+818h]
                lea     rcx, [r9+r11]
                cmp     r9, rcx
                jnb     short loc_140A0C1B4
                mov     r8d, 40h ; '@'

loc_140A0C1A9:                          ; CODE XREF: sub_1409FA010+121A2↓j
                prefetchnta byte ptr [rax]
                add     rax, r8
                cmp     rax, rcx
                jb      short loc_140A0C1A9

loc_140A0C1B4:                          ; CODE XREF: sub_1409FA010+12191↑j
                mov     r13d, r11d
                mov     r8, rdx
                shr     r13d, 7
                test    r13d, r13d
                jz      loc_140A0C248
                mov     rdi, rdx
                mov     r12, 7010008004002001h

loc_140A0C1D4:                          ; CODE XREF: sub_1409FA010+12224↓j
                mov     edx, 8
                lea     r14d, [rdx-7]

loc_140A0C1DD:                          ; CODE XREF: sub_1409FA010+121EA↓j
                mov     rax, [r10]
                mov     ecx, r15d
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r14
                jnz     short loc_140A0C1DD
                mov     rcx, r10
                sub     rcx, r9
                xor     rcx, rdi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                mov     [rbp+0BE0h+var_478], rdx
                xor     edx, eax
                xor     r15d, edx
                mov     rax, r14
                and     r15d, 3Fh
                cmovz   r15d, eax
                mov     eax, 0FFFFFFFFh
                add     r13d, eax
                jnz     short loc_140A0C1D4
                mov     r14, [rbp+0BE0h+var_C20]
                lea     r12, [r9+798h]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0C248:                          ; CODE XREF: sub_1409FA010+121B1↑j
                and     r11d, 7Fh
                mov     r13d, 1
                cmp     r11d, 8
                jb      short loc_140A0C275
                mov     edx, r11d
                shr     rdx, 3

loc_140A0C25F:                          ; CODE XREF: sub_1409FA010+12263↓j
                xor     r8, [r10]
                mov     ecx, r15d
                rol     r8, cl
                add     r10, 8
                add     r11d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A0C25F

loc_140A0C275:                          ; CODE XREF: sub_1409FA010+12246↑j
                test    r11d, r11d
                jz      short loc_140A0C299
                mov     r14d, 0FFFFFFFFh

loc_140A0C280:                          ; CODE XREF: sub_1409FA010+12283↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r15d
                xor     r8, rax
                add     r10, r13
                rol     r8, cl
                add     r11d, r14d
                jnz     short loc_140A0C280
                mov     r14, [rbp+0BE0h+var_C20]

loc_140A0C299:                          ; CODE XREF: sub_1409FA010+12268↑j
                mov     rax, [rbp+0BE0h+var_BD0]
                lea     rcx, [rbp+0BE0h+var_F0]
                mov     [r9+7B8h], rax
                mov     edx, 20h ; ' '
                mov     eax, [rbp+0BE0h+var_BE8]
                add     [r9+828h], eax
                lea     r11d, [rdx-1Ch]
                mov     r10d, r11d

loc_140A0C2C1:                          ; CODE XREF: sub_1409FA010+122C6↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [r12], rax
                add     rcx, 8
                add     r12, 8
                sub     r10, r13
                jnz     short loc_140A0C2C1
                test    edx, edx
                jz      short loc_140A0C2F6
                mov     r10d, 0FFFFFFFFh

loc_140A0C2E2:                          ; CODE XREF: sub_1409FA010+122E1↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [r12], al
                add     r12, r13
                add     edx, r10d
                jnz     short loc_140A0C2E2
                xor     r10d, r10d

loc_140A0C2F6:                          ; CODE XREF: sub_1409FA010+122CA↑j
                mov     [r9+7B8h], r8
                test    dword ptr [r9+990h], 40000000h
                jnz     loc_140A0C52C
                mov     rcx, r9
                mov     eax, r10d
                mov     r15d, 19h

loc_140A0C31A:                          ; CODE XREF: sub_1409FA010+12317↓j
                xor     [rcx], rbx
                add     eax, r13d
                lea     rcx, [rcx+8]
                cmp     eax, r15d
                jb      short loc_140A0C31A
                mov     r13d, [rbp+0BE0h+var_C38]
                mov     [rbp+0BE0h+var_A08], rbx
                mov     r8d, r13d
                test    r13d, r13d
                jz      short loc_140A0C37E
                lea     rdx, [r13-1]
                mov     r14d, 1
                lea     rdx, [rcx+rdx*8]

loc_140A0C34A:                          ; CODE XREF: sub_1409FA010+12368↓j
                xor     [rdx], rbx
                lea     rax, [rbp+0BE0h+var_A08]
                mov     ecx, r8d
                lea     rdx, [rdx-8]
                ror     rbx, cl
                mov     [rbp+0BE0h+var_A08], rbx
                and     ebx, 3Fh
                btc     [rax], rbx
                sub     r8d, r14d
                jz      short loc_140A0C37A
                mov     rbx, [rbp+0BE0h+var_A08]
                jmp     short loc_140A0C34A
; ---------------------------------------------------------------------------

loc_140A0C37A:                          ; CODE XREF: sub_1409FA010+1235F↑j
                mov     r14, [rbp+0BE0h+var_C20]

loc_140A0C37E:                          ; CODE XREF: sub_1409FA010+1232A↑j
                mov     eax, dword ptr [rbp+0BE0h+arg_8]
                bt      eax, 13h
                jnb     short loc_140A0C3D5
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_470], rdx
                xor     rcx, rax
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                lea     rax, [rdx+rdx*2]
                cmp     rcx, rax
                jz      short loc_140A0C3DF
                jmp     loc_140A0C526
; ---------------------------------------------------------------------------

loc_140A0C3D5:                          ; CODE XREF: sub_1409FA010+12378↑j
                bt      eax, 8
                jb      loc_140A0C526

loc_140A0C3DF:                          ; CODE XREF: sub_1409FA010+123BE↑j
                mov     r14d, dword ptr [rbp+0BE0h+arg_8]
                mov     eax, 1
                mov     rsi, [rbp+0BE0h+var_C40]
                mov     ecx, r9d
                mov     [rbp+0BE0h+var_B7D], al
                mov     r12d, r15d
                mov     eax, 2
                mov     [rbp+0BE0h+var_B80], r10b
                mov     [rbp+0BE0h+var_B7B], al
                mov     r10, r9
                mov     eax, 0Ch
                ror     r10, cl
                mov     [rbp+0BE0h+var_B7F], al
                xor     ecx, ecx
                mov     eax, 0Fh
                mov     [rbp+0BE0h+var_B7A], r11b
                mov     [rbp+0BE0h+var_B7E], al
                mov     r11, r9
                mov     [rbp+0BE0h+var_B78], 3
                mov     ebx, ecx
                mov     [rbp+0BE0h+var_B77], 5
                lea     r15d, [rax+1]
                mov     [rbp+0BE0h+var_B74], 6
                mov     eax, [rbp+0BE0h+var_C28]
                mov     [rbp+0BE0h+var_BD0], rax
                mov     edi, eax
                mov     [rbp+0BE0h+var_B79], 7
                mov     [rbp+0BE0h+var_B73], 8
                mov     [rbp+0BE0h+var_B76], 9
                mov     [rbp+0BE0h+var_B72], 0Ah
                mov     [rbp+0BE0h+var_B7C], 0Bh
                mov     [rbp+0BE0h+var_B71], 0Dh
                mov     [rbp+0BE0h+var_B75], 0Eh

loc_140A0C45A:                          ; CODE XREF: sub_1409FA010+12500↓j
                test    r15d, r15d
                jz      short loc_140A0C495
                mov     rdx, [r11]
                mov     edi, 0Fh
                mov     r8d, r15d
                lea     r13d, [rdi-0Eh]

loc_140A0C46E:                          ; CODE XREF: sub_1409FA010+1247B↓j
                movzx   eax, byte ptr [r11]
                and     rdx, 0FFFFFFFFFFFFFFF0h
                and     rax, rdi
                movzx   ecx, [rbp+rax+0BE0h+var_B80]
                or      rdx, rcx
                ror     rdx, 4
                mov     [r11], rdx
                sub     r8, r13
                jnz     short loc_140A0C46E
                mov     r13d, [rbp+0BE0h+var_C38]
                mov     rdi, [rbp+0BE0h+var_BD0]

loc_140A0C495:                          ; CODE XREF: sub_1409FA010+1244D↑j
                mov     rdx, [r11]
                mov     eax, ebx
                sub     rdx, rax
                sub     rdx, r9
                bt      r14d, 9
                jb      short loc_140A0C4BB
                xor     rdx, [rbp+0BE0h+var_C30]
                mov     ecx, esi
                bswap   rdx
                xor     rdx, r10
                ror     rdx, cl
                xor     rdx, rsi
                jmp     short loc_140A0C4BE
; ---------------------------------------------------------------------------

loc_140A0C4BB:                          ; CODE XREF: sub_1409FA010+12495↑j
                xor     rdx, r10

loc_140A0C4BE:                          ; CODE XREF: sub_1409FA010+124A9↑j
                mov     [r11], rdx
                mov     ecx, edx
                mov     r8d, edx
                mov     eax, ebx
                xor     r8d, 0EFFh
                mov     edx, 0C8h
                sub     edx, ebx
                not     ecx
                xor     rdx, rax
                add     r11, 8
                ror     rdx, cl
                mov     cl, r8b
                xor     r10, rdx
                rol     r10, cl
                add     r10, r9
                xor     r10, rdi
                inc     ebx
                cmp     ebx, 19h
                jnz     short loc_140A0C50D
                bt      r14d, 13h
                lea     ecx, [rbx-19h]
                mov     eax, ecx
                lea     r15d, [rbx-18h]
                cmovnb  eax, r13d
                add     r12d, eax

loc_140A0C50D:                          ; CODE XREF: sub_1409FA010+124E6↑j
                cmp     ebx, r12d
                jb      loc_140A0C45A
                mov     rsi, [rsp+0CE0h+var_C80]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r14, [rbp+0BE0h+var_C20]

loc_140A0C526:                          ; CODE XREF: sub_1409FA010+123C0↑j
                                        ; sub_1409FA010+123C9↑j
                mov     r13d, 1

loc_140A0C52C:                          ; CODE XREF: sub_1409FA010+122F8↑j
                mov     r15, [r14+8]
                mov     r11d, [r14+10h]
                mov     r10, r15
                add     [rsi+828h], r11d
                mov     rax, r15
                mov     r9d, [rsi+814h]
                mov     r12, [rsi+818h]
                lea     rcx, [r15+r11]
                mov     dword ptr [rbp+0BE0h+arg_8], r11d
                cmp     r15, rcx
                jnb     short loc_140A0C56F
                mov     edx, 40h ; '@'

loc_140A0C564:                          ; CODE XREF: sub_1409FA010+1255D↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A0C564

loc_140A0C56F:                          ; CODE XREF: sub_1409FA010+1254D↑j
                mov     ebx, r11d
                mov     r8, r12
                shr     ebx, 7
                test    ebx, ebx
                jz      short loc_140A0C5ED
                mov     edi, 0FFFFFFFFh
                mov     r11, 7010008004002001h

loc_140A0C58B:                          ; CODE XREF: sub_1409FA010+125C9↓j
                mov     eax, 8

loc_140A0C590:                          ; CODE XREF: sub_1409FA010+12597↓j
                xor     r8, [r10]
                mov     ecx, r9d
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, r13
                jnz     short loc_140A0C590
                mov     rcx, r10
                sub     rcx, r15
                xor     rcx, r12
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                xor     r9d, eax
                mov     [rbp+0BE0h+var_468], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     ebx, edi
                jnz     short loc_140A0C58B
                mov     r11d, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r14, [rbp+0BE0h+var_C20]

loc_140A0C5ED:                          ; CODE XREF: sub_1409FA010+1256A↑j
                and     r11d, 7Fh
                mov     r15d, 1
                cmp     r11d, 8
                jb      short loc_140A0C61A
                mov     eax, r11d
                shr     rax, 3

loc_140A0C604:                          ; CODE XREF: sub_1409FA010+12608↓j
                xor     r8, [r10]
                mov     ecx, r9d
                rol     r8, cl
                add     r10, 8
                add     r11d, 0FFFFFFF8h
                sub     rax, r15
                jnz     short loc_140A0C604

loc_140A0C61A:                          ; CODE XREF: sub_1409FA010+125EB↑j
                test    r11d, r11d
                jz      short loc_140A0C63E
                mov     r14d, 0FFFFFFFFh

loc_140A0C625:                          ; CODE XREF: sub_1409FA010+12628↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r9d
                xor     r8, rax
                add     r10, r15
                rol     r8, cl
                add     r11d, r14d
                jnz     short loc_140A0C625
                mov     r14, [rbp+0BE0h+var_C20]

loc_140A0C63E:                          ; CODE XREF: sub_1409FA010+1260D↑j
                mov     rax, r8
                shr     rax, 1Fh
                xor     r11d, r11d
                jmp     short loc_140A0C651
; ---------------------------------------------------------------------------

loc_140A0C64A:                          ; CODE XREF: sub_1409FA010+12644↓j
                xor     r8d, eax
                shr     rax, 1Fh

loc_140A0C651:                          ; CODE XREF: sub_1409FA010+12638↑j
                test    rax, rax
                jnz     short loc_140A0C64A
                btr     r8d, 1Fh
                mov     [r14+14h], r8d
                jmp     loc_140A0BADE
; ---------------------------------------------------------------------------

loc_140A0C664:                          ; CODE XREF: sub_1409FA010+116FD↑j
                                        ; sub_1409FA010+1170B↑j
                xor     r11d, r11d
                lea     r15d, [r11+1]
                jmp     loc_140A0BADE
; ---------------------------------------------------------------------------

loc_140A0C670:                          ; CODE XREF: sub_1409FA010+11A2B↑j
                xor     r11d, r11d
                lea     r15d, [r11+1]
                jmp     loc_140A0BAE8
; ---------------------------------------------------------------------------

loc_140A0C67C:                          ; CODE XREF: sub_1409FA010+11E2A↑j
                                        ; sub_1409FA010+11E5F↑j
                mov     r13d, [rbp+0BE0h+var_C38]
                bt      r13d, 13h
                jnb     short loc_140A0C6D2
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_450], rdx
                xor     rcx, rax
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                lea     rax, [rdx+rdx*2]
                cmp     rcx, rax
                jz      short loc_140A0C6DD
                jmp     loc_140A0D034
; ---------------------------------------------------------------------------

loc_140A0C6D2:                          ; CODE XREF: sub_1409FA010+12675↑j
                bt      r13d, 8
                jb      loc_140A0D034

loc_140A0C6DD:                          ; CODE XREF: sub_1409FA010+126BB↑j
                mov     rdi, [rbp+0BE0h+var_BD0]
                mov     eax, 1
                mov     [rbp+0BE0h+var_B6D], al
                mov     ecx, esi
                mov     eax, 2
                mov     [rbp+0BE0h+var_B6A], r9b
                mov     [rbp+0BE0h+var_B6B], al
                mov     r9, rsi
                mov     eax, 0Ch
                mov     [rbp+0BE0h+var_B70], r15b
                mov     [rbp+0BE0h+var_B6F], al
                mov     r14d, r11d
                mov     eax, 0Fh
                mov     [rbp+0BE0h+var_B68], 3
                mov     r11d, r15d
                mov     [rbp+0BE0h+var_B67], 5
                mov     r15d, [rbp+0BE0h+var_C28]
                mov     r10, rsi
                mov     [rbp+0BE0h+var_B64], 6
                lea     ebx, [rax+1]
                mov     [rbp+0BE0h+var_B69], 7
                mov     [rbp+0BE0h+var_B63], 8
                mov     [rbp+0BE0h+var_B66], 9
                mov     [rbp+0BE0h+var_B62], 0Ah
                mov     [rbp+0BE0h+var_B6C], 0Bh
                mov     [rbp+0BE0h+var_B61], 0Dh
                mov     [rbp+0BE0h+var_B65], 0Eh
                mov     [rbp+0BE0h+var_B6E], al
                ror     r9, cl

loc_140A0C749:                          ; CODE XREF: sub_1409FA010+127F6↓j
                test    ebx, ebx
                jz      short loc_140A0C787
                mov     rdx, [r10]
                mov     r13d, 1
                mov     r8d, ebx
                lea     r12d, [r13+0Eh]

loc_140A0C75D:                          ; CODE XREF: sub_1409FA010+1276A↓j
                movzx   eax, byte ptr [r10]
                and     rdx, 0FFFFFFFFFFFFFFF0h
                and     rax, r12
                movzx   ecx, [rbp+rax+0BE0h+var_B70]
                or      rdx, rcx
                ror     rdx, 4
                mov     [r10], rdx
                sub     r8, r13
                jnz     short loc_140A0C75D
                mov     r12d, dword ptr [rbp+0BE0h+arg_8]
                mov     r13d, [rbp+0BE0h+var_C38]

loc_140A0C787:                          ; CODE XREF: sub_1409FA010+1273B↑j
                mov     rdx, [r10]
                mov     eax, r11d
                sub     rdx, rax
                sub     rdx, rsi
                bt      r13d, 9
                jb      short loc_140A0C7AE
                xor     rdx, [rbp+0BE0h+var_C30]
                mov     ecx, edi
                bswap   rdx
                xor     rdx, r9
                ror     rdx, cl
                xor     rdx, rdi
                jmp     short loc_140A0C7B1
; ---------------------------------------------------------------------------

loc_140A0C7AE:                          ; CODE XREF: sub_1409FA010+12788↑j
                xor     rdx, r9

loc_140A0C7B1:                          ; CODE XREF: sub_1409FA010+1279C↑j
                mov     [r10], rdx
                mov     ecx, edx
                mov     r8d, edx
                mov     eax, r11d
                xor     r8d, 0EFFh
                mov     edx, 0C8h
                sub     edx, r11d
                not     ecx
                xor     rdx, rax
                add     r10, 8
                ror     rdx, cl
                mov     cl, r8b
                xor     r9, rdx
                rol     r9, cl
                add     r9, rsi
                xor     r9, r15
                inc     r11d
                cmp     r11d, 19h
                jnz     short loc_140A0C803
                bt      r13d, 13h
                lea     eax, [r11-19h]
                lea     ebx, [r11-18h]
                cmovnb  eax, r12d
                add     r14d, eax

loc_140A0C803:                          ; CODE XREF: sub_1409FA010+127DD↑j
                cmp     r11d, r14d
                jb      loc_140A0C749
                jmp     loc_140A0D02D
; ---------------------------------------------------------------------------

loc_140A0C811:                          ; CODE XREF: sub_1409FA010+11B1A↑j
                                        ; sub_1409FA010+11B3C↑j
                mov     r15d, 1
                lea     rbx, [r14+798h]
                mov     [r14+0C4h], r15d
                lea     rdx, [rbp+0BE0h+var_B0]
                mov     r12, [r14+7B8h]
                mov     rsi, r14
                mov     r13d, [r14+828h]
                mov     rcx, rbx
                lea     r11d, [r15+1Fh]
                mov     [rbp+0BE0h+var_BD0], r12
                lea     r10d, [r15+3]
                mov     dword ptr [rbp+0BE0h+arg_8], r13d
                mov     r8d, r11d
                mov     [rsp+0CE0h+var_C70], rbx
                mov     r9d, r10d

loc_140A0C85E:                          ; CODE XREF: sub_1409FA010+12863↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, r15
                jnz     short loc_140A0C85E
                xor     r15d, r15d
                lea     r9d, [r15+1]
                test    r8d, r8d
                jz      short loc_140A0C899
                mov     r15d, 0FFFFFFFFh

loc_140A0C887:                          ; CODE XREF: sub_1409FA010+12884↓j
                mov     al, [rcx]
                add     rcx, r9
                mov     [rdx], al
                add     rdx, r9
                add     r8d, r15d
                jnz     short loc_140A0C887
                xor     r15d, r15d

loc_140A0C899:                          ; CODE XREF: sub_1409FA010+1286F↑j
                mov     [r14+7B8h], r15
                mov     ecx, r11d
                mov     [r14+828h], r15d
                mov     rax, rbx
                mov     rdx, r10

loc_140A0C8B0:                          ; CODE XREF: sub_1409FA010+128AD↓j
                mov     [rax], r15
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r9
                jnz     short loc_140A0C8B0
                test    ecx, ecx
                jz      short loc_140A0C8D2
                mov     edx, 0FFFFFFFFh

loc_140A0C8C8:                          ; CODE XREF: sub_1409FA010+128C0↓j
                mov     [rax], r15b
                add     rax, r9
                add     ecx, edx
                jnz     short loc_140A0C8C8

loc_140A0C8D2:                          ; CODE XREF: sub_1409FA010+128B1↑j
                mov     eax, [r14+7E4h]
                mov     r10, r14
                add     [r14+828h], eax
                mov     rax, r14
                mov     r11d, [r14+7E4h]
                mov     r9d, [r14+814h]
                mov     r15, [r14+818h]
                lea     rcx, [r14+r11]
                cmp     r14, rcx
                jnb     short loc_140A0C914
                mov     edx, 40h ; '@'

loc_140A0C909:                          ; CODE XREF: sub_1409FA010+12902↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A0C909

loc_140A0C914:                          ; CODE XREF: sub_1409FA010+128F2↑j
                mov     r14d, r11d
                mov     r8, r15
                shr     r14d, 7
                test    r14d, r14d
                jz      loc_140A0C9AC
                mov     rdi, [rbp+0BE0h+arg_0]
                mov     rbx, 7010008004002001h
                mov     r12d, 1
                mov     r13d, 0FFFFFFFFh

loc_140A0C944:                          ; CODE XREF: sub_1409FA010+12983↓j
                mov     eax, 8

loc_140A0C949:                          ; CODE XREF: sub_1409FA010+12950↓j
                xor     r8, [r10]
                mov     ecx, r9d
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, r12
                jnz     short loc_140A0C949
                mov     rcx, r10
                sub     rcx, rdi
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                xor     r9d, eax
                mov     [rbp+0BE0h+var_328], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r12d
                add     r14d, r13d
                jnz     short loc_140A0C944
                mov     rbx, [rsp+0CE0h+var_C70]
                mov     rdi, 0FFFFFFFFB8797400h
                mov     r12, [rbp+0BE0h+var_BD0]
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]

loc_140A0C9AC:                          ; CODE XREF: sub_1409FA010+12911↑j
                and     r11d, 7Fh
                mov     r15d, 1
                cmp     r11d, 8
                jb      short loc_140A0C9D9
                mov     eax, r11d
                shr     rax, 3

loc_140A0C9C3:                          ; CODE XREF: sub_1409FA010+129C7↓j
                xor     r8, [r10]
                mov     ecx, r9d
                rol     r8, cl
                add     r10, 8
                add     r11d, 0FFFFFFF8h
                sub     rax, r15
                jnz     short loc_140A0C9C3

loc_140A0C9D9:                          ; CODE XREF: sub_1409FA010+129AA↑j
                mov     r14d, 0FFFFFFFFh
                test    r11d, r11d
                jz      short loc_140A0C9F9

loc_140A0C9E4:                          ; CODE XREF: sub_1409FA010+129E7↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, r9d
                xor     r8, rax
                add     r10, r15
                rol     r8, cl
                add     r11d, r14d
                jnz     short loc_140A0C9E4

loc_140A0C9F9:                          ; CODE XREF: sub_1409FA010+129D2↑j
                mov     r9, [rbp+0BE0h+arg_0]
                lea     rcx, [rbp+0BE0h+var_B0]
                mov     edx, 4
                mov     [r9+7B8h], r12
                add     [r9+828h], r13d
                lea     r10d, [rdx+1Ch]

loc_140A0CA1E:                          ; CODE XREF: sub_1409FA010+12A23↓j
                mov     rax, [rcx]
                add     r10d, 0FFFFFFF8h
                mov     [rbx], rax
                add     rcx, 8
                add     rbx, 8
                sub     rdx, r15
                jnz     short loc_140A0CA1E
                xor     r11d, r11d
                test    r10d, r10d
                jz      short loc_140A0CA4C

loc_140A0CA3D:                          ; CODE XREF: sub_1409FA010+12A3A↓j
                mov     al, [rcx]
                add     rcx, r15
                mov     [rbx], al
                add     rbx, r15
                add     r10d, r14d
                jnz     short loc_140A0CA3D

loc_140A0CA4C:                          ; CODE XREF: sub_1409FA010+12A2B↑j
                mov     [r9+7B8h], r8

loc_140A0CA53:                          ; CODE XREF: sub_1409FA010+11AF3↑j
                mov     r14d, [rsi+990h]
                mov     r12, r11
                mov     [rsp+0CE0h+var_C70], r11
                bt      r14d, 1Eh
                jb      loc_140A0D0EC
                bt      r14d, 8
                jb      loc_140A0D0D6
                mov     eax, [rsi+954h]
                mov     ecx, 1
                mov     r15, [rsi+5C0h]
                mov     r9, rsi
                mov     r13, [rsi+4E8h]
                mov     r10, rsi
                mov     [rbp+0BE0h+var_B8D], cl
                mov     ecx, 2
                mov     [rbp+0BE0h+var_B8B], cl
                mov     ecx, 0Ch
                mov     [rbp+0BE0h+var_B8F], cl
                mov     [rbp+0BE0h+var_B90], r11b
                mov     [rbp+0BE0h+var_B88], 3
                lea     r12d, [rcx+3]
                mov     [rbp+0BE0h+var_B8A], 4
                mov     ecx, esi
                mov     [rbp+0BE0h+var_B87], 5
                ror     r9, cl
                lea     ebx, [r12+1]
                xor     edi, edi
                mov     [rbp+0BE0h+var_B84], 6
                mov     [rbp+0BE0h+var_B89], 7
                mov     [rbp+0BE0h+var_B83], 8
                mov     [rbp+0BE0h+var_B86], 9
                mov     [rbp+0BE0h+var_B82], 0Ah
                mov     [rbp+0BE0h+var_B8C], 0Bh
                mov     [rbp+0BE0h+var_B81], 0Dh
                mov     [rbp+0BE0h+var_B85], 0Eh
                mov     [rbp+0BE0h+var_B8E], r12b
                mov     [rbp+0BE0h+arg_8], rax

loc_140A0CAF5:                          ; CODE XREF: sub_1409FA010+130B4↓j
                test    ebx, ebx
                jz      short loc_140A0CB25
                mov     rdx, [r10]
                mov     edi, 1
                mov     r8d, ebx

loc_140A0CB04:                          ; CODE XREF: sub_1409FA010+12B11↓j
                movzx   eax, byte ptr [r10]
                and     rdx, 0FFFFFFFFFFFFFFF0h
                and     rax, r12
                movzx   ecx, [rbp+rax+0BE0h+var_B90]
                or      rdx, rcx
                ror     rdx, 4
                mov     [r10], rdx
                sub     r8, rdi
                jnz     short loc_140A0CB04
                xor     edi, edi

loc_140A0CB25:                          ; CODE XREF: sub_1409FA010+12AE7↑j
                mov     rcx, [r10]
                mov     eax, r11d
                sub     rcx, rax
                sub     rcx, rsi
                bt      r14d, 9
                jb      loc_140A0D074
                mov     rax, r13
                xor     rax, rcx
                mov     ecx, r15d
                bswap   rax
                xor     rax, r9
                ror     rax, cl
                xor     rax, r15
                jmp     loc_140A0D07A
; ---------------------------------------------------------------------------

loc_140A0CB56:                          ; CODE XREF: sub_1409FA010+11B03↑j
                mov     ecx, [rsi+954h]
                mov     r12d, [rsi+0A2Ch]
                mov     rax, [rsi+7C8h]
                add     r12d, 0FFFFFF38h
                mov     [rbp+0BE0h+var_C28], ecx
                mov     rcx, [rsi+4E8h]
                shr     r12d, 3
                mov     [rsp+0CE0h+var_C88], rcx
                mov     rcx, [rsi+5C0h]
                mov     [rbp+0BE0h+var_C30], rcx
                mov     [rbp+0BE0h+var_C40], rax
                mov     [rbp+0BE0h+var_C38], r12d
                mov     [rsi+0C4h], r12d

loc_140A0CB9E:                          ; CODE XREF: sub_1409FA010+12BB4↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     rbx, rdx
                mov     [rbp+0BE0h+var_440], rdx
                xor     rbx, rax
                jz      short loc_140A0CB9E
                mov     rax, [rsi+7B8h]
                lea     r14, [rsi+798h]
                mov     r11d, 20h ; ' '
                mov     [rbp+0BE0h+var_BD0], rax
                mov     eax, [rsi+828h]
                lea     rdx, [rbp+0BE0h+var_90]
                mov     [rbp+0BE0h+var_BE8], eax
                mov     r8d, r11d
                mov     rcx, r14
                lea     r10d, [r11-1Ch]
                mov     r9d, r10d

loc_140A0CBFB:                          ; CODE XREF: sub_1409FA010+12C00↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, r15
                jnz     short loc_140A0CBFB
                test    r8d, r8d
                jz      short loc_140A0CC2F
                mov     r9d, 0FFFFFFFFh

loc_140A0CC1D:                          ; CODE XREF: sub_1409FA010+12C1A↓j
                mov     al, [rcx]
                add     rcx, r15
                mov     [rdx], al
                add     rdx, r15
                add     r8d, r9d
                jnz     short loc_140A0CC1D
                xor     r9d, r9d

loc_140A0CC2F:                          ; CODE XREF: sub_1409FA010+12C05↑j
                mov     [rsi+7B8h], r9
                mov     ecx, r11d
                mov     [rsi+828h], r9d
                mov     rax, r14
                mov     rdx, r10

loc_140A0CC46:                          ; CODE XREF: sub_1409FA010+12C43↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r15
                jnz     short loc_140A0CC46
                test    ecx, ecx
                jz      short loc_140A0CC68
                mov     edx, 0FFFFFFFFh

loc_140A0CC5E:                          ; CODE XREF: sub_1409FA010+12C56↓j
                mov     [rax], r9b
                add     rax, r15
                add     ecx, edx
                jnz     short loc_140A0CC5E

loc_140A0CC68:                          ; CODE XREF: sub_1409FA010+12C47↑j
                mov     eax, [rsi+7E4h]
                mov     r9, rsi
                add     [rsi+828h], eax
                mov     r11d, [rsi+7E4h]
                mov     r10d, [rsi+814h]
                mov     r8, [rsi+818h]
                lea     rcx, [rsi+r11]
                cmp     rsi, rcx
                jnb     short loc_140A0CCA8
                mov     rax, rsi
                mov     edx, 40h ; '@'

loc_140A0CC9D:                          ; CODE XREF: sub_1409FA010+12C96↓j
                prefetchnta byte ptr [rax]
                add     rax, rdx
                cmp     rax, rcx
                jb      short loc_140A0CC9D

loc_140A0CCA8:                          ; CODE XREF: sub_1409FA010+12C83↑j
                mov     r15d, r11d
                shr     r15d, 7
                test    r15d, r15d
                jz      loc_140A0CD3B
                mov     rdi, r8
                mov     r13d, 1
                mov     r12d, 0FFFFFFFFh
                mov     r14, 7010008004002001h

loc_140A0CCD1:                          ; CODE XREF: sub_1409FA010+12D10↓j
                mov     eax, 8

loc_140A0CCD6:                          ; CODE XREF: sub_1409FA010+12CDD↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                xor     r8, [r9+8]
                add     r9, 10h
                rol     r8, cl
                sub     rax, r13
                jnz     short loc_140A0CCD6
                mov     rcx, r9
                sub     rcx, rsi
                xor     rcx, rdi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     r10d, eax
                mov     [rbp+0BE0h+var_438], rdx
                xor     r10d, edx
                and     r10d, 3Fh
                cmovz   r10d, r13d
                add     r15d, r12d
                jnz     short loc_140A0CCD1
                mov     r12d, [rbp+0BE0h+var_C38]
                lea     r14, [rsi+798h]
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0CD3B:                          ; CODE XREF: sub_1409FA010+12CA2↑j
                and     r11d, 7Fh
                mov     r15d, 1
                cmp     r11d, 8
                jb      short loc_140A0CD68
                mov     eax, r11d
                shr     rax, 3

loc_140A0CD52:                          ; CODE XREF: sub_1409FA010+12D56↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     r11d, 0FFFFFFF8h
                sub     rax, r15
                jnz     short loc_140A0CD52

loc_140A0CD68:                          ; CODE XREF: sub_1409FA010+12D39↑j
                test    r11d, r11d
                jz      short loc_140A0CD8F
                mov     r13d, 0FFFFFFFFh

loc_140A0CD73:                          ; CODE XREF: sub_1409FA010+12D76↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r15
                rol     r8, cl
                add     r11d, r13d
                jnz     short loc_140A0CD73
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]

loc_140A0CD8F:                          ; CODE XREF: sub_1409FA010+12D5B↑j
                mov     rax, [rbp+0BE0h+var_BD0]
                lea     rcx, [rbp+0BE0h+var_90]
                mov     r9d, 4
                mov     [rsi+7B8h], rax
                mov     eax, [rbp+0BE0h+var_BE8]
                mov     edx, r9d
                add     [rsi+828h], eax
                lea     r10d, [r9+1Ch]

loc_140A0CDB7:                          ; CODE XREF: sub_1409FA010+12DBC↓j
                mov     rax, [rcx]
                add     r10d, 0FFFFFFF8h
                mov     [r14], rax
                add     rcx, 8
                add     r14, 8
                sub     rdx, r15
                jnz     short loc_140A0CDB7
                xor     r11d, r11d
                test    r10d, r10d
                jz      short loc_140A0CDEF
                mov     r11d, 0FFFFFFFFh

loc_140A0CDDC:                          ; CODE XREF: sub_1409FA010+12DDA↓j
                mov     al, [rcx]
                add     rcx, r15
                mov     [r14], al
                add     r14, r15
                add     r10d, r11d
                jnz     short loc_140A0CDDC
                xor     r11d, r11d

loc_140A0CDEF:                          ; CODE XREF: sub_1409FA010+12DC4↑j
                mov     [rsi+7B8h], r8
                test    dword ptr [rsi+990h], 40000000h
                jnz     loc_140A0D037
                mov     eax, r11d
                mov     rcx, rsi
                mov     r11d, 19h

loc_140A0CE12:                          ; CODE XREF: sub_1409FA010+12E0F↓j
                xor     [rcx], rbx
                add     eax, r15d
                lea     rcx, [rcx+8]
                cmp     eax, r11d
                jb      short loc_140A0CE12
                xor     r15d, r15d
                mov     [rbp+0BE0h+var_9F8], rbx
                mov     r8d, r12d
                lea     r10d, [r15+1]
                test    r12d, r12d
                jz      short loc_140A0CE71
                mov     edx, r12d
                dec     rdx
                lea     rdx, [rcx+rdx*8]

loc_140A0CE41:                          ; CODE XREF: sub_1409FA010+12E5F↓j
                xor     [rdx], rbx
                lea     rax, [rbp+0BE0h+var_9F8]
                mov     ecx, r8d
                lea     rdx, [rdx-8]
                ror     rbx, cl
                mov     [rbp+0BE0h+var_9F8], rbx
                and     ebx, 3Fh
                btc     [rax], rbx
                sub     r8d, r10d
                jz      short loc_140A0CE71
                mov     rbx, [rbp+0BE0h+var_9F8]
                jmp     short loc_140A0CE41
; ---------------------------------------------------------------------------

loc_140A0CE71:                          ; CODE XREF: sub_1409FA010+12E25↑j
                                        ; sub_1409FA010+12E56↑j
                bt      r13d, 13h
                jnb     short loc_140A0CEC3
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_430], rdx
                xor     rcx, rax
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                lea     rax, [rdx+rdx*2]
                cmp     rcx, rax
                jz      short loc_140A0CECE
                jmp     loc_140A0D034
; ---------------------------------------------------------------------------

loc_140A0CEC3:                          ; CODE XREF: sub_1409FA010+12E66↑j
                bt      r13d, 8
                jb      loc_140A0D034

loc_140A0CECE:                          ; CODE XREF: sub_1409FA010+12EAC↑j
                mov     rdi, [rbp+0BE0h+var_C30]
                mov     eax, 2
                mov     [rbp+0BE0h+var_B5B], al
                mov     ecx, esi
                mov     eax, 0Ch
                mov     [rbp+0BE0h+var_B5A], r9b
                mov     [rbp+0BE0h+var_B5F], al
                mov     r9, rsi
                mov     eax, 0Fh
                mov     [rbp+0BE0h+var_B60], r15b
                mov     r14d, r11d
                mov     [rbp+0BE0h+var_B5D], r10b
                mov     r11d, r15d
                mov     [rbp+0BE0h+var_B58], 3
                mov     r15d, [rbp+0BE0h+var_C28]
                mov     r10, rsi
                lea     ebx, [rax+1]
                mov     [rbp+0BE0h+var_B57], 5
                mov     [rbp+0BE0h+var_B54], 6
                mov     [rbp+0BE0h+var_B59], 7
                mov     [rbp+0BE0h+var_B53], 8
                mov     [rbp+0BE0h+var_B56], 9
                mov     [rbp+0BE0h+var_B52], 0Ah
                mov     [rbp+0BE0h+var_B5C], 0Bh
                mov     [rbp+0BE0h+var_B51], 0Dh
                mov     [rbp+0BE0h+var_B55], 0Eh
                mov     [rbp+0BE0h+var_B5E], al
                ror     r9, cl

loc_140A0CF66:                          ; CODE XREF: sub_1409FA010+13017↓j
                test    ebx, ebx
                jz      short loc_140A0CFA7
                mov     rdx, [r10]
                mov     r13d, 1
                mov     r8d, ebx
                lea     r12d, [r13+0Eh]

loc_140A0CF7A:                          ; CODE XREF: sub_1409FA010+12F8A↓j
                movzx   eax, byte ptr [r10]
                and     rdx, 0FFFFFFFFFFFFFFF0h
                and     rax, r12
                movzx   ecx, [rbp+rax+0BE0h+var_B60]
                or      rdx, rcx
                ror     rdx, 4
                mov     [r10], rdx
                sub     r8, r13
                jnz     short loc_140A0CF7A
                mov     r12d, [rbp+0BE0h+var_C38]
                mov     r13d, dword ptr [rbp+0BE0h+arg_8]

loc_140A0CFA7:                          ; CODE XREF: sub_1409FA010+12F58↑j
                mov     rdx, [r10]
                mov     eax, r11d
                sub     rdx, rax
                sub     rdx, rsi
                bt      r13d, 9
                jb      short loc_140A0CFCF
                xor     rdx, [rsp+0CE0h+var_C88]
                mov     ecx, edi
                bswap   rdx
                xor     rdx, r9
                ror     rdx, cl
                xor     rdx, rdi
                jmp     short loc_140A0CFD2
; ---------------------------------------------------------------------------

loc_140A0CFCF:                          ; CODE XREF: sub_1409FA010+12FA8↑j
                xor     rdx, r9

loc_140A0CFD2:                          ; CODE XREF: sub_1409FA010+12FBD↑j
                mov     [r10], rdx
                mov     ecx, edx
                mov     r8d, edx
                mov     eax, r11d
                xor     r8d, 0EFFh
                mov     edx, 0C8h
                sub     edx, r11d
                not     ecx
                xor     rdx, rax
                add     r10, 8
                ror     rdx, cl
                mov     cl, r8b
                xor     r9, rdx
                rol     r9, cl
                add     r9, rsi
                xor     r9, r15
                inc     r11d
                cmp     r11d, 19h
                jnz     short loc_140A0D024
                bt      r13d, 13h
                lea     eax, [r11-19h]
                lea     ebx, [r11-18h]
                cmovnb  eax, r12d
                add     r14d, eax

loc_140A0D024:                          ; CODE XREF: sub_1409FA010+12FFE↑j
                cmp     r11d, r14d
                jb      loc_140A0CF66

loc_140A0D02D:                          ; CODE XREF: sub_1409FA010+127FC↑j
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0D034:                          ; CODE XREF: sub_1409FA010+126BD↑j
                                        ; sub_1409FA010+126C7↑j ...
                xor     r11d, r11d

loc_140A0D037:                          ; CODE XREF: sub_1409FA010+11DF9↑j
                                        ; sub_1409FA010+12DF0↑j
                rdtsc
                shl     rdx, 20h
                mov     r9, 7010008004002001h
                or      rax, rdx
                mov     ebx, 1
                mov     rcx, rax
                mov     [rbp+0BE0h+var_C38], ebx
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     r12, rax
                mov     [rbp+0BE0h+var_428], rdx
                xor     r12, rdx
                jmp     loc_140A0D0FB
; ---------------------------------------------------------------------------

loc_140A0D074:                          ; CODE XREF: sub_1409FA010+12B26↑j
                mov     rax, r9
                xor     rax, rcx

loc_140A0D07A:                          ; CODE XREF: sub_1409FA010+12B41↑j
                mov     [r10], rax
                mov     ecx, eax
                mov     r8d, eax
                not     ecx
                mov     eax, r11d
                xor     r8d, 0EFFh
                mov     edx, 0C8h
                add     r10, 8
                sub     edx, r11d
                xor     rdx, rax
                mov     eax, 19h
                ror     rdx, cl
                mov     cl, r8b
                xor     r9, rdx
                rol     r9, cl
                add     r9, rsi
                lea     ecx, [rax-18h]
                xor     r9, [rbp+0BE0h+arg_8]
                inc     r11d
                cmp     r11d, eax
                cmovz   ebx, ecx
                jb      loc_140A0CAF5
                mov     r12, [rsp+0CE0h+var_C70]
                mov     rdi, 0FFFFFFFFB8797400h

loc_140A0D0D6:                          ; CODE XREF: sub_1409FA010+12A62↑j
                mov     rax, [rsi+268h]
                lea     rcx, [rsi+800h]
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d

loc_140A0D0EC:                          ; CODE XREF: sub_1409FA010+12A57↑j
                mov     r9, 7010008004002001h
                mov     ebx, 1

loc_140A0D0FB:                          ; CODE XREF: sub_1409FA010+1305F↑j
                mov     r13, [rbp+0BE0h+arg_0]
                test    dword ptr [r13+990h], 10000000h
                mov     r15, [r13+7D8h]
                jz      short loc_140A0D14B
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     r15, rdx
                mov     [rbp+0BE0h+var_420], rdx
                xor     r15, rax
                and     r15, 0Fh
                shl     r15, 4
                add     r15, [r13+5D0h]

loc_140A0D14B:                          ; CODE XREF: sub_1409FA010+13104↑j
                mov     r8d, 28h ; '('
                lea     r14, [r13+8F8h]
                mov     rcx, r14
                lea     rdx, [rbp+0BE0h+var_730]
                lea     r9d, [r8-23h]

loc_140A0D166:                          ; CODE XREF: sub_1409FA010+1316B↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, rbx
                jnz     short loc_140A0D166
                test    r8d, r8d
                jz      short loc_140A0D19A
                mov     r11d, 0FFFFFFFFh

loc_140A0D188:                          ; CODE XREF: sub_1409FA010+13185↓j
                mov     al, [rcx]
                add     rcx, rbx
                mov     [rdx], al
                add     rdx, rbx
                add     r8d, r11d
                jnz     short loc_140A0D188
                xor     r11d, r11d

loc_140A0D19A:                          ; CODE XREF: sub_1409FA010+13170↑j
                mov     eax, [r13+990h]
                mov     ecx, 8000h
                test    ecx, eax
                jnz     short loc_140A0D1B3
                cmp     [r14], r11d
                jnz     loc_140A0D817

loc_140A0D1B3:                          ; CODE XREF: sub_1409FA010+13198↑j
                bt      eax, 1Eh
                jb      loc_140A0DA08
                mov     al, [r13+920h]
                mov     r8, r12
                sub     al, bl
                xor     r8, rsi
                movzx   r10d, al
                mov     r11d, 3Fh ; '?'
                sub     r11d, r10d
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     [rbp+0BE0h+var_418], rdx
                xor     rax, rdx
                xor     edx, edx
                div     r11
                lea     r9d, [r10+rdx]

loc_140A0D20F:                          ; CODE XREF: sub_1409FA010+1322D↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                xor     rax, rdx
                mov     [rbp+0BE0h+var_410], rdx
                xor     edx, edx
                div     r11
                add     edx, r10d
                cmp     edx, r9d
                jz      short loc_140A0D20F
                mov     rbx, [r13+790h]
                xor     r11d, r11d
                mov     rsi, [r13+788h]
                mov     eax, r9d
                bts     r8, rax
                mov     eax, edx
                btr     r8, rax
                cmp     dword ptr [r13+924h], 3
                jnz     loc_140A0D3FD
                mov     r13, [rbp+0BE0h+var_C40]
                test    r13, r13
                jz      loc_140A0D3F6
                mov     rcx, [rbp+0BE0h+arg_0]
                lea     edx, [r11+1]
                mov     rax, [rcx+370h]
                mov     byte ptr [rbx], 13h
                mov     [rbx+1], dl
                mov     [rbx+2], r11w
                mov     [rbx+18h], rax
                mov     [rbx+20h], r13
                mov     [rbx+38h], r11
                mov     [rbx+10h], r11
                mov     [rbx+28h], r8
                mov     rax, [rcx+360h]
                mov     rcx, [r13+8]
                mov     r8, [r13+0]
                mov     edx, [r13+10h]
                call    j__guard_dispatch_icall_nop
                mov     r9, [r13+0]
                mov     rcx, r13
                rol     rcx, 11h
                mov     rax, 7010008004002001h
                xor     rcx, r13
                mov     r10d, 4
                mul     rcx
                mov     [rbp+0BE0h+var_408], rdx
                xor     rdx, rax
                lea     rax, [r13+18h]
                mov     r8, rdx
                xor     r11d, r11d
                lea     r13d, [r10-3]

loc_140A0D2FA:                          ; CODE XREF: sub_1409FA010+132FA↓j
                xor     [rax], r8
                mov     ecx, r10d
                rol     r8, cl
                lea     rax, [rax-8]
                sub     r10d, r13d
                jnz     short loc_140A0D2FA
                and     dl, 0Fh
                cmp     dl, 7
                jnb     short loc_140A0D381
                mov     rcx, r9
                mov     rax, 7010008004002001h
                rol     rcx, 11h
                mov     r10d, 6
                xor     rcx, r9
                mul     rcx
                mov     [rbp+0BE0h+var_400], rdx
                xor     rdx, rax
                add     r8, rdx
                lea     rax, [r9+28h]
                movsx   edx, word ptr [r9+8]

loc_140A0D347:                          ; CODE XREF: sub_1409FA010+13347↓j
                xor     [rax], r8
                mov     ecx, r10d
                rol     r8, cl
                lea     rax, [rax-8]
                sub     r10d, r13d
                jnz     short loc_140A0D347
                sub     rdx, 30h ; '0'
                shr     rdx, 3
                test    edx, edx
                jz      short loc_140A0D381
                movsxd  r10, edx
                add     r10, 5
                lea     r10, [r9+r10*8]

loc_140A0D370:                          ; CODE XREF: sub_1409FA010+1336F↓j
                xor     [r10], r8
                mov     ecx, edx
                rol     r8, cl
                lea     r10, [r10-8]
                sub     edx, r13d
                jnz     short loc_140A0D370

loc_140A0D381:                          ; CODE XREF: sub_1409FA010+13302↑j
                                        ; sub_1409FA010+13353↑j
                mov     r13, [rbp+0BE0h+arg_0]

loc_140A0D388:                          ; CODE XREF: sub_1409FA010+1340D↓j
                mov     [rbx+40h], r12
                mov     r12, 7010008004002001h
                test    dword ptr [r13+990h], 100h
                jz      short loc_140A0D422
                lea     r9, [r15-48h]
                mov     [r9+40h], rbx
                rdtsc
                shl     rdx, 20h
                mov     r8d, 19h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                lea     r15d, [r8-18h]
                mov     [rbp+0BE0h+var_3F8], rdx
                xor     rdx, rax
                lea     rax, [r9+48h]

loc_140A0D3DC:                          ; CODE XREF: sub_1409FA010+133D6↓j
                xor     [rax], rdx
                lea     rax, [rax+8]
                sub     r8, r15
                jnz     short loc_140A0D3DC
                mov     dword ptr [r9+48h], 48513148h
                mov     [r9+20h], rdx
                jmp     short loc_140A0D42B
; ---------------------------------------------------------------------------

loc_140A0D3F6:                          ; CODE XREF: sub_1409FA010+13262↑j
                mov     r13, [rbp+0BE0h+arg_0]

loc_140A0D3FD:                          ; CODE XREF: sub_1409FA010+13255↑j
                mov     byte ptr [rbx], 13h
                mov     eax, 1
                mov     [rbx+1], al
                mov     [rbx+2], r11w
                mov     [rbx+18h], r15
                mov     [rbx+20h], r8
                mov     [rbx+38h], r11
                mov     [rbx+10h], r11
                jmp     loc_140A0D388
; ---------------------------------------------------------------------------

loc_140A0D422:                          ; CODE XREF: sub_1409FA010+13391↑j
                mov     r9, rbx
                mov     r15d, 1

loc_140A0D42B:                          ; CODE XREF: sub_1409FA010+133E4↑j
                mov     r10, [r13+0A98h]
                test    r10, r10
                jz      loc_140A0D4CA
                mov     r10, [r10+20h]
                mov     eax, 0E0E20100h
                mov     rcx, r10
                xor     rcx, rax
                shr     rcx, 4
                xor     rcx, r10
                shr     rcx, 4
                xor     rcx, [r13+590h]
                mov     al, cl
                mov     r8, rcx
                and     al, 0Fh
                movzx   r11d, al
                cmovz   r11d, r15d
                xor     eax, eax
                mov     edx, eax
                test    r11b, r11b
                jz      short loc_140A0D4AB
                lea     r12d, [rax+0Fh]

loc_140A0D478:                          ; CODE XREF: sub_1409FA010+1348F↓j
                mov     rdx, rcx
                and     rdx, r12
                add     rdx, r10
                mov     r10, [rdx]
                mov     rax, r10
                xor     rax, 1DFE00h
                shr     rax, 4
                xor     rax, r10
                shr     rax, 4
                xor     rcx, rax
                add     r11b, 0FFh
                jnz     short loc_140A0D478
                mov     r12, 7010008004002001h

loc_140A0D4AB:                          ; CODE XREF: sub_1409FA010+13462↑j
                mov     rax, r8
                xor     r11d, r11d
                xor     r8, r9
                and     eax, 1000h
                test    rax, rax
                cmovz   r8, r9
                mov     [rdx], r8
                mov     r9, [r13+0A98h]

loc_140A0D4CA:                          ; CODE XREF: sub_1409FA010+13425↑j
                lock or [rsp+0CE0h+var_CE0], r11d
                mov     ecx, [r13+838h]
                test    ecx, ecx
                jz      loc_140A0D767
                sub     ecx, 1
                jz      loc_140A0D750
                sub     ecx, 1
                jz      loc_140A0D73D
                sub     ecx, 1
                jz      loc_140A0D681
                cmp     ecx, 1
                jz      loc_140A0D583
                mov     r8, [r13+998h]
                mov     [r8+48h], r9
                lock or [rsp+0CE0h+var_CE0], r11d
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mul     rdx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_3F0], rdx
                xor     rcx, rax
                mov     rax, 0ABCC77118461CEFDh
                mul     rcx
                shr     rdx, 1Ah
                imul    rax, rdx, 5F5E100h
                sub     rcx, rax
                mov     rax, 0D6BF94D5E57A42BDh
                add     rcx, 47868C00h
                imul    rcx
                add     rdx, rcx
                sar     rdx, 17h
                mov     rax, rdx
                shr     rax, 3Fh
                add     rdx, rax
                mov     [r8], edx
                jmp     loc_140A0D812
; ---------------------------------------------------------------------------

loc_140A0D583:                          ; CODE XREF: sub_1409FA010+134EC↑j
                mov     r8, [r13+9E0h]
                xor     r9d, r9d
                mov     rcx, [r13+9F0h]
                mov     rdx, rbx
                mov     rax, [r13+9E8h]
                mov     rdi, [r13+998h]
                mov     byte ptr [r8], 12h
                mov     byte ptr [r8+2], 58h ; 'X'
                mov     [r8+50h], r11b
                mov     [r8+8], rdi
                mov     [r8+20h], rax
                mov     [r8+28h], r11
                mov     [r8+30h], rcx
                mov     [r8+51h], r11b
                mov     [r8+38h], r11
                mov     [r8+52h], r11b
                xor     r8d, r8d
                mov     rax, [r13+2C0h]
                mov     rcx, [r13+9E0h]
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                test    al, al
                jnz     loc_140A0D812
                cmp     [r14], r11d
                jnz     short loc_140A0D631
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r13
                mov     rcx, r13
                mov     [r13+900h], rax
                mov     [r13+908h], r11
                mov     qword ptr [r13+910h], 104h
                mov     [r13+918h], rdi
                mov     [r14], r15d
                call    sub_140A113CC
                xor     r11d, r11d

loc_140A0D631:                          ; CODE XREF: sub_1409FA010+135E2↑j
                mov     edx, 28h ; '('
                lea     rcx, [rbp+0BE0h+var_730]
                lea     r13d, [rdx-23h]

loc_140A0D641:                          ; CODE XREF: sub_1409FA010+13645↓j
                mov     rax, [r14]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r14, 8
                add     rcx, 8
                sub     r13, r15
                jnz     short loc_140A0D641
                mov     r13, [rbp+0BE0h+arg_0]
                test    edx, edx
                jz      loc_140A0D812
                mov     r11d, 0FFFFFFFFh

loc_140A0D66C:                          ; CODE XREF: sub_1409FA010+1366A↓j
                mov     al, [r14]
                add     r14, r15
                mov     [rcx], al
                add     rcx, r15
                add     edx, r11d
                jnz     short loc_140A0D66C
                jmp     loc_140A0D80F
; ---------------------------------------------------------------------------

loc_140A0D681:                          ; CODE XREF: sub_1409FA010+134E3↑j
                mov     rdi, [r13+998h]
                mov     rax, [r13+698h]
                mov     rcx, [rdi+rax]
                test    rcx, rcx
                jz      loc_140A0D728
                cmp     [r14], r11d
                jnz     short loc_140A0D6DE
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r13
                mov     [r13+900h], rax
                mov     [r13+908h], r11
                mov     qword ptr [r13+910h], 104h
                mov     [r13+918h], rcx
                mov     rcx, r13
                mov     [r14], r15d
                call    sub_140A113CC
                xor     r11d, r11d

loc_140A0D6DE:                          ; CODE XREF: sub_1409FA010+1368F↑j
                mov     edx, 28h ; '('
                lea     rcx, [rbp+0BE0h+var_730]
                lea     r13d, [rdx-23h]

loc_140A0D6EE:                          ; CODE XREF: sub_1409FA010+136F2↓j
                mov     rax, [r14]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r14, 8
                add     rcx, 8
                sub     r13, r15
                jnz     short loc_140A0D6EE
                mov     r13, [rbp+0BE0h+arg_0]
                test    edx, edx
                jz      short loc_140A0D728
                mov     r11d, 0FFFFFFFFh

loc_140A0D715:                          ; CODE XREF: sub_1409FA010+13713↓j
                mov     al, [r14]
                add     r14, r15
                mov     [rcx], al
                add     rcx, r15
                add     edx, r11d
                jnz     short loc_140A0D715
                xor     r11d, r11d

loc_140A0D728:                          ; CODE XREF: sub_1409FA010+13686↑j
                                        ; sub_1409FA010+136FD↑j
                lock or [rsp+0CE0h+var_CE0], r11d
                mov     rax, [r13+698h]
                mov     [rdi+rax], rbx
                jmp     loc_140A0D812
; ---------------------------------------------------------------------------

loc_140A0D73D:                          ; CODE XREF: sub_1409FA010+134DA↑j
                mov     rax, [r13+7C0h]
                mov     [rax+80h], r9
                jmp     loc_140A0D812
; ---------------------------------------------------------------------------

loc_140A0D750:                          ; CODE XREF: sub_1409FA010+134D1↑j
                mov     rcx, [r13+7C0h]
                mov     rax, [r13+630h]
                mov     [rcx+rax], r9
                jmp     loc_140A0D812
; ---------------------------------------------------------------------------

loc_140A0D767:                          ; CODE XREF: sub_1409FA010+134C8↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mul     rdx
                mov     rcx, rdx
                mov     [rbp+0BE0h+var_3E8], rdx
                xor     rcx, rax
                mov     rax, 0ABCC77118461CEFDh
                mul     rcx
                shr     rdx, 1Ah
                imul    rax, rdx, 5F5E100h
                sub     rcx, rax
                sub     rdi, rcx
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     [rsp+0CE0h+var_CC0], r9
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mov     rcx, rsi
                mul     rdx
                mov     r8, rdx
                mov     [rbp+0BE0h+var_3E0], rdx
                xor     r8, rax
                mov     rax, 346DC5D63886594Bh
                mul     r8
                shr     rdx, 0Bh
                imul    rax, rdx, 2710h
                mov     rdx, rdi
                sub     r8, rax
                mov     rax, [r13+1D8h]
                mov     r9d, r8d
                xor     r8d, r8d
                call    j__guard_dispatch_icall_nop

loc_140A0D80F:                          ; CODE XREF: sub_1409FA010+1366C↑j
                xor     r11d, r11d

loc_140A0D812:                          ; CODE XREF: sub_1409FA010+1356E↑j
                                        ; sub_1409FA010+135D9↑j ...
                mov     ecx, 8000h

loc_140A0D817:                          ; CODE XREF: sub_1409FA010+1319D↑j
                cmp     [rbp+0BE0h+var_730], r11d
                jz      loc_140A0DA08
                test    [r13+990h], ecx
                jnz     loc_140A0DA08
                mov     r13, [rbp+0BE0h+var_718]
                mov     rbx, [rbp+0BE0h+var_710]
                mov     rdi, [rbp+0BE0h+var_720]
                mov     r14, [rbp+0BE0h+var_728]
                mov     rax, [rbp+0BE0h+arg_0]
                mov     [rbp+0BE0h+arg_8], r13
                mov     [rsp+0CE0h+var_C70], rbx
                mov     [rbp+0BE0h+var_BD0], rdi
                mov     [rbp+0BE0h+var_C40], r14
                mov     [rbp+0BE0h+var_BB8], rax
                mov     rax, cr8
                mov     r8d, 2
                cmp     al, r8b
                jnb     short loc_140A0D883
                mov     rax, cr8
                mov     cr8, r8

loc_140A0D883:                          ; CODE XREF: sub_1409FA010+13869↑j
                mov     rdx, gs:20h
                mov     rax, [rbp+0BE0h+var_BB8]
                mov     rcx, [rax+638h]
                mov     rsi, [rdx+rcx]
                mov     rcx, gs:20h
                mov     r9, [rbp+0BE0h+var_BB8]
                mov     rax, [r9+648h]
                mov     r15, [rcx+rax]
                mov     rax, [r9+640h]
                mov     [rbp+0BE0h+arg_0], r15
                cmp     [rdx+rax], r11b
                jz      short loc_140A0D8E0
                lea     rax, [rbp+0BE0h+var_BB8]
                cmp     rax, rsi
                ja      short loc_140A0D8E0
                lea     rax, [rsi-6000h]
                lea     rcx, [rbp+0BE0h+var_BB8]
                cmp     rcx, rax
                jnb     short loc_140A0D8EF

loc_140A0D8E0:                          ; CODE XREF: sub_1409FA010+138B5↑j
                                        ; sub_1409FA010+138BE↑j
                mov     rax, [rbp+0BE0h+var_BB8]
                mov     rcx, [rax+678h]
                mov     rsi, [r15+rcx]

loc_140A0D8EF:                          ; CODE XREF: sub_1409FA010+138CE↑j
                mov     r9, [rbp+0BE0h+var_BB8]
                test    dword ptr [r9+990h], 8000000h
                jnz     loc_140A0DD44
                mov     r12, cr0
                mov     rax, r12
                btr     rax, 10h
                mov     cr0, rax
                mov     eax, [r9+0AA0h]
                lea     r14, [r9+0AA8h]
                shl     rax, 4
                lea     r10, [r9+0AA8h]
                add     r14, rax
                mov     r8d, r11d
                mov     rdx, r14
                cmp     [r9+0AA4h], r11d
                jbe     short loc_140A0D98D
                mov     r11d, 1
                lea     r13d, [r11+0Fh]

loc_140A0D948:                          ; CODE XREF: sub_1409FA010+13971↓j
                mov     rcx, [rdx]
                mov     rax, [rdx+8]
                mov     [rcx], rax
                mov     rcx, cr4
                test    rcx, 20080h
                jz      short loc_140A0D96E
                mov     rax, rcx
                btc     rax, 7
                mov     cr4, rax
                mov     cr4, rcx
                jmp     short loc_140A0D974
; ---------------------------------------------------------------------------

loc_140A0D96E:                          ; CODE XREF: sub_1409FA010+1394C↑j
                mov     rax, cr3
                mov     cr3, rax

loc_140A0D974:                          ; CODE XREF: sub_1409FA010+1395C↑j
                add     rdx, r13
                add     r8d, r11d
                cmp     r8d, [r9+0AA4h]
                jb      short loc_140A0D948
                mov     r13, [rbp+0BE0h+arg_8]
                xor     r11d, r11d

loc_140A0D98D:                          ; CODE XREF: sub_1409FA010+1392C↑j
                cmp     r10, r14
                jnb     loc_140A0DD2C
                xor     r13d, r13d
                mov     r15d, 0FFFFFFFFh

loc_140A0D99F:                          ; CODE XREF: sub_1409FA010+139F6↓j
                mov     edi, [r10+8]
                mov     rcx, rdx
                mov     r8, [r10]
                mov     r11d, edi
                cmp     edi, 8
                jb      short loc_140A0D9D7
                mov     ebx, edi
                mov     r13d, 1
                shr     rbx, 3

loc_140A0D9BD:                          ; CODE XREF: sub_1409FA010+139C2↓j
                mov     rax, [rcx]
                add     r11d, 0FFFFFFF8h
                mov     [r8], rax
                add     rcx, 8
                add     r8, 8
                sub     rbx, r13
                jnz     short loc_140A0D9BD
                xor     r13d, r13d

loc_140A0D9D7:                          ; CODE XREF: sub_1409FA010+1399F↑j
                test    r11d, r11d
                jz      short loc_140A0D9F6
                sub     r8, rcx
                mov     r13d, 1

loc_140A0D9E5:                          ; CODE XREF: sub_1409FA010+139E1↓j
                mov     al, [rcx]
                mov     [r8+rcx], al
                add     rcx, r13
                add     r11d, r15d
                jnz     short loc_140A0D9E5
                xor     r13d, r13d

loc_140A0D9F6:                          ; CODE XREF: sub_1409FA010+139CA↑j
                add     rdx, rdi
                add     r10, 10h
                cmp     r10, r14
                jnb     loc_140A0DD12
                jmp     short loc_140A0D99F
; ---------------------------------------------------------------------------

loc_140A0DA08:                          ; CODE XREF: sub_1409FA010+131A7↑j
                                        ; sub_1409FA010+1380E↑j ...
                test    dword ptr [r13+990h], 40000000h
                jnz     short loc_140A0DA5F
                cmp     [rbp+0BE0h+var_C38], r11d
                jz      short loc_140A0DA5F
                mov     ecx, [r13+924h]
                sub     ecx, 1
                jz      short loc_140A0DA39
                mov     eax, 2
                cmp     ecx, eax
                jnz     short loc_140A0DA5F
                mov     rax, [r13+368h]
                jmp     short loc_140A0DA58
; ---------------------------------------------------------------------------

loc_140A0DA39:                          ; CODE XREF: sub_1409FA010+13A15↑j
                add     qword ptr [r13+7C8h], 0FFFFFFFFFFFFFFF8h
                mov     rax, [r13+7C8h]
                mov     ecx, [rax]
                mov     [r13+7D0h], ecx
                mov     rax, [r13+228h]

loc_140A0DA58:                          ; CODE XREF: sub_1409FA010+13A27↑j
                mov     [r13+100h], rax

loc_140A0DA5F:                          ; CODE XREF: sub_1409FA010+13A03↑j
                                        ; sub_1409FA010+13A09↑j ...
                mov     rax, r13
                add     rsp, 0CA8h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_140A0DA76:                          ; CODE XREF: sub_1409FA010+448D↑j
                mov     [rbp+0BE0h+var_A24], 0D0002D61h
                xor     r9d, r9d
                mov     ecx, [rbp+0BE0h+var_A24]
                mov     r8, r12
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], rax
                ror     ecx, 5Ch
                lea     edx, [r9+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DAA4:                          ; CODE XREF: sub_1409FA010+4789↑j
                mov     r8, [rsp+0CE0h+var_C68]
                mov     r9, r15
                mov     [rbp+0BE0h+var_9F0], 0D0002D61h
                mov     edx, 0Ah
                mov     ecx, [rbp+0BE0h+var_9F0]
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], rax
                ror     ecx, 5Ch
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DAD5:                          ; CODE XREF: sub_1409FA010+46B0↑j
                mov     [rbp+0BE0h+var_9EC], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_9EC]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                mov     edx, 0Ah
                mov     [rsp+0CE0h+var_CC0], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DB01:                          ; CODE XREF: sub_1409FA010+4619↑j
                mov     [rbp+0BE0h+var_9E8], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_9E8]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                mov     edx, 0Ah
                mov     [rsp+0CE0h+var_CC0], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DB2D:                          ; CODE XREF: sub_1409FA010+47E7↑j
                mov     r8, [rsp+0CE0h+var_C68]
                mov     r9d, 2
                mov     [rbp+0BE0h+var_A5C], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_A5C]
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], rax
                ror     ecx, 5Ch
                lea     edx, [r9+8]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DB60:                          ; CODE XREF: sub_1409FA010+4773↑j
                mov     r8, [rsp+0CE0h+var_C68]
                mov     r9d, 3
                mov     [rbp+0BE0h+var_9E4], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_9E4]
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], rdx
                ror     ecx, 5Ch
                lea     edx, [r9+7]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DB93:                          ; CODE XREF: sub_1409FA010+4F8C↑j
                mov     r8, [rsp+0CE0h+var_C68]
                mov     r9d, 6
                mov     [rbp+0BE0h+var_9E0], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_9E0]
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], rdx
                ror     ecx, 5Ch
                lea     edx, [r9+4]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DBC6:                          ; CODE XREF: sub_1409FA010+FD53↑j
                mov     [rbp+0BE0h+var_A78], 0D0002D61h
                xor     r9d, r9d
                mov     ecx, [rbp+0BE0h+var_A78]
                mov     r8, r14
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], r11
                ror     ecx, 5Ch
                lea     edx, [r9+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DBF4:                          ; CODE XREF: sub_1409FA010+10033↑j
                xor     eax, eax
                mov     [rbp+0BE0h+var_A64], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_A64]
                mov     r8, r14
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], rax
                ror     ecx, 5Ch
                lea     r9d, [rax+3]
                lea     edx, [rax+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DC24:                          ; CODE XREF: sub_1409FA010+10048↑j
                mov     [rbp+0BE0h+var_A74], 0D0002D61h
                mov     r8, r14
                mov     ecx, [rbp+0BE0h+var_A74]
                mov     edx, 0Ah
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], r9
                ror     ecx, 5Ch
                mov     r9, r13
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DC53:                          ; CODE XREF: sub_1409FA010+FF70↑j
                xor     eax, eax
                mov     [rbp+0BE0h+var_A70], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_A70]
                mov     r8, r14
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                lea     edx, [rax+0Ah]
                mov     [rsp+0CE0h+var_CC0], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DC82:                          ; CODE XREF: sub_1409FA010+FEDA↑j
                xor     eax, eax
                mov     [rbp+0BE0h+var_A6C], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_A6C]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                lea     edx, [rax+0Ah]
                mov     [rsp+0CE0h+var_CC0], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DCAE:                          ; CODE XREF: sub_1409FA010+100A1↑j
                mov     [rsp+0CE0h+var_CC0], r9
                mov     r8, r14
                mov     r9d, 2
                mov     [rbp+0BE0h+var_A68], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_A68]
                xor     ecx, 2D72h
                ror     ecx, 5Ch
                lea     edx, [r9+8]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DCDF:                          ; CODE XREF: sub_1409FA010+107CE↑j
                mov     r8, [rsp+0CE0h+var_C68]
                mov     r9d, 6
                mov     [rbp+0BE0h+var_A60], 0D0002D61h
                mov     ecx, [rbp+0BE0h+var_A60]
                xor     ecx, 2D72h
                mov     [rsp+0CE0h+var_CC0], rsi
                ror     ecx, 5Ch
                lea     edx, [r9+4]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0DD12:                          ; CODE XREF: sub_1409FA010+139F0↑j
                mov     r15, [rbp+0BE0h+arg_0]
                xor     r11d, r11d
                mov     r13, [rbp+0BE0h+arg_8]
                mov     rbx, [rsp+0CE0h+var_C70]
                mov     rdi, [rbp+0BE0h+var_BD0]

loc_140A0DD2C:                          ; CODE XREF: sub_1409FA010+13980↑j
                mov     rax, [r9+218h]
                mov     byte ptr [rax], 0C3h
                mov     cr0, r12
                mov     r14, [rbp+0BE0h+var_C40]
                mov     r8d, 2

loc_140A0DD44:                          ; CODE XREF: sub_1409FA010+138EE↑j
                mov     r9, [rbp+0BE0h+var_BB8]
                mov     ecx, [r9+928h]
                test    ecx, ecx
                jz      loc_140A0DE37
                mov     rax, cr8
                cmp     al, r8b
                jnb     short loc_140A0DD6F
                mov     rax, cr8
                mov     cr8, r8
                mov     ecx, [r9+928h]

loc_140A0DD6F:                          ; CODE XREF: sub_1409FA010+13D4E↑j
                test    ecx, ecx
                jz      loc_140A0DE37
                sub     ecx, 1
                jz      loc_140A0DE2A
                sub     ecx, 1
                jz      loc_140A0DE21
                sub     ecx, 1
                jz      loc_140A0DE18
                sub     ecx, 1
                jz      short loc_140A0DDDC
                cmp     ecx, 1
                jz      short loc_140A0DDB5
                mov     rax, [r9+5B8h]
                mov     ecx, 1
                lock or [rax+340h], rcx
                jmp     loc_140A0DE37
; ---------------------------------------------------------------------------

loc_140A0DDB5:                          ; CODE XREF: sub_1409FA010+13D8A↑j
                mov     rcx, gs:20h
                mov     rax, [r9+648h]
                mov     edx, [r9+990h]
                shr     edx, 0Ah
                and     edx, 1Fh
                mov     rcx, [rax+rcx]
                lock bts [rcx], edx
                jmp     short loc_140A0DE37
; ---------------------------------------------------------------------------

loc_140A0DDDC:                          ; CODE XREF: sub_1409FA010+13D85↑j
                mov     rcx, gs:20h
                mov     rax, [r9+648h]
                mov     r8d, [r9+990h]
                shr     r8d, 0Ah
                and     r8d, 1Fh
                mov     rcx, [rax+rcx]
                add     rcx, [r9+6A8h]
                mov     rax, [r9+688h]
                mov     rdx, [rcx+rax]
                lock bts [rdx], r8d
                jmp     short loc_140A0DE37
; ---------------------------------------------------------------------------

loc_140A0DE18:                          ; CODE XREF: sub_1409FA010+13D7C↑j
                mov     rax, [r9+560h]
                jmp     short loc_140A0DE31
; ---------------------------------------------------------------------------

loc_140A0DE21:                          ; CODE XREF: sub_1409FA010+13D73↑j
                mov     rax, [r9+558h]
                jmp     short loc_140A0DE31
; ---------------------------------------------------------------------------

loc_140A0DE2A:                          ; CODE XREF: sub_1409FA010+13D6A↑j
                mov     rax, [r9+548h]

loc_140A0DE31:                          ; CODE XREF: sub_1409FA010+13E0F↑j
                                        ; sub_1409FA010+13E18↑j
                lock bts qword ptr [rax], 0

loc_140A0DE37:                          ; CODE XREF: sub_1409FA010+13D41↑j
                                        ; sub_1409FA010+13D61↑j ...
                mov     rax, [rbp+0BE0h+var_BB8]
                mov     rcx, [rax+690h]
                mov     [r15+rcx], r11
                mov     rax, [rbp+0BE0h+var_BB8]
                mov     r10, [rax+6A0h]
                mov     [r15+r10], r11
                mov     rcx, [rbp+0BE0h+var_BB8]
                mov     rcx, [rcx+158h]
                call    sub_140A13340
                mov     rax, [rbp+0BE0h+var_BB8]
                mov     r9, rbx
                mov     [rsp+0CE0h+var_CB0], rsi
                mov     r8, rdi
                mov     rdx, r14
                mov     ecx, 109h
                mov     r10, [rax+158h]
                mov     [rsp+0CE0h+var_CB8], r10
                mov     [rsp+0CE0h+var_CC0], r13
                call    sub_140A13080
; ---------------------------------------------------------------------------
                db 0CCh
sub_1409FA010   endp

algn_140A0DE93:                         ; DATA XREF: .pdata:000000014012C114↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A0DEA0   proc near               ; CODE XREF: sub_140A132A0+40↓p
                                        ; DATA XREF: .pdata:000000014012C120↑o

var_20          = dword ptr -20h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                mov     [rsp+arg_18], rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rax, gs:18h
                mov     rdi, rcx
                mov     r8, [rax+38h]
                mov     rax, gs:18h
                mov     ecx, gs:1A4h
                movups  xmm0, xmmword ptr [r8+40h]
                mov     r14, [rax+8]
                movq    rax, xmm0
                psrldq  xmm0, 8
                mov     word ptr [rsp+20h+arg_10], ax
                shr     rax, 30h
                mov     word ptr [rsp+20h+arg_10+2], ax
                movd    dword ptr [rsp+20h+arg_10+4], xmm0
                mov     r9, [rsp+20h+arg_10]
                mov     eax, edx
                add     rax, 20h ; ' '
                add     rax, rax
                mov     r8, [r9+1400h]
                mov     r10, [r9+1408h]
                movups  xmm0, xmmword ptr [r9+rax*8]
                movq    rax, xmm0
                psrldq  xmm0, 8
                mov     word ptr [rsp+20h+arg_10], ax
                shr     rax, 30h
                mov     word ptr [rsp+20h+arg_10+2], ax
                movd    dword ptr [rsp+20h+arg_10+4], xmm0
                lock or dword ptr [r9+1430h], 1
                mov     eax, [r9+1434h]
                cmp     ecx, eax
                jz      short loc_140A0DF6D
                jmp     short loc_140A0DF56
; ---------------------------------------------------------------------------

loc_140A0DF54:                          ; CODE XREF: sub_140A0DEA0+BF↓j
                pause

loc_140A0DF56:                          ; CODE XREF: sub_140A0DEA0+B2↑j
                mov     eax, [r9+1430h]
                test    al, 2
                jnz     short loc_140A0DF54
                lock or [rsp+20h+var_20], 0
                mov     eax, [r9+1434h]

loc_140A0DF6D:                          ; CODE XREF: sub_140A0DEA0+B0↑j
                lea     r12, [r8+899h]
                mov     edx, 1000h
                cmp     ecx, eax
                jnz     loc_140A0E087
                test    dword ptr [r8+994h], 20000h
                jnz     short loc_140A0DFC3
                mov     rax, [r8+4C0h]
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     [rax], rcx
                mov     rax, [r8+4C8h]
                and     qword ptr [rax], 0
                mov     rax, [r8+4D0h]
                and     qword ptr [rax], 0
                mov     rax, [r8+4D8h]
                and     qword ptr [rax], 0

loc_140A0DFC3:                          ; CODE XREF: sub_140A0DEA0+EC↑j
                mov     r11d, 1
                add     r14, 24h ; '$'

loc_140A0DFCD:                          ; CODE XREF: sub_140A0DEA0+18C↓j
                mov     rbx, [r14]
                test    rbx, rbx
                jz      short loc_140A0E021
                mov     r15b, [r8+87Bh]
                mov     ecx, 1D0h
                mov     r13d, [r8+8B4h]
                test    r15b, 8
                mov     rsi, [rdi+18h]
                mov     eax, r13d
                cmovnz  eax, ecx
                cmp     rsi, rbx
                ja      short loc_140A0E006
                mov     rcx, rbx
                sub     rcx, rax
                cmp     rsi, rcx
                ja      short loc_140A0E02E

loc_140A0E006:                          ; CODE XREF: sub_140A0DEA0+159↑j
                test    r15b, 8
                jz      short loc_140A0E021
                mov     rbx, [rbx+8]
                cmp     rsi, rbx
                ja      short loc_140A0E021
                lea     ecx, [r13-20h]
                sub     rbx, rcx
                cmp     rsi, rbx
                ja      short loc_140A0E02E

loc_140A0E021:                          ; CODE XREF: sub_140A0DEA0+133↑j
                                        ; sub_140A0DEA0+16A↑j ...
                inc     r11d
                add     r14, 8
                cmp     r11d, 8
                jb      short loc_140A0DFCD

loc_140A0E02E:                          ; CODE XREF: sub_140A0DEA0+164↑j
                                        ; sub_140A0DEA0+17F↑j
                cmp     r11d, 8
                jnz     short loc_140A0E056
                mov     rax, [rdi]
                sub     rax, r10
                cmp     rax, rdx
                jnb     short loc_140A0E056
                mov     rax, [rdi+18h]
                mov     rcx, [rax]
                cmp     rcx, r12
                jnz     short loc_140A0E056
                add     rax, 8
                mov     [rdi], rcx
                mov     [rdi+18h], rax

loc_140A0E056:                          ; CODE XREF: sub_140A0DEA0+192↑j
                                        ; sub_140A0DEA0+19D↑j ...
                mov     rax, 0C3C3C3C3C3C3C3C3h
                mov     ecx, 4
                mov     [r8+89Eh], rax
                lea     rax, [r8+8A6h]

loc_140A0E073:                          ; CODE XREF: sub_140A0DEA0+1DC↓j
                mov     byte ptr [rax], 0C3h
                inc     rax
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A0E073
                lock and dword ptr [r9+1430h], 0FFFFFFFDh

loc_140A0E087:                          ; CODE XREF: sub_140A0DEA0+DB↑j
                mov     eax, [r9+1430h]
                test    al, 4
                jnz     short loc_140A0E0CA
                lea     rcx, [r9+400h]
                mov     r11d, 200h

loc_140A0E09F:                          ; CODE XREF: sub_140A0DEA0+214↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [r10], rax
                add     rcx, 8
                add     r10, 8
                sub     r11, 1
                jnz     short loc_140A0E09F
                test    edx, edx
                jz      short loc_140A0E0CA

loc_140A0E0BA:                          ; CODE XREF: sub_140A0DEA0+228↓j
                mov     al, [rcx]
                inc     rcx
                mov     [r10], al
                inc     r10
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A0E0BA

loc_140A0E0CA:                          ; CODE XREF: sub_140A0DEA0+1F0↑j
                                        ; sub_140A0DEA0+218↑j
                mov     rbx, [rsp+20h+arg_0]
                lea     rax, [r8+87Ah]
                mov     rsi, [rsp+20h+arg_8]
                mov     rdi, [rsp+20h+arg_18]
                mov     [r9+1410h], rax
                mov     rax, [rsp+20h+arg_10]
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                retn
sub_140A0DEA0   endp

; ---------------------------------------------------------------------------
byte_140A0E0F5  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012C120↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=140h

sub_140A0E0FC   proc near               ; CODE XREF: sub_1409FA010+10C98↑p
                                        ; sub_140A0E0FC+1E34↓p ...

var_228         = qword ptr -228h
var_220         = dword ptr -220h
var_218         = qword ptr -218h
var_210         = qword ptr -210h
var_208         = dword ptr -208h
var_204         = dword ptr -204h
var_200         = qword ptr -200h
var_1F8         = qword ptr -1F8h
var_1F0         = qword ptr -1F0h
var_1E8         = qword ptr -1E8h
var_1E0         = dword ptr -1E0h
var_1DC         = dword ptr -1DCh
var_1D8         = qword ptr -1D8h
var_1D0         = qword ptr -1D0h
var_1C0         = qword ptr -1C0h
var_1B8         = qword ptr -1B8h
var_1B0         = qword ptr -1B0h
var_1A8         = qword ptr -1A8h
var_1A0         = dword ptr -1A0h
var_198         = qword ptr -198h
var_190         = dword ptr -190h
var_188         = qword ptr -188h
var_180         = dword ptr -180h
var_178         = dword ptr -178h
var_174         = dword ptr -174h
var_170         = dword ptr -170h
var_16C         = dword ptr -16Ch
var_168         = dword ptr -168h
var_164         = dword ptr -164h
var_160         = dword ptr -160h
var_15C         = dword ptr -15Ch
var_158         = qword ptr -158h
var_150         = dword ptr -150h
var_14C         = dword ptr -14Ch
var_148         = dword ptr -148h
var_144         = dword ptr -144h
var_140         = dword ptr -140h
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = dword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = byte ptr -0C0h
var_B8          = qword ptr -0B8h
var_AC          = dword ptr -0ACh
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = byte ptr -68h
var_60          = qword ptr -60h
var_54          = dword ptr -54h
var_50          = qword ptr -50h
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = dword ptr  20h
arg_18          = dword ptr  28h

                mov     rax, rsp
                mov     [rax+18h], r8d
                mov     [rax+10h], rdx
                mov     [rax+8], rcx
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-148h]
                sub     rsp, 208h
                mov     rax, [rcx]
                mov     r13, rdx
                mov     [rsp+78h], rax
                lea     rdx, [rbp+140h+var_C0]
                mov     rcx, r13
                mov     rax, [rax+200h]
                call    j__guard_dispatch_icall_nop
                mov     r15, rax
                xor     r8d, r8d
                mov     rax, [rbp+140h+var_B8]
                mov     [rbp+140h+var_130], rax
                test    rax, rax
                jnz     short loc_140A0E166
                mov     eax, 0C000007Bh
                jmp     loc_140A0FF5A
; ---------------------------------------------------------------------------

loc_140A0E166:                          ; CODE XREF: sub_140A0E0FC+5E↑j
                mov     ecx, 4
                mov     [rbp+140h+var_188], r8
                lea     rax, [rbp+140h+var_180]
                lea     r9d, [rcx-3]

loc_140A0E177:                          ; CODE XREF: sub_140A0E0FC+84↓j
                mov     [rax], r8b
                add     rax, r9
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A0E177
                mov     rbx, [rsp+78h]
                mov     r10d, r8d
                mov     esi, [rbx+80Ch]
                test    esi, esi
                jz      loc_140A0E365
                mov     r14, [rbx+0A78h]
                mov     r12d, [rbp+140h+var_AC]
                mov     ecx, [rbp+140h+var_180]
                mov     edx, dword ptr [rbp+140h+var_188+4]
                mov     edi, dword ptr [rbp+140h+var_188]

loc_140A0E1AF:                          ; CODE XREF: sub_140A0E0FC+263↓j
                test    r14, r14
                mov     r9d, r8d
                mov     r11, r14
                cmovz   r11, rbx
                mov     r8d, [r11+808h]
                add     r8, r11
                test    edi, edi
                jz      short loc_140A0E1D8
                cmp     edx, r10d
                ja      short loc_140A0E1D8
                mov     r8d, ecx
                mov     r9d, edx
                add     r8, r11

loc_140A0E1D8:                          ; CODE XREF: sub_140A0E0FC+CC↑j
                                        ; sub_140A0E0FC+D1↑j
                cmp     r9d, r10d
                jz      loc_140A0E2FF
                mov     eax, r10d
                mov     r13, 0AAAAAAAAAAAAAAABh
                sub     eax, r9d
                mov     edi, eax
                add     r9d, eax

loc_140A0E1F6:                          ; CODE XREF: sub_140A0E0FC+1ED↓j
                mov     ecx, [r8]
                cmp     ecx, 0Ch
                jg      short loc_140A0E243
                jz      short loc_140A0E260
                sub     ecx, 1
                jz      short loc_140A0E260
                sub     ecx, 6
                jz      short loc_140A0E231
                sub     ecx, 1
                jz      short loc_140A0E227
                cmp     ecx, 2
                jnz     loc_140A0E29F
                mov     eax, [r8+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A0E2DE
; ---------------------------------------------------------------------------

loc_140A0E227:                          ; CODE XREF: sub_140A0E0FC+111↑j
                movzx   eax, word ptr [r8+20h]
                jmp     loc_140A0E2D8
; ---------------------------------------------------------------------------

loc_140A0E231:                          ; CODE XREF: sub_140A0E0FC+10C↑j
                mov     eax, [r8+18h]
                add     eax, 2
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A0E2DE
; ---------------------------------------------------------------------------

loc_140A0E243:                          ; CODE XREF: sub_140A0E0FC+100↑j
                cmp     ecx, 1Ch
                jz      loc_140A0E2D3
                cmp     ecx, 1Eh
                jz      short loc_140A0E2A6
                cmp     ecx, 20h ; ' '
                jle     short loc_140A0E29F
                cmp     ecx, 22h ; '"'
                jle     short loc_140A0E277
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A0E29F

loc_140A0E260:                          ; CODE XREF: sub_140A0E0FC+102↑j
                                        ; sub_140A0E0FC+107↑j
                mov     ecx, [r8+10h]
                mov     rax, r13
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A0E2DE
; ---------------------------------------------------------------------------

loc_140A0E277:                          ; CODE XREF: sub_140A0E0FC+15D↑j
                mov     ecx, [r8+20h]
                mov     edx, [r8+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A0E2DE
; ---------------------------------------------------------------------------

loc_140A0E29F:                          ; CODE XREF: sub_140A0E0FC+116↑j
                                        ; sub_140A0E0FC+158↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A0E2DE
; ---------------------------------------------------------------------------

loc_140A0E2A6:                          ; CODE XREF: sub_140A0E0FC+153↑j
                mov     eax, [r8+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r13
                mul     rcx
                movzx   eax, word ptr [r8+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, 2
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A0E2DE
; ---------------------------------------------------------------------------

loc_140A0E2D3:                          ; CODE XREF: sub_140A0E0FC+14A↑j
                movzx   eax, word ptr [r8+28h]

loc_140A0E2D8:                          ; CODE XREF: sub_140A0E0FC+130↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A0E2DE:                          ; CODE XREF: sub_140A0E0FC+126↑j
                                        ; sub_140A0E0FC+142↑j ...
                add     r8, rax
                mov     eax, 1
                sub     rdi, rax
                jnz     loc_140A0E1F6
                mov     r12d, [rbp+140h+var_AC]
                mov     r13, [rbp+140h+arg_8]
                jmp     short loc_140A0E304
; ---------------------------------------------------------------------------

loc_140A0E2FF:                          ; CODE XREF: sub_140A0E0FC+DF↑j
                mov     eax, 1

loc_140A0E304:                          ; CODE XREF: sub_140A0E0FC+201↑j
                mov     edx, r9d
                mov     dword ptr [rbp+140h+var_188], eax
                movsxd  r9, dword ptr [r8]
                mov     ecx, r8d
                sub     ecx, r11d
                mov     dword ptr [rbp+140h+var_188+4], edx
                mov     [rbp+140h+var_180], ecx
                mov     edi, eax
                cmp     r9d, 2Bh ; '+'
                ja      short loc_140A0E33D
                mov     r11, 80000001002h
                bt      r11, r9
                jnb     short loc_140A0E33D
                cmp     [r8+8], r15
                jnz     short loc_140A0E33D
                cmp     [r8+10h], r12d
                jz      short loc_140A0E365

loc_140A0E33D:                          ; CODE XREF: sub_140A0E0FC+223↑j
                                        ; sub_140A0E0FC+233↑j ...
                lea     eax, [r9-21h]
                mov     r9d, 1
                cmp     eax, r9d
                ja      short loc_140A0E356
                mov     rax, [rbp+140h+var_130]
                cmp     [r8+20h], rax
                jz      short loc_140A0E365

loc_140A0E356:                          ; CODE XREF: sub_140A0E0FC+24E↑j
                add     r10d, r9d
                xor     r8d, r8d
                cmp     r10d, esi
                jb      loc_140A0E1AF

loc_140A0E365:                          ; CODE XREF: sub_140A0E0FC+96↑j
                                        ; sub_140A0E0FC+23F↑j ...
                test    r8, r8
                jz      short loc_140A0E374
                mov     eax, 0C000010Eh
                jmp     loc_140A0FF5A
; ---------------------------------------------------------------------------

loc_140A0E374:                          ; CODE XREF: sub_140A0E0FC+26C↑j
                mov     r12d, [rbp+140h+arg_10]
                lea     rdx, [rbp+140h+var_68]
                mov     rax, [rbx+200h]
                mov     rcx, r13
                mov     [rbp+140h+arg_18], r12d
                mov     [rbp+140h+var_1A8], rbx
                call    j__guard_dispatch_icall_nop
                mov     r15d, [rbp+140h+var_54]
                xor     r11d, r11d
                mov     [rsp+240h+var_1E8], rax
                mov     rax, [rbp+140h+var_60]
                mov     dword ptr [rsp+240h+var_200+4], r15d
                mov     [rsp+240h+var_1F8], rax
                test    rax, rax
                jnz     short loc_140A0E3CB

loc_140A0E3C1:                          ; CODE XREF: sub_140A0E0FC+F7E↓j
                                        ; sub_140A0E0FC+FCB↓j ...
                mov     ecx, 0C000007Bh
                jmp     loc_140A0FE8B
; ---------------------------------------------------------------------------

loc_140A0E3CB:                          ; CODE XREF: sub_140A0E0FC+2C3↑j
                mov     ecx, 4
                mov     [rbp+140h+var_198], r11
                lea     rax, [rbp+140h+var_190]
                lea     edx, [rcx-3]

loc_140A0E3DB:                          ; CODE XREF: sub_140A0E0FC+2E8↓j
                mov     [rax], r11b
                add     rax, rdx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A0E3DB
                mov     esi, [rbx+80Ch]
                mov     edi, r11d
                test    esi, esi
                jz      loc_140A0E5C6
                mov     r14, [rbx+0A78h]
                mov     ecx, [rbp+140h+var_190]
                mov     edx, dword ptr [rbp+140h+var_198+4]
                mov     r11d, dword ptr [rbp+140h+var_198]

loc_140A0E408:                          ; CODE XREF: sub_140A0E0FC+4C1↓j
                xor     eax, eax
                mov     r10, r14
                test    r14, r14
                mov     r9d, eax
                cmovz   r10, rbx
                mov     r8d, [r10+808h]
                add     r8, r10
                test    r11d, r11d
                jz      short loc_140A0E433
                cmp     edx, edi
                ja      short loc_140A0E433
                mov     r8d, ecx
                mov     r9d, edx
                add     r8, r10

loc_140A0E433:                          ; CODE XREF: sub_140A0E0FC+328↑j
                                        ; sub_140A0E0FC+32C↑j
                cmp     r9d, edi
                jz      loc_140A0E55A
                mov     eax, edi
                mov     r13, 0AAAAAAAAAAAAAAABh
                sub     eax, r9d
                mov     r11d, eax
                add     r9d, eax

loc_140A0E451:                          ; CODE XREF: sub_140A0E0FC+448↓j
                mov     ecx, [r8]
                cmp     ecx, 0Ch
                jg      short loc_140A0E49E
                jz      short loc_140A0E4BB
                sub     ecx, 1
                jz      short loc_140A0E4BB
                sub     ecx, 6
                jz      short loc_140A0E48C
                sub     ecx, 1
                jz      short loc_140A0E482
                cmp     ecx, 2
                jnz     loc_140A0E4FA
                mov     eax, [r8+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A0E539
; ---------------------------------------------------------------------------

loc_140A0E482:                          ; CODE XREF: sub_140A0E0FC+36C↑j
                movzx   eax, word ptr [r8+20h]
                jmp     loc_140A0E533
; ---------------------------------------------------------------------------

loc_140A0E48C:                          ; CODE XREF: sub_140A0E0FC+367↑j
                mov     eax, [r8+18h]
                add     eax, 2
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A0E539
; ---------------------------------------------------------------------------

loc_140A0E49E:                          ; CODE XREF: sub_140A0E0FC+35B↑j
                cmp     ecx, 1Ch
                jz      loc_140A0E52E
                cmp     ecx, 1Eh
                jz      short loc_140A0E501
                cmp     ecx, 20h ; ' '
                jle     short loc_140A0E4FA
                cmp     ecx, 22h ; '"'
                jle     short loc_140A0E4D2
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A0E4FA

loc_140A0E4BB:                          ; CODE XREF: sub_140A0E0FC+35D↑j
                                        ; sub_140A0E0FC+362↑j
                mov     ecx, [r8+10h]
                mov     rax, r13
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A0E539
; ---------------------------------------------------------------------------

loc_140A0E4D2:                          ; CODE XREF: sub_140A0E0FC+3B8↑j
                mov     ecx, [r8+20h]
                mov     edx, [r8+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A0E539
; ---------------------------------------------------------------------------

loc_140A0E4FA:                          ; CODE XREF: sub_140A0E0FC+371↑j
                                        ; sub_140A0E0FC+3B3↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A0E539
; ---------------------------------------------------------------------------

loc_140A0E501:                          ; CODE XREF: sub_140A0E0FC+3AE↑j
                mov     eax, [r8+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r13
                mul     rcx
                movzx   eax, word ptr [r8+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, 2
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A0E539
; ---------------------------------------------------------------------------

loc_140A0E52E:                          ; CODE XREF: sub_140A0E0FC+3A5↑j
                movzx   eax, word ptr [r8+28h]

loc_140A0E533:                          ; CODE XREF: sub_140A0E0FC+38B↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A0E539:                          ; CODE XREF: sub_140A0E0FC+381↑j
                                        ; sub_140A0E0FC+39D↑j ...
                add     r8, rax
                mov     eax, 1
                sub     r11, rax
                jnz     loc_140A0E451
                mov     r13, [rbp+140h+arg_8]
                mov     r12d, [rbp+140h+arg_18]
                jmp     short loc_140A0E55F
; ---------------------------------------------------------------------------

loc_140A0E55A:                          ; CODE XREF: sub_140A0E0FC+33A↑j
                mov     eax, 1

loc_140A0E55F:                          ; CODE XREF: sub_140A0E0FC+45C↑j
                mov     edx, r9d
                mov     dword ptr [rbp+140h+var_198], eax
                movsxd  r9, dword ptr [r8]
                mov     ecx, r8d
                sub     ecx, r10d
                mov     dword ptr [rbp+140h+var_198+4], edx
                mov     [rbp+140h+var_190], ecx
                mov     r11d, eax
                cmp     r9d, 2Bh ; '+'
                ja      short loc_140A0E59E
                mov     r10, 80000001002h
                bt      r10, r9
                jnb     short loc_140A0E59E
                mov     rax, [rsp+240h+var_1E8]
                cmp     [r8+8], rax
                jnz     short loc_140A0E59E
                cmp     [r8+10h], r15d
                jz      short loc_140A0E5C9

loc_140A0E59E:                          ; CODE XREF: sub_140A0E0FC+47F↑j
                                        ; sub_140A0E0FC+48F↑j ...
                lea     eax, [r9-21h]
                mov     r9d, 1
                cmp     eax, r9d
                ja      short loc_140A0E5B8
                mov     rax, [rsp+240h+var_1F8]
                cmp     [r8+20h], rax
                jz      short loc_140A0E5C9

loc_140A0E5B8:                          ; CODE XREF: sub_140A0E0FC+4AF↑j
                add     edi, r9d
                cmp     edi, esi
                jb      loc_140A0E408
                xor     r11d, r11d

loc_140A0E5C6:                          ; CODE XREF: sub_140A0E0FC+2F5↑j
                mov     r8, r11

loc_140A0E5C9:                          ; CODE XREF: sub_140A0E0FC+4A0↑j
                                        ; sub_140A0E0FC+4BA↑j
                mov     [rbp+140h+var_138], r8
                test    r8, r8
                jz      short loc_140A0E5DC
                mov     ecx, 0C000010Eh
                jmp     loc_140A0FE8B
; ---------------------------------------------------------------------------

loc_140A0E5DC:                          ; CODE XREF: sub_140A0E0FC+4D4↑j
                mov     rax, [rbx+2A8h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r15d, [rbp+140h+arg_10]
                mov     esi, eax
                mov     [rsp+240h+var_1E0], eax
                mov     eax, dword ptr [rsp+240h+var_200+4]
                mov     dword ptr [rsp+240h+var_1D8+4], eax
                test    r15b, 10h
                jz      short loc_140A0E620
                test    dword ptr [rbx+994h], 400h
                jnz     short loc_140A0E620
                mov     r12d, r15d
                and     r12d, 0FFFFFFEFh
                mov     [rbp+140h+arg_18], r12d

loc_140A0E620:                          ; CODE XREF: sub_140A0E0FC+508↑j
                                        ; sub_140A0E0FC+514↑j
                mov     r14, [rsp+240h+var_1F8]
                test    r12b, 10h
                jz      short loc_140A0E64A
                mov     rdx, r14
                mov     rcx, rbx
                call    sub_140A11C50
                xor     r11d, r11d
                test    eax, eax
                jnz     short loc_140A0E64D
                and     r12d, 0FFFFFFEFh
                mov     [rbp+140h+arg_18], r12d
                jmp     short loc_140A0E64D
; ---------------------------------------------------------------------------

loc_140A0E64A:                          ; CODE XREF: sub_140A0E0FC+52D↑j
                xor     r11d, r11d

loc_140A0E64D:                          ; CODE XREF: sub_140A0E0FC+53F↑j
                                        ; sub_140A0E0FC+54C↑j
                test    r12b, 2
                jz      short loc_140A0E65F
                test    esi, esi
                jnz     short loc_140A0E65F
                mov     ecx, r11d
                jmp     loc_140A0FE92
; ---------------------------------------------------------------------------

loc_140A0E65F:                          ; CODE XREF: sub_140A0E0FC+555↑j
                                        ; sub_140A0E0FC+559↑j
                test    dword ptr [rbx+990h], 40000000h
                jz      short loc_140A0E682
                mov     r8d, r12d
                lea     rcx, [rsp+78h]
                mov     rdx, r14
                call    sub_140A1DFE4
                mov     ecx, eax
                jmp     loc_140A0FE92
; ---------------------------------------------------------------------------

loc_140A0E682:                          ; CODE XREF: sub_140A0E0FC+56D↑j
                mov     rax, [rbx+1F0h]
                lea     r9, [rsp+240h+var_200+4]
                xor     r8d, r8d
                mov     [rbp+140h+var_D0], r11
                mov     rcx, r14
                mov     [rbp+140h+var_140], r11d
                lea     r12d, [r8+1]
                mov     dl, r12b
                call    j__guard_dispatch_icall_nop
                mov     rcx, rax
                mov     [rbp+140h+var_E8], rax
                neg     rcx
                lea     r8d, [r12+0Bh]
                lea     r9, [rsp+240h+var_200+4]
                mov     rcx, r14
                sbb     edx, edx
                and     edx, dword ptr [rsp+240h+var_200+4]
                mov     dword ptr [rsp+240h+var_200+4], edx
                mov     rax, [rbx+1F0h]
                mov     [rbp+140h+var_14C], edx
                mov     dl, r12b
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                mov     [rbp+140h+var_1C0], rax
                neg     rax
                mov     [rbp+140h+var_E0], rdx
                lea     r8d, [r12+9]
                mov     dl, r12b
                sbb     ecx, ecx
                lea     r9, [rsp+240h+var_200+4]
                and     ecx, dword ptr [rsp+240h+var_200+4]
                mov     dword ptr [rsp+240h+var_200+4], ecx
                mov     rax, [rbx+1F0h]
                mov     dword ptr [rsp+240h+var_200], ecx
                mov     [rbp+140h+var_148], ecx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     rcx, rax
                mov     [rbp+140h+var_D8], rax
                neg     rcx
                mov     rcx, r14
                sbb     edx, edx
                and     edx, dword ptr [rsp+240h+var_200+4]
                mov     dword ptr [rsp+240h+var_200+4], edx
                mov     rax, [rbx+1F8h]
                mov     [rbp+140h+var_144], edx
                call    j__guard_dispatch_icall_nop
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_140A0E74E
                mov     ecx, 0C000007Bh
                jmp     loc_140A0FE92
; ---------------------------------------------------------------------------

loc_140A0E74E:                          ; CODE XREF: sub_140A0E0FC+646↑j
                mov     rax, [rbx+498h]
                lea     rdx, [rbp+140h+var_128]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     r8d, [rbx+924h]
                mov     [rbp+140h+var_C8], rax
                mov     eax, [rbp+140h+var_128]
                mov     [rbp+140h+var_13C], eax
                mov     eax, [rdi+54h]
                mov     [rbp+140h+var_150], eax
                mov     eax, esi
                mov     esi, [rbx+7E4h]
                neg     eax
                mov     [rbp+140h+var_F0], r14
                sbb     r9d, r9d
                and     r9d, 0Bh
                lea     eax, [rsi+120h]
                mov     dword ptr [rsp+240h+var_1F0], r9d
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A0E886
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     [rbp+140h+var_1B0], rax
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A0E87C
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A0E86E
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A0E807
                mov     ecx, eax
                shr     rcx, 3

loc_140A0E7F8:                          ; CODE XREF: sub_140A0E0FC+709↓j
                mov     [rbx], r11
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r12
                jnz     short loc_140A0E7F8

loc_140A0E807:                          ; CODE XREF: sub_140A0E0FC+6F4↑j
                test    eax, eax
                jz      short loc_140A0E816

loc_140A0E80B:                          ; CODE XREF: sub_140A0E0FC+718↓j
                mov     [rbx], r11b
                add     rbx, r12
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A0E80B

loc_140A0E816:                          ; CODE XREF: sub_140A0E0FC+70D↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A0E859
                test    dword ptr [rdi+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A0E850
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A0E868
; ---------------------------------------------------------------------------

loc_140A0E850:                          ; CODE XREF: sub_140A0E0FC+73D↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A0E860
; ---------------------------------------------------------------------------

loc_140A0E859:                          ; CODE XREF: sub_140A0E0FC+729↑j
                mov     rax, [rdi+368h]

loc_140A0E860:                          ; CODE XREF: sub_140A0E0FC+75B↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A0E868:                          ; CODE XREF: sub_140A0E0FC+752↑j
                mov     [rdi+924h], ebx

loc_140A0E86E:                          ; CODE XREF: sub_140A0E0FC+6CE↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+240h+var_1F0]
                jmp     short loc_140A0E893
; ---------------------------------------------------------------------------

loc_140A0E87C:                          ; CODE XREF: sub_140A0E0FC+6BF↑j
                mov     ecx, 0C000009Ah
                jmp     loc_140A0FE92
; ---------------------------------------------------------------------------

loc_140A0E886:                          ; CODE XREF: sub_140A0E0FC+6A2↑j
                mov     rdi, rbx
                mov     [rbp+140h+var_1B0], rbx
                mov     [rbx+7E4h], eax

loc_140A0E893:                          ; CODE XREF: sub_140A0E0FC+77E↑j
                add     dword ptr [rdi+80Ch], 6
                lea     r14, [rdi+rsi]
                mov     [rbp+140h+var_1B8], r14
                lea     r13, [rbp+140h+var_F0]
                mov     rsi, r14
                mov     [rbp+140h+var_118], r14
                mov     [rbp+140h+var_138], r14
                mov     rax, r14
                lea     r14, [rbp+140h+var_150]
                mov     [rsp+240h+var_1D0], 6
                mov     r15d, 30h ; '0'
                xor     r10d, r10d

loc_140A0E8CA:                          ; CODE XREF: sub_140A0E0FC+931↓j
                mov     r12d, [r14]
                mov     edx, 6
                mov     r11, [r13+0]
                mov     ecx, r15d
                lea     ebx, [rdx-5]

loc_140A0E8DC:                          ; CODE XREF: sub_140A0E0FC+7ED↓j
                mov     [rax], r10
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_140A0E8DC
                mov     rdx, rbx
                test    ecx, ecx
                jz      short loc_140A0E8FD

loc_140A0E8F2:                          ; CODE XREF: sub_140A0E0FC+7FF↓j
                mov     [rax], r10b
                add     rax, rbx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A0E8F2

loc_140A0E8FD:                          ; CODE XREF: sub_140A0E0FC+7F4↑j
                mov     [rsi], r9d
                lea     rcx, [r11+r12]
                mov     [rsi+8], r11
                mov     r9, r11
                mov     [rsi+10h], r12d
                mov     rax, r11
                add     [rdi+828h], r12d
                mov     ebx, [rdi+814h]
                mov     r15, [rdi+818h]
                cmp     r11, rcx
                jnb     short loc_140A0E937

loc_140A0E92B:                          ; CODE XREF: sub_140A0E0FC+839↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A0E92B

loc_140A0E937:                          ; CODE XREF: sub_140A0E0FC+82D↑j
                mov     r10d, r12d
                mov     r8, r15
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A0E9A6
                mov     rdi, 7010008004002001h

loc_140A0E950:                          ; CODE XREF: sub_140A0E0FC+8A4↓j
                mov     eax, 8

loc_140A0E955:                          ; CODE XREF: sub_140A0E0FC+86F↓j
                xor     r8, [r9]
                mov     ecx, ebx
                rol     r8, cl
                xor     r8, [r9+8]
                add     r9, 10h
                rol     r8, cl
                sub     rax, rdx
                jnz     short loc_140A0E955
                mov     rcx, r9
                sub     rcx, r11
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     ebx, eax
                mov     [rbp+140h+var_A8], rdx
                xor     ebx, edx
                mov     edx, 1
                and     ebx, 3Fh
                cmovz   ebx, edx
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A0E950
                mov     rdi, [rbp+140h+var_1B0]

loc_140A0E9A6:                          ; CODE XREF: sub_140A0E0FC+848↑j
                mov     edx, r12d
                mov     r11d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A0E9D1
                mov     eax, edx
                shr     rax, 3

loc_140A0E9BD:                          ; CODE XREF: sub_140A0E0FC+8D3↓j
                xor     r8, [r9]
                mov     ecx, ebx
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r11
                jnz     short loc_140A0E9BD

loc_140A0E9D1:                          ; CODE XREF: sub_140A0E0FC+8B9↑j
                xor     r10d, r10d
                test    edx, edx
                jz      short loc_140A0E9EC

loc_140A0E9D8:                          ; CODE XREF: sub_140A0E0FC+8EE↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, ebx
                xor     r8, rax
                add     r9, r11
                rol     r8, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A0E9D8

loc_140A0E9EC:                          ; CODE XREF: sub_140A0E0FC+8DA↑j
                mov     rax, r8
                jmp     short loc_140A0E9F4
; ---------------------------------------------------------------------------

loc_140A0E9F1:                          ; CODE XREF: sub_140A0E0FC+8FF↓j
                xor     r8d, eax

loc_140A0E9F4:                          ; CODE XREF: sub_140A0E0FC+8F3↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0E9F1
                mov     r9d, dword ptr [rsp+240h+var_1F0]
                lea     r15d, [rax+30h]
                btr     r8d, 1Fh
                add     r14, 4
                mov     [rsi+14h], r8d
                add     r13, 8
                add     [rdi+828h], r12d
                add     rsi, r15
                sub     [rsp+240h+var_1D0], r11
                mov     rax, rsi
                mov     [rbp+140h+var_118], rsi
                jnz     loc_140A0E8CA
                mov     r14, [rbp+140h+var_1B8]
                mov     rsi, [rsp+240h+var_1F8]
                mov     ebx, [rsp+240h+var_1E0]
                mov     dword ptr [r14], 2Ch ; ','
                mov     [r14+18h], rsi
                test    dword ptr [rdi+990h], 10200000h
                jnz     short loc_140A0EA7F
                test    ebx, ebx
                jnz     short loc_140A0EA83
                test    dword ptr [rdi+994h], 8000h
                jz      short loc_140A0EA88
                or      [r14+20h], r11d
                mov     rdx, rsi
                mov     rcx, rdi
                call    sub_140A11C50
                test    eax, eax
                jz      short loc_140A0EA88
                or      dword ptr [r14+20h], 4

loc_140A0EA7F:                          ; CODE XREF: sub_140A0E0FC+959↑j
                test    ebx, ebx
                jz      short loc_140A0EA88

loc_140A0EA83:                          ; CODE XREF: sub_140A0E0FC+95D↑j
                or      dword ptr [r14+20h], 2

loc_140A0EA88:                          ; CODE XREF: sub_140A0E0FC+969↑j
                                        ; sub_140A0E0FC+97C↑j ...
                mov     r13d, [rbp+140h+arg_18]
                lea     rax, [rbp+140h+var_178]
                mov     r8d, dword ptr [rsp+240h+var_1D8+4]
                lea     rcx, [rbp+140h+var_1A8]
                mov     rdx, [rsp+240h+var_1E8]
                mov     r9, rsi
                mov     qword ptr [rsp+240h+var_208], rax
                lea     rax, [rbp+140h+var_1A0]
                mov     [rsp+240h+var_210], rax
                mov     dword ptr [rsp+240h+var_218], r13d
                mov     [rsp+240h+var_220], ebx
                mov     [rbp+140h+var_1A8], rdi
                mov     [rsp+78h], rdi
                call    sub_140A10098
                xor     r8d, r8d
                mov     ecx, eax
                test    eax, eax
                js      loc_140A0FE8B
                sub     r14, [rsp+78h]
                lea     edx, [r8+6]
                mov     rdi, [rbp+140h+var_1A8]
                lea     ebx, [rdx-5]
                mov     r9d, [rbp+140h+var_178]
                add     r14, rdi
                sub     r9d, [rbp+140h+var_1A0]
                mov     ecx, r15d
                mov     r11d, [rbp+140h+var_1A0]
                mov     [rbp+140h+var_1B8], r14
                add     r11, rsi
                lea     r12, [r14+0C0h]
                mov     [rbp+140h+var_138], r14
                mov     rax, r12
                mov     [rsp+78h], rdi

loc_140A0EB12:                          ; CODE XREF: sub_140A0E0FC+A23↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_140A0EB12
                mov     rdx, rbx
                test    ecx, ecx
                jz      short loc_140A0EB33

loc_140A0EB28:                          ; CODE XREF: sub_140A0E0FC+A35↓j
                mov     [rax], r8b
                add     rax, rbx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A0EB28

loc_140A0EB33:                          ; CODE XREF: sub_140A0E0FC+A2A↑j
                mov     eax, dword ptr [rsp+240h+var_1F0]
                mov     r10, r11
                mov     [r12], eax
                mov     rax, r11
                mov     [r12+8], r11
                mov     [r12+10h], r9d
                add     [rdi+828h], r9d
                mov     esi, [rdi+814h]
                mov     r15, [rdi+818h]
                mov     ecx, r9d
                add     rcx, r11
                cmp     r11, rcx
                jnb     short loc_140A0EB76

loc_140A0EB6A:                          ; CODE XREF: sub_140A0E0FC+A78↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A0EB6A

loc_140A0EB76:                          ; CODE XREF: sub_140A0E0FC+A6C↑j
                mov     ebx, r9d
                mov     r8, r15
                shr     ebx, 7
                test    ebx, ebx
                jz      short loc_140A0EBF5
                mov     r13, 7010008004002001h

loc_140A0EB8D:                          ; CODE XREF: sub_140A0E0FC+AE9↓j
                mov     edx, 8
                lea     r12d, [rdx-7]

loc_140A0EB96:                          ; CODE XREF: sub_140A0E0FC+AB6↓j
                mov     rax, [r10]
                mov     ecx, esi
                xor     rax, r8
                mov     r8, [r10+8]
                rol     rax, cl
                add     r10, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r12
                jnz     short loc_140A0EB96
                mov     rcx, r10
                sub     rcx, r11
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rbp+140h+var_A0], rdx
                xor     esi, eax
                mov     rdx, r12
                and     esi, 3Fh
                cmovz   esi, r12d
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A0EB8D
                mov     r13d, [rbp+140h+arg_18]
                lea     r12, [r14+0C0h]

loc_140A0EBF5:                          ; CODE XREF: sub_140A0E0FC+A85↑j
                and     r9d, 7Fh
                cmp     r9d, 8
                jb      short loc_140A0EC2D
                mov     edx, r9d
                mov     r13d, 1
                shr     rdx, 3

loc_140A0EC0C:                          ; CODE XREF: sub_140A0E0FC+B23↓j
                xor     r8, [r10]
                mov     ecx, esi
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A0EC0C
                mov     r13d, [rbp+140h+arg_18]
                mov     edx, 1

loc_140A0EC2D:                          ; CODE XREF: sub_140A0E0FC+B01↑j
                xor     r11d, r11d
                test    r9d, r9d
                jz      short loc_140A0EC4A

loc_140A0EC35:                          ; CODE XREF: sub_140A0E0FC+B4C↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, esi
                xor     r8, rax
                add     r10, rdx
                rol     r8, cl
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A0EC35

loc_140A0EC4A:                          ; CODE XREF: sub_140A0E0FC+B37↑j
                mov     rax, r8
                jmp     short loc_140A0EC52
; ---------------------------------------------------------------------------

loc_140A0EC4F:                          ; CODE XREF: sub_140A0E0FC+B5D↓j
                xor     r8d, eax

loc_140A0EC52:                          ; CODE XREF: sub_140A0E0FC+B51↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0EC4F
                mov     edx, [rsp+240h+var_1E0]
                btr     r8d, 1Fh
                mov     [r12+14h], r8d
                lea     r12d, [rax+30h]
                mov     [r14+0F0h], r12d
                cmp     [r14+100h], r11d
                jz      short loc_140A0EC98
                mov     eax, [r14+108h]
                test    edx, edx
                mov     ecx, r11d
                setnz   cl
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [r14+108h], ecx

loc_140A0EC98:                          ; CODE XREF: sub_140A0E0FC+B7F↑j
                lea     rsi, [r14+60h]
                mov     [rsp+78h], rdi
                mov     r10d, 1
                mov     [rbp+140h+var_120], rsi
                and     r13d, r10d
                mov     eax, edx
                neg     eax
                sbb     r15d, r15d
                neg     r15d
                add     r15d, 0Dh
                test    rsi, rsi
                jnz     loc_140A0EF3B
                mov     esi, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                lea     eax, [rsi+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A0EDC7
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                xor     r11d, r11d
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A0EDBD
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A0EDAE
                mov     eax, [rdi+7E4h]
                lea     r9d, [r11+1]
                mov     r8, [rdi+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A0ED44
                mov     ecx, eax
                shr     rcx, 3

loc_140A0ED35:                          ; CODE XREF: sub_140A0E0FC+C46↓j
                mov     [rdi], r11
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r9
                jnz     short loc_140A0ED35

loc_140A0ED44:                          ; CODE XREF: sub_140A0E0FC+C31↑j
                test    eax, eax
                jz      short loc_140A0ED53

loc_140A0ED48:                          ; CODE XREF: sub_140A0E0FC+C55↓j
                mov     [rdi], r11b
                add     rdi, r9
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A0ED48

loc_140A0ED53:                          ; CODE XREF: sub_140A0E0FC+C4A↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A0ED96
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A0ED8D
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A0EDA5
; ---------------------------------------------------------------------------

loc_140A0ED8D:                          ; CODE XREF: sub_140A0E0FC+C7A↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A0ED9D
; ---------------------------------------------------------------------------

loc_140A0ED96:                          ; CODE XREF: sub_140A0E0FC+C66↑j
                mov     rax, [rbx+368h]

loc_140A0ED9D:                          ; CODE XREF: sub_140A0E0FC+C98↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A0EDA5:                          ; CODE XREF: sub_140A0E0FC+C8F↑j
                mov     [rbx+924h], edi
                xor     r11d, r11d

loc_140A0EDAE:                          ; CODE XREF: sub_140A0E0FC+C07↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                mov     r10d, 1
                jmp     short loc_140A0EDD0
; ---------------------------------------------------------------------------

loc_140A0EDBD:                          ; CODE XREF: sub_140A0E0FC+BF8↑j
                                        ; sub_140A0E0FC+EEA↓j ...
                mov     ecx, 0C000009Ah
                jmp     loc_140A0FE8B
; ---------------------------------------------------------------------------

loc_140A0EDC7:                          ; CODE XREF: sub_140A0E0FC+BDF↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A0EDD0:                          ; CODE XREF: sub_140A0E0FC+CBF↑j
                add     [rbx+80Ch], r10d
                mov     ecx, r12d
                add     rsi, rbx
                mov     edx, 6
                mov     [rbp+140h+var_98], rsi
                mov     rax, rsi

loc_140A0EDEC:                          ; CODE XREF: sub_140A0E0FC+CFD↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r10
                jnz     short loc_140A0EDEC
                test    ecx, ecx
                jz      short loc_140A0EE0A

loc_140A0EDFF:                          ; CODE XREF: sub_140A0E0FC+D0C↓j
                mov     [rax], r11b
                add     rax, r10
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A0EDFF

loc_140A0EE0A:                          ; CODE XREF: sub_140A0E0FC+D01↑j
                mov     r12, [rbp+140h+var_1C0]
                mov     [rsi], r15d
                mov     r9, r12
                mov     r15d, dword ptr [rsp+240h+var_200]
                mov     [rsi+8], r12
                mov     [rsi+10h], r15d
                add     [rbx+828h], r15d
                mov     r11d, [rbx+814h]
                lea     rcx, [r12+r15]
                mov     rdi, [rbx+818h]
                cmp     r12, rcx
                jnb     short loc_140A0EE4E
                mov     rax, r12

loc_140A0EE42:                          ; CODE XREF: sub_140A0E0FC+D50↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A0EE42

loc_140A0EE4E:                          ; CODE XREF: sub_140A0E0FC+D41↑j
                mov     r10d, r15d
                mov     r8, rdi
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A0EEC8
                mov     r15d, 1
                mov     r14, 7010008004002001h

loc_140A0EE6D:                          ; CODE XREF: sub_140A0E0FC+DC1↓j
                mov     eax, 8

loc_140A0EE72:                          ; CODE XREF: sub_140A0E0FC+D8D↓j
                xor     r8, [r9]
                mov     ecx, r11d
                rol     r8, cl
                xor     r8, [r9+8]
                add     r9, 10h
                rol     r8, cl
                sub     rax, r15
                jnz     short loc_140A0EE72
                mov     rcx, r9
                sub     rcx, r12
                xor     rcx, rdi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     r11d, eax
                mov     [rbp+140h+var_90], rdx
                xor     r11d, edx
                and     r11d, 3Fh
                cmovz   r11d, r15d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A0EE6D
                mov     r14, [rbp+140h+var_1B8]
                mov     r15d, dword ptr [rsp+240h+var_200]

loc_140A0EEC8:                          ; CODE XREF: sub_140A0E0FC+D5F↑j
                mov     edx, r15d
                mov     r10d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A0EEF4
                mov     eax, edx
                shr     rax, 3

loc_140A0EEDF:                          ; CODE XREF: sub_140A0E0FC+DF6↓j
                xor     r8, [r9]
                mov     ecx, r11d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r10
                jnz     short loc_140A0EEDF

loc_140A0EEF4:                          ; CODE XREF: sub_140A0E0FC+DDB↑j
                test    edx, edx
                jz      short loc_140A0EF0D

loc_140A0EEF8:                          ; CODE XREF: sub_140A0E0FC+E0F↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     r8, rax
                add     r9, r10
                rol     r8, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A0EEF8

loc_140A0EF0D:                          ; CODE XREF: sub_140A0E0FC+DFA↑j
                mov     rax, r8
                shr     rax, 1Fh
                xor     r11d, r11d
                jmp     short loc_140A0EF20
; ---------------------------------------------------------------------------

loc_140A0EF19:                          ; CODE XREF: sub_140A0E0FC+E27↓j
                xor     r8d, eax
                shr     rax, 1Fh

loc_140A0EF20:                          ; CODE XREF: sub_140A0E0FC+E1B↑j
                test    rax, rax
                jnz     short loc_140A0EF19
                btr     r8d, 1Fh
                mov     [rbp+140h+var_120], rsi
                mov     [rsi+14h], r8d
                add     [rbx+828h], r15d
                jmp     short loc_140A0EF4A
; ---------------------------------------------------------------------------

loc_140A0EF3B:                          ; CODE XREF: sub_140A0E0FC+BC3↑j
                mov     r12, [rbp+140h+var_1C0]
                mov     rbx, rdi
                mov     [rsi], r15d
                mov     r15d, dword ptr [rsp+240h+var_200]

loc_140A0EF4A:                          ; CODE XREF: sub_140A0E0FC+E3D↑j
                test    dword ptr [rbx+990h], 40000000h
                mov     r9, rsi
                jz      short loc_140A0EF73
                test    r15d, r15d
                jz      short loc_140A0EF73
                add     r9, 1Ch
                mov     r8d, r15d
                mov     rdx, r12
                mov     rcx, rbx
                call    sub_1403EA0CC
                xor     r11d, r11d

loc_140A0EF73:                          ; CODE XREF: sub_140A0E0FC+E5B↑j
                                        ; sub_140A0E0FC+E60↑j
                mov     [rsi+18h], r11d
                mov     r12d, 1
                test    r13d, r13d
                jz      short loc_140A0EF86
                mov     [rsi+18h], r12d

loc_140A0EF86:                          ; CODE XREF: sub_140A0E0FC+E84↑j
                cmp     [rsp+240h+var_1E0], r11d
                mov     ecx, r11d
                mov     rsi, [rsp+240h+var_1F8]
                mov     [rsp+78h], rbx
                setnz   cl
                mov     eax, [r14+0B8h]
                and     eax, 0FFFFFFFEh
                mov     dword ptr [r14+90h], 23h ; '#'
                or      ecx, eax
                cmp     dword ptr [r14+0A0h], 94h
                mov     [r14+0B8h], ecx
                jb      loc_140A0F04A
                mov     rax, [rbx+1F8h]
                mov     rcx, rsi
                mov     rdi, [r14+98h]
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                test    rax, rax
                jz      loc_140A0EDBD
                mov     r8d, [rax+50h]
                mov     edx, [r14+0B8h]
                add     r8, rsi
                or      edx, 2
                mov     [r14+0B8h], edx
                mov     ecx, edx
                mov     rax, [rdi+70h]
                cmp     rax, rsi
                jb      short loc_140A0F028
                cmp     rax, r8
                jnb     short loc_140A0F028
                mov     rax, [rax]
                or      ecx, 4
                mov     [r14+0A8h], rax
                mov     [r14+0B8h], ecx

loc_140A0F028:                          ; CODE XREF: sub_140A0E0FC+F11↑j
                                        ; sub_140A0E0FC+F16↑j
                mov     rax, [rdi+78h]
                cmp     rax, rsi
                jb      short loc_140A0F04A
                cmp     rax, r8
                jnb     short loc_140A0F04A
                mov     rax, [rax]
                or      ecx, 8
                mov     [r14+0B0h], rax
                mov     [r14+0B8h], ecx

loc_140A0F04A:                          ; CODE XREF: sub_140A0E0FC+EC8↑j
                                        ; sub_140A0E0FC+F33↑j ...
                test    dword ptr [rbx+990h], 400000h
                mov     [rbp+140h+var_1A8], rbx
                jz      loc_140A0FE83
                mov     rax, [rbx+1F8h]
                mov     rcx, rsi
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                mov     [rbp+140h+var_1B8], rax
                mov     r14, rax
                test    rax, rax
                jz      loc_140A0E3C1
                movzx   r15d, word ptr [r14+6]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mov     ecx, dword ptr [rsp+240h+var_1D8+4]
                mul     rcx
                mov     word ptr [rbp+140h+arg_18], r15w
                mov     r9, rdx
                shr     r9, 3
                mov     [rsp+240h+var_1D0], r9
                test    r15w, r15w
                jnz     short loc_140A0F110
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0FF6E
                cmp     [rbx+8F8h], r11d
                jnz     loc_140A0E3C1
                mov     [rbx+8F8h], r12d

loc_140A0F0D4:                          ; CODE XREF: sub_140A0E0FC+12C4↓j
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     [rbx+900h], rax

loc_140A0F0E8:                          ; CODE XREF: sub_140A0E0FC+1305↓j
                xor     edx, edx
                mov     [rbx+908h], r11
                mov     rcx, rbx
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], rsi
                call    sub_140A113CC
                jmp     loc_140A0E3C1
; ---------------------------------------------------------------------------

loc_140A0F110:                          ; CODE XREF: sub_140A0E0FC+FB2↑j
                mov     rdx, [rsp+240h+var_1E8]
                lea     r13, [r14+18h]
                mov     eax, r9d
                mov     ecx, r11d
                movzx   r10d, r15w
                mov     rdi, rdx
                mov     dword ptr [rsp+240h+var_200], ecx
                mov     r8, 0A3A03F5891C8B4E8h
                mov     dword ptr [rsp+240h+var_1F0], r10d
                lea     r12, [rax+rax*2]
                shl     r12, 2
                mov     [rbp+140h+var_158], r12
                lea     rax, [r12+rdx]
                mov     [rbp+140h+var_1C0], rax
                movzx   eax, word ptr [r14+14h]
                add     r13, rax
                mov     [rbp+140h+var_1B0], r13
                test    r10d, r10d
                jz      loc_140A0F380
                lea     r12, [r13+8]
                mov     r8d, 1

loc_140A0F16C:                          ; CODE XREF: sub_140A0E0FC+125F↓j
                mov     r15d, [r12+8]
                mov     eax, [r12]
                cmp     r15d, eax
                mov     edx, [r12+4]
                cmovbe  r15d, eax
                mov     dword ptr [rsp+240h+var_1D8], edx
                add     r15d, edx
                test    ecx, ecx
                jz      short loc_140A0F1A2
                lea     eax, [rcx-1]
                lea     rax, [rax+rax*4]
                cmp     r15d, [r13+rax*8+0Ch]
                jb      loc_140A0F39C
                mov     ecx, dword ptr [rsp+240h+var_200]

loc_140A0F1A2:                          ; CODE XREF: sub_140A0E0FC+108E↑j
                cmp     rdi, [rbp+140h+var_1C0]
                jz      loc_140A0F34D

loc_140A0F1AC:                          ; CODE XREF: sub_140A0E0FC+1238↓j
                mov     ecx, [rdi]
                mov     eax, [rdi+4]
                cmp     ecx, r15d
                jnb     loc_140A0F33A
                cmp     eax, edx
                jbe     loc_140A0F33A
                cmp     ecx, edx
                jb      loc_140A0F3C5
                cmp     eax, r15d
                ja      loc_140A0F3C5
                mov     eax, [rdi+8]
                mov     ecx, 1
                test    cl, al
                jnz     short loc_140A0F1EA
                mov     al, [rax+rsi]
                test    al, 20h
                jz      loc_140A0F32C

loc_140A0F1EA:                          ; CODE XREF: sub_140A0E0FC+10E1↑j
                mov     eax, [r12]
                mov     rcx, rdi
                mov     esi, [r12+8]
                cmp     esi, eax
                mov     r13d, [r12+4]
                mov     rdx, [rsp+240h+var_1F8]
                cmovbe  esi, eax
                mov     rax, [rbx+418h]
                add     esi, r13d
                call    j__guard_dispatch_icall_nop
                mov     r14, rax
                cmp     [rax], r13d
                jb      short loc_140A0F221
                cmp     [rax+4], esi
                jbe     short loc_140A0F28D

loc_140A0F221:                          ; CODE XREF: sub_140A0E0FC+111E↑j
                mov     r8, [rsp+240h+var_1F8]
                mov     edx, r14d
                sub     edx, r8d
                mov     eax, 80000000h
                or      edx, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A10013
                xor     ecx, ecx
                cmp     [rbx+8F8h], ecx
                jnz     short loc_140A0F28D
                mov     [rbx+908h], rcx
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+900h], rax
                xor     edx, edx
                lea     eax, [rcx+1]
                mov     [rbx+918h], r8
                mov     rcx, rbx
                mov     [rbx+8F8h], eax
                call    sub_140A113CC

loc_140A0F28D:                          ; CODE XREF: sub_140A0E0FC+1123↑j
                                        ; sub_140A0E0FC+114F↑j
                mov     r8d, [r14]
                mov     rcx, r14
                add     r8, [rsp+240h+var_1F8]
                mov     rax, [rbx+420h]
                mov     rdx, [rsp+240h+var_1F8]
                call    j__guard_dispatch_icall_nop
                cmp     [rax], r13d
                jb      short loc_140A0F2B3
                cmp     [rax+4], esi
                jbe     short loc_140A0F320

loc_140A0F2B3:                          ; CODE XREF: sub_140A0E0FC+11B0↑j
                mov     rsi, [rsp+240h+var_1F8]
                mov     ecx, 80000000h
                sub     eax, esi
                or      eax, ecx
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0FFEA
                xor     r11d, r11d
                cmp     [rbx+8F8h], r11d
                jnz     short loc_140A0F328
                mov     rax, 0A3A03F5891C8B4E8h
                mov     [rbx+908h], r11
                add     rax, rbx
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+900h], rax
                xor     edx, edx
                lea     eax, [r11+1]
                mov     [rbx+918h], rsi
                mov     rcx, rbx
                mov     [rbx+8F8h], eax
                call    sub_140A113CC
                jmp     short loc_140A0F325
; ---------------------------------------------------------------------------

loc_140A0F320:                          ; CODE XREF: sub_140A0E0FC+11B5↑j
                mov     rsi, [rsp+240h+var_1F8]

loc_140A0F325:                          ; CODE XREF: sub_140A0E0FC+1222↑j
                xor     r11d, r11d

loc_140A0F328:                          ; CODE XREF: sub_140A0E0FC+11DF↑j
                mov     edx, dword ptr [rsp+240h+var_1D8]

loc_140A0F32C:                          ; CODE XREF: sub_140A0E0FC+10E8↑j
                add     rdi, 0Ch
                cmp     rdi, [rbp+140h+var_1C0]
                jnz     loc_140A0F1AC

loc_140A0F33A:                          ; CODE XREF: sub_140A0E0FC+10B8↑j
                                        ; sub_140A0E0FC+10C0↑j
                mov     ecx, dword ptr [rsp+240h+var_200]
                mov     r8d, 1
                mov     r10d, dword ptr [rsp+240h+var_1F0]
                mov     r13, [rbp+140h+var_1B0]

loc_140A0F34D:                          ; CODE XREF: sub_140A0E0FC+10AA↑j
                add     ecx, r8d
                add     r12, 28h ; '('
                mov     dword ptr [rsp+240h+var_200], ecx
                cmp     ecx, r10d
                jb      loc_140A0F16C
                mov     r9, [rsp+240h+var_1D0]
                mov     r8, 0A3A03F5891C8B4E8h
                mov     r14, [rbp+140h+var_1B8]
                movzx   r15d, word ptr [rbp+140h+arg_18]
                mov     r12, [rbp+140h+var_158]

loc_140A0F380:                          ; CODE XREF: sub_140A0E0FC+1060↑j
                cmp     rdi, [rbp+140h+var_1C0]
                jz      loc_140A0F419
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0FF96
                jmp     short loc_140A0F406
; ---------------------------------------------------------------------------

loc_140A0F39C:                          ; CODE XREF: sub_140A0E0FC+109C↑j
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A0FFC1
                cmp     [rbx+8F8h], r11d
                jnz     loc_140A0E3C1
                mov     [rbx+8F8h], r8d
                jmp     loc_140A0F0D4
; ---------------------------------------------------------------------------

loc_140A0F3C5:                          ; CODE XREF: sub_140A0E0FC+10C8↑j
                                        ; sub_140A0E0FC+10D1↑j
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A10039
                cmp     [rbx+8F8h], r11d
                jnz     loc_140A0E3C1
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rbx

loc_140A0F3EF:                          ; CODE XREF: sub_140A0E0FC+131B↓j
                mov     [rbx+900h], rax
                mov     eax, 1
                mov     [rbx+8F8h], eax
                jmp     loc_140A0F0E8
; ---------------------------------------------------------------------------

loc_140A0F406:                          ; CODE XREF: sub_140A0E0FC+129E↑j
                cmp     [rbx+8F8h], r11d
                jnz     loc_140A0E3C1
                lea     rax, [rbx+r8]
                jmp     short loc_140A0F3EF
; ---------------------------------------------------------------------------

loc_140A0F419:                          ; CODE XREF: sub_140A0E0FC+1288↑j
                test    r9d, r9d
                jz      short loc_140A0F427
                lea     ecx, [r9+6]
                and     ecx, 0FFFFFFF8h
                jmp     short loc_140A0F42A
; ---------------------------------------------------------------------------

loc_140A0F427:                          ; CODE XREF: sub_140A0E0FC+1320↑j
                mov     ecx, r11d

loc_140A0F42A:                          ; CODE XREF: sub_140A0E0FC+1329↑j
                mov     edi, [rbx+7E4h]
                lea     eax, [r10+r10*2]
                mov     r8d, [rbx+924h]
                lea     ecx, [rcx+rax*8]
                lea     eax, [rdi+30h]
                add     eax, ecx
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A0F538
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     [rbp+140h+var_1B8], rax
                mov     rsi, rax
                test    rax, rax
                jz      loc_140A0EDBD
                mov     edx, [rbx+990h]
                test    dl, 4
                jnz     loc_140A0F525
                mov     ecx, [rbx+7E4h]
                and     edx, 20000000h
                mov     r9, [rbx+7C8h]
                neg     edx
                lea     edx, [r11+1]
                sbb     r8d, r8d
                and     r8d, [rbx+924h]
                cmp     ecx, 8
                jb      short loc_140A0F4B8
                mov     eax, ecx
                shr     rax, 3

loc_140A0F4A9:                          ; CODE XREF: sub_140A0E0FC+13BA↓j
                mov     [rbx], r11
                add     ecx, 0FFFFFFF8h
                add     rbx, 8
                sub     rax, rdx
                jnz     short loc_140A0F4A9

loc_140A0F4B8:                          ; CODE XREF: sub_140A0E0FC+13A5↑j
                test    ecx, ecx
                jz      short loc_140A0F4C7

loc_140A0F4BC:                          ; CODE XREF: sub_140A0E0FC+13C9↓j
                mov     [rbx], r11b
                add     rbx, rdx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A0F4BC

loc_140A0F4C7:                          ; CODE XREF: sub_140A0E0FC+13BE↑j
                mov     ebx, [rsi+924h]
                mov     [rsi+924h], r8d
                cmp     r8d, 3
                jz      short loc_140A0F50D
                test    dword ptr [rsi+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, r8d
                test    ecx, ecx
                jz      short loc_140A0F504
                mov     rax, [rsi+228h]
                lea     rcx, [r9-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A0F51C
; ---------------------------------------------------------------------------

loc_140A0F504:                          ; CODE XREF: sub_140A0E0FC+13F1↑j
                mov     rax, [rsi+100h]
                jmp     short loc_140A0F514
; ---------------------------------------------------------------------------

loc_140A0F50D:                          ; CODE XREF: sub_140A0E0FC+13DC↑j
                mov     rax, [rsi+368h]

loc_140A0F514:                          ; CODE XREF: sub_140A0E0FC+140F↑j
                mov     rcx, r9
                call    j__guard_dispatch_icall_nop

loc_140A0F51C:                          ; CODE XREF: sub_140A0E0FC+1406↑j
                mov     [rsi+924h], ebx
                xor     r11d, r11d

loc_140A0F525:                          ; CODE XREF: sub_140A0E0FC+1379↑j
                and     dword ptr [rsi+990h], 0FFFFFFFBh
                mov     r9, [rsp+240h+var_1D0]
                mov     r10d, dword ptr [rsp+240h+var_1F0]
                jmp     short loc_140A0F545
; ---------------------------------------------------------------------------

loc_140A0F538:                          ; CODE XREF: sub_140A0E0FC+134D↑j
                mov     rsi, rbx
                mov     [rbp+140h+var_1B8], rbx
                mov     [rbx+7E4h], eax

loc_140A0F545:                          ; CODE XREF: sub_140A0E0FC+143A↑j
                mov     ebx, 1
                lea     rdx, [rsi+rdi]
                add     [rsi+80Ch], ebx
                mov     rax, rdx
                mov     [rbp+140h+var_88], rdx
                lea     ecx, [rbx+5]
                lea     r8d, [rbx+2Fh]

loc_140A0F565:                          ; CODE XREF: sub_140A0E0FC+1477↓j
                mov     [rax], r11
                add     r8d, 0FFFFFFF8h
                add     rax, 8
                sub     rcx, rbx
                jnz     short loc_140A0F565
                test    r8d, r8d
                jz      short loc_140A0F586

loc_140A0F57A:                          ; CODE XREF: sub_140A0E0FC+1488↓j
                mov     [rax], r11b
                add     rax, rbx
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A0F57A

loc_140A0F586:                          ; CODE XREF: sub_140A0E0FC+147C↑j
                mov     rax, [rsp+240h+var_1E8]
                mov     [rdx+8], rax
                mov     dword ptr [rdx], 1Eh
                mov     [rdx+10h], r11d
                mov     rcx, [rsi+818h]
                mov     rax, rcx
                jmp     short loc_140A0F5A7
; ---------------------------------------------------------------------------

loc_140A0F5A5:                          ; CODE XREF: sub_140A0E0FC+14B2↓j
                xor     ecx, eax

loc_140A0F5A7:                          ; CODE XREF: sub_140A0E0FC+14A7↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0F5A5
                mov     rax, [rsp+240h+var_1F8]
                btr     ecx, 1Fh
                cmp     [rsp+240h+var_1E0], r11d
                mov     r8d, 0FFFEh
                mov     [rdx+14h], ecx
                mov     rbx, rsi
                mov     [rdx+18h], rax
                mov     ecx, r11d
                mov     eax, [r14+50h]
                setnz   cl
                mov     [rdx+20h], eax
                mov     eax, dword ptr [rsp+240h+var_1D8+4]
                mov     [rdx+24h], eax
                mov     [rdx+28h], r15w
                movzx   eax, word ptr [rdx+2Ah]
                and     ax, r8w
                mov     [rbp+140h+var_50], rdx
                or      cx, ax
                mov     [rbp+140h+var_1A8], rbx
                mov     [rdx+2Ah], cx
                lea     rcx, [rdx+30h]
                mov     qword ptr [rsp+240h+var_1E0], rcx
                test    r9d, r9d
                jz      short loc_140A0F620
                lea     edi, [r9-1]
                add     rdi, 7
                and     rdi, 0FFFFFFFFFFFFFFF8h
                add     rdi, rcx
                jmp     short loc_140A0F623
; ---------------------------------------------------------------------------

loc_140A0F620:                          ; CODE XREF: sub_140A0E0FC+1511↑j
                mov     rdi, rcx

loc_140A0F623:                          ; CODE XREF: sub_140A0E0FC+1522↑j
                movzx   eax, word ptr [rdx+28h]
                xor     edx, edx
                test    r9d, r9d
                mov     [rsp+240h+var_1D0], rdi
                mov     r9, [rsp+240h+var_1E8]
                lea     r11d, [rdx+0Ch]
                cmovz   r11, r12
                lea     rcx, [rax+rax*2]
                add     r11, r9
                lea     r8, [rdi+rcx*8]
                mov     [rbp+140h+var_158], r8
                lea     r14d, [rdx+1]
                mov     [rsp+240h+var_1F0], r11
                test    r10d, r10d
                jz      short loc_140A0F685
                mov     edx, r10d
                lea     rax, [rdi+8]
                xor     r10d, r10d
                mov     r15d, 80000000h

loc_140A0F66B:                          ; CODE XREF: sub_140A0E0FC+1587↓j
                mov     ecx, 2

loc_140A0F670:                          ; CODE XREF: sub_140A0E0FC+1582↓j
                mov     [rax-8], r10
                mov     [rax], r15d
                add     rax, 0Ch
                sub     rcx, r14
                jnz     short loc_140A0F670
                sub     rdx, r14
                jnz     short loc_140A0F66B

loc_140A0F685:                          ; CODE XREF: sub_140A0E0FC+155D↑j
                cmp     rdi, r8
                jz      loc_140A0FE80

loc_140A0F68E:                          ; CODE XREF: sub_140A0E0FC+1D7B↓j
                mov     eax, [r13+24h]
                mov     r10d, edx
                bt      eax, 19h
                jb      loc_140A0F88C
                mov     ecx, [r13+0]
                cmp     ecx, 54494E49h
                jnz     short loc_140A0F6B9
                cmp     dword ptr [r13+4], 4742444Bh
                jz      loc_140A0F88C

loc_140A0F6B9:                          ; CODE XREF: sub_140A0E0FC+15AD↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A0F6F0
                movzx   eax, word ptr [r13+4]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_140A0F88C
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_140A0F88C
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_140A0F88C

loc_140A0F6F0:                          ; CODE XREF: sub_140A0E0FC+15C3↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A0F708
                mov     eax, 4154h
                cmp     [r13+4], ax
                jz      loc_140A0F88C

loc_140A0F708:                          ; CODE XREF: sub_140A0E0FC+15FA↑j
                mov     rax, [rsi+938h]
                mov     r8, r13
                mov     rdx, [rsi+930h]
                mov     r9d, 7
                mov     [rbp+140h+var_108], rax
                sub     r8, rdx
                mov     rax, [rsi+940h]
                or      ebx, 0FFFFFFFFh
                mov     [rbp+140h+var_100], rax
                mov     rax, [rsi+948h]
                mov     [rbp+140h+var_F8], rax
                mov     [rbp+140h+var_110], rdx

loc_140A0F743:                          ; CODE XREF: sub_140A0E0FC+1657↓j
                mov     cl, [r8+rdx]
                mov     al, [rdx]
                add     rdx, r14
                cmp     cl, al
                jnz     short loc_140A0F75A
                add     r9d, ebx
                jnz     short loc_140A0F743
                jmp     loc_140A0F7E1
; ---------------------------------------------------------------------------

loc_140A0F75A:                          ; CODE XREF: sub_140A0E0FC+1652↑j
                mov     r8, [rbp+140h+var_108]
                mov     edx, 8
                mov     r9, r13

loc_140A0F766:                          ; CODE XREF: sub_140A0E0FC+1683↓j
                mov     rcx, [r9]
                add     r9, 8
                mov     rax, [r8]
                add     r8, 8
                cmp     rcx, rax
                jnz     short loc_140A0F79B
                add     edx, 0FFFFFFF8h
                cmp     edx, 8
                jnb     short loc_140A0F766
                test    edx, edx
                jz      short loc_140A0F7E1

loc_140A0F785:                          ; CODE XREF: sub_140A0E0FC+169B↓j
                mov     cl, [r9]
                add     r9, r14
                mov     al, [r8]
                add     r8, r14
                cmp     cl, al
                jnz     short loc_140A0F79B
                add     edx, ebx
                jnz     short loc_140A0F785
                jmp     short loc_140A0F7E1
; ---------------------------------------------------------------------------

loc_140A0F79B:                          ; CODE XREF: sub_140A0E0FC+167B↑j
                                        ; sub_140A0E0FC+1697↑j
                mov     rdx, [rbp+140h+var_100]
                mov     r8, r13
                sub     r8, rdx
                mov     r9d, 4

loc_140A0F7AB:                          ; CODE XREF: sub_140A0E0FC+16BF↓j
                mov     cl, [r8+rdx]
                mov     al, [rdx]
                add     rdx, r14
                cmp     cl, al
                jnz     short loc_140A0F7BF
                add     r9d, ebx
                jnz     short loc_140A0F7AB
                jmp     short loc_140A0F7E1
; ---------------------------------------------------------------------------

loc_140A0F7BF:                          ; CODE XREF: sub_140A0E0FC+16BA↑j
                mov     rdx, [rbp+140h+var_F8]
                mov     r8, r13
                sub     r8, rdx
                mov     r9d, 6

loc_140A0F7CF:                          ; CODE XREF: sub_140A0E0FC+16E3↓j
                mov     cl, [r8+rdx]
                mov     al, [rdx]
                add     rdx, r14
                cmp     cl, al
                jnz     short loc_140A0F7E4
                add     r9d, ebx
                jnz     short loc_140A0F7CF

loc_140A0F7E1:                          ; CODE XREF: sub_140A0E0FC+1659↑j
                                        ; sub_140A0E0FC+1687↑j ...
                mov     r10d, r14d

loc_140A0F7E4:                          ; CODE XREF: sub_140A0E0FC+16DE↑j
                mov     r9, [rsp+240h+var_1E8]

loc_140A0F7E9:                          ; CODE XREF: sub_140A0E0FC+1793↓j
                mov     ecx, [r13+24h]
                xor     edx, edx
                test    ecx, ecx
                cmovs   r10d, r14d
                mov     [rbp+140h+arg_18], r10d
                test    r10d, r10d
                jz      short loc_140A0F82A
                cmp     dword ptr [r13+0], 54494E49h
                jnz     short loc_140A0F82A
                cmp     dword ptr [r13+4], 4742444Bh
                jnz     short loc_140A0F82A
                test    dword ptr [rsi+994h], 2000h
                cmovnz  r10d, edx
                mov     [rbp+140h+arg_18], r10d

loc_140A0F82A:                          ; CODE XREF: sub_140A0E0FC+1703↑j
                                        ; sub_140A0E0FC+170D↑j ...
                test    dword ptr [rsi+994h], 4000h
                jz      short loc_140A0F85D
                bt      ecx, 1Dh
                jnb     short loc_140A0F85D
                mov     rax, [rsp+240h+var_1F8]
                cmp     rax, [rsi+5E8h]
                jz      short loc_140A0F853
                cmp     rax, [rsi+5F0h]
                jnz     short loc_140A0F85D

loc_140A0F853:                          ; CODE XREF: sub_140A0E0FC+174C↑j
                mov     r10d, r14d
                mov     [rbp+140h+arg_18], r14d

loc_140A0F85D:                          ; CODE XREF: sub_140A0E0FC+1738↑j
                                        ; sub_140A0E0FC+173E↑j ...
                mov     ecx, [r13+10h]
                mov     eax, [r13+8]
                cmp     ecx, eax
                mov     r14d, [r13+0Ch]
                mov     r8, [rbp+140h+var_1C0]
                cmovbe  ecx, eax
                add     ecx, r14d
                mov     dword ptr [rsp+240h+var_1D8], r14d
                mov     dword ptr [rsp+240h+var_200], ecx
                cmp     r9, r8
                jz      short loc_140A0F894
                mov     r15d, [r9]
                mov     r12d, [r9+4]
                jmp     short loc_140A0F89A
; ---------------------------------------------------------------------------

loc_140A0F88C:                          ; CODE XREF: sub_140A0E0FC+159D↑j
                                        ; sub_140A0E0FC+15B7↑j ...
                mov     r10d, r14d
                jmp     loc_140A0F7E9
; ---------------------------------------------------------------------------

loc_140A0F894:                          ; CODE XREF: sub_140A0E0FC+1785↑j
                mov     r15d, edx
                mov     r12d, edx

loc_140A0F89A:                          ; CODE XREF: sub_140A0E0FC+178E↑j
                mov     dword ptr [rsp+240h+var_1D8+4], r12d
                mov     r13d, r14d
                jz      loc_140A0FA2E
                cmp     r15d, r14d
                jbe     loc_140A0FA2E
                cmp     r12d, ecx
                ja      loc_140A0FA2E
                test    r10d, r10d
                jnz     loc_140A0FA2E
                mov     [rdi], r14d
                lea     rcx, [rbp+140h+var_150]
                mov     [rdi+4], r15d
                mov     r9d, r15d
                mov     rdi, [rsp+240h+var_1F8]
                sub     r9d, r14d
                mov     ebx, r9d
                mov     r8d, edx
                mov     r13d, r15d
                lea     rdx, [rbp+140h+var_F0]
                lea     r11, [rdi+r14]
                add     rbx, r11

loc_140A0F8ED:                          ; CODE XREF: sub_140A0E0FC+1816↓j
                mov     r10, [rdx]
                mov     eax, [rcx]
                add     rax, r10
                cmp     r11, rax
                jnb     short loc_140A0F903
                cmp     rbx, r10
                ja      loc_140A0FA83

loc_140A0F903:                          ; CODE XREF: sub_140A0E0FC+17FC↑j
                inc     r8d
                add     rdx, 8
                add     rcx, 4
                cmp     r8d, 6
                jb      short loc_140A0F8ED
                add     [rsi+828h], r9d
                mov     r10, r11
                mov     edi, [rsi+814h]
                mov     rax, r11
                mov     r14, [rsi+818h]
                cmp     r11, rbx
                jnb     short loc_140A0F93F

loc_140A0F933:                          ; CODE XREF: sub_140A0E0FC+1841↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rbx
                jb      short loc_140A0F933

loc_140A0F93F:                          ; CODE XREF: sub_140A0E0FC+1835↑j
                mov     ebx, r9d
                xor     edx, edx
                shr     ebx, 7
                mov     r8, r14
                test    ebx, ebx
                jz      short loc_140A0F9B2
                lea     esi, [rdx+1]
                mov     r12, 7010008004002001h

loc_140A0F95B:                          ; CODE XREF: sub_140A0E0FC+18A9↓j
                mov     eax, 8

loc_140A0F960:                          ; CODE XREF: sub_140A0E0FC+187A↓j
                xor     r8, [r10]
                mov     ecx, edi
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, rsi
                jnz     short loc_140A0F960
                mov     rcx, r10
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     eax, edx
                mov     [rbp+140h+var_80], rdx
                xor     edi, eax
                and     edi, 3Fh
                cmovz   edi, esi
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A0F95B
                mov     rsi, [rbp+140h+var_1B8]
                xor     edx, edx
                mov     r12d, dword ptr [rsp+240h+var_1D8+4]

loc_140A0F9B2:                          ; CODE XREF: sub_140A0E0FC+1850↑j
                and     r9d, 7Fh
                mov     r11d, 1
                cmp     r9d, 8
                jb      short loc_140A0F9DE
                mov     eax, r9d
                shr     rax, 3

loc_140A0F9C9:                          ; CODE XREF: sub_140A0E0FC+18E0↓j
                xor     r8, [r10]
                mov     ecx, edi
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rax, r11
                jnz     short loc_140A0F9C9

loc_140A0F9DE:                          ; CODE XREF: sub_140A0E0FC+18C4↑j
                test    r9d, r9d
                jz      short loc_140A0F9F8

loc_140A0F9E3:                          ; CODE XREF: sub_140A0E0FC+18FA↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, edi
                xor     r8, rax
                add     r10, r11
                rol     r8, cl
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A0F9E3

loc_140A0F9F8:                          ; CODE XREF: sub_140A0E0FC+18E5↑j
                mov     rax, r8
                jmp     short loc_140A0FA00
; ---------------------------------------------------------------------------

loc_140A0F9FD:                          ; CODE XREF: sub_140A0E0FC+190B↓j
                xor     r8d, eax

loc_140A0FA00:                          ; CODE XREF: sub_140A0E0FC+18FF↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0F9FD
                mov     rax, [rsp+240h+var_1D0]
                btr     r8d, 1Fh
                mov     ecx, dword ptr [rsp+240h+var_200]
                mov     r14d, dword ptr [rsp+240h+var_1D8]
                mov     r11, [rsp+240h+var_1F0]
                mov     r9, [rsp+240h+var_1E8]
                mov     [rax+8], r8d
                mov     r8, [rbp+140h+var_1C0]

loc_140A0FA2E:                          ; CODE XREF: sub_140A0E0FC+17A6↑j
                                        ; sub_140A0E0FC+17AF↑j ...
                mov     rdi, [rsp+240h+var_1F8]

loc_140A0FA33:                          ; CODE XREF: sub_140A0E0FC+199B↓j
                cmp     r15d, r14d
                jb      loc_140A0FC9F
                cmp     r12d, ecx
                mov     r12d, [rbp+140h+arg_18]
                ja      loc_140A0FCA6
                cmp     r9, r8
                jz      loc_140A0FCA6
                mov     r15d, [r11+4]
                cmp     r15d, ecx
                ja      loc_140A0FCA6
                mov     rax, qword ptr [rsp+240h+var_1E0]
                mov     r14d, 1

loc_140A0FA6D:                          ; CODE XREF: sub_140A0E0FC+1B9B↓j
                cmp     r11, r8
                jz      loc_140A0FCA6
                test    r12d, r12d
                jz      short loc_140A0FA99
                mov     r8b, 80h
                jmp     loc_140A0FC65
; ---------------------------------------------------------------------------

loc_140A0FA83:                          ; CODE XREF: sub_140A0E0FC+1801↑j
                mov     ecx, dword ptr [rsp+240h+var_200]
                xor     edx, edx
                mov     r11, [rsp+240h+var_1F0]
                mov     r8, [rbp+140h+var_1C0]
                mov     r9, [rsp+240h+var_1E8]
                jmp     short loc_140A0FA33
; ---------------------------------------------------------------------------

loc_140A0FA99:                          ; CODE XREF: sub_140A0E0FC+197D↑j
                mov     ebx, [r9+4]
                mov     r13d, [r11]
                cmp     r13d, ebx
                jnb     short loc_140A0FAFD
                test    dword ptr [rsi+990h], 200000h
                jz      loc_140A10064
                cmp     [rsi+8F8h], edx
                jnz     short loc_140A0FAFD
                mov     [rsi+908h], rdx
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rsi
                mov     qword ptr [rsi+910h], 10Fh
                xor     edx, edx
                mov     [rsi+900h], rax
                mov     rcx, rsi
                mov     [rsi+918h], rdi
                mov     [rsi+8F8h], r14d
                call    sub_140A113CC
                xor     edx, edx

loc_140A0FAFD:                          ; CODE XREF: sub_140A0E0FC+19A7↑j
                                        ; sub_140A0E0FC+19BF↑j
                lea     r11, [rdi+rbx]
                mov     r9d, r13d
                sub     r9d, ebx
                lea     rcx, [rbp+140h+var_150]
                mov     ebx, r9d
                mov     r10d, edx
                add     rbx, r11
                lea     rdx, [rbp+140h+var_F0]

loc_140A0FB18:                          ; CODE XREF: sub_140A0E0FC+1A41↓j
                mov     r8, [rdx]
                mov     eax, [rcx]
                add     rax, r8
                cmp     r11, rax
                jnb     short loc_140A0FB2E
                cmp     rbx, r8
                ja      loc_140A0FC4D

loc_140A0FB2E:                          ; CODE XREF: sub_140A0E0FC+1A27↑j
                add     r10d, r14d
                add     rdx, 8
                add     rcx, 4
                cmp     r10d, 6
                jb      short loc_140A0FB18
                cmp     r9d, 4
                jb      loc_140A0FC4D
                add     [rsi+828h], r9d
                mov     r10, r11
                mov     edi, [rsi+814h]
                mov     rax, r11
                mov     r14, [rsi+818h]
                cmp     r11, rbx
                jnb     short loc_140A0FB74

loc_140A0FB68:                          ; CODE XREF: sub_140A0E0FC+1A76↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rbx
                jb      short loc_140A0FB68

loc_140A0FB74:                          ; CODE XREF: sub_140A0E0FC+1A6A↑j
                mov     ebx, r9d
                xor     edx, edx
                shr     ebx, 7
                mov     r8, r14
                test    ebx, ebx
                jz      short loc_140A0FBEB
                mov     rsi, 7010008004002001h
                lea     r12d, [rdx+1]

loc_140A0FB91:                          ; CODE XREF: sub_140A0E0FC+1AE0↓j
                mov     eax, 8

loc_140A0FB96:                          ; CODE XREF: sub_140A0E0FC+1AB0↓j
                xor     r8, [r10]
                mov     ecx, edi
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, r12
                jnz     short loc_140A0FB96
                mov     rcx, r10
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rbp+140h+var_78], rdx
                xor     edi, eax
                and     edi, 3Fh
                cmovz   edi, r12d
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A0FB91
                mov     rsi, [rbp+140h+var_1B8]
                xor     edx, edx
                mov     r12d, [rbp+140h+arg_18]

loc_140A0FBEB:                          ; CODE XREF: sub_140A0E0FC+1A85↑j
                and     r9d, 7Fh
                mov     r14d, 1
                cmp     r9d, 8
                jb      short loc_140A0FC17
                mov     eax, r9d
                shr     rax, 3

loc_140A0FC02:                          ; CODE XREF: sub_140A0E0FC+1B19↓j
                xor     r8, [r10]
                mov     ecx, edi
                rol     r8, cl
                add     r10, 8
                add     r9d, 0FFFFFFF8h
                sub     rax, r14
                jnz     short loc_140A0FC02

loc_140A0FC17:                          ; CODE XREF: sub_140A0E0FC+1AFD↑j
                test    r9d, r9d
                jz      short loc_140A0FC31

loc_140A0FC1C:                          ; CODE XREF: sub_140A0E0FC+1B33↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, edi
                xor     r8, rax
                add     r10, r14
                rol     r8, cl
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A0FC1C

loc_140A0FC31:                          ; CODE XREF: sub_140A0E0FC+1B1E↑j
                mov     rax, r8
                jmp     short loc_140A0FC39
; ---------------------------------------------------------------------------

loc_140A0FC36:                          ; CODE XREF: sub_140A0E0FC+1B44↓j
                xor     r8b, al

loc_140A0FC39:                          ; CODE XREF: sub_140A0E0FC+1B38↑j
                shr     rax, 7
                test    rax, rax
                jnz     short loc_140A0FC36
                mov     rdi, [rsp+240h+var_1F8]
                and     r8b, 7Fh
                jmp     short loc_140A0FC52
; ---------------------------------------------------------------------------

loc_140A0FC4D:                          ; CODE XREF: sub_140A0E0FC+1A2C↑j
                                        ; sub_140A0E0FC+1A47↑j
                xor     edx, edx
                mov     r8b, 80h

loc_140A0FC52:                          ; CODE XREF: sub_140A0E0FC+1B4F↑j
                mov     r9, [rsp+240h+var_1E8]
                mov     r11, [rsp+240h+var_1F0]
                mov     ecx, dword ptr [rsp+240h+var_200]
                mov     rax, qword ptr [rsp+240h+var_1E0]

loc_140A0FC65:                          ; CODE XREF: sub_140A0E0FC+1982↑j
                mov     [rax], r8b
                add     r9, 0Ch
                mov     rax, qword ptr [rsp+240h+var_1E0]
                add     r11, 0Ch
                mov     r8, [rbp+140h+var_1C0]
                add     rax, r14
                mov     [rsp+240h+var_1E8], r9
                mov     qword ptr [rsp+240h+var_1E0], rax
                mov     [rsp+240h+var_1F0], r11
                cmp     r11, r8
                jz      short loc_140A0FC94
                mov     r15d, [r11+4]

loc_140A0FC94:                          ; CODE XREF: sub_140A0E0FC+1B92↑j
                cmp     r15d, ecx
                jbe     loc_140A0FA6D
                jmp     short loc_140A0FCA6
; ---------------------------------------------------------------------------

loc_140A0FC9F:                          ; CODE XREF: sub_140A0E0FC+193A↑j
                mov     r12d, [rbp+140h+arg_18]

loc_140A0FCA6:                          ; CODE XREF: sub_140A0E0FC+194A↑j
                                        ; sub_140A0E0FC+1953↑j ...
                mov     rdi, [rsp+240h+var_1D0]
                test    r12d, r12d
                jnz     loc_140A0FE0E
                cmp     r13d, ecx
                jz      loc_140A0FE0E
                mov     r9d, ecx
                mov     r11d, r13d
                add     r11, [rsp+240h+var_1F8]
                lea     r15d, [r12+1]
                sub     r9d, r13d
                mov     [rdi+10h], ecx
                mov     ebx, r9d
                lea     rcx, [rbp+140h+var_150]
                mov     r8d, edx
                mov     [rdi+0Ch], r13d
                add     rbx, r11
                lea     rdx, [rbp+140h+var_F0]
                lea     r12d, [r15+7]

loc_140A0FCEC:                          ; CODE XREF: sub_140A0E0FC+1C14↓j
                mov     r10, [rdx]
                mov     eax, [rcx]
                add     rax, r10
                cmp     r11, rax
                jnb     short loc_140A0FD02
                cmp     rbx, r10
                ja      loc_140A0FE07

loc_140A0FD02:                          ; CODE XREF: sub_140A0E0FC+1BFB↑j
                add     r8d, r15d
                add     rdx, r12
                add     rcx, 4
                cmp     r8d, 6
                jb      short loc_140A0FCEC
                add     [rsi+828h], r9d
                mov     r10, r11
                mov     edi, [rsi+814h]
                mov     rax, r11
                mov     r14, [rsi+818h]
                cmp     r11, rbx
                jnb     short loc_140A0FD3D

loc_140A0FD31:                          ; CODE XREF: sub_140A0E0FC+1C3F↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rbx
                jb      short loc_140A0FD31

loc_140A0FD3D:                          ; CODE XREF: sub_140A0E0FC+1C33↑j
                mov     ebx, r9d
                xor     edx, edx
                shr     ebx, 7
                mov     r8, r14
                test    ebx, ebx
                jz      short loc_140A0FDA8
                mov     rsi, 7010008004002001h

loc_140A0FD56:                          ; CODE XREF: sub_140A0E0FC+1CA4↓j
                mov     rax, r12

loc_140A0FD59:                          ; CODE XREF: sub_140A0E0FC+1C74↓j
                xor     r8, [r10]
                mov     ecx, edi
                add     r10, r12
                rol     r8, cl
                xor     r8, [r10]
                add     r10, r12
                rol     r8, cl
                sub     rax, r15
                jnz     short loc_140A0FD59
                mov     rcx, r10
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rbp+140h+var_70], rdx
                xor     edi, eax
                and     edi, 3Fh
                cmovz   edi, r15d
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A0FD56
                mov     rsi, [rbp+140h+var_1B8]
                xor     edx, edx

loc_140A0FDA8:                          ; CODE XREF: sub_140A0E0FC+1C4E↑j
                and     r9d, 7Fh
                cmp     r9d, r12d
                jb      short loc_140A0FDCC
                mov     eax, r9d
                shr     rax, 3

loc_140A0FDB8:                          ; CODE XREF: sub_140A0E0FC+1CCE↓j
                xor     r8, [r10]
                mov     ecx, edi
                rol     r8, cl
                add     r10, r12
                add     r9d, 0FFFFFFF8h
                sub     rax, r15
                jnz     short loc_140A0FDB8

loc_140A0FDCC:                          ; CODE XREF: sub_140A0E0FC+1CB3↑j
                test    r9d, r9d
                jz      short loc_140A0FDE6

loc_140A0FDD1:                          ; CODE XREF: sub_140A0E0FC+1CE8↓j
                movzx   eax, byte ptr [r10]
                mov     ecx, edi
                xor     r8, rax
                add     r10, r15
                rol     r8, cl
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A0FDD1

loc_140A0FDE6:                          ; CODE XREF: sub_140A0E0FC+1CD3↑j
                mov     rax, r8
                jmp     short loc_140A0FDEE
; ---------------------------------------------------------------------------

loc_140A0FDEB:                          ; CODE XREF: sub_140A0E0FC+1CF9↓j
                xor     r8d, eax

loc_140A0FDEE:                          ; CODE XREF: sub_140A0E0FC+1CED↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A0FDEB
                mov     rdi, [rsp+240h+var_1D0]
                btr     r8d, 1Fh
                mov     [rdi+14h], r8d
                jmp     short loc_140A0FE09
; ---------------------------------------------------------------------------

loc_140A0FE07:                          ; CODE XREF: sub_140A0E0FC+1C00↑j
                xor     edx, edx

loc_140A0FE09:                          ; CODE XREF: sub_140A0E0FC+1D09↑j
                mov     r9, [rsp+240h+var_1E8]

loc_140A0FE0E:                          ; CODE XREF: sub_140A0E0FC+1BB2↑j
                                        ; sub_140A0E0FC+1BBB↑j
                mov     rcx, [rbp+140h+var_1C0]
                mov     r11, [rsp+240h+var_1F0]
                cmp     r9, rcx
                jz      short loc_140A0FE56
                mov     eax, dword ptr [rsp+240h+var_1D8]
                cmp     [r9], eax
                jb      short loc_140A0FE56
                mov     eax, dword ptr [rsp+240h+var_200]
                cmp     [r9+4], eax
                ja      short loc_140A0FE56
                cmp     r11, rcx
                jz      short loc_140A0FE4D
                mov     rax, qword ptr [rsp+240h+var_1E0]
                mov     byte ptr [rax], 80h
                inc     rax
                add     r11, 0Ch
                mov     qword ptr [rsp+240h+var_1E0], rax
                mov     [rsp+240h+var_1F0], r11

loc_140A0FE4D:                          ; CODE XREF: sub_140A0E0FC+1D36↑j
                add     r9, 0Ch
                mov     [rsp+240h+var_1E8], r9

loc_140A0FE56:                          ; CODE XREF: sub_140A0E0FC+1D1E↑j
                                        ; sub_140A0E0FC+1D27↑j ...
                mov     r13, [rbp+140h+var_1B0]
                add     rdi, 18h
                add     r13, 28h ; '('
                mov     [rsp+240h+var_1D0], rdi
                mov     [rbp+140h+var_1B0], r13
                cmp     rdi, [rbp+140h+var_158]
                jz      short loc_140A0FE7C
                mov     r14d, 1
                jmp     loc_140A0F68E
; ---------------------------------------------------------------------------

loc_140A0FE7C:                          ; CODE XREF: sub_140A0E0FC+1D73↑j
                mov     rbx, [rbp+140h+var_1A8]

loc_140A0FE80:                          ; CODE XREF: sub_140A0E0FC+158C↑j
                xor     r11d, r11d

loc_140A0FE83:                          ; CODE XREF: sub_140A0E0FC+F5C↑j
                mov     [rsp+78h], rbx
                mov     ecx, r11d

loc_140A0FE8B:                          ; CODE XREF: sub_140A0E0FC+2CA↑j
                                        ; sub_140A0E0FC+4DB↑j ...
                mov     r15d, [rbp+140h+arg_10]

loc_140A0FE92:                          ; CODE XREF: sub_140A0E0FC+55E↑j
                                        ; sub_140A0E0FC+581↑j ...
                mov     rax, [rsp+78h]
                mov     r12d, 80000000h
                mov     r14, [rbp+140h+arg_0]
                mov     [r14], rax
                lea     eax, [rcx+r12]
                test    r12d, eax
                jnz     short loc_140A0FEBF
                cmp     ecx, 0C000010Eh
                jz      short loc_140A0FEBF
                mov     eax, ecx
                jmp     loc_140A0FF5A
; ---------------------------------------------------------------------------

loc_140A0FEBF:                          ; CODE XREF: sub_140A0E0FC+1DB2↑j
                                        ; sub_140A0E0FC+1DBA↑j
                and     r15d, 0FFFFFFEFh
                mov     ecx, 80000004h
                mov     eax, r15d
                and     eax, ecx
                cmp     eax, ecx
                jz      loc_140A0FF58
                mov     rax, [rsp+78h]
                or      r15d, r12d
                mov     rsi, [rbp+140h+var_130]
                mov     rcx, rsi
                mov     rax, [rax+1F8h]
                call    j__guard_dispatch_icall_nop
                mov     ecx, [rax+94h]
                cmp     ecx, 14h
                jb      short loc_140A0FF58
                mov     eax, [rax+90h]
                lea     rdi, [rax+rcx]
                add     rdi, rsi
                lea     rbx, [rax+rsi]
                cmp     rbx, rdi
                jz      short loc_140A0FF58
                xor     ecx, ecx

loc_140A0FF13:                          ; CODE XREF: sub_140A0E0FC+1E5A↓j
                cmp     [rbx+0Ch], ecx
                jz      short loc_140A0FF58
                mov     eax, [rbx+10h]
                test    eax, eax
                jz      short loc_140A0FF58
                mov     rdx, [rax+rsi]
                test    rdx, rdx
                jz      short loc_140A0FF4F
                mov     r8d, r15d
                lea     rcx, [rsp+78h]
                call    sub_140A0E0FC
                mov     rcx, [rsp+78h]
                mov     [r14], rcx
                lea     ecx, [rax+r12]
                test    r12d, ecx
                jnz     short loc_140A0FF4D
                cmp     eax, 0C000010Eh
                jnz     short loc_140A0FF5A

loc_140A0FF4D:                          ; CODE XREF: sub_140A0E0FC+1E48↑j
                xor     ecx, ecx

loc_140A0FF4F:                          ; CODE XREF: sub_140A0E0FC+1E2A↑j
                add     rbx, 14h
                cmp     rbx, rdi
                jnz     short loc_140A0FF13

loc_140A0FF58:                          ; CODE XREF: sub_140A0E0FC+1DD3↑j
                                        ; sub_140A0E0FC+1DFD↑j ...
                xor     eax, eax

loc_140A0FF5A:                          ; CODE XREF: sub_140A0E0FC+65↑j
                                        ; sub_140A0E0FC+273↑j ...
                add     rsp, 208h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_140A0FF6E:                          ; CODE XREF: sub_140A0E0FC+FBE↑j
                xor     r9d, r9d
                mov     [rbp+140h+var_174], 0D0002D61h
                mov     ecx, [rbp+140h+var_174]
                mov     r8, rsi
                xor     ecx, 2D72h
                mov     qword ptr [rsp+240h+var_220], r11
                ror     ecx, 5Ch
                lea     edx, [r9+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0FF96:                          ; CODE XREF: sub_140A0E0FC+1298↑j
                mov     r9d, 3
                mov     [rbp+140h+var_160], 0D0002D61h
                mov     ecx, [rbp+140h+var_160]
                mov     r8, rsi
                xor     ecx, 2D72h
                mov     qword ptr [rsp+240h+var_220], r11
                ror     ecx, 5Ch
                lea     edx, [r9+7]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0FFC1:                          ; CODE XREF: sub_140A0E0FC+12AA↑j
                mov     r9, r8
                mov     [rbp+140h+var_170], 0D0002D61h
                mov     ecx, [rbp+140h+var_170]
                mov     r8, rsi
                xor     ecx, 2D72h
                mov     qword ptr [rsp+240h+var_220], r11
                ror     ecx, 5Ch
                mov     edx, 0Ah
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A0FFEA:                          ; CODE XREF: sub_140A0E0FC+11CF↑j
                mov     r9d, eax
                mov     r8, rsi
                xor     eax, eax
                mov     [rbp+140h+var_16C], 0D0002D61h
                mov     ecx, [rbp+140h+var_16C]
                xor     ecx, 2D72h
                mov     qword ptr [rsp+240h+var_220], rax
                ror     ecx, 5Ch
                lea     edx, [rax+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A10013:                          ; CODE XREF: sub_140A0E0FC+1141↑j
                xor     eax, eax
                mov     r9d, edx
                mov     [rbp+140h+var_168], 0D0002D61h
                mov     ecx, [rbp+140h+var_168]
                xor     ecx, 2D72h
                mov     qword ptr [rsp+240h+var_220], rax
                ror     ecx, 5Ch
                lea     edx, [rax+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A10039:                          ; CODE XREF: sub_140A0E0FC+12D3↑j
                mov     r9d, 2
                mov     [rbp+140h+var_164], 0D0002D61h
                mov     ecx, [rbp+140h+var_164]
                mov     r8, rsi
                xor     ecx, 2D72h
                mov     qword ptr [rsp+240h+var_220], r11
                ror     ecx, 5Ch
                lea     edx, [r9+8]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A10064:                          ; CODE XREF: sub_140A0E0FC+19B3↑j
                mov     r9d, 6
                mov     qword ptr [rsp+240h+var_220], rdx
                mov     [rbp+140h+var_15C], 0D0002D61h
                mov     r8, rdi
                mov     ecx, [rbp+140h+var_15C]
                xor     ecx, 2D72h
                ror     ecx, 5Ch
                lea     edx, [r9+4]
                call    KeBugCheckEx
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A0E0FC   endp

byte_140A1008F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C12C↑o

; =============== S U B R O U T I N E =======================================


sub_140A10098   proc near               ; CODE XREF: sub_1403DDA90+36DD↑p
                                        ; sub_1409FA010+3E4B↑p ...

var_B8          = dword ptr -0B8h
var_B4          = dword ptr -0B4h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = dword ptr -0A0h
var_9C          = dword ptr -9Ch
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = dword ptr  28h
arg_28          = dword ptr  30h
arg_30          = qword ptr  38h
arg_38          = qword ptr  40h

                mov     rax, rsp
                mov     [rax+18h], rbx
                mov     [rax+20h], r9
                mov     [rax+10h], rdx
                mov     [rax+8], rcx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 0A0h
                mov     rbx, [rcx]
                mov     rcx, r9
                mov     esi, r8d
                mov     rax, [rbx+1F8h]
                call    j__guard_dispatch_icall_nop
                xor     r9d, r9d
                mov     [rsp+0D8h+var_88], rax
                test    rax, rax
                jz      loc_140A10AD5
                mov     rax, 0AAAAAAAAAAAAAAABh
                lea     r10d, [r9+1]
                mul     rsi
                mov     r13, rdx
                shr     r13, 3
                mov     [rsp+0D8h+var_A8], r13
                cmp     [rsp+0D8h+arg_20], r9d
                jz      short loc_140A10110
                lea     r14d, [r9+0Ch]
                jmp     short loc_140A10125
; ---------------------------------------------------------------------------

loc_140A10110:                          ; CODE XREF: sub_140A10098+70↑j
                mov     al, byte ptr [rsp+0D8h+arg_28]
                and     al, 10h
                neg     al
                sbb     r14d, r14d
                and     r14d, 2Ah
                add     r14d, r10d

loc_140A10125:                          ; CODE XREF: sub_140A10098+76↑j
                mov     r15d, [rbx+7E4h]
                mov     ebp, r13d
                mov     r8d, [rbx+924h]
                shl     ebp, 2
                lea     eax, [r15+30h]
                add     eax, ebp
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A10231
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r9d, r9d
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A10227
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A10218
                mov     eax, [rbx+7E4h]
                lea     r10d, [r9+1]
                mov     r8, [rbx+7C8h]
                and     ecx, 20000000h
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A101AE
                mov     ecx, eax
                shr     rcx, 3

loc_140A1019F:                          ; CODE XREF: sub_140A10098+114↓j
                mov     [rbx], r9
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r10
                jnz     short loc_140A1019F

loc_140A101AE:                          ; CODE XREF: sub_140A10098+FF↑j
                test    eax, eax
                jz      short loc_140A101BD

loc_140A101B2:                          ; CODE XREF: sub_140A10098+123↓j
                mov     [rbx], r9b
                add     rbx, r10
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A101B2

loc_140A101BD:                          ; CODE XREF: sub_140A10098+118↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A10200
                test    dword ptr [rdi+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A101F7
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A1020F
; ---------------------------------------------------------------------------

loc_140A101F7:                          ; CODE XREF: sub_140A10098+148↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A10207
; ---------------------------------------------------------------------------

loc_140A10200:                          ; CODE XREF: sub_140A10098+134↑j
                mov     rax, [rdi+368h]

loc_140A10207:                          ; CODE XREF: sub_140A10098+166↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A1020F:                          ; CODE XREF: sub_140A10098+15D↑j
                mov     [rdi+924h], ebx
                xor     r9d, r9d

loc_140A10218:                          ; CODE XREF: sub_140A10098+D5↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r10d, 1
                jmp     short loc_140A1023A
; ---------------------------------------------------------------------------

loc_140A10227:                          ; CODE XREF: sub_140A10098+C6↑j
                mov     eax, 0C000009Ah
                jmp     loc_140A10ADA
; ---------------------------------------------------------------------------

loc_140A10231:                          ; CODE XREF: sub_140A10098+AD↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A1023A:                          ; CODE XREF: sub_140A10098+18D↑j
                add     [rdi+80Ch], r10d
                lea     r8, [rdi+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+0D8h+var_98], r8
                mov     [rsp+0D8h+var_50], r8
                mov     rax, r8
                lea     edx, [rcx-2Ah]

loc_140A1025D:                          ; CODE XREF: sub_140A10098+1D2↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r10
                jnz     short loc_140A1025D
                test    ecx, ecx
                jz      short loc_140A1027B

loc_140A10270:                          ; CODE XREF: sub_140A10098+1E1↓j
                mov     [rax], r9b
                add     rax, r10
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A10270

loc_140A1027B:                          ; CODE XREF: sub_140A10098+1D6↑j
                mov     r15, [rsp+0D8h+arg_8]
                mov     [r8], r14d
                mov     r9, r15
                mov     [r8+8], r15
                mov     rax, r15
                mov     [r8+10h], esi
                add     [rdi+828h], esi
                lea     rcx, [rsi+r15]
                mov     r10d, [rdi+814h]
                mov     rbx, [rdi+818h]
                cmp     r15, rcx
                jnb     short loc_140A102BD

loc_140A102B1:                          ; CODE XREF: sub_140A10098+223↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A102B1

loc_140A102BD:                          ; CODE XREF: sub_140A10098+217↑j
                mov     r11d, esi
                mov     r8, rbx
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A10339
                mov     r13, 7010008004002001h

loc_140A102D6:                          ; CODE XREF: sub_140A10098+29A↓j
                mov     edx, 8

loc_140A102DB:                          ; CODE XREF: sub_140A10098+261↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, 1
                jnz     short loc_140A102DB
                mov     rcx, r9
                sub     rcx, r15
                xor     rcx, rbx
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rsp+0D8h+var_48], rdx
                xor     r10d, eax
                mov     eax, 1
                and     r10d, 3Fh
                cmovz   r10d, eax
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A102D6
                mov     r13, [rsp+0D8h+var_A8]

loc_140A10339:                          ; CODE XREF: sub_140A10098+232↑j
                mov     edx, esi
                mov     ebx, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A10364
                mov     r11d, edx
                shr     r11, 3

loc_140A1034F:                          ; CODE XREF: sub_140A10098+2CA↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     r11, rbx
                jnz     short loc_140A1034F

loc_140A10364:                          ; CODE XREF: sub_140A10098+2AE↑j
                test    edx, edx
                jz      short loc_140A1037D

loc_140A10368:                          ; CODE XREF: sub_140A10098+2E3↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, rbx
                rol     r8, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A10368

loc_140A1037D:                          ; CODE XREF: sub_140A10098+2CE↑j
                mov     rax, r8
                jmp     short loc_140A10385
; ---------------------------------------------------------------------------

loc_140A10382:                          ; CODE XREF: sub_140A10098+2F4↓j
                xor     r8d, eax

loc_140A10385:                          ; CODE XREF: sub_140A10098+2E8↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A10382
                mov     rcx, [rsp+0D8h+var_98]
                btr     r8d, 1Fh
                mov     rax, [rsp+0D8h+arg_0]
                mov     r15d, 0C0000225h
                mov     [rsp+0D8h+var_40], rcx
                mov     [rcx+14h], r8d
                add     [rdi+828h], esi
                lea     rsi, [rcx+18h]
                mov     [rax], rdi
                mov     rcx, [rdi+540h]
                mov     r12, cr8
                mov     eax, 0Fh
                mov     cr8, rax
                mov     rax, [rdi+150h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rdi+610h]
                mov     ebx, 18h
                mov     rcx, [rax]
                mov     eax, [rcx]
                lea     rdx, [rcx+10h]
                lea     rcx, [rax+rax*2]
                lea     rax, [rdx+rcx*8]
                mov     rcx, [rsp+0D8h+arg_18]

loc_140A10404:                          ; CODE XREF: sub_140A10098+37A↓j
                cmp     [rdx+8], rcx
                jz      short loc_140A10414
                add     rdx, rbx
                cmp     rdx, rax
                jnb     short loc_140A10429
                jmp     short loc_140A10404
; ---------------------------------------------------------------------------

loc_140A10414:                          ; CODE XREF: sub_140A10098+370↑j
                movups  xmm0, xmmword ptr [rdx]
                xor     eax, eax
                mov     r15d, eax
                movups  xmmword ptr [rsi], xmm0
                movsd   xmm1, qword ptr [rdx+10h]
                movsd   qword ptr [rsi+10h], xmm1

loc_140A10429:                          ; CODE XREF: sub_140A10098+378↑j
                mov     rcx, [rdi+540h]
                mov     rax, [rdi+190h]
                call    j__guard_dispatch_icall_nop
                movzx   eax, r12b
                mov     cr8, rax
                xor     edx, edx
                lea     r8d, [rdx+1]
                test    r15d, r15d
                jns     short loc_140A10475
                mov     rax, rsi
                lea     ecx, [rdx+3]

loc_140A10455:                          ; CODE XREF: sub_140A10098+3CA↓j
                mov     [rax], rdx
                add     ebx, 0FFFFFFF8h
                add     rax, 8
                sub     rcx, r8
                jnz     short loc_140A10455
                test    ebx, ebx
                jz      short loc_140A10472

loc_140A10468:                          ; CODE XREF: sub_140A10098+3D8↓j
                mov     [rax], dl
                add     rax, r8
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A10468

loc_140A10472:                          ; CODE XREF: sub_140A10098+3CE↑j
                mov     [rsi], r8

loc_140A10475:                          ; CODE XREF: sub_140A10098+3B5↑j
                mov     rbx, [rsp+0D8h+var_98]
                add     rbx, 30h ; '0'
                mov     [rsp+0D8h+var_90], rbx
                mov     rax, rbx
                cmp     ebp, 8
                jb      short loc_140A104A4
                mov     ecx, ebp
                shr     rcx, 3

loc_140A10491:                          ; CODE XREF: sub_140A10098+40A↓j
                mov     qword ptr [rax], 0FFFFFFFFFFFFFFFFh
                add     ebp, 0FFFFFFF8h
                add     rax, 8
                sub     rcx, r8
                jnz     short loc_140A10491

loc_140A104A4:                          ; CODE XREF: sub_140A10098+3F1↑j
                test    ebp, ebp
                jz      short loc_140A104B3

loc_140A104A8:                          ; CODE XREF: sub_140A10098+419↓j
                mov     byte ptr [rax], 0FFh
                add     rax, r8
                add     ebp, 0FFFFFFFFh
                jnz     short loc_140A104A8

loc_140A104B3:                          ; CODE XREF: sub_140A10098+40E↑j
                mov     r12, [rsp+0D8h+arg_8]
                or      ebp, 0FFFFFFFFh
                mov     eax, r13d
                mov     r15d, edx
                mov     dword ptr [rsp+0D8h+arg_0], ebp
                mov     r13d, edx
                mov     [rsp+0D8h+var_B8], edx
                mov     [rsp+0D8h+var_B0], rdx
                lea     rcx, [rax+rax*2]
                mov     eax, [rdi+994h]
                test    al, 40h
                lea     rcx, [r12+rcx*4]
                mov     eax, 0FFFFFFF7h
                mov     [rsp+0D8h+var_78], rcx
                cmovnz  eax, [rsp+0D8h+arg_28]
                mov     [rsp+0D8h+var_A0], eax
                cmp     r12, rcx
                jnz     short loc_140A1051D
                mov     rax, [rsp+0D8h+arg_30]
                mov     [rax], edx
                mov     rax, [rsp+0D8h+arg_38]
                mov     [rax], edx

loc_140A10516:                          ; CODE XREF: sub_140A10098+A8C↓j
                xor     eax, eax
                jmp     loc_140A10ADA
; ---------------------------------------------------------------------------

loc_140A1051D:                          ; CODE XREF: sub_140A10098+468↑j
                mov     rax, [rdi+210h]
                mov     r8d, [r12]
                mov     rdx, [rsp+0D8h+arg_18]
                mov     rcx, [rsp+0D8h+var_88]
                call    j__guard_dispatch_icall_nop
                mov     ebx, r14d
                xor     r14d, r14d
                mov     [rsp+0D8h+var_A8], rbx
                jmp     loc_140A10AC4
; ---------------------------------------------------------------------------

loc_140A1054A:                          ; CODE XREF: sub_140A10098+A37↓j
                mov     eax, [r11+24h]
                mov     esi, r14d
                bt      eax, 19h
                jb      loc_140A106B9
                mov     ecx, [r11]
                cmp     ecx, 54494E49h
                jnz     short loc_140A10574
                cmp     dword ptr [r11+4], 4742444Bh
                jz      loc_140A106B9

loc_140A10574:                          ; CODE XREF: sub_140A10098+4CC↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A105AB
                movzx   eax, word ptr [r11+4]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_140A106B9
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_140A106B9
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_140A106B9

loc_140A105AB:                          ; CODE XREF: sub_140A10098+4E2↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A105C3
                mov     eax, 4154h
                cmp     [r11+4], ax
                jz      loc_140A106B9

loc_140A105C3:                          ; CODE XREF: sub_140A10098+519↑j
                mov     rax, [rdi+938h]
                mov     r9, r11
                mov     r8, [rdi+930h]
                mov     r10d, 7
                mov     [rsp+0D8h+var_68], rax
                sub     r9, r8
                mov     rax, [rdi+940h]
                mov     [rsp+0D8h+var_60], rax
                mov     rax, [rdi+948h]
                mov     [rsp+0D8h+var_58], rax

loc_140A105FD:                          ; CODE XREF: sub_140A10098+57A↓j
                movzx   edx, byte ptr [r9+r8]
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A10619
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A105FD
                jmp     loc_140A106B9
; ---------------------------------------------------------------------------

loc_140A10619:                          ; CODE XREF: sub_140A10098+574↑j
                mov     r9, [rsp+0D8h+var_68]
                mov     r8d, 8
                mov     r10, r11

loc_140A10627:                          ; CODE XREF: sub_140A10098+5AA↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A10664
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A10627
                test    r8d, r8d
                jz      short loc_140A106B9

loc_140A10649:                          ; CODE XREF: sub_140A10098+5C8↓j
                movzx   edx, byte ptr [r10]
                inc     r10
                movzx   eax, byte ptr [r9]
                inc     r9
                cmp     rdx, rax
                jnz     short loc_140A10664
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A10649
                jmp     short loc_140A106B9
; ---------------------------------------------------------------------------

loc_140A10664:                          ; CODE XREF: sub_140A10098+5A0↑j
                                        ; sub_140A10098+5C2↑j
                mov     r8, [rsp+0D8h+var_60]
                mov     r9, r11
                sub     r9, r8
                mov     r10d, 4

loc_140A10675:                          ; CODE XREF: sub_140A10098+5F2↓j
                movzx   edx, byte ptr [r9+r8]
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A1068E
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A10675
                jmp     short loc_140A106B9
; ---------------------------------------------------------------------------

loc_140A1068E:                          ; CODE XREF: sub_140A10098+5EC↑j
                mov     r8, [rsp+0D8h+var_58]
                mov     r9, r11
                sub     r9, r8
                mov     r10d, 6

loc_140A106A2:                          ; CODE XREF: sub_140A10098+61F↓j
                movzx   edx, byte ptr [r9+r8]
                movzx   eax, byte ptr [r8]
                inc     r8
                cmp     rdx, rax
                jnz     short loc_140A106C4
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A106A2

loc_140A106B9:                          ; CODE XREF: sub_140A10098+4BD↑j
                                        ; sub_140A10098+4D6↑j ...
                mov     r8d, 1
                mov     esi, r8d
                jmp     short loc_140A106CA
; ---------------------------------------------------------------------------

loc_140A106C4:                          ; CODE XREF: sub_140A10098+619↑j
                mov     r8d, 1

loc_140A106CA:                          ; CODE XREF: sub_140A10098+62A↑j
                mov     eax, [r11+24h]
                test    eax, eax
                cmovs   esi, r8d
                mov     [rsp+0D8h+var_B4], esi
                cmp     rbx, 2Bh ; '+'
                jnz     short loc_140A106EA
                bt      eax, 1Dh
                cmovnb  esi, r8d
                mov     [rsp+0D8h+var_B4], esi

loc_140A106EA:                          ; CODE XREF: sub_140A10098+644↑j
                test    esi, esi
                jz      short loc_140A10713
                cmp     dword ptr [r11], 54494E49h
                jnz     short loc_140A10713
                cmp     dword ptr [r11+4], 4742444Bh
                jnz     short loc_140A10713
                test    dword ptr [rdi+994h], 2000h
                cmovnz  esi, r14d
                mov     [rsp+0D8h+var_B4], esi

loc_140A10713:                          ; CODE XREF: sub_140A10098+654↑j
                                        ; sub_140A10098+65D↑j ...
                mov     r9d, [r11+10h]
                mov     eax, [r11+8]
                cmp     r9d, eax
                mov     ecx, [r11+0Ch]
                cmovbe  r9d, eax
                add     r9d, ecx
                mov     [rsp+0D8h+var_9C], r9d
                jmp     short loc_140A10736
; ---------------------------------------------------------------------------

loc_140A10730:                          ; CODE XREF: sub_140A10098+A01↓j
                mov     r8d, 1

loc_140A10736:                          ; CODE XREF: sub_140A10098+696↑j
                mov     eax, [r12+8]
                mov     edx, ebp
                test    r8b, al
                jnz     short loc_140A10760
                cmp     eax, edx
                mov     ebp, eax
                cmovnb  ebp, edx
                mov     dword ptr [rsp+0D8h+arg_0], ebp
                cmp     eax, r13d
                jbe     short loc_140A10760
                mov     [rsp+0D8h+var_B8], eax
                mov     dword ptr [rsp+0D8h+arg_0], ebp

loc_140A10760:                          ; CODE XREF: sub_140A10098+6A8↑j
                                        ; sub_140A10098+6BB↑j
                mov     eax, [r12]
                xor     ebp, ebp
                mov     r10, [rsp+0D8h+arg_18]
                mov     edx, esi
                mov     r14d, [r12+4]
                sub     r14d, eax
                cmp     [rsp+0D8h+var_A8], 2Bh ; '+'
                lea     rbx, [r10+rax]
                jnz     short loc_140A107C3
                test    esi, esi
                jnz     short loc_140A107C7
                sub     ecx, eax
                cmp     ecx, 6
                jb      short loc_140A107C7
                sub     eax, r15d
                cmp     eax, 6
                jb      short loc_140A107C7
                mov     al, [rbx-1]
                cmp     byte ptr [rbx-6], 4Ch ; 'L'
                jnz     short loc_140A107C0
                cmp     byte ptr [rbx-5], 87h
                jnz     short loc_140A107C0
                cmp     [rbx-4], bpl
                jnz     short loc_140A107C0
                cmp     byte ptr [rbx-3], 98h
                jnz     short loc_140A107C0
                cmp     byte ptr [rbx-2], 0C3h
                jnz     short loc_140A107C0
                cmp     al, 90h
                jz      short loc_140A107D5
                cmp     al, 0F1h
                jz      short loc_140A107D5

loc_140A107C0:                          ; CODE XREF: sub_140A10098+706↑j
                                        ; sub_140A10098+70C↑j ...
                mov     edx, r8d

loc_140A107C3:                          ; CODE XREF: sub_140A10098+6EA↑j
                test    edx, edx
                jz      short loc_140A107D5

loc_140A107C7:                          ; CODE XREF: sub_140A10098+6EE↑j
                                        ; sub_140A10098+6F5↑j ...
                mov     r8d, 80000000h
                xor     r14d, r14d
                jmp     loc_140A10A4E
; ---------------------------------------------------------------------------

loc_140A107D5:                          ; CODE XREF: sub_140A10098+722↑j
                                        ; sub_140A10098+726↑j ...
                test    byte ptr [rsp+0D8h+var_A0], 8
                jz      loc_140A1092F
                mov     rax, rbx
                mov     r13d, r14d
                mov     edx, 0FFFh
                lea     rcx, [r14+0FFFh]
                and     rax, rdx
                add     rcx, rax
                and     rcx, 0FFFFFFFFFFFFF000h
                cmp     rcx, 1000h
                jnz     short loc_140A1081C
                mov     rax, rbx
                and     rax, 0FFFFFFFFFFFFF000h
                cmp     rax, [rsp+0D8h+var_B0]
                jz      loc_140A1092F

loc_140A1081C:                          ; CODE XREF: sub_140A10098+76E↑j
                test    r14d, r14d
                jz      loc_140A108C1
                mov     eax, [rdi+994h]
                test    al, 40h
                jz      loc_140A108C1
                mov     r15, cr8
                mov     eax, 2
                mov     cr8, rax
                mov     rsi, rbx
                lea     rax, [r14-1]
                and     rsi, 0FFFFFFFFFFFFF000h
                add     rax, rbx
                or      rax, rdx
                mov     [rsp+0D8h+var_B0], rax
                lea     r12, [rsi-1]

loc_140A1085D:                          ; CODE XREF: sub_140A10098+819↓j
                movzx   ebp, r15b

loc_140A10861:                          ; CODE XREF: sub_140A10098+803↓j
                mov     rax, [rdi+468h]
                mov     edx, r8d
                mov     rcx, rsi
                call    j__guard_dispatch_icall_nop
                mov     r8d, 1
                cmp     eax, 0C000022Dh
                jnz     short loc_140A1089D
                cmp     r15b, r8b
                ja      short loc_140A108A1
                movzx   ebp, r15b
                mov     cr8, rbp
                mov     al, [rsi]
                mov     rax, cr8
                lea     eax, [r8+1]
                mov     cr8, rax
                jmp     short loc_140A10861
; ---------------------------------------------------------------------------

loc_140A1089D:                          ; CODE XREF: sub_140A10098+7E6↑j
                test    eax, eax
                js      short loc_140A108BB

loc_140A108A1:                          ; CODE XREF: sub_140A10098+7EB↑j
                mov     eax, 1000h
                add     rsi, rax
                add     r12, rax
                cmp     r12, [rsp+0D8h+var_B0]
                jnz     short loc_140A1085D
                mov     cr8, rbp
                xor     ebp, ebp
                jmp     short loc_140A10918
; ---------------------------------------------------------------------------

loc_140A108BB:                          ; CODE XREF: sub_140A10098+807↑j
                mov     cr8, rbp
                xor     ebp, ebp

loc_140A108C1:                          ; CODE XREF: sub_140A10098+787↑j
                                        ; sub_140A10098+795↑j
                cmp     [rdi+8F8h], ebp
                jnz     short loc_140A10918
                mov     rcx, [rsp+0D8h+var_98]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, rdi
                xor     edx, edx
                mov     [rdi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rcx
                mov     [rdi+908h], rax
                movsxd  rax, dword ptr [rcx]
                mov     rcx, rdi
                mov     [rdi+910h], rax
                mov     [rdi+918h], rbx
                mov     [rdi+8F8h], r8d
                call    sub_140A113CC

loc_140A10918:                          ; CODE XREF: sub_140A10098+821↑j
                                        ; sub_140A10098+82F↑j
                mov     r12, [rsp+0D8h+arg_8]
                add     r13, rbx
                and     r13, 0FFFFFFFFFFFFF000h
                mov     [rsp+0D8h+var_B0], r13

loc_140A1092F:                          ; CODE XREF: sub_140A10098+742↑j
                                        ; sub_140A10098+77E↑j
                add     [rdi+828h], r14d
                mov     r9, rbx
                mov     r11d, [rdi+814h]
                mov     rax, rbx
                mov     rsi, [rdi+818h]
                mov     ecx, r14d
                add     rcx, rbx
                cmp     rbx, rcx
                jnb     short loc_140A10961

loc_140A10955:                          ; CODE XREF: sub_140A10098+8C7↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A10955

loc_140A10961:                          ; CODE XREF: sub_140A10098+8BB↑j
                mov     r10d, r14d
                mov     r8, rsi
                shr     r10d, 7
                mov     r15d, 1
                test    r10d, r10d
                jz      short loc_140A109D9
                mov     r12, 7010008004002001h

loc_140A10980:                          ; CODE XREF: sub_140A10098+937↓j
                mov     edx, 8

loc_140A10985:                          ; CODE XREF: sub_140A10098+90A↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r15
                jnz     short loc_140A10985
                mov     rcx, r9
                sub     rcx, rbx
                xor     rcx, rsi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     r11d, eax
                xor     r11d, edx
                and     r11d, 3Fh
                cmovz   r11d, r15d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A10980
                mov     r12, [rsp+0D8h+arg_8]

loc_140A109D9:                          ; CODE XREF: sub_140A10098+8DC↑j
                and     r14d, 7Fh
                cmp     r14d, 8
                jb      short loc_140A10A00
                mov     edx, r14d
                shr     rdx, 3

loc_140A109EA:                          ; CODE XREF: sub_140A10098+966↓j
                xor     r8, [r9]
                mov     ecx, r11d
                rol     r8, cl
                add     r9, 8
                add     r14d, 0FFFFFFF8h
                sub     rdx, r15
                jnz     short loc_140A109EA

loc_140A10A00:                          ; CODE XREF: sub_140A10098+949↑j
                test    r14d, r14d
                jz      short loc_140A10A1B

loc_140A10A05:                          ; CODE XREF: sub_140A10098+981↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     r8, rax
                add     r9, r15
                rol     r8, cl
                add     r14d, 0FFFFFFFFh
                jnz     short loc_140A10A05

loc_140A10A1B:                          ; CODE XREF: sub_140A10098+96B↑j
                mov     rax, r8
                shr     rax, 1Fh
                xor     r14d, r14d
                jmp     short loc_140A10A2E
; ---------------------------------------------------------------------------

loc_140A10A27:                          ; CODE XREF: sub_140A10098+999↓j
                xor     r8d, eax
                shr     rax, 1Fh

loc_140A10A2E:                          ; CODE XREF: sub_140A10098+98D↑j
                test    rax, rax
                jnz     short loc_140A10A27
                mov     r11, [rsp+0D8h+var_80]
                btr     r8d, 1Fh
                mov     esi, [rsp+0D8h+var_B4]
                mov     r9d, [rsp+0D8h+var_9C]
                mov     r10, [rsp+0D8h+arg_18]

loc_140A10A4E:                          ; CODE XREF: sub_140A10098+738↑j
                mov     rbx, [rsp+0D8h+var_90]
                mov     [rbx], r8d
                mov     r15d, [r12+4]
                add     r12, 0Ch
                mov     [rsp+0D8h+arg_8], r12
                cmp     r12, [rsp+0D8h+var_78]
                jz      loc_140A10AF5
                mov     r8d, [r12]
                add     rbx, 4
                mov     ecx, [r11+0Ch]
                mov     [rsp+0D8h+var_90], rbx
                cmp     r8d, ecx
                jb      short loc_140A10A9F
                mov     ebp, dword ptr [rsp+0D8h+arg_0]
                mov     r13d, [rsp+0D8h+var_B8]
                cmp     [r12+4], r9d
                jbe     loc_140A10730

loc_140A10A9F:                          ; CODE XREF: sub_140A10098+9EE↑j
                mov     rax, [rdi+210h]
                mov     rdx, r10
                mov     rcx, [rsp+0D8h+var_88]
                call    j__guard_dispatch_icall_nop
                mov     ebp, dword ptr [rsp+0D8h+arg_0]
                mov     r13d, [rsp+0D8h+var_B8]
                mov     rbx, [rsp+0D8h+var_A8]

loc_140A10AC4:                          ; CODE XREF: sub_140A10098+4AD↑j
                mov     [rsp+0D8h+var_80], rax
                mov     r11, rax
                test    rax, rax
                jnz     loc_140A1054A

loc_140A10AD5:                          ; CODE XREF: sub_140A10098+45↑j
                mov     eax, 0C000007Bh

loc_140A10ADA:                          ; CODE XREF: sub_140A10098+194↑j
                                        ; sub_140A10098+480↑j
                mov     rbx, [rsp+0D8h+arg_10]
                add     rsp, 0A0h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_140A10AF5:                          ; CODE XREF: sub_140A10098+9D4↑j
                mov     edx, dword ptr [rsp+0D8h+arg_0]
                mov     r8d, [rsp+0D8h+var_B8]
                cmp     edx, 0FFFFFFFFh
                jnz     short loc_140A10B0F
                mov     eax, r8d
                neg     eax
                sbb     ecx, ecx
                and     edx, ecx

loc_140A10B0F:                          ; CODE XREF: sub_140A10098+A6C↑j
                mov     rax, [rsp+0D8h+arg_30]
                mov     [rax], edx
                mov     rax, [rsp+0D8h+arg_38]
                mov     [rax], r8d
                jmp     loc_140A10516
sub_140A10098   endp

; ---------------------------------------------------------------------------
algn_140A10B29:                         ; DATA XREF: .pdata:000000014012C138↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=40h

sub_140A10B30   proc near               ; CODE XREF: sub_1403DDA90+336E↑p
                                        ; sub_1403DDA90+3908↑p ...

var_120         = dword ptr -120h
var_118         = dword ptr -118h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
arg_8           = dword ptr  18h
arg_10          = dword ptr  20h
arg_18          = qword ptr  28h

                mov     [rsp-8+arg_10], r8d
                mov     [rsp-8+arg_8], edx
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r15
                lea     rbp, [rsp-10h]
                sub     rsp, 110h
                mov     r11d, edx
                mov     rdi, rcx
                cmp     r8d, 3
                jz      loc_140A10E81
                mov     r12d, [rcx+990h]
                xor     ebx, ebx
                mov     r10d, ebx
                and     r12d, 10000000h
                jnz     short loc_140A10B7B
                mov     r10d, [rcx+924h]

loc_140A10B7B:                          ; CODE XREF: sub_140A10B30+42↑j
                mov     eax, [rcx+810h]
                mov     dword ptr [rbp+40h+arg_18], eax
                rdtsc
                shl     rdx, 20h
                mov     r13, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     r15, rax
                mov     [rsp+140h+var_E8], rdx
                xor     r15d, edx
                and     r15d, 7FFh
                rdtsc
                shl     rdx, 20h
                lea     r8d, [r15+1]
                or      rax, rdx
                mov     esi, 1
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                xor     rax, rdx
                mov     [rsp+140h+var_E0], rdx
                xor     edx, edx
                div     r8
                mov     [rsp+140h+var_100], rdx
                test    r10d, r10d
                jz      loc_140A10CA0
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                xor     eax, edx
                mov     [rsp+140h+var_D8], rdx
                and     eax, esi
                or      edx, 0FFFFFFFFh
                shl     eax, 0Ch
                add     eax, 1000h
                add     r15d, eax
                lea     eax, [r15+r11]
                lea     rcx, [rax+8]
                mov     [rbp+40h+arg_18], rax
                mov     rax, [rdi+220h]
                mov     [rsp+140h+var_F8], rcx
                call    j__guard_dispatch_icall_nop
                mov     r12, rax
                test    rax, rax
                jz      short loc_140A10CC7
                mov     rdx, [rbp+40h+arg_18]
                lea     r8d, [rsi+3Fh]
                mov     rax, [rdi+230h]
                add     rdx, 0FFFh
                and     edx, 0FFFFF000h
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                test    al, al
                jnz     short loc_140A10C91
                mov     rax, [rdi+228h]
                mov     rcx, r12
                mov     rdx, [rbp+40h+arg_18]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A10CC7
; ---------------------------------------------------------------------------

loc_140A10C91:                          ; CODE XREF: sub_140A10B30+14A↑j
                mov     rax, [rsp+140h+var_F8]
                mov     [r12], rax
                add     r12, 8
                jmp     short loc_140A10CC2
; ---------------------------------------------------------------------------

loc_140A10CA0:                          ; CODE XREF: sub_140A10B30+C6↑j
                mov     rax, [rdi+0F8h]
                lea     edx, [r15+r11]
                mov     r8d, dword ptr [rbp+40h+arg_18]
                neg     r12d
                sbb     ecx, ecx
                and     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     r12, rax

loc_140A10CC2:                          ; CODE XREF: sub_140A10B30+16E↑j
                test    r12, r12
                jnz     short loc_140A10CD2

loc_140A10CC7:                          ; CODE XREF: sub_140A10B30+122↑j
                                        ; sub_140A10B30+15F↑j
                add     [rdi+0A18h], esi
                jmp     loc_140A10E79
; ---------------------------------------------------------------------------

loc_140A10CD2:                          ; CODE XREF: sub_140A10B30+195↑j
                mov     rax, [rsp+140h+var_100]
                mov     r8, r12
                mov     r11d, eax
                mov     r10d, 0FFFFFFF8h
                cmp     eax, 8
                jb      short loc_140A10D22
                mov     r9d, eax
                shr     r9, 3

loc_140A10CEF:                          ; CODE XREF: sub_140A10B30+1F0↓j
                rdtsc
                shl     rdx, 20h
                add     r11d, r10d
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rsp+140h+var_D0], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                sub     r9, rsi
                jnz     short loc_140A10CEF

loc_140A10D22:                          ; CODE XREF: sub_140A10B30+1B6↑j
                test    r11d, r11d
                jz      short loc_140A10D60
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rsp+140h+var_C8], rdx
                xor     rdx, rax
                or      r9d, 0FFFFFFFFh

loc_140A10D4F:                          ; CODE XREF: sub_140A10B30+22C↓j
                mov     [r8], dl
                add     r8, rsi
                shr     rdx, 8
                add     r11d, r9d
                jnz     short loc_140A10D4F
                jmp     short loc_140A10D64
; ---------------------------------------------------------------------------

loc_140A10D60:                          ; CODE XREF: sub_140A10B30+1F5↑j
                or      r9d, 0FFFFFFFFh

loc_140A10D64:                          ; CODE XREF: sub_140A10B30+22E↑j
                mov     rdx, [rsp+140h+var_100]
                mov     r11d, [rbp+40h+arg_8]
                sub     r15d, edx
                mov     eax, edx
                mov     [rsp+140h+var_F8], rax
                lea     r8, [r12+r11]
                add     r8, rax
                cmp     r15d, 8
                jb      short loc_140A10DC4
                mov     eax, r15d
                shr     rax, 3
                mov     r11, rax

loc_140A10D8E:                          ; CODE XREF: sub_140A10B30+28E↓j
                rdtsc
                shl     rdx, 20h
                add     r15d, r10d
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_C0], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                sub     r11, rsi
                jnz     short loc_140A10D8E
                mov     r11d, [rbp+40h+arg_8]

loc_140A10DC4:                          ; CODE XREF: sub_140A10B30+252↑j
                test    r15d, r15d
                jz      short loc_140A10DFB
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_B8], rdx
                xor     rdx, rax

loc_140A10DEC:                          ; CODE XREF: sub_140A10B30+2C9↓j
                mov     [r8], dl
                add     r8, rsi
                shr     rdx, 8
                add     r15d, r9d
                jnz     short loc_140A10DEC

loc_140A10DFB:                          ; CODE XREF: sub_140A10B30+297↑j
                mov     rcx, [rsp+140h+var_F8]
                mov     [rbp+40h+var_B0], r12
                add     rcx, r12
                jz      short loc_140A10E79
                mov     edx, [rdi+7E4h]
                mov     r8, rcx
                cmp     edx, 8
                jb      short loc_140A10E34
                mov     r15d, edx
                shr     r15, 3

loc_140A10E1E:                          ; CODE XREF: sub_140A10B30+302↓j
                mov     rax, [rdi]
                add     edx, r10d
                mov     [r8], rax
                add     rdi, 8
                add     r8, 8
                sub     r15, rsi
                jnz     short loc_140A10E1E

loc_140A10E34:                          ; CODE XREF: sub_140A10B30+2E5↑j
                test    edx, edx
                jz      short loc_140A10E49
                sub     r8, rdi

loc_140A10E3B:                          ; CODE XREF: sub_140A10B30+317↓j
                mov     al, [rdi]
                mov     [rdi+r8], al
                add     rdi, rsi
                add     edx, r9d
                jnz     short loc_140A10E3B

loc_140A10E49:                          ; CODE XREF: sub_140A10B30+306↑j
                mov     eax, [rbp+40h+arg_10]
                mov     [rcx+924h], eax
                mov     eax, [rcx+990h]
                mov     [rcx+7E4h], r11d
                mov     [rcx+7C8h], r12
                bt      eax, 1Ch
                jb      short loc_140A10E76
                bts     eax, 1Dh
                mov     [rcx+990h], eax

loc_140A10E76:                          ; CODE XREF: sub_140A10B30+33A↑j
                mov     rbx, rcx

loc_140A10E79:                          ; CODE XREF: sub_140A10B30+19D↑j
                                        ; sub_140A10B30+2D7↑j
                mov     rax, rbx
                jmp     loc_140A113B4
; ---------------------------------------------------------------------------

loc_140A10E81:                          ; CODE XREF: sub_140A10B30+29↑j
                rdtsc
                shl     rdx, 20h
                mov     r13, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     r9, rax
                mov     [rbp+40h+var_A8], rdx
                xor     r9d, edx
                and     r9d, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                lea     ecx, [r9+1]
                mul     rdx
                mov     [rbp+40h+var_A0], rdx
                xor     rax, rdx
                xor     edx, edx
                div     rcx
                mov     [rsp+140h+var_F8], rdx
                rdtsc
                shl     rdx, 20h
                mov     esi, 1
                or      rax, rdx
                add     r9d, 1000h
                mov     rcx, rax
                mov     r8, rax
                ror     rcx, 3
                mov     rax, r13
                xor     r8, rcx
                mul     r8
                mov     r8d, [rdi+810h]
                xor     eax, edx
                mov     [rbp+40h+var_98], rdx
                and     eax, esi
                shl     eax, 0Ch
                add     eax, r9d
                mov     dword ptr [rbp+40h+arg_18], eax
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     r12, rax
                mov     [rbp+40h+var_90], rdx
                xor     r12d, edx
                and     r12d, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                lea     ecx, [r12+1]
                mul     rdx
                xor     rax, rdx
                mov     [rbp+40h+var_88], rdx
                xor     edx, edx
                div     rcx
                mov     rax, [rdi+0F8h]
                mov     ecx, 200h
                mov     [rsp+140h+var_F0], rdx
                lea     edx, [r12+20h]
                call    j__guard_dispatch_icall_nop
                xor     ebx, ebx
                mov     [rsp+140h+var_100], rax
                test    rax, rax
                jnz     short loc_140A10FB5
                add     [rdi+0A18h], esi
                jmp     loc_140A113A8
; ---------------------------------------------------------------------------

loc_140A10FB5:                          ; CODE XREF: sub_140A10B30+478↑j
                mov     r11, [rsp+140h+var_F0]
                mov     r9, rax
                mov     r10d, r11d
                mov     r8d, 0FFFFFFF8h
                cmp     r11d, 8
                jb      short loc_140A11005
                mov     r15d, r11d
                shr     r15, 3

loc_140A10FD3:                          ; CODE XREF: sub_140A10B30+4D3↓j
                rdtsc
                shl     rdx, 20h
                add     r10d, r8d
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_80], rdx
                xor     rdx, rax
                mov     [r9], rdx
                add     r9, 8
                sub     r15, rsi
                jnz     short loc_140A10FD3

loc_140A11005:                          ; CODE XREF: sub_140A10B30+49A↑j
                or      r15d, 0FFFFFFFFh
                test    r10d, r10d
                jz      short loc_140A11040
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_78], rdx
                xor     rdx, rax

loc_140A11031:                          ; CODE XREF: sub_140A10B30+50E↓j
                mov     [r9], dl
                add     r9, rsi
                shr     rdx, 8
                add     r10d, r15d
                jnz     short loc_140A11031

loc_140A11040:                          ; CODE XREF: sub_140A10B30+4DC↑j
                mov     eax, r11d
                sub     r12d, r11d
                mov     r11, [rsp+140h+var_100]
                lea     r9, [r11+20h]
                add     r9, rax
                lea     rcx, [rax+r11]
                mov     [rsp+140h+var_F0], rcx
                cmp     r12d, 8
                jb      short loc_140A1109A
                mov     r10d, r12d
                shr     r10, 3

loc_140A11068:                          ; CODE XREF: sub_140A10B30+568↓j
                rdtsc
                shl     rdx, 20h
                add     r12d, r8d
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_70], rdx
                xor     rdx, rax
                mov     [r9], rdx
                add     r9, 8
                sub     r10, rsi
                jnz     short loc_140A11068

loc_140A1109A:                          ; CODE XREF: sub_140A10B30+52F↑j
                test    r12d, r12d
                jz      short loc_140A110D1
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_68], rdx
                xor     rdx, rax

loc_140A110C2:                          ; CODE XREF: sub_140A10B30+59F↓j
                mov     [r9], dl
                add     r9, rsi
                shr     rdx, 8
                add     r12d, r15d
                jnz     short loc_140A110C2

loc_140A110D1:                          ; CODE XREF: sub_140A10B30+56D↑j
                mov     r12, [rsp+140h+var_F0]
                mov     [rbp+40h+var_60], r11
                test    r12, r12
                jz      loc_140A113A8
                mov     ecx, 20h ; ' '
                mov     rax, r12
                lea     edx, [rcx-1Ch]

loc_140A110EE:                          ; CODE XREF: sub_140A10B30+5CB↓j
                mov     [rax], rbx
                add     ecx, r8d
                add     rax, 8
                sub     rdx, rsi
                jnz     short loc_140A110EE
                test    ecx, ecx
                jz      short loc_140A1110B

loc_140A11101:                          ; CODE XREF: sub_140A10B30+5D9↓j
                mov     [rax], bl
                add     rax, rsi
                add     ecx, r15d
                jnz     short loc_140A11101

loc_140A1110B:                          ; CODE XREF: sub_140A10B30+5CF↑j
                mov     eax, [rdi+810h]
                mov     ecx, 1000000h
                mov     [rbp+40h+arg_10], eax
                mov     edx, 5
                mov     [r12+10h], eax
                mov     [r12+18h], r11
                mov     eax, [rdi+990h]
                test    ecx, eax
                jz      short loc_140A11139
                mov     edx, 15h
                jmp     short loc_140A11141
; ---------------------------------------------------------------------------

loc_140A11139:                          ; CODE XREF: sub_140A10B30+600↑j
                or      eax, ecx
                mov     [rdi+990h], eax

loc_140A11141:                          ; CODE XREF: sub_140A10B30+607↑j
                mov     ecx, dword ptr [rbp+40h+arg_18]
                mov     r8, rbx
                add     ecx, [rbp+40h+arg_8]
                mov     rax, [rdi+348h]
                mov     r9d, ecx
                mov     [rsp+140h+var_118], edx
                or      rdx, 0FFFFFFFFFFFFFFFFh
                mov     [rsp+140h+var_F0], rcx
                mov     rcx, rbx
                mov     [rsp+140h+var_120], esi
                call    j__guard_dispatch_icall_nop
                mov     [rsp+140h+var_100], rax
                test    rax, rax
                jz      loc_140A11399
                mov     edx, [rbp+40h+arg_10]
                mov     rcx, [rsp+140h+var_F0]
                mov     [r12], rax
                mov     rax, [rdi+350h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, rax
                test    rax, rax
                jz      loc_140A11399
                mov     r8, [rsp+140h+var_100]
                mov     r9d, esi
                mov     edx, [rbp+40h+arg_10]
                mov     [r12+8], rax
                mov     rax, [rdi+358h]
                call    j__guard_dispatch_icall_nop
                mov     rdx, [rsp+140h+var_F0]
                mov     r9, rax
                add     rdx, 0FFFh
                mov     [rsp+140h+var_100], rax
                mov     rax, [rdi+230h]
                and     edx, 0FFFFF000h
                mov     r8d, 40h ; '@'
                mov     rcx, r9
                call    j__guard_dispatch_icall_nop
                test    al, al
                jz      loc_140A11399
                mov     r11, [rsp+140h+var_F8]
                mov     r10d, 0FFFFFFF8h
                mov     r8, [rsp+140h+var_100]
                mov     r9d, r11d
                cmp     r11d, 8
                jb      short loc_140A11249
                mov     r11d, r11d
                shr     r11, 3

loc_140A11212:                          ; CODE XREF: sub_140A10B30+712↓j
                rdtsc
                shl     rdx, 20h
                add     r9d, r10d
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_58], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                sub     r11, rsi
                jnz     short loc_140A11212
                mov     r11, [rsp+140h+var_F8]

loc_140A11249:                          ; CODE XREF: sub_140A10B30+6D9↑j
                test    r9d, r9d
                jz      short loc_140A11280
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_50], rdx
                xor     rdx, rax

loc_140A11271:                          ; CODE XREF: sub_140A10B30+74E↓j
                mov     [r8], dl
                add     r8, rsi
                shr     rdx, 8
                add     r9d, r15d
                jnz     short loc_140A11271

loc_140A11280:                          ; CODE XREF: sub_140A10B30+71C↑j
                mov     r9d, dword ptr [rbp+40h+arg_18]
                mov     eax, r11d
                sub     r9d, r11d
                mov     r11d, [rbp+40h+arg_8]
                mov     [rsp+140h+var_F8], rax
                lea     r8, [rax+r11]
                add     r8, [rsp+140h+var_100]
                cmp     r9d, 8
                jb      short loc_140A112E2
                mov     eax, r9d
                shr     rax, 3
                mov     r11, rax

loc_140A112AC:                          ; CODE XREF: sub_140A10B30+7AC↓j
                rdtsc
                shl     rdx, 20h
                add     r9d, r10d
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_48], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                sub     r11, rsi
                jnz     short loc_140A112AC
                mov     r11d, [rbp+40h+arg_8]

loc_140A112E2:                          ; CODE XREF: sub_140A10B30+770↑j
                test    r9d, r9d
                jz      short loc_140A11319
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r13
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+40h+var_40], rdx
                xor     rdx, rax

loc_140A1130A:                          ; CODE XREF: sub_140A10B30+7E7↓j
                mov     [r8], dl
                add     r8, rsi
                shr     rdx, 8
                add     r9d, r15d
                jnz     short loc_140A1130A

loc_140A11319:                          ; CODE XREF: sub_140A10B30+7B5↑j
                mov     rcx, [rsp+140h+var_F8]
                add     rcx, [rsp+140h+var_100]
                jz      loc_140A113AE
                mov     edx, [rdi+7E4h]
                mov     r8, rcx
                cmp     edx, 8
                jb      short loc_140A11354
                mov     r9d, edx
                shr     r9, 3

loc_140A1133E:                          ; CODE XREF: sub_140A10B30+822↓j
                mov     rax, [rdi]
                add     edx, r10d
                mov     [r8], rax
                add     rdi, 8
                add     r8, 8
                sub     r9, rsi
                jnz     short loc_140A1133E

loc_140A11354:                          ; CODE XREF: sub_140A10B30+805↑j
                test    edx, edx
                jz      short loc_140A11369
                sub     r8, rdi

loc_140A1135B:                          ; CODE XREF: sub_140A10B30+837↓j
                mov     al, [rdi]
                mov     [r8+rdi], al
                add     rdi, rsi
                add     edx, r15d
                jnz     short loc_140A1135B

loc_140A11369:                          ; CODE XREF: sub_140A10B30+826↑j
                mov     eax, [rcx+990h]
                mov     [rcx+7E4h], r11d
                mov     [rcx+7C8h], r12
                mov     dword ptr [rcx+924h], 3
                bt      eax, 1Ch
                jb      short loc_140A113B1
                bts     eax, 1Dh
                mov     [rcx+990h], eax
                jmp     short loc_140A113B1
; ---------------------------------------------------------------------------

loc_140A11399:                          ; CODE XREF: sub_140A10B30+645↑j
                                        ; sub_140A10B30+669↑j ...
                mov     rax, [rdi+368h]
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop

loc_140A113A8:                          ; CODE XREF: sub_140A10B30+480↑j
                                        ; sub_140A10B30+5AD↑j
                add     [rdi+0A18h], esi

loc_140A113AE:                          ; CODE XREF: sub_140A10B30+7F3↑j
                mov     rcx, rbx

loc_140A113B1:                          ; CODE XREF: sub_140A10B30+85B↑j
                                        ; sub_140A10B30+867↑j
                mov     rax, rcx

loc_140A113B4:                          ; CODE XREF: sub_140A10B30+34C↑j
                add     rsp, 110h
                pop     r15
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
sub_140A10B30   endp

; ---------------------------------------------------------------------------
byte_140A113C6  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C144↑o

; =============== S U B R O U T I N E =======================================


sub_140A113CC   proc near               ; CODE XREF: sub_1403DC860+2C4↑p
                                        ; sub_1403DC860+6AB↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r14
                mov     r11d, [rcx+990h]
                mov     r8, rcx
                bt      r11d, 1Eh
                jb      loc_140A115CB
                xor     r10d, r10d

loc_140A113F9:                          ; CODE XREF: sub_140A113CC+175↓j
                mov     r9d, [r8+994h]
                mov     eax, r10d
                mov     ecx, r9d
                shr     ecx, 15h
                and     ecx, 1
                test    edx, edx
                setnz   al
                cmp     eax, ecx
                jz      loc_140A115CB
                test    r11b, 2
                jz      loc_140A115CB
                mov     ecx, [r8+0A2Ch]
                mov     edi, [r8+7E4h]
                mov     rbp, [r8+818h]
                sub     edi, ecx
                shr     rdi, 3
                lea     rbx, [r8+rcx]
                lea     r14, [rbx+rdi*8]
                test    edx, edx
                jnz     loc_140A11546
                mov     r11, [r8+0A30h]
                cmp     rbx, r14
                mov     rsi, r10
                cmova   rdi, r10
                test    rdi, rdi
                jz      short loc_140A11494

loc_140A11464:                          ; CODE XREF: sub_140A113CC+BF↓j
                xor     [rbx], r11
                inc     rsi
                mov     rdx, [rbx]
                lea     rbx, [rbx+8]
                movzx   ecx, r11b
                xor     rdx, rbp
                and     ecx, 3Fh
                ror     r11, cl
                add     r11, rdx
                xor     r11, 0EFFh
                cmp     rsi, rdi
                jnz     short loc_140A11464
                mov     r9d, [r8+994h]

loc_140A11494:                          ; CODE XREF: sub_140A113CC+96↑j
                btr     r9d, 15h
                mov     [r8+994h], r9d
                cmp     r11, [r8+0A38h]
                jz      loc_140A115CB
                mov     rax, [r8+590h]
                mov     ecx, [r8+7E4h]
                mov     [rax], r8
                mov     [rax+10h], ecx
                mov     eax, [r8+8F8h]
                mov     rcx, [r8+0A38h]
                test    eax, eax
                jnz     loc_140A115CB
                mov     rax, [r8+590h]
                xor     rcx, r11
                mov     [rax+18h], rcx
                mov     eax, [r8+8F8h]
                test    eax, eax
                jnz     loc_140A115CB
                mov     rax, 0A3A03F5891C8B4E8h
                mov     [r8+908h], r10
                add     rax, r8
                mov     qword ptr [r8+910h], 100h
                mov     [r8+900h], rax
                mov     edx, r10d
                mov     [r8+918h], r11
                mov     dword ptr [r8+8F8h], 1
                mov     r11d, [r8+990h]
                bt      r11d, 1Eh
                jb      loc_140A115CB
                jmp     loc_140A113F9
; ---------------------------------------------------------------------------

loc_140A11546:                          ; CODE XREF: sub_140A113CC+7C↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, 7010008004002001h
                xor     rdx, rcx
                mul     rdx
                mov     r11, rdx
                xor     r11, rax
                cmp     rbx, r14
                mov     [r8+0A30h], r11
                cmova   rdi, r10
                test    rdi, rdi
                jz      short loc_140A115B8

loc_140A11582:                          ; CODE XREF: sub_140A113CC+1E3↓j
                mov     rdx, [rbx]
                inc     r10
                movzx   ecx, r11b
                mov     rax, rdx
                xor     rax, r11
                and     ecx, 3Fh
                ror     r11, cl
                xor     rdx, rbp
                add     r11, rdx
                mov     [rbx], rax
                xor     r11, 0EFFh
                lea     rbx, [rbx+8]
                cmp     r10, rdi
                jnz     short loc_140A11582
                mov     r9d, [r8+994h]

loc_140A115B8:                          ; CODE XREF: sub_140A113CC+1B4↑j
                bts     r9d, 15h
                mov     [r8+0A38h], r11
                mov     [r8+994h], r9d

loc_140A115CB:                          ; CODE XREF: sub_140A113CC+24↑j
                                        ; sub_140A113CC+47↑j ...
                mov     rbx, [rsp+8+arg_0]
                mov     rbp, [rsp+8+arg_8]
                mov     rsi, [rsp+8+arg_10]
                mov     rdi, [rsp+8+arg_18]
                pop     r14
                retn
sub_140A113CC   endp

; ---------------------------------------------------------------------------
algn_140A115E2:                         ; DATA XREF: .pdata:000000014012C150↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_140A115E8   proc near               ; CODE XREF: sub_1403DDA90+A4F0↑p
                                        ; sub_1409FA010+B002↑p
                                        ; DATA XREF: ...

var_98          = dword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
arg_0           = dword ptr  8
arg_8           = qword ptr  10h
arg_10          = dword ptr  18h
arg_18          = dword ptr  20h

                mov     [rsp+arg_10], r8d
                mov     [rsp+arg_8], rdx
                push    rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 78h
                mov     rsi, rcx
                mov     r15d, r8d
                add     [rcx+828h], r15d
                mov     r14, rdx
                mov     ecx, r8d
                mov     rax, rdx
                add     rcx, rdx
                cmp     rdx, rcx
                jnb     short loc_140A1162C

loc_140A11620:                          ; CODE XREF: sub_140A115E8+42↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A11620

loc_140A1162C:                          ; CODE XREF: sub_140A115E8+36↑j
                mov     rax, [rsi+818h]
                mov     r9d, 1
                mov     r8d, [rsi+814h]
                mov     rbx, rax
                mov     [rsp+0B8h+var_88], rax
                mov     cl, 0FFh
                mov     eax, r15d
                mov     [rsp+0B8h+arg_0], r8d
                shr     eax, 7
                lea     r10d, [r9+1]
                mov     [rsp+0B8h+var_98], eax
                mov     r11, 7010008004002001h
                mov     [rsp+0B8h+var_90], rcx
                test    eax, eax
                jz      loc_140A1195D
                lea     rdi, [rdx-6]

loc_140A1167B:                          ; CODE XREF: sub_140A115E8+35A↓j
                mov     r15, [rsp+0B8h+var_90]
                mov     [rsp+0B8h+arg_18], 80h

loc_140A1168B:                          ; CODE XREF: sub_140A115E8+312↓j
                mov     al, [rdi+5]
                cmp     byte ptr [rdi], 4Ch ; 'L'
                jnz     loc_140A117AA
                cmp     byte ptr [rdi+1], 87h
                jnz     loc_140A117AA
                cmp     byte ptr [rdi+2], 0
                jnz     loc_140A117AA
                cmp     byte ptr [rdi+3], 98h
                jnz     loc_140A117AA
                cmp     byte ptr [rdi+4], 0C3h
                jnz     loc_140A117AA
                cmp     al, 90h
                jz      short loc_140A116CB
                cmp     al, 0F1h
                jnz     loc_140A117AA

loc_140A116CB:                          ; CODE XREF: sub_140A115E8+D9↑j
                mov     r12b, r15b
                xor     ebp, ebp
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                xor     eax, edx
                mov     [rsp+0B8h+var_78], rdx
                and     eax, 3
                cmp     eax, r9d
                ja      short loc_140A1174D
                mov     r12, cr8
                mov     cr8, r10
                mov     rdx, gs:20h
                mov     rcx, [rsi+648h]
                test    eax, eax
                jnz     short loc_140A1171A
                mov     rbp, [rcx+rdx]
                jmp     short loc_140A11730
; ---------------------------------------------------------------------------

loc_140A1171A:                          ; CODE XREF: sub_140A115E8+12A↑j
                mov     rcx, [rcx+rdx]
                add     rcx, [rsi+6A8h]
                mov     rax, [rsi+688h]
                mov     rbp, [rcx+rax]

loc_140A11730:                          ; CODE XREF: sub_140A115E8+130↑j
                mov     eax, [rsi+990h]
                shr     eax, 0Ah
                and     eax, 1Fh
                lock bts [rbp+0], eax
                jnb     short loc_140A1174D
                xor     ebp, ebp
                movzx   eax, r12b
                mov     cr8, rax

loc_140A1174D:                          ; CODE XREF: sub_140A115E8+10E↑j
                                        ; sub_140A115E8+159↑j
                mov     rcx, rdi
                call    sub_140A13340
                mov     r8, [r14]
                mov     rdx, r14
                mov     rcx, rdi
                call    sub_140A13010
                mov     r13, rax
                mov     r9d, 1
                test    rbp, rbp
                jz      short loc_140A11790
                mov     ecx, [rsi+990h]
                mov     edx, r9d
                shr     ecx, 0Ah
                and     ecx, 1Fh
                shl     edx, cl
                not     edx
                lock and [rbp+0], edx
                movzx   eax, r12b
                mov     cr8, rax

loc_140A11790:                          ; CODE XREF: sub_140A115E8+187↑j
                mov     r8d, [rsp+0B8h+arg_0]
                mov     r10d, 2
                mov     r11, 7010008004002001h
                jmp     short loc_140A117AD
; ---------------------------------------------------------------------------

loc_140A117AA:                          ; CODE XREF: sub_140A115E8+A9↑j
                                        ; sub_140A115E8+B3↑j ...
                xor     r13d, r13d

loc_140A117AD:                          ; CODE XREF: sub_140A115E8+1C0↑j
                mov     al, [rdi+5]
                xor     r13, rbx
                mov     ecx, r8d
                rol     r13, cl
                cmp     byte ptr [rdi], 4Ch ; 'L'
                jnz     loc_140A118C3
                cmp     byte ptr [rdi+1], 87h
                jnz     loc_140A118C3
                cmp     byte ptr [rdi+2], 0
                jnz     loc_140A118C3
                cmp     byte ptr [rdi+3], 98h
                jnz     loc_140A118C3
                cmp     byte ptr [rdi+4], 0C3h
                jnz     loc_140A118C3
                cmp     al, 90h
                jz      short loc_140A117F6
                cmp     al, 0F1h
                jnz     loc_140A118C3

loc_140A117F6:                          ; CODE XREF: sub_140A115E8+204↑j
                mov     r12b, r15b
                xor     ebp, ebp
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                xor     eax, edx
                mov     [rsp+0B8h+var_70], rdx
                and     eax, 3
                cmp     eax, r9d
                ja      short loc_140A11878
                mov     r12, cr8
                mov     cr8, r10
                mov     rdx, gs:20h
                mov     rcx, [rsi+648h]
                test    eax, eax
                jnz     short loc_140A11845
                mov     rbp, [rcx+rdx]
                jmp     short loc_140A1185B
; ---------------------------------------------------------------------------

loc_140A11845:                          ; CODE XREF: sub_140A115E8+255↑j
                mov     rcx, [rcx+rdx]
                add     rcx, [rsi+6A8h]
                mov     rax, [rsi+688h]
                mov     rbp, [rcx+rax]

loc_140A1185B:                          ; CODE XREF: sub_140A115E8+25B↑j
                mov     eax, [rsi+990h]
                shr     eax, 0Ah
                and     eax, 1Fh
                lock bts [rbp+0], eax
                jnb     short loc_140A11878
                xor     ebp, ebp
                movzx   eax, r12b
                mov     cr8, rax

loc_140A11878:                          ; CODE XREF: sub_140A115E8+239↑j
                                        ; sub_140A115E8+284↑j
                mov     rcx, rdi
                call    sub_140A13340
                mov     r8, [r14+8]
                lea     rdx, [r14+8]
                mov     rcx, rdi
                call    sub_140A13010
                mov     rbx, rax
                test    rbp, rbp
                jz      short loc_140A118B9
                mov     ecx, [rsi+990h]
                mov     edx, 1
                shr     ecx, 0Ah
                and     ecx, 1Fh
                shl     edx, cl
                not     edx
                lock and [rbp+0], edx
                movzx   eax, r12b
                mov     cr8, rax

loc_140A118B9:                          ; CODE XREF: sub_140A115E8+2AE↑j
                mov     r8d, [rsp+0B8h+arg_0]
                jmp     short loc_140A118C5
; ---------------------------------------------------------------------------

loc_140A118C3:                          ; CODE XREF: sub_140A115E8+1D4↑j
                                        ; sub_140A115E8+1DE↑j ...
                xor     ebx, ebx

loc_140A118C5:                          ; CODE XREF: sub_140A115E8+2D9↑j
                xor     rbx, r13
                mov     ecx, r8d
                rol     rbx, cl
                mov     r9d, 1
                mov     ecx, [rsp+0B8h+arg_18]
                add     r14, 10h
                add     ecx, 0FFFFFFF0h
                mov     r11, 7010008004002001h
                mov     [rsp+0B8h+arg_18], ecx
                lea     r10d, [r9+1]
                cmp     ecx, 8
                jnb     loc_140A1168B
                mov     rcx, r14
                sub     rcx, [rsp+0B8h+arg_8]
                xor     rcx, [rsp+0B8h+var_88]
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                xor     eax, edx
                mov     [rsp+0B8h+var_68], rdx
                xor     eax, r8d
                mov     r8d, eax
                and     r8d, 3Fh
                cmovz   r8d, r9d
                add     [rsp+0B8h+var_98], 0FFFFFFFFh
                mov     [rsp+0B8h+arg_0], r8d
                jnz     loc_140A1167B
                mov     r15d, [rsp+0B8h+arg_10]
                mov     rdx, [rsp+0B8h+arg_8]
                mov     rcx, [rsp+0B8h+var_90]

loc_140A1195D:                          ; CODE XREF: sub_140A115E8+89↑j
                and     r15d, 7Fh
                cmp     r15d, 8
                jb      loc_140A11AB8
                mov     r13d, r15d
                lea     rdi, [rdx-6]
                shr     r13, 3

loc_140A11976:                          ; CODE XREF: sub_140A115E8+4CA↓j
                mov     al, [rdi+5]
                cmp     byte ptr [rdi], 4Ch ; 'L'
                jnz     loc_140A11A82
                cmp     byte ptr [rdi+1], 87h
                jnz     loc_140A11A82
                cmp     byte ptr [rdi+2], 0
                jnz     loc_140A11A82
                cmp     byte ptr [rdi+3], 98h
                jnz     loc_140A11A82
                cmp     byte ptr [rdi+4], 0C3h
                jnz     loc_140A11A82
                cmp     al, 90h
                jz      short loc_140A119B6
                cmp     al, 0F1h
                jnz     loc_140A11A82

loc_140A119B6:                          ; CODE XREF: sub_140A115E8+3C4↑j
                mov     r12b, cl
                xor     ebp, ebp
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r11
                xor     rdx, rcx
                mul     rdx
                xor     eax, edx
                mov     [rsp+0B8h+var_60], rdx
                and     eax, 3
                cmp     eax, r9d
                ja      short loc_140A11A3B
                mov     r12, cr8
                mov     cr8, r10
                mov     rdx, gs:20h
                mov     rcx, [rsi+648h]
                test    eax, eax
                jnz     short loc_140A11A08
                mov     rbp, [rcx+rdx]
                jmp     short loc_140A11A1E
; ---------------------------------------------------------------------------

loc_140A11A08:                          ; CODE XREF: sub_140A115E8+418↑j
                mov     rcx, [rcx+rdx]
                add     rcx, [rsi+6A8h]
                mov     rax, [rsi+688h]
                mov     rbp, [rcx+rax]

loc_140A11A1E:                          ; CODE XREF: sub_140A115E8+41E↑j
                mov     eax, [rsi+990h]
                shr     eax, 0Ah
                and     eax, 1Fh
                lock bts [rbp+0], eax
                jnb     short loc_140A11A3B
                xor     ebp, ebp
                movzx   eax, r12b
                mov     cr8, rax

loc_140A11A3B:                          ; CODE XREF: sub_140A115E8+3FC↑j
                                        ; sub_140A115E8+447↑j
                mov     rcx, rdi
                call    sub_140A13340
                mov     r8, [r14]
                mov     rdx, r14
                mov     rcx, rdi
                call    sub_140A13010
                mov     r8, rax
                test    rbp, rbp
                jz      short loc_140A11A7A
                mov     ecx, [rsi+990h]
                mov     edx, 1
                shr     ecx, 0Ah
                and     ecx, 1Fh
                shl     edx, cl
                not     edx
                lock and [rbp+0], edx
                movzx   eax, r12b
                mov     cr8, rax

loc_140A11A7A:                          ; CODE XREF: sub_140A115E8+46F↑j
                mov     r9d, 1
                jmp     short loc_140A11A85
; ---------------------------------------------------------------------------

loc_140A11A82:                          ; CODE XREF: sub_140A115E8+394↑j
                                        ; sub_140A115E8+39E↑j ...
                xor     r8d, r8d

loc_140A11A85:                          ; CODE XREF: sub_140A115E8+498↑j
                mov     ecx, [rsp+0B8h+arg_0]
                xor     rbx, r8
                rol     rbx, cl
                add     r14, 8
                mov     rcx, [rsp+0B8h+var_90]
                add     r15d, 0FFFFFFF8h
                mov     r10d, 2
                mov     r11, 7010008004002001h
                sub     r13, r9
                jnz     loc_140A11976

loc_140A11AB8:                          ; CODE XREF: sub_140A115E8+37D↑j
                mov     eax, r14d
                and     eax, 0FFFh
                cmp     eax, 0FF8h
                ja      loc_140A11C01
                mov     rbp, [rsp+0B8h+arg_8]
                mov     cl, [rbp-1]
                cmp     byte ptr [rbp-6], 4Ch ; 'L'
                jnz     loc_140A11BEE
                cmp     byte ptr [rbp-5], 87h
                jnz     loc_140A11BEE
                cmp     byte ptr [rbp-4], 0
                jnz     loc_140A11BEE
                cmp     byte ptr [rbp-3], 98h
                jnz     loc_140A11BEE
                cmp     byte ptr [rbp-2], 0C3h
                jnz     loc_140A11BEE
                cmp     cl, 90h
                jz      short loc_140A11B16
                cmp     cl, 0F1h
                jnz     loc_140A11BEE

loc_140A11B16:                          ; CODE XREF: sub_140A115E8+523↑j
                xor     edi, edi
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, 7010008004002001h
                xor     rdx, rcx
                mul     rdx
                xor     eax, edx
                mov     [rsp+0B8h+var_58], rdx
                and     eax, 3
                cmp     eax, r9d
                ja      short loc_140A11BA3
                mov     r12, cr8
                lea     ecx, [rdi+2]
                mov     cr8, rcx
                mov     rdx, gs:20h
                mov     rcx, [rsi+648h]
                test    eax, eax
                jnz     short loc_140A11B6F
                mov     rdi, [rdx+rcx]
                jmp     short loc_140A11B85
; ---------------------------------------------------------------------------

loc_140A11B6F:                          ; CODE XREF: sub_140A115E8+57F↑j
                mov     rcx, [rdx+rcx]
                add     rcx, [rsi+6A8h]
                mov     rax, [rsi+688h]
                mov     rdi, [rcx+rax]

loc_140A11B85:                          ; CODE XREF: sub_140A115E8+585↑j
                mov     eax, [rsi+990h]
                shr     eax, 0Ah
                and     eax, 1Fh
                lock bts [rdi], eax
                jnb     short loc_140A11BA8
                xor     edi, edi
                movzx   eax, r12b
                mov     cr8, rax
                jmp     short loc_140A11BA8
; ---------------------------------------------------------------------------

loc_140A11BA3:                          ; CODE XREF: sub_140A115E8+560↑j
                mov     r12, [rsp+0B8h+var_90]

loc_140A11BA8:                          ; CODE XREF: sub_140A115E8+5AD↑j
                                        ; sub_140A115E8+5B9↑j
                lea     rcx, [rbp-6]
                call    sub_140A13340
                mov     r8, [r14]
                lea     rcx, [rbp-6]
                mov     rdx, r14
                call    sub_140A13010
                mov     r8, rax
                mov     r9d, 1
                test    rdi, rdi
                jz      short loc_140A11BF5
                mov     ecx, [rsi+990h]
                mov     edx, r9d
                shr     ecx, 0Ah
                and     ecx, 1Fh
                shl     edx, cl
                not     edx
                lock and [rdi], edx
                movzx   eax, r12b
                mov     cr8, rax
                jmp     short loc_140A11BF5
; ---------------------------------------------------------------------------

loc_140A11BEE:                          ; CODE XREF: sub_140A115E8+4F2↑j
                                        ; sub_140A115E8+4FC↑j ...
                xor     r8d, r8d
                lea     r9d, [r8+1]

loc_140A11BF5:                          ; CODE XREF: sub_140A115E8+5E4↑j
                                        ; sub_140A115E8+604↑j
                mov     [rsp+0B8h+var_80], r8
                lea     r14, [rsp+0B8h+var_80]
                jmp     short loc_140A11C07
; ---------------------------------------------------------------------------

loc_140A11C01:                          ; CODE XREF: sub_140A115E8+4DD↑j
                mov     r9d, 1

loc_140A11C07:                          ; CODE XREF: sub_140A115E8+617↑j
                test    r15d, r15d
                jz      short loc_140A11C26
                mov     ecx, [rsp+0B8h+arg_0]

loc_140A11C13:                          ; CODE XREF: sub_140A115E8+63C↓j
                movzx   eax, byte ptr [r14]
                add     r14, r9
                xor     rbx, rax
                rol     rbx, cl
                add     r15d, 0FFFFFFFFh
                jnz     short loc_140A11C13

loc_140A11C26:                          ; CODE XREF: sub_140A115E8+622↑j
                mov     eax, ebx
                jmp     short loc_140A11C2C
; ---------------------------------------------------------------------------

loc_140A11C2A:                          ; CODE XREF: sub_140A115E8+64B↓j
                xor     eax, ebx

loc_140A11C2C:                          ; CODE XREF: sub_140A115E8+640↑j
                shr     rbx, 1Fh
                test    rbx, rbx
                jnz     short loc_140A11C2A
                btr     eax, 1Fh
                add     rsp, 78h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                pop     rbx
                retn
sub_140A115E8   endp

; ---------------------------------------------------------------------------
algn_140A11C4A:                         ; DATA XREF: .pdata:000000014012C15C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A11C50   proc near               ; CODE XREF: sub_1403DDA90+3686↑p
                                        ; sub_1409FA010+3DEF↑p ...

var_28          = qword ptr -28h

                push    rbx
                sub     rsp, 20h
                xor     r8d, r8d
                test    rcx, rcx
                jz      short loc_140A11C67
                mov     rax, [rcx+5E0h]
                jmp     short loc_140A11C6E
; ---------------------------------------------------------------------------

loc_140A11C67:                          ; CODE XREF: sub_140A11C50+C↑j
                mov     rax, cs:qword_140CFB358

loc_140A11C6E:                          ; CODE XREF: sub_140A11C50+15↑j
                shr     rdx, 9
                lea     r9, [rsp+28h+var_28]
                mov     ebx, 1
                mov     r11, 7FFFFFFFF8h
                and     rdx, r11
                add     rdx, rax
                lea     r10d, [rbx+3]

loc_140A11C8F:                          ; CODE XREF: sub_140A11C50+68↓j
                mov     [r9], rdx
                test    rcx, rcx
                jz      short loc_140A11CA0
                mov     rax, [rcx+5E0h]
                jmp     short loc_140A11CA7
; ---------------------------------------------------------------------------

loc_140A11CA0:                          ; CODE XREF: sub_140A11C50+45↑j
                mov     rax, cs:qword_140CFB358

loc_140A11CA7:                          ; CODE XREF: sub_140A11C50+4E↑j
                shr     rdx, 9
                add     r9, 8
                and     rdx, r11
                add     rdx, rax
                sub     r10, rbx
                jnz     short loc_140A11C8F
                mov     r10d, r8d
                mov     r9d, 3

loc_140A11CC3:                          ; CODE XREF: sub_140A11C50+A1↓j
                mov     r11d, r9d
                test    r10d, r10d
                jz      short loc_140A11CD4
                mov     eax, r9d
                mov     [rsp+rax*8+28h+var_28], r8
                jmp     short loc_140A11CEB
; ---------------------------------------------------------------------------

loc_140A11CD4:                          ; CODE XREF: sub_140A11C50+79↑j
                test    r9d, r9d
                jz      short loc_140A11CF3
                mov     eax, r9d
                mov     rcx, [rsp+rax*8+28h+var_28]
                mov     dl, [rcx]
                shr     dl, 7
                test    dl, dl
                cmovnz  r10d, ebx

loc_140A11CEB:                          ; CODE XREF: sub_140A11C50+82↑j
                dec     r9d
                test    r11d, r11d
                jnz     short loc_140A11CC3

loc_140A11CF3:                          ; CODE XREF: sub_140A11C50+87↑j
                cmp     [rsp+28h+var_28], r8
                setz    r8b
                mov     eax, r8d
                add     rsp, 20h
                pop     rbx
                retn
sub_140A11C50   endp

; ---------------------------------------------------------------------------
algn_140A11D04:                         ; DATA XREF: .pdata:000000014012C168↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_140A11D10   proc near               ; CODE XREF: sub_1403EB7A4+85↑p
                                        ; DATA XREF: .pdata:000000014012C174↑o ...

var_D0          = dword ptr -0D0h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_90          = qword ptr -90h
var_88          = dword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = byte ptr -60h
var_50          = byte ptr -50h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = byte ptr -20h
arg_8           = qword ptr  18h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                mov     [rax+10h], rdx
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-5Fh]
                sub     rsp, 0B0h
                mov     eax, [rdx+990h]
                xor     r15d, r15d
                mov     ecx, 110000h
                mov     rdi, rdx
                and     eax, ecx
                lea     r14d, [r15+8]
                lea     r12d, [r15+1]
                cmp     eax, ecx
                jz      loc_140A11DFC
                mov     rdx, [rdx+8E0h]
                lea     r8d, [r15+26h]
                mov     rax, rdx
                mov     ecx, 130h

loc_140A11D6D:                          ; CODE XREF: sub_140A11D10+69↓j
                mov     [rax], r15
                add     ecx, 0FFFFFFF8h
                add     rax, r14
                sub     r8, r12
                jnz     short loc_140A11D6D
                test    ecx, ecx
                jz      short loc_140A11D8A

loc_140A11D7F:                          ; CODE XREF: sub_140A11D10+78↓j
                mov     [rax], r15b
                add     rax, r12
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A11D7F

loc_140A11D8A:                          ; CODE XREF: sub_140A11D10+6D↑j
                movups  xmm0, xmmword ptr [rdi+848h]
                mov     eax, 12Fh
                movdqu  xmmword ptr [rdx+10h], xmm0
                movups  xmm1, xmmword ptr [rdi+858h]
                movdqu  xmmword ptr [rdx+20h], xmm1
                movups  xmm0, xmmword ptr [rdi+868h]
                movdqu  xmmword ptr [rdx+120h], xmm0
                mov     word ptr [rbp+57h+var_60], ax
                lea     rax, [rdi+878h]
                mov     qword ptr [rbp+57h+var_60+2], rdx
                mov     rcx, rax
                shr     rcx, 10h
                mov     [rdx+10h], ax
                shr     rax, 20h
                mov     [rdx+18h], eax
                mov     [rdx+16h], cx
                cli
                cmp     [rdi+990h], r15d
                jge     short loc_140A11DEB
                mov     dr7, r15
                jmp     short loc_140A11DFB
; ---------------------------------------------------------------------------

loc_140A11DEB:                          ; CODE XREF: sub_140A11D10+D3↑j
                sidt    fword ptr [rbp+57h+var_50]
                lidt    fword ptr [rbp+57h+var_60]
                mov     dr7, r15
                lidt    fword ptr [rbp+57h+var_50]

loc_140A11DFB:                          ; CODE XREF: sub_140A11D10+D9↑j
                sti

loc_140A11DFC:                          ; CODE XREF: sub_140A11D10+44↑j
                add     dword ptr [rdi+828h], 620h
                lea     rcx, [rdi+620h]
                mov     esi, [rdi+0C4h]
                mov     r9, rdi
                mov     r10d, [rdi+814h]
                mov     rax, rdi
                mov     r11, [rdi+818h]
                mov     r13d, 40h ; '@'
                mov     [rdi+0C4h], r15d
                cmp     rdi, rcx
                jnb     short loc_140A11E44

loc_140A11E39:                          ; CODE XREF: sub_140A11D10+132↓j
                prefetchnta byte ptr [rax]
                add     rax, r13
                cmp     rax, rcx
                jb      short loc_140A11E39

loc_140A11E44:                          ; CODE XREF: sub_140A11D10+127↑j
                mov     r8, r11
                mov     ebx, 0Ch
                mov     r13, 7010008004002001h

loc_140A11E56:                          ; CODE XREF: sub_140A11D10+196↓j
                mov     rdx, r14

loc_140A11E59:                          ; CODE XREF: sub_140A11D10+167↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, r8
                add     r9, r14
                rol     rax, cl
                mov     r8, [r9]
                add     r9, r14
                xor     r8, rax
                rol     r8, cl
                sub     rdx, r12
                jnz     short loc_140A11E59
                mov     rcx, r9
                sub     rcx, rdi
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rbp+57h+var_40], rdx
                xor     r10d, eax
                and     r10d, 3Fh
                cmovz   r10d, r12d
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A11E56
                lea     edx, [rbx+20h]
                lea     ebx, [rdx-1Ch]
                mov     r11d, ebx
                lea     r13d, [rdx+20h]

loc_140A11EB5:                          ; CODE XREF: sub_140A11D10+1B7↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, r14
                add     edx, 0FFFFFFF8h
                sub     r11, r12
                jnz     short loc_140A11EB5
                test    edx, edx
                jz      short loc_140A11EE2

loc_140A11ECD:                          ; CODE XREF: sub_140A11D10+1D0↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r12
                rol     r8, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A11ECD

loc_140A11EE2:                          ; CODE XREF: sub_140A11D10+1BB↑j
                mov     r9, 0A3A03F5891C8B4E8h
                mov     [rdi+0C4h], esi
                cmp     [rdi+0A20h], r8
                jz      short loc_140A11F6F
                mov     rax, [rdi+590h]
                mov     ecx, [rdi+7E4h]
                mov     [rax], rdi
                mov     [rax+10h], ecx
                mov     eax, [rdi+8F8h]
                mov     rdx, [rdi+0A20h]
                test    eax, eax
                jnz     short loc_140A11F6F
                mov     rax, [rdi+590h]
                mov     rcx, r8
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rdi+8F8h]
                test    eax, eax
                jnz     short loc_140A11F6F
                lea     rax, [rdi+r9]
                mov     [rdi+908h], r15
                xor     edx, edx
                mov     [rdi+900h], rax
                mov     rcx, rdi
                mov     qword ptr [rdi+910h], 109h
                mov     [rdi+918h], r8
                mov     [rdi+8F8h], r12d
                call    sub_140A113CC

loc_140A11F6F:                          ; CODE XREF: sub_140A11D10+1E9↑j
                                        ; sub_140A11D10+20D↑j ...
                mov     [rbp+57h+var_90], r15
                lea     rax, [rbp+57h+var_88]

loc_140A11F77:                          ; CODE XREF: sub_140A11D10+270↓j
                mov     [rax], r15b
                add     rax, r12
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A11F77
                lea     r11d, [rbx+2]
                mov     ecx, r15d
                mov     dword ptr [rbp+57h+var_80], ecx
                cmp     [rdi+7E0h], r15d
                jbe     loc_140A122E8

loc_140A11F99:                          ; CODE XREF: sub_140A11D10+5CE↓j
                mov     rax, [rdi+0A78h]
                mov     r9, rdi
                test    rax, rax
                mov     r8d, r15d
                cmovnz  r9, rax
                mov     ebx, [r9+808h]
                add     rbx, r9
                cmp     dword ptr [rbp+57h+var_90], r15d
                jz      short loc_140A11FCC
                cmp     dword ptr [rbp+57h+var_90+4], ecx
                ja      short loc_140A11FCC
                mov     ebx, [rbp+57h+var_88]
                mov     r8d, dword ptr [rbp+57h+var_90+4]
                add     rbx, r9

loc_140A11FCC:                          ; CODE XREF: sub_140A11D10+2AB↑j
                                        ; sub_140A11D10+2B0↑j
                cmp     r8d, ecx
                jz      loc_140A120D8
                mov     eax, ecx
                mov     r13, 0AAAAAAAAAAAAAAABh
                sub     eax, r8d
                mov     r10d, eax
                add     r8d, eax

loc_140A11FEA:                          ; CODE XREF: sub_140A11D10+3BE↓j
                mov     ecx, [rbx]
                cmp     ecx, 0Ch
                jg      short loc_140A12033
                jz      short loc_140A12050
                sub     ecx, 1
                jz      short loc_140A12050
                sub     ecx, 6
                jz      short loc_140A12022
                sub     ecx, 1
                jz      short loc_140A12019
                cmp     ecx, r11d
                jnz     loc_140A1208C
                mov     eax, [rbx+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A120C8
; ---------------------------------------------------------------------------

loc_140A12019:                          ; CODE XREF: sub_140A11D10+2F0↑j
                movzx   eax, word ptr [rbx+20h]
                jmp     loc_140A120C2
; ---------------------------------------------------------------------------

loc_140A12022:                          ; CODE XREF: sub_140A11D10+2EB↑j
                mov     eax, [rbx+18h]
                add     eax, r11d
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A120C8
; ---------------------------------------------------------------------------

loc_140A12033:                          ; CODE XREF: sub_140A11D10+2DF↑j
                cmp     ecx, 1Ch
                jz      loc_140A120BE
                cmp     ecx, 1Eh
                jz      short loc_140A12093
                cmp     ecx, 20h ; ' '
                jle     short loc_140A1208C
                cmp     ecx, 22h ; '"'
                jle     short loc_140A12066
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A1208C

loc_140A12050:                          ; CODE XREF: sub_140A11D10+2E1↑j
                                        ; sub_140A11D10+2E6↑j
                mov     ecx, [rbx+10h]
                mov     rax, r13
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A120C8
; ---------------------------------------------------------------------------

loc_140A12066:                          ; CODE XREF: sub_140A11D10+339↑j
                mov     ecx, [rbx+20h]
                mov     edx, [rbx+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A120C8
; ---------------------------------------------------------------------------

loc_140A1208C:                          ; CODE XREF: sub_140A11D10+2F5↑j
                                        ; sub_140A11D10+334↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A120C8
; ---------------------------------------------------------------------------

loc_140A12093:                          ; CODE XREF: sub_140A11D10+32F↑j
                mov     eax, [rbx+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r13
                mul     rcx
                movzx   eax, word ptr [rbx+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, r11d
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A120C8
; ---------------------------------------------------------------------------

loc_140A120BE:                          ; CODE XREF: sub_140A11D10+326↑j
                movzx   eax, word ptr [rbx+28h]

loc_140A120C2:                          ; CODE XREF: sub_140A11D10+30D↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A120C8:                          ; CODE XREF: sub_140A11D10+304↑j
                                        ; sub_140A11D10+31E↑j ...
                add     rbx, rax
                sub     r10, r12
                jnz     loc_140A11FEA
                lea     r13d, [r10+40h]

loc_140A120D8:                          ; CODE XREF: sub_140A11D10+2BF↑j
                mov     r11, [rbx+8]
                mov     eax, ebx
                mov     r14d, [rdi+814h]
                sub     eax, r9d
                mov     r15, [rdi+818h]
                mov     r9, r11
                mov     dword ptr [rbp+57h+var_90+4], r8d
                mov     r8d, [rbx+10h]
                add     [rdi+828h], r8d
                mov     [rbp+57h+var_88], eax
                mov     rax, r11
                mov     dword ptr [rbp+57h+var_90], r12d
                lea     rcx, [r11+r8]
                cmp     r11, rcx
                jnb     short loc_140A1211F

loc_140A12114:                          ; CODE XREF: sub_140A11D10+40D↓j
                prefetchnta byte ptr [rax]
                add     rax, r13
                cmp     rax, rcx
                jb      short loc_140A12114

loc_140A1211F:                          ; CODE XREF: sub_140A11D10+402↑j
                mov     r10d, r8d
                mov     rsi, r15
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A1218A
                mov     rdi, 7010008004002001h

loc_140A12138:                          ; CODE XREF: sub_140A11D10+474↓j
                mov     eax, 8

loc_140A1213D:                          ; CODE XREF: sub_140A11D10+444↓j
                xor     rsi, [r9]
                mov     ecx, r14d
                rol     rsi, cl
                xor     rsi, [r9+8]
                add     r9, 10h
                rol     rsi, cl
                sub     rax, r12
                jnz     short loc_140A1213D
                mov     rcx, r9
                sub     rcx, r11
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     eax, edx
                mov     [rbp+57h+var_38], rdx
                xor     r14d, eax
                and     r14d, 3Fh
                cmovz   r14d, r12d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A12138
                mov     rdi, [rbp+57h+arg_8]

loc_140A1218A:                          ; CODE XREF: sub_140A11D10+41C↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A121B1
                mov     eax, r8d
                shr     rax, 3

loc_140A1219B:                          ; CODE XREF: sub_140A11D10+49F↓j
                xor     rsi, [r9]
                mov     ecx, r14d
                rol     rsi, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rax, r12
                jnz     short loc_140A1219B

loc_140A121B1:                          ; CODE XREF: sub_140A11D10+482↑j
                xor     r15d, r15d
                test    r8d, r8d
                jz      short loc_140A121CF

loc_140A121B9:                          ; CODE XREF: sub_140A11D10+4BD↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r14d
                xor     rsi, rax
                add     r9, r12
                rol     rsi, cl
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A121B9

loc_140A121CF:                          ; CODE XREF: sub_140A11D10+4A7↑j
                mov     rax, rsi
                jmp     short loc_140A121D6
; ---------------------------------------------------------------------------

loc_140A121D4:                          ; CODE XREF: sub_140A11D10+4CD↓j
                xor     esi, eax

loc_140A121D6:                          ; CODE XREF: sub_140A11D10+4C2↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A121D4
                btr     esi, 1Fh
                mov     r12d, r15d
                cmp     esi, [rbx+14h]
                jz      loc_140A122BF
                cmp     [rbx], r15d
                jnz     short loc_140A121FF
                cmp     [rbx+18h], r15d
                lea     ecx, [rax+1]
                cmovnz  r12d, ecx

loc_140A121FF:                          ; CODE XREF: sub_140A11D10+4E2↑j
                mov     ecx, [rbx+10h]
                mov     rdx, [rbx+8]
                test    rcx, rcx
                jz      loc_140A1240E
                mov     eax, [rdi+994h]
                test    r13b, al
                jz      loc_140A1240E
                mov     r13, cr8
                mov     eax, 2
                mov     cr8, rax
                mov     r14, rdx
                lea     rax, [rcx-1]
                and     r14, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rbp+57h+var_70], rax
                lea     rax, [r14-1]
                mov     [rbp+57h+var_78], rax

loc_140A1224E:                          ; CODE XREF: sub_140A11D10+5A6↓j
                movzx   r15d, r13b

loc_140A12252:                          ; CODE XREF: sub_140A11D10+585↓j
                mov     rax, [rdi+468h]
                xor     edx, edx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A12297
                test    r12d, r12d
                jnz     loc_140A12407
                lea     eax, [r12+1]
                cmp     r13b, al
                ja      short loc_140A1229F
                movzx   r15d, r13b
                mov     cr8, r15
                mov     al, [r14]
                mov     rax, cr8
                lea     eax, [r12+2]
                mov     cr8, rax
                jmp     short loc_140A12252
; ---------------------------------------------------------------------------

loc_140A12297:                          ; CODE XREF: sub_140A11D10+558↑j
                test    eax, eax
                js      loc_140A12407

loc_140A1229F:                          ; CODE XREF: sub_140A11D10+56B↑j
                mov     rax, [rbp+57h+var_78]
                mov     edx, 1000h
                add     rax, rdx
                add     r14, rdx
                mov     [rbp+57h+var_78], rax
                cmp     rax, [rbp+57h+var_70]
                jnz     short loc_140A1224E
                mov     cr8, r15
                xor     r15d, r15d

loc_140A122BF:                          ; CODE XREF: sub_140A11D10+4D9↑j
                mov     r12d, 1

loc_140A122C5:                          ; CODE XREF: sub_140A11D10+72D↓j
                                        ; sub_140A11D10+77D↓j
                mov     ecx, dword ptr [rbp+57h+var_80]
                mov     r13d, 40h ; '@'
                add     ecx, r12d
                mov     dword ptr [rbp+57h+var_80], ecx
                lea     r11d, [r13-3Eh]
                cmp     ecx, [rdi+7E0h]
                jb      loc_140A11F99
                lea     r14d, [r13-38h]

loc_140A122E8:                          ; CODE XREF: sub_140A11D10+283↑j
                cmp     [rdi+8F8h], r15d
                jz      loc_140A12517
                mov     r13, [rdi+910h]
                mov     rbx, [rdi+918h]
                mov     rsi, [rdi+908h]
                mov     r12, [rdi+900h]
                mov     [rbp+57h+arg_8], r13
                mov     [rbp+57h+var_70], rbx
                mov     [rbp+57h+var_78], rsi
                mov     [rbp+57h+var_80], r12
                mov     [rbp+57h+var_68], rdi
                mov     rax, cr8
                cmp     al, r11b
                jnb     short loc_140A12336
                mov     rax, cr8
                mov     cr8, r11

loc_140A12336:                          ; CODE XREF: sub_140A11D10+61C↑j
                mov     rdx, gs:20h
                mov     rcx, gs:20h
                mov     rax, [rdi+638h]
                mov     r14, [rdx+rax]
                mov     rax, [rdi+648h]
                mov     r15, [rcx+rax]
                mov     rax, [rdi+640h]
                cmp     byte ptr [rdx+rax], 0
                jz      short loc_140A12384
                lea     rax, [rbp+57h+var_68]
                cmp     rax, r14
                ja      short loc_140A12384
                lea     rax, [r14-6000h]
                lea     rcx, [rbp+57h+var_68]
                cmp     rcx, rax
                jnb     short loc_140A1238F

loc_140A12384:                          ; CODE XREF: sub_140A11D10+659↑j
                                        ; sub_140A11D10+662↑j
                mov     rax, [rdi+678h]
                mov     r14, [r15+rax]

loc_140A1238F:                          ; CODE XREF: sub_140A11D10+672↑j
                test    dword ptr [rdi+990h], 8000000h
                jnz     loc_140A126E8
                mov     r12, cr0
                mov     rax, r12
                btr     rax, 10h
                mov     cr0, rax
                mov     r9d, [rdi+0AA0h]
                lea     r8, [rdi+0AA8h]
                shl     r9, 4
                xor     r10d, r10d
                add     r9, r8
                mov     rdx, r9
                cmp     [rdi+0AA4h], r10d
                jbe     loc_140A124B0
                lea     r13d, [r10+1]

loc_140A123DA:                          ; CODE XREF: sub_140A11D10+796↓j
                mov     rcx, [rdx]
                mov     rax, [rdx+8]
                mov     [rcx], rax
                mov     rcx, cr4
                test    rcx, 20080h
                jz      loc_140A12492
                mov     rax, rcx
                btc     rax, 7
                mov     cr4, rax
                mov     cr4, rcx
                jmp     loc_140A12498
; ---------------------------------------------------------------------------

loc_140A12407:                          ; CODE XREF: sub_140A11D10+55D↑j
                                        ; sub_140A11D10+589↑j
                mov     cr8, r15
                xor     r15d, r15d

loc_140A1240E:                          ; CODE XREF: sub_140A11D10+4F9↑j
                                        ; sub_140A11D10+508↑j
                mov     eax, [rdi+8F8h]
                mov     edx, [rbx+14h]
                test    eax, eax
                jnz     short loc_140A12431
                mov     rax, [rdi+590h]
                mov     ecx, esi
                xor     rcx, rdx
                mov     [rax+18h], rcx
                mov     eax, [rdi+8F8h]

loc_140A12431:                          ; CODE XREF: sub_140A11D10+709↑j
                mov     rcx, [rbx+8]
                mov     r12d, 1
                test    eax, eax
                jnz     loc_140A122C5
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rdi
                mov     [rdi+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, rbx
                mov     [rdi+908h], rax
                movsxd  rax, dword ptr [rbx]
                mov     [rdi+918h], rcx
                mov     rcx, rdi
                mov     [rdi+910h], rax
                mov     [rdi+8F8h], r12d
                call    sub_140A113CC
                jmp     loc_140A122C5
; ---------------------------------------------------------------------------

loc_140A12492:                          ; CODE XREF: sub_140A11D10+6DE↑j
                mov     rax, cr3
                mov     cr3, rax

loc_140A12498:                          ; CODE XREF: sub_140A11D10+6F2↑j
                add     rdx, 10h
                add     r10d, r13d
                cmp     r10d, [rdi+0AA4h]
                jb      loc_140A123DA
                mov     r13, [rbp+57h+arg_8]

loc_140A124B0:                          ; CODE XREF: sub_140A11D10+6C0↑j
                cmp     r8, r9
                jnb     loc_140A126D6
                mov     r13d, 1

loc_140A124BF:                          ; CODE XREF: sub_140A11D10+805↓j
                mov     esi, [r8+8]
                mov     rcx, rdx
                mov     r10, [r8]
                mov     r11d, esi
                cmp     esi, 8
                jb      short loc_140A124EE
                mov     ebx, esi
                shr     rbx, 3

loc_140A124D7:                          ; CODE XREF: sub_140A11D10+7DC↓j
                mov     rax, [rcx]
                add     r11d, 0FFFFFFF8h
                mov     [r10], rax
                add     rcx, 8
                add     r10, 8
                sub     rbx, r13
                jnz     short loc_140A124D7

loc_140A124EE:                          ; CODE XREF: sub_140A11D10+7BF↑j
                test    r11d, r11d
                jz      short loc_140A12505
                sub     r10, rcx

loc_140A124F6:                          ; CODE XREF: sub_140A11D10+7F3↓j
                mov     al, [rcx]
                mov     [r10+rcx], al
                add     rcx, r13
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A124F6

loc_140A12505:                          ; CODE XREF: sub_140A11D10+7E1↑j
                add     rdx, rsi
                add     r8, 10h
                cmp     r8, r9
                jnb     loc_140A126C4
                jmp     short loc_140A124BF
; ---------------------------------------------------------------------------

loc_140A12517:                          ; CODE XREF: sub_140A11D10+5DF↑j
                mov     r8d, [rdi+7F0h]
                mov     r10, 7010008004002001h
                add     r8, rdi
                test    dword ptr [rdi+990h], 10000000h
                jz      short loc_140A1256C
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     r8, rdx
                mov     [rbp+57h+var_30], rdx
                xor     r8, rax
                lea     rax, sub_140409800
                and     r8d, 0Fh
                shl     r8, 4
                add     r8, rax

loc_140A1256C:                          ; CODE XREF: sub_140A11D10+825↑j
                mov     r9, [rdi+0A08h]
                test    r9, r9
                jnz     short loc_140A1257D
                mov     r9, rdi
                jmp     short loc_140A125C1
; ---------------------------------------------------------------------------

loc_140A1257D:                          ; CODE XREF: sub_140A11D10+866↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r10
                xor     rdx, rcx
                mul     rdx
                mov     [rbp+57h+var_28], rdx
                xor     rdx, rax
                mov     rax, rdx
                mov     [r9+10h], rdx
                xor     rax, r8
                xor     rdx, rdi
                mov     [r9+18h], rax
                mov     [r9+8], rdx
                lock or [rsp+0D0h+var_D0], r15d
                mov     r8, [rdi+2F0h]

loc_140A125C1:                          ; CODE XREF: sub_140A11D10+86B↑j
                mov     [rdi+7A8h], r8
                mov     [rdi+7B0h], r9
                mov     [rdi+798h], r15
                cli
                sti
                mov     rax, [rdi+268h]
                lea     rbx, [rdi+800h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                mov     dl, al
                mov     rcx, rbx
                mov     rax, [rdi+270h]
                call    j__guard_dispatch_icall_nop
                mov     ecx, [rdi+838h]
                sub     ecx, 3
                jz      short loc_140A1267E
                sub     ecx, 1
                jz      short loc_140A12658
                cmp     ecx, 1
                jnz     loc_140A1269B
                mov     rcx, [rdi+998h]
                lea     rdx, [rdi+9A0h]
                add     rcx, r14
                mov     r8, r14

loc_140A1262C:                          ; CODE XREF: sub_140A11D10+92F↓j
                mov     rax, [rdx]
                add     r13d, 0FFFFFFF8h
                mov     [rcx], rax
                add     rdx, r14
                add     rcx, r14
                sub     r8, r12
                jnz     short loc_140A1262C
                test    r13d, r13d
                jz      short loc_140A1269B

loc_140A12646:                          ; CODE XREF: sub_140A11D10+944↓j
                mov     al, [rdx]
                add     rdx, r12
                mov     [rcx], al
                add     rcx, r12
                add     r13d, 0FFFFFFFFh
                jnz     short loc_140A12646
                jmp     short loc_140A1269B
; ---------------------------------------------------------------------------

loc_140A12658:                          ; CODE XREF: sub_140A11D10+8FD↑j
                mov     rdx, [rdi+9E0h]
                mov     rcx, [rdx+40h]
                mov     rax, rcx
                xor     rax, [rdx+48h]
                xor     rax, rdx
                xor     rcx, [rdx+38h]
                mov     [rcx], rax
                mov     [rdx+48h], r15
                mov     [rdx+38h], r15
                jmp     short loc_140A1269B
; ---------------------------------------------------------------------------

loc_140A1267E:                          ; CODE XREF: sub_140A11D10+8F8↑j
                cli
                mov     rcx, gs:20h
                mov     rax, [rdi+648h]
                mov     rcx, [rcx+rax]
                mov     [rdi+998h], rcx
                sti

loc_140A1269B:                          ; CODE XREF: sub_140A11D10+902↑j
                                        ; sub_140A11D10+934↑j ...
                lock or [rsp+0D0h+var_D0], r15d
                lea     r11, [rsp+0D0h+var_20]
                mov     rax, rdi
                mov     rbx, [r11+30h]
                mov     rsi, [r11+40h]
                mov     rdi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_140A126C4:                          ; CODE XREF: sub_140A11D10+7FF↑j
                mov     r13, [rbp+57h+arg_8]
                mov     r11d, 2
                mov     rbx, [rbp+57h+var_70]
                mov     rsi, [rbp+57h+var_78]

loc_140A126D6:                          ; CODE XREF: sub_140A11D10+7A3↑j
                mov     rax, [rdi+218h]
                mov     byte ptr [rax], 0C3h
                mov     cr0, r12
                mov     r12, [rbp+57h+var_80]

loc_140A126E8:                          ; CODE XREF: sub_140A11D10+689↑j
                mov     ecx, [rdi+928h]
                test    ecx, ecx
                jz      loc_140A127D4
                mov     rax, cr8
                cmp     al, r11b
                jnb     short loc_140A1270D
                mov     rax, cr8
                mov     cr8, r11
                mov     ecx, [rdi+928h]

loc_140A1270D:                          ; CODE XREF: sub_140A11D10+9ED↑j
                test    ecx, ecx
                jz      loc_140A127D4
                sub     ecx, 1
                jz      loc_140A127C7
                sub     ecx, 1
                jz      loc_140A127BE
                sub     ecx, 1
                jz      loc_140A127B5
                sub     ecx, 1
                jz      short loc_140A12779
                cmp     ecx, 1
                jz      short loc_140A12753
                mov     rax, [rdi+5B8h]
                mov     ecx, 1
                lock or [rax+340h], rcx
                jmp     loc_140A127D4
; ---------------------------------------------------------------------------

loc_140A12753:                          ; CODE XREF: sub_140A11D10+A28↑j
                mov     rcx, gs:20h
                mov     rax, [rdi+648h]
                mov     edx, [rdi+990h]
                shr     edx, 0Ah
                and     edx, 1Fh
                mov     rcx, [rcx+rax]
                lock bts [rcx], edx
                jmp     short loc_140A127D4
; ---------------------------------------------------------------------------

loc_140A12779:                          ; CODE XREF: sub_140A11D10+A23↑j
                mov     rcx, gs:20h
                mov     rax, [rdi+648h]
                mov     r8d, [rdi+990h]
                shr     r8d, 0Ah
                and     r8d, 1Fh
                mov     rcx, [rcx+rax]
                add     rcx, [rdi+6A8h]
                mov     rax, [rdi+688h]
                mov     rdx, [rcx+rax]
                lock bts [rdx], r8d
                jmp     short loc_140A127D4
; ---------------------------------------------------------------------------

loc_140A127B5:                          ; CODE XREF: sub_140A11D10+A1A↑j
                mov     rax, [rdi+560h]
                jmp     short loc_140A127CE
; ---------------------------------------------------------------------------

loc_140A127BE:                          ; CODE XREF: sub_140A11D10+A11↑j
                mov     rax, [rdi+558h]
                jmp     short loc_140A127CE
; ---------------------------------------------------------------------------

loc_140A127C7:                          ; CODE XREF: sub_140A11D10+A08↑j
                mov     rax, [rdi+548h]

loc_140A127CE:                          ; CODE XREF: sub_140A11D10+AAC↑j
                                        ; sub_140A11D10+AB5↑j
                lock bts qword ptr [rax], 0

loc_140A127D4:                          ; CODE XREF: sub_140A11D10+9E0↑j
                                        ; sub_140A11D10+9FF↑j ...
                mov     rax, [rdi+690h]
                and     qword ptr [r15+rax], 0
                mov     rax, [rdi+6A0h]
                and     qword ptr [r15+rax], 0
                mov     rcx, [rdi+158h]
                call    sub_140A13340
                mov     rax, [rdi+158h]
                mov     r9, rbx
                mov     [rsp+0D0h+var_A0], r14
                mov     r8, rsi
                mov     [rsp+0D0h+var_A8], rax
                mov     rdx, r12
                mov     ecx, 109h
                mov     [rsp+0D0h+var_B0], r13
                call    sub_140A13080
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A11D10   endp

algn_140A12822:                         ; DATA XREF: .pdata:000000014012C174↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A12830   proc near               ; DATA XREF: .pdata:000000014012C180↑o
                                        ; sub_140A1EEE4+B52↓o

var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = byte ptr -78h
var_68          = byte ptr -68h
var_58          = qword ptr -58h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 70h
                mov     rbx, rcx
                mov     rcx, [rcx+0A60h]
                cmp     dword ptr [rcx], 2Ch ; ','
                jz      short loc_140A128B1
                xor     edi, edi
                cmp     [rbx+8F8h], edi
                jnz     loc_140A12EC8
                mov     rax, 0A3A03F5891C8B4E8h
                mov     qword ptr [rbx+910h], 101h
                add     rax, rbx
                mov     [rbx+918h], rdi
                mov     [rbx+900h], rax
                lea     r14d, [rdi+1]
                mov     rax, 0B3B74BDEE4453415h
                mov     [rbx+8F8h], r14d
                add     rax, rcx
                xor     edx, edx
                mov     rcx, rbx
                mov     [rbx+908h], rax
                call    sub_140A113CC
                jmp     loc_140A12EC8
; ---------------------------------------------------------------------------

loc_140A128B1:                          ; CODE XREF: sub_140A12830+1D↑j
                lea     rcx, [rbx+0A40h]
                cli
                xor     edx, edx
                call    sub_140A13560
                mov     rax, [rbx+0A68h]
                xor     edi, edi
                mov     [rsp+0A8h+arg_0], rax
                lea     r14d, [rdi+1]
                lea     r11d, [rdi+2]

loc_140A128D9:                          ; CODE XREF: sub_140A12830+691↓j
                mov     rax, gs:18h
                lea     rdx, [rsp+0A8h+var_78]
                mov     rsi, [rbx+8C0h]
                mov     r8d, 10h
                mov     r15d, [rbx+8F4h]
                mov     r9, r11
                mov     r10, [rax+38h]
                lea     r13, [rsi+20h]
                mov     [rsp+0A8h+arg_18], r13
                mov     rcx, r13

loc_140A12911:                          ; CODE XREF: sub_140A12830+F6↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, r14
                jnz     short loc_140A12911
                test    r8d, r8d
                jz      short loc_140A1293D

loc_140A1292D:                          ; CODE XREF: sub_140A12830+10B↓j
                mov     al, [rcx]
                add     rcx, r14
                mov     [rdx], al
                add     rdx, r14
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A1292D

loc_140A1293D:                          ; CODE XREF: sub_140A12830+FB↑j
                lea     r12, [rsi+120h]
                mov     r8d, 10h
                mov     [rsp+0A8h+arg_10], r12
                lea     rdx, [rsp+0A8h+var_68]
                mov     rcx, r12
                mov     r9, r11

loc_140A1295D:                          ; CODE XREF: sub_140A12830+142↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, r14
                jnz     short loc_140A1295D
                test    r8d, r8d
                jz      short loc_140A12989

loc_140A12979:                          ; CODE XREF: sub_140A12830+157↓j
                mov     al, [rcx]
                add     rcx, r14
                mov     [rdx], al
                add     rdx, r14
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A12979

loc_140A12989:                          ; CODE XREF: sub_140A12830+147↑j
                mov     al, [r10]
                mov     rcx, 7FFFFFFFF8h
                shr     r10, 9
                xor     edx, edx
                and     r10, rcx
                lea     rcx, [rbx+0A40h]
                add     r10, [rbx+5E0h]
                mov     [rsp+0A8h+var_88], r10
                mov     rax, [r10]
                mov     [rsp+0A8h+var_80], rax
                call    sub_140A13560
                test    al, al
                jz      loc_140A12B06
                mov     r10, [rsp+0A8h+arg_0]
                lea     rax, [rbx+10h]
                add     rax, r15
                lea     rdx, [rsi+400h]
                mov     rcx, rax
                mov     [r13+0], ax
                shr     rcx, 10h
                mov     r8d, 1000h
                shr     rax, 20h
                mov     r9d, 200h
                mov     [rsi+28h], eax
                lea     rax, [rbx+90h]
                add     rax, r15
                mov     [rsi+26h], cx
                mov     rcx, rax
                mov     [r12], ax
                shr     rcx, 10h
                shr     rax, 20h
                mov     [rsi+126h], cx
                mov     rcx, r10
                mov     [rsi+128h], eax

loc_140A12A2A:                          ; CODE XREF: sub_140A12830+20F↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, r14
                jnz     short loc_140A12A2A
                or      r11d, 0FFFFFFFFh
                test    r8d, r8d
                jz      short loc_140A12A59

loc_140A12A4A:                          ; CODE XREF: sub_140A12830+227↓j
                mov     al, [rcx]
                add     rcx, r14
                mov     [rdx], al
                add     rdx, r14
                add     r8d, r11d
                jnz     short loc_140A12A4A

loc_140A12A59:                          ; CODE XREF: sub_140A12830+218↑j
                mov     dword ptr [rbx+89Eh], 0F0C0894Ch
                lea     rcx, [rsp+0A8h+var_58]
                mov     dword ptr [rbx+8A2h], 11B10F48h
                mov     rax, r10
                mov     dword ptr [rbx+8A6h], 0C3C0940Fh
                mov     r8d, 4
                mov     [rsi+1408h], r10
                mov     edx, r8d
                mov     [rsi+1410h], r10
                mov     r10, 7FFFFFFFF8h
                shr     rax, 9
                mov     [rsi+1400h], rbx
                and     rax, r10
                mov     [rsi+1434h], r11d
                mov     [rsi+1430h], r8d
                mov     r9, [rbx+5E0h]
                add     rax, r9

loc_140A12AC6:                          ; CODE XREF: sub_140A12830+2AA↓j
                mov     [rcx], rax
                lea     rcx, [rcx+8]
                shr     rax, 9
                and     rax, r10
                add     rax, r9
                sub     rdx, r14
                jnz     short loc_140A12AC6

loc_140A12ADC:                          ; CODE XREF: sub_140A12830+2BE↓j
                add     r8d, r11d
                jz      short loc_140A12AF0
                mov     rax, [rsp+r8*8+0A8h+var_58]
                mov     ecx, [rax]
                shr     cl, 7
                test    r14b, cl
                jz      short loc_140A12ADC

loc_140A12AF0:                          ; CODE XREF: sub_140A12830+2AF↑j
                mov     rax, [rsp+r8*8+0A8h+var_58]
                mov     [rsi+1428h], rax
                mov     rax, [rax]
                mov     [rsi+1420h], rax

loc_140A12B06:                          ; CODE XREF: sub_140A12830+191↑j
                xor     edx, edx
                lea     rcx, [rbx+0A40h]
                call    sub_140A13560
                mov     rax, [rsi+1418h]
                mov     rdx, 0FFFFFFFFF000h
                mov     rcx, [rsp+0A8h+var_88]
                shl     rax, 0Ch
                xor     rax, [rsp+0A8h+var_80]
                and     rax, rdx
                xor     rax, [rsp+0A8h+var_80]
                mov     [rcx], rax
                mov     rax, [rsi+1420h]
                mov     rcx, [rsi+1428h]
                or      rax, 42h
                mov     [rcx], rax
                mov     rcx, cr4
                test    rcx, 20080h
                jz      short loc_140A12B6F
                mov     rax, rcx
                btc     rax, 7
                mov     cr4, rax
                mov     cr4, rcx
                jmp     short loc_140A12B75
; ---------------------------------------------------------------------------

loc_140A12B6F:                          ; CODE XREF: sub_140A12830+32D↑j
                mov     rax, cr3
                mov     cr3, rax

loc_140A12B75:                          ; CODE XREF: sub_140A12830+33D↑j
                xor     edx, edx
                lea     rcx, [rbx+0A40h]
                lea     r15, [rsi+1430h]
                call    sub_140A13560
                test    al, al
                jz      short loc_140A12B93
                lock and dword ptr [r15], 0FFFFFFFBh

loc_140A12B93:                          ; CODE XREF: sub_140A12830+35C↑j
                xor     edx, edx
                lea     rcx, [rbx+0A40h]
                call    sub_140A13560
                test    al, al
                jz      loc_140A12D66
                mov     eax, gs:1A4h
                lea     r13, [rsi+400h]
                mov     rdx, r13
                mov     [rsi+1434h], eax
                mov     [rsp+0A8h+arg_8], rdx
                lea     r9, [rsi+1410h]
                mov     r12d, edi

loc_140A12BD3:                          ; CODE XREF: sub_140A12830+483↓j
                test    dword ptr [rbx+994h], 20000h
                lea     r10, [rbx+89Eh]
                mov     r11, [rsp+0A8h+arg_0]
                mov     r8d, r12d
                jnz     short loc_140A12C3F
                mov     rdx, gs:20h
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     rax, [rbx+4C0h]
                add     rcx, rbx
                mov     [rax], rcx
                lea     rcx, [r8+r11]
                mov     rax, [rbx+4C8h]
                mov     [rax], rdx
                mov     rax, [rbx+4D0h]
                mov     rdx, [rsp+0A8h+arg_8]
                mov     [rax], rcx
                mov     rax, [rbx+4D8h]
                mov     qword ptr [rax], 114h

loc_140A12C3F:                          ; CODE XREF: sub_140A12830+3BF↑j
                lea     rcx, [r8+r11]
                xor     eax, eax
                mov     [r9], rcx
                lea     r8d, [rax+2]
                lock cmpxchg [r15], r8d
                jnz     short loc_140A12CC5
                test    r12b, 7
                jnz     short loc_140A12C79
                mov     r8, [rdx]
                mov     rax, r10
                mov     rdx, 0C3C3C3C3C3C3C3C3h
                call    j__guard_dispatch_icall_nop
                lea     r9, [rsi+1410h]
                test    al, al
                jz      short loc_140A12CB8

loc_140A12C79:                          ; CODE XREF: sub_140A12830+427↑j
                mov     rcx, r9
                lea     rax, [rbx+893h]
                call    j__guard_dispatch_icall_nop
                lock and dword ptr [r15], 0FFFFFFFDh
                mov     rdx, [rsp+0A8h+arg_8]
                lea     r9, [rsi+1410h]
                add     rdx, r14
                add     r12d, r14d
                mov     [rsp+0A8h+arg_8], rdx
                cmp     r12d, 1000h
                jnb     short loc_140A12CBD
                jmp     loc_140A12BD3
; ---------------------------------------------------------------------------

loc_140A12CB8:                          ; CODE XREF: sub_140A12830+447↑j
                lock and dword ptr [r15], 0FFFFFFFDh

loc_140A12CBD:                          ; CODE XREF: sub_140A12830+481↑j
                mov     r11, [rsp+0A8h+arg_0]

loc_140A12CC5:                          ; CODE XREF: sub_140A12830+421↑j
                mov     edx, 1000h
                cmp     r12d, edx
                jz      short loc_140A12CDE
                lock or dword ptr [r15], 8
                lea     rax, [r11+0FFFh]
                mov     [r9], rax

loc_140A12CDE:                          ; CODE XREF: sub_140A12830+49D↑j
                mov     rcx, r11
                mov     r8d, 200h

loc_140A12CE7:                          ; CODE XREF: sub_140A12830+4CC↓j
                mov     rax, [r13+0]
                add     edx, 0FFFFFFF8h
                mov     [rcx], rax
                add     r13, 8
                add     rcx, 8
                sub     r8, r14
                jnz     short loc_140A12CE7
                test    edx, edx
                jz      short loc_140A12D13

loc_140A12D02:                          ; CODE XREF: sub_140A12830+4E1↓j
                mov     al, [r13+0]
                add     r13, r14
                mov     [rcx], al
                add     rcx, r14
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A12D02

loc_140A12D13:                          ; CODE XREF: sub_140A12830+4D0↑j
                lock or dword ptr [r15], 4
                test    dword ptr [rbx+994h], 20000h
                mov     r12, [rsp+0A8h+arg_10]
                mov     r13, [rsp+0A8h+arg_18]
                jnz     short loc_140A12D66
                mov     rax, [rbx+4C0h]
                mov     rcx, 0A3A03F5891C8B4E8h
                mov     [rax], rcx
                mov     rax, [rbx+4C8h]
                mov     [rax], rdi
                mov     rax, [rbx+4D0h]
                mov     [rax], rdi
                mov     rax, [rbx+4D8h]
                mov     [rax], rdi

loc_140A12D66:                          ; CODE XREF: sub_140A12830+373↑j
                                        ; sub_140A12830+502↑j
                xor     edx, edx
                lea     rcx, [rbx+0A40h]
                call    sub_140A13560
                mov     rax, [rsi+1428h]
                mov     rcx, [rsi+1420h]
                mov     [rax], rcx
                mov     rax, [rsp+0A8h+var_88]
                mov     rcx, [rsp+0A8h+var_80]
                mov     [rax], rcx
                mov     rcx, cr4
                test    rcx, 20080h
                jz      short loc_140A12DAE
                mov     rax, rcx
                btc     rax, 7
                mov     cr4, rax
                mov     cr4, rcx
                jmp     short loc_140A12DB4
; ---------------------------------------------------------------------------

loc_140A12DAE:                          ; CODE XREF: sub_140A12830+56C↑j
                mov     rax, cr3
                mov     cr3, rax

loc_140A12DB4:                          ; CODE XREF: sub_140A12830+57C↑j
                mov     r15d, [rsi+1430h]
                lea     rcx, [rbx+0A40h]
                xor     edx, edx
                call    sub_140A13560
                test    al, al
                jz      loc_140A12EA9
                mov     [rsi+1400h], rdi
                mov     eax, 1000h
                mov     [rsi+1408h], rdi
                mov     ecx, 200h
                mov     [rsi+1410h], rdi
                mov     r10d, 0FFFFFFF8h
                mov     [rsi+1420h], rdi
                mov     [rsi+1428h], rdi
                mov     [rsi+1430h], rdi
                add     rsi, 400h

loc_140A12E12:                          ; CODE XREF: sub_140A12830+5EF↓j
                mov     [rsi], rdi
                add     eax, r10d
                add     rsi, 8
                sub     rcx, r14
                jnz     short loc_140A12E12
                or      r9d, 0FFFFFFFFh
                test    eax, eax
                jz      short loc_140A12E34

loc_140A12E29:                          ; CODE XREF: sub_140A12830+602↓j
                mov     [rsi], dil
                add     rsi, r14
                add     eax, r9d
                jnz     short loc_140A12E29

loc_140A12E34:                          ; CODE XREF: sub_140A12830+5F7↑j
                mov     esi, 10h
                lea     rcx, [rsp+0A8h+var_78]
                mov     edx, esi
                lea     r11d, [rsi-0Eh]
                mov     r8d, r11d

loc_140A12E47:                          ; CODE XREF: sub_140A12830+62C↓j
                mov     rax, [rcx]
                add     edx, r10d
                mov     [r13+0], rax
                add     rcx, 8
                add     r13, 8
                sub     r8, r14
                jnz     short loc_140A12E47
                test    edx, edx
                jz      short loc_140A12E73

loc_140A12E62:                          ; CODE XREF: sub_140A12830+641↓j
                mov     al, [rcx]
                add     rcx, r14
                mov     [r13+0], al
                add     r13, r14
                add     edx, r9d
                jnz     short loc_140A12E62

loc_140A12E73:                          ; CODE XREF: sub_140A12830+630↑j
                mov     edx, esi
                lea     rcx, [rsp+0A8h+var_68]
                mov     r8, r11

loc_140A12E7D:                          ; CODE XREF: sub_140A12830+662↓j
                mov     rax, [rcx]
                add     edx, r10d
                mov     [r12], rax
                add     rcx, 8
                add     r12, 8
                sub     r8, r14
                jnz     short loc_140A12E7D
                test    edx, edx
                jz      short loc_140A12EA9

loc_140A12E98:                          ; CODE XREF: sub_140A12830+677↓j
                mov     al, [rcx]
                add     rcx, r14
                mov     [r12], al
                add     r12, r14
                add     edx, r9d
                jnz     short loc_140A12E98

loc_140A12EA9:                          ; CODE XREF: sub_140A12830+59B↑j
                                        ; sub_140A12830+666↑j
                xor     edx, edx
                lea     rcx, [rbx+0A40h]
                call    sub_140A13560
                mov     r11d, 2
                test    r15b, 8
                jnz     loc_140A128D9
                sti

loc_140A12EC8:                          ; CODE XREF: sub_140A12830+27↑j
                                        ; sub_140A12830+7C↑j
                mov     rax, rbx
                add     rsp, 70h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                retn
sub_140A12830   endp

; ---------------------------------------------------------------------------
byte_140A12EDB  db 15h dup(0CCh)        ; DATA XREF: .pdata:000000014012C180↑o

; =============== S U B R O U T I N E =======================================


sub_140A12EF0   proc near               ; DATA XREF: .pdata:000000014012C18C↑o
                                        ; sub_1409FA010+11585↑o
                sub     rsp, 28h
                cmp     dword ptr [r8+8F8h], 0
                jnz     short loc_140A12F41
                and     qword ptr [r8+908h], 0
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, r8
                mov     [r8+918h], rcx
                xor     edx, edx
                mov     [r8+900h], rax
                mov     rcx, r8
                mov     qword ptr [r8+910h], 110h
                mov     dword ptr [r8+8F8h], 1
                call    sub_140A113CC

loc_140A12F41:                          ; CODE XREF: sub_140A12EF0+C↑j
                add     rsp, 28h
                retn
sub_140A12EF0   endp

; ---------------------------------------------------------------------------
algn_140A12F46:                         ; DATA XREF: .pdata:000000014012C18C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A12F60   proc near               ; CODE XREF: sub_1403DDA90+B062↑p
                                        ; sub_1403DDA90+B477↑p ...
                sgdt    fword ptr [rcx]
                sidt    fword ptr [rdx]
                retn
sub_140A12F60   endp

; ---------------------------------------------------------------------------
algn_140A12F67:                         ; DATA XREF: .pdata:000000014012C198↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A12F70   proc near               ; CODE XREF: sub_1403DDA90:loc_1403E8C3C↑p
                                        ; sub_1409FA010:loc_140A05CC6↑p
                                        ; DATA XREF: ...
                sldt    ax
                retn
sub_140A12F70   endp

; ---------------------------------------------------------------------------
algn_140A12F75:                         ; DATA XREF: .pdata:000000014012C1A4↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A12F80   proc near               ; CODE XREF: sub_1403DDA90+B16C↑p
                                        ; sub_1409FA010+BC76↑p
                                        ; DATA XREF: ...
                mov     ax, ss
                retn
sub_140A12F80   endp

; ---------------------------------------------------------------------------
algn_140A12F84:                         ; DATA XREF: .pdata:000000014012C1B0↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A12F90   proc near               ; CODE XREF: sub_1403DDA90+B1B5↑p
                                        ; sub_1409FA010+BCBF↑p
                                        ; DATA XREF: ...
                str     ax
                retn
sub_140A12F90   endp

; ---------------------------------------------------------------------------
algn_140A12F95:                         ; DATA XREF: .pdata:000000014012C1BC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A12FA0   proc near               ; CODE XREF: sub_1403DDA90:loc_1403E88F6↑p
                                        ; sub_1409FA010:loc_140A05971↑p
                                        ; DATA XREF: ...

var_8           = dword ptr -8

                mov     eax, ss
                pushfq
                or      [rsp+8+var_8], 100h
                popfq
                mov     ss, eax
                icebp
                pushfq
                and     [rsp+8+var_8], 0FFFFFEFFh
                popfq
                retn
sub_140A12FA0   endp

; ---------------------------------------------------------------------------
algn_140A12FB8:                         ; DATA XREF: .pdata:000000014012C1C8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A12FC0   proc near               ; CODE XREF: sub_1403DDA90+B182↑p
                                        ; sub_1409FA010+BC8C↑p
                                        ; DATA XREF: ...
                mov     ss, word ptr [rcx]
                syscall                 ; Low latency system call
                mov     rax, rcx
                retn
sub_140A12FC0   endp

; ---------------------------------------------------------------------------
algn_140A12FC8:                         ; DATA XREF: .pdata:000000014012C1D4↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A12FD0   proc near               ; CODE XREF: sub_1403DDA90+B157↑p
                                        ; sub_1409FA010+BC61↑p
                                        ; DATA XREF: ...

var_18          = dword ptr -18h

                mov     ecx, 0C0000084h
                rdmsr
                push    rdx
                push    rax
                and     eax, 0FFFFFEFFh
                wrmsr
                pushfq
                or      [rsp+18h+var_18], 100h
                popfq
                syscall                 ; Low latency system call
                mov     r10, rcx
                mov     ecx, 0C0000084h
                pop     rax
                pop     rdx
                wrmsr
                mov     rax, r10
                retn
sub_140A12FD0   endp

; ---------------------------------------------------------------------------
byte_140A12FFB  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C1E0↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A13010   proc near               ; CODE XREF: sub_140A115E8+176↑p
                                        ; sub_140A115E8+2A3↑p ...
                sub     rsp, 28h
                mov     rax, rdx
                call    rcx
                or      r9, 0FFFFFFFFFFFFFFFFh
                xchg    rax, rdx
                cwde
                cmp     rax, rdx
                mov     rax, r9
                cmovz   rax, r8
                add     rsp, 28h
                retn
sub_140A13010   endp

; ---------------------------------------------------------------------------
algn_140A1302F:                         ; DATA XREF: .pdata:000000014012C1EC↑o
                align 20h
qword_140A13040 dq 85131481131482Eh, 8BFFFFF000918D48h, 0C20348000007E882h
                                        ; DATA XREF: .pdata:000000014012C1F8↑o
                                        ; sub_140A1EEE4+B44↓o
                dq 8348D0FF28EC8348h, 110808B4C28C4h, 798888D4800h, 0E0FF4100000001BAh
algn_140A13078:                         ; DATA XREF: .pdata:000000014012C1F8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A13080   proc near               ; CODE XREF: sub_1403DC860+ECA↑p
                                        ; sub_1403DDA90+C2B5↑p ...

arg_20          = qword ptr  28h
arg_28          = qword ptr  30h
arg_30          = qword ptr  38h

                mov     rsi, [rsp+arg_28]
                mov     rdi, [rsp+arg_20]
                mov     r10, [rsp+arg_30]
                xor     eax, eax

loc_140A13091:                          ; CODE XREF: sub_140A13080+1B↓j
                mov     [r10], rax
                sub     r10, 8
                cmp     r10, rsp
                jnb     short loc_140A13091
                mov     [rsp+arg_20], rdi
                mov     ebx, eax
                mov     edi, eax
                mov     ebp, eax
                mov     r10, rax
                mov     r11, rax
                mov     r12, rax
                mov     r13, rax
                mov     r14, rax
                mov     r15, rax
                jmp     rsi
sub_140A13080   endp

; ---------------------------------------------------------------------------
byte_140A130BC  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C204↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A130D0   proc near               ; DATA XREF: .pdata:000000014012C210↑o
                                        ; sub_140A130D0+42↓o ...
                sub     rsp, 48h
                call    sub_1409FA010
                lea     rcx, [rax+800h]
                mov     rdx, [rcx]
                or      rdx, rdx
                jnz     short loc_140A13156
                add     rsp, 40h
                push    rbx
                mov     rdx, rax
                mov     rcx, [rax+7C8h]
                mov     r8, [rax+100h]
                mov     r10d, [rax+7E4h]
                mov     rbx, [rax+7D0h]
                mov     r9, rcx
                xor     r9, rsp
                lea     r11, sub_140A130D0

loc_140A13119:                          ; CODE XREF: sub_140A130D0+5A↓j
                xor     r9, [rdx]
                mov     [rdx], r9
                ror     r9, 3
                add     rdx, 8
                cmp     rdx, r11
                jb      short loc_140A13119
                lea     r11, [rax+r10-7]
                lea     rdx, loc_140A13156

loc_140A13138:                          ; CODE XREF: sub_140A130D0+79↓j
                xor     r9, [rdx]
                mov     [rdx], r9
                ror     r9, 5
                add     rdx, 8
                cmp     rdx, r11
                jb      short loc_140A13138
                mov     rdx, rbx
                pop     rbx
                add     rsp, 8
                jmp     r8
; ---------------------------------------------------------------------------

loc_140A13156:                          ; CODE XREF: sub_140A130D0+16↑j
                                        ; DATA XREF: sub_140A130D0+61↑o
                add     rsp, 48h
                xor     edx, edx
                mov     rax, [rax+270h]
                jmp     rax
; ---------------------------------------------------------------------------
                add     rsp, 48h
                retn
; ---------------------------------------------------------------------------
                prefetchw byte ptr [rcx]
                retn
sub_140A130D0   endp

; ---------------------------------------------------------------------------
algn_140A1316E:                         ; DATA XREF: .pdata:000000014012C210↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A13180   proc near               ; CODE XREF: sub_140A3A0D4+40↓p
                                        ; DATA XREF: .pdata:000000014012C21C↑o ...
                xor     eax, eax
                inc     eax
                retn
sub_140A13180   endp

; ---------------------------------------------------------------------------
algn_140A13185:                         ; DATA XREF: .pdata:000000014012C21C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A13190   proc near               ; DATA XREF: sub_140A1EEE4+6A49↓o
                push    0
                push    rbp
                jmp     sub_140A132A0
sub_140A13190   endp

; ---------------------------------------------------------------------------
                push    1
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    2
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    3
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    4
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    5
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    6
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    7
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    8
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    9
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    0Ah
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    0Bh
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    0Ch
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    0Dh
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    0Eh
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    0Fh
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    10h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    11h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    12h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    13h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    14h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    15h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    16h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    17h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    18h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    19h
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    1Ah
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    1Bh
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    1Ch
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    1Dh
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    1Eh
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                push    1Fh
                push    rbp
                jmp     sub_140A132A0
; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A132A0   proc near               ; CODE XREF: sub_140A13190+3↑j
                                        ; INITKDBG:0000000140A1319B↑j ...

var_98          = xmmword ptr -98h
var_88          = xmmword ptr -88h
var_78          = xmmword ptr -78h
var_68          = xmmword ptr -68h
var_58          = xmmword ptr -58h
var_48          = xmmword ptr -48h
arg_0           = qword ptr  8
arg_8           = byte ptr  10h

                push    r11
                push    r10
                push    r9
                push    r8
                push    rcx
                push    rdx
                push    rax
                sub     rsp, 80h
                movaps  [rsp+0B8h+var_98], xmm0
                movaps  [rsp+0B8h+var_88], xmm1
                movaps  [rsp+0B8h+var_78], xmm2
                movaps  [rsp+0B8h+var_68], xmm3
                movaps  [rsp+0B8h+var_58], xmm4
                movaps  [rsp+0B8h+var_48], xmm5
                lea     rcx, [rsp+0B8h+arg_8]
                mov     rdx, [rsp+0B8h+arg_0]
                call    sub_140A0DEA0
                mov     [rsp+0B8h+arg_0], rax
                movaps  xmm5, [rsp+0B8h+var_48]
                movaps  xmm4, [rsp+0B8h+var_58]
                movaps  xmm3, [rsp+0B8h+var_68]
                movaps  xmm2, [rsp+0B8h+var_78]
                movaps  xmm1, [rsp+0B8h+var_88]
                movaps  xmm0, [rsp+0B8h+var_98]
                add     rsp, 80h
                pop     rax
                pop     rdx
                pop     rcx
                pop     r8
                pop     r9
                pop     r10
                pop     r11
                pop     rbp
                retn
sub_140A132A0   endp ; sp-analysis failed

; ---------------------------------------------------------------------------
byte_140A1331F  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C228↑o
                align 10h
; [00000006 BYTES: COLLAPSED FUNCTION j__guard_dispatch_icall_nop. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A13336:                         ; DATA XREF: .pdata:000000014012C234↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_140A13340   proc near               ; CODE XREF: sub_1403DC860+EA1↑p
                                        ; sub_1403DDA90+C288↑p ...
                jmp     sub_140407980
sub_140A13340   endp

; ---------------------------------------------------------------------------
algn_140A13345:                         ; DATA XREF: .pdata:000000014012C240↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A13350   proc near               ; DATA XREF: .pdata:000000014012C24C↑o
                                        ; sub_140A1EEE4+16427↓o ...

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_8           = dword ptr -8
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     r11, rsp
                mov     [r11+18h], rbx
                mov     [r11+20h], rbp
                pushfq
                push    rsi
                push    rdi
                sub     rsp, 30h
                lfence
                mov     r10, [rcx+40h]
                mov     esi, 10h
                mov     eax, [rsp+48h+var_8]
                xor     r10, rdx
                mov     [rsp+48h+arg_0], rax
                lea     rdx, [r11-28h]
                mov     rax, 0FFFF800000000000h
                mov     [rsp+48h+var_28], 0A0ADABA8h
                or      r10, rax
                mov     [rsp+48h+var_24], 0AFA4A1AEh
                mov     ecx, r10d
                mov     [rsp+48h+var_20], 0ACA6A2A5h
                and     ecx, 3Fh
                mov     [rsp+48h+var_1C], 0AAA3A7A9h
                mov     rax, r10
                mov     r9, r10
                ror     rax, cl
                mov     r8d, esi
                mov     [r11+10h], rax
                lea     rcx, [r11-28h]

loc_140A133C6:                          ; CODE XREF: sub_140A13350+86↓j
                mov     al, [rcx]
                inc     rcx
                xor     al, 0A8h
                mov     [rdx], al
                inc     rdx
                sub     r8, 1
                jnz     short loc_140A133C6
                mov     rbx, [rsp+48h+arg_8]
                lea     edi, [r8+19h]
                xor     r11d, r11d
                mov     rbp, 481131482E085131h

loc_140A133EE:                          ; CODE XREF: sub_140A13350+172↓j
                mov     r8, [r9]
                mov     edx, 0C8h
                mov     rax, r8
                mov     ecx, r11d
                xor     rax, rbx
                sub     edx, r11d
                add     rax, r10
                not     r8d
                add     rcx, rax
                and     r8d, 3Fh
                mov     eax, r11d
                xor     rdx, rax
                mov     [r9], rcx
                mov     ecx, r8d
                ror     rdx, cl
                xor     rbx, rdx
                rol     rbx, cl
                add     rbx, r10
                mov     [rsp+48h+arg_8], rbx
                test    esi, esi
                jz      short loc_140A13455
                mov     r8d, esi

loc_140A13433:                          ; CODE XREF: sub_140A13350+103↓j
                mov     rdx, [r9]
                rol     rdx, 4
                movzx   eax, dl
                and     rdx, 0FFFFFFFFFFFFFFF0h
                and     eax, 0Fh
                movzx   ecx, byte ptr [rsp+rax+48h+var_28]
                or      rdx, rcx
                mov     [r9], rdx
                sub     r8, 1
                jnz     short loc_140A13433

loc_140A13455:                          ; CODE XREF: sub_140A13350+DE↑j
                add     r9, 8
                cmp     r11d, 18h
                jnz     short loc_140A134BC
                mov     [rsp+48h+arg_0], rbp
                mov     rcx, [rsp+48h+arg_0]
                mov     rax, [rsp+48h+arg_0]
                shr     rax, 18h
                shl     rcx, 28h
                or      rax, rcx
                mov     [rsp+48h+arg_0], rax
                mov     rax, [rsp+48h+arg_0]
                xor     rax, [r10]
                jz      short loc_140A134B2
                mov     rcx, [rsp+48h+arg_0]
                xor     rcx, [r9-8]
                mov     rax, [r10]
                xor     rax, rcx
                mov     rcx, [rsp+48h+arg_0]
                mov     [r9-8], rax
                add     edi, [r9-4]
                xor     rcx, [r9-8]
                mov     rax, [r10]
                xor     rax, rcx
                mov     [r9-8], rax

loc_140A134B2:                          ; CODE XREF: sub_140A13350+136↑j
                mov     rbx, [rsp+48h+arg_8]
                mov     esi, 1

loc_140A134BC:                          ; CODE XREF: sub_140A13350+10D↑j
                inc     r11d
                cmp     r11d, edi
                jb      loc_140A133EE
                mov     [rsp+48h+arg_0], rbp
                xor     r9d, r9d
                mov     rcx, [rsp+48h+arg_0]
                mov     rax, [rsp+48h+arg_0]
                shr     rax, 18h
                shl     rcx, 28h
                or      rax, rcx
                mov     rcx, r10
                mov     [rsp+48h+arg_0], rax
                mov     rax, [rsp+48h+arg_0]
                xor     rax, [r10]
                mov     [rsp+48h+arg_8], rax
                mov     [rsp+48h+arg_0], 31482E11h
                mov     r8, [rsp+48h+arg_0]
                mov     rdx, [rsp+48h+arg_0]
                mov     edx, edx
                shr     rdx, 8
                shl     r8d, 18h
                or      rdx, r8
                xor     r8d, r8d
                mov     [rsp+48h+arg_0], rdx
                mov     rax, [rsp+48h+arg_0]
                mov     rdx, [rsp+48h+arg_8]
                mov     [r10], eax
                mov     rax, r10
                call    rax
                nop     dword ptr [rax]
                mov     rbx, [rsp+48h+arg_10]
                mov     rbp, [rsp+48h+arg_18]
                add     rsp, 30h
                pop     rdi
                pop     rsi
                pop     rcx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A13350   endp

algn_140A1354A:                         ; DATA XREF: .pdata:000000014012C24C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A13550   proc near               ; CODE XREF: sub_1403DDA90+9A30↑p
                                        ; sub_1409FA010+A4CB↑p
                                        ; DATA XREF: ...
                mov     [rcx+4], edx
                xor     eax, eax
                mov     [rcx], edx
                retn
sub_140A13550   endp

; ---------------------------------------------------------------------------
                db 0CCh
algn_140A13559:                         ; DATA XREF: .pdata:000000014012C258↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A13560   proc near               ; CODE XREF: sub_140A12830+8B↑p
                                        ; sub_140A12830+18A↑p ...

arg_0           = dword ptr  8

                and     [rsp+arg_0], 0
                or      eax, 0FFFFFFFFh
                lock xadd [rcx], eax
                dec     eax
                mov     r9d, 80000000h
                mov     r8d, eax
                not     r8d
                and     r8d, r9d
                test    eax, 7FFFFFFFh
                jnz     short loc_140A1359D
                or      r8d, [rcx+4]
                mov     eax, 1
                bt      edx, 10h
                jnb     short loc_140A13596
                mov     [rcx+4], eax

loc_140A13596:                          ; CODE XREF: sub_140A13560+31↑j
                mov     [rcx], r8d
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A1359B:                          ; CODE XREF: sub_140A13560+45↓j
                pause

loc_140A1359D:                          ; CODE XREF: sub_140A13560+22↑j
                mov     eax, [rcx]
                and     eax, r9d
                cmp     eax, r8d
                jnz     short loc_140A1359B
                bt      edx, 10h
                jnb     short loc_140A135B6
                mov     eax, 1
                lock add [rcx+4], eax

loc_140A135B6:                          ; CODE XREF: sub_140A13560+4B↑j
                xor     al, al
                retn
sub_140A13560   endp

; ---------------------------------------------------------------------------
                align 2
algn_140A135BA:                         ; DATA XREF: .pdata:000000014012C264↑o
                align 80h
                dq 140h dup(?)
INITKDBG        ends

; Section 17. (virtual address 00A14000)
; Virtual size                  : 0000175B (   5979.)
; Section size in file          : 00001800 (   6144.)
; Offset to raw data for section: 00963A00
; Flags 68000020: Text Not pageable Executable Readable
; Alignment     : default
; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
TRACESUP        segment para public 'CODE' use64
                assume cs:TRACESUP
                ;org 140A14000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                db 8 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_140A14008   proc near               ; CODE XREF: sub_140A143B4+230↓p
                                        ; sub_140A14610+A1↓p ...

var_28          = byte ptr -28h
var_24          = dword ptr -24h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = byte ptr  28h
arg_28          = byte ptr  30h
arg_30          = byte ptr  38h

; __unwind { // __C_specific_handler
                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+20h], rsi
                mov     [rax+18h], r8
                mov     [rax+8], rcx
                push    rdi
                push    r14
                push    r15
                sub     rsp, 30h
                mov     rsi, r8
                mov     rdi, rdx
                mov     r15, rcx
                mov     r14b, [rsp+48h+arg_30]
                mov     [rsp+48h+var_28], r14b

loc_140A1403A:                          ; DATA XREF: .rdata:00000001400BA264↑o
;   __try { // __except at loc_140A140DB
                mov     r8d, 1
                xor     ebx, ebx
                cmp     r9b, r8b
                jnz     short loc_140A14088
                test    r14b, r14b
                jz      short loc_140A1405B
                movzx   edx, [rsp+48h+arg_28]
                mov     rcx, rsi
                call    ProbeForWrite
                jmp     short loc_140A14088
; ---------------------------------------------------------------------------

loc_140A1405B:                          ; CODE XREF: sub_140A14008+42↑j
                cmp     [rsp+48h+arg_28], bl
                jz      short loc_140A14088
                movzx   ecx, [rsp+48h+arg_28]
                add     rcx, rsi
                mov     rax, 7FFFFFFF0000h
                cmp     rcx, rax
                ja      short loc_140A1407D
                cmp     rcx, rsi
                jnb     short loc_140A14088

loc_140A1407D:                          ; CODE XREF: sub_140A14008+6E↑j
                xor     eax, eax
                mov     ds:7FFFFFFF0000h, al

loc_140A14088:                          ; CODE XREF: sub_140A14008+3D↑j
                                        ; sub_140A14008+51↑j ...
                mov     rcx, rsi
                test    r14b, r14b
                cmovz   rcx, rdi
                cmovz   rdi, rsi
                movzx   edx, [rsp+48h+arg_28]
                sub     edx, 1
                jz      short loc_140A140CF
                sub     edx, 1
                jz      short loc_140A140C7
                cmp     edx, 2
                jz      short loc_140A140B2
                mov     rax, [rdi]

loc_140A140AD:                          ; CODE XREF: sub_140A14008+B7↓j
                mov     [rcx], rax
                jmp     short loc_140A140D3
; ---------------------------------------------------------------------------

loc_140A140B2:                          ; CODE XREF: sub_140A14008+A0↑j
                test    r14b, r14b
                jz      short loc_140A140C1
                cmp     [rsp+48h+arg_20], bl
                jz      short loc_140A140C1
                mov     eax, [rdi]
                jmp     short loc_140A140AD
; ---------------------------------------------------------------------------

loc_140A140C1:                          ; CODE XREF: sub_140A14008+AD↑j
                                        ; sub_140A14008+B3↑j
                mov     eax, [rdi]
                mov     [rcx], eax
                jmp     short loc_140A140D3
; ---------------------------------------------------------------------------

loc_140A140C7:                          ; CODE XREF: sub_140A14008+9B↑j
                movzx   eax, word ptr [rdi]
                mov     [rcx], ax
                jmp     short loc_140A140D3
; ---------------------------------------------------------------------------

loc_140A140CF:                          ; CODE XREF: sub_140A14008+96↑j
                mov     al, [rdi]
                mov     [rcx], al

loc_140A140D3:                          ; CODE XREF: sub_140A14008+A8↑j
                                        ; sub_140A14008+BD↑j ...
                mov     eax, ebx
                mov     [rsp+48h+var_24], ebx
                jmp     short loc_140A140F0
;   } // starts at 140A1403A
; ---------------------------------------------------------------------------

loc_140A140DB:                          ; DATA XREF: .rdata:00000001400BA264↑o
;   __except(1) // owned by 140A1403A
                mov     [rsp+48h+var_24], eax
                xor     ebx, ebx
                mov     rsi, [rsp+48h+arg_10]
                mov     r15, [rsp+48h+arg_0]
                mov     r14b, [rsp+48h+var_28]

loc_140A140F0:                          ; CODE XREF: sub_140A14008+D1↑j
                test    eax, eax
                jns     short loc_140A1410B
                mov     rcx, [r15]
                mov     dword ptr [rcx], 0C0000005h
                test    r14b, r14b
                setnz   bl
                mov     [rcx+20h], rbx
                mov     [rcx+28h], rsi

loc_140A1410B:                          ; CODE XREF: sub_140A14008+EA↑j
                mov     rbx, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_18]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 140A14008
sub_140A14008   endp

byte_140A14120  db 10h dup(0CCh)        ; DATA XREF: .pdata:000000014012C270↑o

; =============== S U B R O U T I N E =======================================


sub_140A14130   proc near               ; DATA XREF: .rdata:0000000140008ED0↑o
                                        ; .pdata:000000014012C27C↑o

var_28          = xmmword ptr -28h

                mov     r11, rsp
                sub     rsp, 48h
                xorps   xmm0, xmm0
                xor     eax, eax
                movups  [rsp+48h+var_28], xmm0
                mov     [r11-28h], rdx
                lea     rdx, [r11-28h]
                mov     [r11-18h], rax
                mov     [r11-20h], r8
                mov     [r11-18h], r9b
                call    sub_140A148C0
                add     rsp, 48h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A14130   endp

byte_140A14160  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C27C↑o

; =============== S U B R O U T I N E =======================================


sub_140A14168   proc near               ; CODE XREF: sub_140A143B4+49↓p
                                        ; sub_140A14610+26↓p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     esi, [r8]
                mov     r9, r8
                mov     rbx, rcx
                test    rdx, rdx
                jz      short loc_140A14193
                movzx   eax, byte ptr [rcx+16h]
                add     eax, esi
                mov     [r8], eax
                jmp     loc_140A14238
; ---------------------------------------------------------------------------

loc_140A14193:                          ; CODE XREF: sub_140A14168+1B↑j
                lea     rdi, [rcx+1Ah]
                mov     r8d, 1
                mov     rdx, rdi
                call    sub_140A15210
                test    eax, eax
                js      loc_140A1423A
                mov     cl, [rdi]
                mov     al, cl
                and     al, 0C0h
                cmp     al, 0C0h
                jz      short loc_140A141D5
                and     cl, 7
                cmp     cl, 4
                jnz     short loc_140A141D5
                lea     rdx, [rbx+1Bh]
                mov     r8d, 1
                mov     rcx, rbx
                call    sub_140A15210
                test    eax, eax
                js      short loc_140A1423A

loc_140A141D5:                          ; CODE XREF: sub_140A14168+4D↑j
                                        ; sub_140A14168+55↑j
                mov     al, [rdi]
                mov     cl, al
                shr     cl, 6
                test    cl, cl
                jnz     short loc_140A141EF
                and     al, 7
                cmp     al, 5
                jz      short loc_140A141F4
                mov     al, [rbx+1Bh]
                and     al, 7
                cmp     al, 5
                jz      short loc_140A141F4

loc_140A141EF:                          ; CODE XREF: sub_140A14168+76↑j
                cmp     cl, 2
                jnz     short loc_140A1420C

loc_140A141F4:                          ; CODE XREF: sub_140A14168+7C↑j
                                        ; sub_140A14168+85↑j
                lea     rdx, [rbx+1Ch]
                mov     r8d, 4
                mov     rcx, rbx
                call    sub_140A15210
                test    eax, eax
                js      short loc_140A1423A
                jmp     short loc_140A1422F
; ---------------------------------------------------------------------------

loc_140A1420C:                          ; CODE XREF: sub_140A14168+8A↑j
                cmp     cl, 1
                jnz     short loc_140A1422F
                lea     rdi, [rbx+1Ch]
                mov     r8d, 1
                mov     rdx, rdi
                mov     rcx, rbx
                call    sub_140A15210
                test    eax, eax
                js      short loc_140A1423A
                movsx   eax, byte ptr [rdi]
                mov     [rdi], eax

loc_140A1422F:                          ; CODE XREF: sub_140A14168+A2↑j
                                        ; sub_140A14168+A7↑j
                mov     al, [r9]
                sub     al, sil
                mov     [rbx+16h], al

loc_140A14238:                          ; CODE XREF: sub_140A14168+26↑j
                xor     eax, eax

loc_140A1423A:                          ; CODE XREF: sub_140A14168+3F↑j
                                        ; sub_140A14168+6B↑j ...
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A14168   endp

byte_140A1424B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C288↑o

; =============== S U B R O U T I N E =======================================


sub_140A14254   proc near               ; CODE XREF: sub_140A143B4+87↓p
                                        ; sub_140A14610+67↓p ...

var_18          = byte ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = qword ptr  28h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], rdi
                mov     [rax+20h], r14
                push    r15
                sub     rsp, 30h
                mov     al, [rdx+10h]
                xor     edi, edi
                mov     r14, [rsp+38h+arg_20]
                mov     r11, rcx
                movzx   ecx, byte ptr [rcx+1Ah]
                mov     r10, r9
                mov     [r9], al
                mov     r15, r8
                mov     al, cl
                mov     rsi, rdx
                and     al, 0C0h
                mov     [r14], dil
                mov     ebx, edi
                cmp     al, 0C0h
                jnz     short loc_140A142C2
                mov     r9b, [r11+19h]
                mov     r8d, ecx
                and     r9b, 1
                mov     [rsp+38h+var_18], 1
                and     r8d, 7
                mov     rcx, r11
                call    sub_140A15254
                mov     rbx, rax
                mov     [r10], dil
                mov     byte ptr [r14], 1
                jmp     loc_140A14382
; ---------------------------------------------------------------------------

loc_140A142C2:                          ; CODE XREF: sub_140A14254+41↑j
                mov     al, cl
                and     al, 7
                cmp     al, 4
                jnz     short loc_140A14341
                movzx   r10d, byte ptr [r11+1Bh]
                mov     al, r10b
                and     al, 7
                cmp     al, 5
                jnz     short loc_140A142DD
                cmp     cl, 40h ; '@'
                jb      short loc_140A142FC

loc_140A142DD:                          ; CODE XREF: sub_140A14254+82↑j
                mov     r9b, [r11+19h]
                mov     r8d, r10d
                and     r9b, 1
                mov     [rsp+38h+var_18], dil
                and     r8d, 7
                mov     rcx, r11
                call    sub_140A15254
                mov     rbx, [rax]

loc_140A142FC:                          ; CODE XREF: sub_140A14254+87↑j
                mov     al, r10b
                and     al, 38h
                cmp     al, 20h ; ' '
                jnz     short loc_140A1430C
                test    byte ptr [r11+19h], 2
                jz      short loc_140A14382

loc_140A1430C:                          ; CODE XREF: sub_140A14254+AF↑j
                mov     r9b, [r11+19h]
                mov     r8d, r10d
                shr     r8d, 3
                mov     rdx, rsi
                shr     r9b, 1
                and     r8d, 7
                and     r9b, 1
                mov     [rsp+38h+var_18], dil
                mov     rcx, r11
                call    sub_140A15254
                shr     r10, 6
                mov     cl, r10b
                mov     rdi, [rax]
                shl     rdi, cl
                jmp     short loc_140A14382
; ---------------------------------------------------------------------------

loc_140A14341:                          ; CODE XREF: sub_140A14254+74↑j
                cmp     cl, 40h ; '@'
                jnb     short loc_140A14363
                cmp     al, 5
                jnz     short loc_140A14363
                test    byte ptr [r11+19h], 1
                jnz     short loc_140A14363
                mov     rax, [rdx+8]
                movzx   ebx, byte ptr [r11+18h]
                add     rbx, [rax+0F8h]
                jmp     short loc_140A14382
; ---------------------------------------------------------------------------

loc_140A14363:                          ; CODE XREF: sub_140A14254+F0↑j
                                        ; sub_140A14254+F4↑j ...
                mov     r9b, [r11+19h]
                mov     r8d, ecx
                and     r9b, 1
                mov     [rsp+38h+var_18], dil
                and     r8d, 7
                mov     rcx, r11
                call    sub_140A15254
                mov     rbx, [rax]

loc_140A14382:                          ; CODE XREF: sub_140A14254+69↑j
                                        ; sub_140A14254+B6↑j ...
                movsxd  rax, dword ptr [r11+1Ch]
                mov     rsi, [rsp+38h+arg_8]
                add     rax, rdi
                mov     rdi, [rsp+38h+arg_10]
                add     rax, rbx
                mov     rbx, [rsp+38h+arg_0]
                mov     r14, [rsp+38h+arg_18]
                mov     [r15], rax
                add     rsp, 30h
                pop     r15
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A14254   endp

byte_140A143AB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C294↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_140A143B4   proc near               ; CODE XREF: sub_140A148C0+A7↓p
                                        ; DATA XREF: .pdata:000000014012C2A0↑o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = byte ptr -30h
var_20          = byte ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8
var_s0          = byte ptr  0
arg_0           = qword ptr  30h
arg_8           = byte ptr  38h
arg_10          = qword ptr  40h

                mov     [rsp-28h+arg_0], rbx
                mov     [rsp-28h+arg_10], rsi
                push    rbp
                push    rdi
                push    r12
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                and     [rbp+var_18], 0
                mov     ebx, r8d
                and     [rbp+var_10], 0
                mov     rdi, rdx
                mov     [rbp+arg_8], 0
                mov     rsi, rcx
                mov     [rbp+var_20], 0
                test    rdx, rdx
                jnz     short loc_140A143FA
                mov     eax, ebx
                and     eax, 1
                test    al, al
                jnz     short loc_140A143FA
                mov     byte ptr [rcx+1], 8

loc_140A143FA:                          ; CODE XREF: sub_140A143B4+37↑j
                                        ; sub_140A143B4+40↑j
                mov     r8, r9
                call    sub_140A14168
                mov     r14d, eax
                test    eax, eax
                js      loc_140A145EC
                test    rdi, rdi
                jnz     short loc_140A1441A
                xor     r14d, r14d
                jmp     loc_140A145EC
; ---------------------------------------------------------------------------

loc_140A1441A:                          ; CODE XREF: sub_140A143B4+5C↑j
                lea     rax, [rbp+var_20]
                mov     r15d, ebx
                shr     r15d, 1
                lea     r9, [rbp+arg_8]
                lea     r8, [rbp+var_10]
                mov     [rsp+60h+var_40], rax
                mov     rdx, rdi
                mov     rcx, rsi
                and     r15b, 1
                call    sub_140A14254
                mov     r12b, [rbp+var_20]
                lea     rax, [rbp+var_18]
                mov     r9b, [rbp+arg_8]
                mov     rdx, rdi
                mov     r8, [rbp+var_10]
                mov     rcx, rsi
                mov     [rsp+60h+var_38], rax
                mov     byte ptr [rsp+60h+var_40], r12b
                call    sub_140A153EC
                mov     r14d, eax
                test    eax, eax
                js      loc_140A145EC
                movzx   r8d, byte ptr [rsi+1Ah]
                mov     rdx, rdi
                mov     r9b, [rsi+19h]
                mov     rcx, rsi
                shr     r8d, 3
                shr     r9b, 2
                and     r8d, 7
                and     r9b, 1
                mov     byte ptr [rsp+60h+var_40], 1
                call    sub_140A15254
                mov     rcx, rsi
                mov     rdx, [rax]
                call    sub_140A156E0
                mov     r9, rax
                test    r15b, r15b
                jz      short loc_140A144B5
                mov     r9, [rbp+var_18]
                mov     rdx, rax
                jmp     short loc_140A144B9
; ---------------------------------------------------------------------------

loc_140A144B5:                          ; CODE XREF: sub_140A143B4+F6↑j
                mov     rdx, [rbp+var_18]

loc_140A144B9:                          ; CODE XREF: sub_140A143B4+FF↑j
                and     ebx, 38h
                jz      loc_140A14576
                cmp     ebx, 8
                jz      loc_140A1456E
                cmp     ebx, 10h
                jz      loc_140A1455C
                cmp     ebx, 18h
                jz      short loc_140A14547
                cmp     ebx, 20h ; ' '
                jz      short loc_140A1453C
                cmp     ebx, 28h ; '('
                jz      short loc_140A14521
                cmp     ebx, 30h ; '0'
                jz      short loc_140A14503
                mov     r8, rdx
                mov     [rsp+60h+var_40], r9
                sub     r8, r9
                mov     r9, rdx
                mov     rdx, rdi
                call    sub_140A1553C
                jmp     loc_140A145EC
; ---------------------------------------------------------------------------

loc_140A14503:                          ; CODE XREF: sub_140A143B4+132↑j
                xor     r9, rdx
                mov     rbx, r9
                mov     r8, r9

loc_140A1450C:                          ; CODE XREF: sub_140A143B4+191↓j
                mov     rax, [rdi+8]
                mov     rdx, rdi
                and     dword ptr [rax+44h], 0FFFFF7FEh
                call    sub_140A15640
                jmp     short loc_140A1458D
; ---------------------------------------------------------------------------

loc_140A14521:                          ; CODE XREF: sub_140A143B4+12D↑j
                mov     rbx, rdx

loc_140A14524:                          ; CODE XREF: sub_140A143B4+1A6↓j
                sub     rbx, r9
                mov     [rsp+60h+var_40], r9
                mov     r9, rdx
                mov     r8, rbx
                mov     rdx, rdi
                call    sub_140A1553C
                jmp     short loc_140A1458D
; ---------------------------------------------------------------------------

loc_140A1453C:                          ; CODE XREF: sub_140A143B4+128↑j
                mov     rbx, r9
                and     rbx, rdx

loc_140A14542:                          ; CODE XREF: sub_140A143B4+1C0↓j
                mov     r8, rbx
                jmp     short loc_140A1450C
; ---------------------------------------------------------------------------

loc_140A14547:                          ; CODE XREF: sub_140A143B4+123↑j
                mov     rax, [rdi+8]
                mov     rbx, rdx
                mov     ecx, [rax+44h]
                and     ecx, 1
                sub     rbx, rcx
                mov     rcx, rsi
                jmp     short loc_140A14524
; ---------------------------------------------------------------------------

loc_140A1455C:                          ; CODE XREF: sub_140A143B4+11A↑j
                mov     rax, [rdi+8]
                mov     ebx, [rax+44h]
                and     ebx, 1
                add     rbx, r9
                add     rbx, rdx
                jmp     short loc_140A1457A
; ---------------------------------------------------------------------------

loc_140A1456E:                          ; CODE XREF: sub_140A143B4+111↑j
                mov     rbx, r9
                or      rbx, rdx
                jmp     short loc_140A14542
; ---------------------------------------------------------------------------

loc_140A14576:                          ; CODE XREF: sub_140A143B4+108↑j
                lea     rbx, [r9+rdx]

loc_140A1457A:                          ; CODE XREF: sub_140A143B4+1B8↑j
                mov     [rsp+60h+var_40], r9
                mov     r8, rbx
                mov     r9, rdx
                mov     rdx, rdi
                call    sub_140A15450

loc_140A1458D:                          ; CODE XREF: sub_140A143B4+16B↑j
                                        ; sub_140A143B4+186↑j
                test    r15b, r15b
                jz      short loc_140A145BD
                mov     r9b, [rsi+19h]
                mov     rdx, rdi
                movzx   r8d, byte ptr [rsi+1Ah]
                mov     rcx, rsi
                shr     r9b, 2
                shr     r8d, 3
                and     r9b, 1
                and     r8d, 7
                mov     [rsp+60h+var_40], rbx
                call    sub_140A1570C
                jmp     short loc_140A145EC
; ---------------------------------------------------------------------------

loc_140A145BD:                          ; CODE XREF: sub_140A143B4+1DC↑j
                mov     al, [rsi+1]
                lea     rdx, [rbp+var_8]
                mov     r9b, [rbp+arg_8]
                mov     rcx, rdi
                mov     r8, [rbp+var_10]
                shr     al, 3
                mov     [rsp+60h+var_30], 1
                mov     byte ptr [rsp+60h+var_38], al
                mov     byte ptr [rsp+60h+var_40], r12b
                mov     [rbp+var_8], rbx
                call    sub_140A14008
                mov     r14d, eax

loc_140A145EC:                          ; CODE XREF: sub_140A143B4+53↑j
                                        ; sub_140A143B4+61↑j ...
                lea     r11, [rsp+60h+var_s0]
                mov     eax, r14d
                mov     rbx, [r11+30h]
                mov     rsi, [r11+40h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A143B4   endp

algn_140A14609:                         ; DATA XREF: .pdata:000000014012C2A0↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A14610   proc near               ; CODE XREF: sub_140A148C0+635↓p
                                        ; DATA XREF: .pdata:000000014012C2AC↑o

var_48          = qword ptr -48h
var_40          = byte ptr -40h
var_38          = byte ptr -38h
var_28          = byte ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_18          = byte ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                push    rdi
                sub     rsp, 60h
                and     qword ptr [rax-20h], 0
                mov     rsi, r8
                mov     rbx, rdx
                mov     byte ptr [rax-28h], 0
                mov     rdi, rcx
                mov     byte ptr [rax+20h], 0
                call    sub_140A14168
                test    eax, eax
                js      short loc_140A146B6
                mov     r8, rsi
                mov     rdx, rbx
                mov     rcx, rdi
                call    sub_140A15198
                test    eax, eax
                js      short loc_140A146B6
                test    rbx, rbx
                jnz     short loc_140A1465A
                xor     eax, eax
                jmp     short loc_140A146B6
; ---------------------------------------------------------------------------

loc_140A1465A:                          ; CODE XREF: sub_140A14610+44↑j
                lea     rax, [rsp+68h+arg_18]
                mov     rdx, rbx
                lea     r9, [rsp+68h+var_28]
                mov     [rsp+68h+var_48], rax
                lea     r8, [rsp+68h+var_20]
                mov     rcx, rdi
                call    sub_140A14254
                mov     rax, [rdi+20h]
                lea     rdx, [rsp+68h+var_18]
                mov     r9b, [rsp+68h+var_28]
                mov     rcx, rbx
                mov     r8, [rsp+68h+var_20]
                mov     [rsp+68h+var_18], rax
                mov     al, [rdi+1]
                shr     al, 3
                mov     [rsp+68h+var_38], 1
                mov     [rsp+68h+var_40], al
                mov     al, [rsp+68h+arg_18]
                mov     byte ptr [rsp+68h+var_48], al
                call    sub_140A14008

loc_140A146B6:                          ; CODE XREF: sub_140A14610+2D↑j
                                        ; sub_140A14610+3F↑j ...
                mov     rbx, [rsp+68h+arg_0]
                mov     rsi, [rsp+68h+arg_8]
                add     rsp, 60h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A14610   endp

algn_140A146C7:                         ; DATA XREF: .pdata:000000014012C2AC↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_140A146D0   proc near               ; CODE XREF: sub_140A148C0+11E↓p
                                        ; DATA XREF: .pdata:000000014012C2B8↑o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = byte ptr -30h
var_20          = byte ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8
var_s0          = byte ptr  0
arg_0           = qword ptr  20h
arg_8           = qword ptr  28h
arg_18          = byte ptr  38h

                mov     [rsp-18h+arg_0], rbx
                mov     [rsp-18h+arg_8], rsi
                push    rbp
                push    rdi
                push    r14
                mov     rbp, rsp
                sub     rsp, 60h
                and     [rbp+var_18], 0
                mov     r14, r8
                and     [rbp+var_10], 0
                mov     rdi, rdx
                mov     rsi, rcx
                mov     [rbp+arg_18], 0
                mov     [rbp+var_20], 0
                call    sub_140A14168
                mov     ebx, eax
                test    eax, eax
                js      loc_140A148A2
                mov     r8, r14
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A15198
                mov     ebx, eax
                test    eax, eax
                js      loc_140A148A2
                test    rdi, rdi
                jnz     short loc_140A14733
                xor     ebx, ebx
                jmp     loc_140A148A2
; ---------------------------------------------------------------------------

loc_140A14733:                          ; CODE XREF: sub_140A146D0+5A↑j
                lea     rax, [rbp+var_20]
                mov     rdx, rdi
                lea     r9, [rbp+arg_18]
                mov     [rsp+60h+var_40], rax
                lea     r8, [rbp+var_10]
                mov     rcx, rsi
                call    sub_140A14254
                mov     r14b, [rbp+var_20]
                lea     rax, [rbp+var_18]
                mov     r9b, [rbp+arg_18]
                mov     rdx, rdi
                mov     r8, [rbp+var_10]
                mov     rcx, rsi
                mov     [rsp+60h+var_38], rax
                mov     byte ptr [rsp+60h+var_40], r14b
                call    sub_140A153EC
                mov     ebx, eax
                test    eax, eax
                js      loc_140A148A2
                movzx   ecx, byte ptr [rsi+1Ah]
                mov     rdx, [rsi+20h]
                shr     ecx, 3
                and     ecx, 7
                jz      loc_140A14859
                sub     ecx, 1
                jz      loc_140A14850
                sub     ecx, 1
                jz      loc_140A1483A
                sub     ecx, 1
                jz      short loc_140A14824
                sub     ecx, 1
                jz      short loc_140A14815
                sub     ecx, 1
                jz      short loc_140A147F6
                cmp     ecx, 1
                mov     rcx, rsi
                jz      short loc_140A147D7
                mov     r9, [rbp+var_18]
                mov     r8, r9
                mov     [rsp+60h+var_40], rdx
                sub     r8, rdx
                mov     rdx, rdi
                call    sub_140A1553C
                jmp     loc_140A148A2
; ---------------------------------------------------------------------------

loc_140A147D7:                          ; CODE XREF: sub_140A146D0+E9↑j
                xor     rdx, [rbp+var_18]
                mov     rbx, rdx
                mov     r8, rdx

loc_140A147E1:                          ; CODE XREF: sub_140A146D0+152↓j
                mov     rax, [rdi+8]
                mov     rdx, rdi
                and     dword ptr [rax+44h], 0FFFFF7FEh
                call    sub_140A15640
                jmp     short loc_140A14874
; ---------------------------------------------------------------------------

loc_140A147F6:                          ; CODE XREF: sub_140A146D0+E1↑j
                mov     r9, [rbp+var_18]
                mov     rbx, r9

loc_140A147FD:                          ; CODE XREF: sub_140A146D0+168↓j
                sub     rbx, rdx
                mov     [rsp+60h+var_40], rdx
                mov     r8, rbx
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A1553C
                jmp     short loc_140A14874
; ---------------------------------------------------------------------------

loc_140A14815:                          ; CODE XREF: sub_140A146D0+DC↑j
                mov     rbx, rdx
                and     rbx, [rbp+var_18]

loc_140A1481C:                          ; CODE XREF: sub_140A146D0+187↓j
                mov     r8, rbx
                mov     rcx, rsi
                jmp     short loc_140A147E1
; ---------------------------------------------------------------------------

loc_140A14824:                          ; CODE XREF: sub_140A146D0+D7↑j
                mov     rax, [rdi+8]
                mov     r9, [rbp+var_18]
                mov     rbx, r9
                mov     ecx, [rax+44h]
                and     ecx, 1
                sub     rbx, rcx
                jmp     short loc_140A147FD
; ---------------------------------------------------------------------------

loc_140A1483A:                          ; CODE XREF: sub_140A146D0+CE↑j
                mov     rax, [rdi+8]
                mov     r9, [rbp+var_18]
                mov     ebx, [rax+44h]
                and     ebx, 1
                add     rbx, rdx
                add     rbx, r9
                jmp     short loc_140A14861
; ---------------------------------------------------------------------------

loc_140A14850:                          ; CODE XREF: sub_140A146D0+C5↑j
                mov     rbx, rdx
                or      rbx, [rbp+var_18]
                jmp     short loc_140A1481C
; ---------------------------------------------------------------------------

loc_140A14859:                          ; CODE XREF: sub_140A146D0+BC↑j
                mov     r9, [rbp+var_18]
                lea     rbx, [rdx+r9]

loc_140A14861:                          ; CODE XREF: sub_140A146D0+17E↑j
                mov     [rsp+60h+var_40], rdx
                mov     r8, rbx
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A15450

loc_140A14874:                          ; CODE XREF: sub_140A146D0+124↑j
                                        ; sub_140A146D0+143↑j
                mov     al, [rsi+1]
                lea     rdx, [rbp+var_8]
                mov     r9b, [rbp+arg_18]
                mov     rcx, rdi
                mov     r8, [rbp+var_10]
                shr     al, 3
                mov     [rsp+60h+var_30], 1
                mov     byte ptr [rsp+60h+var_38], al
                mov     byte ptr [rsp+60h+var_40], r14b
                mov     [rbp+var_8], rbx
                call    sub_140A14008
                mov     ebx, eax

loc_140A148A2:                          ; CODE XREF: sub_140A146D0+39↑j
                                        ; sub_140A146D0+51↑j ...
                lea     r11, [rsp+60h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+20h]
                mov     rsi, [r11+28h]
                mov     rsp, r11
                pop     r14
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A146D0   endp

algn_140A148BA:                         ; DATA XREF: .pdata:000000014012C2B8↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_140A148C0   proc near               ; CODE XREF: sub_14051D3C0+12F↑p
                                        ; sub_14051D3C0+192↑p ...

var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = byte ptr -38h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
arg_0           = qword ptr  38h
arg_8           = byte ptr  40h
arg_10          = qword ptr  48h
arg_18          = dword ptr  50h

                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r14
                mov     rbp, rsp
                sub     rsp, 68h
                movzx   eax, byte ptr [rcx+15h]
                lea     r9, [rbp+arg_18]
                and     [rbp+var_20], 0
                mov     rdi, rdx
                and     [rbp+var_18], 0
                lea     rdx, [rbp+arg_10]
                and     [rbp+var_28], 0
                mov     r12d, 1
                mov     r8d, r12d
                mov     byte ptr [rbp+arg_10], 0
                mov     rsi, rcx
                mov     [rbp+arg_8], 0
                mov     byte ptr [rbp+arg_0], 0
                mov     [rbp+arg_18], eax
                call    sub_140A15210
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                movzx   ecx, byte ptr [rbp+arg_10]
                mov     al, cl
                and     al, 0F0h
                cmp     al, 50h ; 'P'
                jnz     short loc_140A14937
                mov     r8d, ecx
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A150DC
                jmp     loc_140A14EFA
; ---------------------------------------------------------------------------

loc_140A14937:                          ; CODE XREF: sub_140A148C0+62↑j
                cmp     al, 0B0h
                jnz     short loc_140A14952
                mov     r8d, ecx
                lea     r9, [rbp+arg_18]
                mov     rcx, rsi
                mov     rdx, rdi
                call    sub_140A14F3C
                jmp     loc_140A14EFA
; ---------------------------------------------------------------------------

loc_140A14952:                          ; CODE XREF: sub_140A148C0+79↑j
                test    ecx, 0FFFFFFC4h
                jnz     short loc_140A14971
                mov     r8d, ecx
                lea     r9, [rbp+arg_18]
                mov     rcx, rsi
                mov     rdx, rdi
                call    sub_140A143B4
                jmp     loc_140A14EFA
; ---------------------------------------------------------------------------

loc_140A14971:                          ; CODE XREF: sub_140A148C0+98↑j
                mov     eax, 8Ah
                cmp     ecx, eax
                ja      loc_140A14D87
                jz      loc_140A14D0A
                mov     eax, 84h
                cmp     ecx, eax
                ja      loc_140A14B15
                jz      loc_140A14A4B
                sub     ecx, 0Fh
                jz      short loc_140A14A00
                sub     ecx, 71h ; 'q'
                jz      short loc_140A149E8
                sub     ecx, r12d
                jz      short loc_140A149F1
                sub     ecx, r12d
                jz      short loc_140A149B5
                cmp     ecx, r12d
                jz      short loc_140A149BE
                jmp     loc_140A14E5C
; ---------------------------------------------------------------------------

loc_140A149B5:                          ; CODE XREF: sub_140A148C0+E9↑j
                test    rdi, rdi
                jnz     short loc_140A149D4
                mov     byte ptr [rsi+1], 8

loc_140A149BE:                          ; CODE XREF: sub_140A148C0+EE↑j
                test    rdi, rdi
                jnz     short loc_140A149D4
                mov     r9b, 8
                mov     r8b, r9b
                mov     dl, r9b

loc_140A149CC:                          ; CODE XREF: sub_140A148C0+13E↓j
                mov     rcx, rsi
                call    sub_140A156B0

loc_140A149D4:                          ; CODE XREF: sub_140A148C0+F8↑j
                                        ; sub_140A148C0+101↑j ...
                lea     r8, [rbp+arg_18]
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A146D0
                jmp     loc_140A14EFA
; ---------------------------------------------------------------------------

loc_140A149E8:                          ; CODE XREF: sub_140A148C0+DF↑j
                test    rdi, rdi
                jnz     short loc_140A149D4
                mov     byte ptr [rsi+1], 8

loc_140A149F1:                          ; CODE XREF: sub_140A148C0+E4↑j
                test    rdi, rdi
                jnz     short loc_140A149D4
                mov     r9b, 20h ; ' '
                mov     dl, 10h
                mov     r8b, r9b
                jmp     short loc_140A149CC
; ---------------------------------------------------------------------------

loc_140A14A00:                          ; CODE XREF: sub_140A148C0+DA↑j
                lea     r9, [rbp+arg_18]
                mov     r8d, r12d
                lea     rdx, [rbp+arg_10]
                mov     rcx, rsi
                call    sub_140A15210
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                mov     cl, byte ptr [rbp+arg_10]
                lea     eax, [rcx+4Ah]
                cmp     al, r12b
                ja      loc_140A14E5C
                and     cl, r12b
                lea     r9, [rbp+arg_18]
                mov     rdx, rdi
                lea     r8d, [r12+rcx]
                mov     rcx, rsi
                shl     r8b, 3
                call    sub_140A14FCC
                jmp     loc_140A14EFA
; ---------------------------------------------------------------------------

loc_140A14A4B:                          ; CODE XREF: sub_140A148C0+D1↑j
                test    rdi, rdi
                jnz     short loc_140A14A54
                mov     byte ptr [rsi+1], 8

loc_140A14A54:                          ; CODE XREF: sub_140A148C0+18E↑j
                                        ; sub_140A148C0+25B↓j
                lea     r8, [rbp+arg_18]
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A14168
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                test    rdi, rdi
                jz      loc_140A14B69
                lea     rax, [rbp+arg_0]
                mov     rdx, rdi
                lea     r9, [rbp+arg_8]
                mov     [rsp+68h+var_48], rax
                lea     r8, [rbp+var_28]
                mov     rcx, rsi
                call    sub_140A14254
                mov     r9b, [rbp+arg_8]
                lea     rax, [rbp+var_20]
                mov     r8, [rbp+var_28]
                mov     rdx, rdi
                mov     [rsp+68h+var_40], rax
                mov     rcx, rsi
                mov     al, byte ptr [rbp+arg_0]
                mov     byte ptr [rsp+68h+var_48], al
                call    sub_140A153EC
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                movzx   r8d, byte ptr [rsi+1Ah]
                mov     rdx, rdi
                mov     r9b, [rsi+19h]
                mov     rcx, rsi
                shr     r8d, 3
                shr     r9b, 2
                and     r8d, 7
                and     r9b, r12b
                mov     byte ptr [rsp+68h+var_48], r12b
                call    sub_140A15254
                mov     rcx, rsi
                mov     rdx, [rax]
                call    sub_140A156E0
                mov     r8, rax
                mov     [rbp+var_18], rax
                mov     rax, [rdi+8]
                mov     rdx, rdi
                and     r8, [rbp+var_20]
                and     dword ptr [rax+44h], 0FFFFF7FEh
                call    sub_140A15640
                jmp     loc_140A14F00
; ---------------------------------------------------------------------------

loc_140A14B15:                          ; CODE XREF: sub_140A148C0+CB↑j
                sub     ecx, 85h
                jz      loc_140A14A54
                sub     ecx, r12d
                jz      loc_140A14BF6
                sub     ecx, r12d
                jz      loc_140A14BFF
                sub     ecx, r12d
                jz      short loc_140A14B42
                cmp     ecx, r12d
                jz      short loc_140A14B4B
                jmp     loc_140A14E5C
; ---------------------------------------------------------------------------

loc_140A14B42:                          ; CODE XREF: sub_140A148C0+276↑j
                test    rdi, rdi
                jnz     short loc_140A14B4B
                mov     byte ptr [rsi+1], 8

loc_140A14B4B:                          ; CODE XREF: sub_140A148C0+27B↑j
                                        ; sub_140A148C0+285↑j
                lea     r8, [rbp+arg_18]
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A14168
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                test    rdi, rdi
                jnz     short loc_140A14B70

loc_140A14B69:                          ; CODE XREF: sub_140A148C0+1B0↑j
                                        ; sub_140A148C0+35B↓j ...
                xor     ebx, ebx
                jmp     loc_140A14F1D
; ---------------------------------------------------------------------------

loc_140A14B70:                          ; CODE XREF: sub_140A148C0+2A7↑j
                lea     rax, [rbp+arg_0]
                mov     rdx, rdi
                lea     r9, [rbp+arg_8]
                mov     [rsp+68h+var_48], rax
                lea     r8, [rbp+var_28]
                mov     rcx, rsi
                call    sub_140A14254
                movzx   r8d, byte ptr [rsi+1Ah]
                mov     rdx, rdi
                mov     r9b, [rsi+19h]
                mov     rcx, rsi
                shr     r8d, 3
                shr     r9b, 2
                and     r8d, 7
                and     r9b, r12b
                mov     byte ptr [rsp+68h+var_48], r12b
                call    sub_140A15254
                mov     rcx, rsi
                mov     rdx, [rax]
                call    sub_140A156E0
                mov     r9b, [rbp+arg_8]
                lea     rdx, [rbp+arg_10]
                mov     r8, [rbp+var_28]
                mov     rcx, rdi
                mov     [rbp+var_18], rax
                mov     [rbp+arg_10], rax
                mov     al, [rsi+1]
                shr     al, 3
                mov     [rsp+68h+var_38], r12b
                mov     byte ptr [rsp+68h+var_40], al
                mov     al, byte ptr [rbp+arg_0]
                mov     byte ptr [rsp+68h+var_48], al
                call    sub_140A14008
                jmp     loc_140A14EFA
; ---------------------------------------------------------------------------

loc_140A14BF6:                          ; CODE XREF: sub_140A148C0+264↑j
                test    rdi, rdi
                jnz     short loc_140A14BFF
                mov     byte ptr [rsi+1], 8

loc_140A14BFF:                          ; CODE XREF: sub_140A148C0+26D↑j
                                        ; sub_140A148C0+339↑j
                lea     r8, [rbp+arg_18]
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A14168
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                test    rdi, rdi
                jz      loc_140A14B69
                lea     rax, [rbp+arg_0]
                mov     rdx, rdi
                lea     r9, [rbp+arg_8]
                mov     [rsp+68h+var_48], rax
                lea     r8, [rbp+var_28]
                mov     rcx, rsi
                call    sub_140A14254
                mov     r14b, byte ptr [rbp+arg_0]
                lea     rax, [rbp+var_20]
                mov     r9b, [rbp+arg_8]
                mov     rdx, rdi
                mov     r8, [rbp+var_28]
                mov     rcx, rsi
                mov     [rsp+68h+var_40], rax
                mov     byte ptr [rsp+68h+var_48], r14b
                call    sub_140A153EC
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                movzx   r8d, byte ptr [rsi+1Ah]
                mov     rdx, rdi
                mov     r9b, [rsi+19h]
                mov     rcx, rsi
                shr     r8d, 3
                shr     r9b, 2
                and     r8d, 7
                and     r9b, r12b
                mov     byte ptr [rsp+68h+var_48], r12b
                call    sub_140A15254
                mov     rcx, rsi
                mov     rdx, [rax]
                call    sub_140A156E0
                mov     r9b, [rbp+arg_8]
                lea     rdx, [rbp+arg_0]
                mov     r8, [rbp+var_28]
                mov     rcx, rdi
                mov     [rbp+var_18], rax
                mov     [rbp+arg_0], rax
                mov     al, [rsi+1]
                shr     al, 3
                mov     [rsp+68h+var_38], r12b
                mov     byte ptr [rsp+68h+var_40], al
                mov     byte ptr [rsp+68h+var_48], r14b
                call    sub_140A14008
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                mov     rax, [rbp+var_20]

loc_140A14CDD:                          ; CODE XREF: sub_140A148C0+4C2↓j
                                        ; sub_140A148C0+5FE↓j
                mov     r9b, [rsi+19h]
                mov     rdx, rdi
                movzx   r8d, byte ptr [rsi+1Ah]
                mov     rcx, rsi
                shr     r9b, 2
                shr     r8d, 3
                and     r9b, r12b
                and     r8d, 7
                mov     [rsp+68h+var_48], rax
                call    sub_140A1570C
                jmp     loc_140A14F00
; ---------------------------------------------------------------------------

loc_140A14D0A:                          ; CODE XREF: sub_140A148C0+BE↑j
                test    rdi, rdi
                jnz     short loc_140A14D13
                mov     byte ptr [rsi+1], 8

loc_140A14D13:                          ; CODE XREF: sub_140A148C0+44D↑j
                                        ; sub_140A148C0+4E0↓j
                lea     r8, [rbp+arg_18]
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A14168
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                test    rdi, rdi
                jz      loc_140A14B69
                lea     rax, [rbp+arg_0]
                mov     rdx, rdi
                lea     r9, [rbp+arg_8]
                mov     [rsp+68h+var_48], rax
                lea     r8, [rbp+var_28]
                mov     rcx, rsi
                call    sub_140A14254
                mov     r9b, [rbp+arg_8]
                lea     rax, [rbp+var_18]
                mov     r8, [rbp+var_28]
                mov     rdx, rdi
                mov     [rsp+68h+var_40], rax
                mov     rcx, rsi
                mov     al, byte ptr [rbp+arg_0]
                mov     byte ptr [rsp+68h+var_48], al
                call    sub_140A153EC
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                mov     rax, [rbp+var_18]
                jmp     loc_140A14CDD
; ---------------------------------------------------------------------------

loc_140A14D87:                          ; CODE XREF: sub_140A148C0+B8↑j
                mov     eax, 0C6h
                cmp     ecx, eax
                ja      loc_140A14ECE
                jz      loc_140A14EC3
                sub     ecx, 8Bh
                jz      loc_140A14D13
                mov     r8d, 2
                sub     ecx, r8d
                jz      loc_140A14E66
                sub     ecx, 3
                jz      loc_140A14E52
                sub     ecx, 32h ; '2'
                jz      short loc_140A14DCD
                cmp     ecx, r12d
                jz      short loc_140A14DEC
                jmp     loc_140A14E5C
; ---------------------------------------------------------------------------

loc_140A14DCD:                          ; CODE XREF: sub_140A148C0+501↑j
                test    rdi, rdi
                jnz     short loc_140A14DF5
                lea     rdx, [rsi+20h]
                mov     rcx, rsi
                lea     r9, [rbp+arg_18]
                call    sub_140A15210
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F23

loc_140A14DEC:                          ; CODE XREF: sub_140A148C0+506↑j
                test    rdi, rdi
                jz      loc_140A14B69

loc_140A14DF5:                          ; CODE XREF: sub_140A148C0+510↑j
                mov     r8, [rdi+8]
                lea     rdx, [rbp+var_20]
                mov     r9b, [rdi+10h]
                mov     rcx, rdi
                mov     [rsp+68h+var_38], 0
                mov     byte ptr [rsp+68h+var_40], 8
                mov     r8, [r8+98h]
                mov     byte ptr [rsp+68h+var_48], 0
                call    sub_140A14008
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                mov     rcx, [rdi+8]
                mov     rax, [rbp+var_20]
                mov     [rcx+0F8h], rax
                mov     rax, [rsi+20h]
                mov     rcx, [rdi+8]
                add     rax, 8
                add     [rcx+98h], rax
                xor     ebx, ebx
                jmp     loc_140A14F14
; ---------------------------------------------------------------------------

loc_140A14E52:                          ; CODE XREF: sub_140A148C0+4F8↑j
                test    [rsi+19h], r12b
                jz      loc_140A14F00

loc_140A14E5C:                          ; CODE XREF: sub_140A148C0+F0↑j
                                        ; sub_140A148C0+166↑j ...
                mov     ebx, 0C00000BBh
                jmp     loc_140A14F14
; ---------------------------------------------------------------------------

loc_140A14E66:                          ; CODE XREF: sub_140A148C0+4EF↑j
                lea     r8, [rbp+arg_18]
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A14168
                mov     ebx, eax
                test    eax, eax
                js      loc_140A14F14
                test    rdi, rdi
                jz      loc_140A14B69
                lea     rax, [rbp+arg_0]
                mov     rdx, rdi
                lea     r9, [rbp+arg_8]
                mov     [rsp+68h+var_48], rax
                lea     r8, [rbp+var_28]
                mov     rcx, rsi
                call    sub_140A14254
                cmp     byte ptr [rbp+arg_0], 0
                jz      short loc_140A14EBA
                mov     rax, [rdi]
                mov     ebx, 0C000001Dh
                and     dword ptr [rax+18h], 0
                mov     [rax], ebx
                jmp     short loc_140A14F14
; ---------------------------------------------------------------------------

loc_140A14EBA:                          ; CODE XREF: sub_140A148C0+5E8↑j
                mov     rax, [rbp+var_28]
                jmp     loc_140A14CDD
; ---------------------------------------------------------------------------

loc_140A14EC3:                          ; CODE XREF: sub_140A148C0+4D4↑j
                test    rdi, rdi
                jnz     short loc_140A14EEB
                mov     byte ptr [rsi+1], 8
                jmp     short loc_140A14EDB
; ---------------------------------------------------------------------------

loc_140A14ECE:                          ; CODE XREF: sub_140A148C0+4CE↑j
                cmp     ecx, 0C7h
                jnz     short loc_140A14E5C
                test    rdi, rdi
                jnz     short loc_140A14EEB

loc_140A14EDB:                          ; CODE XREF: sub_140A148C0+60C↑j
                mov     r9b, 20h ; ' '
                mov     dl, 10h
                mov     r8b, r9b
                mov     rcx, rsi
                call    sub_140A156B0

loc_140A14EEB:                          ; CODE XREF: sub_140A148C0+606↑j
                                        ; sub_140A148C0+619↑j
                lea     r8, [rbp+arg_18]
                mov     rdx, rdi
                mov     rcx, rsi
                call    sub_140A14610

loc_140A14EFA:                          ; CODE XREF: sub_140A148C0+72↑j
                                        ; sub_140A148C0+8D↑j ...
                mov     ebx, eax
                test    eax, eax
                js      short loc_140A14F14

loc_140A14F00:                          ; CODE XREF: sub_140A148C0+250↑j
                                        ; sub_140A148C0+445↑j ...
                test    rdi, rdi
                jz      short loc_140A14F19
                mov     rcx, [rdi+8]
                movzx   eax, byte ptr [rsi+18h]
                add     [rcx+0F8h], rax

loc_140A14F14:                          ; CODE XREF: sub_140A148C0+52↑j
                                        ; sub_140A148C0+157↑j ...
                test    rdi, rdi
                jnz     short loc_140A14F23

loc_140A14F19:                          ; CODE XREF: sub_140A148C0+643↑j
                test    ebx, ebx
                js      short loc_140A14F23

loc_140A14F1D:                          ; CODE XREF: sub_140A148C0+2AB↑j
                mov     al, byte ptr [rbp+arg_18]
                mov     [rsi+18h], al

loc_140A14F23:                          ; CODE XREF: sub_140A148C0+526↑j
                                        ; sub_140A148C0+657↑j ...
                mov     eax, ebx
                add     rsp, 68h
                pop     r14
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A148C0   endp

byte_140A14F33  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C2C4↑o

; =============== S U B R O U T I N E =======================================


sub_140A14F3C   proc near               ; CODE XREF: sub_140A148C0+88↑p
                                        ; DATA XREF: .pdata:000000014012C2D0↑o

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 30h
                mov     r11, r9
                mov     esi, r8d
                mov     rdi, rdx
                mov     rbx, rcx
                test    rdx, rdx
                jnz     short loc_140A14F73
                test    sil, 8
                jnz     short loc_140A14F66
                mov     byte ptr [rcx+1], 8

loc_140A14F66:                          ; CODE XREF: sub_140A14F3C+24↑j
                mov     r9b, 40h ; '@'
                mov     r8b, 20h ; ' '
                mov     dl, 10h
                call    sub_140A156B0

loc_140A14F73:                          ; CODE XREF: sub_140A14F3C+1E↑j
                mov     r8, r11
                mov     rdx, rdi
                call    sub_140A15198
                mov     r11d, eax
                test    eax, eax
                js      short loc_140A14FB1
                test    rdi, rdi
                jnz     short loc_140A14F8F
                xor     r11d, r11d
                jmp     short loc_140A14FB1
; ---------------------------------------------------------------------------

loc_140A14F8F:                          ; CODE XREF: sub_140A14F3C+4C↑j
                mov     r9b, [rbx+19h]
                and     esi, 7
                mov     rax, [rbx+20h]
                and     r9b, 1
                mov     r8d, esi
                mov     [rsp+38h+var_18], rax
                mov     rdx, rdi
                mov     rcx, rbx
                call    sub_140A1570C

loc_140A14FB1:                          ; CODE XREF: sub_140A14F3C+47↑j
                                        ; sub_140A14F3C+51↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     eax, r11d
                mov     rsi, [rsp+38h+arg_8]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A14F3C   endp

byte_140A14FC5  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012C2D0↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_140A14FCC   proc near               ; CODE XREF: sub_140A148C0+181↑p
                                        ; DATA XREF: .pdata:000000014012C2DC↑o

var_40          = qword ptr -40h
var_38          = byte ptr -38h
var_30          = byte ptr -30h
var_20          = byte ptr -20h
var_1F          = byte ptr -1Fh
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = qword ptr  20h

                mov     [rsp-8+arg_0], rbx
                mov     [rsp-8+arg_8], rsi
                mov     [rsp-8+arg_10], rdi
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                and     [rbp+var_10], 0
                mov     sil, r8b
                mov     r8, r9
                mov     [rbp+var_1F], 0
                mov     rdi, rdx
                mov     [rbp+var_20], 0
                mov     rbx, rcx
                call    sub_140A14168
                test    eax, eax
                js      loc_140A150BD
                test    rdi, rdi
                jnz     short loc_140A1501D
                mov     al, [rbx+1]
                mov     [rbx+2], al
                mov     [rbx+1], sil
                jmp     loc_140A150BB
; ---------------------------------------------------------------------------

loc_140A1501D:                          ; CODE XREF: sub_140A14FCC+40↑j
                lea     rax, [rbp+var_20]
                mov     rdx, rdi
                lea     r9, [rbp+var_1F]
                mov     [rsp+60h+var_40], rax
                lea     r8, [rbp+var_10]
                mov     rcx, rbx
                call    sub_140A14254
                mov     al, [rbp+var_20]
                lea     rdx, [rbp+var_18]
                mov     r9b, [rbp+var_1F]
                mov     rcx, rdi
                mov     r8, [rbp+var_10]
                and     [rbp+var_18], 0
                mov     [rsp+60h+var_30], 0
                shr     sil, 3
                mov     [rsp+60h+var_38], sil
                mov     byte ptr [rsp+60h+var_40], al
                call    sub_140A14008
                test    eax, eax
                js      short loc_140A150BD
                movzx   r8d, byte ptr [rbx+1Ah]
                mov     rdx, rdi
                mov     r9b, [rbx+19h]
                mov     rcx, rbx
                shr     r8d, 3
                shr     r9b, 2
                and     r8d, 7
                and     r9b, 1
                mov     byte ptr [rsp+60h+var_40], 0
                call    sub_140A15254
                mov     r9, rax
                mov     al, [rbx+2]
                cmp     al, 10h
                jz      short loc_140A150B3
                cmp     al, 20h ; ' '
                jz      short loc_140A150AB
                mov     rcx, [rbp+var_18]
                mov     [r9], rcx
                jmp     short loc_140A150BB
; ---------------------------------------------------------------------------

loc_140A150AB:                          ; CODE XREF: sub_140A14FCC+D4↑j
                mov     eax, dword ptr [rbp+var_18]
                mov     [r9], rax
                jmp     short loc_140A150BB
; ---------------------------------------------------------------------------

loc_140A150B3:                          ; CODE XREF: sub_140A14FCC+D0↑j
                movzx   eax, word ptr [rbp+var_18]
                mov     [r9], ax

loc_140A150BB:                          ; CODE XREF: sub_140A14FCC+4C↑j
                                        ; sub_140A14FCC+DD↑j ...
                xor     eax, eax

loc_140A150BD:                          ; CODE XREF: sub_140A14FCC+37↑j
                                        ; sub_140A14FCC+9D↑j
                lea     r11, [rsp+60h+var_s0]
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     rdi, [r11+20h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A14FCC   endp

byte_140A150D4  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C2DC↑o

; =============== S U B R O U T I N E =======================================


sub_140A150DC   proc near               ; CODE XREF: sub_140A148C0+6D↑p
                                        ; DATA XREF: .pdata:000000014012C2E8↑o

var_28          = byte ptr -28h
var_20          = byte ptr -20h
var_18          = byte ptr -18h
arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 40h
                mov     rdi, rdx
                mov     rbx, rcx
                test    rdx, rdx
                jnz     short loc_140A15102
                cmp     byte ptr [rcx+1], 10h
                jz      short loc_140A150FB
                mov     byte ptr [rcx+1], 40h ; '@'

loc_140A150FB:                          ; CODE XREF: sub_140A150DC+19↑j
                xor     eax, eax
                jmp     loc_140A15183
; ---------------------------------------------------------------------------

loc_140A15102:                          ; CODE XREF: sub_140A150DC+13↑j
                mov     r9b, [rcx+19h]
                mov     r11d, r8d
                and     r9b, 1
                mov     [rsp+48h+var_28], 1
                and     r8d, 7
                call    sub_140A15254
                mov     r9b, [rbx+1]
                mov     r10, rax
                mov     rax, [rdi+8]
                shr     r9b, 3
                mov     rdx, [rax+98h]
                movzx   eax, r9b
                mov     rbx, rdx
                sub     rbx, rax
                and     r11d, 8
                lea     rcx, [rax+rdx]
                cmovnz  rbx, rcx
                test    r11d, r11d
                mov     r8, rbx
                mov     rcx, rdi
                setz    al
                test    r11d, r11d
                mov     [rsp+48h+var_18], al
                mov     [rsp+48h+var_20], r9b
                cmovnz  r8, rdx
                mov     r9b, [rdi+10h]
                mov     rdx, r10
                mov     [rsp+48h+var_28], 0
                call    sub_140A14008
                test    eax, eax
                js      short loc_140A15183
                mov     rcx, [rdi+8]
                mov     [rcx+98h], rbx

loc_140A15183:                          ; CODE XREF: sub_140A150DC+21↑j
                                        ; sub_140A150DC+9A↑j
                mov     rbx, [rsp+48h+arg_0]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A150DC   endp

byte_140A1518F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C2E8↑o

; =============== S U B R O U T I N E =======================================


sub_140A15198   proc near               ; CODE XREF: sub_140A14610+38↑p
                                        ; sub_140A146D0+48↑p ...

arg_8           = qword ptr  10h

                push    rbx
                sub     rsp, 20h
                movzx   eax, byte ptr [rcx+17h]
                mov     rbx, rcx
                and     [rsp+28h+arg_8], 0
                shr     eax, 3
                test    rdx, rdx
                jz      short loc_140A151BA
                add     [r8], eax
                xor     eax, eax
                jmp     short loc_140A15200
; ---------------------------------------------------------------------------

loc_140A151BA:                          ; CODE XREF: sub_140A15198+19↑j
                mov     r9, r8
                lea     rdx, [rsp+28h+arg_8]
                mov     r8d, eax
                call    sub_140A15210
                test    eax, eax
                js      short loc_140A15200
                mov     cl, [rbx+17h]
                cmp     cl, 8
                jz      short loc_140A151F6
                cmp     cl, 10h
                jz      short loc_140A151EE
                cmp     cl, 20h ; ' '
                jnz     short loc_140A151E7
                movsxd  rcx, dword ptr [rsp+28h+arg_8]
                jmp     short loc_140A151FC
; ---------------------------------------------------------------------------

loc_140A151E7:                          ; CODE XREF: sub_140A15198+46↑j
                mov     rcx, [rsp+28h+arg_8]
                jmp     short loc_140A151FC
; ---------------------------------------------------------------------------

loc_140A151EE:                          ; CODE XREF: sub_140A15198+41↑j
                movsx   rcx, word ptr [rsp+28h+arg_8]
                jmp     short loc_140A151FC
; ---------------------------------------------------------------------------

loc_140A151F6:                          ; CODE XREF: sub_140A15198+3C↑j
                movsx   rcx, byte ptr [rsp+28h+arg_8]

loc_140A151FC:                          ; CODE XREF: sub_140A15198+4D↑j
                                        ; sub_140A15198+54↑j ...
                mov     [rbx+20h], rcx

loc_140A15200:                          ; CODE XREF: sub_140A15198+20↑j
                                        ; sub_140A15198+34↑j
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A15198   endp

algn_140A15207:                         ; DATA XREF: .pdata:000000014012C2F4↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A15210   proc near               ; CODE XREF: sub_140A14168+38↑p
                                        ; sub_140A14168+64↑p ...
                mov     r10d, [r9]
                movzx   eax, byte ptr [rcx+5]
                lea     r11d, [r10+r8]
                cmp     r11d, eax
                jbe     short loc_140A15227
                mov     eax, 0C0000206h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A15227:                          ; CODE XREF: sub_140A15210+E↑j
                add     rcx, 6
                mov     [r9], r11d
                add     rcx, r10
                test    r8d, r8d
                jz      short loc_140A15247
                sub     rcx, rdx

loc_140A15239:                          ; CODE XREF: sub_140A15210+35↓j
                mov     al, [rcx+rdx]
                mov     [rdx], al
                inc     rdx
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A15239

loc_140A15247:                          ; CODE XREF: sub_140A15210+24↑j
                xor     eax, eax
                retn
sub_140A15210   endp

; ---------------------------------------------------------------------------
                db 0CCh
byte_140A1524B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C300↑o

; =============== S U B R O U T I N E =======================================


sub_140A15254   proc near               ; CODE XREF: sub_140A14254+5A↑p
                                        ; sub_140A14254+A0↑p ...

arg_20          = byte ptr  28h

                test    r9b, r9b
                lea     eax, [r8+8]
                cmovz   eax, r8d
                cmp     [rsp+arg_20], 0
                mov     r8d, eax
                jz      short loc_140A15295
                cmp     byte ptr [rcx+19h], 0
                jnz     short loc_140A15295
                cmp     byte ptr [rcx+1], 8
                jnz     short loc_140A15295
                mov     rdx, [rdx+8]
                mov     ecx, r8d
                and     ecx, 3
                add     rdx, 78h ; 'x'
                test    r8b, 4
                lea     rdx, [rdx+rcx*8]
                lea     rax, [rdx+1]
                cmovz   rax, rdx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A15295:                          ; CODE XREF: sub_140A15254+13↑j
                                        ; sub_140A15254+19↑j ...
                mov     rax, [rdx+8]
                lea     rax, [rax+r8*8]
                add     rax, 78h ; 'x'
                retn
sub_140A15254   endp

; ---------------------------------------------------------------------------
                db 0CCh
byte_140A152A3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C30C↑o

; =============== S U B R O U T I N E =======================================


sub_140A152AC   proc near               ; CODE XREF: sub_1408BEA50+76↑p
                                        ; sub_1408BEA50+BF↑p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                call    sub_140A152D8
                test    eax, eax
                js      short loc_140A152C8
                xor     edx, edx
                mov     rcx, rbx
                call    sub_140A148C0

loc_140A152C8:                          ; CODE XREF: sub_140A152AC+10↑j
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A152AC   endp

byte_140A152CF  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C318↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_140A152D8   proc near               ; CODE XREF: sub_140A152AC+9↑p
                                        ; DATA XREF: .pdata:000000014012C324↑o

arg_0           = qword ptr  10h
arg_8           = byte ptr  18h
arg_10          = dword ptr  20h
arg_18          = dword ptr  28h

                mov     [rsp-8+arg_0], rbx
                push    rbp
                mov     rbp, rsp
                sub     rsp, 20h
                and     [rbp+arg_18], 0
                mov     rbx, rcx
                xor     eax, eax
                mov     [rbp+arg_8], 0
                mov     [rbp+arg_10], eax

loc_140A152F5:                          ; CODE XREF: sub_140A152D8+97↓j
                lea     r9, [rbp+arg_18]
                mov     r8d, 1
                lea     rdx, [rbp+arg_8]
                mov     rcx, rbx
                call    sub_140A15210
                test    eax, eax
                js      loc_140A153D8
                movzx   edx, [rbp+arg_8]
                mov     eax, edx
                cmp     edx, 65h ; 'e'
                ja      short loc_140A1533D
                cmp     eax, 64h ; 'd'
                jnb     short loc_140A15337
                cmp     eax, 26h ; '&'
                jz      short loc_140A15337
                cmp     eax, 2Eh ; '.'
                jz      short loc_140A15337
                cmp     eax, 36h ; '6'
                jz      short loc_140A15337
                cmp     eax, 3Eh ; '>'
                jnz     short loc_140A15371

loc_140A15337:                          ; CODE XREF: sub_140A152D8+49↑j
                                        ; sub_140A152D8+4E↑j ...
                lea     rax, [rbp+arg_10+1]
                jmp     short loc_140A15368
; ---------------------------------------------------------------------------

loc_140A1533D:                          ; CODE XREF: sub_140A152D8+44↑j
                cmp     eax, 66h ; 'f'
                jz      short loc_140A15364
                cmp     eax, 67h ; 'g'
                jz      short loc_140A1535E
                cmp     eax, 0F0h
                jz      short loc_140A15358
                add     eax, 0FFFFFF0Eh
                cmp     eax, 1
                ja      short loc_140A15371

loc_140A15358:                          ; CODE XREF: sub_140A152D8+74↑j
                lea     rax, [rbp+arg_10]
                jmp     short loc_140A15368
; ---------------------------------------------------------------------------

loc_140A1535E:                          ; CODE XREF: sub_140A152D8+6D↑j
                lea     rax, [rbp+arg_10+3]
                jmp     short loc_140A15368
; ---------------------------------------------------------------------------

loc_140A15364:                          ; CODE XREF: sub_140A152D8+68↑j
                lea     rax, [rbp+arg_10+2]

loc_140A15368:                          ; CODE XREF: sub_140A152D8+63↑j
                                        ; sub_140A152D8+84↑j ...
                cmp     byte ptr [rax], 0
                jnz     short loc_140A153D3
                mov     [rax], dl
                jmp     short loc_140A152F5
; ---------------------------------------------------------------------------

loc_140A15371:                          ; CODE XREF: sub_140A152D8+5D↑j
                                        ; sub_140A152D8+7E↑j
                cmp     byte ptr [rbp+arg_10], 0
                jnz     short loc_140A153CC
                cmp     byte ptr [rbp+arg_10+1], 0
                jnz     short loc_140A153CC
                mov     al, dl
                mov     ecx, 40h ; '@'
                and     al, 0F0h
                cmp     al, cl
                mov     eax, [rbp+arg_18]
                jnz     short loc_140A15392
                mov     [rbx+19h], dl
                jmp     short loc_140A15394
; ---------------------------------------------------------------------------

loc_140A15392:                          ; CODE XREF: sub_140A152D8+B3↑j
                dec     eax

loc_140A15394:                          ; CODE XREF: sub_140A152D8+B8↑j
                test    byte ptr [rbx+19h], 8
                mov     r8d, 20h ; ' '
                mov     [rbx+15h], al
                mov     byte ptr [rbx+4], 0
                jz      short loc_140A153AC
                mov     [rbx+1], cl
                jmp     short loc_140A153BE
; ---------------------------------------------------------------------------

loc_140A153AC:                          ; CODE XREF: sub_140A152D8+CD↑j
                cmp     byte ptr [rbp+arg_10+2], 66h ; 'f'
                mov     eax, r8d
                mov     edx, 10h
                cmovz   eax, edx
                mov     [rbx+1], al

loc_140A153BE:                          ; CODE XREF: sub_140A152D8+D2↑j
                cmp     byte ptr [rbp+arg_10+3], 67h ; 'g'
                cmovz   ecx, r8d
                xor     eax, eax
                mov     [rbx], cl
                jmp     short loc_140A153D8
; ---------------------------------------------------------------------------

loc_140A153CC:                          ; CODE XREF: sub_140A152D8+9D↑j
                                        ; sub_140A152D8+A3↑j
                mov     eax, 0C00000BBh
                jmp     short loc_140A153D8
; ---------------------------------------------------------------------------

loc_140A153D3:                          ; CODE XREF: sub_140A152D8+93↑j
                mov     eax, 0C0000001h

loc_140A153D8:                          ; CODE XREF: sub_140A152D8+35↑j
                                        ; sub_140A152D8+F2↑j ...
                mov     rbx, [rsp+20h+arg_0]
                add     rsp, 20h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A152D8   endp

byte_140A153E4  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C324↑o

; =============== S U B R O U T I N E =======================================


sub_140A153EC   proc near               ; CODE XREF: sub_140A143B4+AC↑p
                                        ; sub_140A146D0+9F↑p ...

var_28          = byte ptr -28h
var_20          = byte ptr -20h
var_18          = byte ptr -18h
arg_0           = qword ptr  8
arg_20          = byte ptr  28h
arg_28          = qword ptr  30h

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 40h
                mov     al, [rcx+1]
                mov     r10, rdx
                mov     rbx, [rsp+48h+arg_28]
                mov     rdi, rcx
                shr     al, 3
                mov     rdx, rbx
                mov     [rsp+48h+var_18], 0
                mov     rcx, r10
                mov     [rsp+48h+var_20], al
                mov     al, [rsp+48h+arg_20]
                mov     [rsp+48h+var_28], al
                call    sub_140A14008
                mov     r8d, eax
                test    eax, eax
                js      short loc_140A15438
                mov     rdx, [rbx]
                mov     rcx, rdi
                call    sub_140A156E0
                mov     [rbx], rax

loc_140A15438:                          ; CODE XREF: sub_140A153EC+3C↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     eax, r8d
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A153EC   endp

algn_140A15447:                         ; DATA XREF: .pdata:000000014012C330↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A15450   proc near               ; CODE XREF: sub_140A143B4+1D4↑p
                                        ; sub_140A146D0+19F↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_20          = qword ptr  28h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 20h
                mov     rax, [rdx+8]
                mov     rbp, r8
                mov     r10b, [rcx+1]
                mov     rbx, r8
                mov     r8, [rsp+38h+arg_20]
                mov     rsi, r9
                mov     r14, rdx
                mov     r15, rcx
                and     dword ptr [rax+44h], 0FFFFF7EFh
                not     rbx
                mov     rdx, [rdx+8]
                mov     rax, r9
                sar     rax, 3
                dec     r10b
                movzx   r9d, al
                mov     rdi, rsi
                xor     rdi, r8
                movzx   ecx, r10b
                sar     r8, 3
                mov     r11, rdi
                xor     r8d, r9d
                not     r11
                and     rdi, rbx
                mov     rax, rbx
                sar     rax, 3
                and     r8d, eax
                mov     rax, r11
                sar     rax, 3
                and     eax, r9d
                or      r8d, eax
                mov     rax, rbp
                xor     rax, rsi
                and     r8d, 1
                and     rax, r11
                and     r11, rsi
                sar     rax, cl
                or      rdi, r11
                and     eax, 1
                sar     rdi, cl
                shl     eax, 7
                and     edi, 1
                or      r8d, eax
                mov     rcx, r15
                shl     r8d, 4
                or      [rdx+44h], r8d
                mov     r8, rbp
                mov     rax, [r14+8]
                mov     rdx, r14
                and     dword ptr [rax+44h], 0FFFFFFFEh
                mov     rax, [r14+8]
                or      [rax+44h], edi
                call    sub_140A15640
                mov     rbx, [rsp+38h+arg_0]
                mov     rbp, [rsp+38h+arg_8]
                mov     rsi, [rsp+38h+arg_10]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A15450   endp

byte_140A15535  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012C33C↑o

; =============== S U B R O U T I N E =======================================


sub_140A1553C   proc near               ; CODE XREF: sub_140A143B4+145↑p
                                        ; sub_140A143B4+181↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_20          = qword ptr  28h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 20h
                mov     rax, [rdx+8]
                mov     r14, rdx
                mov     r10b, [rcx+1]
                mov     rbp, r8
                mov     r11, r8
                mov     r15, rcx
                mov     rsi, r9
                sar     r11, 3
                and     dword ptr [rax+44h], 0FFFFF7EFh
                dec     r10b
                movzx   edi, r10b
                mov     rbx, r9
                mov     r10, [rsp+38h+arg_20]
                not     rbx
                mov     r9, [r14+8]
                mov     rax, r10
                sar     rax, 3
                mov     rcx, rsi
                movzx   edx, al
                mov     rax, rbx
                sar     rax, 3
                sar     rcx, 3
                movzx   r8d, r11b
                or      r8d, edx
                and     r8d, eax
                movzx   eax, r11b
                and     ecx, eax
                mov     rax, rsi
                and     ecx, edx
                xor     rax, r10
                or      r8d, ecx
                mov     rdx, rbp
                xor     rdx, r10
                and     r8d, 1
                not     rdx
                mov     ecx, edi
                and     rdx, rax
                sar     rdx, cl
                and     edx, 1
                shl     edx, 7
                or      r8d, edx
                mov     rdx, rbp
                or      rdx, r10
                shl     r8d, 4
                or      [r9+44h], r8d
                and     rdx, rbx
                mov     rax, [r14+8]
                and     dword ptr [rax+44h], 0FFFFFFFEh
                mov     rax, rbp
                mov     r8, [r14+8]
                and     rax, rsi
                and     rax, r10
                or      rdx, rax
                sar     rdx, cl
                mov     rcx, r15
                and     edx, 1
                or      [r8+44h], edx
                mov     r8, rbp
                mov     rdx, r14
                call    sub_140A15640
                mov     rbx, [rsp+38h+arg_0]
                mov     rbp, [rsp+38h+arg_8]
                mov     rsi, [rsp+38h+arg_10]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1553C   endp

algn_140A15638:                         ; DATA XREF: .pdata:000000014012C348↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A15640   proc near               ; CODE XREF: sub_140A143B4+166↑p
                                        ; sub_140A146D0+11F↑p ...
                movzx   r10d, byte ptr [rcx+1]
                mov     r9, r8
                movzx   eax, r8b
                lea     ecx, [r10-1]
                sar     r9, cl
                lea     rcx, qword_140034330
                movzx   r11d, byte ptr [rax+rcx]
                cmp     r10b, 40h ; '@'
                jnb     short loc_140A15676
                mov     ecx, r10d
                mov     eax, 1
                shl     rax, cl
                dec     rax
                and     r8, rax

loc_140A15676:                          ; CODE XREF: sub_140A15640+23↑j
                mov     rax, [rdx+8]
                and     r9d, 1
                shl     r9d, 5
                and     dword ptr [rax+44h], 0FFFFFF3Bh
                mov     rcx, [rdx+8]
                neg     r8
                sbb     eax, eax
                not     eax
                and     eax, 10h
                or      r9d, eax
                or      r9d, r11d
                shl     r9d, 2
                or      [rcx+44h], r9d
                retn
sub_140A15640   endp

; ---------------------------------------------------------------------------
                db 0CCh
algn_140A156A7:                         ; DATA XREF: .pdata:000000014012C354↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A156B0   proc near               ; CODE XREF: sub_140A148C0+10F↑p
                                        ; sub_140A148C0+626↑p ...
                mov     r10b, [rcx+1]
                cmp     r10b, 8
                jz      short loc_140A156D1
                cmp     r10b, 10h
                jz      short loc_140A156D3
                cmp     r10b, 20h ; ' '
                movzx   edx, r8b
                movzx   eax, r9b
                cmovnz  edx, eax
                jmp     short loc_140A156D3
; ---------------------------------------------------------------------------

loc_140A156D1:                          ; CODE XREF: sub_140A156B0+8↑j
                mov     dl, 8

loc_140A156D3:                          ; CODE XREF: sub_140A156B0+E↑j
                                        ; sub_140A156B0+1F↑j
                mov     [rcx+17h], dl
                retn
sub_140A156B0   endp

; ---------------------------------------------------------------------------
                align 8
algn_140A156D8:                         ; DATA XREF: .pdata:000000014012C360↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A156E0   proc near               ; CODE XREF: sub_140A143B4+EB↑p
                                        ; sub_140A148C0+22D↑p ...
                mov     al, [rcx+1]
                cmp     al, 8
                jz      short loc_140A156FA
                cmp     al, 10h
                jz      short loc_140A156F4
                cmp     al, 20h ; ' '
                jnz     short loc_140A156FE
                movsxd  rdx, edx
                jmp     short loc_140A156FE
; ---------------------------------------------------------------------------

loc_140A156F4:                          ; CODE XREF: sub_140A156E0+9↑j
                movsx   rdx, dx
                jmp     short loc_140A156FE
; ---------------------------------------------------------------------------

loc_140A156FA:                          ; CODE XREF: sub_140A156E0+5↑j
                movsx   rdx, dl

loc_140A156FE:                          ; CODE XREF: sub_140A156E0+D↑j
                                        ; sub_140A156E0+12↑j ...
                mov     rax, rdx
                retn
sub_140A156E0   endp

; ---------------------------------------------------------------------------
                db 0CCh
byte_140A15703  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C36C↑o

; =============== S U B R O U T I N E =======================================


sub_140A1570C   proc near               ; CODE XREF: sub_140A143B4+202↑p
                                        ; sub_140A148C0+440↑p ...

var_18          = byte ptr -18h
arg_20          = qword ptr  28h

                sub     rsp, 38h
                mov     r10, rcx
                mov     [rsp+38h+var_18], 1
                call    sub_140A15254
                mov     r9, rax
                mov     al, [r10+1]
                cmp     al, 8
                jz      short loc_140A1574E
                cmp     al, 10h
                jz      short loc_140A15743
                cmp     al, 20h ; ' '
                jz      short loc_140A1573A
                mov     rcx, [rsp+38h+arg_20]
                mov     [r9], rcx
                jmp     short loc_140A15755
; ---------------------------------------------------------------------------

loc_140A1573A:                          ; CODE XREF: sub_140A1570C+22↑j
                mov     eax, dword ptr [rsp+38h+arg_20]
                mov     [r9], rax
                jmp     short loc_140A15755
; ---------------------------------------------------------------------------

loc_140A15743:                          ; CODE XREF: sub_140A1570C+1E↑j
                movzx   eax, word ptr [rsp+38h+arg_20]
                mov     [r9], ax
                jmp     short loc_140A15755
; ---------------------------------------------------------------------------

loc_140A1574E:                          ; CODE XREF: sub_140A1570C+1A↑j
                mov     al, byte ptr [rsp+38h+arg_20]
                mov     [r9], al

loc_140A15755:                          ; CODE XREF: sub_140A1570C+2C↑j
                                        ; sub_140A1570C+35↑j ...
                add     rsp, 38h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1570C   endp

algn_140A1575B:                         ; DATA XREF: .pdata:000000014012C378↑o
                align 100h
                dq 100h dup(?)
TRACESUP        ends

; Section 18. (virtual address 00A16000)
; Virtual size                  : 000023D8 (   9176.)
; Section size in file          : 00002400 (   9216.)
; Offset to raw data for section: 00965200
; Flags 68000020: Text Not pageable Executable Readable
; Alignment     : default
; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
KVASCODE        segment para public 'CODE' use64
                assume cs:KVASCODE
                ;org 140A16000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                db 100h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_140A16100   proc near               ; DATA XREF: .pdata:000000014012C384↑o
                                        ; sub_14033BD50+39↑o ...

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1616E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16125
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16125:                          ; CODE XREF: sub_140A16100+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_140409900
; ---------------------------------------------------------------------------

loc_140A1616E:                          ; CODE XREF: sub_140A16100+5↑j
                lfence
                jmp     sub_140409900
; ---------------------------------------------------------------------------
                retn
sub_140A16100   endp

; ---------------------------------------------------------------------------
algn_140A16177:                         ; DATA XREF: .pdata:000000014012C384↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16180   proc near               ; DATA XREF: .pdata:000000014012C390↑o
                                        ; INITDATA:0000000140D58298↓o

arg_0           = byte ptr  8
arg_20          = qword ptr  28h
arg_28          = qword ptr  30h
arg_30          = dword ptr  38h
arg_34          = dword ptr  3Ch
arg_38          = qword ptr  40h

                push    r8
                push    rcx
                push    rax
                push    rdx
                test    [rsp+20h+arg_0], 1
                jz      short loc_140A16194
                swapgs
                lfence
                jmp     short loc_140A161B5
; ---------------------------------------------------------------------------

loc_140A16194:                          ; CODE XREF: sub_140A16180+A↑j
                mov     ecx, 0C0000101h
                rdmsr
                mov     [rsp+20h+arg_30], eax
                mov     [rsp+20h+arg_34], edx
                mov     rdx, [rsp+20h+arg_20]
                mov     eax, edx
                shr     rdx, 20h
                mov     ecx, 0C0000101h
                wrmsr

loc_140A161B5:                          ; CODE XREF: sub_140A16180+12↑j
                mov     rax, cr3
                mov     rdx, gs:9000h
                mov     [rsp+20h+arg_38], rax
                cmp     rax, rdx
                jz      short loc_140A161DA
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A161DA
                mov     cr3, rdx

loc_140A161DA:                          ; CODE XREF: sub_140A16180+49↑j
                                        ; sub_140A16180+55↑j
                lea     rcx, [rsp+20h+arg_20]
                mov     rsp, [rsp+20h+arg_28]
                push    qword ptr [rcx-8]
                push    qword ptr [rcx-10h]
                push    qword ptr [rcx-18h]
                push    qword ptr [rcx-20h]
                push    qword ptr [rcx-28h]
                mov     rdx, [rcx-48h]
                mov     rax, [rcx-40h]
                mov     rcx, [rcx-38h]
                jmp     sub_140409C40
; ---------------------------------------------------------------------------
                retn
sub_140A16180   endp

; ---------------------------------------------------------------------------
algn_140A16205:                         ; DATA XREF: .pdata:000000014012C390↑o
                align 40h

; =============== S U B R O U T I N E =======================================


sub_140A16240   proc near               ; DATA XREF: .pdata:000000014012C39C↑o
                                        ; sub_14040A100:loc_14040A2E9↑o ...

arg_20          = qword ptr  28h
arg_28          = qword ptr  30h
arg_30          = dword ptr  38h
arg_34          = dword ptr  3Ch
arg_38          = qword ptr  40h

                push    r8
                push    rcx
                push    rax
                push    rdx
                mov     ecx, 0C0000101h
                rdmsr
                mov     [rsp+20h+arg_30], eax
                mov     [rsp+20h+arg_34], edx
                mov     rdx, [rsp+20h+arg_20]
                mov     eax, edx
                shr     rdx, 20h
                mov     ecx, 0C0000101h
                wrmsr
                mov     rax, cr3
                mov     rdx, gs:9000h
                mov     [rsp+20h+arg_38], rax
                cmp     rax, rdx
                jz      short loc_140A1628B
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A1628B
                mov     cr3, rdx

loc_140A1628B:                          ; CODE XREF: sub_140A16240+3A↑j
                                        ; sub_140A16240+46↑j
                lea     rcx, [rsp+20h+arg_20]
                mov     rsp, [rsp+20h+arg_28]
                push    qword ptr [rcx-8]
                push    qword ptr [rcx-10h]
                push    qword ptr [rcx-18h]
                push    qword ptr [rcx-20h]
                push    qword ptr [rcx-28h]
                mov     rdx, [rcx-48h]
                mov     rax, [rcx-40h]
                mov     rcx, [rcx-38h]
                jmp     sub_14040A100
; ---------------------------------------------------------------------------

locret_140A162B5:                       ; DATA XREF: sub_14040A100+1F9↑o
                retn
sub_140A16240   endp

; ---------------------------------------------------------------------------
algn_140A162B6:                         ; DATA XREF: .pdata:000000014012C39C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A162C0   proc near               ; DATA XREF: .rdata:0000000140009200↑o
                                        ; .pdata:000000014012C3A8↑o ...

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1632E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A162E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A162E5:                          ; CODE XREF: sub_140A162C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040A5C0
; ---------------------------------------------------------------------------

loc_140A1632E:                          ; CODE XREF: sub_140A162C0+5↑j
                lfence
                jmp     sub_14040A5C0
; ---------------------------------------------------------------------------
                retn
sub_140A162C0   endp

; ---------------------------------------------------------------------------
algn_140A16337:                         ; DATA XREF: .pdata:000000014012C3A8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16340   proc near               ; DATA XREF: .pdata:000000014012C3B4↑o
                                        ; INITDATA:0000000140D582E0↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A163AE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16365
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16365:                          ; CODE XREF: sub_140A16340+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040A900
; ---------------------------------------------------------------------------

loc_140A163AE:                          ; CODE XREF: sub_140A16340+5↑j
                lfence
                jmp     sub_14040A900
; ---------------------------------------------------------------------------
                retn
sub_140A16340   endp

; ---------------------------------------------------------------------------
algn_140A163B7:                         ; DATA XREF: .pdata:000000014012C3B4↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A163C0   proc near               ; DATA XREF: .pdata:000000014012C3C0↑o
                                        ; INITDATA:0000000140D582F8↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1642E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A163E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A163E5:                          ; CODE XREF: sub_140A163C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040AC40
; ---------------------------------------------------------------------------

loc_140A1642E:                          ; CODE XREF: sub_140A163C0+5↑j
                lfence
                jmp     sub_14040AC40
; ---------------------------------------------------------------------------
                retn
sub_140A163C0   endp

; ---------------------------------------------------------------------------
algn_140A16437:                         ; DATA XREF: .pdata:000000014012C3C0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16440   proc near               ; DATA XREF: .pdata:000000014012C3CC↑o
                                        ; INITDATA:0000000140D58310↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A164AE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16465
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16465:                          ; CODE XREF: sub_140A16440+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040B280
; ---------------------------------------------------------------------------

loc_140A164AE:                          ; CODE XREF: sub_140A16440+5↑j
                lfence
                jmp     sub_14040B280
; ---------------------------------------------------------------------------
                retn
sub_140A16440   endp

; ---------------------------------------------------------------------------
algn_140A164B7:                         ; DATA XREF: .pdata:000000014012C3CC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A164C0   proc near               ; DATA XREF: .pdata:000000014012C3D8↑o
                                        ; INITDATA:0000000140D58328↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1652E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A164E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A164E5:                          ; CODE XREF: sub_140A164C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040B880
; ---------------------------------------------------------------------------

loc_140A1652E:                          ; CODE XREF: sub_140A164C0+5↑j
                lfence
                jmp     sub_14040B880
; ---------------------------------------------------------------------------
                retn
sub_140A164C0   endp

; ---------------------------------------------------------------------------
algn_140A16537:                         ; DATA XREF: .pdata:000000014012C3D8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16540   proc near               ; DATA XREF: .pdata:000000014012C3E4↑o
                                        ; INITDATA:0000000140D58340↓o

arg_28          = qword ptr  30h
arg_30          = qword ptr  38h
arg_38          = dword ptr  40h
arg_3C          = dword ptr  44h
arg_40          = qword ptr  48h

                push    rcx
                push    rax
                push    rdx
                mov     ecx, 0C0000101h
                rdmsr
                mov     [rsp+18h+arg_38], eax
                mov     [rsp+18h+arg_3C], edx
                mov     rdx, [rsp+18h+arg_28]
                mov     eax, edx
                shr     rdx, 20h
                mov     ecx, 0C0000101h
                wrmsr
                mov     rax, cr3
                mov     rdx, gs:9000h
                mov     [rsp+18h+arg_40], rax
                cmp     rax, rdx
                jz      short loc_140A16589
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16589
                mov     cr3, rdx

loc_140A16589:                          ; CODE XREF: sub_140A16540+38↑j
                                        ; sub_140A16540+44↑j
                lea     rcx, [rsp+18h+arg_28]
                mov     rsp, [rsp+18h+arg_30]
                push    qword ptr [rcx-8]
                push    qword ptr [rcx-10h]
                push    qword ptr [rcx-18h]
                push    qword ptr [rcx-20h]
                push    qword ptr [rcx-28h]
                push    qword ptr [rcx-30h]
                mov     rdx, [rcx-48h]
                mov     rax, [rcx-40h]
                mov     rcx, [rcx-38h]
                jmp     sub_14040BB80
; ---------------------------------------------------------------------------
                retn
sub_140A16540   endp

; ---------------------------------------------------------------------------
algn_140A165B7:                         ; DATA XREF: .pdata:000000014012C3E4↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A165C0   proc near               ; DATA XREF: .pdata:000000014012C3F0↑o
                                        ; INITDATA:0000000140D58358↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1662E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A165E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A165E5:                          ; CODE XREF: sub_140A165C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040BE40
; ---------------------------------------------------------------------------

loc_140A1662E:                          ; CODE XREF: sub_140A165C0+5↑j
                lfence
                jmp     sub_14040BE40
; ---------------------------------------------------------------------------
                retn
sub_140A165C0   endp

; ---------------------------------------------------------------------------
algn_140A16637:                         ; DATA XREF: .pdata:000000014012C3F0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16640   proc near               ; DATA XREF: .pdata:000000014012C3FC↑o
                                        ; INITDATA:0000000140D58370↓o

arg_8           = byte ptr  10h

                test    [rsp+arg_8], 1
                jz      short loc_140A166B1
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16665
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16665:                          ; CODE XREF: sub_140A16640+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                push    qword ptr [rsi-30h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040C140
; ---------------------------------------------------------------------------

loc_140A166B1:                          ; CODE XREF: sub_140A16640+5↑j
                lfence
                jmp     sub_14040C140
; ---------------------------------------------------------------------------
                retn
sub_140A16640   endp

; ---------------------------------------------------------------------------
algn_140A166BA:                         ; DATA XREF: .pdata:000000014012C3FC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A166C0   proc near               ; DATA XREF: .pdata:000000014012C408↑o
                                        ; INITDATA:0000000140D58388↓o

arg_8           = byte ptr  10h

                test    [rsp+arg_8], 1
                jz      short loc_140A16731
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A166E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A166E5:                          ; CODE XREF: sub_140A166C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                push    qword ptr [rsi-30h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040C440
; ---------------------------------------------------------------------------

loc_140A16731:                          ; CODE XREF: sub_140A166C0+5↑j
                lfence
                jmp     sub_14040C440
; ---------------------------------------------------------------------------
                retn
sub_140A166C0   endp

; ---------------------------------------------------------------------------
algn_140A1673A:                         ; DATA XREF: .pdata:000000014012C408↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16740   proc near               ; DATA XREF: .pdata:000000014012C414↑o
                                        ; INITDATA:0000000140D583A0↓o

arg_8           = byte ptr  10h

                test    [rsp+arg_8], 1
                jz      short loc_140A167B1
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16765
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16765:                          ; CODE XREF: sub_140A16740+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                push    qword ptr [rsi-30h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040C800
; ---------------------------------------------------------------------------

loc_140A167B1:                          ; CODE XREF: sub_140A16740+5↑j
                lfence
                jmp     sub_14040C800
; ---------------------------------------------------------------------------
                retn
sub_140A16740   endp

; ---------------------------------------------------------------------------
algn_140A167BA:                         ; DATA XREF: .pdata:000000014012C414↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A167C0   proc near               ; DATA XREF: .pdata:000000014012C420↑o
                                        ; INITDATA:0000000140D583B8↓o

arg_8           = byte ptr  10h

                test    [rsp+arg_8], 1
                jz      short loc_140A16831
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A167E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A167E5:                          ; CODE XREF: sub_140A167C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                push    qword ptr [rsi-30h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040CB40
; ---------------------------------------------------------------------------

loc_140A16831:                          ; CODE XREF: sub_140A167C0+5↑j
                lfence
                jmp     sub_14040CB40
; ---------------------------------------------------------------------------
                retn
sub_140A167C0   endp

; ---------------------------------------------------------------------------
algn_140A1683A:                         ; DATA XREF: .pdata:000000014012C420↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16840   proc near               ; DATA XREF: .pdata:000000014012C42C↑o
                                        ; INITDATA:0000000140D583D0↓o

arg_8           = byte ptr  10h

                test    [rsp+arg_8], 1
                jz      short loc_140A168B1
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16865
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16865:                          ; CODE XREF: sub_140A16840+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                push    qword ptr [rsi-30h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040CE80
; ---------------------------------------------------------------------------

loc_140A168B1:                          ; CODE XREF: sub_140A16840+5↑j
                lfence
                jmp     sub_14040CE80
; ---------------------------------------------------------------------------
                retn
sub_140A16840   endp

; ---------------------------------------------------------------------------
algn_140A168BA:                         ; DATA XREF: .pdata:000000014012C42C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A168C0   proc near               ; DATA XREF: .pdata:000000014012C438↑o
                                        ; INITDATA:0000000140D583E8↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1692E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A168E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A168E5:                          ; CODE XREF: sub_140A168C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040D600
; ---------------------------------------------------------------------------

loc_140A1692E:                          ; CODE XREF: sub_140A168C0+5↑j
                lfence
                jmp     sub_14040D600
; ---------------------------------------------------------------------------
                retn
sub_140A168C0   endp

; ---------------------------------------------------------------------------
algn_140A16937:                         ; DATA XREF: .pdata:000000014012C438↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16940   proc near               ; DATA XREF: .pdata:000000014012C444↑o
                                        ; INITDATA:0000000140D58400↓o

arg_8           = byte ptr  10h

                test    [rsp+arg_8], 1
                jz      short loc_140A169B1
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16965
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16965:                          ; CODE XREF: sub_140A16940+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                push    qword ptr [rsi-30h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040D9C0
; ---------------------------------------------------------------------------

loc_140A169B1:                          ; CODE XREF: sub_140A16940+5↑j
                lfence
                jmp     sub_14040D9C0
; ---------------------------------------------------------------------------
                retn
sub_140A16940   endp

; ---------------------------------------------------------------------------
algn_140A169BA:                         ; DATA XREF: .pdata:000000014012C444↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A169C0   proc near               ; DATA XREF: .pdata:000000014012C450↑o
                                        ; INITDATA:0000000140D58418↓o

arg_20          = qword ptr  28h
arg_28          = qword ptr  30h
arg_30          = dword ptr  38h
arg_34          = dword ptr  3Ch
arg_38          = qword ptr  40h

                push    r8
                push    rcx
                push    rax
                push    rdx
                mov     ecx, 0C0000101h
                rdmsr
                mov     [rsp+20h+arg_30], eax
                mov     [rsp+20h+arg_34], edx
                mov     rdx, [rsp+20h+arg_20]
                mov     eax, edx
                shr     rdx, 20h
                mov     ecx, 0C0000101h
                wrmsr
                mov     rax, cr3
                mov     rdx, gs:9000h
                mov     [rsp+20h+arg_38], rax
                cmp     rax, rdx
                jz      short loc_140A16A0B
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16A0B
                mov     cr3, rdx

loc_140A16A0B:                          ; CODE XREF: sub_140A169C0+3A↑j
                                        ; sub_140A169C0+46↑j
                lea     rcx, [rsp+20h+arg_20]
                mov     rsp, [rsp+20h+arg_28]
                push    qword ptr [rcx-8]
                push    qword ptr [rcx-10h]
                push    qword ptr [rcx-18h]
                push    qword ptr [rcx-20h]
                push    qword ptr [rcx-28h]
                mov     rdx, [rcx-48h]
                mov     rax, [rcx-40h]
                mov     rcx, [rcx-38h]
                jmp     sub_14040DD00
; ---------------------------------------------------------------------------
                retn
sub_140A169C0   endp

; ---------------------------------------------------------------------------
algn_140A16A36:                         ; DATA XREF: .pdata:000000014012C450↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16A40   proc near               ; DATA XREF: .pdata:000000014012C45C↑o
                                        ; sub_14040DD00+423↑o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16AAE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16A65
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16A65:                          ; CODE XREF: sub_140A16A40+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040E340
; ---------------------------------------------------------------------------

loc_140A16AAE:                          ; CODE XREF: sub_140A16A40+5↑j
                lfence
                jmp     sub_14040E340
; ---------------------------------------------------------------------------
                retn
sub_140A16A40   endp

; ---------------------------------------------------------------------------
algn_140A16AB7:                         ; DATA XREF: .pdata:000000014012C45C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16AC0   proc near               ; DATA XREF: .pdata:000000014012C468↑o
                                        ; INITDATA:0000000140D58430↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16B2E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16AE5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16AE5:                          ; CODE XREF: sub_140A16AC0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040E940
; ---------------------------------------------------------------------------

loc_140A16B2E:                          ; CODE XREF: sub_140A16AC0+5↑j
                lfence
                jmp     sub_14040E940
; ---------------------------------------------------------------------------
                retn
sub_140A16AC0   endp

; ---------------------------------------------------------------------------
algn_140A16B37:                         ; DATA XREF: .pdata:000000014012C468↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16B40   proc near               ; DATA XREF: .pdata:000000014012C474↑o
                                        ; INITDATA:0000000140D58448↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16BAE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16B65
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16B65:                          ; CODE XREF: sub_140A16B40+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040ED00
; ---------------------------------------------------------------------------

loc_140A16BAE:                          ; CODE XREF: sub_140A16B40+5↑j
                lfence
                jmp     sub_14040ED00
; ---------------------------------------------------------------------------
                retn
sub_140A16B40   endp

; ---------------------------------------------------------------------------
algn_140A16BB7:                         ; DATA XREF: .pdata:000000014012C474↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16BC0   proc near               ; DATA XREF: .pdata:000000014012C480↑o
                                        ; INITDATA:0000000140D58460↓o

arg_8           = byte ptr  10h

                test    [rsp+arg_8], 1
                jz      short loc_140A16C31
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16BE5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16BE5:                          ; CODE XREF: sub_140A16BC0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                push    qword ptr [rsi-30h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040F340
; ---------------------------------------------------------------------------

loc_140A16C31:                          ; CODE XREF: sub_140A16BC0+5↑j
                lfence
                jmp     sub_14040F340
; ---------------------------------------------------------------------------
                retn
sub_140A16BC0   endp

; ---------------------------------------------------------------------------
algn_140A16C3A:                         ; DATA XREF: .pdata:000000014012C480↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16C40   proc near               ; DATA XREF: .pdata:000000014012C48C↑o
                                        ; INITDATA:0000000140D58478↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16CAE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16C65
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16C65:                          ; CODE XREF: sub_140A16C40+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_140402520
; ---------------------------------------------------------------------------

loc_140A16CAE:                          ; CODE XREF: sub_140A16C40+5↑j
                lfence
                jmp     sub_140402520
; ---------------------------------------------------------------------------
                retn
sub_140A16C40   endp

; ---------------------------------------------------------------------------
algn_140A16CB7:                         ; DATA XREF: .pdata:000000014012C48C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16CC0   proc near               ; DATA XREF: .pdata:000000014012C498↑o
                                        ; INITDATA:0000000140D58490↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16D2E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16CE5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16CE5:                          ; CODE XREF: sub_140A16CC0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_1404044A0
; ---------------------------------------------------------------------------

loc_140A16D2E:                          ; CODE XREF: sub_140A16CC0+5↑j
                lfence
                jmp     sub_1404044A0
; ---------------------------------------------------------------------------
                retn
sub_140A16CC0   endp

; ---------------------------------------------------------------------------
algn_140A16D37:                         ; DATA XREF: .pdata:000000014012C498↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16D40   proc near               ; DATA XREF: .pdata:000000014012C4A4↑o
                                        ; INITDATA:0000000140D584A8↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16DAE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16D65
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16D65:                          ; CODE XREF: sub_140A16D40+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040F940
; ---------------------------------------------------------------------------

loc_140A16DAE:                          ; CODE XREF: sub_140A16D40+5↑j
                lfence
                jmp     sub_14040F940
; ---------------------------------------------------------------------------
                retn
sub_140A16D40   endp

; ---------------------------------------------------------------------------
algn_140A16DB7:                         ; DATA XREF: .pdata:000000014012C4A4↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16DC0   proc near               ; DATA XREF: .pdata:000000014012C4B0↑o
                                        ; INITDATA:0000000140D584C0↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16E2E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16DE5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16DE5:                          ; CODE XREF: sub_140A16DC0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040FC80
; ---------------------------------------------------------------------------

loc_140A16E2E:                          ; CODE XREF: sub_140A16DC0+5↑j
                lfence
                jmp     sub_14040FC80
; ---------------------------------------------------------------------------
                retn
sub_140A16DC0   endp

; ---------------------------------------------------------------------------
algn_140A16E37:                         ; DATA XREF: .pdata:000000014012C4B0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16E40   proc near               ; DATA XREF: .pdata:000000014012C4BC↑o
                                        ; INITDATA:0000000140D584D8↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16EAE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16E65
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16E65:                          ; CODE XREF: sub_140A16E40+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_14040FFC0
; ---------------------------------------------------------------------------

loc_140A16EAE:                          ; CODE XREF: sub_140A16E40+5↑j
                lfence
                jmp     sub_14040FFC0
; ---------------------------------------------------------------------------
                retn
sub_140A16E40   endp

; ---------------------------------------------------------------------------
algn_140A16EB7:                         ; DATA XREF: .pdata:000000014012C4BC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16EC0   proc near               ; DATA XREF: .pdata:000000014012C4C8↑o
                                        ; INITDATA:0000000140D584F0↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16F2E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16EE5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16EE5:                          ; CODE XREF: sub_140A16EC0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_140410300
; ---------------------------------------------------------------------------

loc_140A16F2E:                          ; CODE XREF: sub_140A16EC0+5↑j
                lfence
                jmp     sub_140410300
; ---------------------------------------------------------------------------
                retn
sub_140A16EC0   endp

; ---------------------------------------------------------------------------
algn_140A16F37:                         ; DATA XREF: .pdata:000000014012C4C8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16F40   proc near               ; DATA XREF: .pdata:000000014012C4D4↑o
                                        ; INITDATA:0000000140D58508↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A16FAE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16F65
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16F65:                          ; CODE XREF: sub_140A16F40+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_140404B90
; ---------------------------------------------------------------------------

loc_140A16FAE:                          ; CODE XREF: sub_140A16F40+5↑j
                lfence
                jmp     sub_140404B90
; ---------------------------------------------------------------------------
                retn
sub_140A16F40   endp

; ---------------------------------------------------------------------------
algn_140A16FB7:                         ; DATA XREF: .pdata:000000014012C4D4↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A16FC0   proc near               ; DATA XREF: .pdata:000000014012C4E0↑o
                                        ; INITDATA:0000000140D58520↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1702E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A16FE5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A16FE5:                          ; CODE XREF: sub_140A16FC0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_140402BF0
; ---------------------------------------------------------------------------

loc_140A1702E:                          ; CODE XREF: sub_140A16FC0+5↑j
                lfence
                jmp     sub_140402BF0
; ---------------------------------------------------------------------------
                retn
sub_140A16FC0   endp

; ---------------------------------------------------------------------------
algn_140A17037:                         ; DATA XREF: .pdata:000000014012C4E0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A17040   proc near               ; DATA XREF: .pdata:000000014012C4EC↑o
                                        ; INITDATA:0000000140D58538↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A170AE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A17065
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A17065:                          ; CODE XREF: sub_140A17040+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_140402ED0
; ---------------------------------------------------------------------------

loc_140A170AE:                          ; CODE XREF: sub_140A17040+5↑j
                lfence
                jmp     sub_140402ED0
; ---------------------------------------------------------------------------
                retn
sub_140A17040   endp

; ---------------------------------------------------------------------------
algn_140A170B7:                         ; DATA XREF: .pdata:000000014012C4EC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A170C0   proc near               ; DATA XREF: .pdata:000000014012C4F8↑o
                                        ; INITDATA:0000000140D58550↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1712E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A170E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A170E5:                          ; CODE XREF: sub_140A170C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_1404031B0
; ---------------------------------------------------------------------------

loc_140A1712E:                          ; CODE XREF: sub_140A170C0+5↑j
                lfence
                jmp     sub_1404031B0
; ---------------------------------------------------------------------------
                retn
sub_140A170C0   endp

; ---------------------------------------------------------------------------
algn_140A17137:                         ; DATA XREF: .pdata:000000014012C4F8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A17140   proc near               ; DATA XREF: .pdata:000000014012C504↑o
                                        ; INITDATA:0000000140D58568↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A171AE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A17165
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A17165:                          ; CODE XREF: sub_140A17140+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_140403490
; ---------------------------------------------------------------------------

loc_140A171AE:                          ; CODE XREF: sub_140A17140+5↑j
                lfence
                jmp     sub_140403490
; ---------------------------------------------------------------------------
                retn
sub_140A17140   endp

; ---------------------------------------------------------------------------
algn_140A171B7:                         ; DATA XREF: .pdata:000000014012C504↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A171C0   proc near               ; DATA XREF: .pdata:000000014012C510↑o
                                        ; INITDATA:0000000140D58580↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A1722E
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A171E5
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A171E5:                          ; CODE XREF: sub_140A171C0+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_140403770
; ---------------------------------------------------------------------------

loc_140A1722E:                          ; CODE XREF: sub_140A171C0+5↑j
                lfence
                jmp     sub_140403770
; ---------------------------------------------------------------------------
                retn
sub_140A171C0   endp

; ---------------------------------------------------------------------------
algn_140A17237:                         ; DATA XREF: .pdata:000000014012C510↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A17240   proc near               ; DATA XREF: .pdata:000000014012C51C↑o
                                        ; INITDATA:0000000140D58598↓o

arg_0           = byte ptr  8

                test    [rsp+arg_0], 1
                jz      short loc_140A172AE
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A17265
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A17265:                          ; CODE XREF: sub_140A17240+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_1404051B0
; ---------------------------------------------------------------------------

loc_140A172AE:                          ; CODE XREF: sub_140A17240+5↑j
                lfence
                jmp     sub_1404051B0
; ---------------------------------------------------------------------------
                retn
sub_140A17240   endp

; ---------------------------------------------------------------------------
algn_140A172B7:                         ; DATA XREF: .pdata:000000014012C51C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A172C0   proc near               ; DATA XREF: .pdata:000000014012C528↑o
                                        ; sub_140377A0C+C9↑o ...
                push    0
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    1
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    2
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    3
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    4
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    5
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    6
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    7
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    8
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    9
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0Ah
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0Bh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0Ch
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0Dh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0Eh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0Fh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    10h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    11h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    12h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    13h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    14h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    15h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    16h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    17h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    18h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    19h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    1Ah
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    1Bh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    1Ch
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    1Dh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    1Eh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    1Fh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    20h ; ' '
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    21h ; '!'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    22h ; '"'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    23h ; '#'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    24h ; '$'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    25h ; '%'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    26h ; '&'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    27h ; '''
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    28h ; '('
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    29h ; ')'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    2Ah ; '*'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    2Bh ; '+'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    2Ch ; ','
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    2Dh ; '-'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    2Eh ; '.'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    2Fh ; '/'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    30h ; '0'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    31h ; '1'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    32h ; '2'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    33h ; '3'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    34h ; '4'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    35h ; '5'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    36h ; '6'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    37h ; '7'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    38h ; '8'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    39h ; '9'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    3Ah ; ':'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    3Bh ; ';'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    3Ch ; '<'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    3Dh ; '='
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    3Eh ; '>'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    3Fh ; '?'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    40h ; '@'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    41h ; 'A'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    42h ; 'B'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    43h ; 'C'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    44h ; 'D'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    45h ; 'E'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    46h ; 'F'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    47h ; 'G'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    48h ; 'H'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    49h ; 'I'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    4Ah ; 'J'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    4Bh ; 'K'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    4Ch ; 'L'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    4Dh ; 'M'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    4Eh ; 'N'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    4Fh ; 'O'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    50h ; 'P'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    51h ; 'Q'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    52h ; 'R'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    53h ; 'S'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    54h ; 'T'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    55h ; 'U'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    56h ; 'V'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    57h ; 'W'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    58h ; 'X'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    59h ; 'Y'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    5Ah ; 'Z'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    5Bh ; '['
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    5Ch ; '\'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    5Dh ; ']'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    5Eh ; '^'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    5Fh ; '_'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    60h ; '`'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    61h ; 'a'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    62h ; 'b'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    63h ; 'c'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    64h ; 'd'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    65h ; 'e'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    66h ; 'f'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    67h ; 'g'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    68h ; 'h'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    69h ; 'i'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    6Ah ; 'j'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    6Bh ; 'k'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    6Ch ; 'l'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    6Dh ; 'm'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    6Eh ; 'n'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    6Fh ; 'o'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    70h ; 'p'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    71h ; 'q'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    72h ; 'r'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    73h ; 's'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    74h ; 't'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    75h ; 'u'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    76h ; 'v'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    77h ; 'w'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    78h ; 'x'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    79h ; 'y'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    7Ah ; 'z'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    7Bh ; '{'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    7Ch ; '|'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    7Dh ; '}'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    7Eh ; '~'
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    7Fh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF80h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF81h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF82h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF83h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF84h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF85h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF86h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF87h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF88h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF89h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF8Ah
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF8Bh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF8Ch
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF8Dh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF8Eh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF8Fh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF90h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF91h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF92h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF93h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF94h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF95h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF96h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF97h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF98h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF99h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF9Ah
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF9Bh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF9Ch
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF9Dh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF9Eh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF9Fh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFA0h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA1h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFA2h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA3h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFA4h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA5h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFA6h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA7h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFA8h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA9h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFAAh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFABh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFACh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFADh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFAEh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFAFh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFB0h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB1h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFB2h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB3h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFB4h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB5h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFB6h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB7h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFB8h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB9h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFBAh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFBBh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFBCh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFBDh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFBEh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFBFh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFC0h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC1h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFC2h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC3h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFC4h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC5h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFC6h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC7h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFC8h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC9h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFCAh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFCBh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFCCh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFCDh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFCEh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFCFh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFD0h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD1h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFD2h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD3h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFD4h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD5h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFD6h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD7h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFD8h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD9h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFDAh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFDBh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFDCh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFDDh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFDEh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFDFh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFE0h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE1h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFE2h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE3h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFE4h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE5h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFE6h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE7h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFE8h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE9h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFEAh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFEBh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFECh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFEDh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFEEh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFEFh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFF0h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF1h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFF2h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF3h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFF4h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF5h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFF6h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF7h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFF8h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF9h
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFFAh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFFBh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFFCh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFFDh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFFEh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFFFh
                jmp     sub_140A17B00
; ---------------------------------------------------------------------------
                align 20h
                retn
sub_140A172C0   endp

; ---------------------------------------------------------------------------
algn_140A17AC1:                         ; DATA XREF: .pdata:000000014012C528↑o
                align 40h

; =============== S U B R O U T I N E =======================================


sub_140A17B00   proc near               ; CODE XREF: sub_140A172C0+2↑j
                                        ; sub_140A172C0+A↑j ...

arg_8           = byte ptr  10h

                test    [rsp+arg_8], 1
                jz      short loc_140A17B71
                swapgs
                lfence
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A17B25
                mov     rsp, gs:9000h
                mov     cr3, rsp

loc_140A17B25:                          ; CODE XREF: sub_140A17B00+17↑j
                mov     rsp, gs:9008h
                mov     gs:10h, rsi
                mov     rsi, gs:38h
                add     rsi, 4200h
                push    qword ptr [rsi-8]
                push    qword ptr [rsi-10h]
                push    qword ptr [rsi-18h]
                push    qword ptr [rsi-20h]
                push    qword ptr [rsi-28h]
                push    qword ptr [rsi-30h]
                mov     rsi, gs:10h
                and     qword ptr gs:10h, 0
                jmp     sub_1404011F0
; ---------------------------------------------------------------------------

loc_140A17B71:                          ; CODE XREF: sub_140A17B00+5↑j
                lfence
                jmp     sub_1404011F0
; ---------------------------------------------------------------------------
                retn
sub_140A17B00   endp

; ---------------------------------------------------------------------------
algn_140A17B7A:                         ; DATA XREF: .pdata:000000014012C534↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A17B80   proc near               ; CODE XREF: sub_1403FDE70+393↑j
                                        ; sub_1403FE270+388↑j ...

arg_18          = word ptr  20h
arg_20          = byte ptr  28h

                push    rax
                push    rdx
                lea     rax, [rsp+10h+arg_20]
                mov     rdx, gs:38h
                lea     rsp, [rdx+4200h]
                mov     rdx, gs:188h
                mov     rdx, [rdx+220h]
                mov     rdx, [rdx+388h]
                push    qword ptr [rax-8]
                push    qword ptr [rax-10h]
                push    qword ptr [rax-18h]
                push    qword ptr [rax-20h]
                push    qword ptr [rax-28h]
                mov     gs:9010h, rsp
                mov     rsp, rdx
                mov     rdx, [rax-38h]
                mov     rax, [rax-30h]
                test    dword ptr gs:9018h, 2
                jnz     short loc_140A17C06
                bt      esp, 0
                jnb     short loc_140A17C03
                test    dword ptr gs:9018h, 1
                jnz     short loc_140A17BFA
                bts     rsp, 3Fh ; '?'
                jmp     short loc_140A17C03
; ---------------------------------------------------------------------------

loc_140A17BFA:                          ; CODE XREF: sub_140A17B80+71↑j
                and     dword ptr gs:9018h, 0FFFFFFFEh

loc_140A17C03:                          ; CODE XREF: sub_140A17B80+63↑j
                                        ; sub_140A17B80+78↑j
                mov     cr3, rsp

loc_140A17C06:                          ; CODE XREF: sub_140A17B80+5D↑j
                mov     rsp, gs:9010h
                test    dword ptr gs:9018h, 2
                jnz     short loc_140A17C22
                verw    [rsp+arg_18]

loc_140A17C22:                          ; CODE XREF: sub_140A17B80+9B↑j
                swapgs
                iretq
; ---------------------------------------------------------------------------
                retn
sub_140A17B80   endp

; ---------------------------------------------------------------------------
algn_140A17C28:                         ; DATA XREF: .pdata:000000014012C540↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A17C40   proc near               ; CODE XREF: sub_140409C40+A4↑j
                                        ; sub_14040A100+2FD↑j ...

arg_18          = word ptr  20h
arg_20          = qword ptr  28h
arg_30          = dword ptr  38h
arg_34          = dword ptr  3Ch
arg_38          = qword ptr  40h

                push    rax
                lea     rax, [rsp+8+arg_20]
                mov     rsp, [rsp+8+arg_20]
                push    qword ptr [rax-8]
                push    qword ptr [rax-10h]
                push    qword ptr [rax-18h]
                push    qword ptr [rax-20h]
                push    qword ptr [rax-28h]
                push    qword ptr [rax-30h]
                push    rdx
                push    rcx
                mov     rdx, [rsp+18h+arg_38]
                bt      edx, 0
                jb      short loc_140A17C74
                mov     rax, cr3
                cmp     rax, rdx
                jz      short loc_140A17C91
                jmp     short loc_140A17C8E
; ---------------------------------------------------------------------------

loc_140A17C74:                          ; CODE XREF: sub_140A17C40+28↑j
                lock btr dword ptr gs:9018h, 0
                jb      short loc_140A17C8E
                mov     rax, cr3
                cmp     rax, rdx
                jz      short loc_140A17C91
                bts     rdx, 3Fh ; '?'

loc_140A17C8E:                          ; CODE XREF: sub_140A17C40+32↑j
                                        ; sub_140A17C40+3F↑j
                mov     cr3, rdx

loc_140A17C91:                          ; CODE XREF: sub_140A17C40+30↑j
                                        ; sub_140A17C40+47↑j
                mov     eax, [rsp+18h+arg_30]
                mov     edx, [rsp+18h+arg_34]
                mov     ecx, 0C0000101h
                wrmsr
                pop     rcx
                pop     rdx
                pop     rax
                push    0
                push    0
                push    0
                push    0
                add     rsp, 20h
                verw    [rsp+arg_18]
                iretq
; ---------------------------------------------------------------------------
                retn
sub_140A17C40   endp

; ---------------------------------------------------------------------------
algn_140A17CB7:                         ; DATA XREF: .pdata:000000014012C54C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A17CC0   proc near               ; CODE XREF: sub_14040DD00+484↑j
                                        ; sub_14040DD00+51E↑j
                                        ; DATA XREF: ...

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = word ptr -10h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = qword ptr  10h
arg_18          = byte ptr  20h
arg_20          = qword ptr  28h

                push    rax
                lea     rax, [rsp+8+arg_20]
                mov     rsp, [rsp+8+arg_20]
                push    qword ptr [rax-8]
                push    qword ptr [rax-10h]
                push    qword ptr [rax-18h]
                push    qword ptr [rax-20h]
                push    qword ptr [rax-28h]
                push    qword ptr [rax-30h]
                push    rdx
                push    rcx
                mov     rdx, [rsp+48h+arg_8]
                bt      edx, 0
                jb      short loc_140A17CF4
                mov     rax, cr3
                cmp     rax, rdx
                jz      short loc_140A17D11
                jmp     short loc_140A17D0E
; ---------------------------------------------------------------------------

loc_140A17CF4:                          ; CODE XREF: sub_140A17CC0+28↑j
                lock btr dword ptr gs:9018h, 0
                jb      short loc_140A17D0E
                mov     rax, cr3
                cmp     rax, rdx
                jz      short loc_140A17D11
                bts     rdx, 3Fh ; '?'

loc_140A17D0E:                          ; CODE XREF: sub_140A17CC0+32↑j
                                        ; sub_140A17CC0+3F↑j
                mov     cr3, rdx

loc_140A17D11:                          ; CODE XREF: sub_140A17CC0+30↑j
                                        ; sub_140A17CC0+47↑j
                mov     eax, [rsp+48h+arg_0]
                mov     edx, [rsp+48h+arg_4]
                mov     ecx, 0C0000101h
                wrmsr
                pop     rcx
                pop     rdx
                pop     rax
                test    [rsp+30h+var_10], 4
                jnz     short loc_140A17D50
                push    rax
                push    rcx
                push    rdx
                xor     eax, eax
                xor     edx, edx
                mov     ecx, 17Ah
                wrmsr
; ---------------------------------------------------------------------------
aZyxj           db 'ZYXj',0             ; DATA XREF: sub_1405268B0+B8↑o
aJ              db 'j',0
aJ_0            db 'j',0
aJ_1            db 'j',0
                db 48h, 83h, 0C4h
; ---------------------------------------------------------------------------
                and     [rdi], cl
                add     [rsp+arg_18], ch
                iretq
; ---------------------------------------------------------------------------

loc_140A17D50:                          ; CODE XREF: sub_140A17CC0+6A↑j
                                        ; DATA XREF: sub_1405268B0+C4↑o
                push    rax
                push    [rsp+38h+var_20]
                popfq
                mov     rax, rsp
                push    0
                push    0
                push    0
                push    0
                add     rsp, 20h
                mov     rsp, [rsp+38h+var_18]
                push    qword ptr [rax+10h]
                push    qword ptr [rax+8]
                mov     rax, [rax]
                push    rax
                push    rcx
                push    rdx
                xor     eax, eax
                xor     edx, edx
                mov     ecx, 17Ah
                wrmsr
; ---------------------------------------------------------------------------
aZyxj_0         db 'ZYXj',0             ; DATA XREF: sub_1405268B0+E4↑o
aJ_2            db 'j',0
aJ_3            db 'j',0
aJ_4            db 'j',0
                dd 20C48348h
                db 0Fh, 0, 6Ch, 24h, 8, 48h, 0CBh
; ---------------------------------------------------------------------------

locret_140A17D97:                       ; DATA XREF: sub_1405268B0+F0↑o
                retn
sub_140A17CC0   endp ; sp-analysis failed

; ---------------------------------------------------------------------------
algn_140A17D98:                         ; DATA XREF: .pdata:000000014012C558↑o
                align 40h

; =============== S U B R O U T I N E =======================================


sub_140A17DC0   proc near               ; CODE XREF: sub_140401940+323↑j
                                        ; sub_140410A00+86C↑j ...
                mov     esp, gs:9018h
                bt      esp, 1
                jb      short loc_140A17E04
                mov     rbp, gs:188h
                mov     rbp, [rbp+220h]
                mov     rbp, [rbp+388h]
                bt      ebp, 0
                jnb     short loc_140A17E01
                bt      esp, 0
                jb      short loc_140A17DF8
                bts     rbp, 3Fh ; '?'
                jmp     short loc_140A17E01
; ---------------------------------------------------------------------------

loc_140A17DF8:                          ; CODE XREF: sub_140A17DC0+2F↑j
                and     dword ptr gs:9018h, 0FFFFFFFEh

loc_140A17E01:                          ; CODE XREF: sub_140A17DC0+29↑j
                                        ; sub_140A17DC0+36↑j
                mov     cr3, rbp

loc_140A17E04:                          ; CODE XREF: sub_140A17DC0+C↑j
                mov     rbp, r9
                bt      esp, 1
                jb      short loc_140A17E16
                verw    word ptr gs:902Ah

loc_140A17E16:                          ; CODE XREF: sub_140A17DC0+4B↑j
                mov     rsp, r8
                swapgs
                sysret
; ---------------------------------------------------------------------------
                retn
sub_140A17DC0   endp

; ---------------------------------------------------------------------------
algn_140A17E20:                         ; DATA XREF: .pdata:000000014012C564↑o
                align 40h

; =============== S U B R O U T I N E =======================================


sub_140A17E40   proc near               ; DATA XREF: .pdata:000000014012C570↑o
                                        ; sub_14099D840+33E↑o

var_110         = byte ptr -110h

                swapgs
                mov     gs:9010h, rsp
                mov     rsp, gs:9000h
                mov     cr3, rsp
                mov     rsp, gs:9008h
                push    2Bh ; '+'
                push    qword ptr gs:9010h
                push    r11
                push    23h ; '#'
                push    rcx
                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+190h+var_110]
                mov     byte ptr [rbp-55h], 1
                mov     [rbp-50h], rax
                mov     [rbp-48h], rcx
                mov     [rbp-40h], rdx
                mov     [rbp-38h], r8
                mov     [rbp-30h], r9
                mov     [rbp-28h], r10
                mov     [rbp-20h], r11
                test    byte ptr [rbp+0F0h], 1
                jnz     short loc_140A17EDA
                lfence
                test    byte ptr gs:278h, 1
                jnz     short loc_140A17EC3
                lfence
                jmp     loc_140A18119
; ---------------------------------------------------------------------------

loc_140A17EC3:                          ; CODE XREF: sub_140A17E40+79↑j
                movzx   eax, byte ptr gs:27Ah
                mov     ecx, 48h ; 'H'
                xor     edx, edx
                wrmsr
                jmp     loc_140A18119
; ---------------------------------------------------------------------------

loc_140A17EDA:                          ; CODE XREF: sub_140A17E40+6B↑j
                test    cs:byte_140E01840, 1
                jnz     short loc_140A17EE6
                swapgs

loc_140A17EE6:                          ; CODE XREF: sub_140A17E40+A1↑j
                lfence
                mov     r10, gs:188h
                mov     rcx, gs:188h
                mov     rcx, [rcx+220h]
                mov     rcx, [rcx+9E0h]
                mov     gs:270h, rcx
                mov     cl, gs:850h
                mov     gs:851h, cl
                mov     cl, gs:278h
                mov     gs:852h, cl
                movzx   eax, byte ptr gs:27Bh
                cmp     gs:27Ah, al
                jz      short loc_140A17F56
                mov     gs:27Ah, al
                mov     ecx, 48h ; 'H'
                xor     edx, edx
                wrmsr

loc_140A17F56:                          ; CODE XREF: sub_140A17E40+103↑j
                movzx   edx, byte ptr gs:278h
                test    edx, 8
                jz      short loc_140A17F7E
                mov     eax, 1
                xor     edx, edx
                mov     ecx, 49h ; 'I'
                wrmsr
                movzx   edx, byte ptr gs:278h

loc_140A17F7E:                          ; CODE XREF: sub_140A17E40+125↑j
                test    edx, 2
                jz      loc_140A180AF
                call    loc_140A1809D

loc_140A17F8F:                          ; CODE XREF: sub_140A17E40+15C↓p
                add     rsp, 8
                call    loc_140A180A6

loc_140A17F98:                          ; CODE XREF: sub_140A17E40+165↓p
                add     rsp, 8
                call    loc_140A17F8F

loc_140A17FA1:                          ; CODE XREF: sub_140A17E40+16E↓p
                add     rsp, 8
                call    loc_140A17F98

loc_140A17FAA:                          ; CODE XREF: sub_140A17E40+177↓p
                add     rsp, 8
                call    loc_140A17FA1

loc_140A17FB3:                          ; CODE XREF: sub_140A17E40+180↓p
                add     rsp, 8
                call    loc_140A17FAA

loc_140A17FBC:                          ; CODE XREF: sub_140A17E40+189↓p
                add     rsp, 8
                call    loc_140A17FB3

loc_140A17FC5:                          ; CODE XREF: sub_140A17E40+192↓p
                add     rsp, 8
                call    loc_140A17FBC

loc_140A17FCE:                          ; CODE XREF: sub_140A17E40+19B↓p
                add     rsp, 8
                call    loc_140A17FC5

loc_140A17FD7:                          ; CODE XREF: sub_140A17E40+1A4↓p
                add     rsp, 8
                call    loc_140A17FCE

loc_140A17FE0:                          ; CODE XREF: sub_140A17E40+1AD↓p
                add     rsp, 8
                call    loc_140A17FD7

loc_140A17FE9:                          ; CODE XREF: sub_140A17E40+1B6↓p
                add     rsp, 8
                call    loc_140A17FE0

loc_140A17FF2:                          ; CODE XREF: sub_140A17E40+1BF↓p
                add     rsp, 8
                call    loc_140A17FE9

loc_140A17FFB:                          ; CODE XREF: sub_140A17E40+1C8↓p
                add     rsp, 8
                call    loc_140A17FF2

loc_140A18004:                          ; CODE XREF: sub_140A17E40+1D1↓p
                add     rsp, 8
                call    loc_140A17FFB

loc_140A1800D:                          ; CODE XREF: sub_140A17E40+1DA↓p
                add     rsp, 8
                call    loc_140A18004

loc_140A18016:                          ; CODE XREF: sub_140A17E40+1E3↓p
                add     rsp, 8
                call    loc_140A1800D

loc_140A1801F:                          ; CODE XREF: sub_140A17E40+1EC↓p
                add     rsp, 8
                call    loc_140A18016

loc_140A18028:                          ; CODE XREF: sub_140A17E40+1F5↓p
                add     rsp, 8
                call    loc_140A1801F

loc_140A18031:                          ; CODE XREF: sub_140A17E40+1FE↓p
                add     rsp, 8
                call    loc_140A18028

loc_140A1803A:                          ; CODE XREF: sub_140A17E40+207↓p
                add     rsp, 8
                call    loc_140A18031

loc_140A18043:                          ; CODE XREF: sub_140A17E40+210↓p
                add     rsp, 8
                call    loc_140A1803A

loc_140A1804C:                          ; CODE XREF: sub_140A17E40+219↓p
                add     rsp, 8
                call    loc_140A18043

loc_140A18055:                          ; CODE XREF: sub_140A17E40+222↓p
                add     rsp, 8
                call    loc_140A1804C

loc_140A1805E:                          ; CODE XREF: sub_140A17E40+22B↓p
                add     rsp, 8
                call    loc_140A18055

loc_140A18067:                          ; CODE XREF: sub_140A17E40+234↓p
                add     rsp, 8
                call    loc_140A1805E

loc_140A18070:                          ; CODE XREF: sub_140A17E40+23D↓p
                add     rsp, 8
                call    loc_140A18067

loc_140A18079:                          ; CODE XREF: sub_140A17E40+246↓p
                add     rsp, 8
                call    loc_140A18070

loc_140A18082:                          ; CODE XREF: sub_140A17E40+24F↓p
                add     rsp, 8
                call    loc_140A18079

loc_140A1808B:                          ; CODE XREF: sub_140A17E40+258↓p
                add     rsp, 8
                call    loc_140A18082

loc_140A18094:                          ; CODE XREF: sub_140A17E40+261↓p
                add     rsp, 8
                call    loc_140A1808B

loc_140A1809D:                          ; CODE XREF: sub_140A17E40+14A↑p
                add     rsp, 8
                call    loc_140A18094

loc_140A180A6:                          ; CODE XREF: sub_140A17E40+153↑p
                add     rsp, 8
                mov     eax, 0DADAh

loc_140A180AF:                          ; CODE XREF: sub_140A17E40+144↑j
                lfence
                mov     byte ptr gs:853h, 0
                test    byte ptr [r10+3], 80h
                jz      short loc_140A18104
                mov     ecx, 0C0000102h
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                cmp     rax, cs:MmUserProbeAddress
                cmovnb  rax, cs:MmUserProbeAddress
                cmp     [r10+0F0h], rax
                jz      short loc_140A18104
                mov     rdx, [r10+1F0h]
                bts     dword ptr [r10+74h], 8
                dec     word ptr [r10+1E6h]
                mov     [rdx+80h], rax

loc_140A18104:                          ; CODE XREF: sub_140A17E40+280↑j
                                        ; sub_140A17E40+2A6↑j
                test    byte ptr [r10+3], 3
                mov     word ptr [rbp+80h], 0
                jz      short loc_140A18119
                call    sub_1403FDC80

loc_140A18119:                          ; CODE XREF: sub_140A17E40+7E↑j
                                        ; sub_140A17E40+95↑j ...
                cld
                stmxcsr dword ptr [rbp-54h]
                ldmxcsr dword ptr gs:180h
                movaps  xmmword ptr [rbp-10h], xmm0
                movaps  xmmword ptr [rbp+0], xmm1
                movaps  xmmword ptr [rbp+10h], xmm2
                movaps  xmmword ptr [rbp+20h], xmm3
                movaps  xmmword ptr [rbp+30h], xmm4
                movaps  xmmword ptr [rbp+40h], xmm5
                test    byte ptr cs:dword_140CFC554, 0FFh
                jz      short loc_140A18154
                test    byte ptr [rbp+0F0h], 1
                jz      short loc_140A18154
                stac

loc_140A18154:                          ; CODE XREF: sub_140A17E40+306↑j
                                        ; sub_140A17E40+30F↑j
                sub     qword ptr [rbp+0E8h], 2
                and     dword ptr [rbp+0ECh], 0
                sti
                mov     ecx, 0C000001Dh
                xor     edx, edx
                mov     r8, [rbp+0E8h]
                call    sub_140411740
                nop
                retn
sub_140A17E40   endp ; sp-analysis failed

; ---------------------------------------------------------------------------
algn_140A18179:                         ; DATA XREF: .pdata:000000014012C570↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A18180   proc near               ; DATA XREF: .pdata:000000014012C57C↑o
                                        ; sub_1403EB664+34↑o ...

var_110         = byte ptr -110h

                swapgs
                mov     gs:9010h, rsp
                mov     rsp, gs:9000h
                bt      dword ptr gs:9018h, 1
                jb      short loc_140A181A4
                mov     cr3, rsp

loc_140A181A4:                          ; CODE XREF: sub_140A18180+1F↑j
                mov     rsp, gs:9008h
                push    2Bh ; '+'
                push    qword ptr gs:9010h
                push    r11
                push    33h ; '3'
                push    rcx
                mov     rcx, r10
                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+190h+var_110]
                mov     [rbp+0C0h], rbx
                mov     [rbp+0C8h], rdi
                mov     [rbp+0D0h], rsi
                test    byte ptr cs:dword_140CFC554, 0FFh
                jz      short loc_140A181FD
                test    byte ptr [rbp+0F0h], 1
                jz      short loc_140A181FD
                stac

loc_140A181FD:                          ; CODE XREF: sub_140A18180+6F↑j
                                        ; sub_140A18180+78↑j
                mov     [rbp-50h], rax
                mov     [rbp-48h], rcx
                mov     [rbp-40h], rdx
                mov     rcx, gs:188h
                mov     rcx, [rcx+220h]
                mov     rcx, [rcx+9E0h]
                mov     gs:270h, rcx
                mov     cl, gs:850h
                mov     gs:851h, cl
                mov     cl, gs:278h
                mov     gs:852h, cl
                movzx   eax, byte ptr gs:27Bh
                cmp     gs:27Ah, al
                jz      short loc_140A1826D
                mov     gs:27Ah, al
                mov     ecx, 48h ; 'H'
                xor     edx, edx
                wrmsr

loc_140A1826D:                          ; CODE XREF: sub_140A18180+DA↑j
                movzx   edx, byte ptr gs:278h
                test    edx, 8
                jz      short loc_140A18295
                mov     eax, 1
                xor     edx, edx
                mov     ecx, 49h ; 'I'
                wrmsr
                movzx   edx, byte ptr gs:278h

loc_140A18295:                          ; CODE XREF: sub_140A18180+FC↑j
                test    edx, 2
                jz      loc_140A183C6
                call    loc_140A183B4

loc_140A182A6:                          ; CODE XREF: sub_140A18180+133↓p
                add     rsp, 8
                call    loc_140A183BD

loc_140A182AF:                          ; CODE XREF: sub_140A18180+13C↓p
                add     rsp, 8
                call    loc_140A182A6

loc_140A182B8:                          ; CODE XREF: sub_140A18180+145↓p
                add     rsp, 8
                call    loc_140A182AF

loc_140A182C1:                          ; CODE XREF: sub_140A18180+14E↓p
                add     rsp, 8
                call    loc_140A182B8

loc_140A182CA:                          ; CODE XREF: sub_140A18180+157↓p
                add     rsp, 8
                call    loc_140A182C1

loc_140A182D3:                          ; CODE XREF: sub_140A18180+160↓p
                add     rsp, 8
                call    loc_140A182CA

loc_140A182DC:                          ; CODE XREF: sub_140A18180+169↓p
                add     rsp, 8
                call    loc_140A182D3

loc_140A182E5:                          ; CODE XREF: sub_140A18180+172↓p
                add     rsp, 8
                call    loc_140A182DC

loc_140A182EE:                          ; CODE XREF: sub_140A18180+17B↓p
                add     rsp, 8
                call    loc_140A182E5

loc_140A182F7:                          ; CODE XREF: sub_140A18180+184↓p
                add     rsp, 8
                call    loc_140A182EE

loc_140A18300:                          ; CODE XREF: sub_140A18180+18D↓p
                add     rsp, 8
                call    loc_140A182F7

loc_140A18309:                          ; CODE XREF: sub_140A18180+196↓p
                add     rsp, 8
                call    loc_140A18300

loc_140A18312:                          ; CODE XREF: sub_140A18180+19F↓p
                add     rsp, 8
                call    loc_140A18309

loc_140A1831B:                          ; CODE XREF: sub_140A18180+1A8↓p
                add     rsp, 8
                call    loc_140A18312

loc_140A18324:                          ; CODE XREF: sub_140A18180+1B1↓p
                add     rsp, 8
                call    loc_140A1831B

loc_140A1832D:                          ; CODE XREF: sub_140A18180+1BA↓p
                add     rsp, 8
                call    loc_140A18324

loc_140A18336:                          ; CODE XREF: sub_140A18180+1C3↓p
                add     rsp, 8
                call    loc_140A1832D

loc_140A1833F:                          ; CODE XREF: sub_140A18180+1CC↓p
                add     rsp, 8
                call    loc_140A18336

loc_140A18348:                          ; CODE XREF: sub_140A18180+1D5↓p
                add     rsp, 8
                call    loc_140A1833F

loc_140A18351:                          ; CODE XREF: sub_140A18180+1DE↓p
                add     rsp, 8
                call    loc_140A18348

loc_140A1835A:                          ; CODE XREF: sub_140A18180+1E7↓p
                add     rsp, 8
                call    loc_140A18351

loc_140A18363:                          ; CODE XREF: sub_140A18180+1F0↓p
                add     rsp, 8
                call    loc_140A1835A

loc_140A1836C:                          ; CODE XREF: sub_140A18180+1F9↓p
                add     rsp, 8
                call    loc_140A18363

loc_140A18375:                          ; CODE XREF: sub_140A18180+202↓p
                add     rsp, 8
                call    loc_140A1836C

loc_140A1837E:                          ; CODE XREF: sub_140A18180+20B↓p
                add     rsp, 8
                call    loc_140A18375

loc_140A18387:                          ; CODE XREF: sub_140A18180+214↓p
                add     rsp, 8
                call    loc_140A1837E

loc_140A18390:                          ; CODE XREF: sub_140A18180+21D↓p
                add     rsp, 8
                call    loc_140A18387

loc_140A18399:                          ; CODE XREF: sub_140A18180+226↓p
                add     rsp, 8
                call    loc_140A18390

loc_140A183A2:                          ; CODE XREF: sub_140A18180+22F↓p
                add     rsp, 8
                call    loc_140A18399

loc_140A183AB:                          ; CODE XREF: sub_140A18180+238↓p
                add     rsp, 8
                call    loc_140A183A2

loc_140A183B4:                          ; CODE XREF: sub_140A18180+121↑p
                add     rsp, 8
                call    loc_140A183AB

loc_140A183BD:                          ; CODE XREF: sub_140A18180+12A↑p
                add     rsp, 8
                mov     eax, 0DADAh

loc_140A183C6:                          ; CODE XREF: sub_140A18180+11B↑j
                lfence
                mov     byte ptr gs:853h, 0
                jmp     loc_140410C3A
; ---------------------------------------------------------------------------
                retn
sub_140A18180   endp ; sp-analysis failed

; ---------------------------------------------------------------------------
algn_140A183D8:                         ; DATA XREF: .pdata:000000014012C57C↑o
                align 40h
                dq 180h dup(?)
KVASCODE        ends

; Section 19. (virtual address 00A19000)
; Virtual size                  : 00000880 (   2176.)
; Section size in file          : 00000A00 (   2560.)
; Offset to raw data for section: 00967600
; Flags 68000020: Text Not pageable Executable Readable
; Alignment     : default
; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
RETPOL          segment para public 'CODE' use64
                assume cs:RETPOL
                ;org 140A19000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                dq 0A000000880h, 0E0000000C0h, 12000000100h, 16000000140h
                dq 1A000000180h, 1E0000001C0h, 22000000200h, 26000000240h
                dq 2A000000280h, 420000002E0h, 6666CCCCCCCCCCCCh, 841F0Fh
; ---------------------------------------------------------------------------

loc_140A19060:                          ; DATA XREF: .rdata:00000001400B0A14↑o
                                        ; .rdata:00000001400B0A34↑o ...
                mov     r10, offset sub_140407950
                call    sub_140A19080
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19080   proc near               ; CODE XREF: RETPOL:0000000140A1906A↑p
                mov     [rsp+0], r10
                retn
sub_140A19080   endp

; ---------------------------------------------------------------------------
algn_140A19085:                         ; DATA XREF: .pdata:000000014012C588↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A190A0   proc near               ; DATA XREF: .pdata:000000014012C594↑o
                mov     [rsp+0], rax
                retn
sub_140A190A0   endp

; ---------------------------------------------------------------------------
algn_140A190A5:                         ; DATA XREF: .pdata:000000014012C594↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A190C0   proc near               ; DATA XREF: .pdata:000000014012C5A0↑o
                mov     [rsp+0], rcx
                retn
sub_140A190C0   endp

; ---------------------------------------------------------------------------
algn_140A190C5:                         ; DATA XREF: .pdata:000000014012C5A0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A190E0   proc near               ; DATA XREF: .pdata:000000014012C5AC↑o
                mov     [rsp+0], rdx
                retn
sub_140A190E0   endp

; ---------------------------------------------------------------------------
algn_140A190E5:                         ; DATA XREF: .pdata:000000014012C5AC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19100   proc near               ; DATA XREF: .pdata:000000014012C5B8↑o
                mov     [rsp+0], rbx
                retn
sub_140A19100   endp

; ---------------------------------------------------------------------------
algn_140A19105:                         ; DATA XREF: .pdata:000000014012C5B8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19120   proc near               ; DATA XREF: .pdata:000000014012C5C4↑o
                mov     [rsp+0], rsp
                retn
sub_140A19120   endp

; ---------------------------------------------------------------------------
algn_140A19125:                         ; DATA XREF: .pdata:000000014012C5C4↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19140   proc near               ; DATA XREF: .pdata:000000014012C5D0↑o
                mov     [rsp+0], rbp
                retn
sub_140A19140   endp

; ---------------------------------------------------------------------------
algn_140A19145:                         ; DATA XREF: .pdata:000000014012C5D0↑o
                align 20h
byte_140A19160  db 48h, 89h, 34h, 24h, 0C3h
                                        ; DATA XREF: .pdata:000000014012C5DC↑o
algn_140A19165:                         ; DATA XREF: .pdata:000000014012C5DC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19180   proc near               ; DATA XREF: .pdata:000000014012C5E8↑o
                mov     [rsp+0], rdi
                retn
sub_140A19180   endp

; ---------------------------------------------------------------------------
algn_140A19185:                         ; DATA XREF: .pdata:000000014012C5E8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A191A0   proc near               ; DATA XREF: .pdata:000000014012C5F4↑o
                mov     [rsp+0], r8
                retn
sub_140A191A0   endp

; ---------------------------------------------------------------------------
algn_140A191A5:                         ; DATA XREF: .pdata:000000014012C5F4↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A191C0   proc near               ; DATA XREF: .pdata:000000014012C600↑o
                mov     [rsp+0], r9
                retn
sub_140A191C0   endp

; ---------------------------------------------------------------------------
algn_140A191C5:                         ; DATA XREF: .pdata:000000014012C600↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A191E0   proc near               ; DATA XREF: .pdata:000000014012C60C↑o
                mov     [rsp+0], r10
                retn
sub_140A191E0   endp

; ---------------------------------------------------------------------------
algn_140A191E5:                         ; DATA XREF: .pdata:000000014012C60C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19200   proc near               ; DATA XREF: .pdata:000000014012C618↑o
                mov     [rsp+0], r11
                retn
sub_140A19200   endp

; ---------------------------------------------------------------------------
algn_140A19205:                         ; DATA XREF: .pdata:000000014012C618↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19220   proc near               ; DATA XREF: .pdata:000000014012C624↑o
                mov     [rsp+0], r12
                retn
sub_140A19220   endp

; ---------------------------------------------------------------------------
algn_140A19225:                         ; DATA XREF: .pdata:000000014012C624↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19240   proc near               ; DATA XREF: .pdata:000000014012C630↑o
                mov     [rsp+0], r13
                retn
sub_140A19240   endp

; ---------------------------------------------------------------------------
algn_140A19245:                         ; DATA XREF: .pdata:000000014012C630↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19260   proc near               ; DATA XREF: .pdata:000000014012C63C↑o
                mov     [rsp+0], r14
                retn
sub_140A19260   endp

; ---------------------------------------------------------------------------
algn_140A19265:                         ; DATA XREF: .pdata:000000014012C63C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19280   proc near               ; DATA XREF: .pdata:000000014012C648↑o
                mov     [rsp+0], r15
                retn
sub_140A19280   endp

; ---------------------------------------------------------------------------
algn_140A19285:                         ; DATA XREF: .pdata:000000014012C648↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A192A0   proc near               ; DATA XREF: .pdata:000000014012C654↑o
; __unwind { // loc_140A19060
                mov     r11, offset qword_140E01868
                mov     r11, [r11]
                test    rax, rax
                jge     loc_140A19358
                test    r11, r11
                jz      short loc_140A192E0
                mov     r10, rax
                shr     r10, 9
                mov     r11, [r11+r10*8]
                mov     r10, rax
                shr     r10, 3
                test    al, 0Fh
                jnz     loc_140A19341
                bt      r11, r10
                jnb     loc_140A19358
                nop

loc_140A192E0:                          ; CODE XREF: sub_140A192A0+19↑j
                                        ; sub_140A192A0+B6↓j
                mov     r11, offset qword_140CFCC48
                mov     r11, [r11]
                test    r11, r11
                jz      short loc_140A1933B
                mov     r10, rax
                shr     r10, 10h
                bt      [r11], r10
                jnb     short loc_140A19325
                call    loc_140A19320
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------
                align 20h

loc_140A19320:                          ; CODE XREF: sub_140A192A0+5F↑p
                mov     [rsp+0], rax
                retn
; ---------------------------------------------------------------------------

loc_140A19325:                          ; CODE XREF: sub_140A192A0+5D↑j
                or      byte ptr gs:853h, 1
                test    byte ptr gs:853h, 2
                jnz     short loc_140A1933B
                jmp     short sub_140A193A0
; ---------------------------------------------------------------------------

loc_140A1933B:                          ; CODE XREF: sub_140A192A0+50↑j
                                        ; sub_140A192A0+97↑j
                lfence
                jmp     rax
; ---------------------------------------------------------------------------

loc_140A19341:                          ; CODE XREF: sub_140A192A0+2F↑j
                btr     r10, 0
                bt      r11, r10
                jnb     short loc_140A19358
                or      r10, 1
                bt      r11, r10
                jnb     short loc_140A19358
                jmp     short loc_140A192E0
; ---------------------------------------------------------------------------

loc_140A19358:                          ; CODE XREF: sub_140A192A0+10↑j
                                        ; sub_140A192A0+39↑j ...
                mov     rcx, rax
                mov     rax, offset sub_140407920
                call    loc_140A19380
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------
                align 20h

loc_140A19380:                          ; CODE XREF: sub_140A192A0+C5↑p
                mov     [rsp+0], rax
                retn
; } // starts at 140A192A0
sub_140A192A0   endp

; ---------------------------------------------------------------------------
algn_140A19385:                         ; DATA XREF: .pdata:000000014012C654↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A193A0   proc near               ; CODE XREF: sub_1404079D0+69↑j
                                        ; sub_140A192A0+99↑j
                                        ; DATA XREF: ...

var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8

                sub     rsp, 48h
                call    sub_140A19560
                lfence
                mov     r10, (offset xmmword_140CFC490+4)
                mov     r10d, [r10]
                test    r10d, 2
                jz      short loc_140A19403
                mov     [rsp+48h+var_28], rax
                mov     [rsp+48h+var_20], rcx
                mov     [rsp+48h+var_18], rdx
                mov     [rsp+48h+var_10], r8
                mov     [rsp+48h+var_8], r9
                mov     rcx, rax
                mov     rax, offset sub_1405A8350
                call    rax ; sub_1405A8350
                mov     rax, [rsp+48h+var_28]
                mov     rcx, [rsp+48h+var_20]
                mov     rdx, [rsp+48h+var_18]
                mov     r8, [rsp+48h+var_10]
                mov     r9, [rsp+48h+var_8]

loc_140A19403:                          ; CODE XREF: sub_140A193A0+20↑j
                add     rsp, 48h
                jmp     rax
sub_140A193A0   endp

; ---------------------------------------------------------------------------
algn_140A1940A:                         ; DATA XREF: .pdata:000000014012C660↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19420   proc near               ; DATA XREF: .pdata:000000014012C66C↑o

var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind { // loc_140A19060
                sub     rsp, 18h
                mov     [rsp+18h+var_18], rax
                mov     [rsp+18h+var_10], r11
                mov     r11, offset qword_140CFCC48
                mov     r11, [r11]
                test    r11, r11
                jz      short loc_140A1948F
                mov     rax, r10
                shr     rax, 10h
                bt      [r11], rax
                jnb     short loc_140A1945B
                mov     rax, [rsp+18h+var_18]
                mov     r11, [rsp+18h+var_10]
                add     rsp, 18h
                jmp     short loc_140A194C0
; ---------------------------------------------------------------------------

loc_140A1945B:                          ; CODE XREF: sub_140A19420+2A↑j
                or      byte ptr gs:853h, 1
                test    byte ptr gs:853h, 2
                jnz     short loc_140A1948F
                call    sub_140A19560
                mov     r11, (offset xmmword_140CFC490+4)
                mov     r11d, [r11]
                test    r11d, 2
                jz      short loc_140A1948F
                call    sub_140A19500

loc_140A1948F:                          ; CODE XREF: sub_140A19420+1D↑j
                                        ; sub_140A19420+4D↑j ...
                lfence
                mov     rax, [rsp+18h+var_18]
                mov     r11, [rsp+18h+var_10]
                add     rsp, 18h
                jmp     r10
; } // starts at 140A19420
sub_140A19420   endp

; ---------------------------------------------------------------------------
algn_140A194A2:                         ; DATA XREF: .pdata:000000014012C66C↑o
                align 20h

loc_140A194C0:                          ; CODE XREF: sub_140A19420+39↑j
                                        ; DATA XREF: .pdata:000000014012C678↑o
                call    sub_140A194E0
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A194E0   proc near               ; CODE XREF: RETPOL:loc_140A194C0↑p
                mov     [rsp+0], r10
                retn
sub_140A194E0   endp

; ---------------------------------------------------------------------------
algn_140A194E5:                         ; DATA XREF: .pdata:000000014012C678↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19500   proc near               ; CODE XREF: sub_140A19420+6A↑p
                                        ; DATA XREF: .pdata:000000014012C684↑o

var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h

                sub     rsp, 58h
                mov     [rsp+58h+var_38], rax
                mov     [rsp+58h+var_30], rcx
                mov     [rsp+58h+var_28], rdx
                mov     [rsp+58h+var_20], r8
                mov     [rsp+58h+var_18], r9
                mov     [rsp+58h+var_10], r10
                lfence
                mov     rcx, r10
                mov     rax, offset sub_1405A8350
                call    rax ; sub_1405A8350
                mov     rax, [rsp+58h+var_38]
                mov     rcx, [rsp+58h+var_30]
                mov     rdx, [rsp+58h+var_28]
                mov     r8, [rsp+58h+var_20]
                mov     r9, [rsp+58h+var_18]
                mov     r10, [rsp+58h+var_10]
                add     rsp, 58h
                retn
sub_140A19500   endp

; ---------------------------------------------------------------------------
algn_140A19557:                         ; DATA XREF: .pdata:000000014012C684↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A19560   proc near               ; CODE XREF: sub_14032ACA4+14A1FD↑p
                                        ; sub_140A193A0+4↑p ...

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_D8          = qword ptr  0E0h
arg_E0          = qword ptr  0E8h
arg_E8          = qword ptr  0F0h
arg_F0          = qword ptr  0F8h

                pushfq
                sub     rsp, 18h
                mov     [rsp+20h+var_20], rax
                mov     [rsp+20h+var_18], rcx
                mov     [rsp+20h+var_10], rdx
                cli
                movzx   eax, byte ptr gs:851h
                cmp     gs:27Ah, al
                jz      short loc_140A19599
                mov     gs:27Ah, al
                mov     ecx, 48h ; 'H'
                xor     edx, edx
                wrmsr

loc_140A19599:                          ; CODE XREF: sub_140A19560+26↑j
                movzx   edx, byte ptr gs:852h
                test    edx, 10h
                jz      short loc_140A195C1
                mov     eax, 1
                xor     edx, edx
                mov     ecx, 49h ; 'I'
                wrmsr
                movzx   edx, byte ptr gs:852h

loc_140A195C1:                          ; CODE XREF: sub_140A19560+48↑j
                test    edx, 40h
                jz      loc_140A196F2
                call    loc_140A196E0

loc_140A195D2:                          ; CODE XREF: sub_140A19560+7F↓p
                add     rsp, 8
                call    loc_140A196E9

loc_140A195DB:                          ; CODE XREF: sub_140A19560+88↓p
                add     rsp, 8
                call    loc_140A195D2

loc_140A195E4:                          ; CODE XREF: sub_140A19560+91↓p
                add     rsp, 8
                call    loc_140A195DB

loc_140A195ED:                          ; CODE XREF: sub_140A19560+9A↓p
                add     rsp, 8
                call    loc_140A195E4

loc_140A195F6:                          ; CODE XREF: sub_140A19560+A3↓p
                add     rsp, 8
                call    loc_140A195ED

loc_140A195FF:                          ; CODE XREF: sub_140A19560+AC↓p
                add     rsp, 8
                call    loc_140A195F6

loc_140A19608:                          ; CODE XREF: sub_140A19560+B5↓p
                add     rsp, 8
                call    loc_140A195FF

loc_140A19611:                          ; CODE XREF: sub_140A19560+BE↓p
                add     rsp, 8
                call    loc_140A19608

loc_140A1961A:                          ; CODE XREF: sub_140A19560+C7↓p
                add     rsp, 8
                call    loc_140A19611

loc_140A19623:                          ; CODE XREF: sub_140A19560+D0↓p
                add     rsp, 8
                call    loc_140A1961A

loc_140A1962C:                          ; CODE XREF: sub_140A19560+D9↓p
                add     rsp, 8
                call    loc_140A19623

loc_140A19635:                          ; CODE XREF: sub_140A19560+E2↓p
                add     rsp, 8
                call    loc_140A1962C

loc_140A1963E:                          ; CODE XREF: sub_140A19560+EB↓p
                add     rsp, 8
                call    loc_140A19635

loc_140A19647:                          ; CODE XREF: sub_140A19560+F4↓p
                add     rsp, 8
                call    loc_140A1963E

loc_140A19650:                          ; CODE XREF: sub_140A19560+FD↓p
                add     rsp, 8
                call    loc_140A19647

loc_140A19659:                          ; CODE XREF: sub_140A19560+106↓p
                add     rsp, 8
                call    loc_140A19650

loc_140A19662:                          ; CODE XREF: sub_140A19560+10F↓p
                add     rsp, 8
                call    loc_140A19659

loc_140A1966B:                          ; CODE XREF: sub_140A19560+118↓p
                add     rsp, 8
                call    loc_140A19662

loc_140A19674:                          ; CODE XREF: sub_140A19560+121↓p
                add     rsp, 8
                call    loc_140A1966B

loc_140A1967D:                          ; CODE XREF: sub_140A19560+12A↓p
                add     rsp, 8
                call    loc_140A19674

loc_140A19686:                          ; CODE XREF: sub_140A19560+133↓p
                add     rsp, 8
                call    loc_140A1967D

loc_140A1968F:                          ; CODE XREF: sub_140A19560+13C↓p
                add     rsp, 8
                call    loc_140A19686

loc_140A19698:                          ; CODE XREF: sub_140A19560+145↓p
                add     rsp, 8
                call    loc_140A1968F

loc_140A196A1:                          ; CODE XREF: sub_140A19560+14E↓p
                add     rsp, 8
                call    loc_140A19698

loc_140A196AA:                          ; CODE XREF: sub_140A19560+157↓p
                add     rsp, 8
                call    loc_140A196A1

loc_140A196B3:                          ; CODE XREF: sub_140A19560+160↓p
                add     rsp, 8
                call    loc_140A196AA

loc_140A196BC:                          ; CODE XREF: sub_140A19560+169↓p
                add     rsp, 8
                call    loc_140A196B3

loc_140A196C5:                          ; CODE XREF: sub_140A19560+172↓p
                add     rsp, 8
                call    loc_140A196BC

loc_140A196CE:                          ; CODE XREF: sub_140A19560+17B↓p
                add     rsp, 8
                call    loc_140A196C5

loc_140A196D7:                          ; CODE XREF: sub_140A19560+184↓p
                add     rsp, 8
                call    loc_140A196CE

loc_140A196E0:                          ; CODE XREF: sub_140A19560+6D↑p
                add     rsp, 8
                call    loc_140A196D7

loc_140A196E9:                          ; CODE XREF: sub_140A19560+76↑p
                add     rsp, 8
                mov     eax, 0DADAh

loc_140A196F2:                          ; CODE XREF: sub_140A19560+67↑j
                lfence
                or      byte ptr gs:853h, 2
                bt      [rsp-0E0h+arg_F0], 9
                jnb     short loc_140A19708
                sti

loc_140A19708:                          ; CODE XREF: sub_140A19560+1A5↑j
                mov     rax, [rsp-0E0h+arg_D8]
                mov     rcx, [rsp-0E0h+arg_E0]
                mov     rdx, [rsp-0E0h+arg_E8]
                add     rsp, 20h
                retn
sub_140A19560   endp ; sp-analysis failed

; ---------------------------------------------------------------------------
algn_140A1971B:                         ; DATA XREF: .pdata:000000014012C690↑o
                align 40h

; =============== S U B R O U T I N E =======================================


sub_140A19740   proc near               ; CODE XREF: sub_1402AD790+529↑p
                                        ; sub_1402ADF00+E6↑p ...

arg_E8          = qword ptr  0F0h

                sub     rsp, 8
                pushfq
                cli
                call    loc_140A19859

loc_140A1974B:                          ; CODE XREF: sub_140A19740+18↓p
                add     rsp, 8
                call    loc_140A19862

loc_140A19754:                          ; CODE XREF: sub_140A19740+21↓p
                add     rsp, 8
                call    loc_140A1974B

loc_140A1975D:                          ; CODE XREF: sub_140A19740+2A↓p
                add     rsp, 8
                call    loc_140A19754

loc_140A19766:                          ; CODE XREF: sub_140A19740+33↓p
                add     rsp, 8
                call    loc_140A1975D

loc_140A1976F:                          ; CODE XREF: sub_140A19740+3C↓p
                add     rsp, 8
                call    loc_140A19766

loc_140A19778:                          ; CODE XREF: sub_140A19740+45↓p
                add     rsp, 8
                call    loc_140A1976F

loc_140A19781:                          ; CODE XREF: sub_140A19740+4E↓p
                add     rsp, 8
                call    loc_140A19778

loc_140A1978A:                          ; CODE XREF: sub_140A19740+57↓p
                add     rsp, 8
                call    loc_140A19781

loc_140A19793:                          ; CODE XREF: sub_140A19740+60↓p
                add     rsp, 8
                call    loc_140A1978A

loc_140A1979C:                          ; CODE XREF: sub_140A19740+69↓p
                add     rsp, 8
                call    loc_140A19793

loc_140A197A5:                          ; CODE XREF: sub_140A19740+72↓p
                add     rsp, 8
                call    loc_140A1979C

loc_140A197AE:                          ; CODE XREF: sub_140A19740+7B↓p
                add     rsp, 8
                call    loc_140A197A5

loc_140A197B7:                          ; CODE XREF: sub_140A19740+84↓p
                add     rsp, 8
                call    loc_140A197AE

loc_140A197C0:                          ; CODE XREF: sub_140A19740+8D↓p
                add     rsp, 8
                call    loc_140A197B7

loc_140A197C9:                          ; CODE XREF: sub_140A19740+96↓p
                add     rsp, 8
                call    loc_140A197C0

loc_140A197D2:                          ; CODE XREF: sub_140A19740+9F↓p
                add     rsp, 8
                call    loc_140A197C9

loc_140A197DB:                          ; CODE XREF: sub_140A19740+A8↓p
                add     rsp, 8
                call    loc_140A197D2

loc_140A197E4:                          ; CODE XREF: sub_140A19740+B1↓p
                add     rsp, 8
                call    loc_140A197DB

loc_140A197ED:                          ; CODE XREF: sub_140A19740+BA↓p
                add     rsp, 8
                call    loc_140A197E4

loc_140A197F6:                          ; CODE XREF: sub_140A19740+C3↓p
                add     rsp, 8
                call    loc_140A197ED

loc_140A197FF:                          ; CODE XREF: sub_140A19740+CC↓p
                add     rsp, 8
                call    loc_140A197F6

loc_140A19808:                          ; CODE XREF: sub_140A19740+D5↓p
                add     rsp, 8
                call    loc_140A197FF

loc_140A19811:                          ; CODE XREF: sub_140A19740+DE↓p
                add     rsp, 8
                call    loc_140A19808

loc_140A1981A:                          ; CODE XREF: sub_140A19740+E7↓p
                add     rsp, 8
                call    loc_140A19811

loc_140A19823:                          ; CODE XREF: sub_140A19740+F0↓p
                add     rsp, 8
                call    loc_140A1981A

loc_140A1982C:                          ; CODE XREF: sub_140A19740+F9↓p
                add     rsp, 8
                call    loc_140A19823

loc_140A19835:                          ; CODE XREF: sub_140A19740+102↓p
                add     rsp, 8
                call    loc_140A1982C

loc_140A1983E:                          ; CODE XREF: sub_140A19740+10B↓p
                add     rsp, 8
                call    loc_140A19835

loc_140A19847:                          ; CODE XREF: sub_140A19740+114↓p
                add     rsp, 8
                call    loc_140A1983E

loc_140A19850:                          ; CODE XREF: sub_140A19740+11D↓p
                add     rsp, 8
                call    loc_140A19847

loc_140A19859:                          ; CODE XREF: sub_140A19740+6↑p
                add     rsp, 8
                call    loc_140A19850

loc_140A19862:                          ; CODE XREF: sub_140A19740+F↑p
                add     rsp, 8
                mov     eax, 0DADAh
                lfence
                bt      [rsp-0F0h+arg_E8], 9
                jnb     short loc_140A19877
                sti

loc_140A19877:                          ; CODE XREF: sub_140A19740+134↑j
                add     rsp, 10h
                retn
sub_140A19740   endp ; sp-analysis failed

; ---------------------------------------------------------------------------
algn_140A1987C:                         ; DATA XREF: .pdata:000000014012C69C↑o
                align 200h
                dq 0C0h dup(?)
RETPOL          ends

; Section 20. (virtual address 00A1A000)
; Virtual size                  : 000025AE (   9646.)
; Section size in file          : 00002600 (   9728.)
; Offset to raw data for section: 00968000
; Flags 62000020: Text Discardable Executable Readable
; Alignment     : default
; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
MINIEX          segment para public 'CODE' use64
                assume cs:MINIEX
                ;org 140A1A000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                db 6 dup(0CCh)
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_140A1A010   proc near               ; DATA XREF: .pdata:000000014012C6A8↑o
                                        ; sub_1409AB4D4+146↑o

var_8           = qword ptr -8

                sub     rsp, 38h
                mov     [rsp+38h+var_8], r15
                mov     r15, rsp
                cli
                mov     rdx, rcx
                mov     eax, edx
                shr     rdx, 20h
                mov     ecx, 0C0000101h
                wrmsr
                mov     ecx, 0C0000102h
                wrmsr
                call    sub_140A1BFB0
                call    sub_140A1C4F0
                lock inc qword ptr gs:10h
                call    sub_140A1C530
sub_140A1A010   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_54. PRESS CTRL-NUMPAD+ TO EXPAND]
byte_140A1A04E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C6A8↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_140A1A060   proc near               ; CODE XREF: sub_140A1C530:loc_140A1C59E↓p
                                        ; DATA XREF: .pdata:000000014012C6B4↑o
                nop
                sti
                hlt
sub_140A1A060   endp

; ---------------------------------------------------------------------------
                cli
                retn
; ---------------------------------------------------------------------------
byte_140A1A065  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C6B4↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_140A1A070   proc near               ; CODE XREF: sub_140A1C530+67↓p
                                        ; DATA XREF: .pdata:000000014012C6C0↑o
                nop
                mov     dx, cx
                in      al, dx
                sti
                hlt
sub_140A1A070   endp

; ---------------------------------------------------------------------------
                cli
                retn
; ---------------------------------------------------------------------------
byte_140A1A079  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012C6C0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A1A080   proc near               ; CODE XREF: sub_140A1C530+59↓p
                                        ; DATA XREF: .pdata:000000014012C6CC↑o
                nop
                mov     dx, cx
                sti
                in      al, dx
                cli
                retn
sub_140A1A080   endp

; ---------------------------------------------------------------------------
algn_140A1A088:                         ; DATA XREF: .pdata:000000014012C6CC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A1A090   proc near               ; CODE XREF: sub_140A1C530+4B↓p
                                        ; DATA XREF: .pdata:000000014012C6D8↑o
                mov     rax, rcx
                mov     ecx, edx
                mov     rdx, r8
                monitor rax, rcx, rdx
                mov     eax, edx
                sti
                mwait   rax, rcx
                cli
                retn
sub_140A1A090   endp

; ---------------------------------------------------------------------------
algn_140A1A0A3:                         ; DATA XREF: .pdata:000000014012C6D8↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_140A1A0B0   proc near               ; CODE XREF: sub_140A1A100+73↓p
                                        ; sub_140A1A180+73↓p ...
                mov     gs:70h, cl
                sfence
                mov     gs:78h, rdx

loc_140A1A0C4:                          ; CODE XREF: MINIEX:0000000140A1A0C6↓j
                cli
                hlt
sub_140A1A0B0   endp

; ---------------------------------------------------------------------------
                jmp     short loc_140A1A0C4
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_55. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A0C9:                         ; DATA XREF: .pdata:000000014012C6E4↑o
                align 40h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A100   proc near               ; DATA XREF: .pdata:000000014012C6F0↑o
                                        ; .data:off_140C055A8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:0A8h
                mov     rcx, 0
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A100   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_56. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A179:                         ; DATA XREF: .pdata:000000014012C6F0↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A180   proc near               ; DATA XREF: .pdata:000000014012C6FC↑o
                                        ; .data:0000000140C055B8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:0B0h
                mov     rcx, 1
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A180   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_57. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A1F9:                         ; DATA XREF: .pdata:000000014012C6FC↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A200   proc near               ; DATA XREF: .pdata:000000014012C708↑o
                                        ; .data:0000000140C055D8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:0C0h
                mov     rcx, 3
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A200   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_58. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A279:                         ; DATA XREF: .pdata:000000014012C708↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A280   proc near               ; DATA XREF: .pdata:000000014012C714↑o
                                        ; .data:0000000140C055E8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:0C8h
                mov     rcx, 4
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A280   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_59. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A2F9:                         ; DATA XREF: .pdata:000000014012C714↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A300   proc near               ; DATA XREF: .pdata:000000014012C720↑o
                                        ; .data:0000000140C055F8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:0D0h
                mov     rcx, 5
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A300   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_60. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A379:                         ; DATA XREF: .pdata:000000014012C720↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A380   proc near               ; DATA XREF: .pdata:000000014012C72C↑o
                                        ; .data:0000000140C05608↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:0D8h
                mov     rcx, 6
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A380   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_61. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A3F9:                         ; DATA XREF: .pdata:000000014012C72C↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A400   proc near               ; DATA XREF: .pdata:000000014012C738↑o
                                        ; .data:0000000140C05618↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:0E0h
                mov     rcx, 7
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A400   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_62. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A479:                         ; DATA XREF: .pdata:000000014012C738↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0D8h

sub_140A1A480   proc near               ; DATA XREF: .pdata:000000014012C744↑o
                                        ; .data:0000000140C05628↓o

var_160         = dword ptr -160h
var_158         = byte ptr -158h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                lock inc qword ptr gs:0E8h
                mov     rcx, 8
                lea     rdx, [rbp+0D8h+var_158]
                call    sub_140A1A0B0
sub_140A1A480   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_63. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A4F5:                         ; DATA XREF: .pdata:000000014012C744↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A500   proc near               ; DATA XREF: .pdata:000000014012C750↑o
                                        ; .data:0000000140C05638↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:0F0h
                mov     rcx, 9
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A500   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_64. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A579:                         ; DATA XREF: .pdata:000000014012C750↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0D8h

sub_140A1A580   proc near               ; DATA XREF: .pdata:000000014012C75C↑o
                                        ; .data:0000000140C05648↓o

var_160         = dword ptr -160h
var_158         = byte ptr -158h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                lock inc qword ptr gs:0F8h
                mov     rcx, 0Ah
                lea     rdx, [rbp+0D8h+var_158]
                call    sub_140A1A0B0
sub_140A1A580   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_65. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A5F5:                         ; DATA XREF: .pdata:000000014012C75C↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0D8h

sub_140A1A600   proc near               ; DATA XREF: .pdata:000000014012C768↑o
                                        ; .data:0000000140C05658↓o

var_160         = dword ptr -160h
var_158         = byte ptr -158h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                lock inc qword ptr gs:100h
                mov     rcx, 0Bh
                lea     rdx, [rbp+0D8h+var_158]
                call    sub_140A1A0B0
sub_140A1A600   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_66. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A675:                         ; DATA XREF: .pdata:000000014012C768↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0D8h

sub_140A1A680   proc near               ; DATA XREF: .pdata:000000014012C774↑o
                                        ; .data:0000000140C05668↓o

var_160         = dword ptr -160h
var_158         = byte ptr -158h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                lock inc qword ptr gs:108h
                mov     rcx, 0Ch
                lea     rdx, [rbp+0D8h+var_158]
                call    sub_140A1A0B0
sub_140A1A680   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_67. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A6F5:                         ; DATA XREF: .pdata:000000014012C774↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0D8h

sub_140A1A700   proc near               ; DATA XREF: .pdata:000000014012C780↑o
                                        ; .data:0000000140C05678↓o

var_160         = dword ptr -160h
var_158         = byte ptr -158h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                lock inc qword ptr gs:110h
                mov     rcx, 0Dh
                lea     rdx, [rbp+0D8h+var_158]
                call    sub_140A1A0B0
sub_140A1A700   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_68. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A775:                         ; DATA XREF: .pdata:000000014012C780↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0D8h

sub_140A1A780   proc near               ; DATA XREF: .pdata:000000014012C78C↑o
                                        ; .data:0000000140C05688↓o

var_160         = dword ptr -160h
var_158         = byte ptr -158h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                lock inc qword ptr gs:118h
                mov     rcx, 0Eh
                lea     rdx, [rbp+0D8h+var_158]
                call    sub_140A1A0B0
sub_140A1A780   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_69. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A7F5:                         ; DATA XREF: .pdata:000000014012C78C↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A800   proc near               ; DATA XREF: .pdata:000000014012C798↑o
                                        ; .data:0000000140C05698↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:128h
                mov     rcx, 10h
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A800   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_70. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A879:                         ; DATA XREF: .pdata:000000014012C798↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0D8h

sub_140A1A880   proc near               ; DATA XREF: .pdata:000000014012C7A4↑o
                                        ; .data:0000000140C056A8↓o

var_160         = dword ptr -160h
var_158         = byte ptr -158h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                lock inc qword ptr gs:130h
                mov     rcx, 11h
                lea     rdx, [rbp+0D8h+var_158]
                call    sub_140A1A0B0
sub_140A1A880   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_71. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A8F5:                         ; DATA XREF: .pdata:000000014012C7A4↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A900   proc near               ; DATA XREF: .pdata:000000014012C7B0↑o
                                        ; .data:0000000140C056C8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:140h
                mov     rcx, 13h
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A900   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_72. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A979:                         ; DATA XREF: .pdata:000000014012C7B0↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1A980   proc near               ; DATA XREF: .pdata:000000014012C7BC↑o
                                        ; .data:0000000140C056D8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:148h
                mov     rcx, 14h
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1A980   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_73. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1A9F9:                         ; DATA XREF: .pdata:000000014012C7BC↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0D8h

sub_140A1AA00   proc near               ; DATA XREF: .pdata:000000014012C7C8↑o
                                        ; .data:0000000140C056E8↓o

var_160         = dword ptr -160h
var_158         = byte ptr -158h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                lock inc qword ptr gs:150h
                mov     rcx, 15h
                lea     rdx, [rbp+0D8h+var_158]
                call    sub_140A1A0B0
sub_140A1AA00   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_74. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1AA75:                         ; DATA XREF: .pdata:000000014012C7C8↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AA80   proc near               ; DATA XREF: .pdata:000000014012C7D4↑o
                                        ; .data:0000000140C056F8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:158h
                mov     rcx, 16h
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AA80   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_75. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1AAF9:                         ; DATA XREF: .pdata:000000014012C7D4↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AB00   proc near               ; DATA XREF: .pdata:000000014012C7E0↑o
                                        ; .data:0000000140C05708↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:160h
                mov     rcx, 17h
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AB00   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_76. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1AB79:                         ; DATA XREF: .pdata:000000014012C7E0↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AB80   proc near               ; DATA XREF: .pdata:000000014012C7EC↑o
                                        ; .data:0000000140C05718↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:168h
                mov     rcx, 18h
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AB80   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_77. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1ABF9:                         ; DATA XREF: .pdata:000000014012C7EC↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AC00   proc near               ; DATA XREF: .pdata:000000014012C7F8↑o
                                        ; .data:0000000140C05728↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:170h
                mov     rcx, 19h
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AC00   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_78. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1AC79:                         ; DATA XREF: .pdata:000000014012C7F8↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AC80   proc near               ; DATA XREF: .pdata:000000014012C804↑o
                                        ; .data:0000000140C05738↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:178h
                mov     rcx, 1Ah
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AC80   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_79. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1ACF9:                         ; DATA XREF: .pdata:000000014012C804↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AD00   proc near               ; DATA XREF: .pdata:000000014012C810↑o
                                        ; .data:0000000140C05748↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:180h
                mov     rcx, 1Bh
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AD00   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_80. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1AD79:                         ; DATA XREF: .pdata:000000014012C810↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AD80   proc near               ; DATA XREF: .pdata:000000014012C81C↑o
                                        ; .data:0000000140C05758↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:188h
                mov     rcx, 1Ch
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AD80   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_81. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1ADF9:                         ; DATA XREF: .pdata:000000014012C81C↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AE00   proc near               ; DATA XREF: .pdata:000000014012C828↑o
                                        ; .data:0000000140C05768↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:190h
                mov     rcx, 1Dh
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AE00   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_82. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1AE79:                         ; DATA XREF: .pdata:000000014012C828↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AE80   proc near               ; DATA XREF: .pdata:000000014012C834↑o
                                        ; .data:0000000140C05778↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:198h
                mov     rcx, 1Eh
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AE80   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_83. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1AEF9:                         ; DATA XREF: .pdata:000000014012C834↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame fpd=0E8h

sub_140A1AF00   proc near               ; DATA XREF: .pdata:000000014012C840↑o
                                        ; .data:0000000140C05788↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:1A0h
                mov     rcx, 1Fh
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
sub_140A1AF00   endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_84. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_140A1AF79:                         ; DATA XREF: .pdata:000000014012C840↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0E8h

sub_140A1AF80   proc near               ; DATA XREF: .pdata:000000014012C84C↑o
                                        ; .data:0000000140C05798↓o

var_170         = dword ptr -170h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_10          = qword ptr -10h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:768h
                call    sub_140A1BF90
                mov     r11, [rbp+0E8h+var_108]
                mov     r10, [rbp+0E8h+var_110]
                mov     r9, [rbp+0E8h+var_118]
                mov     r8, [rbp+0E8h+var_120]
                mov     rdx, [rbp+0E8h+var_128]
                mov     rcx, [rbp+0E8h+var_130]
                mov     rax, [rbp+0E8h+var_138]
                ldmxcsr [rbp+0E8h+var_13C]
                movaps  xmm0, [rbp+0E8h+var_F8]
                movaps  xmm1, [rbp+0E8h+var_E8]
                movaps  xmm2, [rbp+0E8h+var_D8]
                movaps  xmm3, [rbp+0E8h+var_C8]
                movaps  xmm4, [rbp+0E8h+var_B8]
                movaps  xmm5, [rbp+0E8h+var_A8]
                mov     rsp, rbp
                mov     rbp, [rbp+0E8h+var_10]
                add     rsp, 0E8h
                iretq
sub_140A1AF80   endp

; ---------------------------------------------------------------------------
algn_140A1B038:                         ; DATA XREF: .pdata:000000014012C84C↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0E8h

sub_140A1B040   proc near               ; DATA XREF: .pdata:000000014012C858↑o
                                        ; .data:0000000140C057A8↓o

var_170         = dword ptr -170h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_10          = qword ptr -10h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:7A0h
                mov     r11, [rbp+0E8h+var_108]
                mov     r10, [rbp+0E8h+var_110]
                mov     r9, [rbp+0E8h+var_118]
                mov     r8, [rbp+0E8h+var_120]
                mov     rdx, [rbp+0E8h+var_128]
                mov     rcx, [rbp+0E8h+var_130]
                mov     rax, [rbp+0E8h+var_138]
                ldmxcsr [rbp+0E8h+var_13C]
                movaps  xmm0, [rbp+0E8h+var_F8]
                movaps  xmm1, [rbp+0E8h+var_E8]
                movaps  xmm2, [rbp+0E8h+var_D8]
                movaps  xmm3, [rbp+0E8h+var_C8]
                movaps  xmm4, [rbp+0E8h+var_B8]
                movaps  xmm5, [rbp+0E8h+var_A8]
                mov     rsp, rbp
                mov     rbp, [rbp+0E8h+var_10]
                add     rsp, 0E8h
                iretq
sub_140A1B040   endp

; ---------------------------------------------------------------------------
algn_140A1B0F3:                         ; DATA XREF: .pdata:000000014012C858↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0E8h

sub_140A1B100   proc near               ; DATA XREF: .pdata:000000014012C864↑o
                                        ; .data:0000000140C057B8↓o

var_170         = dword ptr -170h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_10          = qword ptr -10h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:7B0h
                call    sub_140A1C190
                call    sub_140A1BF90
                mov     r11, [rbp+0E8h+var_108]
                mov     r10, [rbp+0E8h+var_110]
                mov     r9, [rbp+0E8h+var_118]
                mov     r8, [rbp+0E8h+var_120]
                mov     rdx, [rbp+0E8h+var_128]
                mov     rcx, [rbp+0E8h+var_130]
                mov     rax, [rbp+0E8h+var_138]
                ldmxcsr [rbp+0E8h+var_13C]
                movaps  xmm0, [rbp+0E8h+var_F8]
                movaps  xmm1, [rbp+0E8h+var_E8]
                movaps  xmm2, [rbp+0E8h+var_D8]
                movaps  xmm3, [rbp+0E8h+var_C8]
                movaps  xmm4, [rbp+0E8h+var_B8]
                movaps  xmm5, [rbp+0E8h+var_A8]
                mov     rsp, rbp
                mov     rbp, [rbp+0E8h+var_10]
                add     rsp, 0E8h
                iretq
sub_140A1B100   endp

; ---------------------------------------------------------------------------
algn_140A1B1BD:                         ; DATA XREF: .pdata:000000014012C864↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0E8h

sub_140A1B1C0   proc near               ; DATA XREF: .pdata:000000014012C870↑o
                                        ; .data:0000000140C057C8↓o

var_170         = dword ptr -170h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_10          = qword ptr -10h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lock inc qword ptr gs:7B8h
                call    sub_140A1BF90
                mov     r11, [rbp+0E8h+var_108]
                mov     r10, [rbp+0E8h+var_110]
                mov     r9, [rbp+0E8h+var_118]
                mov     r8, [rbp+0E8h+var_120]
                mov     rdx, [rbp+0E8h+var_128]
                mov     rcx, [rbp+0E8h+var_130]
                mov     rax, [rbp+0E8h+var_138]
                ldmxcsr [rbp+0E8h+var_13C]
                movaps  xmm0, [rbp+0E8h+var_F8]
                movaps  xmm1, [rbp+0E8h+var_E8]
                movaps  xmm2, [rbp+0E8h+var_D8]
                movaps  xmm3, [rbp+0E8h+var_C8]
                movaps  xmm4, [rbp+0E8h+var_B8]
                movaps  xmm5, [rbp+0E8h+var_A8]
                mov     rsp, rbp
                mov     rbp, [rbp+0E8h+var_10]
                add     rsp, 0E8h
                iretq
sub_140A1B1C0   endp

; ---------------------------------------------------------------------------
algn_140A1B278:                         ; DATA XREF: .pdata:000000014012C870↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0E8h

sub_140A1B280   proc near               ; DATA XREF: .pdata:000000014012C87C↑o
                                        ; .data:0000000140C056B8↓o

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_10          = qword ptr -10h
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = word ptr  20h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lea     rcx, [rbp+0E8h+var_168]
                xor     edx, edx
                call    sub_140A1C2B0
                mov     rax, [rbp+0E8h+arg_10]
                mov     rcx, gs:40h
                mov     rcx, [rcx+34h]
                cmp     rax, rcx
                ja      short loc_140A1B31F
                sub     rcx, 2000h
                cmp     rax, rcx
                jbe     short loc_140A1B31F
                or      [rbp+0E8h+arg_18], 4
                lock inc dword ptr gs:994h

loc_140A1B31F:                          ; CODE XREF: sub_140A1B280+80↑j
                                        ; sub_140A1B280+8C↑j
                mov     rax, [rbp+0E8h]
                cmp     byte ptr [rax], 0F4h
                jnz     short loc_140A1B34D
                dec     rax
                cmp     byte ptr [rax], 0FBh
                jnz     short loc_140A1B34D
                and     dword ptr [rbp+0E8h+arg_8], 0FFFFFDFFh
                mov     [rbp+0E8h], rax
                lock inc dword ptr gs:998h

loc_140A1B34D:                          ; CODE XREF: sub_140A1B280+A9↑j
                                        ; sub_140A1B280+B1↑j
                lea     rcx, [rbp+0E8h+var_168]
                call    sub_140A1C1B0
                mov     r11, [rbp+0E8h+var_108]
                mov     r10, [rbp+0E8h+var_110]
                mov     r9, [rbp+0E8h+var_118]
                mov     r8, [rbp+0E8h+var_120]
                mov     rdx, [rbp+0E8h+var_128]
                mov     rcx, [rbp+0E8h+var_130]
                mov     rax, [rbp+0E8h+var_138]
                ldmxcsr [rbp+0E8h+var_13C]
                movaps  xmm0, [rbp+0E8h+var_F8]
                movaps  xmm1, [rbp+0E8h+var_E8]
                movaps  xmm2, [rbp+0E8h+var_D8]
                movaps  xmm3, [rbp+0E8h+var_C8]
                movaps  xmm4, [rbp+0E8h+var_B8]
                movaps  xmm5, [rbp+0E8h+var_A8]
                mov     rsp, rbp
                mov     rbp, [rbp+0E8h+var_10]
                add     rsp, 0E8h
                test    [rsp+arg_18], 4
                jnz     short loc_140A1B3BB
                push    rax
                push    rcx
                push    rdx
                xor     eax, eax
                xor     edx, edx
                mov     ecx, 17Ah
                wrmsr

loc_140A1B3B6:                          ; DATA XREF: sub_140A1C2B0+9C↓o
                pop     rdx
                pop     rcx
                pop     rax
                iretq
; ---------------------------------------------------------------------------

loc_140A1B3BB:                          ; CODE XREF: sub_140A1B280+126↑j
                                        ; DATA XREF: sub_140A1C2B0+AD↓o
                push    rax
                push    [rsp+8+arg_8]
                popfq
                mov     rax, rsp
                mov     rsp, [rsp+8+arg_10]
                push    qword ptr [rax+10h]
                push    qword ptr [rax+8]
                mov     rax, [rax]
                push    rax
                push    rcx
                push    rdx
                xor     eax, eax
                xor     edx, edx
                mov     ecx, 17Ah
                wrmsr

loc_140A1B3E0:                          ; DATA XREF: sub_140A1C2B0:loc_140A1C379↓o
                pop     rdx
                pop     rcx
                pop     rax
                retfq
sub_140A1B280   endp

; ---------------------------------------------------------------------------
algn_140A1B3E5:                         ; DATA XREF: .pdata:000000014012C87C↑o
                                        ; sub_140A1C2B0+D5↓o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0E8h

sub_140A1B400   proc near               ; DATA XREF: .pdata:000000014012C888↑o
                                        ; sub_140A1B400+77↓o ...

var_170         = dword ptr -170h
var_168         = byte ptr -168h
var_13D         = byte ptr -13Dh
var_13C         = dword ptr -13Ch
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_F8          = xmmword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_10          = qword ptr -10h

                sub     rsp, 8
                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0E8h+var_13D], 1
                mov     [rbp+0E8h+var_138], rax
                mov     [rbp+0E8h+var_130], rcx
                mov     [rbp+0E8h+var_128], rdx
                mov     [rbp+0E8h+var_120], r8
                mov     [rbp+0E8h+var_118], r9
                mov     [rbp+0E8h+var_110], r10
                mov     [rbp+0E8h+var_108], r11
                cld
                stmxcsr [rbp+0E8h+var_13C]
                push    1F80h
                ldmxcsr [rsp+170h+var_170]
                add     rsp, 8
                movaps  [rbp+0E8h+var_F8], xmm0
                movaps  [rbp+0E8h+var_E8], xmm1
                movaps  [rbp+0E8h+var_D8], xmm2
                movaps  [rbp+0E8h+var_C8], xmm3
                movaps  [rbp+0E8h+var_B8], xmm4
                movaps  [rbp+0E8h+var_A8], xmm5
                lea     rcx, [rbp+0E8h+var_168]
                xor     edx, edx
                inc     edx
                call    sub_140A1C2B0
                bts     dword ptr gs:9A4h, 0
                jnb     short loc_140A1B4A8
                lea     rax, sub_140A1B400
                cmp     rax, [rbp+0E8h]
                ja      short loc_140A1B4A8
                lea     rax, algn_140A1B4FC
                cmp     rax, [rbp+0E8h]
                jbe     short loc_140A1B4A8
                mov     rcx, 12h
                lea     rdx, [rbp+0E8h+var_168]
                call    sub_140A1A0B0
; ---------------------------------------------------------------------------
                align 8

loc_140A1B4A8:                          ; CODE XREF: sub_140A1B400+75↑j
                                        ; sub_140A1B400+85↑j ...
                and     byte ptr gs:9A4h, 0
                mov     r11, [rbp+0E8h+var_108]
                mov     r10, [rbp+0E8h+var_110]
                mov     r9, [rbp+0E8h+var_118]
                mov     r8, [rbp+0E8h+var_120]
                mov     rdx, [rbp+0E8h+var_128]
                mov     rcx, [rbp+0E8h+var_130]
                mov     rax, [rbp+0E8h+var_138]
                ldmxcsr [rbp+0E8h+var_13C]
                movaps  xmm0, [rbp+0E8h+var_F8]
                movaps  xmm1, [rbp+0E8h+var_E8]
                movaps  xmm2, [rbp+0E8h+var_D8]
                movaps  xmm3, [rbp+0E8h+var_C8]
                movaps  xmm4, [rbp+0E8h+var_B8]
                movaps  xmm5, [rbp+0E8h+var_A8]
                mov     rsp, rbp
                mov     rbp, [rbp+0E8h+var_10]
                add     rsp, 0E8h
                iretq
sub_140A1B400   endp

; ---------------------------------------------------------------------------
algn_140A1B4FC:                         ; DATA XREF: .pdata:000000014012C888↑o
                                        ; sub_140A1B400+87↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A1B500   proc near               ; DATA XREF: .pdata:000000014012C894↑o
                                        ; sub_1409AB3F8:loc_1409AB47C↑o
                push    0
                jmp     sub_140A1BD00
sub_140A1B500   endp

; ---------------------------------------------------------------------------
                align 8
                push    1
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    2
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    3
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    4
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    5
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    6
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    7
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    8
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    9
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0Ah
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0Bh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0Ch
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0Dh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0Eh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0Fh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    10h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    11h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    12h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    13h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    14h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    15h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    16h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    17h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    18h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    19h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    1Ah
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    1Bh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    1Ch
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    1Dh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    1Eh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    1Fh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    20h ; ' '
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    21h ; '!'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    22h ; '"'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    23h ; '#'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    24h ; '$'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    25h ; '%'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    26h ; '&'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    27h ; '''
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    28h ; '('
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    29h ; ')'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    2Ah ; '*'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    2Bh ; '+'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    2Ch ; ','
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    2Dh ; '-'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    2Eh ; '.'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    2Fh ; '/'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    30h ; '0'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    31h ; '1'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    32h ; '2'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    33h ; '3'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    34h ; '4'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    35h ; '5'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    36h ; '6'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    37h ; '7'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    38h ; '8'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    39h ; '9'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    3Ah ; ':'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    3Bh ; ';'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    3Ch ; '<'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    3Dh ; '='
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    3Eh ; '>'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    3Fh ; '?'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    40h ; '@'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    41h ; 'A'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    42h ; 'B'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    43h ; 'C'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    44h ; 'D'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    45h ; 'E'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    46h ; 'F'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    47h ; 'G'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    48h ; 'H'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    49h ; 'I'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    4Ah ; 'J'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    4Bh ; 'K'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    4Ch ; 'L'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    4Dh ; 'M'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    4Eh ; 'N'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    4Fh ; 'O'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    50h ; 'P'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    51h ; 'Q'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    52h ; 'R'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    53h ; 'S'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    54h ; 'T'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    55h ; 'U'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    56h ; 'V'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    57h ; 'W'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    58h ; 'X'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    59h ; 'Y'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    5Ah ; 'Z'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    5Bh ; '['
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    5Ch ; '\'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    5Dh ; ']'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    5Eh ; '^'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    5Fh ; '_'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    60h ; '`'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    61h ; 'a'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    62h ; 'b'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    63h ; 'c'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    64h ; 'd'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    65h ; 'e'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    66h ; 'f'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    67h ; 'g'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    68h ; 'h'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    69h ; 'i'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    6Ah ; 'j'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    6Bh ; 'k'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    6Ch ; 'l'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    6Dh ; 'm'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    6Eh ; 'n'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    6Fh ; 'o'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    70h ; 'p'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    71h ; 'q'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    72h ; 'r'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    73h ; 's'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    74h ; 't'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    75h ; 'u'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    76h ; 'v'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    77h ; 'w'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    78h ; 'x'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    79h ; 'y'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    7Ah ; 'z'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    7Bh ; '{'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    7Ch ; '|'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    7Dh ; '}'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    7Eh ; '~'
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    7Fh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF80h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF81h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF82h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF83h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF84h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF85h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF86h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF87h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF88h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF89h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF8Ah
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF8Bh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF8Ch
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF8Dh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF8Eh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF8Fh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF90h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF91h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF92h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF93h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF94h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF95h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF96h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF97h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF98h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF99h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF9Ah
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF9Bh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFF9Ch
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF9Dh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFF9Eh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFF9Fh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFA0h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA1h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFA2h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA3h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFA4h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA5h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFA6h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA7h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFA8h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFA9h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFAAh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFABh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFACh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFADh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFAEh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFAFh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFB0h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB1h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFB2h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB3h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFB4h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB5h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFB6h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB7h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFB8h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFB9h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFBAh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFBBh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFBCh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFBDh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFBEh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFBFh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFC0h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC1h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFC2h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC3h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFC4h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC5h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFC6h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC7h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFC8h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFC9h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFCAh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFCBh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFCCh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFCDh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFCEh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFCFh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFD0h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD1h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFD2h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD3h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFD4h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD5h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFD6h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD7h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFD8h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFD9h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFDAh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFDBh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFDCh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFDDh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFDEh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFDFh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFE0h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE1h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFE2h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE3h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFE4h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE5h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFE6h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE7h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFE8h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFE9h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFEAh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFEBh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFECh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFEDh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFEEh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFEFh
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFF0h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF1h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFF2h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF3h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFF4h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF5h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFF6h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF7h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFF8h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFF9h
                jmp     sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFFAh
                jmp     short sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFFBh
                jmp     short sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h
                push    0FFFFFFFFFFFFFFFCh
                jmp     short sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFFDh
                jmp     short sub_140A1BD00
; ---------------------------------------------------------------------------
                align 10h
                push    0FFFFFFFFFFFFFFFEh
                jmp     short sub_140A1BD00
; ---------------------------------------------------------------------------
                align 8
                push    0FFFFFFFFFFFFFFFFh
                jmp     short sub_140A1BD00
; ---------------------------------------------------------------------------
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0D8h

sub_140A1BD00   proc near               ; CODE XREF: sub_140A1B500+2↑j
                                        ; MINIEX:0000000140A1B50A↑j ...

var_160         = dword ptr -160h
var_12D         = byte ptr -12Dh
var_12C         = dword ptr -12Ch
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_E8          = xmmword ptr -0E8h
var_D8          = xmmword ptr -0D8h
var_C8          = xmmword ptr -0C8h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = xmmword ptr -98h
var_s0          = qword ptr  0

                push    rbp
                sub     rsp, 158h
                lea     rbp, [rsp+80h]
                mov     [rbp+0D8h+var_12D], 1
                mov     [rbp+0D8h+var_128], rax
                mov     [rbp+0D8h+var_120], rcx
                mov     [rbp+0D8h+var_118], rdx
                mov     [rbp+0D8h+var_110], r8
                mov     [rbp+0D8h+var_108], r9
                mov     [rbp+0D8h+var_100], r10
                mov     [rbp+0D8h+var_F8], r11
                cld
                stmxcsr [rbp+0D8h+var_12C]
                push    1F80h
                ldmxcsr [rsp+160h+var_160]
                add     rsp, 8
                movaps  [rbp+0D8h+var_E8], xmm0
                movaps  [rbp+0D8h+var_D8], xmm1
                movaps  [rbp+0D8h+var_C8], xmm2
                movaps  [rbp+0D8h+var_B8], xmm3
                movaps  [rbp+0D8h+var_A8], xmm4
                movaps  [rbp+0D8h+var_98], xmm5
                movzx   rax, byte ptr [rbp+0E0h]
                lock inc qword ptr gs:0A8h[rax*8]
                call    sub_140A1BF90
                mov     r11, [rbp+0D8h+var_F8]
                mov     r10, [rbp+0D8h+var_100]
                mov     r9, [rbp+0D8h+var_108]
                mov     r8, [rbp+0D8h+var_110]
                mov     rdx, [rbp+0D8h+var_118]
                mov     rcx, [rbp+0D8h+var_120]
                mov     rax, [rbp+0D8h+var_128]
                ldmxcsr [rbp+0D8h+var_12C]
                movaps  xmm0, [rbp+0D8h+var_E8]
                movaps  xmm1, [rbp+0D8h+var_D8]
                movaps  xmm2, [rbp+0D8h+var_C8]
                movaps  xmm3, [rbp+0D8h+var_B8]
                movaps  xmm4, [rbp+0D8h+var_A8]
                movaps  xmm5, [rbp+0D8h+var_98]
                mov     rsp, rbp
                mov     rbp, [rbp+0D8h+var_s0]
                add     rsp, 0E8h
                iretq
sub_140A1BD00   endp

; ---------------------------------------------------------------------------
byte_140A1BDBC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C8A0↑o

; =============== S U B R O U T I N E =======================================


sub_140A1BDC4   proc near               ; CODE XREF: sub_140A1C190+4↓p
                                        ; DATA XREF: .pdata:000000014012C8AC↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rdi, gs:0
                mov     ecx, 2
                lea     rbx, [rdi+8A8h]
                lea     eax, [rcx-1]
                lock cmpxchg [rbx+8], ecx
                jnz     short loc_140A1BE3B
                cmp     dword ptr [rbx+0Ch], 3
                jnz     short loc_140A1BE09
                mov     rax, gs:0
                mov     rcx, [rbx+18h]
                mov     [rax+8D0h], rcx
                jmp     short loc_140A1BE2A
; ---------------------------------------------------------------------------

loc_140A1BE09:                          ; CODE XREF: sub_140A1BDC4+2D↑j
                mov     eax, [rbx+10h]
                cmp     eax, 1
                jnz     short loc_140A1BE1B
                mov     rcx, rbx
                call    sub_140A1BEE0
                jmp     short loc_140A1BE2A
; ---------------------------------------------------------------------------

loc_140A1BE1B:                          ; CODE XREF: sub_140A1BDC4+4B↑j
                cmp     eax, ecx
                jnz     short loc_140A1BE29
                mov     rcx, rbx
                call    sub_140A1BE50
                jmp     short loc_140A1BE2A
; ---------------------------------------------------------------------------

loc_140A1BE29:                          ; CODE XREF: sub_140A1BDC4+59↑j
                int     3               ; Trap to Debugger

loc_140A1BE2A:                          ; CODE XREF: sub_140A1BDC4+43↑j
                                        ; sub_140A1BDC4+55↑j ...
                lock inc qword ptr [rdi+80h]
                xor     ecx, ecx
                mov     al, 1
                xchg    ecx, [rbx+8]
                jmp     short loc_140A1BE3D
; ---------------------------------------------------------------------------

loc_140A1BE3B:                          ; CODE XREF: sub_140A1BDC4+27↑j
                xor     al, al

loc_140A1BE3D:                          ; CODE XREF: sub_140A1BDC4+75↑j
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1BDC4   endp

algn_140A1BE49:                         ; DATA XREF: .pdata:000000014012C8AC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A1BE50   proc near               ; CODE XREF: sub_140A1BDC4+5E↑p
                                        ; DATA XREF: .pdata:000000014012C8B8↑o
                sub     rsp, 28h
                mov     r9, rcx
                mov     ecx, [rcx+0Ch]
                sub     ecx, 1
                jz      short loc_140A1BEC0
                cmp     ecx, 1
                jz      short loc_140A1BE67

loc_140A1BE64:                          ; CODE XREF: sub_140A1BE50+5A↓j
                int     3               ; Trap to Debugger
                jmp     short loc_140A1BED3
; ---------------------------------------------------------------------------

loc_140A1BE67:                          ; CODE XREF: sub_140A1BE50+12↑j
                cmp     dword ptr [r9+18h], 0
                mov     r10d, [r9+1Ch]
                jz      short loc_140A1BE93
                movzx   edx, word ptr [r9+16h]
                movzx   ecx, word ptr [r9+14h]
                call    sub_140A1BF4C
                mov     edx, [r9+18h]
                mov     ecx, eax
                mov     eax, edx
                and     edx, ecx
                not     eax
                and     r10d, eax
                or      r10d, edx

loc_140A1BE93:                          ; CODE XREF: sub_140A1BE50+20↑j
                movzx   ecx, word ptr [r9+16h]
                movzx   edx, word ptr [r9+14h]
                sub     ecx, 1
                jz      short loc_140A1BEBA
                sub     ecx, 1
                jz      short loc_140A1BEB2
                cmp     ecx, 2
                jnz     short loc_140A1BE64
                mov     eax, r10d
                out     dx, eax
                jmp     short loc_140A1BEBE
; ---------------------------------------------------------------------------

loc_140A1BEB2:                          ; CODE XREF: sub_140A1BE50+55↑j
                movzx   eax, r10w
                out     dx, ax
                jmp     short loc_140A1BEBE
; ---------------------------------------------------------------------------

loc_140A1BEBA:                          ; CODE XREF: sub_140A1BE50+50↑j
                mov     al, r10b
                out     dx, al

loc_140A1BEBE:                          ; CODE XREF: sub_140A1BE50+60↑j
                                        ; sub_140A1BE50+68↑j
                jmp     short loc_140A1BED3
; ---------------------------------------------------------------------------

loc_140A1BEC0:                          ; CODE XREF: sub_140A1BE50+D↑j
                movzx   edx, word ptr [r9+16h]
                movzx   ecx, word ptr [r9+14h]
                call    sub_140A1BF4C
                mov     [r9+18h], eax

loc_140A1BED3:                          ; CODE XREF: sub_140A1BE50+15↑j
                                        ; sub_140A1BE50:loc_140A1BEBE↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1BE50   endp

algn_140A1BED9:                         ; DATA XREF: .pdata:000000014012C8B8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A1BEE0   proc near               ; CODE XREF: sub_140A1BDC4+50↑p
                                        ; DATA XREF: .pdata:000000014012C8C4↑o
                mov     r8, rcx
                mov     ecx, [rcx+0Ch]
                sub     ecx, 1
                jz      short loc_140A1BF30
                cmp     ecx, 1
                jz      short loc_140A1BEF3
                int     3               ; Trap to Debugger
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A1BEF3:                          ; CODE XREF: sub_140A1BEE0+E↑j
                mov     r10, [r8+18h]
                mov     r11, [r8+20h]
                mov     r9d, [r8+14h]
                test    r10, r10
                jz      short loc_140A1BF1F
                mov     ecx, r9d
                rdmsr
                shl     rdx, 20h
                mov     rcx, r10
                or      rax, rdx
                not     rcx
                and     r11, rcx
                and     r10, rax
                or      r11, r10

loc_140A1BF1F:                          ; CODE XREF: sub_140A1BEE0+22↑j
                mov     rdx, r11
                mov     rax, r11
                shr     rdx, 20h
                mov     ecx, r9d
                wrmsr
                retn
; ---------------------------------------------------------------------------
                align 10h

loc_140A1BF30:                          ; CODE XREF: sub_140A1BEE0+9↑j
                mov     ecx, [r8+14h]
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     [r8+18h], rax
                retn
sub_140A1BEE0   endp

; ---------------------------------------------------------------------------
                db 0CCh
byte_140A1BF43  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C8C4↑o

; =============== S U B R O U T I N E =======================================


sub_140A1BF4C   proc near               ; CODE XREF: sub_140A1BE50+2C↑p
                                        ; sub_140A1BE50+7A↑p
                                        ; DATA XREF: ...
                movzx   r8d, dx
                sub     r8d, 1
                jz      short loc_140A1BF77
                sub     r8d, 1
                jz      short loc_140A1BF6D
                cmp     r8d, 2
                jz      short loc_140A1BF67
                xor     eax, eax
                int     3               ; Trap to Debugger
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A1BF67:                          ; CODE XREF: sub_140A1BF4C+14↑j
                movzx   edx, cx
                in      eax, dx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A1BF6D:                          ; CODE XREF: sub_140A1BF4C+E↑j
                movzx   edx, cx
                in      ax, dx
                movzx   eax, ax
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A1BF77:                          ; CODE XREF: sub_140A1BF4C+8↑j
                movzx   edx, cx
                in      al, dx
                movzx   eax, al
                retn
sub_140A1BF4C   endp

; ---------------------------------------------------------------------------
                align 20h
byte_140A1BF80  db 10h dup(0CCh)        ; DATA XREF: .pdata:000000014012C8D0↑o

; =============== S U B R O U T I N E =======================================


sub_140A1BF90   proc near               ; CODE XREF: sub_140A1AF80+68↑p
                                        ; sub_140A1B100+6D↑p ...
                sub     rsp, 28h
                xor     edx, edx
                mov     ecx, 0B0h
                call    sub_140A1C148
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1BF90   endp

algn_140A1BFA6:                         ; DATA XREF: .pdata:000000014012C8DC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A1BFB0   proc near               ; CODE XREF: sub_140A1A010+24↑p
                                        ; DATA XREF: .pdata:000000014012C8E8↑o
                sub     rsp, 28h
                mov     rax, gs:0
                xor     r10d, r10d
                cmp     [rax+29h], r10b
                jz      short loc_140A1BFE9
                lea     ecx, [r10+1Bh]
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     edx, 400h
                test    rdx, rax
                jnz     short loc_140A1BFE9
                or      rax, rdx
                mov     rdx, rax
                shr     rdx, 20h
                wrmsr

loc_140A1BFE9:                          ; CODE XREF: sub_140A1BFB0+14↑j
                                        ; sub_140A1BFB0+2B↑j
                mov     r9d, 0F0h
                mov     edx, r9d
                lea     r11d, [r9-70h]
                mov     ecx, r11d
                call    sub_140A1C148
                mov     ecx, r11d
                call    sub_140A1C104
                mov     r8, gs:0
                cmp     [r8+29h], r10b
                jnz     short loc_140A1C042
                xor     edx, edx
                lea     ecx, [r9-20h]
                call    sub_140A1C148
                mov     r8, gs:0
                lea     ecx, [r9-10h]
                cmp     [r8+2Ah], r10b
                jz      short loc_140A1C03A
                mov     edx, 0FFFFFFFh
                jmp     short loc_140A1C03D
; ---------------------------------------------------------------------------

loc_140A1C03A:                          ; CODE XREF: sub_140A1BFB0+81↑j
                or      edx, 0FFFFFFFFh

loc_140A1C03D:                          ; CODE XREF: sub_140A1BFB0+88↑j
                call    sub_140A1C148

loc_140A1C042:                          ; CODE XREF: sub_140A1BFB0+63↑j
                mov     edx, 1DFh
                mov     ecx, r9d
                call    sub_140A1C148
                mov     edx, 300D8h
                mov     ecx, 320h
                call    sub_140A1C148
                mov     edx, 0Bh
                mov     ecx, 3E0h
                call    sub_140A1C148
                mov     edx, 0E2h
                mov     ecx, 370h
                call    sub_140A1C148
                mov     r9d, 100D8h
                mov     ecx, 340h
                mov     edx, r9d
                call    sub_140A1C148
                mov     r8d, 350h
                mov     ecx, r8d
                call    sub_140A1C104
                bts     eax, 10h
                mov     ecx, r8d
                mov     edx, eax
                call    sub_140A1C148
                mov     edx, r9d
                mov     ecx, r8d
                call    sub_140A1C148
                mov     edx, 184D8h
                lea     ecx, [r8+10h]
                call    sub_140A1C148
                mov     r8, gs:0
                mov     ecx, 20h ; ' '
                call    sub_140A1C104
                cmp     [r8+29h], r10b
                jnz     short loc_140A1C0E0
                shr     eax, 18h

loc_140A1C0E0:                          ; CODE XREF: sub_140A1BFB0+12B↑j
                mov     rdx, gs:0
                mov     ecx, r11d
                mov     [rdx+14h], eax
                xor     edx, edx
                call    sub_140A1C148
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1BFB0   endp

byte_140A1C0FC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C8E8↑o

; =============== S U B R O U T I N E =======================================


sub_140A1C104   proc near               ; CODE XREF: sub_140A1BFB0+51↑p
                                        ; sub_140A1BFB0+E8↑p ...
                mov     rax, gs:0
                cmp     byte ptr [rax+29h], 0
                jnz     short loc_140A1C12E
                cmp     byte ptr [rax+28h], 0
                jnz     short loc_140A1C12E
                mov     rax, gs:0
                movsxd  rcx, ecx
                mov     rax, [rax+20h]
                mov     eax, [rcx+rax]
                retn
; ---------------------------------------------------------------------------
                align 2

loc_140A1C12E:                          ; CODE XREF: sub_140A1C104+D↑j
                                        ; sub_140A1C104+13↑j
                sar     ecx, 4
                add     ecx, 800h
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                retn
sub_140A1C104   endp

; ---------------------------------------------------------------------------
                align 2
algn_140A1C142:                         ; DATA XREF: .pdata:000000014012C8F4↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_140A1C148   proc near               ; CODE XREF: sub_140A1BF90+B↑p
                                        ; sub_140A1BFB0+49↑p ...
                mov     rax, gs:0
                cmp     byte ptr [rax+29h], 0
                jnz     short loc_140A1C172
                cmp     byte ptr [rax+28h], 0
                jnz     short loc_140A1C172
                mov     rax, gs:0
                movsxd  rcx, ecx
                mov     rax, [rax+20h]
                mov     [rcx+rax], edx
                retn
; ---------------------------------------------------------------------------
                align 2

loc_140A1C172:                          ; CODE XREF: sub_140A1C148+D↑j
                                        ; sub_140A1C148+13↑j
                sar     ecx, 4
                mov     edx, edx
                add     ecx, 800h
                mov     eax, edx
                shr     rdx, 20h
                wrmsr
                retn
sub_140A1C148   endp

; ---------------------------------------------------------------------------
                db 0CCh
algn_140A1C187:                         ; DATA XREF: .pdata:000000014012C900↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A1C190   proc near               ; CODE XREF: sub_140A1B100+68↑p
                                        ; DATA XREF: .pdata:000000014012C90C↑o
                sub     rsp, 28h
                call    sub_140A1BDC4
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1C190   endp

byte_140A1C19F  db 11h dup(0CCh)        ; DATA XREF: .pdata:000000014012C90C↑o

; =============== S U B R O U T I N E =======================================


sub_140A1C1B0   proc near               ; CODE XREF: sub_140A1B280+D1↑p
                                        ; DATA XREF: .pdata:000000014012C918↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 20h
                mov     rsi, rcx
                mov     ecx, 179h
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     rbx, rax
                mov     rax, gs:0
                cmp     byte ptr [rax+2Bh], 2
                jnz     short loc_140A1C1F1
                bt      ebx, 18h
                jb      short loc_140A1C1FB

loc_140A1C1F1:                          ; CODE XREF: sub_140A1C1B0+39↑j
                mov     rdx, rsi
                mov     cl, 12h
                call    sub_140A1A0B0
; ---------------------------------------------------------------------------

loc_140A1C1FB:                          ; CODE XREF: sub_140A1C1B0+3F↑j
                mov     ecx, 17Ah
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     rdi, rax
                test    al, 1
                jnz     short loc_140A1C21A
                mov     rdx, rsi
                mov     cl, 12h
                call    sub_140A1A0B0
; ---------------------------------------------------------------------------

loc_140A1C21A:                          ; CODE XREF: sub_140A1C1B0+5E↑j
                movzx   eax, bl
                test    bl, bl
                jz      short loc_140A1C28C
                mov     ebp, 401h
                mov     r14d, eax
                mov     r15, 180000000000000h

loc_140A1C233:                          ; CODE XREF: sub_140A1C1B0+DA↓j
                mov     ecx, ebp
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     rbx, rax
                jge     short loc_140A1C283
                mov     rax, 2000000000000000h
                test    rax, rbx
                jz      short loc_140A1C283
                mov     rax, 4200000000000000h
                test    rax, rbx
                jz      short loc_140A1C26B
                mov     rdx, rsi
                mov     cl, 12h
                call    sub_140A1A0B0
; ---------------------------------------------------------------------------

loc_140A1C26B:                          ; CODE XREF: sub_140A1C1B0+AF↑j
                test    dil, 8
                jz      short loc_140A1C283
                and     rbx, r15
                cmp     rbx, r15
                jnz     short loc_140A1C283
                mov     rdx, rsi
                mov     cl, 12h
                call    sub_140A1A0B0
; ---------------------------------------------------------------------------

loc_140A1C283:                          ; CODE XREF: sub_140A1C1B0+91↑j
                                        ; sub_140A1C1B0+A0↑j ...
                add     ebp, 4
                sub     r14, 1
                jnz     short loc_140A1C233

loc_140A1C28C:                          ; CODE XREF: sub_140A1C1B0+6F↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     rbp, [rsp+38h+arg_8]
                mov     rsi, [rsp+38h+arg_10]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1C1B0   endp

algn_140A1C2A6:                         ; DATA XREF: .pdata:000000014012C918↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A1C2B0   proc near               ; CODE XREF: sub_140A1B280+64↑p
                                        ; sub_140A1B400+66↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r15
                sub     rsp, 20h
                mov     rax, gs:0
                xor     r15d, r15d
                mov     r9, [rcx+180h]
                mov     bpl, dl
                mov     rdi, rcx
                mov     ebx, r15d
                mov     r8, [rax+40h]
                mov     rax, [r8+34h]
                cmp     r9, rax
                ja      short loc_140A1C311
                add     rax, 0FFFFFFFFFFFFE000h
                cmp     r9, rax
                jb      short loc_140A1C311
                mov     rax, gs:0
                lea     ebx, [r15+1]
                lock inc dword ptr [rax+978h]

loc_140A1C311:                          ; CODE XREF: sub_140A1C2B0+40↑j
                                        ; sub_140A1C2B0+4B↑j
                mov     rax, gs:0
                mov     rcx, [rax+40h]
                mov     rax, [rcx+2Ch]
                cmp     r9, rax
                ja      short loc_140A1C345
                add     rax, 0FFFFFFFFFFFFE000h
                cmp     r9, rax
                jb      short loc_140A1C345
                mov     rax, gs:0
                or      ebx, 2
                lock inc dword ptr [rax+97Ch]

loc_140A1C345:                          ; CODE XREF: sub_140A1C2B0+75↑j
                                        ; sub_140A1C2B0+80↑j
                mov     rcx, [rdi+168h]
                lea     rax, loc_140A1B3B6
                mov     edx, 980h
                cmp     rcx, rax
                jb      short loc_140A1C379
                lea     rax, loc_140A1B3BB
                cmp     rcx, rax
                jnb     short loc_140A1C379
                mov     rax, gs:0
                or      ebx, 4
                lock inc dword ptr [rax+rdx]

loc_140A1C379:                          ; CODE XREF: sub_140A1C2B0+AB↑j
                                        ; sub_140A1C2B0+B7↑j
                lea     rax, loc_140A1B3E0
                cmp     rcx, rax
                jb      short loc_140A1C3A1
                lea     rax, algn_140A1B3E5
                cmp     rcx, rax
                jnb     short loc_140A1C3A1
                mov     rax, gs:0
                or      ebx, 4
                lock inc dword ptr [rax+rdx]

loc_140A1C3A1:                          ; CODE XREF: sub_140A1C2B0+D3↑j
                                        ; sub_140A1C2B0+DF↑j
                mov     rsi, gs:0
                mov     ecx, ebx
                and     ecx, 1
                test    bpl, bpl
                jnz     short loc_140A1C3CA
                test    ecx, ecx
                jnz     short loc_140A1C3CA
                mov     rax, gs:0
                lock inc dword ptr [rax+990h]
                jmp     short loc_140A1C401
; ---------------------------------------------------------------------------

loc_140A1C3CA:                          ; CODE XREF: sub_140A1C2B0+102↑j
                                        ; sub_140A1C2B0+106↑j
                mov     rax, gs:0
                lock inc dword ptr [rax+98Ch]
                test    ecx, ecx
                jz      short loc_140A1C3EE
                mov     rax, gs:0
                lock inc dword ptr [rax+99Ch]

loc_140A1C3EE:                          ; CODE XREF: sub_140A1C2B0+12C↑j
                test    bpl, bpl
                jz      short loc_140A1C408
                test    ecx, ecx
                jz      short loc_140A1C401
                mov     rdx, rdi
                mov     cl, 2
                call    sub_140A1A0B0
; ---------------------------------------------------------------------------

loc_140A1C401:                          ; CODE XREF: sub_140A1C2B0+118↑j
                                        ; sub_140A1C2B0+145↑j
                mov     ecx, 8D8h
                jmp     short loc_140A1C40D
; ---------------------------------------------------------------------------

loc_140A1C408:                          ; CODE XREF: sub_140A1C2B0+141↑j
                mov     ecx, 928h

loc_140A1C40D:                          ; CODE XREF: sub_140A1C2B0+156↑j
                test    bl, 4
                jz      short loc_140A1C478
                mov     rax, gs:0
                lock inc dword ptr [rax+9A0h]
                movups  xmm0, xmmword ptr [rsi+rcx]
                movups  xmmword ptr [rdi+168h], xmm0
                movups  xmm1, xmmword ptr [rsi+rcx+10h]
                movups  xmmword ptr [rdi+178h], xmm1
                movsd   xmm0, qword ptr [rsi+rcx+20h]
                movsd   qword ptr [rdi+188h], xmm0
                mov     rax, [rsi+rcx+28h]
                mov     [rdi+30h], rax
                mov     rax, [rsi+rcx+30h]
                mov     [rdi+38h], rax
                mov     rax, [rsi+rcx+38h]
                mov     [rdi+40h], rax
                mov     rax, gs:0
                lock inc dword ptr [rax+988h]
                mov     [rsi+rcx+8], r15w

loc_140A1C478:                          ; CODE XREF: sub_140A1C2B0+160↑j
                test    bpl, bpl
                jnz     short loc_140A1C4CD
                mov     rax, gs:0
                lock inc dword ptr [rax+984h]
                movups  xmm0, xmmword ptr [rdi+168h]
                movups  xmmword ptr [rsi+rcx], xmm0
                movups  xmm1, xmmword ptr [rdi+178h]
                movups  xmmword ptr [rsi+rcx+10h], xmm1
                movsd   xmm0, qword ptr [rdi+188h]
                movsd   qword ptr [rsi+rcx+20h], xmm0
                mov     rax, [rdi+30h]
                mov     [rsi+rcx+28h], rax
                mov     rax, [rdi+38h]
                mov     [rsi+rcx+30h], rax
                mov     rax, [rdi+40h]
                mov     [rsi+rcx+38h], rax

loc_140A1C4CD:                          ; CODE XREF: sub_140A1C2B0+1CB↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                mov     rdi, [rsp+28h+arg_18]
                add     rsp, 20h
                pop     r15
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1C2B0   endp

algn_140A1C4E9:                         ; DATA XREF: .pdata:000000014012C924↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A1C4F0   proc near               ; CODE XREF: sub_140A1A010+29↑p
                                        ; DATA XREF: .pdata:000000014012C930↑o
                mov     ecx, 179h
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                movzx   edx, al
                test    al, al
                jz      short loc_140A1C51C
                mov     ecx, 401h
                mov     r8d, edx

loc_140A1C50D:                          ; CODE XREF: sub_140A1C4F0+2A↓j
                xor     eax, eax
                xor     edx, edx
                wrmsr
                add     ecx, 4
                sub     r8, 1
                jnz     short loc_140A1C50D

loc_140A1C51C:                          ; CODE XREF: sub_140A1C4F0+13↑j
                mov     rax, cr4
                or      rax, 40h
                mov     cr4, rax
                retn
sub_140A1C4F0   endp

; ---------------------------------------------------------------------------
                align 8
algn_140A1C528:                         ; DATA XREF: .pdata:000000014012C930↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_140A1C530   proc near               ; CODE XREF: sub_140A1A010+38↑p
                                        ; DATA XREF: .pdata:000000014012C93C↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, gs:0

loc_140A1C543:                          ; CODE XREF: sub_140A1C530+7C↓j
                mov     rax, [rbx+8D0h]
                shr     rax, 34h
                and     eax, 0Fh
                cmp     rax, 4
                sbb     rdi, rdi
                and     rdi, rax
                mov     eax, edi
                test    edi, edi
                jz      short loc_140A1C59E
                sub     eax, 1
                jz      short loc_140A1C590
                cmp     eax, 1
                jz      short loc_140A1C582
                mov     r8d, [rbx+8D0h]
                lea     rcx, [rbx+0A00h]
                xor     edx, edx
                call    sub_140A1A090
                jmp     short loc_140A1C5A3
; ---------------------------------------------------------------------------

loc_140A1C582:                          ; CODE XREF: sub_140A1C530+39↑j
                movzx   ecx, word ptr [rbx+8D0h]
                call    sub_140A1A080
                jmp     short loc_140A1C5A3
; ---------------------------------------------------------------------------

loc_140A1C590:                          ; CODE XREF: sub_140A1C530+34↑j
                movzx   ecx, word ptr [rbx+8D0h]
                call    sub_140A1A070
; ---------------------------------------------------------------------------
                jmp     short loc_140A1C5A3
; ---------------------------------------------------------------------------

loc_140A1C59E:                          ; CODE XREF: sub_140A1C530+2F↑j
                call    sub_140A1A060
; ---------------------------------------------------------------------------

loc_140A1C5A3:                          ; CODE XREF: sub_140A1C530+50↑j
                                        ; sub_140A1C530+5E↑j ...
                lock inc qword ptr [rbx+rdi*8+88h]
                jmp     short loc_140A1C543
sub_140A1C530   endp

; ---------------------------------------------------------------------------
algn_140A1C5AE:                         ; DATA XREF: .pdata:000000014012C93C↑o
                align 80h
                dq 140h dup(?)
MINIEX          ends

; Section 21. (virtual address 00A1D000)
; Virtual size                  : 0008A8F8 ( 567544.)
; Section size in file          : 0008AA00 ( 567808.)
; Offset to raw data for section: 0096A600
; Flags 62000020: Text Discardable Executable Readable
; Alignment     : default
; ===========================================================================

; Segment type: Pure code
; Segment permissions: Read/Execute
INIT            segment para public 'CODE' use64
                assume cs:INIT
                ;org 140A1D000h
                assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
                db 4 dup(0)
dword_140A1D004 dd 0FFFFFFEDh           ; DATA XREF: sub_140A1EEE4+E8↓o
                dq 0FFFFFFFF00000000h, 0FFFFFFF8FFFFFFFEh, 0FFFFFFF8FFFFFFFFh
                dq 0FFFFFFF8FFFFFFA8h, 0FFFFFFF8FFFFFFF8h, 0FFFFFFFFFFFFFFF0h
                dq 0FFFFFFFC00000000h, 0FFFFFFF0FFFFFFF8h, 0FFFFFD44FFFFFFFFh
                dq 0FFFFFFFFFFFFFD2Ch, 0FFFFFFF0FFFFFFFCh, 0FFFFFFF8FFFFFFF0h
                dq 0FFFFFFF0FFFFFFFCh, 0FFFFFFA8FFFFFFEEh, 0FFFFFFB0FFFFFFE0h
                dq 0FFFFFFAFh, 0FFFFFFFEFFFFFFE8h, 0FFFFFFF8FFFFFFFCh
                dq 0FFFFFFF0FFFFFFF0h, 0FFFFFFFEh, 0FFFFFFD000000000h
                dq 0FFFFFFF800000000h, 0FFFFFFF0FFFFFFE6h, 0FFFFFFB8FFFFFFE8h
                dq 0FFFFFFF8FFFFFFF8h, 0FFFFFFD0FFFFFFE8h, 0FFFFFFF8FFFFFF02h
                dq 0FFFFFFFFFFFFFFFFh, 0FFFFFFFFh, 0FFFFFFC8FFFFFFF8h
                dq 0FFFFFFD0FFFFFE00h, 0FFFFFE30FFFFFFE0h, 0FFFFFFF0FFFFFFF8h
                dq 0FFFFFFF0h, 0FFFFFFF0FFFFFFF8h, 0FFFFFFF800000000h
                dq 0FFFFFFF0h, 0FFFFFFDBFFFFFFF8h, 0FFFFFFD0h, 0FFFFFFF0FFFFFFF8h
                dq 0FFFFFFF8FFFFFFF0h, 0FFFFFFF0h, 0FFFFFFF0FFFFFFF8h
                dq 0FFFFFFF800000000h
                db 0D8h, 3 dup(0FFh)
dword_140A1D16C dd 0                    ; DATA XREF: sub_140A1EEE4+E1↓o
                db 4 dup(0)
dword_140A1D174 dd 0FFFFFFF0h           ; DATA XREF: sub_140A1EEE4+C5↓o
                dq 0FFFFFFF8h, 0FFFFFFD8FFFFFFF0h, 0FFFFFFF8h, 0FFFFFFD000000000h
                dq 0FFFFFFF8FFFFFFDBh, 0FFFFFFF0FFFFFFF8h, 2 dup(0FFFFFFF8FFFFFFF0h)
                dq 2 dup(0FFFFFFF000000000h), 0FFFFFFF8h, 0FFFFFFE0FFFFFFF0h
                dq 0FFFFFE00FFFFFFD0h, 0FFFFFFF8FFFFFFC8h, 0FFFFFFFFFFFFFE30h
                dq 0FFFFFF02FFFFFFF8h, 0FFFFFFF8FFFFFFD0h, 0FFFFFFFF00000000h
                dq 0FFFFFFE8FFFFFFFFh, 0FFFFFFE6FFFFFFF0h, 0FFFFFFE8FFFFFFF8h
                dq 0FFFFFFF8FFFFFFF8h, 0FFFFFFFEFFFFFFB8h, 0FFFFFFF0FFFFFFF0h
                dq 0FFFFFFF8h, 0FFFFFFD0h, 0FFFFFFAF00000000h, 0FFFFFFE0FFFFFFB0h
                dq 0FFFFFFFCFFFFFFA8h, 0FFFFFFE8FFFFFFFEh, 0FFFFFFF000000000h
                dq 0FFFFFFFCFFFFFFF0h, 0FFFFFFEEFFFFFFFFh, 0FFFFFFFCFFFFFFF0h
                dq 0FFFFFFF8FFFFFFF8h, 0FFFFFFFCh, 0FFFFFD2CFFFFFFFFh
                dq 0FFFFFFFFFFFFFD44h, 0FFFFFFA8FFFFFFF0h, 0FFFFFFFFFFFFFFF8h
                dq 0FFFFFFF0FFFFFFF8h, 0FFFFFFF8FFFFFFF8h, 0FFFFFFFEFFFFFFF8h
                dq 0FFFFFFFFh
                db 0EDh, 3 dup(0FFh)
dword_140A1D2DC dd 0                    ; DATA XREF: sub_140A1EEE4+CC↓o
                dq 0

; =============== S U B R O U T I N E =======================================


sub_140A1D2E8   proc near               ; CODE XREF: HalInitSystem:loc_14099D755↑p
                                        ; DATA XREF: .pdata:000000014012C948↑o
                mov     rax, cs:__security_cookie
                test    rax, rax
                jz      short loc_140A1D30F
                mov     rcx, 2B992DDFA232h
                cmp     rax, rcx
                jz      short loc_140A1D30F
                not     rax
                mov     cs:qword_140C12368, rax
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A1D30F:                          ; CODE XREF: sub_140A1D2E8+A↑j
                                        ; sub_140A1D2E8+19↑j
                mov     ecx, 6
                int     29h             ; Win8: RtlFailFast(ecx)
sub_140A1D2E8   endp

; ---------------------------------------------------------------------------
algn_140A1D316:                         ; DATA XREF: .pdata:000000014012C948↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A1D320   proc near               ; DATA XREF: .pdata:000000014012C954↑o
                                        ; INITDATA:0000000140D580E0↓o

var_F0          = qword ptr -0F0h
var_48          = qword ptr -48h
arg_8           = qword ptr  10h

; FUNCTION CHUNK AT 0000000140A7C594 SIZE 00000D15 BYTES

; __unwind { // __C_specific_handler
                sub     rsp, 198h
                mov     [rsp+198h+var_F0], rsp

loc_140A1D32F:                          ; DATA XREF: .rdata:00000001400B17F8↑o
;   __try { // __finally(loc_140A7C594)
                call    sub_140A683BC
                lea     rdx, loc_140A1D345
                mov     rcx, rsp
                call    _local_unwind
                nop
;   } // starts at 140A1D32F

loc_140A1D344:                          ; DATA XREF: .rdata:00000001400B17F8↑o
                nop

loc_140A1D345:                          ; DATA XREF: sub_140A1D320+14↑o
                                        ; sub_140A1D320:loc_140A7C5A2↓o ...
                add     rsp, 198h
                retn
; } // starts at 140A1D320
sub_140A1D320   endp

; ---------------------------------------------------------------------------
byte_140A1D34D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012C954↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_140A1D354   proc near               ; CODE XREF: sub_140A3E728+158↓p
                                        ; DATA XREF: .pdata:000000014012C960↑o

var_D0          = qword ptr -0D0h
var_C0          = byte ptr -0C0h
var_BF          = byte ptr -0BFh
var_BE          = byte ptr -0BEh
var_BD          = byte ptr -0BDh
var_BC          = byte ptr -0BCh
var_BB          = byte ptr -0BBh
var_BA          = byte ptr -0BAh
var_B9          = byte ptr -0B9h
var_B8          = byte ptr -0B8h
var_B7          = byte ptr -0B7h
var_B0          = dword ptr -0B0h
var_AC          = dword ptr -0ACh
var_A8          = dword ptr -0A8h
var_A4          = dword ptr -0A4h
var_A0          = dword ptr -0A0h
var_9C          = dword ptr -9Ch
var_98          = dword ptr -98h
var_94          = dword ptr -94h
var_90          = dword ptr -90h
var_8C          = dword ptr -8Ch
var_88          = dword ptr -88h
var_84          = dword ptr -84h
var_80          = dword ptr -80h
var_7C          = dword ptr -7Ch
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_70          = dword ptr -70h
var_6C          = dword ptr -6Ch
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = byte ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
arg_0           = dword ptr  10h
arg_8           = dword ptr  18h
arg_10          = dword ptr  20h
arg_18          = dword ptr  28h

                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-1Fh]
                sub     rsp, 0B8h
                mov     rax, 0FFFFF780000002D4h
                cmp     byte ptr [rax], 2
                jnb     loc_140A1DB12
                mov     [rbp+57h+arg_8], 0A60000h
                xor     r15d, r15d
                mov     eax, [rbp+57h+arg_8]
                rol     eax, 0AFh
                mov     [rbp+57h+var_C0], al
                mov     [rbp+57h+arg_10], 410000h
                mov     eax, [rbp+57h+arg_10]
                ror     eax, 0B0h
                mov     [rbp+57h+var_BF], al
                mov     [rbp+57h+arg_18], 8C0042B1h
                mov     eax, [rbp+57h+arg_18]
                xor     eax, 42B1h
                ror     eax, 19h
                mov     [rbp+57h+var_BE], al
                mov     [rbp+57h+var_B0], 114000h
                mov     eax, [rbp+57h+var_B0]
                rol     eax, 0B2h
                mov     [rbp+57h+var_BD], al
                mov     [rbp+57h+var_AC], 2100000h
                mov     eax, [rbp+57h+var_AC]
                ror     eax, 0B3h
                mov     [rbp+57h+var_BC], al
                mov     [rbp+57h+var_A8], 4388h
                mov     eax, [rbp+57h+var_A8]
                xor     eax, 42B4h
                ror     eax, 22h
                mov     [rbp+57h+var_BB], al
                mov     [rbp+57h+var_A4], 27800h
                mov     eax, [rbp+57h+var_A4]
                rol     eax, 0B5h
                mov     [rbp+57h+var_BA], al
                mov     [rbp+57h+var_A0], 15000000h
                mov     eax, [rbp+57h+var_A0]
                ror     eax, 0B6h
                mov     [rbp+57h+var_B9], al
                mov     [rbp+57h+var_9C], 192B7h
                mov     eax, [rbp+57h+var_9C]
                xor     eax, 42B7h
                mov     [rbp+57h+var_B7], r15b
                ror     eax, 2Bh
                mov     [rbp+57h+var_B8], al
                call    sub_140A7652C
                mov     rcx, rax
                lea     rdx, [rbp+57h+var_C0]
                call    strstr
                test    rax, rax
                jnz     loc_140A1DB12
                lea     r13, cs:140000000h
                mov     rcx, r13
                call    RtlImageNtHeader
                mov     r9, rax
                rdtsc
                shl     rdx, 20h
                lea     r8, sub_1403DB5D0
                or      rax, rdx
                mov     r12, 7010008004002001h
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                lea     rcx, sub_1405CC010
                mul     rdx
                mov     rsi, rdx
                mov     [rbp+57h+var_60], rdx
                xor     rsi, rax
                mov     rax, 47AE147AE147AE15h
                mul     rsi
                mov     rax, rsi
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                mov     rdx, r13
                shr     rax, 6
                imul    rax, 64h ; 'd'
                sub     rsi, rax
                mov     eax, r15d
                cmp     rsi, 32h ; '2'
                mov     [rbp+57h+var_68], rsi
                cmovnb  r8d, ecx
                setnb   al
                sub     r8d, r13d
                mov     [rbp+57h+var_70], eax
                mov     rcx, r9
                call    sub_14033C730
                lea     r8, [rbp+57h+arg_0]
                mov     rcx, rax
                lea     rdx, [rbp+57h+var_58]
                mov     rbx, rax
                call    sub_1403C5CDC
                mov     r8, rax
                test    rax, rax
                jz      loc_140A1DB26
                cmp     [rbp+57h+arg_0], 0Ch
                jb      loc_140A1DB26
                mov     ecx, [rbp+57h+arg_0]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                mov     edi, r15d
                mov     r14d, r15d
                shr     rdx, 3
                mov     eax, edx
                mov     edx, [rbx+0Ch]
                lea     rcx, [rax+rax*2]
                mov     eax, [rbx+8]
                lea     r11, [r8+rcx*4]
                mov     ecx, [rbx+10h]
                cmp     ecx, eax
                cmovbe  ecx, eax
                add     ecx, edx

loc_140A1D534:                          ; CODE XREF: sub_140A1D354+209↓j
                mov     eax, [r8]
                mov     r10, rdi
                mov     r9, rdi
                cmp     eax, edx
                jb      short loc_140A1D552
                cmp     eax, ecx
                jnb     short loc_140A1D55F
                test    r9, r9
                mov     rdi, r8
                mov     r14, r8
                cmovnz  rdi, r9

loc_140A1D552:                          ; CODE XREF: sub_140A1D354+1EB↑j
                cmp     eax, ecx
                jnb     short loc_140A1D55F
                add     r8, 0Ch
                cmp     r8, r11
                jnz     short loc_140A1D534

loc_140A1D55F:                          ; CODE XREF: sub_140A1D354+1EF↑j
                                        ; sub_140A1D354+200↑j
                test    rdi, rdi
                jnz     short loc_140A1D570
                mov     r9, 0FFFFFFFFC00000FFh
                jmp     loc_140A1DB2D
; ---------------------------------------------------------------------------

loc_140A1D570:                          ; CODE XREF: sub_140A1D354+20E↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mul     rdx
                mov     rcx, rdx
                mov     [rbp+57h+var_50], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 5
                jnb     loc_140A1DB12
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mul     rdx
                mov     rcx, rdx
                mov     [rbp+57h+var_48], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, 5
                ja      loc_140A1D691
                jz      short loc_140A1D67D
                test    ecx, ecx
                jz      short loc_140A1D669
                sub     ecx, 1
                jz      short loc_140A1D656
                sub     ecx, 1
                jz      short loc_140A1D642
                cmp     ecx, 1
                jz      short loc_140A1D62A
                mov     [rbp+57h+var_98], 67076494h
                mov     r10d, [rbp+57h+var_98]
                rol     r10d, 4
                jmp     loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D62A:                          ; CODE XREF: sub_140A1D354+2C0↑j
                mov     [rbp+57h+var_94], 0A8223938h
                mov     r10d, [rbp+57h+var_94]
                xor     r10d, 3
                ror     r10d, 0Fh
                jmp     loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D642:                          ; CODE XREF: sub_140A1D354+2BB↑j
                mov     [rbp+57h+var_90], 85B5910Dh
                mov     r10d, [rbp+57h+var_90]
                ror     r10d, 2
                jmp     loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D656:                          ; CODE XREF: sub_140A1D354+2B6↑j
                mov     [rbp+57h+var_8C], 0B2AD31A1h
                mov     r10d, [rbp+57h+var_8C]
                rol     r10d, 1
                jmp     loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D669:                          ; CODE XREF: sub_140A1D354+2B1↑j
                mov     [rbp+57h+var_88], 0D098D0D8h
                mov     r10d, [rbp+57h+var_88]
                ror     r10d, 6
                jmp     loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D67D:                          ; CODE XREF: sub_140A1D354+2AD↑j
                mov     [rbp+57h+var_84], 288C49EDh
                mov     r10d, [rbp+57h+var_84]
                ror     r10d, 5
                jmp     loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D691:                          ; CODE XREF: sub_140A1D354+2A7↑j
                sub     ecx, 6
                jz      loc_140A1D789
                sub     ecx, 1
                jz      loc_140A1D778
                sub     ecx, 1
                jz      loc_140A1D767
                cmp     ecx, 1
                jz      loc_140A1D752
                rdtsc
                shl     rdx, 20h
                mov     r11d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mul     rdx
                mov     r10, rdx
                xor     r10d, eax
                mov     eax, r11d
                mul     r10d
                mov     ecx, r10d
                shr     r10d, 5
                shr     edx, 3
                mov     r9d, r10d
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r11d
                mul     r10d
                shr     r10d, 5
                add     ecx, 61h ; 'a'
                shr     edx, 3
                mov     r8d, r10d
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     r9d, eax
                mov     eax, r11d
                mul     r10d
                shr     r10d, 5
                add     r9d, 41h ; 'A'
                shr     edx, 3
                or      r9d, ecx
                imul    ecx, edx, 1Ah
                mov     eax, r11d
                mul     r10d
                sub     r8d, ecx
                shl     r9d, 8
                add     r8d, 61h ; 'a'
                shr     edx, 3
                imul    eax, edx, 1Ah
                or      r8d, r9d
                shl     r8d, 8
                sub     r10d, eax
                add     r10d, 41h ; 'A'
                or      r10d, r8d
                jmp     short loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D752:                          ; CODE XREF: sub_140A1D354+35B↑j
                mov     [rbp+57h+var_80], 0B0869E85h
                mov     r10d, [rbp+57h+var_80]
                xor     r10d, 9
                ror     r10d, 21h
                jmp     short loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D767:                          ; CODE XREF: sub_140A1D354+352↑j
                mov     [rbp+57h+var_7C], 64664142h
                mov     r10d, [rbp+57h+var_7C]
                ror     r10d, 8
                jmp     short loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D778:                          ; CODE XREF: sub_140A1D354+349↑j
                mov     [rbp+57h+var_78], 82C6A6D8h
                mov     r10d, [rbp+57h+var_78]
                rol     r10d, 7
                jmp     short loc_140A1D79C
; ---------------------------------------------------------------------------

loc_140A1D789:                          ; CODE XREF: sub_140A1D354+340↑j
                mov     [rbp+57h+var_74], 4E574672h
                mov     r10d, [rbp+57h+var_74]
                xor     r10d, 6
                ror     r10d, 18h

loc_140A1D79C:                          ; CODE XREF: sub_140A1D354+2D1↑j
                                        ; sub_140A1D354+2E9↑j ...
                mov     r8d, r10d
                mov     edx, 0D8h
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A1DB12
                lea     rcx, [rax+40h]
                call    KeInitializeTimer
                lea     rax, sub_1403DB5D0
                mov     dword ptr [rbx], 113h
                mov     [rbx+18h], rax
                mov     r8d, 1
                mov     [rbx+20h], rbx
                mov     [rbx+38h], r15
                mov     [rbx+10h], r15
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mul     rdx
                xor     rdx, rax
                mov     [rbx+0A0h], rdx
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mul     rdx
                mov     rcx, rdx
                xor     rcx, rax
                mov     rax, 410410410410411h
                mul     rcx
                mov     rax, rcx
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                shr     rax, 5
                imul    rax, 3Fh ; '?'
                sub     rcx, rax
                add     cl, r8b
                mov     [rbx+0A8h], cl
                rdtsc
                shl     rdx, 20h
                sub     r14, rdi
                or      rax, rdx
                mov     [rbx+88h], r13
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r12
                xor     rdx, rcx
                mul     rdx
                mov     r8, rax
                mov     r9, rdx
                xor     r9, r8
                mov     rax, 2AAAAAAAAAAAAAABh
                imul    r14
                mov     rax, r9
                sar     rdx, 1
                mov     rcx, rdx
                shr     rcx, 3Fh
                add     rcx, rdx
                xor     edx, edx
                mov     ecx, ecx
                div     rcx
                mov     eax, edx
                mov     rdx, r13
                lea     rcx, [rax+rax*2]
                lea     rcx, [rdi+rcx*4]
                call    sub_1402AE7D0
                mov     rdx, [rbx+88h]
                mov     rcx, rax
                mov     r8d, [rax]
                add     r8, rdx
                call    sub_1403CF560
                movzx   r12d, byte ptr [rbx+0A8h]
                mov     rdi, rax
                mov     r15, [rbx+0A0h]
                mov     r10d, r12d
                mov     [rbx+80h], rax
                mov     ecx, [rax]
                mov     r14d, [rax+4]
                mov     r13d, ecx
                add     r13, [rbx+88h]
                sub     r14d, ecx
                mov     ecx, r14d
                mov     r9, r13
                add     rcx, r13
                mov     [rbp+57h+arg_0], r12d
                mov     rax, r13
                cmp     r13, rcx
                jnb     short loc_140A1D925

loc_140A1D919:                          ; CODE XREF: sub_140A1D354+5CF↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A1D919

loc_140A1D925:                          ; CODE XREF: sub_140A1D354+5C3↑j
                mov     r11d, r14d
                mov     r8, r15
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A1D997
                mov     rsi, 7010008004002001h
                mov     r12d, 1

loc_140A1D944:                          ; CODE XREF: sub_140A1D354+639↓j
                mov     eax, 8

loc_140A1D949:                          ; CODE XREF: sub_140A1D354+60C↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                xor     r8, [r9+8]
                add     r9, 10h
                rol     r8, cl
                sub     rax, r12
                jnz     short loc_140A1D949
                mov     rcx, r9
                sub     rcx, r13
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r10d, edx
                xor     r10d, eax
                and     r10d, 3Fh
                cmovz   r10d, r12d
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A1D944
                mov     rsi, [rbp+57h+var_68]
                mov     r12d, [rbp+57h+arg_0]

loc_140A1D997:                          ; CODE XREF: sub_140A1D354+5DE↑j
                mov     edx, r14d
                mov     r11d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A1D9C3
                mov     eax, edx
                shr     rax, 3

loc_140A1D9AE:                          ; CODE XREF: sub_140A1D354+66D↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r11
                jnz     short loc_140A1D9AE

loc_140A1D9C3:                          ; CODE XREF: sub_140A1D354+652↑j
                test    edx, edx
                jz      short loc_140A1D9DC

loc_140A1D9C7:                          ; CODE XREF: sub_140A1D354+686↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r11
                rol     r8, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A1D9C7

loc_140A1D9DC:                          ; CODE XREF: sub_140A1D354+671↑j
                lea     rcx, [rdi+0Ch]
                mov     [rbx+98h], r8
                mov     rax, rdi
                cmp     rdi, rcx
                jnb     short loc_140A1D9FB

loc_140A1D9EF:                          ; CODE XREF: sub_140A1D354+6A5↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A1D9EF

loc_140A1D9FB:                          ; CODE XREF: sub_140A1D354+699↑j
                xor     r8, [rdi]
                mov     ecx, r12d
                rol     r8, cl
                mov     edx, 4
                add     rdi, 8

loc_140A1DA0D:                          ; CODE XREF: sub_140A1D354+6CB↓j
                movzx   eax, byte ptr [rdi]
                mov     ecx, r12d
                xor     r8, rax
                add     rdi, r11
                rol     r8, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A1DA0D
                mov     eax, [rbp+57h+var_70]
                mov     [rbx+0ACh], eax
                mov     [rbx+98h], r8
                mov     [rbx+90h], r14d
                call    sub_140A76080
                xor     ecx, ecx
                test    eax, eax
                setnz   cl
                mov     [rbx+0B0h], ecx
                cmp     rsi, 32h ; '2'
                jb      short loc_140A1DA6D
                and     qword ptr [rbx+0B8h], 0
                lea     rax, sub_1405CC010
                mov     [rbx+0C8h], rax
                mov     [rbx+0D0h], rbx

loc_140A1DA6D:                          ; CODE XREF: sub_140A1D354+6FA↑j
                rdtsc
                shl     rdx, 20h
                mov     r9, 7010008004002001h
                or      rax, rdx
                mov     r10, 0FFFFFFFFB8797400h
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r9
                xor     rdx, rcx
                mul     rdx
                mov     r8, rdx
                xor     r8, rax
                mov     rax, 0ABCC77118461CEFDh
                mul     r8
                shr     rdx, 1Ah
                imul    rcx, rdx, 5F5E100h
                sub     r8, rcx
                sub     r10, r8
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     [rsp+0F0h+var_D0], rbx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r9
                xor     rdx, rcx
                lea     rcx, [rbx+40h]
                mul     rdx
                mov     r8, rdx
                xor     r8, rax
                mov     rax, 346DC5D63886594Bh
                mul     r8
                shr     rdx, 0Bh
                imul    rax, rdx, 2710h
                mov     rdx, r10
                sub     r8, rax
                mov     r9d, r8d
                xor     r8d, r8d
                call    KeSetCoalescableTimer

loc_140A1DB12:                          ; CODE XREF: sub_140A1D354+26↑j
                                        ; sub_140A1D354+E6↑j ...
                add     rsp, 0B8h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_140A1DB26:                          ; CODE XREF: sub_140A1D354+19C↑j
                                        ; sub_140A1D354+1A6↑j
                mov     r9, 0FFFFFFFFC000007Bh

loc_140A1DB2D:                          ; CODE XREF: sub_140A1D354+217↑j
                mov     [rbp+57h+var_6C], 0D0002D61h
                mov     r8, rbx
                mov     ecx, [rbp+57h+var_6C]
                mov     edx, 6
                xor     ecx, 2D72h
                mov     [rsp+0F0h+var_D0], r15
                ror     ecx, 5Ch
                call    KeBugCheckEx
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1D354   endp

byte_140A1DB53  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C960↑o

; =============== S U B R O U T I N E =======================================


sub_140A1DB5C   proc near               ; CODE XREF: sub_140A4E488:loc_140A4E51F↓p
                                        ; DATA XREF: .pdata:000000014012C96C↑o
                sub     rsp, 28h
                call    sub_140A75BB8
                test    eax, eax
                jnz     short loc_140A1DB87
                call    sub_140A43960
                test    eax, eax
                jns     short loc_140A1DB87
                cmp     cs:dword_140CFC3C0, 0
                jnz     short loc_140A1DB87
                lea     rcx, sub_140A11D10
                call    sub_140A95070

loc_140A1DB87:                          ; CODE XREF: sub_140A1DB5C+B↑j
                                        ; sub_140A1DB5C+14↑j ...
                add     rsp, 28h
                retn
sub_140A1DB5C   endp

; ---------------------------------------------------------------------------
algn_140A1DB8C:                         ; DATA XREF: .pdata:000000014012C96C↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_140A1DBA0   proc near               ; CODE XREF: sub_140A612C0+1A781↓p
                                        ; DATA XREF: .rdata:00000001400B1924↑o ...

var_100         = qword ptr -100h
var_F8          = dword ptr -0F8h
var_F0          = word ptr -0F0h
var_E0          = dword ptr -0E0h
var_DC          = dword ptr -0DCh
var_D8          = dword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = dword ptr -0C8h
var_C4          = byte ptr -0C4h
var_C0          = dword ptr -0C0h
var_BC          = dword ptr -0BCh
var_B8          = dword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = dword ptr -0A8h
var_A4          = byte ptr -0A4h
var_A0          = dword ptr -0A0h
var_9C          = dword ptr -9Ch
var_98          = dword ptr -98h
var_90          = qword ptr -90h
var_88          = dword ptr -88h
var_84          = byte ptr -84h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = dword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_50          = xmmword ptr -50h
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = qword ptr  20h
arg_18          = qword ptr  28h

                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-1Fh]
                sub     rsp, 0E8h
                mov     rsi, rcx
                call    KdDisableDebugger
                lea     rcx, sub_140A1DBA0
                mov     r12d, eax
                call    sub_140A75DBC
                cli
                xor     r13d, r13d
                cmp     cs:KdDebuggerNotPresent, r13b
                jnz     short loc_140A1DBDF

loc_140A1DBDD:                          ; CODE XREF: sub_140A1DBA0:loc_140A1DBDD↓j
                jmp     short loc_140A1DBDD
; ---------------------------------------------------------------------------

loc_140A1DBDF:                          ; CODE XREF: sub_140A1DBA0+3B↑j
                sti
                rdtsc
                shl     rdx, 20h
                mov     rdi, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, rdi
                xor     rdx, rcx
                mul     rdx
                mov     rbx, rdx
                mov     [rbp+57h+arg_8], rdx
                xor     rbx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rbx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rbx, rax
                cmp     rbx, 6
                sbb     r14d, r14d
                neg     r14d
                inc     r14d
                cmp     cs:qword_140CFC3C8, r13
                jnz     loc_140A1DD05
                test    rsi, rsi
                jnz     loc_140A1DD05
                cmp     cs:dword_140CFC3C0, r13d
                jnz     loc_140A1DD05
                cmp     cs:dword_140D58260, r13d
                jz      loc_140A1DD05
                lea     rax, aTv_2      ; "TV"
                mov     [rbp+57h+var_70], 30h ; '0'
                xorps   xmm0, xmm0
                mov     [rbp+57h+var_60], rax
                xor     r9d, r9d
                mov     [rbp+57h+var_68], r13
                xor     r8d, r8d
                mov     [rbp+57h+var_58], 40h ; '@'
                lea     rdx, [rbp+57h+var_70]
                lea     rcx, [rbp+57h+arg_0]
                movdqu  [rbp+57h+var_50], xmm0
                call    ExCreateCallback
                test    eax, eax
                js      short loc_140A1DD05
                mov     rcx, [rbp+57h+arg_0]
                lea     r8, qword_140D58630
                lea     rdx, sub_1403DDA90
                call    ExNotifyCallback
                mov     rcx, [rbp+57h+arg_0]
                call    PsDereferenceSiloContext
                cmp     cs:qword_140D58630, r13
                jz      short loc_140A1DCD7
                mov     cs:dword_140CFC3C0, 1

loc_140A1DCD7:                          ; CODE XREF: sub_140A1DBA0+12B↑j
                mov     [rsp+120h+var_F0], r13w
                lea     rcx, unk_140C12FC0
                mov     [rsp+120h+var_F8], 746E494Bh
                mov     r9d, 200h
                xor     r8d, r8d
                mov     [rsp+120h+var_100], 0AF0h
                xor     edx, edx
                call    ExInitializeNPagedLookasideList

loc_140A1DD05:                          ; CODE XREF: sub_140A1DBA0+9F↑j
                                        ; sub_140A1DBA0+A8↑j ...
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, rdi
                xor     rdx, rcx
                mul     rdx
                mov     r10, rdx
                mov     [rbp+57h+arg_10], rdx
                mov     r9, rax
                rdtsc
                shl     rdx, 20h
                xor     r10, r9
                or      rax, rdx
                mov     [rsp+120h+var_D8], r14d
                mov     rcx, rax
                mov     [rbp+57h+var_D0], rsi
                mov     r8, rax
                ror     rcx, 3
                xor     r8, rcx
                mov     [rbp+57h+var_C8], 1
                mov     rax, rdi
                mov     [rbp+57h+var_C4], r13b
                mul     r8
                mov     r8d, 0C000h
                lea     rcx, sub_140A399E0
                mov     r15, rdx
                mov     [rbp+57h+arg_18], rdx
                xor     r15, rax
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     r15
                shr     rdx, 2
                lea     rax, [rdx+rdx*2]
                add     rax, rax
                sub     r15, rax
                mov     rax, 4EC4EC4EC4EC4EC5h
                mul     r10
                mov     [rsp+120h+var_DC], r15d
                shr     rdx, 2
                imul    rax, rdx, 0Dh
                lea     rdx, [rsp+120h+var_E0]
                sub     r10, rax
                mov     [rsp+120h+var_E0], r10d
                call    KeExpandKernelStackAndCallout
                movzx   edi, [rbp+57h+var_C4]
                test    eax, eax
                cmovs   edi, r13d
                mov     [rbp+57h+var_C4], dil
                test    dil, dil
                jz      loc_140A1DF98
                cmp     rbx, 6
                jnb     loc_140A1DEB0
                rdtsc
                shl     rdx, 20h
                mov     r9, 7010008004002001h
                or      rax, rdx
                mov     r10, 0AAAAAAAAAAAAAAABh
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r9
                xor     rdx, rcx
                mul     rdx
                mov     r8, rdx
                mov     [rbp+57h+var_80], rdx
                xor     r8, rax
                mov     rax, 4EC4EC4EC4EC4EC5h
                mul     r8
                shr     rdx, 2
                imul    rax, rdx, 0Dh
                sub     r8, rax

loc_140A1DE2F:                          ; CODE XREF: sub_140A1DBA0+2D1↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r9
                xor     rdx, rcx
                mul     rdx
                mov     rcx, rdx
                mov     [rbp+57h+var_78], rdx
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                shr     rdx, 2
                lea     rax, [rdx+rdx*2]
                add     rax, rax
                sub     rcx, rax
                test    r15d, r15d
                jz      short loc_140A1DE73
                cmp     ecx, r15d
                jz      short loc_140A1DE2F

loc_140A1DE73:                          ; CODE XREF: sub_140A1DBA0+2CC↑j
                mov     [rbp+57h+var_C0], r8d
                lea     rdx, [rbp+57h+var_C0]
                mov     [rbp+57h+var_BC], ecx
                mov     r8d, 0C000h
                lea     rcx, sub_140A399E0
                mov     [rbp+57h+var_B8], r14d
                mov     [rbp+57h+var_B0], rsi
                mov     [rbp+57h+var_A8], r13d
                mov     [rbp+57h+var_A4], r13b
                call    KeExpandKernelStackAndCallout
                movzx   ecx, [rbp+57h+var_A4]
                test    eax, eax
                cmovs   ecx, r13d
                mov     [rbp+57h+var_A4], cl
                mov     dil, cl

loc_140A1DEB0:                          ; CODE XREF: sub_140A1DBA0+237↑j
                test    dil, dil
                jz      loc_140A1DF98
                cmp     cs:qword_140CFC3C8, r13
                jnz     short loc_140A1DF2C
                test    rsi, rsi
                jnz     short loc_140A1DF2C
                call    sub_140A43960
                test    eax, eax
                jns     short loc_140A1DED9
                cmp     cs:dword_140CFC3C0, r13d
                jz      short loc_140A1DF2C

loc_140A1DED9:                          ; CODE XREF: sub_140A1DBA0+32E↑j
                mov     [rbp+57h+var_A0], r13d
                mov     [rbp+57h+var_9C], 7
                mov     [rbp+57h+var_98], 1
                mov     [rbp+57h+var_90], r13
                call    sub_140A43960
                test    eax, eax
                mov     [rbp+57h+var_84], r13b
                mov     edx, 8
                lea     rcx, sub_140A399E0
                cmovns  edx, r13d
                mov     r8d, 0C000h
                mov     [rbp+57h+var_88], edx
                lea     rdx, [rbp+57h+var_A0]
                call    KeExpandKernelStackAndCallout
                movzx   ecx, [rbp+57h+var_84]
                test    eax, eax
                cmovs   ecx, r13d
                mov     [rbp+57h+var_84], cl
                mov     dil, cl

loc_140A1DF2C:                          ; CODE XREF: sub_140A1DBA0+320↑j
                                        ; sub_140A1DBA0+325↑j ...
                test    dil, dil
                jz      short loc_140A1DF98
                test    rsi, rsi
                jnz     short loc_140A1DF98
                mov     rcx, cs:qword_140D58650
                test    rcx, rcx
                jz      short loc_140A1DF47
                call    ExFreePoolWithTag

loc_140A1DF47:                          ; CODE XREF: sub_140A1DBA0+3A0↑j
                mov     ecx, 18h
                lea     rax, qword_140D58648
                lea     edx, [rcx-15h]

loc_140A1DF56:                          ; CODE XREF: sub_140A1DBA0+3C4↓j
                mov     [rax], r13
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, 1
                jnz     short loc_140A1DF56
                test    ecx, ecx
                jz      short loc_140A1DF75

loc_140A1DF6A:                          ; CODE XREF: sub_140A1DBA0+3D3↓j
                mov     [rax], r13b
                inc     rax
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A1DF6A

loc_140A1DF75:                          ; CODE XREF: sub_140A1DBA0+3C8↑j
                mov     cs:dword_140D5863C, r13d
                mov     cs:dword_140D58638, r13d
                mov     cs:qword_140D58640, r13
                mov     cs:dword_140C12F00, r13d
                mov     cs:qword_140D58080, r13

loc_140A1DF98:                          ; CODE XREF: sub_140A1DBA0+22D↑j
                                        ; sub_140A1DBA0+313↑j ...
                test    dil, dil
                mov     ebx, r13d
                setnz   bl
                cli
                cmp     cs:KdDebuggerNotPresent, r13b
                jnz     short loc_140A1DFAD

loc_140A1DFAB:                          ; CODE XREF: sub_140A1DBA0:loc_140A1DFAB↓j
                jmp     short loc_140A1DFAB
; ---------------------------------------------------------------------------

loc_140A1DFAD:                          ; CODE XREF: sub_140A1DBA0+409↑j
                sti
                cli
                cmp     cs:KdDebuggerNotPresent, r13b
                jnz     short loc_140A1DFBA

loc_140A1DFB8:                          ; CODE XREF: sub_140A1DBA0:loc_140A1DFB8↓j
                jmp     short loc_140A1DFB8
; ---------------------------------------------------------------------------

loc_140A1DFBA:                          ; CODE XREF: sub_140A1DBA0+416↑j
                sti
                test    r12d, r12d
                js      short loc_140A1DFC5
                call    KdEnableDebugger

loc_140A1DFC5:                          ; CODE XREF: sub_140A1DBA0+41E↑j
                mov     eax, ebx
                add     rsp, 0E8h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
sub_140A1DBA0   endp

; ---------------------------------------------------------------------------
byte_140A1DFDB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C978↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=70h

sub_140A1DFE4   proc near               ; CODE XREF: sub_1403DDA90+3214↑p
                                        ; sub_1409FA010+3952↑p ...

var_158         = qword ptr -158h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = dword ptr -138h
var_134         = dword ptr -134h
var_130         = dword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = dword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F0          = qword ptr -0F0h
var_E8          = xmmword ptr -0E8h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = byte ptr -68h
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = dword ptr  20h
arg_18          = qword ptr  28h

                mov     rax, rsp
                mov     [rax+18h], r8d
                mov     [rax+10h], rdx
                mov     [rax+8], rcx
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-78h]
                sub     rsp, 138h
                mov     rbx, [rcx]
                mov     r14, rdx
                mov     rcx, rdx
                mov     rax, [rbx+1F8h]
                call    j__guard_dispatch_icall_nop
                xor     r15d, r15d
                mov     r13, rax
                test    rax, rax
                jz      loc_140A1EE97
                mov     rax, [rbx+2A8h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     dword ptr [rsp+170h+var_128], eax
                movzx   eax, word ptr [r13+6]
                mov     word ptr [rbp+70h+arg_18], ax
                test    ax, ax
                jz      loc_140A1EE40
                cmp     dword ptr [r13+38h], 1000h
                jb      loc_140A1EE40
                test    r14, 0FFFh
                jnz     loc_140A1EE40
                mov     eax, [r13+54h]
                mov     edi, 0C0000225h
                mov     rcx, [rbx+540h]
                mov     [rsp+44h], eax
                mov     rsi, cr8
                lea     eax, [r15+0Fh]
                mov     cr8, rax
                mov     rax, [rbx+150h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rbx+610h]
                lea     r12d, [r15+18h]
                mov     rcx, [rax]
                mov     eax, [rcx]
                lea     rdx, [rcx+10h]
                lea     rcx, [rax+rax*2]
                lea     rax, [rdx+rcx*8]

loc_140A1E0B9:                          ; CODE XREF: sub_140A1DFE4+E3↓j
                cmp     [rdx+8], r14
                jz      short loc_140A1E0C9
                add     rdx, r12
                cmp     rdx, rax
                jnb     short loc_140A1E0DD
                jmp     short loc_140A1E0B9
; ---------------------------------------------------------------------------

loc_140A1E0C9:                          ; CODE XREF: sub_140A1DFE4+D9↑j
                movups  xmm0, xmmword ptr [rdx]
                mov     edi, r15d
                movsd   xmm1, qword ptr [rdx+10h]
                movups  [rbp+70h+var_E8], xmm0
                movsd   [rbp+70h+var_D8], xmm1

loc_140A1E0DD:                          ; CODE XREF: sub_140A1DFE4+E1↑j
                mov     rcx, [rbx+540h]
                mov     rax, [rbx+190h]
                call    j__guard_dispatch_icall_nop
                movzx   eax, sil
                mov     cr8, rax
                or      r10d, 0FFFFFFFFh
                xor     r9d, r9d
                mov     esi, 1
                mov     r11d, 0FFFFFFF8h
                test    edi, edi
                jns     short loc_140A1E147
                mov     ecx, r12d
                lea     rax, [rbp+70h+var_E8]
                lea     edx, [rsi+2]

loc_140A1E118:                          ; CODE XREF: sub_140A1DFE4+141↓j
                mov     [rax], r9
                add     ecx, r11d
                add     rax, 8
                sub     rdx, rsi
                jnz     short loc_140A1E118
                test    ecx, ecx
                jz      short loc_140A1E136

loc_140A1E12B:                          ; CODE XREF: sub_140A1DFE4+150↓j
                mov     [rax], r9b
                add     rax, rsi
                add     ecx, r10d
                jnz     short loc_140A1E12B

loc_140A1E136:                          ; CODE XREF: sub_140A1DFE4+145↑j
                mov     eax, [r13+50h]
                mov     dword ptr [rbp+70h+var_D8], eax
                mov     qword ptr [rbp+70h+var_E8+8], r14
                mov     qword ptr [rbp+70h+var_E8], rsi
                jmp     short loc_140A1E14A
; ---------------------------------------------------------------------------

loc_140A1E147:                          ; CODE XREF: sub_140A1DFE4+128↑j
                mov     eax, dword ptr [rbp+70h+var_D8]

loc_140A1E14A:                          ; CODE XREF: sub_140A1DFE4+161↑j
                mov     edi, [rbx+7E4h]
                mov     rcx, r14
                and     ecx, 0FFFh
                add     rcx, 0FFFh
                add     rax, rcx
                mov     ecx, [rbx+924h]
                shr     rax, 0Ch
                mov     [rsp+170h+var_118], rax
                lea     r15d, [rax+rax*4]
                mov     eax, dword ptr [rsp+170h+var_128]
                shl     r15d, 2
                neg     eax
                lea     eax, [rdi+30h]
                sbb     r8d, r8d
                add     eax, r15d
                neg     r8d
                add     r8d, 21h ; '!'
                mov     dword ptr [rsp+170h+var_140], r8d
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A1E28F
                mov     r8d, ecx
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r9d, r9d
                mov     [rsp+170h+var_100], rax
                mov     r14, rax
                test    rax, rax
                jz      loc_140A1ECB3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A1E276
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A1E208
                mov     ecx, eax
                shr     rcx, 3

loc_140A1E1F9:                          ; CODE XREF: sub_140A1DFE4+222↓j
                mov     [rbx], r9
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, rsi
                jnz     short loc_140A1E1F9

loc_140A1E208:                          ; CODE XREF: sub_140A1DFE4+20D↑j
                test    eax, eax
                jz      short loc_140A1E217

loc_140A1E20C:                          ; CODE XREF: sub_140A1DFE4+231↓j
                mov     [rbx], r9b
                add     rbx, rsi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A1E20C

loc_140A1E217:                          ; CODE XREF: sub_140A1DFE4+226↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A1E25D
                test    dword ptr [r14+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A1E254
                mov     rax, [r14+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A1E26C
; ---------------------------------------------------------------------------

loc_140A1E254:                          ; CODE XREF: sub_140A1DFE4+259↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A1E264
; ---------------------------------------------------------------------------

loc_140A1E25D:                          ; CODE XREF: sub_140A1DFE4+244↑j
                mov     rax, [r14+368h]

loc_140A1E264:                          ; CODE XREF: sub_140A1DFE4+277↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A1E26C:                          ; CODE XREF: sub_140A1DFE4+26E↑j
                mov     [r14+924h], ebx
                xor     r9d, r9d

loc_140A1E276:                          ; CODE XREF: sub_140A1DFE4+1E7↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                mov     r11d, 0FFFFFFF8h
                mov     r8d, dword ptr [rsp+170h+var_140]
                or      r10d, 0FFFFFFFFh
                jmp     short loc_140A1E29D
; ---------------------------------------------------------------------------

loc_140A1E28F:                          ; CODE XREF: sub_140A1DFE4+1B7↑j
                mov     r14, rbx
                mov     [rsp+170h+var_100], rbx
                mov     [rbx+7E4h], eax

loc_140A1E29D:                          ; CODE XREF: sub_140A1DFE4+2A9↑j
                add     [r14+80Ch], esi
                mov     ecx, 30h ; '0'
                add     rdi, r14
                mov     [rbp+70h+var_90], rdi
                mov     rax, rdi
                lea     edx, [rcx-2Ah]

loc_140A1E2B6:                          ; CODE XREF: sub_140A1DFE4+2DF↓j
                mov     [rax], r9
                add     ecx, r11d
                add     rax, 8
                sub     rdx, rsi
                jnz     short loc_140A1E2B6
                test    ecx, ecx
                jz      short loc_140A1E2D4

loc_140A1E2C9:                          ; CODE XREF: sub_140A1DFE4+2EE↓j
                mov     [rax], r9b
                add     rax, rsi
                add     ecx, r10d
                jnz     short loc_140A1E2C9

loc_140A1E2D4:                          ; CODE XREF: sub_140A1DFE4+2E3↑j
                mov     [rdi], r8d
                mov     [rdi+8], r9
                mov     [rdi+10h], r9d
                mov     rcx, [r14+818h]
                mov     rax, rcx
                jmp     short loc_140A1E2ED
; ---------------------------------------------------------------------------

loc_140A1E2EB:                          ; CODE XREF: sub_140A1DFE4+310↓j
                xor     ecx, eax

loc_140A1E2ED:                          ; CODE XREF: sub_140A1DFE4+305↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A1E2EB
                mov     rax, [rbp+70h+arg_0]
                lea     rdx, [rdi+18h]
                btr     ecx, 1Fh
                mov     [rbp+70h+var_88], rdi
                mov     [rdi+14h], ecx
                mov     r8d, 3
                lea     rcx, [rbp+70h+var_E8]
                mov     [rax], r14

loc_140A1E319:                          ; CODE XREF: sub_140A1DFE4+349↓j
                mov     rax, [rcx]
                add     r12d, r11d
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r8, rsi
                jnz     short loc_140A1E319
                test    r12d, r12d
                jz      short loc_140A1E343

loc_140A1E334:                          ; CODE XREF: sub_140A1DFE4+35D↓j
                mov     al, [rcx]
                add     rcx, rsi
                mov     [rdx], al
                add     rdx, rsi
                add     r12d, r10d
                jnz     short loc_140A1E334

loc_140A1E343:                          ; CODE XREF: sub_140A1DFE4+34E↑j
                mov     rax, [r14+1F0h]
                lea     r9, [rsp+170h+var_130]
                mov     rcx, [rbp+70h+arg_8]
                mov     r8d, 0Ch
                mov     dl, sil
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                mov     [rsp+170h+var_120], rax
                neg     rax
                sbb     ecx, ecx
                and     [rsp+170h+var_130], ecx
                and     [rbp+70h+arg_10], esi
                jnz     short loc_140A1E38F
                xor     r12d, r12d
                mov     ebx, r12d
                mov     [rsp+170h+var_130], r12d
                mov     [rsp+170h+var_120], rbx
                jmp     short loc_140A1E392
; ---------------------------------------------------------------------------

loc_140A1E38F:                          ; CODE XREF: sub_140A1DFE4+397↑j
                xor     r12d, r12d

loc_140A1E392:                          ; CODE XREF: sub_140A1DFE4+3A9↑j
                mov     eax, dword ptr [rsp+170h+var_118]
                lea     rdx, [rdi+30h]
                mov     [rsp+78h], rdx
                mov     qword ptr [rsp+170h+var_138], rdx
                lea     rcx, [rax+rax*4]
                lea     rax, [rdx+rcx*4]
                mov     qword ptr [rsp+170h+var_110], rax
                mov     rax, rdx
                cmp     r15d, 8
                jb      short loc_140A1E3D5
                mov     ecx, r15d
                shr     rcx, 3

loc_140A1E3C1:                          ; CODE XREF: sub_140A1DFE4+3EF↓j
                mov     qword ptr [rax], 0FFFFFFFFFFFFFFFFh
                add     r15d, 0FFFFFFF8h
                add     rax, 8
                sub     rcx, rsi
                jnz     short loc_140A1E3C1

loc_140A1E3D5:                          ; CODE XREF: sub_140A1DFE4+3D4↑j
                test    r15d, r15d
                jz      short loc_140A1E3E6

loc_140A1E3DA:                          ; CODE XREF: sub_140A1DFE4+400↓j
                mov     byte ptr [rax], 0FFh
                add     rax, rsi
                add     r15d, 0FFFFFFFFh
                jnz     short loc_140A1E3DA

loc_140A1E3E6:                          ; CODE XREF: sub_140A1DFE4+3F4↑j
                movzx   eax, word ptr [rbp+70h+arg_18]
                mov     r11d, r12d
                movzx   edi, word ptr [r13+14h]
                mov     edx, 4154h
                add     rdi, 18h
                mov     r8d, 7877h
                add     rdi, r13
                mov     r9d, 7277h
                lea     rcx, [rax+rax*4]
                mov     r10d, 7777h
                lea     rax, [rdi+rcx*8]
                mov     [rsp+170h+var_118], rax
                mov     eax, [rdi+24h]
                bt      eax, 19h
                jb      loc_140A1E576
                mov     ecx, [rdi]
                cmp     ecx, 54494E49h
                jnz     short loc_140A1E444
                cmp     dword ptr [rdi+4], 4742444Bh
                jz      loc_140A1E576

loc_140A1E444:                          ; CODE XREF: sub_140A1DFE4+451↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A1E46E
                movzx   eax, word ptr [rdi+4]
                cmp     ax, r8w
                jz      loc_140A1E576
                cmp     ax, r9w
                jz      loc_140A1E576
                cmp     ax, r10w
                jz      loc_140A1E576

loc_140A1E46E:                          ; CODE XREF: sub_140A1DFE4+466↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A1E480
                cmp     [rdi+4], dx
                jz      loc_140A1E576

loc_140A1E480:                          ; CODE XREF: sub_140A1DFE4+490↑j
                mov     rax, [r14+938h]
                mov     r9, rdi
                mov     r8, [r14+930h]
                mov     r10d, 7
                mov     [rbp+70h+var_C8], rax
                sub     r9, r8
                mov     rax, [r14+940h]
                or      ebx, 0FFFFFFFFh
                mov     [rbp+70h+var_C0], rax
                mov     rax, [r14+948h]
                mov     [rbp+70h+var_B8], rax
                mov     [rbp+70h+var_D0], r8

loc_140A1E4BB:                          ; CODE XREF: sub_140A1DFE4+4EB↓j
                movzx   edx, byte ptr [r8+r9]
                movzx   eax, byte ptr [r8]
                add     r8, rsi
                cmp     rdx, rax
                jnz     short loc_140A1E4D6
                add     r10d, ebx
                jnz     short loc_140A1E4BB
                jmp     loc_140A1E571
; ---------------------------------------------------------------------------

loc_140A1E4D6:                          ; CODE XREF: sub_140A1DFE4+4E6↑j
                mov     r9, [rbp+70h+var_C8]
                mov     r8d, 8
                mov     r10, rdi

loc_140A1E4E3:                          ; CODE XREF: sub_140A1DFE4+51A↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A1E51F
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A1E4E3
                test    r8d, r8d
                jz      short loc_140A1E571

loc_140A1E505:                          ; CODE XREF: sub_140A1DFE4+537↓j
                movzx   edx, byte ptr [r10]
                add     r10, rsi
                movzx   eax, byte ptr [r9]
                add     r9, rsi
                cmp     rdx, rax
                jnz     short loc_140A1E51F
                add     r8d, ebx
                jnz     short loc_140A1E505
                jmp     short loc_140A1E571
; ---------------------------------------------------------------------------

loc_140A1E51F:                          ; CODE XREF: sub_140A1DFE4+510↑j
                                        ; sub_140A1DFE4+532↑j
                mov     r8, [rbp+70h+var_C0]
                mov     r9, rdi
                sub     r9, r8
                mov     r10d, 4

loc_140A1E52F:                          ; CODE XREF: sub_140A1DFE4+55F↓j
                movzx   edx, byte ptr [r8+r9]
                movzx   eax, byte ptr [r8]
                add     r8, rsi
                cmp     rdx, rax
                jnz     short loc_140A1E547
                add     r10d, ebx
                jnz     short loc_140A1E52F
                jmp     short loc_140A1E571
; ---------------------------------------------------------------------------

loc_140A1E547:                          ; CODE XREF: sub_140A1DFE4+55A↑j
                mov     r8, [rbp+70h+var_B8]
                mov     r9, rdi
                sub     r9, r8
                mov     r10d, 6

loc_140A1E557:                          ; CODE XREF: sub_140A1DFE4+58B↓j
                movzx   edx, byte ptr [r8+r9]
                movzx   eax, byte ptr [r8]
                add     r8, rsi
                cmp     rdx, rax
                jnz     loc_140A1E70E
                add     r10d, ebx
                jnz     short loc_140A1E557

loc_140A1E571:                          ; CODE XREF: sub_140A1DFE4+4ED↑j
                                        ; sub_140A1DFE4+51F↑j ...
                mov     rbx, [rsp+170h+var_120]

loc_140A1E576:                          ; CODE XREF: sub_140A1DFE4+443↑j
                                        ; sub_140A1DFE4+45A↑j ...
                mov     r11d, esi

loc_140A1E579:                          ; CODE XREF: sub_140A1DFE4+72F↓j
                cmp     [rdi+24h], r12d
                cmovl   r11d, esi
                test    r11d, r11d
                jz      short loc_140A1E5A9
                cmp     dword ptr [rdi], 54494E49h
                jnz     short loc_140A1E5A6
                cmp     dword ptr [rdi+4], 4742444Bh
                jnz     short loc_140A1E5A6
                test    dword ptr [r14+994h], 2000h
                cmovnz  r11d, r12d

loc_140A1E5A6:                          ; CODE XREF: sub_140A1DFE4+5A8↑j
                                        ; sub_140A1DFE4+5B1↑j
                test    r11d, r11d

loc_140A1E5A9:                          ; CODE XREF: sub_140A1DFE4+5A0↑j
                mov     ecx, [rdi+10h]
                setz    r12b
                mov     edx, [rdi+0Ch]
                mov     eax, [rdi+8]
                cmp     ecx, eax
                mov     dword ptr [rbp+70h+arg_18], edx
                cmovbe  ecx, eax
                lea     r15d, [rdx+0FFFh]
                add     r15d, ecx
                mov     rcx, rdi
                and     r15d, 0FFFFF000h
                call    sub_1406F4BAC
                mov     r8, [rbp+70h+arg_8]
                xor     r10d, r10d
                mov     rcx, qword ptr [rsp+170h+var_138]
                test    eax, eax
                mov     r9, qword ptr [rsp+170h+var_110]
                mov     r11d, r10d
                setnz   r11b
                mov     rax, r8
                mov     [rsp+170h+var_140], rax
                mov     r13d, r10d
                cmp     rcx, r9
                jz      loc_140A1E8F3
                add     rdi, 4

loc_140A1E60F:                          ; CODE XREF: sub_140A1DFE4+8FD↓j
                cmp     r13d, dword ptr [rbp+70h+arg_18]
                jb      loc_140A1E83F
                cmp     r13d, r15d
                jb      loc_140A1E82C
                lea     rax, [rdi+24h]
                cmp     rax, [rsp+170h+var_118]
                jz      loc_140A1E8B8
                cmp     r13d, [rdi+30h]
                jb      loc_140A1E8B8
                mov     eax, [rdi+48h]
                add     rdi, 28h ; '('
                mov     r11d, r10d
                bt      eax, 19h
                jb      loc_140A1E837
                lea     rbx, [rdi-4]
                mov     ecx, [rbx]
                cmp     ecx, 54494E49h
                jnz     short loc_140A1E66C
                cmp     dword ptr [rdi], 4742444Bh
                jz      loc_140A1E837

loc_140A1E66C:                          ; CODE XREF: sub_140A1DFE4+67A↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A1E6A1
                movzx   eax, word ptr [rdi]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_140A1E837
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_140A1E837
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_140A1E837

loc_140A1E6A1:                          ; CODE XREF: sub_140A1DFE4+68E↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A1E6B7
                mov     eax, 4154h
                cmp     [rdi], ax
                jz      loc_140A1E837

loc_140A1E6B7:                          ; CODE XREF: sub_140A1DFE4+6C3↑j
                mov     rax, [r14+938h]
                mov     r10, rbx
                mov     r8, [r14+930h]
                mov     r9d, 7
                mov     [rbp+70h+var_A8], rax
                sub     r10, r8
                mov     rax, [r14+940h]
                or      r15d, 0FFFFFFFFh
                mov     [rbp+70h+var_A0], rax
                mov     rax, [r14+948h]
                mov     [rbp+70h+var_98], rax
                mov     [rbp+70h+var_B0], r8

loc_140A1E6F3:                          ; CODE XREF: sub_140A1DFE4+723↓j
                movzx   edx, byte ptr [r8+r10]
                movzx   eax, byte ptr [r8]
                add     r8, rsi
                cmp     rdx, rax
                jnz     short loc_140A1E718
                add     r9d, r15d
                jnz     short loc_140A1E6F3
                jmp     loc_140A1E7AC
; ---------------------------------------------------------------------------

loc_140A1E70E:                          ; CODE XREF: sub_140A1DFE4+582↑j
                mov     rbx, [rsp+170h+var_120]
                jmp     loc_140A1E579
; ---------------------------------------------------------------------------

loc_140A1E718:                          ; CODE XREF: sub_140A1DFE4+71E↑j
                mov     r9, [rbp+70h+var_A8]
                mov     r8d, 8
                mov     r10, rbx

loc_140A1E725:                          ; CODE XREF: sub_140A1DFE4+75C↓j
                mov     rcx, [r10]
                add     r10, 8
                mov     rax, [r9]
                add     r9, 8
                cmp     rcx, rax
                jnz     short loc_140A1E761
                add     r8d, 0FFFFFFF8h
                cmp     r8d, 8
                jnb     short loc_140A1E725
                test    r8d, r8d
                jz      short loc_140A1E7AC

loc_140A1E747:                          ; CODE XREF: sub_140A1DFE4+779↓j
                movzx   edx, byte ptr [r10]
                add     r10, rsi
                movzx   eax, byte ptr [r9]
                add     r9, rsi
                cmp     rdx, rax
                jnz     short loc_140A1E761
                add     r8d, r15d
                jnz     short loc_140A1E747
                jmp     short loc_140A1E7AC
; ---------------------------------------------------------------------------

loc_140A1E761:                          ; CODE XREF: sub_140A1DFE4+752↑j
                                        ; sub_140A1DFE4+774↑j
                mov     r8, [rbp+70h+var_A0]
                mov     r9, rbx
                sub     r9, r8
                mov     r10d, 4

loc_140A1E771:                          ; CODE XREF: sub_140A1DFE4+7A1↓j
                movzx   edx, byte ptr [r8+r9]
                movzx   eax, byte ptr [r8]
                add     r8, rsi
                cmp     rdx, rax
                jnz     short loc_140A1E789
                add     r10d, r15d
                jnz     short loc_140A1E771
                jmp     short loc_140A1E7AC
; ---------------------------------------------------------------------------

loc_140A1E789:                          ; CODE XREF: sub_140A1DFE4+79C↑j
                mov     r8, [rbp+70h+var_98]
                mov     r9d, 6
                sub     rbx, r8

loc_140A1E796:                          ; CODE XREF: sub_140A1DFE4+7C6↓j
                movzx   edx, byte ptr [r8+rbx]
                movzx   eax, byte ptr [r8]
                add     r8, rsi
                cmp     rdx, rax
                jnz     short loc_140A1E7AF
                add     r9d, r15d
                jnz     short loc_140A1E796

loc_140A1E7AC:                          ; CODE XREF: sub_140A1DFE4+725↑j
                                        ; sub_140A1DFE4+761↑j ...
                mov     r11d, esi

loc_140A1E7AF:                          ; CODE XREF: sub_140A1DFE4+7C1↑j
                xor     r10d, r10d

loc_140A1E7B2:                          ; CODE XREF: sub_140A1DFE4+856↓j
                cmp     [rdi+20h], r10d
                cmovl   r11d, esi
                test    r11d, r11d
                jz      short loc_140A1E7DF
                cmp     dword ptr [rdi-4], 54494E49h
                jnz     short loc_140A1E7DF
                cmp     dword ptr [rdi], 4742444Bh
                jnz     short loc_140A1E7DF
                test    dword ptr [r14+994h], 2000h
                cmovnz  r11d, r10d

loc_140A1E7DF:                          ; CODE XREF: sub_140A1DFE4+7D9↑j
                                        ; sub_140A1DFE4+7E2↑j ...
                mov     ecx, [rdi+0Ch]
                test    r11d, r11d
                mov     eax, [rdi+4]
                mov     r12d, r10d
                mov     r15d, [rdi+8]
                setz    r12b
                cmp     ecx, eax
                cmovbe  ecx, eax
                add     ecx, 0FFFh
                add     r15d, ecx
                lea     rcx, [rdi-4]
                and     r15d, 0FFFFF000h
                call    sub_1406F4BAC
                mov     rcx, qword ptr [rsp+170h+var_138]
                xor     r10d, r10d
                mov     r9, qword ptr [rsp+170h+var_110]
                test    eax, eax
                mov     rax, [rsp+170h+var_140]
                mov     r11d, r10d
                setnz   r11b

loc_140A1E82C:                          ; CODE XREF: sub_140A1DFE4+63B↑j
                test    r12d, r12d
                jz      loc_140A1E8BD
                jmp     short loc_140A1E846
; ---------------------------------------------------------------------------

loc_140A1E837:                          ; CODE XREF: sub_140A1DFE4+668↑j
                                        ; sub_140A1DFE4+682↑j ...
                mov     r11d, esi
                jmp     loc_140A1E7B2
; ---------------------------------------------------------------------------

loc_140A1E83F:                          ; CODE XREF: sub_140A1DFE4+632↑j
                cmp     r13d, [rsp+44h]
                jnb     short loc_140A1E8BD

loc_140A1E846:                          ; CODE XREF: sub_140A1DFE4+851↑j
                mov     rbx, [rsp+170h+var_140]
                lea     rax, [rsp+170h+var_120]
                mov     r9d, r10d
                lea     rcx, [rsp+170h+var_130]

loc_140A1E858:                          ; CODE XREF: sub_140A1DFE4+8A0↓j
                mov     edx, [rcx]
                mov     r8, [rax]
                test    rdx, rdx
                jz      short loc_140A1E876
                lea     r10, [rdx-1]
                add     r10, r8
                cmp     rbx, r8
                jb      short loc_140A1E873
                cmp     rbx, r10
                jbe     short loc_140A1E8A9

loc_140A1E873:                          ; CODE XREF: sub_140A1DFE4+888↑j
                xor     r10d, r10d

loc_140A1E876:                          ; CODE XREF: sub_140A1DFE4+87C↑j
                add     r9d, esi
                add     rcx, 4
                add     rax, 8
                cmp     r9d, esi
                jb      short loc_140A1E858
                cmp     r13d, dword ptr [rbp+70h+arg_18]
                jb      short loc_140A1E894
                test    r11d, r11d
                jnz     short loc_140A1E8A0

loc_140A1E894:                          ; CODE XREF: sub_140A1DFE4+8A9↑j
                mov     rax, qword ptr [rsp+170h+var_138]
                btr     dword ptr [rax+10h], 1Fh
                jmp     short loc_140A1E8A5
; ---------------------------------------------------------------------------

loc_140A1E8A0:                          ; CODE XREF: sub_140A1DFE4+8AE↑j
                mov     rax, qword ptr [rsp+170h+var_138]

loc_140A1E8A5:                          ; CODE XREF: sub_140A1DFE4+8BA↑j
                and     byte ptr [rax+0Fh], 7Fh

loc_140A1E8A9:                          ; CODE XREF: sub_140A1DFE4+88D↑j
                mov     rcx, qword ptr [rsp+170h+var_138]
                mov     rax, rbx
                mov     r9, qword ptr [rsp+170h+var_110]
                jmp     short loc_140A1E8BD
; ---------------------------------------------------------------------------

loc_140A1E8B8:                          ; CODE XREF: sub_140A1DFE4+64A↑j
                                        ; sub_140A1DFE4+654↑j
                mov     rax, [rsp+170h+var_140]

loc_140A1E8BD:                          ; CODE XREF: sub_140A1DFE4+84B↑j
                                        ; sub_140A1DFE4+860↑j ...
                add     rax, 1000h
                add     rcx, 14h
                add     r13d, 1000h
                mov     [rsp+170h+var_140], rax
                mov     qword ptr [rsp+170h+var_138], rcx
                mov     r10d, 0
                cmp     rcx, r9
                jnz     loc_140A1E60F
                mov     rbx, [rsp+170h+var_120]
                mov     r8, [rbp+70h+arg_8]

loc_140A1E8F3:                          ; CODE XREF: sub_140A1DFE4+621↑j
                mov     rdx, [rsp+78h]
                cmp     rdx, r9
                jz      loc_140A1EB90

loc_140A1E901:                          ; CODE XREF: sub_140A1DFE4+BA1↓j
                mov     edi, r10d
                cmp     rdx, r9
                jz      loc_140A1EB40
                mov     rax, rdx

loc_140A1E910:                          ; CODE XREF: sub_140A1DFE4+93F↓j
                cmp     [rax+0Fh], r10b
                jl      short loc_140A1E925
                add     edi, esi
                lea     rcx, [rdi+rdi*4]
                lea     rax, [rdx+rcx*4]
                cmp     rax, r9
                jnz     short loc_140A1E910

loc_140A1E925:                          ; CODE XREF: sub_140A1DFE4+930↑j
                mov     dword ptr [rsp+170h+var_140], edi
                test    edi, edi
                jz      loc_140A1EB40
                mov     r15, [r14+0A88h]
                mov     eax, edi
                mov     [rsp+44h], eax
                mov     rdi, rdx
                mov     [rbp+70h+var_F0], r15
                mov     [rsp+170h+var_118], rdx
                mov     qword ptr [rsp+170h+var_138], r8

loc_140A1E94F:                          ; CODE XREF: sub_140A1DFE4+B48↓j
                mov     ebx, 8
                mov     r11d, r10d
                cmp     eax, ebx
                cmovb   ebx, eax
                test    ebx, ebx
                jz      loc_140A1EA6D
                mov     rdi, qword ptr [rsp+170h+var_138]
                lea     r13, [rbp+70h+var_68]

loc_140A1E96D:                          ; CODE XREF: sub_140A1DFE4+A7A↓j
                mov     eax, 1000h
                mov     r9d, r11d
                mov     [r15+8], rax
                shl     r9d, 0Ch
                add     r9, rdi
                mov     [r15], r9
                mov     r10, r9
                add     [r14+828h], eax
                mov     rax, [r14+818h]
                mov     r12d, [r14+814h]
                lea     rcx, [r9+1000h]
                mov     [rbp+70h+arg_18], rax
                mov     rax, r9
                cmp     r9, rcx
                jnb     short loc_140A1E9BD

loc_140A1E9B1:                          ; CODE XREF: sub_140A1DFE4+9D7↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A1E9B1

loc_140A1E9BD:                          ; CODE XREF: sub_140A1DFE4+9CB↑j
                mov     r14, [rbp+70h+arg_18]
                mov     rdi, 7010008004002001h
                mov     r8, r14
                mov     dword ptr [rbp+70h+arg_18], 20h ; ' '

loc_140A1E9DB:                          ; CODE XREF: sub_140A1DFE4+A46↓j
                mov     eax, 8

loc_140A1E9E0:                          ; CODE XREF: sub_140A1DFE4+A13↓j
                xor     r8, [r10]
                mov     ecx, r12d
                rol     r8, cl
                xor     r8, [r10+8]
                add     r10, 10h
                rol     r8, cl
                sub     rax, rsi
                jnz     short loc_140A1E9E0
                mov     rcx, r10
                sub     rcx, r9
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     eax, edx
                mov     [rbp+70h+var_80], rdx
                xor     r12d, eax
                and     r12d, 3Fh
                cmovz   r12d, esi
                add     dword ptr [rbp+70h+arg_18], 0FFFFFFFFh
                jnz     short loc_140A1E9DB
                mov     r14, [rsp+170h+var_100]
                mov     rax, r8
                mov     rdi, qword ptr [rsp+170h+var_138]
                jmp     short loc_140A1EA3E
; ---------------------------------------------------------------------------

loc_140A1EA3B:                          ; CODE XREF: sub_140A1DFE4+A61↓j
                xor     r8d, eax

loc_140A1EA3E:                          ; CODE XREF: sub_140A1DFE4+A55↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A1EA3B
                btr     r8d, 1Fh
                add     r11d, esi
                mov     [r13+0], r8d
                add     r15, 30h ; '0'
                add     r13, 4
                cmp     r11d, ebx
                jb      loc_140A1E96D
                mov     rdi, [rsp+170h+var_118]
                mov     r15, [rbp+70h+var_F0]

loc_140A1EA6D:                          ; CODE XREF: sub_140A1DFE4+97A↑j
                mov     r8d, ebx
                mov     rdx, r15
                mov     rcx, r14
                call    sub_1403EA12C
                xor     r10d, r10d
                test    ebx, ebx
                jz      short loc_140A1EAFF
                lea     r12, [rbp+70h+var_68]
                mov     r13d, ebx
                lea     r9, [rdi+10h]
                mov     r11, rdi
                add     r15, 10h

loc_140A1EA94:                          ; CODE XREF: sub_140A1DFE4+B0D↓j
                mov     r8d, 10h
                mov     rcx, r15
                mov     rdx, r11
                lea     r10d, [r8-0Eh]

loc_140A1EAA4:                          ; CODE XREF: sub_140A1DFE4+AD5↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r10, rsi
                jnz     short loc_140A1EAA4
                test    r8d, r8d
                jz      short loc_140A1EAD0

loc_140A1EAC0:                          ; CODE XREF: sub_140A1DFE4+AEA↓j
                mov     al, [rcx]
                add     rcx, rsi
                mov     [rdx], al
                add     rdx, rsi
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A1EAC0

loc_140A1EAD0:                          ; CODE XREF: sub_140A1DFE4+ADA↑j
                mov     ecx, [r9]
                add     r15, 30h ; '0'
                xor     ecx, [r12]
                add     r11, 14h
                btr     ecx, 1Fh
                add     r12, 4
                xor     [r9], ecx
                add     r9, 14h
                sub     r13, rsi
                jnz     short loc_140A1EA94
                mov     r14, [rsp+170h+var_100]
                xor     r10d, r10d
                mov     r15, [rbp+70h+var_F0]

loc_140A1EAFF:                          ; CODE XREF: sub_140A1DFE4+A9C↑j
                mov     eax, ebx
                lea     rcx, [rbx+rbx*4]
                shl     eax, 0Ch
                lea     rdi, [rdi+rcx*4]
                add     qword ptr [rsp+170h+var_138], rax
                mov     eax, [rsp+44h]
                sub     eax, ebx
                mov     [rsp+170h+var_118], rdi
                shl     ebx, 0Fh
                add     [r14+828h], ebx
                mov     [rsp+44h], eax
                test    eax, eax
                jnz     loc_140A1E94F
                mov     edi, dword ptr [rsp+170h+var_140]
                mov     rdx, [rsp+78h]
                mov     r9, qword ptr [rsp+170h+var_110]

loc_140A1EB40:                          ; CODE XREF: sub_140A1DFE4+923↑j
                                        ; sub_140A1DFE4+947↑j
                mov     eax, edi
                lea     rcx, [rax+rax*4]
                jmp     short loc_140A1EB54
; ---------------------------------------------------------------------------

loc_140A1EB48:                          ; CODE XREF: sub_140A1DFE4+B77↓j
                cmp     [rax+0Fh], r10b
                jge     short loc_140A1EB5D
                add     edi, esi
                lea     rcx, [rdi+rdi*4]

loc_140A1EB54:                          ; CODE XREF: sub_140A1DFE4+B62↑j
                lea     rax, [rdx+rcx*4]
                cmp     rax, r9
                jnz     short loc_140A1EB48

loc_140A1EB5D:                          ; CODE XREF: sub_140A1DFE4+B68↑j
                mov     r8, [rbp+70h+arg_8]
                mov     eax, edi
                shl     eax, 0Ch
                add     r8, rax
                mov     eax, edi
                mov     [rbp+70h+arg_8], r8
                lea     rcx, [rax+rax*4]
                lea     rdx, [rdx+rcx*4]
                mov     [rsp+78h], rdx
                cmp     rdx, r9
                jnz     loc_140A1E901
                mov     rbx, [rsp+170h+var_120]

loc_140A1EB90:                          ; CODE XREF: sub_140A1DFE4+917↑j
                cmp     [rbp+70h+arg_10], 0
                jz      loc_140A1EE3C
                mov     r15d, [rsp+170h+var_130]
                test    r15d, r15d
                jz      loc_140A1EE3C
                neg     dword ptr [rsp+170h+var_128]
                mov     r13d, [r14+7E4h]
                mov     r8d, [r14+924h]
                sbb     r12d, r12d
                neg     r12d
                mov     [rbp+70h+var_78], r10
                add     r12d, 0Dh
                lea     eax, [r13+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A1ECBD
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                xor     r10d, r10d
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A1ECB3
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A1ECAA
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     r8, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A1EC3E
                mov     ecx, eax
                shr     rcx, 3

loc_140A1EC2F:                          ; CODE XREF: sub_140A1DFE4+C58↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, rsi
                jnz     short loc_140A1EC2F

loc_140A1EC3E:                          ; CODE XREF: sub_140A1DFE4+C43↑j
                test    eax, eax
                jz      short loc_140A1EC4D

loc_140A1EC42:                          ; CODE XREF: sub_140A1DFE4+C67↓j
                mov     [r14], r10b
                add     r14, rsi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A1EC42

loc_140A1EC4D:                          ; CODE XREF: sub_140A1DFE4+C5C↑j
                mov     r14d, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A1EC91
                test    dword ptr [rdi+990h], 10000000h
                mov     ecx, r10d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A1EC88
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A1ECA0
; ---------------------------------------------------------------------------

loc_140A1EC88:                          ; CODE XREF: sub_140A1DFE4+C8D↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A1EC98
; ---------------------------------------------------------------------------

loc_140A1EC91:                          ; CODE XREF: sub_140A1DFE4+C79↑j
                mov     rax, [rdi+368h]

loc_140A1EC98:                          ; CODE XREF: sub_140A1DFE4+CAB↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A1ECA0:                          ; CODE XREF: sub_140A1DFE4+CA2↑j
                mov     [rdi+924h], r14d
                xor     r10d, r10d

loc_140A1ECAA:                          ; CODE XREF: sub_140A1DFE4+C1B↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A1ECC7
; ---------------------------------------------------------------------------

loc_140A1ECB3:                          ; CODE XREF: sub_140A1DFE4+1D8↑j
                                        ; sub_140A1DFE4+C0B↑j
                mov     eax, 0C000009Ah
                jmp     loc_140A1EE9C
; ---------------------------------------------------------------------------

loc_140A1ECBD:                          ; CODE XREF: sub_140A1DFE4+BF2↑j
                mov     rdi, r14
                mov     [r14+7E4h], eax

loc_140A1ECC7:                          ; CODE XREF: sub_140A1DFE4+CCD↑j
                add     [rdi+80Ch], esi
                lea     r14, [rdi+r13]
                mov     ecx, 30h ; '0'
                mov     [rbp+70h+arg_18], r14
                mov     [rbp+70h+var_70], r14
                mov     rax, r14
                lea     edx, [rcx-2Ah]

loc_140A1ECE7:                          ; CODE XREF: sub_140A1DFE4+D10↓j
                mov     [rax], r10
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rsi
                jnz     short loc_140A1ECE7
                test    ecx, ecx
                jz      short loc_140A1ED05

loc_140A1ECFA:                          ; CODE XREF: sub_140A1DFE4+D1F↓j
                mov     [rax], r10b
                add     rax, rsi
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A1ECFA

loc_140A1ED05:                          ; CODE XREF: sub_140A1DFE4+D14↑j
                mov     [r14], r12d
                lea     rcx, [rbx+r15]
                mov     [r14+8], rbx
                mov     r9, rbx
                mov     [r14+10h], r15d
                add     [rdi+828h], r15d
                mov     r10d, [rdi+814h]
                mov     r12, [rdi+818h]
                cmp     rbx, rcx
                jnb     short loc_140A1ED40
                mov     rax, rbx

loc_140A1ED34:                          ; CODE XREF: sub_140A1DFE4+D5A↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A1ED34

loc_140A1ED40:                          ; CODE XREF: sub_140A1DFE4+D4B↑j
                mov     r11d, r15d
                mov     r8, r12
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A1EDAB
                mov     r14, 7010008004002001h

loc_140A1ED59:                          ; CODE XREF: sub_140A1DFE4+DBE↓j
                mov     eax, 8

loc_140A1ED5E:                          ; CODE XREF: sub_140A1DFE4+D91↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                xor     r8, [r9+8]
                add     r9, 10h
                rol     r8, cl
                sub     rax, rsi
                jnz     short loc_140A1ED5E
                mov     rcx, r9
                sub     rcx, rbx
                xor     rcx, r12
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     r10d, edx
                xor     r10d, eax
                and     r10d, 3Fh
                cmovz   r10d, esi
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A1ED59
                mov     r14, [rbp+70h+arg_18]

loc_140A1EDAB:                          ; CODE XREF: sub_140A1DFE4+D69↑j
                mov     edx, r15d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A1EDD1
                mov     eax, edx
                shr     rax, 3

loc_140A1EDBC:                          ; CODE XREF: sub_140A1DFE4+DEB↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     rax, rsi
                jnz     short loc_140A1EDBC

loc_140A1EDD1:                          ; CODE XREF: sub_140A1DFE4+DD0↑j
                test    edx, edx
                jz      short loc_140A1EDEA

loc_140A1EDD5:                          ; CODE XREF: sub_140A1DFE4+E04↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, rsi
                rol     r8, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A1EDD5

loc_140A1EDEA:                          ; CODE XREF: sub_140A1DFE4+DEF↑j
                mov     rax, r8
                jmp     short loc_140A1EDF2
; ---------------------------------------------------------------------------

loc_140A1EDEF:                          ; CODE XREF: sub_140A1DFE4+E15↓j
                xor     r8d, eax

loc_140A1EDF2:                          ; CODE XREF: sub_140A1DFE4+E09↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A1EDEF
                btr     r8d, 1Fh
                mov     [r14+14h], r8d
                add     [rdi+828h], r15d
                test    dword ptr [rdi+990h], 40000000h
                jz      short loc_140A1EE2E
                test    r15d, r15d
                jz      short loc_140A1EE2E
                lea     r9, [r14+1Ch]
                mov     r8d, r15d
                mov     rdx, rbx
                mov     rcx, rdi
                call    sub_1403EA0CC

loc_140A1EE2E:                          ; CODE XREF: sub_140A1DFE4+E31↑j
                                        ; sub_140A1DFE4+E36↑j
                mov     rax, [rbp+70h+arg_0]
                mov     [r14+18h], esi
                mov     [rax], rdi

loc_140A1EE3C:                          ; CODE XREF: sub_140A1DFE4+BB3↑j
                                        ; sub_140A1DFE4+BC1↑j
                xor     eax, eax
                jmp     short loc_140A1EE9C
; ---------------------------------------------------------------------------

loc_140A1EE40:                          ; CODE XREF: sub_140A1DFE4+6C↑j
                                        ; sub_140A1DFE4+7A↑j ...
                test    dword ptr [rbx+990h], 200000h
                jz      short loc_140A1EEB0
                cmp     [rbx+8F8h], r15d
                jnz     short loc_140A1EE97
                mov     rax, 0A3A03F5891C8B4E8h
                mov     [rbx+908h], r15
                add     rax, rbx
                mov     qword ptr [rbx+910h], 10Fh
                mov     esi, 1
                mov     [rbx+900h], rax
                xor     edx, edx
                mov     [rbx+918h], r14
                mov     rcx, rbx
                mov     [rbx+8F8h], esi
                call    sub_140A113CC

loc_140A1EE97:                          ; CODE XREF: sub_140A1DFE4+44↑j
                                        ; sub_140A1DFE4+E6F↑j
                mov     eax, 0C000007Bh

loc_140A1EE9C:                          ; CODE XREF: sub_140A1DFE4+CD4↑j
                                        ; sub_140A1DFE4+E5A↑j
                add     rsp, 138h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------

loc_140A1EEB0:                          ; CODE XREF: sub_140A1DFE4+E66↑j
                mov     r9d, 4
                mov     dword ptr [rsp+170h+var_108], 0D0002D61h
                mov     ecx, dword ptr [rsp+170h+var_108]
                mov     r8, r14
                xor     ecx, 2D72h
                mov     [rsp+20h], r15
                ror     ecx, 5Ch
                lea     edx, [r9+6]
                call    KeBugCheckEx
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A1DFE4   endp

byte_140A1EEDD  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012C984↑o

; =============== S U B R O U T I N E =======================================


sub_140A1EEE4   proc near               ; CODE XREF: sub_140A399E0+1D↓p
                                        ; DATA XREF: .pdata:000000014012C990↑o

var_24B8        = dword ptr -24B8h
var_2498        = qword ptr -2498h
var_2490        = qword ptr -2490h
var_2488        = qword ptr -2488h
var_2480        = qword ptr -2480h
var_2478        = dword ptr -2478h
var_2468        = qword ptr -2468h
var_2460        = qword ptr -2460h
var_2458        = qword ptr -2458h
var_2450        = qword ptr -2450h
var_2448        = qword ptr -2448h
var_2440        = qword ptr -2440h
var_2438        = qword ptr -2438h
var_2430        = qword ptr -2430h
var_2428        = qword ptr -2428h
var_2420        = qword ptr -2420h
var_2418        = qword ptr -2418h
var_2410        = qword ptr -2410h
var_2408        = qword ptr -2408h
var_2400        = dword ptr -2400h
var_23F8        = qword ptr -23F8h
var_23F0        = dword ptr -23F0h
var_23E8        = qword ptr -23E8h
var_23E0        = qword ptr -23E0h
var_23D8        = qword ptr -23D8h
var_23D0        = qword ptr -23D0h
var_23C8        = qword ptr -23C8h
var_23C0        = dword ptr -23C0h
var_23BC        = dword ptr -23BCh
var_23B8        = dword ptr -23B8h
var_23B4        = dword ptr -23B4h
var_23B0        = dword ptr -23B0h
var_23AC        = dword ptr -23ACh
var_23A8        = dword ptr -23A8h
var_23A4        = dword ptr -23A4h
var_23A0        = dword ptr -23A0h
var_239C        = dword ptr -239Ch
var_2398        = dword ptr -2398h
var_2394        = dword ptr -2394h
var_2390        = dword ptr -2390h
var_238C        = dword ptr -238Ch
var_2388        = dword ptr -2388h
var_2384        = dword ptr -2384h
var_2380        = dword ptr -2380h
var_237C        = dword ptr -237Ch
var_2378        = dword ptr -2378h
var_2374        = dword ptr -2374h
var_2370        = dword ptr -2370h
var_236C        = dword ptr -236Ch
var_2368        = dword ptr -2368h
var_2364        = dword ptr -2364h
var_2360        = dword ptr -2360h
var_235C        = dword ptr -235Ch
var_2358        = dword ptr -2358h
var_2354        = dword ptr -2354h
var_2350        = dword ptr -2350h
var_234C        = dword ptr -234Ch
var_2348        = dword ptr -2348h
var_2344        = dword ptr -2344h
var_2340        = dword ptr -2340h
var_233C        = dword ptr -233Ch
var_2338        = dword ptr -2338h
var_2334        = dword ptr -2334h
var_2330        = dword ptr -2330h
var_232C        = dword ptr -232Ch
var_2328        = dword ptr -2328h
var_2324        = dword ptr -2324h
var_2320        = dword ptr -2320h
var_231C        = dword ptr -231Ch
var_2318        = dword ptr -2318h
var_2314        = dword ptr -2314h
var_2310        = dword ptr -2310h
var_230C        = dword ptr -230Ch
var_2308        = dword ptr -2308h
var_2304        = dword ptr -2304h
var_2300        = dword ptr -2300h
var_22FC        = dword ptr -22FCh
var_22F8        = dword ptr -22F8h
var_22F4        = dword ptr -22F4h
var_22F0        = dword ptr -22F0h
var_22EC        = dword ptr -22ECh
var_22E8        = dword ptr -22E8h
var_22E4        = dword ptr -22E4h
var_22E0        = dword ptr -22E0h
var_22DC        = dword ptr -22DCh
var_22D8        = dword ptr -22D8h
var_22D4        = dword ptr -22D4h
var_22D0        = dword ptr -22D0h
var_22CC        = dword ptr -22CCh
var_22C8        = dword ptr -22C8h
var_22C4        = dword ptr -22C4h
var_22C0        = dword ptr -22C0h
var_22BC        = dword ptr -22BCh
var_22B8        = dword ptr -22B8h
var_22B4        = dword ptr -22B4h
var_22B0        = dword ptr -22B0h
var_22AC        = dword ptr -22ACh
var_22A8        = dword ptr -22A8h
var_22A4        = dword ptr -22A4h
var_22A0        = dword ptr -22A0h
var_229C        = dword ptr -229Ch
var_2298        = dword ptr -2298h
var_2294        = dword ptr -2294h
var_2290        = dword ptr -2290h
var_228C        = dword ptr -228Ch
var_2288        = dword ptr -2288h
var_2284        = dword ptr -2284h
var_2280        = dword ptr -2280h
var_227C        = dword ptr -227Ch
var_2278        = dword ptr -2278h
var_2274        = dword ptr -2274h
var_2270        = dword ptr -2270h
var_226C        = dword ptr -226Ch
var_2268        = dword ptr -2268h
var_2264        = dword ptr -2264h
var_2260        = dword ptr -2260h
var_225C        = dword ptr -225Ch
var_2258        = dword ptr -2258h
var_2254        = dword ptr -2254h
var_2250        = dword ptr -2250h
var_224C        = dword ptr -224Ch
var_2248        = dword ptr -2248h
var_2244        = dword ptr -2244h
var_2240        = dword ptr -2240h
var_223C        = dword ptr -223Ch
var_2238        = dword ptr -2238h
var_2234        = dword ptr -2234h
var_2230        = dword ptr -2230h
var_222C        = dword ptr -222Ch
var_2228        = dword ptr -2228h
var_2224        = dword ptr -2224h
var_2220        = dword ptr -2220h
var_221C        = dword ptr -221Ch
var_2218        = dword ptr -2218h
var_2214        = dword ptr -2214h
var_2210        = dword ptr -2210h
var_220C        = dword ptr -220Ch
var_2208        = dword ptr -2208h
var_2204        = dword ptr -2204h
var_2200        = dword ptr -2200h
var_21FC        = dword ptr -21FCh
var_21F8        = dword ptr -21F8h
var_21F4        = dword ptr -21F4h
var_21F0        = dword ptr -21F0h
var_21EC        = dword ptr -21ECh
var_21E8        = dword ptr -21E8h
var_21E4        = dword ptr -21E4h
var_21E0        = dword ptr -21E0h
var_21DC        = dword ptr -21DCh
var_21D8        = dword ptr -21D8h
var_21D4        = dword ptr -21D4h
var_21D0        = dword ptr -21D0h
var_21CC        = dword ptr -21CCh
var_21C8        = dword ptr -21C8h
var_21C4        = dword ptr -21C4h
var_21C0        = dword ptr -21C0h
var_21BC        = dword ptr -21BCh
var_21B8        = dword ptr -21B8h
var_21B4        = dword ptr -21B4h
var_21B0        = dword ptr -21B0h
var_21AC        = dword ptr -21ACh
var_21A8        = dword ptr -21A8h
var_21A4        = dword ptr -21A4h
var_21A0        = dword ptr -21A0h
var_219C        = dword ptr -219Ch
var_2198        = dword ptr -2198h
var_2194        = dword ptr -2194h
var_2190        = dword ptr -2190h
var_218C        = dword ptr -218Ch
var_2188        = dword ptr -2188h
var_2184        = dword ptr -2184h
var_2180        = dword ptr -2180h
var_217C        = dword ptr -217Ch
var_2178        = dword ptr -2178h
var_2174        = dword ptr -2174h
var_2170        = dword ptr -2170h
var_216C        = dword ptr -216Ch
var_2168        = dword ptr -2168h
var_2164        = dword ptr -2164h
var_2160        = dword ptr -2160h
var_215C        = dword ptr -215Ch
var_2158        = dword ptr -2158h
var_2154        = dword ptr -2154h
var_2150        = dword ptr -2150h
var_214C        = dword ptr -214Ch
var_2148        = dword ptr -2148h
var_2144        = dword ptr -2144h
var_2140        = dword ptr -2140h
var_213C        = dword ptr -213Ch
var_2138        = dword ptr -2138h
var_2134        = dword ptr -2134h
var_2130        = dword ptr -2130h
var_212C        = dword ptr -212Ch
var_2128        = dword ptr -2128h
var_2124        = dword ptr -2124h
var_2120        = dword ptr -2120h
var_211C        = dword ptr -211Ch
var_2118        = dword ptr -2118h
var_2114        = dword ptr -2114h
var_2110        = dword ptr -2110h
var_210C        = dword ptr -210Ch
var_2108        = dword ptr -2108h
var_2104        = dword ptr -2104h
var_2100        = dword ptr -2100h
var_20FC        = dword ptr -20FCh
var_20F8        = dword ptr -20F8h
var_20F4        = dword ptr -20F4h
var_20F0        = dword ptr -20F0h
var_20EC        = dword ptr -20ECh
var_20E8        = dword ptr -20E8h
var_20E4        = dword ptr -20E4h
var_20E0        = dword ptr -20E0h
var_20DC        = dword ptr -20DCh
var_20D8        = dword ptr -20D8h
var_20D4        = dword ptr -20D4h
var_20D0        = dword ptr -20D0h
var_20CC        = dword ptr -20CCh
var_20C8        = dword ptr -20C8h
var_20C4        = dword ptr -20C4h
var_20C0        = dword ptr -20C0h
var_20BC        = dword ptr -20BCh
var_20B8        = dword ptr -20B8h
var_20B4        = dword ptr -20B4h
var_20B0        = dword ptr -20B0h
var_20AC        = dword ptr -20ACh
var_20A8        = byte ptr -20A8h
var_20A4        = dword ptr -20A4h
var_20A0        = dword ptr -20A0h
var_209C        = dword ptr -209Ch
var_2098        = dword ptr -2098h
var_2094        = dword ptr -2094h
var_2090        = dword ptr -2090h
var_208C        = dword ptr -208Ch
var_2088        = dword ptr -2088h
var_2084        = dword ptr -2084h
var_2080        = dword ptr -2080h
var_207C        = dword ptr -207Ch
var_2078        = dword ptr -2078h
var_2074        = dword ptr -2074h
var_2070        = dword ptr -2070h
var_206C        = dword ptr -206Ch
var_2068        = dword ptr -2068h
var_2064        = dword ptr -2064h
var_2060        = dword ptr -2060h
var_205C        = dword ptr -205Ch
var_2058        = dword ptr -2058h
var_2054        = dword ptr -2054h
var_2050        = dword ptr -2050h
var_204C        = dword ptr -204Ch
var_2048        = dword ptr -2048h
var_2044        = dword ptr -2044h
var_2040        = dword ptr -2040h
var_203C        = dword ptr -203Ch
var_2038        = dword ptr -2038h
var_2034        = dword ptr -2034h
var_2030        = dword ptr -2030h
var_202C        = dword ptr -202Ch
var_2028        = dword ptr -2028h
var_2024        = dword ptr -2024h
var_2020        = dword ptr -2020h
var_201C        = dword ptr -201Ch
var_2018        = dword ptr -2018h
var_2014        = dword ptr -2014h
var_2010        = dword ptr -2010h
var_200C        = dword ptr -200Ch
var_2008        = dword ptr -2008h
var_2004        = dword ptr -2004h
var_2000        = dword ptr -2000h
var_1FFC        = dword ptr -1FFCh
var_1FF8        = dword ptr -1FF8h
var_1FF4        = dword ptr -1FF4h
var_1FF0        = dword ptr -1FF0h
var_1FEC        = dword ptr -1FECh
var_1FE8        = dword ptr -1FE8h
var_1FE4        = dword ptr -1FE4h
var_1FE0        = dword ptr -1FE0h
var_1FDC        = dword ptr -1FDCh
var_1FD8        = dword ptr -1FD8h
var_1FD4        = dword ptr -1FD4h
var_1FD0        = dword ptr -1FD0h
var_1FCC        = dword ptr -1FCCh
var_1FC8        = dword ptr -1FC8h
var_1FC4        = dword ptr -1FC4h
var_1FC0        = dword ptr -1FC0h
var_1FBC        = dword ptr -1FBCh
var_1FB8        = dword ptr -1FB8h
var_1FB4        = dword ptr -1FB4h
var_1FB0        = dword ptr -1FB0h
var_1FAC        = dword ptr -1FACh
var_1FA8        = dword ptr -1FA8h
var_1FA4        = byte ptr -1FA4h
var_1FA0        = dword ptr -1FA0h
var_1F9C        = byte ptr -1F9Ch
var_1F98        = qword ptr -1F98h
var_1F90        = dword ptr -1F90h
var_1F8C        = dword ptr -1F8Ch
var_1F88        = dword ptr -1F88h
var_1F84        = dword ptr -1F84h
var_1F80        = dword ptr -1F80h
var_1F7C        = dword ptr -1F7Ch
var_1F78        = dword ptr -1F78h
var_1F74        = dword ptr -1F74h
var_1F70        = dword ptr -1F70h
var_1F68        = qword ptr -1F68h
var_1F60        = qword ptr -1F60h
var_1F58        = qword ptr -1F58h
var_1F50        = qword ptr -1F50h
var_1F48        = qword ptr -1F48h
var_1F40        = qword ptr -1F40h
var_1F38        = qword ptr -1F38h
var_1F30        = qword ptr -1F30h
var_1F28        = qword ptr -1F28h
var_1F20        = qword ptr -1F20h
var_1F18        = qword ptr -1F18h
var_1F10        = qword ptr -1F10h
var_1F08        = qword ptr -1F08h
var_1F00        = qword ptr -1F00h
var_1EF8        = qword ptr -1EF8h
var_1EF0        = qword ptr -1EF0h
var_1EE8        = qword ptr -1EE8h
var_1EE0        = qword ptr -1EE0h
var_1ED8        = qword ptr -1ED8h
var_1ED0        = qword ptr -1ED0h
var_1EC8        = qword ptr -1EC8h
var_1EC0        = qword ptr -1EC0h
var_1EB8        = qword ptr -1EB8h
var_1EB0        = qword ptr -1EB0h
var_1EA8        = qword ptr -1EA8h
var_1EA0        = qword ptr -1EA0h
var_1E98        = qword ptr -1E98h
var_1E90        = qword ptr -1E90h
var_1E88        = qword ptr -1E88h
var_1E80        = qword ptr -1E80h
var_1E78        = qword ptr -1E78h
var_1E70        = qword ptr -1E70h
var_1E68        = qword ptr -1E68h
var_1E60        = qword ptr -1E60h
var_1E58        = qword ptr -1E58h
var_1E50        = qword ptr -1E50h
var_1E48        = qword ptr -1E48h
var_1E40        = qword ptr -1E40h
var_1E38        = qword ptr -1E38h
var_1E30        = qword ptr -1E30h
var_1E28        = qword ptr -1E28h
var_1E20        = qword ptr -1E20h
var_1E18        = qword ptr -1E18h
var_1E10        = qword ptr -1E10h
var_1E08        = qword ptr -1E08h
var_1E00        = qword ptr -1E00h
var_1DF8        = qword ptr -1DF8h
var_1DF0        = qword ptr -1DF0h
var_1DE8        = qword ptr -1DE8h
var_1DE0        = qword ptr -1DE0h
var_1DD8        = qword ptr -1DD8h
var_1DD0        = qword ptr -1DD0h
var_1DC8        = qword ptr -1DC8h
var_1DC0        = qword ptr -1DC0h
var_1DB8        = qword ptr -1DB8h
var_1DB0        = qword ptr -1DB0h
var_1DA8        = qword ptr -1DA8h
var_1DA0        = qword ptr -1DA0h
var_1D98        = qword ptr -1D98h
var_1D90        = qword ptr -1D90h
var_1D88        = qword ptr -1D88h
var_1D80        = qword ptr -1D80h
var_1D78        = qword ptr -1D78h
var_1D70        = qword ptr -1D70h
var_1D68        = qword ptr -1D68h
var_1D60        = qword ptr -1D60h
var_1D58        = qword ptr -1D58h
var_1D50        = qword ptr -1D50h
var_1D48        = qword ptr -1D48h
var_1D40        = qword ptr -1D40h
var_1D38        = qword ptr -1D38h
var_1D30        = qword ptr -1D30h
var_1D28        = qword ptr -1D28h
var_1D20        = qword ptr -1D20h
var_1D18        = qword ptr -1D18h
var_1D10        = qword ptr -1D10h
var_1D08        = qword ptr -1D08h
var_1D00        = qword ptr -1D00h
var_1CF8        = qword ptr -1CF8h
var_1CF0        = qword ptr -1CF0h
var_1CE8        = qword ptr -1CE8h
var_1CE0        = qword ptr -1CE0h
var_1CD8        = qword ptr -1CD8h
var_1CD0        = qword ptr -1CD0h
var_1CC8        = qword ptr -1CC8h
var_1CC0        = qword ptr -1CC0h
var_1CB8        = qword ptr -1CB8h
var_1CB0        = qword ptr -1CB0h
var_1CA8        = qword ptr -1CA8h
var_1CA0        = qword ptr -1CA0h
var_1C98        = qword ptr -1C98h
var_1C90        = qword ptr -1C90h
var_1C88        = qword ptr -1C88h
var_1C80        = qword ptr -1C80h
var_1C78        = qword ptr -1C78h
var_1C70        = qword ptr -1C70h
var_1C68        = qword ptr -1C68h
var_1C60        = qword ptr -1C60h
var_1C58        = qword ptr -1C58h
var_1C50        = qword ptr -1C50h
var_1C48        = qword ptr -1C48h
var_1C40        = qword ptr -1C40h
var_1C38        = qword ptr -1C38h
var_1C30        = qword ptr -1C30h
var_1C28        = qword ptr -1C28h
var_1C20        = qword ptr -1C20h
var_1C18        = qword ptr -1C18h
var_1C10        = qword ptr -1C10h
var_1C08        = qword ptr -1C08h
var_1C00        = qword ptr -1C00h
var_1BF8        = qword ptr -1BF8h
var_1BF0        = qword ptr -1BF0h
var_1BE8        = qword ptr -1BE8h
var_1BE0        = qword ptr -1BE0h
var_1BD8        = qword ptr -1BD8h
var_1BD0        = qword ptr -1BD0h
var_1BC8        = qword ptr -1BC8h
var_1BC0        = qword ptr -1BC0h
var_1BB8        = qword ptr -1BB8h
var_1BB0        = qword ptr -1BB0h
var_1BA8        = qword ptr -1BA8h
var_1BA0        = qword ptr -1BA0h
var_1B98        = qword ptr -1B98h
var_1B90        = qword ptr -1B90h
var_1B88        = qword ptr -1B88h
var_1B80        = qword ptr -1B80h
var_1B78        = qword ptr -1B78h
var_1B70        = qword ptr -1B70h
var_1B68        = qword ptr -1B68h
var_1B60        = qword ptr -1B60h
var_1B58        = qword ptr -1B58h
var_1B50        = qword ptr -1B50h
var_1B48        = qword ptr -1B48h
var_1B40        = qword ptr -1B40h
var_1B38        = qword ptr -1B38h
var_1B30        = qword ptr -1B30h
var_1B28        = qword ptr -1B28h
var_1B20        = qword ptr -1B20h
var_1B18        = qword ptr -1B18h
var_1B10        = qword ptr -1B10h
var_1B08        = qword ptr -1B08h
var_1B00        = qword ptr -1B00h
var_1AF8        = qword ptr -1AF8h
var_1AF0        = qword ptr -1AF0h
var_1AE8        = dword ptr -1AE8h
var_1AE0        = qword ptr -1AE0h
var_1AD8        = qword ptr -1AD8h
var_1AD0        = qword ptr -1AD0h
var_1AC8        = qword ptr -1AC8h
var_1AC0        = qword ptr -1AC0h
var_1AB8        = qword ptr -1AB8h
var_1AB0        = qword ptr -1AB0h
var_1AA8        = qword ptr -1AA8h
var_1AA0        = qword ptr -1AA0h
var_1A98        = qword ptr -1A98h
var_1A90        = qword ptr -1A90h
var_1A88        = qword ptr -1A88h
var_1A80        = qword ptr -1A80h
var_1A78        = qword ptr -1A78h
var_1A70        = qword ptr -1A70h
var_1A68        = qword ptr -1A68h
var_1A60        = qword ptr -1A60h
var_1A58        = qword ptr -1A58h
var_1A50        = dword ptr -1A50h
var_1A48        = qword ptr -1A48h
var_1A40        = qword ptr -1A40h
var_1A38        = qword ptr -1A38h
var_1A30        = qword ptr -1A30h
var_1A28        = qword ptr -1A28h
var_1A20        = qword ptr -1A20h
var_1A18        = qword ptr -1A18h
var_1A10        = qword ptr -1A10h
var_1A08        = qword ptr -1A08h
var_1A00        = qword ptr -1A00h
var_19F8        = qword ptr -19F8h
var_19F0        = qword ptr -19F0h
var_19E8        = qword ptr -19E8h
var_19E0        = dword ptr -19E0h
var_19D8        = qword ptr -19D8h
var_19D0        = qword ptr -19D0h
var_19C8        = qword ptr -19C8h
var_19C0        = qword ptr -19C0h
var_19B8        = qword ptr -19B8h
var_19B0        = qword ptr -19B0h
var_19A8        = qword ptr -19A8h
var_19A0        = qword ptr -19A0h
var_1998        = qword ptr -1998h
var_1990        = qword ptr -1990h
var_1988        = qword ptr -1988h
var_1980        = qword ptr -1980h
var_1978        = qword ptr -1978h
var_1970        = qword ptr -1970h
var_1968        = qword ptr -1968h
var_1960        = qword ptr -1960h
var_1958        = qword ptr -1958h
var_1950        = byte ptr -1950h
var_1948        = qword ptr -1948h
var_1940        = qword ptr -1940h
var_1938        = qword ptr -1938h
var_1930        = qword ptr -1930h
var_1928        = qword ptr -1928h
var_1920        = qword ptr -1920h
var_1918        = qword ptr -1918h
var_1910        = qword ptr -1910h
var_1908        = qword ptr -1908h
var_1900        = qword ptr -1900h
var_18F8        = qword ptr -18F8h
var_18F0        = qword ptr -18F0h
var_18E8        = qword ptr -18E8h
var_18E0        = qword ptr -18E0h
var_18D8        = qword ptr -18D8h
var_18D0        = qword ptr -18D0h
var_18C8        = qword ptr -18C8h
var_18C0        = qword ptr -18C0h
var_18B8        = qword ptr -18B8h
var_18B0        = qword ptr -18B0h
var_18A8        = qword ptr -18A8h
var_18A0        = qword ptr -18A0h
var_1898        = qword ptr -1898h
var_1890        = qword ptr -1890h
var_1888        = qword ptr -1888h
var_1880        = qword ptr -1880h
var_1878        = qword ptr -1878h
var_1870        = qword ptr -1870h
var_1868        = qword ptr -1868h
var_1860        = qword ptr -1860h
var_1858        = qword ptr -1858h
var_1850        = qword ptr -1850h
var_1848        = qword ptr -1848h
var_1840        = qword ptr -1840h
var_1838        = qword ptr -1838h
var_1830        = qword ptr -1830h
var_1828        = qword ptr -1828h
var_1820        = qword ptr -1820h
var_1818        = qword ptr -1818h
var_1810        = qword ptr -1810h
var_1808        = qword ptr -1808h
var_1800        = qword ptr -1800h
var_17F8        = qword ptr -17F8h
var_17F0        = qword ptr -17F0h
var_17E8        = qword ptr -17E8h
var_17E0        = qword ptr -17E0h
var_17D8        = qword ptr -17D8h
var_17D0        = qword ptr -17D0h
var_17C8        = qword ptr -17C8h
var_17C0        = qword ptr -17C0h
var_17B8        = qword ptr -17B8h
var_17B0        = qword ptr -17B0h
var_17A8        = qword ptr -17A8h
var_17A0        = qword ptr -17A0h
var_1798        = qword ptr -1798h
var_1790        = qword ptr -1790h
var_1788        = qword ptr -1788h
var_1780        = qword ptr -1780h
var_1778        = qword ptr -1778h
var_1770        = qword ptr -1770h
var_1768        = qword ptr -1768h
var_1760        = qword ptr -1760h
var_1758        = qword ptr -1758h
var_1750        = qword ptr -1750h
var_1748        = qword ptr -1748h
var_1740        = qword ptr -1740h
var_1738        = qword ptr -1738h
var_1730        = qword ptr -1730h
var_1728        = qword ptr -1728h
var_1720        = qword ptr -1720h
var_1718        = qword ptr -1718h
var_1710        = qword ptr -1710h
var_1708        = qword ptr -1708h
var_1700        = qword ptr -1700h
var_16F8        = qword ptr -16F8h
var_16F0        = qword ptr -16F0h
var_16E8        = qword ptr -16E8h
var_16E0        = qword ptr -16E0h
var_16D8        = qword ptr -16D8h
var_16D0        = qword ptr -16D0h
var_16C8        = qword ptr -16C8h
var_16C0        = qword ptr -16C0h
var_16B8        = qword ptr -16B8h
var_16B0        = qword ptr -16B0h
var_16A8        = qword ptr -16A8h
var_16A0        = qword ptr -16A0h
var_1698        = qword ptr -1698h
var_1690        = qword ptr -1690h
var_1688        = qword ptr -1688h
var_1680        = qword ptr -1680h
var_1678        = qword ptr -1678h
var_1670        = qword ptr -1670h
var_1668        = qword ptr -1668h
var_1660        = qword ptr -1660h
var_1658        = qword ptr -1658h
var_1650        = qword ptr -1650h
var_1648        = qword ptr -1648h
var_1640        = qword ptr -1640h
var_1638        = qword ptr -1638h
var_1630        = qword ptr -1630h
var_1628        = qword ptr -1628h
var_1620        = qword ptr -1620h
var_1618        = qword ptr -1618h
var_1610        = qword ptr -1610h
var_1608        = qword ptr -1608h
var_1600        = qword ptr -1600h
var_15F8        = qword ptr -15F8h
var_15F0        = qword ptr -15F0h
var_15E8        = qword ptr -15E8h
var_15E0        = qword ptr -15E0h
var_15D8        = qword ptr -15D8h
var_15D0        = qword ptr -15D0h
var_15C8        = qword ptr -15C8h
var_15C0        = qword ptr -15C0h
var_15B8        = qword ptr -15B8h
var_15B0        = qword ptr -15B0h
var_15A8        = qword ptr -15A8h
var_15A0        = qword ptr -15A0h
var_1598        = qword ptr -1598h
var_1590        = qword ptr -1590h
var_1588        = qword ptr -1588h
var_1580        = qword ptr -1580h
var_1578        = qword ptr -1578h
var_1570        = qword ptr -1570h
var_1568        = qword ptr -1568h
var_1560        = qword ptr -1560h
var_1558        = qword ptr -1558h
var_1550        = qword ptr -1550h
var_1548        = qword ptr -1548h
var_1540        = qword ptr -1540h
var_1538        = qword ptr -1538h
var_1530        = qword ptr -1530h
var_1528        = qword ptr -1528h
var_1520        = qword ptr -1520h
var_1518        = qword ptr -1518h
var_1510        = qword ptr -1510h
var_1508        = qword ptr -1508h
var_1500        = qword ptr -1500h
var_14F8        = qword ptr -14F8h
var_14F0        = qword ptr -14F0h
var_14E8        = qword ptr -14E8h
var_14E0        = qword ptr -14E0h
var_14D8        = qword ptr -14D8h
var_14D0        = qword ptr -14D0h
var_14C8        = qword ptr -14C8h
var_14C0        = qword ptr -14C0h
var_14B8        = qword ptr -14B8h
var_14B0        = qword ptr -14B0h
var_14A8        = byte ptr -14A8h
var_14A0        = qword ptr -14A0h
var_1498        = qword ptr -1498h
var_1490        = qword ptr -1490h
var_1488        = qword ptr -1488h
var_1480        = qword ptr -1480h
var_1478        = qword ptr -1478h
var_1470        = qword ptr -1470h
var_1468        = qword ptr -1468h
var_1460        = qword ptr -1460h
var_1458        = qword ptr -1458h
var_1450        = qword ptr -1450h
var_1448        = byte ptr -1448h
var_1438        = word ptr -1438h
var_1436        = qword ptr -1436h
var_1428        = word ptr -1428h
var_1426        = qword ptr -1426h
var_1418        = byte ptr -1418h
var_1408        = qword ptr -1408h
var_1400        = dword ptr -1400h
var_13F8        = qword ptr -13F8h
var_13F0        = dword ptr -13F0h
var_13E8        = qword ptr -13E8h
var_13E0        = dword ptr -13E0h
var_13D8        = qword ptr -13D8h
var_13D0        = dword ptr -13D0h
var_13C8        = qword ptr -13C8h
var_13C0        = dword ptr -13C0h
var_13B8        = dword ptr -13B8h
var_13B4        = dword ptr -13B4h
var_13B0        = dword ptr -13B0h
var_13AC        = dword ptr -13ACh
var_13A8        = dword ptr -13A8h
var_13A4        = dword ptr -13A4h
var_13A0        = dword ptr -13A0h
var_139C        = dword ptr -139Ch
var_1398        = dword ptr -1398h
var_1394        = dword ptr -1394h
var_1390        = dword ptr -1390h
var_138C        = dword ptr -138Ch
var_1388        = qword ptr -1388h
var_1380        = qword ptr -1380h
var_1378        = dword ptr -1378h
var_1374        = dword ptr -1374h
var_1368        = dword ptr -1368h
var_1364        = qword ptr -1364h
var_135C        = dword ptr -135Ch
var_1358        = dword ptr -1358h
var_1354        = dword ptr -1354h
var_1350        = dword ptr -1350h
var_134C        = dword ptr -134Ch
var_1348        = byte ptr -1348h
var_1338        = byte ptr -1338h
var_1328        = byte ptr -1328h
var_1318        = byte ptr -1318h
var_1308        = byte ptr -1308h
var_12F8        = byte ptr -12F8h
var_12E8        = byte ptr -12E8h
var_12D8        = byte ptr -12D8h
var_12C8        = byte ptr -12C8h
var_12B8        = byte ptr -12B8h
var_12A8        = byte ptr -12A8h
var_1298        = byte ptr -1298h
var_1288        = byte ptr -1288h
var_1278        = byte ptr -1278h
var_1268        = byte ptr -1268h
var_1267        = byte ptr -1267h
var_1266        = byte ptr -1266h
var_1265        = byte ptr -1265h
var_1264        = byte ptr -1264h
var_1263        = byte ptr -1263h
var_1262        = byte ptr -1262h
var_1261        = byte ptr -1261h
var_1260        = byte ptr -1260h
var_125F        = byte ptr -125Fh
var_125E        = byte ptr -125Eh
var_125D        = byte ptr -125Dh
var_125C        = byte ptr -125Ch
var_125B        = byte ptr -125Bh
var_125A        = byte ptr -125Ah
var_1259        = byte ptr -1259h
var_1258        = byte ptr -1258h
var_1257        = byte ptr -1257h
var_1256        = byte ptr -1256h
var_1255        = byte ptr -1255h
var_1254        = byte ptr -1254h
var_1253        = byte ptr -1253h
var_1252        = byte ptr -1252h
var_1251        = byte ptr -1251h
var_1250        = byte ptr -1250h
var_124F        = byte ptr -124Fh
var_124E        = byte ptr -124Eh
var_124D        = byte ptr -124Dh
var_124C        = byte ptr -124Ch
var_124B        = byte ptr -124Bh
var_124A        = byte ptr -124Ah
var_1249        = byte ptr -1249h
var_1248        = qword ptr -1248h
var_1240        = qword ptr -1240h
var_1238        = dword ptr -1238h
var_1230        = byte ptr -1230h
var_1228        = qword ptr -1228h
var_121C        = dword ptr -121Ch
var_1218        = byte ptr -1218h
var_1210        = qword ptr -1210h
var_1204        = dword ptr -1204h
var_1200        = dword ptr -1200h
var_11FC        = dword ptr -11FCh
var_11F8        = dword ptr -11F8h
var_11F4        = dword ptr -11F4h
var_11F0        = dword ptr -11F0h
var_11EC        = dword ptr -11ECh
var_11E8        = byte ptr -11E8h
var_11E0        = qword ptr -11E0h
var_11D4        = dword ptr -11D4h
var_11D0        = dword ptr -11D0h
var_11CC        = dword ptr -11CCh
var_11C8        = dword ptr -11C8h
var_11C4        = dword ptr -11C4h
var_11C0        = dword ptr -11C0h
var_11BC        = dword ptr -11BCh
var_11B8        = byte ptr -11B8h
var_11B0        = qword ptr -11B0h
var_11A4        = dword ptr -11A4h
var_11A0        = dword ptr -11A0h
var_119C        = dword ptr -119Ch
var_1198        = dword ptr -1198h
var_1194        = dword ptr -1194h
var_1190        = dword ptr -1190h
var_118C        = dword ptr -118Ch
var_1188        = qword ptr -1188h
var_1180        = xmmword ptr -1180h
var_1170        = qword ptr -1170h
var_1168        = qword ptr -1168h
var_1148        = qword ptr -1148h
var_1128        = qword ptr -1128h
var_1120        = xmmword ptr -1120h
var_1110        = qword ptr -1110h
var_1108        = qword ptr -1108h
var_10E8        = qword ptr -10E8h
var_10C8        = qword ptr -10C8h
var_10C0        = qword ptr -10C0h
var_10B8        = qword ptr -10B8h
var_10B0        = qword ptr -10B0h
var_10A8        = qword ptr -10A8h
var_10A0        = qword ptr -10A0h
var_1088        = byte ptr -1088h
var_1068        = byte ptr -1068h
var_1048        = dword ptr -1048h
var_1040        = qword ptr -1040h
var_1038        = qword ptr -1038h
var_1030        = qword ptr -1030h
var_1028        = qword ptr -1028h
var_1020        = qword ptr -1020h
var_1018        = qword ptr -1018h
var_1010        = qword ptr -1010h
var_1008        = qword ptr -1008h
var_1000        = qword ptr -1000h
var_FF8         = qword ptr -0FF8h
var_FF0         = qword ptr -0FF0h
var_FE8         = qword ptr -0FE8h
var_FE0         = qword ptr -0FE0h
var_FD8         = qword ptr -0FD8h
var_FD0         = qword ptr -0FD0h
var_FC8         = qword ptr -0FC8h
var_FC0         = qword ptr -0FC0h
var_FB8         = qword ptr -0FB8h
var_FB0         = qword ptr -0FB0h
var_FA8         = qword ptr -0FA8h
var_FA0         = qword ptr -0FA0h
var_F98         = qword ptr -0F98h
var_F88         = qword ptr -0F88h
var_F80         = qword ptr -0F80h
var_F78         = qword ptr -0F78h
var_F70         = qword ptr -0F70h
var_F68         = qword ptr -0F68h
var_F60         = qword ptr -0F60h
var_F58         = qword ptr -0F58h
var_F50         = qword ptr -0F50h
var_F48         = dword ptr -0F48h
var_F44         = dword ptr -0F44h
var_F38         = qword ptr -0F38h
var_F30         = qword ptr -0F30h
var_F28         = qword ptr -0F28h
var_F20         = qword ptr -0F20h
var_F18         = qword ptr -0F18h
var_F10         = qword ptr -0F10h
var_F08         = qword ptr -0F08h
var_F00         = qword ptr -0F00h
var_EF8         = dword ptr -0EF8h
var_EF4         = dword ptr -0EF4h
var_EE0         = qword ptr -0EE0h
var_ED0         = qword ptr -0ED0h
var_EC8         = qword ptr -0EC8h
var_EC0         = qword ptr -0EC0h
var_E98         = qword ptr -0E98h
var_E90         = qword ptr -0E90h
var_E88         = qword ptr -0E88h
var_E80         = qword ptr -0E80h
var_E78         = qword ptr -0E78h
var_E70         = qword ptr -0E70h
var_E68         = qword ptr -0E68h
var_E60         = qword ptr -0E60h
var_E58         = dword ptr -0E58h
var_E54         = dword ptr -0E54h
var_E48         = qword ptr -0E48h
var_E40         = qword ptr -0E40h
var_E38         = qword ptr -0E38h
var_E30         = qword ptr -0E30h
var_E28         = qword ptr -0E28h
var_E20         = qword ptr -0E20h
var_E18         = qword ptr -0E18h
var_E10         = qword ptr -0E10h
var_E08         = dword ptr -0E08h
var_E04         = dword ptr -0E04h
var_DF8         = qword ptr -0DF8h
var_D78         = qword ptr -0D78h
var_D70         = byte ptr -0D70h
var_D68         = dword ptr -0D68h
var_D50         = dword ptr -0D50h
var_D38         = dword ptr -0D38h
var_D20         = dword ptr -0D20h
var_D08         = dword ptr -0D08h
var_CF0         = dword ptr -0CF0h
var_CD8         = dword ptr -0CD8h
var_CC0         = dword ptr -0CC0h
var_CB8         = qword ptr -0CB8h
var_CA8         = dword ptr -0CA8h
var_C90         = dword ptr -0C90h
var_C68         = qword ptr -0C68h
var_C60         = qword ptr -0C60h
var_C58         = qword ptr -0C58h
var_C50         = qword ptr -0C50h
var_C48         = qword ptr -0C48h
var_C40         = qword ptr -0C40h
var_C38         = xmmword ptr -0C38h
var_C28         = xmmword ptr -0C28h
var_C18         = xmmword ptr -0C18h
var_C08         = xmmword ptr -0C08h
var_BF8         = xmmword ptr -0BF8h
var_BE8         = xmmword ptr -0BE8h
var_BD8         = xmmword ptr -0BD8h
var_BC8         = qword ptr -0BC8h
var_BC0         = qword ptr -0BC0h
var_BB8         = xmmword ptr -0BB8h
var_BA8         = qword ptr -0BA8h
var_BA0         = qword ptr -0BA0h
var_B98         = qword ptr -0B98h
var_B90         = qword ptr -0B90h
var_B88         = qword ptr -0B88h
var_B80         = qword ptr -0B80h
var_B78         = qword ptr -0B78h
var_B70         = qword ptr -0B70h
var_B68         = qword ptr -0B68h
var_B60         = qword ptr -0B60h
var_B58         = qword ptr -0B58h
var_B50         = qword ptr -0B50h
var_B48         = qword ptr -0B48h
var_B40         = qword ptr -0B40h
var_B38         = qword ptr -0B38h
var_B30         = qword ptr -0B30h
var_B28         = qword ptr -0B28h
var_B20         = qword ptr -0B20h
var_B18         = qword ptr -0B18h
var_B10         = qword ptr -0B10h
var_B08         = qword ptr -0B08h
var_B00         = qword ptr -0B00h
var_AF8         = qword ptr -0AF8h
var_AF0         = qword ptr -0AF0h
var_AE8         = qword ptr -0AE8h
var_AE0         = qword ptr -0AE0h
var_AD8         = byte ptr -0AD8h
var_9D8         = qword ptr -9D8h
var_900         = qword ptr -900h
var_818         = qword ptr -818h
var_778         = qword ptr -778h
var_768         = qword ptr -768h
var_548         = qword ptr -548h
var_508         = qword ptr -508h
var_4A8         = qword ptr -4A8h
var_440         = qword ptr -440h
var_350         = qword ptr -350h
var_348         = qword ptr -348h
var_318         = qword ptr -318h
var_300         = qword ptr -300h
var_2A0         = dword ptr -2A0h
var_1E0         = dword ptr -1E0h
var_1D8         = qword ptr -1D8h
var_1D0         = qword ptr -1D0h
var_1C8         = qword ptr -1C8h
var_1C0         = qword ptr -1C0h
var_1B8         = byte ptr -1B8h
var_1B4         = dword ptr -1B4h
var_148         = dword ptr -148h
var_140         = qword ptr -140h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_40          = qword ptr -40h
arg_0           = dword ptr  8
arg_8           = byte ptr  10h
arg_10          = dword ptr  18h
arg_18          = qword ptr  20h
arg_20          = dword ptr  28h

                mov     [rsp+arg_18], r9
                mov     [rsp+arg_10], r8d
                mov     [rsp+arg_0], ecx
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 2480h
                mov     rax, r9
                cli
                xor     edi, edi
                cmp     cs:KdDebuggerNotPresent, dil
                jnz     short loc_140A1EF15

loc_140A1EF13:                          ; CODE XREF: sub_140A1EEE4:loc_140A1EF13↓j
                jmp     short loc_140A1EF13
; ---------------------------------------------------------------------------

loc_140A1EF15:                          ; CODE XREF: sub_140A1EEE4+2D↑j
                sti
                mov     r14d, 5
                mov     [rsp+24B8h+var_1B08], r14
                lea     ebx, [r14+24h]
                lea     ecx, [rbx-25h]
                test    rax, rax
                jnz     short loc_140A1EF57
                lea     eax, [rdx-3]
                test    eax, 0FFFFFFFDh
                jnz     short loc_140A1EF47
                mov     ebx, [rsp+24B8h+arg_20]
                xor     eax, eax
                mov     edx, eax
                jmp     short loc_140A1EF6E
; ---------------------------------------------------------------------------

loc_140A1EF47:                          ; CODE XREF: sub_140A1EEE4+54↑j
                mov     eax, [rsp+24B8h+arg_20]
                mov     [rsp+24B8h+var_213C], eax
                jmp     short loc_140A1EF75
; ---------------------------------------------------------------------------

loc_140A1EF57:                          ; CODE XREF: sub_140A1EEE4+4A↑j
                cmp     edx, r14d
                ja      short loc_140A1EF61
                bt      ebx, edx
                jb      short loc_140A1EF65

loc_140A1EF61:                          ; CODE XREF: sub_140A1EEE4+76↑j
                xor     eax, eax
                mov     edx, eax

loc_140A1EF65:                          ; CODE XREF: sub_140A1EEE4+7B↑j
                mov     ebx, [rsp+24B8h+arg_20]
                or      ebx, ecx

loc_140A1EF6E:                          ; CODE XREF: sub_140A1EEE4+61↑j
                mov     [rsp+24B8h+var_213C], ebx

loc_140A1EF75:                          ; CODE XREF: sub_140A1EEE4+71↑j
                mov     eax, cs:dword_140D58638
                xor     ebx, ebx
                bt      eax, edx
                mov     esi, ebx
                cmovnb  esi, edx
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A1EF92

loc_140A1EF90:                          ; CODE XREF: sub_140A1EEE4:loc_140A1EF90↓j
                jmp     short loc_140A1EF90
; ---------------------------------------------------------------------------

loc_140A1EF92:                          ; CODE XREF: sub_140A1EEE4+AA↑j
                sti
                mov     r9, cs:qword_140D585C0
                mov     r10d, 0Ch
                cmp     r9, r10
                jnz     loc_140A39067
                lea     rax, dword_140A1D174
                lea     rdx, dword_140A1D2DC
                jmp     short loc_140A1EFBE
; ---------------------------------------------------------------------------

loc_140A1EFB9:                          ; CODE XREF: sub_140A1EEE4+DD↓j
                add     edi, [rax]
                add     rax, rcx

loc_140A1EFBE:                          ; CODE XREF: sub_140A1EEE4+D3↑j
                cmp     rax, rdx
                jnz     short loc_140A1EFB9
                xor     eax, eax
                lea     rdx, dword_140A1D16C
                lea     rax, dword_140A1D004
                jmp     short loc_140A1EFDA
; ---------------------------------------------------------------------------

loc_140A1EFD5:                          ; CODE XREF: sub_140A1EEE4+F9↓j
                add     ebx, [rax]
                add     rax, rcx

loc_140A1EFDA:                          ; CODE XREF: sub_140A1EEE4+EF↑j
                cmp     rax, rdx
                jnz     short loc_140A1EFD5
                xor     eax, eax
                cmp     edi, ebx
                jnz     loc_140A39094
                cmp     cs:qword_140D58648, rax
                lea     r15, cs:140000000h
                lea     edi, [rax+6]
                mov     r13, 7010008004002001h
                jnz     loc_140A1F957
                mov     [rsp+24B8h+var_2478], eax
                lea     r8, aFunctionextent ; "FUNCTIONEXTENTLIST"
                mov     [rsp+24B8h+var_2480], rax
                lea     edx, [rdi+4]
                mov     [rsp+24B8h+var_2488], rax
                xor     r9d, r9d
                lea     rax, [rsp+24B8h+var_1AF8]
                mov     [rsp+24B8h+var_1248], r15
                mov     [rsp+24B8h+var_2490], rax
                mov     rcx, r15
                lea     rax, [rsp+24B8h+var_1AE0]
                mov     [rsp+24B8h+var_2498], rax
                call    LdrResFindResource
                xor     ebx, ebx
                lea     r12d, [rdi-5]
                test    eax, eax
                js      loc_140A1F113
                mov     rcx, [rsp+24B8h+var_1AF8]
                mov     edx, 0FFFFFFF7h
                lea     rax, [rcx-8]
                cmp     rax, rdx
                ja      loc_140A1F113
                mov     [rsp+24B8h+var_2128], ecx
                mov     rcx, r15
                call    RtlImageNtHeader
                test    rax, rax
                jz      loc_140A1F113
                lea     r8d, [rdi-3]
                mov     dl, r12b
                lea     r9, [rsp+24B8h+var_209C]
                mov     rcx, r15
                call    RtlImageDirectoryEntryToData
                mov     r13, rax
                xor     eax, eax
                test    r13, r13
                jnz     short loc_140A1F0BC

loc_140A1F0B0:                          ; CODE XREF: sub_140A1EEE4+4E4↓j
                mov     r13, 7010008004002001h
                jmp     short loc_140A1F115
; ---------------------------------------------------------------------------

loc_140A1F0BC:                          ; CODE XREF: sub_140A1EEE4+1CA↑j
                mov     rcx, [rsp+24B8h+var_1AE0]
                mov     r14, rax
                mov     r15d, 0C0000001h
                mov     edx, [rcx]
                sub     edx, 45585443h
                jz      short loc_140A1F0E5
                cmp     edx, 9
                jz      loc_140A1F64C
                jmp     loc_140A1F3C2
; ---------------------------------------------------------------------------

loc_140A1F0E5:                          ; CODE XREF: sub_140A1EEE4+1F1↑j
                mov     ecx, 4
                lea     r8, [rsp+24B8h+var_1F9C]
                lea     rdx, [rsp+24B8h+var_1F90]
                call    RtlGetCompressionWorkSpaceSize
                test    eax, eax
                jns     short loc_140A1F166
                mov     r14d, 5
                mov     r13, 7010008004002001h

loc_140A1F113:                          ; CODE XREF: sub_140A1EEE4+173↑j
                                        ; sub_140A1EEE4+18D↑j ...
                xor     eax, eax

loc_140A1F115:                          ; CODE XREF: sub_140A1EEE4+1D6↑j
                mov     [rsp+24B8h+var_1240], rbx
                lea     rdx, [rsp+24B8h+var_1248]
                mov     ebx, 18h
                lea     rcx, qword_140D58648
                lea     edi, [rbx-15h]

loc_140A1F134:                          ; CODE XREF: sub_140A1EEE4+264↓j
                mov     rax, [rdx]
                add     ebx, 0FFFFFFF8h
                mov     [rcx], rax
                add     rdx, 8
                add     rcx, 8
                sub     rdi, r12
                jnz     short loc_140A1F134
                test    ebx, ebx
                jz      loc_140A1F99B

loc_140A1F152:                          ; CODE XREF: sub_140A1EEE4+27B↓j
                mov     al, [rdx]
                add     rdx, r12
                mov     [rcx], al
                add     rcx, r12
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A1F152
                jmp     loc_140A1F99B
; ---------------------------------------------------------------------------

loc_140A1F166:                          ; CODE XREF: sub_140A1EEE4+21D↑j
                mov     rax, [rsp+24B8h+var_1AE0]
                mov     r12d, [rax+4]
                cmp     r12d, 8
                jb      loc_140A390C3
                rdtsc
                shl     rdx, 20h
                mov     r8, 7010008004002001h
                or      rax, rdx
                mov     ebx, 5
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1AD0], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, ebx
                ja      loc_140A1F288
                jz      loc_140A1F26E
                test    ecx, ecx
                jz      short loc_140A1F254
                sub     ecx, 1
                jz      short loc_140A1F23B
                sub     ecx, 1
                jz      short loc_140A1F221
                cmp     ecx, 1
                jz      short loc_140A1F204
                mov     [rsp+24B8h+var_1F88], 67076494h
                mov     edi, [rsp+24B8h+var_1F88]
                rol     edi, 4
                jmp     loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F204:                          ; CODE XREF: sub_140A1EEE4+304↑j
                mov     [rsp+24B8h+var_1F84], 0A8223938h
                mov     edi, [rsp+24B8h+var_1F84]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F221:                          ; CODE XREF: sub_140A1EEE4+2FF↑j
                mov     [rsp+24B8h+var_1F80], 85B5910Dh
                mov     edi, [rsp+24B8h+var_1F80]
                ror     edi, 2
                jmp     loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F23B:                          ; CODE XREF: sub_140A1EEE4+2FA↑j
                mov     [rsp+24B8h+var_1F7C], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_1F7C]
                rol     edi, 1
                jmp     loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F254:                          ; CODE XREF: sub_140A1EEE4+2F5↑j
                mov     [rsp+24B8h+var_1F78], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_1F78]
                ror     edi, 6
                jmp     loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F26E:                          ; CODE XREF: sub_140A1EEE4+2ED↑j
                mov     [rsp+24B8h+var_1F74], 288C49EDh
                mov     edi, [rsp+24B8h+var_1F74]
                ror     edi, 5
                jmp     loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F288:                          ; CODE XREF: sub_140A1EEE4+2E7↑j
                sub     ecx, edi
                jz      loc_140A1F384
                sub     ecx, 1
                jz      loc_140A1F36D
                sub     ecx, 1
                jz      loc_140A1F356
                cmp     ecx, 1
                jz      loc_140A1F33C
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     r8d, 4EC4EC4Fh
                mov     rdi, rax
                mov     [rsp+24B8h+var_1AC8], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                or      ecx, ebx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ebx, 5
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F33C:                          ; CODE XREF: sub_140A1EEE4+3C1↑j
                mov     [rsp+24B8h+var_23BC], 0B0869E85h
                mov     edi, [rsp+24B8h+var_23BC]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F356:                          ; CODE XREF: sub_140A1EEE4+3B8↑j
                mov     [rsp+24B8h+var_23B8], 64664142h
                mov     edi, [rsp+24B8h+var_23B8]
                ror     edi, 8
                jmp     short loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F36D:                          ; CODE XREF: sub_140A1EEE4+3AF↑j
                mov     [rsp+24B8h+var_23B4], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_23B4]
                rol     edi, 7
                jmp     short loc_140A1F39B
; ---------------------------------------------------------------------------

loc_140A1F384:                          ; CODE XREF: sub_140A1EEE4+3A6↑j
                mov     [rsp+24B8h+var_23B0], 4E574672h
                mov     eax, [rsp+24B8h+var_23B0]
                xor     edi, eax
                ror     edi, 18h

loc_140A1F39B:                          ; CODE XREF: sub_140A1EEE4+31B↑j
                                        ; sub_140A1EEE4+338↑j ...
                mov     edx, [rsp+24B8h+var_1F90]
                mov     r8d, edi
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jnz     short loc_140A1F3CD

loc_140A1F3B9:                          ; CODE XREF: sub_140A1EEE4+A6E↓j
                mov     rbx, rax

loc_140A1F3BC:                          ; CODE XREF: sub_140A1EEE4+A55↓j
                                        ; sub_140A1EEE4+A5E↓j
                mov     r12d, 1

loc_140A1F3C2:                          ; CODE XREF: sub_140A1EEE4+1FC↑j
                mov     r14d, 5
                jmp     loc_140A1F0B0
; ---------------------------------------------------------------------------

loc_140A1F3CD:                          ; CODE XREF: sub_140A1EEE4+4D3↑j
                rdtsc
                shl     rdx, 20h
                mov     rdi, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1A98], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, ebx
                ja      loc_140A1F4D4
                jz      loc_140A1F4BA
                test    ecx, ecx
                jz      short loc_140A1F4A0
                sub     ecx, 1
                jz      short loc_140A1F487
                sub     ecx, 1
                jz      short loc_140A1F46D
                cmp     ecx, 1
                jz      short loc_140A1F450
                mov     [rsp+24B8h+var_23AC], 67076494h
                mov     edi, [rsp+24B8h+var_23AC]
                rol     edi, 4
                jmp     loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F450:                          ; CODE XREF: sub_140A1EEE4+550↑j
                mov     [rsp+24B8h+var_23A8], 0A8223938h
                mov     edi, [rsp+24B8h+var_23A8]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F46D:                          ; CODE XREF: sub_140A1EEE4+54B↑j
                mov     [rsp+24B8h+var_23A4], 85B5910Dh
                mov     edi, [rsp+24B8h+var_23A4]
                ror     edi, 2
                jmp     loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F487:                          ; CODE XREF: sub_140A1EEE4+546↑j
                mov     [rsp+24B8h+var_23A0], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_23A0]
                rol     edi, 1
                jmp     loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F4A0:                          ; CODE XREF: sub_140A1EEE4+541↑j
                mov     [rsp+24B8h+var_239C], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_239C]
                ror     edi, 6
                jmp     loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F4BA:                          ; CODE XREF: sub_140A1EEE4+539↑j
                mov     [rsp+24B8h+var_2398], 288C49EDh
                mov     edi, [rsp+24B8h+var_2398]
                ror     edi, 5
                jmp     loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F4D4:                          ; CODE XREF: sub_140A1EEE4+533↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A1F5D0
                sub     ecx, 1
                jz      loc_140A1F5B9
                sub     ecx, 1
                jz      loc_140A1F5A2
                cmp     ecx, 1
                jz      loc_140A1F588
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1A90], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F588:                          ; CODE XREF: sub_140A1EEE4+612↑j
                mov     [rsp+24B8h+var_2394], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2394]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F5A2:                          ; CODE XREF: sub_140A1EEE4+609↑j
                mov     [rsp+24B8h+var_2390], 64664142h
                mov     edi, [rsp+24B8h+var_2390]
                ror     edi, 8
                jmp     short loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F5B9:                          ; CODE XREF: sub_140A1EEE4+600↑j
                mov     [rsp+24B8h+var_238C], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_238C]
                rol     edi, 7
                jmp     short loc_140A1F5E7
; ---------------------------------------------------------------------------

loc_140A1F5D0:                          ; CODE XREF: sub_140A1EEE4+5F7↑j
                mov     [rsp+24B8h+var_2388], 4E574672h
                mov     edi, [rsp+24B8h+var_2388]
                xor     edi, edx
                ror     edi, 18h

loc_140A1F5E7:                          ; CODE XREF: sub_140A1EEE4+567↑j
                                        ; sub_140A1EEE4+584↑j ...
                mov     rdx, r12
                mov     r8d, edi
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A1F929
                mov     eax, [rsp+24B8h+var_2128]
                lea     rdx, [rsp+24B8h+var_2128]
                mov     r9, [rsp+24B8h+var_1AE0]
                add     eax, 0FFFFFFF8h
                mov     [rsp+24B8h+var_2488], r14
                add     r9, 8
                mov     [rsp+24B8h+var_2490], rdx
                mov     ecx, 4
                mov     rdx, rbx
                mov     dword ptr [rsp+24B8h+var_2498], eax
                mov     r8d, r12d
                call    RtlDecompressBufferEx
                test    eax, eax
                js      loc_140A39104
                mov     edi, 6

loc_140A1F64C:                          ; CODE XREF: sub_140A1EEE4+1F6↑j
                xor     eax, eax
                test    rbx, rbx
                jnz     loc_140A1F8BC
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1F68], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                mov     eax, 5
                cmp     ecx, eax
                ja      loc_140A1F763
                jz      loc_140A1F749
                test    ecx, ecx
                jz      short loc_140A1F72F
                sub     ecx, 1
                jz      short loc_140A1F716
                sub     ecx, 1
                jz      short loc_140A1F6FC
                cmp     ecx, 1
                jz      short loc_140A1F6DF
                mov     [rsp+24B8h+var_2380], 67076494h
                mov     edi, [rsp+24B8h+var_2380]
                rol     edi, 4
                jmp     loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F6DF:                          ; CODE XREF: sub_140A1EEE4+7DF↑j
                mov     [rsp+24B8h+var_237C], 0A8223938h
                mov     edi, [rsp+24B8h+var_237C]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F6FC:                          ; CODE XREF: sub_140A1EEE4+7DA↑j
                mov     [rsp+24B8h+var_2378], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2378]
                ror     edi, 2
                jmp     loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F716:                          ; CODE XREF: sub_140A1EEE4+7D5↑j
                mov     [rsp+24B8h+var_2374], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2374]
                rol     edi, 1
                jmp     loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F72F:                          ; CODE XREF: sub_140A1EEE4+7D0↑j
                mov     [rsp+24B8h+var_2370], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2370]
                ror     edi, 6
                jmp     loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F749:                          ; CODE XREF: sub_140A1EEE4+7C8↑j
                mov     [rsp+24B8h+var_236C], 288C49EDh
                mov     edi, [rsp+24B8h+var_236C]
                ror     edi, 5
                jmp     loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F763:                          ; CODE XREF: sub_140A1EEE4+7C2↑j
                sub     ecx, edi
                jz      loc_140A1F85A
                sub     ecx, 1
                jz      loc_140A1F843
                sub     ecx, 1
                jz      loc_140A1F82C
                cmp     ecx, 1
                jz      loc_140A1F812
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1F60], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F812:                          ; CODE XREF: sub_140A1EEE4+89C↑j
                mov     [rsp+24B8h+var_2368], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2368]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F82C:                          ; CODE XREF: sub_140A1EEE4+893↑j
                mov     [rsp+24B8h+var_2364], 64664142h
                mov     edi, [rsp+24B8h+var_2364]
                ror     edi, 8
                jmp     short loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F843:                          ; CODE XREF: sub_140A1EEE4+88A↑j
                mov     [rsp+24B8h+var_2360], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_2360]
                rol     edi, 7
                jmp     short loc_140A1F871
; ---------------------------------------------------------------------------

loc_140A1F85A:                          ; CODE XREF: sub_140A1EEE4+881↑j
                mov     [rsp+24B8h+var_235C], 4E574672h
                mov     eax, [rsp+24B8h+var_235C]
                xor     edi, eax
                ror     edi, 18h

loc_140A1F871:                          ; CODE XREF: sub_140A1EEE4+7F6↑j
                                        ; sub_140A1EEE4+813↑j ...
                mov     edx, [rsp+24B8h+var_2128]
                mov     r12d, 4
                sub     rdx, r12
                mov     r8d, edi
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A1F929
                mov     r8d, [rsp+24B8h+var_2128]
                mov     rcx, rax
                mov     rdx, [rsp+24B8h+var_1AE0]
                sub     r8, r12
                add     rdx, r12
                call    memmove
                xor     eax, eax
                jmp     short loc_140A1F8C2
; ---------------------------------------------------------------------------

loc_140A1F8BC:                          ; CODE XREF: sub_140A1EEE4+76D↑j
                mov     r12d, 4

loc_140A1F8C2:                          ; CODE XREF: sub_140A1EEE4+9D6↑j
                mov     edi, [rsp+24B8h+var_209C]
                lea     r8, cs:140000000h
                mov     ecx, r13d
                mov     edx, eax
                sub     ecx, r8d
                test    edi, edi
                jz      short loc_140A1F8EE

loc_140A1F8DC:                          ; CODE XREF: sub_140A1EEE4+A08↓j
                mov     eax, edx
                add     edx, r12d
                shr     rax, 2
                add     ecx, [r13+rax*4+0]
                cmp     edx, edi
                jb      short loc_140A1F8DC

loc_140A1F8EE:                          ; CODE XREF: sub_140A1EEE4+9F6↑j
                mov     eax, [rbx+4]
                cmp     ecx, eax
                jnz     loc_140A39140
                mov     edx, [rbx]
                cmp     edx, 1FFFFFFFh
                jnb     loc_140A39176
                mov     edi, [rsp+24B8h+var_2128]
                mov     ecx, edx
                shl     rcx, 3
                cmp     rcx, rdi
                ja      loc_140A39176
                xor     eax, eax
                mov     [rsp+24B8h+var_1238], edi
                mov     r15d, eax

loc_140A1F929:                          ; CODE XREF: sub_140A1EEE4+719↑j
                                        ; sub_140A1EEE4+9B0↑j
                test    r14, r14
                jz      short loc_140A1F936
                mov     rcx, r14
                call    ExFreePoolWithTag

loc_140A1F936:                          ; CODE XREF: sub_140A1EEE4+A48↑j
                test    rbx, rbx
                jz      loc_140A1F3BC
                test    r15d, r15d
                jns     loc_140A1F3BC
                mov     rcx, rbx
                call    ExFreePoolWithTag
                xor     eax, eax
                jmp     loc_140A1F3B9
; ---------------------------------------------------------------------------

loc_140A1F957:                          ; CODE XREF: sub_140A1EEE4+120↑j
                mov     ebx, 18h
                lea     rcx, qword_140D58648
                lea     rdx, [rsp+24B8h+var_1248]
                lea     edi, [rbx-15h]
                lea     r12d, [rbx-17h]

loc_140A1F972:                          ; CODE XREF: sub_140A1EEE4+AA2↓j
                mov     rax, [rcx]
                add     ebx, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     rdi, r12
                jnz     short loc_140A1F972
                test    ebx, ebx
                jz      short loc_140A1F99B

loc_140A1F98C:                          ; CODE XREF: sub_140A1EEE4+AB5↓j
                mov     al, [rcx]
                add     rcx, r12
                mov     [rdx], al
                add     rdx, r12
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A1F98C

loc_140A1F99B:                          ; CODE XREF: sub_140A1EEE4+268↑j
                                        ; sub_140A1EEE4+27D↑j ...
                lea     rbx, sub_140A130D0
                mov     rcx, rbx
                lea     rdx, [rsp+24B8h+var_1F58]
                call    RtlPcToFileHeader
                test    rax, rax
                jz      loc_140A237B3
                mov     rcx, [rsp+24B8h+var_1F58]
                call    RtlImageNtHeader
                test    rax, rax
                jz      loc_140A237B3
                mov     rdx, [rsp+24B8h+var_1F58]
                mov     r8d, ebx
                sub     r8d, edx
                mov     rcx, rax
                call    sub_14033C730
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rax+0Ch]
                add     rcx, [rsp+24B8h+var_1F58]
                mov     edx, [rax+8]
                sub     ebx, ecx
                mov     [rsp+24B8h+var_2458], rbx
                mov     [rsp+24B8h+var_2450], rcx
                mov     dword ptr [rsp+24B8h+var_2408], edx
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A1FA1E

loc_140A1FA1C:                          ; CODE XREF: sub_140A1EEE4:loc_140A1FA1C↓j
                jmp     short loc_140A1FA1C
; ---------------------------------------------------------------------------

loc_140A1FA1E:                          ; CODE XREF: sub_140A1EEE4+B36↑j
                sti
                lea     rax, sub_140A11D10
                sub     eax, ecx
                lea     rdi, qword_140A13040
                mov     [rsp+24B8h+var_2460], rax
                sub     edi, ecx
                lea     rax, sub_140A12830
                mov     [rsp+24B8h+var_2448], rdi
                sub     eax, ecx
                mov     [rsp+24B8h+var_2440], rax
                cmp     edi, 7FFFFFFFh
                ja      loc_140A391A7
                xor     eax, eax
                mov     ebx, eax
                call    sub_140A75BB8
                test    eax, eax
                jz      short loc_140A1FA6D
                call    sub_140A3A0D4
                test    eax, eax
                cmovnz  ebx, r12d

loc_140A1FA6D:                          ; CODE XREF: sub_140A1EEE4+B7C↑j
                cmp     esi, 7
                mov     rdi, 0CCCCCCCCCCCCCCCDh
                cmovz   ebx, r12d
                mov     [rsp+24B8h+var_2400], ebx
                cmp     esi, 3
                jnz     short loc_140A1FAD3
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1F50], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r14
                jnb     short loc_140A1FAD3
                mov     dword ptr [rsp+24B8h+var_23E0], esi
                jmp     short loc_140A1FB45
; ---------------------------------------------------------------------------

loc_140A1FAD3:                          ; CODE XREF: sub_140A1EEE4+BA4↑j
                                        ; sub_140A1EEE4+BE4↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1F48], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 2
                jnb     short loc_140A1FB49
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                mov     rcx, rax
                mov     [rsp+24B8h+var_1F40], rdx
                xor     ecx, edx
                and     ecx, r12d
                mov     [rsp+24B8h+var_23E0], rcx

loc_140A1FB45:                          ; CODE XREF: sub_140A1EEE4+BED↑j
                xor     eax, eax
                jmp     short loc_140A1FB52
; ---------------------------------------------------------------------------

loc_140A1FB49:                          ; CODE XREF: sub_140A1EEE4+C2E↑j
                xor     eax, eax
                mov     dword ptr [rsp+24B8h+var_23E0], eax

loc_140A1FB52:                          ; CODE XREF: sub_140A1EEE4+C63↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A1FB5D

loc_140A1FB5B:                          ; CODE XREF: sub_140A1EEE4:loc_140A1FB5B↓j
                jmp     short loc_140A1FB5B
; ---------------------------------------------------------------------------

loc_140A1FB5D:                          ; CODE XREF: sub_140A1EEE4+C75↑j
                sti
                mov     [rsp+24B8h+var_234C], esi
                test    ebx, ebx
                jz      short loc_140A1FB8E
                mov     dword ptr [rsp+24B8h+var_23E0], eax
                mov     [rsp+24B8h+var_234C], esi
                cmp     esi, 7
                jz      short loc_140A1FB8E
                xor     ecx, ecx
                lea     eax, [rsi-3]
                cmp     eax, r12d
                cmova   ecx, esi
                mov     [rsp+24B8h+var_234C], ecx

loc_140A1FB8E:                          ; CODE XREF: sub_140A1EEE4+C83↑j
                                        ; sub_140A1EEE4+C96↑j
                mov     rax, cs:off_140C005D8
                xorps   xmm0, xmm0
                mov     cs:qword_140C00210, rax
                xor     eax, eax
                movdqu  [rsp+24B8h+var_1180], xmm0
                mov     r13d, dword ptr [rsp+24B8h+var_1180+8]
                mov     esi, eax
                mov     [rsp+24B8h+var_1170], rax
                mov     r15d, eax
                mov     [rsp+24B8h+var_1188], rax
                mov     dword ptr [rsp+24B8h+var_23D0], eax
                mov     [rsp+24B8h+var_23C0], r13d

loc_140A1FBD6:                          ; CODE XREF: sub_140A1EEE4+FD1↓j
                mov     eax, esi
                lea     rcx, cs:140000000h
                lea     r8, [rsp+24B8h+var_2348]
                lea     rdx, [rsp+24B8h+var_F70]
                mov     r14, rva qword_140C00210[rcx+rax*8]
                mov     rcx, r14
                call    sub_1403C5CDC
                mov     rbx, rax
                mov     [rsp+24B8h+var_F80], rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A1FD54
                mov     [rsp+24B8h+var_F58], rax
                mov     rax, [rsp+24B8h+var_F70]
                cmp     [rsp+24B8h+var_1248], rax
                jnz     loc_140A1FCEE
                mov     rsi, [rsp+24B8h+var_1240]
                lea     rdx, [rsp+24B8h+var_F70]
                xor     eax, eax
                mov     [rsp+24B8h+var_F58], rsi
                mov     [rsp+24B8h+var_F50], rax
                xor     r8d, r8d
                mov     eax, [rsp+24B8h+var_1238]
                mov     rcx, r14
                mov     [rsp+24B8h+var_F48], eax
                xor     eax, eax
                mov     [rsp+24B8h+var_F44], eax
                call    RtlLookupFunctionEntry
                mov     rdi, rax
                mov     [rsp+24B8h+var_F78], rax
                xor     eax, eax
                test    rdi, rdi
                jz      short loc_140A1FCE4
                mov     ecx, [rsi]
                mov     r8d, edi
                sub     r8d, dword ptr [rsp+24B8h+var_F70]
                mov     ebx, eax
                sub     ecx, r12d
                js      short loc_140A1FCE4
                xor     r10d, r10d

loc_140A1FCA0:                          ; CODE XREF: sub_140A1EEE4+DE8↓j
                lea     edx, [rcx+rbx]
                mov     eax, r8d
                sar     edx, 1
                mov     r9d, edx
                inc     r9
                lea     r9, [rsi+r9*8]
                sub     eax, [r9]
                jns     short loc_140A1FCC3
                test    edx, edx
                jz      short loc_140A1FCE4
                lea     ecx, [rdx-1]
                xor     r10d, r10d
                jmp     short loc_140A1FCCA
; ---------------------------------------------------------------------------

loc_140A1FCC3:                          ; CODE XREF: sub_140A1EEE4+DD1↑j
                test    eax, eax
                jle     short loc_140A1FCCE
                lea     ebx, [rdx+1]

loc_140A1FCCA:                          ; CODE XREF: sub_140A1EEE4+DDD↑j
                cmp     ecx, ebx
                jge     short loc_140A1FCA0

loc_140A1FCCE:                          ; CODE XREF: sub_140A1EEE4+DE1↑j
                mov     rax, [rsp+24B8h+var_F50]
                cmp     ecx, ebx
                cmovge  rax, r9
                mov     [rsp+24B8h+var_F50], rax

loc_140A1FCE4:                          ; CODE XREF: sub_140A1EEE4+DA3↑j
                                        ; sub_140A1EEE4+DB7↑j ...
                mov     rbx, [rsp+24B8h+var_F80]
                jmp     short loc_140A1FCF6
; ---------------------------------------------------------------------------

loc_140A1FCEE:                          ; CODE XREF: sub_140A1EEE4+D49↑j
                mov     rdi, [rsp+24B8h+var_F78]

loc_140A1FCF6:                          ; CODE XREF: sub_140A1EEE4+E08↑j
                mov     ecx, [rsp+24B8h+var_2348]
                lea     r8, [rsp+24B8h+var_1F38]
                mov     rsi, [rsp+24B8h+var_F70]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                mov     [rsp+24B8h+var_F88], r14
                shr     rdx, 3
                mov     eax, edx
                mov     [rsp+24B8h+var_2348], edx
                mov     [rsp+24B8h+var_F60], r8
                mov     [rsp+24B8h+var_23F8], rsi
                lea     rcx, [rax+rax*2]
                lea     rax, [rbx+rcx*4]
                mov     [rsp+24B8h+var_F68], rax
                jmp     loc_140A2034A
; ---------------------------------------------------------------------------

loc_140A1FD54:                          ; CODE XREF: sub_140A1EEE4+D2B↑j
                mov     r8, [rsp+24B8h+var_F60]
                mov     rdi, [rsp+24B8h+var_F78]
                mov     rsi, [rsp+24B8h+var_23F8]

loc_140A1FD6C:                          ; CODE XREF: sub_140A1EEE4+1468↓j
                test    rbx, rbx
                jz      loc_140A1FEA1
                cmp     rbx, [rsp+24B8h+var_F68]
                jz      loc_140A1FEA1
                cmp     [rsp+24B8h+var_F58], rax
                jz      loc_140A1FE50
                test    rdi, rdi
                jz      loc_140A1FEA1
                cmp     [rsp+24B8h+var_F50], rax
                jnz     short loc_140A1FDB4
                mov     [r8], rdi
                mov     [rsp+24B8h+var_F78], rax
                jmp     loc_140A1FEEC
; ---------------------------------------------------------------------------

loc_140A1FDB4:                          ; CODE XREF: sub_140A1EEE4+EBE↑j
                mov     rax, [rsp+24B8h+var_F50]
                mov     ecx, [rax+4]
                test    r12b, cl
                jz      short loc_140A1FDE3
                and     ecx, 0FFFFFFFEh
                mov     eax, ecx
                add     rax, [rsp+24B8h+var_F70]
                mov     [r8], rax
                xor     eax, eax
                mov     [rsp+24B8h+var_F50], rax
                jmp     loc_140A1FEEC
; ---------------------------------------------------------------------------

loc_140A1FDE3:                          ; CODE XREF: sub_140A1EEE4+EDE↑j
                mov     edi, [rsp+24B8h+var_F44]
                add     ecx, edi
                mov     edx, ecx
                add     rcx, 4
                cmp     rcx, rdx
                jb      loc_140A391DA
                mov     eax, [rsp+24B8h+var_F48]
                cmp     rcx, rax
                ja      loc_140A391DA
                mov     rax, [rsp+24B8h+var_F58]
                add     edi, 4
                mov     ebx, [rdx+rax]
                mov     edx, ebx
                and     edx, r12d
                mov     [rsp+24B8h+var_F44], edi
                mov     eax, edx
                neg     eax
                mov     eax, ebx
                sbb     rcx, rcx
                and     eax, 0FFFFFFFEh
                and     [rsp+24B8h+var_F50], rcx
                test    edx, edx
                cmovnz  ebx, eax
                mov     eax, ebx
                add     rax, [rsp+24B8h+var_F70]
                mov     [r8], rax
                jmp     loc_140A1FEEC
; ---------------------------------------------------------------------------

loc_140A1FE50:                          ; CODE XREF: sub_140A1EEE4+EA7↑j
                                        ; sub_140A1EEE4+FBB↓j
                mov     rdx, [rsp+24B8h+var_F70]
                mov     rcx, rbx
                mov     rdi, rbx
                call    sub_1402AE7D0
                mov     r8, [rsp+24B8h+var_F88]
                mov     rcx, rax
                mov     rdx, [rsp+24B8h+var_F70]
                call    sub_1405868D0
                mov     rbx, [rsp+24B8h+var_F80]
                mov     rcx, rax
                add     rbx, 0Ch
                mov     [rsp+24B8h+var_F80], rbx
                test    rax, rax
                jnz     short loc_140A1FEE1
                cmp     rbx, [rsp+24B8h+var_F68]
                jnz     short loc_140A1FE50

loc_140A1FEA1:                          ; CODE XREF: sub_140A1EEE4+E8B↑j
                                        ; sub_140A1EEE4+E99↑j ...
                mov     esi, dword ptr [rsp+24B8h+var_23D0]
                add     esi, r12d
                mov     dword ptr [rsp+24B8h+var_23D0], esi
                cmp     esi, 0Fh
                jb      loc_140A1FBD6
                add     dword ptr [rsp+24B8h+var_1170+4], 8
                lea     rsi, off_140C005D8
                inc     r15d
                mov     [rsp+24B8h+var_23F0], r15d
                and     rsi, 0FFFFFFFFFFFFF000h
                jmp     loc_140A20357
; ---------------------------------------------------------------------------

loc_140A1FEE1:                          ; CODE XREF: sub_140A1EEE4+FB1↑j
                mov     rax, [rsp+24B8h+var_F60]
                mov     [rax], rdi

loc_140A1FEEC:                          ; CODE XREF: sub_140A1EEE4+ECB↑j
                                        ; sub_140A1EEE4+EFA↑j ...
                mov     rax, [rsp+24B8h+var_1F38]
                mov     ecx, [rax]
                mov     edx, [rax+4]
                sub     edx, ecx
                add     dword ptr [rsp+24B8h+var_1170+4], edx
                inc     r15d
                lea     rax, [rsi+rcx]
                mov     [rsp+24B8h+var_23F0], r15d
                mov     r14, rax
                mov     ecx, edx
                and     r14, 0FFFFFFFFFFFFF000h
                add     rcx, rax
                mov     [rsp+24B8h+var_23D8], rcx

loc_140A1FF28:                          ; CODE XREF: sub_140A1EEE4+1430↓j
                mov     rax, cs:qword_140CFB358
                mov     rcx, r14
                lea     rdx, [rsp+24B8h+var_1168]
                shr     rcx, 9
                mov     rdi, 7FFFFFFFF8h
                and     rcx, rdi
                mov     ebx, 4
                add     rcx, rax

loc_140A1FF53:                          ; CODE XREF: sub_140A1EEE4+108A↓j
                mov     [rdx], rcx
                mov     rax, cs:qword_140CFB358
                shr     rcx, 9
                lea     rdx, [rdx+8]
                and     rcx, rdi
                add     rcx, rax
                sub     rbx, r12
                jnz     short loc_140A1FF53
                xor     r13d, r13d
                mov     ebx, r13d
                lea     edx, [r13+3]

loc_140A1FF7A:                          ; CODE XREF: sub_140A1EEE4+10C5↓j
                mov     edi, edx
                test    ebx, ebx
                jz      short loc_140A1FF8C
                mov     eax, edx
                mov     [rsp+rax*8+24B8h+var_1168], r13
                jmp     short loc_140A1FFA5
; ---------------------------------------------------------------------------

loc_140A1FF8C:                          ; CODE XREF: sub_140A1EEE4+109A↑j
                test    edx, edx
                jz      short loc_140A1FFAB
                mov     eax, edx
                mov     rcx, [rsp+rax*8+24B8h+var_1168]
                mov     al, [rcx]
                shr     al, 7
                test    al, al
                cmovnz  ebx, r12d

loc_140A1FFA5:                          ; CODE XREF: sub_140A1EEE4+10A6↑j
                dec     edx
                test    edi, edi
                jnz     short loc_140A1FF7A

loc_140A1FFAB:                          ; CODE XREF: sub_140A1EEE4+10AA↑j
                mov     r13d, [rsp+24B8h+var_23C0]
                mov     r15d, 4

loc_140A1FFB9:                          ; CODE XREF: sub_140A1EEE4+1414↓j
                dec     r15d
                xor     eax, eax
                mov     r12, [rsp+r15*8+24B8h+var_1168]
                test    r12, r12
                jz      loc_140A202FE
                mov     edx, eax
                cmp     dword ptr [rsp+24B8h+var_1180+0Ch], eax
                jbe     short loc_140A1FFFD

loc_140A1FFDA:                          ; CODE XREF: sub_140A1EEE4+110F↓j
                mov     rax, qword ptr [rsp+24B8h+var_1180]
                mov     ecx, edx
                cmp     r12, [rax+rcx*8]
                jz      short loc_140A1FFF5
                inc     edx
                cmp     edx, dword ptr [rsp+24B8h+var_1180+0Ch]
                jb      short loc_140A1FFDA

loc_140A1FFF5:                          ; CODE XREF: sub_140A1EEE4+1104↑j
                mov     r13d, [rsp+24B8h+var_23C0]

loc_140A1FFFD:                          ; CODE XREF: sub_140A1EEE4+10F4↑j
                mov     eax, dword ptr [rsp+24B8h+var_1180+0Ch]
                cmp     edx, eax
                jnz     loc_140A202F5
                cmp     eax, r13d
                jnz     loc_140A202D3
                lea     r13d, ds:40h[r13*2]
                mov     [rsp+24B8h+var_23C0], r13d
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1F30], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                mov     eax, 5
                cmp     ecx, eax
                ja      loc_140A20131
                jz      loc_140A20117
                test    ecx, ecx
                jz      short loc_140A200FD
                sub     ecx, 1
                jz      short loc_140A200E4
                sub     ecx, 1
                jz      short loc_140A200CA
                cmp     ecx, 1
                jz      short loc_140A200AD
                mov     [rsp+24B8h+var_2344], 67076494h
                mov     edi, [rsp+24B8h+var_2344]
                rol     edi, 4
                jmp     loc_140A20244
; ---------------------------------------------------------------------------

loc_140A200AD:                          ; CODE XREF: sub_140A1EEE4+11AD↑j
                mov     [rsp+24B8h+var_2340], 0A8223938h
                mov     edi, [rsp+24B8h+var_2340]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A20244
; ---------------------------------------------------------------------------

loc_140A200CA:                          ; CODE XREF: sub_140A1EEE4+11A8↑j
                mov     [rsp+24B8h+var_233C], 85B5910Dh
                mov     edi, [rsp+24B8h+var_233C]
                ror     edi, 2
                jmp     loc_140A20244
; ---------------------------------------------------------------------------

loc_140A200E4:                          ; CODE XREF: sub_140A1EEE4+11A3↑j
                mov     [rsp+24B8h+var_2338], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2338]
                rol     edi, 1
                jmp     loc_140A20244
; ---------------------------------------------------------------------------

loc_140A200FD:                          ; CODE XREF: sub_140A1EEE4+119E↑j
                mov     [rsp+24B8h+var_2334], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2334]
                ror     edi, 6
                jmp     loc_140A20244
; ---------------------------------------------------------------------------

loc_140A20117:                          ; CODE XREF: sub_140A1EEE4+1196↑j
                mov     [rsp+24B8h+var_2330], 288C49EDh
                mov     edi, [rsp+24B8h+var_2330]
                ror     edi, 5
                jmp     loc_140A20244
; ---------------------------------------------------------------------------

loc_140A20131:                          ; CODE XREF: sub_140A1EEE4+1190↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A2022D
                sub     ecx, 1
                jz      loc_140A20216
                sub     ecx, 1
                jz      loc_140A201FF
                cmp     ecx, 1
                jz      loc_140A201E5
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1F28], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A20244
; ---------------------------------------------------------------------------

loc_140A201E5:                          ; CODE XREF: sub_140A1EEE4+126F↑j
                mov     [rsp+24B8h+var_232C], 0B0869E85h
                mov     edi, [rsp+24B8h+var_232C]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A20244
; ---------------------------------------------------------------------------

loc_140A201FF:                          ; CODE XREF: sub_140A1EEE4+1266↑j
                mov     [rsp+24B8h+var_2328], 64664142h
                mov     edi, [rsp+24B8h+var_2328]
                ror     edi, 8
                jmp     short loc_140A20244
; ---------------------------------------------------------------------------

loc_140A20216:                          ; CODE XREF: sub_140A1EEE4+125D↑j
                mov     [rsp+24B8h+var_2324], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_2324]
                rol     edi, 7
                jmp     short loc_140A20244
; ---------------------------------------------------------------------------

loc_140A2022D:                          ; CODE XREF: sub_140A1EEE4+1254↑j
                mov     [rsp+24B8h+var_2320], 4E574672h
                mov     edi, [rsp+24B8h+var_2320]
                xor     edi, edx
                ror     edi, 18h

loc_140A20244:                          ; CODE XREF: sub_140A1EEE4+11C4↑j
                                        ; sub_140A1EEE4+11E1↑j ...
                mov     edx, r13d
                mov     r8d, edi
                shl     rdx, 3
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                xor     eax, eax
                test    rsi, rsi
                jz      loc_140A237B3
                mov     rcx, qword ptr [rsp+24B8h+var_1180]
                test    rcx, rcx
                jz      short loc_140A202C3
                mov     edx, dword ptr [rsp+24B8h+var_1180+0Ch]
                mov     rbx, rsi
                shl     edx, 3
                cmp     edx, 8
                jb      short loc_140A202A2
                mov     edi, edx
                shr     rdi, 3

loc_140A2028B:                          ; CODE XREF: sub_140A1EEE4+13BC↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [rbx], rax
                add     rcx, 8
                add     rbx, 8
                sub     rdi, 1
                jnz     short loc_140A2028B

loc_140A202A2:                          ; CODE XREF: sub_140A1EEE4+139F↑j
                test    edx, edx
                jz      short loc_140A202B6
                sub     rbx, rcx

loc_140A202A9:                          ; CODE XREF: sub_140A1EEE4+13D0↓j
                mov     al, [rcx]
                mov     [rcx+rbx], al
                inc     rcx
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A202A9

loc_140A202B6:                          ; CODE XREF: sub_140A1EEE4+13C0↑j
                mov     rcx, qword ptr [rsp+24B8h+var_1180]
                call    ExFreePoolWithTag

loc_140A202C3:                          ; CODE XREF: sub_140A1EEE4+138D↑j
                mov     qword ptr [rsp+24B8h+var_1180], rsi
                mov     dword ptr [rsp+24B8h+var_1180+8], r13d

loc_140A202D3:                          ; CODE XREF: sub_140A1EEE4+112B↑j
                mov     ecx, dword ptr [rsp+24B8h+var_1180+0Ch]
                mov     rax, qword ptr [rsp+24B8h+var_1180]
                inc     dword ptr [rsp+24B8h+var_1180+0Ch]
                add     dword ptr [rsp+24B8h+var_1170+4], 10h
                mov     [rax+rcx*8], r12

loc_140A202F5:                          ; CODE XREF: sub_140A1EEE4+1122↑j
                test    r15d, r15d
                jnz     loc_140A1FFB9

loc_140A202FE:                          ; CODE XREF: sub_140A1EEE4+10E5↑j
                mov     eax, 1000h
                mov     r12d, 1
                add     r14, rax
                cmp     r14, [rsp+24B8h+var_23D8]
                jb      loc_140A1FF28
                mov     r15d, [rsp+24B8h+var_23F0]
                mov     r8, [rsp+24B8h+var_F60]
                mov     rdi, [rsp+24B8h+var_F78]
                mov     rbx, [rsp+24B8h+var_F80]
                mov     rsi, [rsp+24B8h+var_23F8]
                mov     dword ptr [rsp+24B8h+var_1170], r15d

loc_140A2034A:                          ; CODE XREF: sub_140A1EEE4+E6B↑j
                xor     eax, eax
                jmp     loc_140A1FD6C
; ---------------------------------------------------------------------------

loc_140A20351:                          ; CODE XREF: sub_140A1EEE4+186B↓j
                mov     r12d, 1

loc_140A20357:                          ; CODE XREF: sub_140A1EEE4+FF8↑j
                mov     rax, cs:qword_140CFB358
                mov     rcx, rsi
                lea     rdx, [rsp+24B8h+var_1148]
                shr     rcx, 9
                mov     rdi, 7FFFFFFFF8h
                and     rcx, rdi
                mov     r8d, 4
                add     rcx, rax
                mov     ebx, r8d

loc_140A20386:                          ; CODE XREF: sub_140A1EEE4+14BD↓j
                mov     [rdx], rcx
                mov     rax, cs:qword_140CFB358
                shr     rcx, 9
                lea     rdx, [rdx+8]
                and     rcx, rdi
                add     rcx, rax
                sub     rbx, r12
                jnz     short loc_140A20386
                xor     r15d, r15d
                mov     ebx, r15d
                lea     edx, [r15+3]

loc_140A203AD:                          ; CODE XREF: sub_140A1EEE4+14F8↓j
                mov     edi, edx
                test    ebx, ebx
                jz      short loc_140A203BF
                mov     eax, edx
                mov     [rsp+rax*8+24B8h+var_1148], r15
                jmp     short loc_140A203D8
; ---------------------------------------------------------------------------

loc_140A203BF:                          ; CODE XREF: sub_140A1EEE4+14CD↑j
                test    edx, edx
                jz      short loc_140A203DE
                mov     eax, edx
                mov     rcx, [rsp+rax*8+24B8h+var_1148]
                mov     al, [rcx]
                shr     al, 7
                test    al, al
                cmovnz  ebx, r12d

loc_140A203D8:                          ; CODE XREF: sub_140A1EEE4+14D9↑j
                dec     edx
                test    edi, edi
                jnz     short loc_140A203AD

loc_140A203DE:                          ; CODE XREF: sub_140A1EEE4+14DD↑j
                mov     r15d, [rsp+24B8h+var_23F0]
                mov     r12d, r8d

loc_140A203E9:                          ; CODE XREF: sub_140A1EEE4+1854↓j
                dec     r12d
                xor     eax, eax
                mov     r13, [rsp+r12*8+24B8h+var_1148]
                test    r13, r13
                jz      loc_140A2073E
                mov     edx, eax
                cmp     dword ptr [rsp+24B8h+var_1180+0Ch], eax
                jbe     short loc_140A2042D

loc_140A2040A:                          ; CODE XREF: sub_140A1EEE4+153F↓j
                mov     rax, qword ptr [rsp+24B8h+var_1180]
                mov     ecx, edx
                cmp     r13, [rax+rcx*8]
                jz      short loc_140A20425
                inc     edx
                cmp     edx, dword ptr [rsp+24B8h+var_1180+0Ch]
                jb      short loc_140A2040A

loc_140A20425:                          ; CODE XREF: sub_140A1EEE4+1534↑j
                mov     r15d, [rsp+24B8h+var_23F0]

loc_140A2042D:                          ; CODE XREF: sub_140A1EEE4+1524↑j
                mov     eax, dword ptr [rsp+24B8h+var_1180+0Ch]
                cmp     edx, eax
                jnz     loc_140A20733
                mov     r8d, [rsp+24B8h+var_23C0]
                cmp     eax, r8d
                jnz     loc_140A20711
                lea     r8d, ds:40h[r8*2]
                mov     [rsp+24B8h+var_23C0], r8d
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1F20], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                mov     eax, 5
                cmp     ecx, eax
                ja      loc_140A20569
                jz      loc_140A2054F
                test    ecx, ecx
                jz      short loc_140A20535
                sub     ecx, 1
                jz      short loc_140A2051C
                sub     ecx, 1
                jz      short loc_140A20502
                cmp     ecx, 1
                jz      short loc_140A204E5
                mov     [rsp+24B8h+var_2318], 67076494h
                mov     edi, [rsp+24B8h+var_2318]
                rol     edi, 4
                jmp     loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A204E5:                          ; CODE XREF: sub_140A1EEE4+15E5↑j
                mov     [rsp+24B8h+var_2314], 0A8223938h
                mov     edi, [rsp+24B8h+var_2314]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A20502:                          ; CODE XREF: sub_140A1EEE4+15E0↑j
                mov     [rsp+24B8h+var_2310], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2310]
                ror     edi, 2
                jmp     loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A2051C:                          ; CODE XREF: sub_140A1EEE4+15DB↑j
                mov     [rsp+24B8h+var_230C], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_230C]
                rol     edi, 1
                jmp     loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A20535:                          ; CODE XREF: sub_140A1EEE4+15D6↑j
                mov     [rsp+24B8h+var_2308], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2308]
                ror     edi, 6
                jmp     loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A2054F:                          ; CODE XREF: sub_140A1EEE4+15CE↑j
                mov     [rsp+24B8h+var_2304], 288C49EDh
                mov     edi, [rsp+24B8h+var_2304]
                ror     edi, 5
                jmp     loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A20569:                          ; CODE XREF: sub_140A1EEE4+15C8↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A20665
                sub     ecx, 1
                jz      loc_140A2064E
                sub     ecx, 1
                jz      loc_140A20637
                cmp     ecx, 1
                jz      loc_140A2061D
                rdtsc
                shl     rdx, 20h
                mov     r9d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1F18], rdx
                xor     edi, edx
                mov     eax, r9d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r9d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A2061D:                          ; CODE XREF: sub_140A1EEE4+16A7↑j
                mov     [rsp+24B8h+var_2300], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2300]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A20637:                          ; CODE XREF: sub_140A1EEE4+169E↑j
                mov     [rsp+24B8h+var_22FC], 64664142h
                mov     edi, [rsp+24B8h+var_22FC]
                ror     edi, 8
                jmp     short loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A2064E:                          ; CODE XREF: sub_140A1EEE4+1695↑j
                mov     [rsp+24B8h+var_22F8], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_22F8]
                rol     edi, 7
                jmp     short loc_140A2067C
; ---------------------------------------------------------------------------

loc_140A20665:                          ; CODE XREF: sub_140A1EEE4+168C↑j
                mov     [rsp+24B8h+var_22F4], 4E574672h
                mov     edi, [rsp+24B8h+var_22F4]
                xor     edi, edx
                ror     edi, 18h

loc_140A2067C:                          ; CODE XREF: sub_140A1EEE4+15FC↑j
                                        ; sub_140A1EEE4+1619↑j ...
                mov     edx, r8d
                mov     ecx, 200h
                shl     rdx, 3
                mov     r8d, edi
                call    ExAllocatePoolWithTag
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jz      loc_140A237B3
                mov     rcx, qword ptr [rsp+24B8h+var_1180]
                test    rcx, rcx
                jz      short loc_140A206FB
                mov     edx, dword ptr [rsp+24B8h+var_1180+0Ch]
                mov     rbx, r14
                shl     edx, 3
                cmp     edx, 8
                jb      short loc_140A206DA
                mov     edi, edx
                shr     rdi, 3

loc_140A206C3:                          ; CODE XREF: sub_140A1EEE4+17F4↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [rbx], rax
                add     rcx, 8
                add     rbx, 8
                sub     rdi, 1
                jnz     short loc_140A206C3

loc_140A206DA:                          ; CODE XREF: sub_140A1EEE4+17D7↑j
                test    edx, edx
                jz      short loc_140A206EE
                sub     rbx, rcx

loc_140A206E1:                          ; CODE XREF: sub_140A1EEE4+1808↓j
                mov     al, [rcx]
                mov     [rbx+rcx], al
                inc     rcx
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A206E1

loc_140A206EE:                          ; CODE XREF: sub_140A1EEE4+17F8↑j
                mov     rcx, qword ptr [rsp+24B8h+var_1180]
                call    ExFreePoolWithTag

loc_140A206FB:                          ; CODE XREF: sub_140A1EEE4+17C5↑j
                mov     eax, [rsp+24B8h+var_23C0]
                mov     dword ptr [rsp+24B8h+var_1180+8], eax
                mov     qword ptr [rsp+24B8h+var_1180], r14

loc_140A20711:                          ; CODE XREF: sub_140A1EEE4+1563↑j
                mov     ecx, dword ptr [rsp+24B8h+var_1180+0Ch]
                mov     rax, qword ptr [rsp+24B8h+var_1180]
                inc     dword ptr [rsp+24B8h+var_1180+0Ch]
                add     dword ptr [rsp+24B8h+var_1170+4], 10h
                mov     [rax+rcx*8], r13

loc_140A20733:                          ; CODE XREF: sub_140A1EEE4+1552↑j
                xor     eax, eax
                test    r12d, r12d
                jnz     loc_140A203E9

loc_140A2073E:                          ; CODE XREF: sub_140A1EEE4+1515↑j
                add     rsi, 1000h
                lea     rcx, qword_140C005E0
                cmp     rsi, rcx
                jb      loc_140A20351
                mov     dword ptr [rsp+24B8h+var_1170], r15d
                shl     r15d, 4
                add     r15d, dword ptr [rsp+24B8h+var_1170+4]
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A20774

loc_140A20772:                          ; CODE XREF: sub_140A1EEE4:loc_140A20772↓j
                jmp     short loc_140A20772
; ---------------------------------------------------------------------------

loc_140A20774:                          ; CODE XREF: sub_140A1EEE4+188C↑j
                sti
                mov     r12d, [rsp+24B8h+var_2400]
                mov     ecx, eax
                test    r12d, r12d
                lea     eax, [r15+0AA8h]
                mov     edx, 0AA0h
                cmovz   ecx, dword ptr [rsp+24B8h+var_2408]
                cmovz   edx, eax
                mov     [rsp+24B8h+var_23F0], ecx
                mov     [rsp+24B8h+var_23C0], edx
                lea     r13d, [rcx+rdx]
                mov     dword ptr [rsp+24B8h+var_23D0], r13d
                rdtsc
                shl     rdx, 20h
                mov     r8, 7010008004002001h
                or      rax, rdx
                mov     r9d, 7FFh
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     [rsp+24B8h+var_1F10], rdx
                xor     rdx, rax
                and     edx, r9d
                lea     r15d, [rdx+80000h]
                add     r15d, r13d
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1F08], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                mov     eax, 5
                cmp     ecx, eax
                ja      loc_140A208F6
                jz      loc_140A208DC
                test    ecx, ecx
                jz      short loc_140A208C2
                sub     ecx, 1
                jz      short loc_140A208A9
                sub     ecx, 1
                jz      short loc_140A2088F
                cmp     ecx, 1
                jz      short loc_140A20872
                mov     [rsp+24B8h+var_22F0], 67076494h
                mov     edi, [rsp+24B8h+var_22F0]
                rol     edi, 4
                jmp     loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A20872:                          ; CODE XREF: sub_140A1EEE4+1972↑j
                mov     [rsp+24B8h+var_22EC], 0A8223938h
                mov     edi, [rsp+24B8h+var_22EC]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A2088F:                          ; CODE XREF: sub_140A1EEE4+196D↑j
                mov     [rsp+24B8h+var_22E8], 85B5910Dh
                mov     edi, [rsp+24B8h+var_22E8]
                ror     edi, 2
                jmp     loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A208A9:                          ; CODE XREF: sub_140A1EEE4+1968↑j
                mov     [rsp+24B8h+var_22E4], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_22E4]
                rol     edi, 1
                jmp     loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A208C2:                          ; CODE XREF: sub_140A1EEE4+1963↑j
                mov     [rsp+24B8h+var_22E0], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_22E0]
                ror     edi, 6
                jmp     loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A208DC:                          ; CODE XREF: sub_140A1EEE4+195B↑j
                mov     [rsp+24B8h+var_22DC], 288C49EDh
                mov     edi, [rsp+24B8h+var_22DC]
                ror     edi, 5
                jmp     loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A208F6:                          ; CODE XREF: sub_140A1EEE4+1955↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A209F2
                sub     ecx, 1
                jz      loc_140A209DB
                sub     ecx, 1
                jz      loc_140A209C4
                cmp     ecx, 1
                jz      loc_140A209AA
                rdtsc
                shl     rdx, 20h
                mov     r10d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1F00], rdx
                xor     edi, edx
                mov     eax, r10d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r10d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r10d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r10d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A209AA:                          ; CODE XREF: sub_140A1EEE4+1A34↑j
                mov     [rsp+24B8h+var_22D8], 0B0869E85h
                mov     edi, [rsp+24B8h+var_22D8]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A209C4:                          ; CODE XREF: sub_140A1EEE4+1A2B↑j
                mov     [rsp+24B8h+var_22D4], 64664142h
                mov     edi, [rsp+24B8h+var_22D4]
                ror     edi, 8
                jmp     short loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A209DB:                          ; CODE XREF: sub_140A1EEE4+1A22↑j
                mov     [rsp+24B8h+var_22D0], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_22D0]
                rol     edi, 7
                jmp     short loc_140A20A09
; ---------------------------------------------------------------------------

loc_140A209F2:                          ; CODE XREF: sub_140A1EEE4+1A19↑j
                mov     [rsp+24B8h+var_22CC], 4E574672h
                mov     edi, [rsp+24B8h+var_22CC]
                xor     edi, edx
                ror     edi, 18h

loc_140A20A09:                          ; CODE XREF: sub_140A1EEE4+1989↑j
                                        ; sub_140A1EEE4+19A6↑j ...
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rsi, rax
                mov     [rsp+24B8h+var_1EF8], rdx
                xor     esi, edx
                and     esi, r9d
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                lea     ecx, [rsi+1]
                mov     r8d, edi
                mov     [rsp+24B8h+var_1EF0], rdx
                xor     rax, rdx
                xor     edx, edx
                div     rcx
                xor     ecx, ecx
                mov     r14, rdx
                lea     edx, [rsi+r15]
                call    ExAllocatePoolWithTag
                mov     r9, rax
                xor     eax, eax
                test    r9, r9
                jz      loc_140A237B3
                lea     r10d, [rax+1]
                mov     edi, r14d
                mov     rbx, r9
                mov     r11, 7010008004002001h
                cmp     r14d, 8
                jb      short loc_140A20AD1
                mov     r8d, r14d
                shr     r8, 3

loc_140A20A9E:                          ; CODE XREF: sub_140A1EEE4+1BEB↓j
                rdtsc
                shl     rdx, 20h
                add     edi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1EE8], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r8, r10
                jnz     short loc_140A20A9E

loc_140A20AD1:                          ; CODE XREF: sub_140A1EEE4+1BB1↑j
                test    edi, edi
                jz      short loc_140A20B07
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1EE0], rdx
                xor     rdx, rax

loc_140A20AF9:                          ; CODE XREF: sub_140A1EEE4+1C21↓j
                mov     [rbx], dl
                add     rbx, r10
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A20AF9

loc_140A20B07:                          ; CODE XREF: sub_140A1EEE4+1BEF↑j
                mov     r8d, r14d
                sub     esi, r14d
                mov     ebx, r15d
                add     rbx, r8
                add     rbx, r9
                cmp     esi, 8
                jb      short loc_140A20B54
                mov     edi, esi
                shr     rdi, 3

loc_140A20B21:                          ; CODE XREF: sub_140A1EEE4+1C6E↓j
                rdtsc
                shl     rdx, 20h
                add     esi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1ED8], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     rdi, r10
                jnz     short loc_140A20B21

loc_140A20B54:                          ; CODE XREF: sub_140A1EEE4+1C35↑j
                xor     eax, eax
                test    esi, esi
                jz      short loc_140A20B8E
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1ED0], rdx
                xor     rdx, rax

loc_140A20B7E:                          ; CODE XREF: sub_140A1EEE4+1CA6↓j
                mov     [rbx], dl
                add     rbx, r10
                shr     rdx, 8
                add     esi, 0FFFFFFFFh
                jnz     short loc_140A20B7E
                xor     eax, eax

loc_140A20B8E:                          ; CODE XREF: sub_140A1EEE4+1C74↑j
                lea     r14, [r8+r9]
                mov     [rsp+24B8h+var_1EC8], r9
                mov     [rsp+24B8h+var_2418], r14
                test    r14, r14
                jz      loc_140A237B3
                lea     edi, [r13+80000h]
                xor     edx, edx
                mov     r8d, edi
                mov     rcx, r14
                mov     [rsp+24B8h+var_2400], edi
                call    memset
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A20BD3

loc_140A20BD1:                          ; CODE XREF: sub_140A1EEE4:loc_140A20BD1↓j
                jmp     short loc_140A20BD1
; ---------------------------------------------------------------------------

loc_140A20BD3:                          ; CODE XREF: sub_140A1EEE4+1CEB↑j
                sti
                mov     ecx, [r14+990h]
                mov     eax, r12d
                btr     ecx, 1Ch
                shl     eax, 1Ch
                or      ecx, eax
                mov     edx, 2000h
                mov     [r14+990h], ecx
                bt      ecx, 1Ch
                jnb     short loc_140A20C0B
                bts     ecx, 1Bh
                mov     [r14+990h], ecx
                or      [r14+994h], edx

loc_140A20C0B:                          ; CODE XREF: sub_140A1EEE4+1D13↑j
                xor     eax, eax
                cmp     cs:dword_140CFC3C0, eax
                jz      short loc_140A20C1C
                or      [r14+994h], edx

loc_140A20C1C:                          ; CODE XREF: sub_140A1EEE4+1D2F↑j
                test    r12d, r12d
                jnz     loc_140A2192F
                mov     rax, cs:off_140C005D8
                lea     r13, [r14+0AA0h]
                mov     cs:qword_140C00210, rax
                xorps   xmm0, xmm0
                xor     eax, eax
                mov     [rsp+24B8h+var_1128], r13
                mov     [rsp+24B8h+var_1110], rax
                mov     r12d, eax
                mov     dword ptr [rsp+24B8h+var_2408], eax
                mov     esi, eax
                mov     dword ptr [rsp+24B8h+var_23D8], eax
                movdqu  [rsp+24B8h+var_1120], xmm0
                mov     eax, dword ptr [rsp+24B8h+var_1120+8]
                mov     dword ptr [rsp+24B8h+var_23F8], eax

loc_140A20C79:                          ; CODE XREF: sub_140A1EEE4+2088↓j
                mov     eax, r12d
                lea     rcx, cs:140000000h
                lea     r8, [rsp+24B8h+var_22C8]
                lea     rdx, [rsp+24B8h+var_F20]
                mov     r15, rva qword_140C00210[rcx+rax*8]
                mov     rcx, r15
                call    sub_1403C5CDC
                mov     rbx, rax
                mov     [rsp+24B8h+var_F30], rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A20DFE
                mov     [rsp+24B8h+var_F08], rax
                mov     rax, [rsp+24B8h+var_F20]
                cmp     [rsp+24B8h+var_1248], rax
                jnz     loc_140A20D99
                mov     rsi, [rsp+24B8h+var_1240]
                lea     rdx, [rsp+24B8h+var_F20]
                xor     eax, eax
                mov     [rsp+24B8h+var_F08], rsi
                mov     [rsp+24B8h+var_F00], rax
                xor     r8d, r8d
                mov     eax, [rsp+24B8h+var_1238]
                mov     rcx, r15
                mov     [rsp+24B8h+var_EF8], eax
                xor     eax, eax
                mov     [rsp+24B8h+var_EF4], eax
                call    RtlLookupFunctionEntry
                mov     rdi, rax
                mov     [rsp+24B8h+var_F28], rax
                xor     eax, eax
                test    rdi, rdi
                jz      short loc_140A20D88
                mov     edx, [rsi]
                mov     r8d, edi
                sub     r8d, dword ptr [rsp+24B8h+var_F20]
                mov     ebx, eax
                sub     edx, 1
                js      short loc_140A20D88
                xor     r10d, r10d

loc_140A20D44:                          ; CODE XREF: sub_140A1EEE4+1E8C↓j
                lea     ecx, [rdx+rbx]
                mov     eax, r8d
                sar     ecx, 1
                mov     r9d, ecx
                inc     r9
                lea     r9, [rsi+r9*8]
                sub     eax, [r9]
                jns     short loc_140A20D67
                test    ecx, ecx
                jz      short loc_140A20D88
                lea     edx, [rcx-1]
                xor     r10d, r10d
                jmp     short loc_140A20D6E
; ---------------------------------------------------------------------------

loc_140A20D67:                          ; CODE XREF: sub_140A1EEE4+1E75↑j
                test    eax, eax
                jle     short loc_140A20D72
                lea     ebx, [rcx+1]

loc_140A20D6E:                          ; CODE XREF: sub_140A1EEE4+1E81↑j
                cmp     edx, ebx
                jge     short loc_140A20D44

loc_140A20D72:                          ; CODE XREF: sub_140A1EEE4+1E85↑j
                mov     rax, [rsp+24B8h+var_F00]
                cmp     edx, ebx
                cmovge  rax, r9
                mov     [rsp+24B8h+var_F00], rax

loc_140A20D88:                          ; CODE XREF: sub_140A1EEE4+1E47↑j
                                        ; sub_140A1EEE4+1E5B↑j ...
                mov     rbx, [rsp+24B8h+var_F30]
                mov     esi, dword ptr [rsp+24B8h+var_23D8]
                jmp     short loc_140A20DA1
; ---------------------------------------------------------------------------

loc_140A20D99:                          ; CODE XREF: sub_140A1EEE4+1DED↑j
                mov     rdi, [rsp+24B8h+var_F28]

loc_140A20DA1:                          ; CODE XREF: sub_140A1EEE4+1EB3↑j
                mov     ecx, [rsp+24B8h+var_22C8]
                lea     r8, [rsp+24B8h+var_1EC0]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mov     [rsp+24B8h+var_F38], r15
                mov     r15, [rsp+24B8h+var_F20]
                mul     rcx
                mov     [rsp+24B8h+var_F10], r8
                shr     rdx, 3
                mov     eax, edx
                mov     [rsp+24B8h+var_22C8], edx
                mov     [rsp+24B8h+var_1F98], r15
                lea     rcx, [rax+rax*2]
                lea     rax, [rbx+rcx*4]
                mov     [rsp+24B8h+var_F18], rax
                xor     eax, eax
                jmp     short loc_140A20E16
; ---------------------------------------------------------------------------

loc_140A20DFE:                          ; CODE XREF: sub_140A1EEE4+1DCF↑j
                mov     r8, [rsp+24B8h+var_F10]
                mov     rdi, [rsp+24B8h+var_F28]
                mov     r15, [rsp+24B8h+var_1F98]

loc_140A20E16:                          ; CODE XREF: sub_140A1EEE4+1F18↑j
                mov     r9d, 1

loc_140A20E1C:                          ; CODE XREF: sub_140A1EEE4+25CD↓j
                test    rbx, rbx
                jz      loc_140A20F55
                cmp     rbx, [rsp+24B8h+var_F18]
                jz      loc_140A20F55
                cmp     [rsp+24B8h+var_F08], rax
                jz      loc_140A20F00
                test    rdi, rdi
                jz      loc_140A20F55
                cmp     [rsp+24B8h+var_F00], rax
                jnz     short loc_140A20E64
                mov     [r8], rdi
                mov     [rsp+24B8h+var_F28], rax
                jmp     loc_140A21033
; ---------------------------------------------------------------------------

loc_140A20E64:                          ; CODE XREF: sub_140A1EEE4+1F6E↑j
                mov     rax, [rsp+24B8h+var_F00]
                mov     ecx, [rax+4]
                test    r9b, cl
                jz      short loc_140A20E93
                and     ecx, 0FFFFFFFEh
                mov     eax, ecx
                add     rax, [rsp+24B8h+var_F20]
                mov     [r8], rax
                xor     eax, eax
                mov     [rsp+24B8h+var_F00], rax
                jmp     loc_140A21033
; ---------------------------------------------------------------------------

loc_140A20E93:                          ; CODE XREF: sub_140A1EEE4+1F8E↑j
                mov     edi, [rsp+24B8h+var_EF4]
                add     ecx, edi
                mov     edx, ecx
                add     rcx, 4
                cmp     rcx, rdx
                jb      loc_140A39215
                mov     eax, [rsp+24B8h+var_EF8]
                cmp     rcx, rax
                ja      loc_140A39215
                mov     rax, [rsp+24B8h+var_F08]
                add     edi, 4
                mov     ebx, [rdx+rax]
                mov     edx, ebx
                and     edx, r9d
                mov     [rsp+24B8h+var_EF4], edi
                mov     eax, edx
                neg     eax
                mov     eax, ebx
                sbb     rcx, rcx
                and     eax, 0FFFFFFFEh
                and     [rsp+24B8h+var_F00], rcx
                test    edx, edx
                cmovnz  ebx, eax
                mov     eax, ebx
                add     rax, [rsp+24B8h+var_F20]
                mov     [r8], rax
                jmp     loc_140A21033
; ---------------------------------------------------------------------------

loc_140A20F00:                          ; CODE XREF: sub_140A1EEE4+1F57↑j
                                        ; sub_140A1EEE4+206F↓j
                mov     rdx, [rsp+24B8h+var_F20]
                mov     rcx, rbx
                mov     rdi, rbx
                call    sub_1402AE7D0
                mov     r8, [rsp+24B8h+var_F38]
                mov     rcx, rax
                mov     rdx, [rsp+24B8h+var_F20]
                call    sub_1405868D0
                mov     rbx, [rsp+24B8h+var_F30]
                mov     rcx, rax
                add     rbx, 0Ch
                mov     [rsp+24B8h+var_F30], rbx
                test    rax, rax
                jnz     loc_140A21022
                cmp     rbx, [rsp+24B8h+var_F18]
                jnz     short loc_140A20F00

loc_140A20F55:                          ; CODE XREF: sub_140A1EEE4+1F3B↑j
                                        ; sub_140A1EEE4+1F49↑j ...
                mov     r12d, dword ptr [rsp+24B8h+var_2408]
                inc     r12d
                mov     dword ptr [rsp+24B8h+var_2408], r12d
                cmp     r12d, 0Fh
                jb      loc_140A20C79
                lea     rcx, off_140C005D8
                test    r13, r13
                jz      short loc_140A20F91
                mov     eax, esi
                add     rax, rax
                mov     dword ptr [r13+rax*8+10h], 8
                mov     [r13+rax*8+8], rcx

loc_140A20F91:                          ; CODE XREF: sub_140A1EEE4+2098↑j
                add     dword ptr [rsp+24B8h+var_1110+4], 8
                inc     esi
                and     rcx, 0FFFFFFFFFFFFF000h
                mov     dword ptr [rsp+24B8h+var_23D8], esi
                mov     [rsp+24B8h+var_23C8], rcx
                mov     esi, 1

loc_140A20FB6:                          ; CODE XREF: sub_140A1EEE4+2970↓j
                mov     rax, cs:qword_140CFB358
                shr     rcx, 9
                lea     rdx, [rsp+24B8h+var_10E8]
                mov     rdi, 7FFFFFFFF8h
                mov     r8d, 4
                and     rcx, rdi
                mov     ebx, r8d
                add     rcx, rax

loc_140A20FE2:                          ; CODE XREF: sub_140A1EEE4+2119↓j
                mov     [rdx], rcx
                mov     rax, cs:qword_140CFB358
                shr     rcx, 9
                lea     rdx, [rdx+8]
                and     rcx, rdi
                add     rcx, rax
                sub     rbx, rsi
                jnz     short loc_140A20FE2
                xor     r14d, r14d
                mov     ebx, r14d
                lea     edx, [r14+3]

loc_140A21009:                          ; CODE XREF: sub_140A1EEE4+25EE↓j
                mov     edi, edx
                test    ebx, ebx
                jz      loc_140A214B6
                mov     eax, edx
                mov     [rsp+rax*8+24B8h+var_10E8], r14
                jmp     loc_140A214CE
; ---------------------------------------------------------------------------

loc_140A21022:                          ; CODE XREF: sub_140A1EEE4+2061↑j
                mov     rax, [rsp+24B8h+var_F10]
                mov     r9d, 1
                mov     [rax], rdi

loc_140A21033:                          ; CODE XREF: sub_140A1EEE4+1F7B↑j
                                        ; sub_140A1EEE4+1FAA↑j ...
                mov     rax, [rsp+24B8h+var_1EC0]
                mov     ecx, [rax]
                mov     edx, [rax+4]
                sub     edx, ecx
                add     rcx, r15
                test    r13, r13
                jz      short loc_140A21059
                mov     eax, esi
                add     rax, rax
                mov     [r13+rax*8+10h], edx
                mov     [r13+rax*8+8], rcx

loc_140A21059:                          ; CODE XREF: sub_140A1EEE4+2164↑j
                add     dword ptr [rsp+24B8h+var_1110+4], edx
                inc     esi
                mov     r15, rcx
                mov     eax, edx
                and     r15, 0FFFFFFFFFFFFF000h
                mov     dword ptr [rsp+24B8h+var_23D8], esi
                add     rax, rcx
                mov     [rsp+24B8h+var_23C8], rax

loc_140A21080:                          ; CODE XREF: sub_140A1EEE4+2590↓j
                mov     rax, cs:qword_140CFB358
                mov     rcx, r15
                lea     rdx, [rsp+24B8h+var_1108]
                shr     rcx, 9
                mov     rdi, 7FFFFFFFF8h
                and     rcx, rdi
                mov     ebx, 4
                add     rcx, rax

loc_140A210AB:                          ; CODE XREF: sub_140A1EEE4+21E2↓j
                mov     [rdx], rcx
                mov     rax, cs:qword_140CFB358
                shr     rcx, 9
                lea     rdx, [rdx+8]
                and     rcx, rdi
                add     rcx, rax
                sub     rbx, r9
                jnz     short loc_140A210AB
                xor     r14d, r14d
                mov     ebx, r14d
                lea     edx, [r14+3]

loc_140A210D2:                          ; CODE XREF: sub_140A1EEE4+221D↓j
                mov     edi, edx
                test    ebx, ebx
                jz      short loc_140A210E4
                mov     eax, edx
                mov     [rsp+rax*8+24B8h+var_1108], r14
                jmp     short loc_140A210FD
; ---------------------------------------------------------------------------

loc_140A210E4:                          ; CODE XREF: sub_140A1EEE4+21F2↑j
                test    edx, edx
                jz      short loc_140A21103
                mov     eax, edx
                mov     rcx, [rsp+rax*8+24B8h+var_1108]
                mov     al, [rcx]
                shr     al, 7
                test    al, al
                cmovnz  ebx, r9d

loc_140A210FD:                          ; CODE XREF: sub_140A1EEE4+21FE↑j
                dec     edx
                test    edi, edi
                jnz     short loc_140A210D2

loc_140A21103:                          ; CODE XREF: sub_140A1EEE4+2202↑j
                mov     r14, [rsp+24B8h+var_2418]
                mov     r12d, 4

loc_140A21111:                          ; CODE XREF: sub_140A1EEE4+257A↓j
                dec     r12d
                xor     eax, eax
                mov     r13, [rsp+r12*8+24B8h+var_1108]
                test    r13, r13
                jz      loc_140A21464
                mov     edx, eax
                cmp     dword ptr [rsp+24B8h+var_1120+0Ch], eax
                jbe     short loc_140A2114E

loc_140A21132:                          ; CODE XREF: sub_140A1EEE4+2268↓j
                mov     rax, qword ptr [rsp+24B8h+var_1120]
                mov     ecx, edx
                cmp     r13, [rax+rcx*8]
                jz      short loc_140A2114E
                add     edx, r9d
                cmp     edx, dword ptr [rsp+24B8h+var_1120+0Ch]
                jb      short loc_140A21132

loc_140A2114E:                          ; CODE XREF: sub_140A1EEE4+224C↑j
                                        ; sub_140A1EEE4+225C↑j
                mov     ecx, dword ptr [rsp+24B8h+var_1120+0Ch]
                cmp     edx, ecx
                jnz     loc_140A2145B
                mov     r8d, dword ptr [rsp+24B8h+var_23F8]
                cmp     ecx, r8d
                jnz     loc_140A21438
                lea     r8d, ds:40h[r8*2]
                mov     dword ptr [rsp+24B8h+var_23F8], r8d
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1EB8], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                mov     eax, 5
                cmp     ecx, eax
                ja      loc_140A2128A
                jz      loc_140A21270
                test    ecx, ecx
                jz      short loc_140A21256
                sub     ecx, 1
                jz      short loc_140A2123D
                sub     ecx, 1
                jz      short loc_140A21223
                cmp     ecx, 1
                jz      short loc_140A21206
                mov     [rsp+24B8h+var_22C4], 67076494h
                mov     edi, [rsp+24B8h+var_22C4]
                rol     edi, 4
                jmp     loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A21206:                          ; CODE XREF: sub_140A1EEE4+2306↑j
                mov     [rsp+24B8h+var_22C0], 0A8223938h
                mov     edi, [rsp+24B8h+var_22C0]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A21223:                          ; CODE XREF: sub_140A1EEE4+2301↑j
                mov     [rsp+24B8h+var_22BC], 85B5910Dh
                mov     edi, [rsp+24B8h+var_22BC]
                ror     edi, 2
                jmp     loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A2123D:                          ; CODE XREF: sub_140A1EEE4+22FC↑j
                mov     [rsp+24B8h+var_22B8], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_22B8]
                rol     edi, 1
                jmp     loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A21256:                          ; CODE XREF: sub_140A1EEE4+22F7↑j
                mov     [rsp+24B8h+var_22B4], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_22B4]
                ror     edi, 6
                jmp     loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A21270:                          ; CODE XREF: sub_140A1EEE4+22EF↑j
                mov     [rsp+24B8h+var_22B0], 288C49EDh
                mov     edi, [rsp+24B8h+var_22B0]
                ror     edi, 5
                jmp     loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A2128A:                          ; CODE XREF: sub_140A1EEE4+22E9↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A21386
                sub     ecx, 1
                jz      loc_140A2136F
                sub     ecx, 1
                jz      loc_140A21358
                cmp     ecx, 1
                jz      loc_140A2133E
                rdtsc
                shl     rdx, 20h
                mov     r9d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1EB0], rdx
                xor     edi, edx
                mov     eax, r9d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r9d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A2133E:                          ; CODE XREF: sub_140A1EEE4+23C8↑j
                mov     [rsp+24B8h+var_22AC], 0B0869E85h
                mov     edi, [rsp+24B8h+var_22AC]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A21358:                          ; CODE XREF: sub_140A1EEE4+23BF↑j
                mov     [rsp+24B8h+var_22A8], 64664142h
                mov     edi, [rsp+24B8h+var_22A8]
                ror     edi, 8
                jmp     short loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A2136F:                          ; CODE XREF: sub_140A1EEE4+23B6↑j
                mov     [rsp+24B8h+var_22A4], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_22A4]
                rol     edi, 7
                jmp     short loc_140A2139D
; ---------------------------------------------------------------------------

loc_140A21386:                          ; CODE XREF: sub_140A1EEE4+23AD↑j
                mov     [rsp+24B8h+var_22A0], 4E574672h
                mov     edi, [rsp+24B8h+var_22A0]
                xor     edi, edx
                ror     edi, 18h

loc_140A2139D:                          ; CODE XREF: sub_140A1EEE4+231D↑j
                                        ; sub_140A1EEE4+233A↑j ...
                mov     edx, r8d
                mov     ecx, 200h
                shl     rdx, 3
                mov     r8d, edi
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                xor     eax, eax
                test    rsi, rsi
                jz      loc_140A237B3
                mov     rcx, qword ptr [rsp+24B8h+var_1120]
                test    rcx, rcx
                jz      short loc_140A2141C
                mov     edx, dword ptr [rsp+24B8h+var_1120+0Ch]
                mov     rbx, rsi
                shl     edx, 3
                cmp     edx, 8
                jb      short loc_140A213FB
                mov     edi, edx
                shr     rdi, 3

loc_140A213E4:                          ; CODE XREF: sub_140A1EEE4+2515↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [rbx], rax
                add     rcx, 8
                add     rbx, 8
                sub     rdi, 1
                jnz     short loc_140A213E4

loc_140A213FB:                          ; CODE XREF: sub_140A1EEE4+24F8↑j
                test    edx, edx
                jz      short loc_140A2140F
                sub     rbx, rcx

loc_140A21402:                          ; CODE XREF: sub_140A1EEE4+2529↓j
                mov     al, [rcx]
                mov     [rbx+rcx], al
                inc     rcx
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A21402

loc_140A2140F:                          ; CODE XREF: sub_140A1EEE4+2519↑j
                mov     rcx, qword ptr [rsp+24B8h+var_1120]
                call    ExFreePoolWithTag

loc_140A2141C:                          ; CODE XREF: sub_140A1EEE4+24E6↑j
                mov     eax, dword ptr [rsp+24B8h+var_23F8]
                mov     r9d, 1
                mov     dword ptr [rsp+24B8h+var_1120+8], eax
                mov     qword ptr [rsp+24B8h+var_1120], rsi

loc_140A21438:                          ; CODE XREF: sub_140A1EEE4+2284↑j
                mov     ecx, dword ptr [rsp+24B8h+var_1120+0Ch]
                mov     rax, qword ptr [rsp+24B8h+var_1120]
                add     dword ptr [rsp+24B8h+var_1120+0Ch], r9d
                add     dword ptr [rsp+24B8h+var_1110+4], 10h
                mov     [rax+rcx*8], r13

loc_140A2145B:                          ; CODE XREF: sub_140A1EEE4+2273↑j
                test    r12d, r12d
                jnz     loc_140A21111

loc_140A21464:                          ; CODE XREF: sub_140A1EEE4+223D↑j
                mov     eax, 1000h
                add     r15, rax
                cmp     r15, [rsp+24B8h+var_23C8]
                jb      loc_140A21080
                mov     esi, dword ptr [rsp+24B8h+var_23D8]
                lea     r13, [r14+0AA0h]
                mov     r8, [rsp+24B8h+var_F10]
                xor     eax, eax
                mov     rdi, [rsp+24B8h+var_F28]
                mov     rbx, [rsp+24B8h+var_F30]
                mov     r15, [rsp+24B8h+var_1F98]
                mov     dword ptr [rsp+24B8h+var_1110], esi
                jmp     loc_140A20E1C
; ---------------------------------------------------------------------------

loc_140A214B6:                          ; CODE XREF: sub_140A1EEE4+2129↑j
                test    edx, edx
                jz      short loc_140A214D8
                mov     eax, edx
                mov     rcx, [rsp+rax*8+24B8h+var_10E8]
                mov     al, [rcx]
                shr     al, 7
                test    al, al
                cmovnz  ebx, esi

loc_140A214CE:                          ; CODE XREF: sub_140A1EEE4+2139↑j
                dec     edx
                test    edi, edi
                jnz     loc_140A21009

loc_140A214D8:                          ; CODE XREF: sub_140A1EEE4+25D4↑j
                mov     r14, [rsp+24B8h+var_2418]
                mov     r15d, r8d

loc_140A214E3:                          ; CODE XREF: sub_140A1EEE4+2949↓j
                dec     r15d
                xor     eax, eax
                mov     r12, [rsp+r15*8+24B8h+var_10E8]
                test    r12, r12
                jz      loc_140A21833
                mov     edx, eax
                cmp     dword ptr [rsp+24B8h+var_1120+0Ch], eax
                jbe     short loc_140A2151F

loc_140A21504:                          ; CODE XREF: sub_140A1EEE4+2639↓j
                mov     rax, qword ptr [rsp+24B8h+var_1120]
                mov     ecx, edx
                cmp     r12, [rax+rcx*8]
                jz      short loc_140A2151F
                add     edx, esi
                cmp     edx, dword ptr [rsp+24B8h+var_1120+0Ch]
                jb      short loc_140A21504

loc_140A2151F:                          ; CODE XREF: sub_140A1EEE4+261E↑j
                                        ; sub_140A1EEE4+262E↑j
                mov     ecx, dword ptr [rsp+24B8h+var_1120+0Ch]
                cmp     edx, ecx
                jnz     loc_140A2182A
                mov     r8d, dword ptr [rsp+24B8h+var_23F8]
                cmp     ecx, r8d
                jnz     loc_140A21808
                lea     r8d, ds:40h[r8*2]
                mov     dword ptr [rsp+24B8h+var_23F8], r8d
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1EA8], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                mov     eax, 5
                cmp     ecx, eax
                ja      loc_140A2165B
                jz      loc_140A21641
                test    ecx, ecx
                jz      short loc_140A21627
                sub     ecx, 1
                jz      short loc_140A2160E
                sub     ecx, 1
                jz      short loc_140A215F4
                cmp     ecx, 1
                jz      short loc_140A215D7
                mov     [rsp+24B8h+var_2298], 67076494h
                mov     edi, [rsp+24B8h+var_2298]
                rol     edi, 4
                jmp     loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A215D7:                          ; CODE XREF: sub_140A1EEE4+26D7↑j
                mov     [rsp+24B8h+var_2294], 0A8223938h
                mov     edi, [rsp+24B8h+var_2294]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A215F4:                          ; CODE XREF: sub_140A1EEE4+26D2↑j
                mov     [rsp+24B8h+var_2290], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2290]
                ror     edi, 2
                jmp     loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A2160E:                          ; CODE XREF: sub_140A1EEE4+26CD↑j
                mov     [rsp+24B8h+var_228C], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_228C]
                rol     edi, 1
                jmp     loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A21627:                          ; CODE XREF: sub_140A1EEE4+26C8↑j
                mov     [rsp+24B8h+var_2288], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2288]
                ror     edi, 6
                jmp     loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A21641:                          ; CODE XREF: sub_140A1EEE4+26C0↑j
                mov     [rsp+24B8h+var_2284], 288C49EDh
                mov     edi, [rsp+24B8h+var_2284]
                ror     edi, 5
                jmp     loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A2165B:                          ; CODE XREF: sub_140A1EEE4+26BA↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A21757
                sub     ecx, 1
                jz      loc_140A21740
                sub     ecx, 1
                jz      loc_140A21729
                cmp     ecx, 1
                jz      loc_140A2170F
                rdtsc
                shl     rdx, 20h
                mov     r9d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1EA0], rdx
                xor     edi, edx
                mov     eax, r9d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r9d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A2170F:                          ; CODE XREF: sub_140A1EEE4+2799↑j
                mov     [rsp+24B8h+var_2280], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2280]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A21729:                          ; CODE XREF: sub_140A1EEE4+2790↑j
                mov     [rsp+24B8h+var_227C], 64664142h
                mov     edi, [rsp+24B8h+var_227C]
                ror     edi, 8
                jmp     short loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A21740:                          ; CODE XREF: sub_140A1EEE4+2787↑j
                mov     [rsp+24B8h+var_2278], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_2278]
                rol     edi, 7
                jmp     short loc_140A2176E
; ---------------------------------------------------------------------------

loc_140A21757:                          ; CODE XREF: sub_140A1EEE4+277E↑j
                mov     [rsp+24B8h+var_2274], 4E574672h
                mov     edi, [rsp+24B8h+var_2274]
                xor     edi, edx
                ror     edi, 18h

loc_140A2176E:                          ; CODE XREF: sub_140A1EEE4+26EE↑j
                                        ; sub_140A1EEE4+270B↑j ...
                mov     edx, r8d
                mov     ecx, 200h
                shl     rdx, 3
                mov     r8d, edi
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                xor     eax, eax
                test    rsi, rsi
                jz      loc_140A237B3
                mov     rcx, qword ptr [rsp+24B8h+var_1120]
                test    rcx, rcx
                jz      short loc_140A217ED
                mov     edx, dword ptr [rsp+24B8h+var_1120+0Ch]
                mov     rbx, rsi
                shl     edx, 3
                cmp     edx, 8
                jb      short loc_140A217CC
                mov     edi, edx
                shr     rdi, 3

loc_140A217B5:                          ; CODE XREF: sub_140A1EEE4+28E6↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [rbx], rax
                add     rcx, 8
                add     rbx, 8
                sub     rdi, 1
                jnz     short loc_140A217B5

loc_140A217CC:                          ; CODE XREF: sub_140A1EEE4+28C9↑j
                test    edx, edx
                jz      short loc_140A217E0
                sub     rbx, rcx

loc_140A217D3:                          ; CODE XREF: sub_140A1EEE4+28FA↓j
                mov     al, [rcx]
                mov     [rcx+rbx], al
                inc     rcx
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A217D3

loc_140A217E0:                          ; CODE XREF: sub_140A1EEE4+28EA↑j
                mov     rcx, qword ptr [rsp+24B8h+var_1120]
                call    ExFreePoolWithTag

loc_140A217ED:                          ; CODE XREF: sub_140A1EEE4+28B7↑j
                mov     eax, dword ptr [rsp+24B8h+var_23F8]
                mov     qword ptr [rsp+24B8h+var_1120], rsi
                mov     esi, 1
                mov     dword ptr [rsp+24B8h+var_1120+8], eax

loc_140A21808:                          ; CODE XREF: sub_140A1EEE4+2655↑j
                mov     ecx, dword ptr [rsp+24B8h+var_1120+0Ch]
                mov     rax, qword ptr [rsp+24B8h+var_1120]
                add     dword ptr [rsp+24B8h+var_1120+0Ch], esi
                add     dword ptr [rsp+24B8h+var_1110+4], 10h
                mov     [rax+rcx*8], r12

loc_140A2182A:                          ; CODE XREF: sub_140A1EEE4+2644↑j
                test    r15d, r15d
                jnz     loc_140A214E3

loc_140A21833:                          ; CODE XREF: sub_140A1EEE4+260F↑j
                mov     rcx, [rsp+24B8h+var_23C8]
                lea     rdx, qword_140C005E0
                add     rcx, 1000h
                mov     [rsp+24B8h+var_23C8], rcx
                cmp     rcx, rdx
                jb      loc_140A20FB6
                mov     r11d, dword ptr [rsp+24B8h+var_23D8]
                mov     dword ptr [rsp+24B8h+var_1110], r11d
                test    r13, r13
                jz      loc_140A2191C
                mov     ecx, dword ptr [rsp+24B8h+var_1120+0Ch]
                lea     rbx, [r13+8]
                mov     r10d, r11d
                mov     [r13+4], ecx
                shl     r10, 4
                add     r10, 8
                add     r10, r13
                mov     rdi, r10
                test    ecx, ecx
                jz      short loc_140A218BC
                mov     rdx, qword ptr [rsp+24B8h+var_1120]
                mov     r8d, ecx

loc_140A218A2:                          ; CODE XREF: sub_140A1EEE4+29D6↓j
                mov     rax, [rdx]
                lea     rdx, [rdx+8]
                mov     [rdi], rax
                mov     rax, [rax]
                mov     [rdi+8], rax
                add     rdi, 10h
                sub     r8, rsi
                jnz     short loc_140A218A2

loc_140A218BC:                          ; CODE XREF: sub_140A1EEE4+29B1↑j
                cmp     rbx, r10
                jnb     short loc_140A21918

loc_140A218C1:                          ; CODE XREF: sub_140A1EEE4+2A2A↓j
                mov     edx, [rbx+8]
                mov     r8, rdi
                mov     rcx, [rbx]
                cmp     edx, 8
                jb      short loc_140A218EC
                mov     r9d, edx
                shr     r9, 3

loc_140A218D6:                          ; CODE XREF: sub_140A1EEE4+2A06↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [r8], rax
                add     rcx, 8
                add     r8, 8
                sub     r9, rsi
                jnz     short loc_140A218D6

loc_140A218EC:                          ; CODE XREF: sub_140A1EEE4+29E9↑j
                test    edx, edx
                jz      short loc_140A21901
                sub     r8, rcx

loc_140A218F3:                          ; CODE XREF: sub_140A1EEE4+2A1B↓j
                mov     al, [rcx]
                mov     [rcx+r8], al
                add     rcx, rsi
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A218F3

loc_140A21901:                          ; CODE XREF: sub_140A1EEE4+2A0A↑j
                mov     eax, [rbx+8]
                add     rbx, 10h
                add     rdi, rax
                cmp     rbx, r10
                jb      short loc_140A218C1
                mov     r14, [rsp+24B8h+var_2418]

loc_140A21918:                          ; CODE XREF: sub_140A1EEE4+29DB↑j
                mov     [r13+0], r11d

loc_140A2191C:                          ; CODE XREF: sub_140A1EEE4+2989↑j
                mov     edi, [rsp+24B8h+var_2400]
                xor     eax, eax
                mov     r13d, dword ptr [rsp+24B8h+var_23D0]
                jmp     short loc_140A21934
; ---------------------------------------------------------------------------

loc_140A2192F:                          ; CODE XREF: sub_140A1EEE4+1D3B↑j
                mov     esi, 1

loc_140A21934:                          ; CODE XREF: sub_140A1EEE4+2A49↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2193F

loc_140A2193D:                          ; CODE XREF: sub_140A1EEE4:loc_140A2193D↓j
                jmp     short loc_140A2193D
; ---------------------------------------------------------------------------

loc_140A2193F:                          ; CODE XREF: sub_140A1EEE4+2A57↑j
                sti
                mov     r12d, 6
                lea     r15, cs:140000000h
                mov     r8d, r12d
                lea     r9, [rsp+24B8h+var_2270]
                mov     rcx, r15
                mov     dl, sil
                call    RtlImageDirectoryEntryToData
                mov     rbx, rax
                mov     r9, 2492492492492493h
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A21A08
                mov     ecx, [rsp+24B8h+var_2270]
                mov     rax, r9
                mul     rcx
                sub     rcx, rdx
                shr     rcx, 1
                add     rcx, rdx
                shr     rcx, 4
                imul    rdx, rcx, 1Ch
                add     rdx, rbx
                cmp     rbx, rdx
                jnb     short loc_140A21A06
                mov     r8d, 50474900h

loc_140A219A7:                          ; CODE XREF: sub_140A1EEE4+2B17↓j
                mov     eax, [rbx+0Ch]
                cmp     eax, 0Ah
                jnz     short loc_140A219D2
                mov     ecx, [rbx+14h]
                mov     eax, [rbx+10h]
                add     rcx, r15
                shr     rax, 2
                lea     rax, [rcx+rax*4]
                jmp     short loc_140A219CB
; ---------------------------------------------------------------------------

loc_140A219C2:                          ; CODE XREF: sub_140A1EEE4+2AEA↓j
                cmp     [rcx], r8d
                jz      short loc_140A219FD
                add     rcx, 4

loc_140A219CB:                          ; CODE XREF: sub_140A1EEE4+2ADC↑j
                cmp     rcx, rax
                jb      short loc_140A219C2
                jmp     short loc_140A219F2
; ---------------------------------------------------------------------------

loc_140A219D2:                          ; CODE XREF: sub_140A1EEE4+2AC9↑j
                cmp     eax, 0Dh
                jnz     short loc_140A219F2
                mov     ecx, [rbx+14h]
                mov     eax, [rbx+10h]
                add     rcx, r15
                shr     rax, 2
                lea     rax, [rcx+rax*4]
                cmp     rcx, rax
                jz      short loc_140A219F2
                cmp     [rcx], r8d
                jz      short loc_140A219FD

loc_140A219F2:                          ; CODE XREF: sub_140A1EEE4+2AEC↑j
                                        ; sub_140A1EEE4+2AF1↑j ...
                add     rbx, 1Ch
                cmp     rbx, rdx
                jnb     short loc_140A21A06
                jmp     short loc_140A219A7
; ---------------------------------------------------------------------------

loc_140A219FD:                          ; CODE XREF: sub_140A1EEE4+2AE1↑j
                                        ; sub_140A1EEE4+2B0C↑j
                bts     dword ptr [r14+994h], 10h

loc_140A21A06:                          ; CODE XREF: sub_140A1EEE4+2ABB↑j
                                        ; sub_140A1EEE4+2B15↑j
                xor     eax, eax

loc_140A21A08:                          ; CODE XREF: sub_140A1EEE4+2A91↑j
                cmp     cs:dword_140D5863C, eax
                jz      short loc_140A21A19
                bts     dword ptr [r14+994h], 0Eh

loc_140A21A19:                          ; CODE XREF: sub_140A1EEE4+2B2A↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A21A24

loc_140A21A22:                          ; CODE XREF: sub_140A1EEE4:loc_140A21A22↓j
                jmp     short loc_140A21A22
; ---------------------------------------------------------------------------

loc_140A21A24:                          ; CODE XREF: sub_140A1EEE4+2B3C↑j
                sti
                mov     [r14+7E4h], r13d
                mov     r15d, 80h
                mov     [r14+0A1Ch], edi
                mov     rax, [rsp+24B8h+var_1EC8]
                mov     [r14+7C8h], rax
                mov     rax, [rsp+24B8h+var_23E0]
                lea     rcx, [r15+r14]
                mov     [r14+924h], eax
                lea     rax, qword_140A3A190
                movups  xmm0, xmmword ptr [rax]
                movups  xmmword ptr [r14], xmm0
                movups  xmm1, xmmword ptr [rax+10h]
                movups  xmmword ptr [r14+10h], xmm1
                movups  xmm0, xmmword ptr [rax+20h]
                movups  xmmword ptr [r14+20h], xmm0
                movups  xmm1, xmmword ptr [rax+30h]
                movups  xmmword ptr [r14+30h], xmm1
                movups  xmm0, xmmword ptr [rax+40h]
                movups  xmmword ptr [r14+40h], xmm0
                movups  xmm1, xmmword ptr [rax+50h]
                movups  xmmword ptr [r14+50h], xmm1
                movups  xmm0, xmmword ptr [rax+60h]
                movups  xmmword ptr [r14+60h], xmm0
                movups  xmm0, xmmword ptr [rax+70h]
                add     rax, r15
                movups  xmmword ptr [rcx-10h], xmm0
                movups  xmm1, xmmword ptr [rax]
                movups  xmmword ptr [rcx], xmm1
                movups  xmm0, xmmword ptr [rax+10h]
                movups  xmmword ptr [rcx+10h], xmm0
                movups  xmm1, xmmword ptr [rax+20h]
                movups  xmmword ptr [rcx+20h], xmm1
                movups  xmm0, xmmword ptr [rax+30h]
                movups  xmmword ptr [rcx+30h], xmm0
                mov     eax, [rax+40h]
                mov     [rcx+40h], eax
                mov     ecx, [rsp+24B8h+var_23C0]
                mov     rax, [rsp+24B8h+var_2458]
                add     eax, ecx
                mov     [r14+7F0h], eax
                mov     rax, [rsp+24B8h+var_2460]
                add     eax, ecx
                mov     [r14+7E8h], eax
                mov     rax, [rsp+24B8h+var_2448]
                add     eax, ecx
                mov     [r14+7ECh], eax
                mov     rax, [rsp+24B8h+var_2440]
                add     eax, ecx
                mov     [r14+7F4h], eax
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A21B1A

loc_140A21B18:                          ; CODE XREF: sub_140A1EEE4:loc_140A21B18↓j
                jmp     short loc_140A21B18
; ---------------------------------------------------------------------------

loc_140A21B1A:                          ; CODE XREF: sub_140A1EEE4+2C32↑j
                sti
                lea     rax, ExAcquireResourceSharedLite
                mov     [r14+0E8h], rax
                lea     rax, ExAcquireResourceExclusiveLite
                mov     [r14+0F0h], rax
                lea     rax, ExAllocatePoolWithTag
                mov     [r14+0F8h], rax
                lea     rax, ExFreePoolWithTag
                mov     [r14+100h], rax
                lea     rax, sub_140663A60
                mov     [r14+108h], rax
                lea     rax, ExQueueWorkItem
                mov     [r14+110h], rax
                lea     rax, ExReleaseResourceLite
                mov     [r14+118h], rax
                lea     rax, sub_1405D5DD0
                mov     [r14+120h], rax
                lea     rax, ExAcquirePushLockExclusiveEx
                mov     [r14+128h], rax
                lea     rax, ExReleasePushLockExclusiveEx
                mov     [r14+130h], rax
                lea     rax, ExAcquirePushLockSharedEx
                mov     [r14+138h], rax
                lea     rax, ExReleasePushLockSharedEx
                mov     [r14+140h], rax
                lea     rax, KeAcquireInStackQueuedSpinLockAtDpcLevel
                mov     [r14+148h], rax
                lea     rax, ExAcquireSpinLockSharedAtDpcLevel
                mov     [r14+150h], rax
                lea     rax, KeBugCheckEx
                mov     [r14+158h], rax
                lea     rax, KeDelayExecutionThread
                mov     [r14+160h], rax
                lea     rax, sub_1402675A0
                mov     [r14+168h], rax
                lea     rax, KeLeaveCriticalRegion
                mov     [r14+170h], rax
                lea     rax, KeEnterGuardedRegion
                mov     [r14+178h], rax
                lea     rax, KeLeaveGuardedRegion
                mov     [r14+180h], rax
                lea     rax, KeReleaseInStackQueuedSpinLockFromDpcLevel
                mov     [r14+188h], rax
                lea     rax, ExReleaseSpinLockSharedFromDpcLevel
                mov     [r14+190h], rax
                lea     rax, KeRevertToUserGroupAffinityThread
                mov     [r14+198h], rax
                lea     rax, KeProcessorGroupAffinity
                mov     [r14+1A0h], rax
                lea     rax, KeInitializeEnumerationContext
                mov     [r14+1A8h], rax
                lea     rax, KeEnumerateNextProcessor
                mov     [r14+1B0h], rax
                lea     rax, KeCountSetBitsAffinityEx
                mov     [r14+1B8h], rax
                lea     rax, sub_1403102A0
                mov     [r14+1C0h], rax
                lea     rax, sub_140362A70
                mov     [r14+1C8h], rax
                lea     rax, KeSetSystemGroupAffinityThread
                mov     [r14+1D0h], rax
                lea     rax, KeSetCoalescableTimer
                mov     [r14+1D8h], rax
                lea     rax, RtlImageNtHeader
                mov     [r14+1F8h], rax
                lea     rax, sub_14033C730
                mov     [r14+210h], rax
                lea     rax, sub_14037F610
                mov     [r14+200h], rax
                lea     rax, RtlPcToFileHeader
                mov     [r14+208h], rax
                lea     rax, PsDereferenceSiloContext
                mov     [r14+1E0h], rax
                lea     rax, ObReferenceObjectByName
                mov     [r14+1E8h], rax
                lea     rax, RtlImageDirectoryEntryToData
                mov     [r14+1F0h], rax
                lea     rax, DbgPrint
                mov     [r14+218h], rax
                lea     rax, sub_140761300
                mov     [r14+220h], rax
                lea     rax, sub_1407632B0
                mov     [r14+228h], rax
                lea     rax, sub_140379FE0
                mov     [r14+230h], rax
                lea     rax, RtlLookupFunctionEntry
                mov     [r14+260h], rax
                lea     rax, KeAcquireSpinLockRaiseToDpc
                mov     [r14+268h], rax
                lea     rax, KeReleaseSpinLock
                mov     [r14+270h], rax
                lea     rax, sub_140261EA0
                mov     [r14+278h], rax
                lea     rax, sub_1402095C0
                mov     [r14+280h], rax
                lea     rax, sub_140722810
                mov     [r14+288h], rax
                lea     rax, sub_1402E67F0
                mov     [r14+290h], rax
                lea     rax, sub_1402E6750
                mov     [r14+298h], rax
                lea     rax, sub_140245840
                mov     [r14+2A0h], rax
                lea     rax, sub_140243AF0
                mov     [r14+2A8h], rax
                lea     rax, MmIsAddressValid
                mov     [r14+2B0h], rax
                lea     rax, sub_1402A9500
                mov     [r14+2B8h], rax
                lea     rax, KeInsertQueueApc
                mov     [r14+2C0h], rax
                lea     rax, KeWaitForSingleObject
                mov     [r14+2C8h], rax
                lea     rax, sub_1402A9540
                mov     [r14+2D8h], rax
                lea     rax, sub_140381EB0
                mov     [r14+2E0h], rax
                lea     rax, sub_1402A9600
                mov     [r14+2E8h], rax
                lea     rax, sub_1403DC800
                mov     [r14+2F0h], rax
                lea     rax, sub_14077A2B0
                mov     [r14+2F8h], rax
                lea     rax, sub_14077BB40
                mov     [r14+300h], rax
                lea     rax, sub_1403953B0
                mov     [r14+308h], rax
                lea     rax, sub_14035D6B0
                mov     [r14+310h], rax
                lea     rax, sub_14076BBF0
                mov     [r14+318h], rax
                lea     rax, __misaligned_access
                mov     [r14+320h], rax
                lea     rax, sub_1407067A0
                mov     [r14+328h], rax
                lea     rax, sub_1402D1E00
                mov     [r14+330h], rax
                lea     rax, __misaligned_access
                mov     [r14+338h], rax
                lea     rax, sub_1403DD870
                mov     [r14+340h], rax
                lea     rax, MmAllocatePagesForMdlEx
                mov     [r14+348h], rax
                lea     rax, MmAllocateMappingAddress
                mov     [r14+350h], rax
                lea     rax, MmMapLockedPagesWithReservedMapping
                mov     [r14+358h], rax
                lea     rax, MmUnmapReservedMapping
                mov     [r14+360h], rax
                lea     rax, sub_1403E9F40
                mov     [r14+368h], rax
                lea     rax, sub_1403E9FB0
                mov     [r14+370h], rax
                lea     rax, sub_1406F51C0
                mov     [r14+378h], rax
                lea     rax, sub_1406F5160
                mov     [r14+380h], rax
                lea     rax, sub_14051A790
                mov     [r14+388h], rax
                lea     rax, sub_14051A960
                mov     [r14+390h], rax
                lea     rax, sub_1403DD740
                mov     [r14+398h], rax
                mov     rbx, [rsp+24B8h+arg_18]
                lea     rax, PsAcquireProcessExitSynchronization
                mov     [r14+3A0h], rax
                lea     rax, PsReleaseProcessExitSynchronization
                mov     [r14+3A8h], rax
                lea     rax, sub_1405F73C0
                mov     [r14+3B0h], rax
                lea     rax, sub_1407229B0
                mov     [r14+3B8h], rax
                lea     rax, sub_1405FA080
                mov     [r14+3C0h], rax
                lea     rax, sub_1407806D0
                mov     [r14+3C8h], rax
                lea     rax, sub_1406630E0
                mov     [r14+3D0h], rax
                lea     rax, sub_14067C2D0
                mov     [r14+3D8h], rax
                lea     rax, PsGetProcessProtection
                mov     [r14+3E0h], rax
                lea     rax, PsGetProcessSignatureLevel
                mov     [r14+3E8h], rax
                lea     rax, PsGetProcessSectionBaseAddress
                mov     [r14+3F0h], rax
                lea     rax, SeCompareSigningLevels
                mov     [r14+3F8h], rax
                lea     rax, RtlIsMultiSessionSku
                mov     [r14+428h], rax
                lea     rax, sub_140380A80
                mov     [r14+430h], rax
                lea     rax, KeStackAttachProcess
                mov     [r14+438h], rax
                lea     rax, KeUnstackDetachProcess
                mov     [r14+440h], rax
                lea     rax, KeIpiGenericCall
                mov     [r14+448h], rax
                lea     rax, sub_1403E9D90
                mov     [r14+450h], rax
                lea     rax, MmGetPhysicalAddress
                mov     [r14+458h], rax
                lea     rax, MmUnlockPages
                mov     [r14+460h], rax
                lea     rax, sub_140399770
                mov     [r14+400h], rax
                lea     rax, sub_1403BD280
                mov     [r14+408h], rax
                lea     rax, KeSetEvent
                mov     [r14+410h], rax
                lea     rax, sub_1404FDC90
                mov     [r14+468h], rax
                lea     rax, PsLookupProcessByProcessId
                mov     [r14+480h], rax
                lea     rax, PsGetProcessId
                mov     [r14+488h], rax
                lea     rax, sub_14035CDB0
                mov     [r14+490h], rax
                lea     rax, sub_1407CC4A0
                mov     [r14+498h], rax
                lea     rax, qword_140C12F40
                mov     [r14+960h], rax
                test    rbx, rbx
                jz      short loc_140A22137
                mov     rax, [rbx+8]
                mov     [r14+2D0h], rax

loc_140A22137:                          ; CODE XREF: sub_140A1EEE4+3246↑j
                lea     rax, sub_1402AE7D0
                mov     [r14+418h], rax
                lea     rax, sub_1403CF560
                mov     [r14+420h], rax
                lea     rax, qword_1403797A0
                mov     [r14+470h], rax
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2216E

loc_140A2216C:                          ; CODE XREF: sub_140A1EEE4:loc_140A2216C↓j
                jmp     short loc_140A2216C
; ---------------------------------------------------------------------------

loc_140A2216E:                          ; CODE XREF: sub_140A1EEE4+3286↑j
                sti
                mov     [r14+95Ch], r13d
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A22181

loc_140A2217F:                          ; CODE XREF: sub_140A1EEE4:loc_140A2217F↓j
                jmp     short loc_140A2217F
; ---------------------------------------------------------------------------

loc_140A22181:                          ; CODE XREF: sub_140A1EEE4+3299↑j
                sti
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2218D

loc_140A2218B:                          ; CODE XREF: sub_140A1EEE4:loc_140A2218B↓j
                jmp     short loc_140A2218B
; ---------------------------------------------------------------------------

loc_140A2218D:                          ; CODE XREF: sub_140A1EEE4+32A5↑j
                sti
                rdtsc
                shl     rdx, 20h
                mov     rdi, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E98], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A22238
                mov     dword ptr [r14+928h], 4
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E90], rdx
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     rax, rcx
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                shr     rax, 2
                imul    rax, 7
                sub     rcx, rax
                mov     [r14+928h], ecx
                jmp     short loc_140A22241
; ---------------------------------------------------------------------------

loc_140A22238:                          ; CODE XREF: sub_140A1EEE4+32FA↑j
                xor     eax, eax
                mov     [r14+928h], eax

loc_140A22241:                          ; CODE XREF: sub_140A1EEE4+3352↑j
                mov     rax, cs:qword_140D585F0
                cmp     rax, 1Fh
                ja      loc_140A39250
                shl     eax, 0Ah
                xor     eax, [r14+990h]
                and     eax, 7C00h
                xor     [r14+990h], eax
                mov     eax, cs:dword_140C12F00
                mov     [r14+950h], eax
                add     cs:dword_140C12F00, esi
                xor     eax, eax
                mov     [r14+800h], rax
                mov     rax, cs:off_140C0F040 ; "PAGEVRF"
                mov     [r14+930h], rax
                mov     rax, cs:off_140C0F048 ; "PAGESPEC"
                mov     [r14+938h], rax
                mov     rax, cs:off_140C0F050 ; "INIT"
                mov     [r14+940h], rax
                mov     rax, cs:off_140C0F058 ; "PAGEKD"
                mov     [r14+948h], rax
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E88], rdx
                xor     rcx, rax
                mov     rax, 624DD2F1A9FBE77h
                mul     rcx
                mov     rax, rcx
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                shr     rax, 9
                imul    rax, 3E8h
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A22319
                bts     dword ptr [r14+994h], 16h

loc_140A22319:                          ; CODE XREF: sub_140A1EEE4+342A↑j
                xor     ecx, ecx
                call    sub_14023DAD0
                mov     [r14+7C0h], rax
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A22334

loc_140A22332:                          ; CODE XREF: sub_140A1EEE4:loc_140A22332↓j
                jmp     short loc_140A22332
; ---------------------------------------------------------------------------

loc_140A22334:                          ; CODE XREF: sub_140A1EEE4+344C↑j
                sti
                mov     eax, 140000h
                xor     edx, edx
                div     [rsp+24B8h+arg_10]
                mov     [r14+82Ch], eax
                lea     rax, qword_140C0F1B0
                mov     [r14+4C0h], rax
                lea     rax, qword_140C12F28
                mov     [r14+4C8h], rax
                lea     rax, qword_140C12F30
                mov     [r14+4D0h], rax
                lea     rax, qword_140C12F38
                mov     [r14+4D8h], rax
                mov     rax, cs:PsInitialSystemProcess
                mov     [r14+4E0h], rax
                mov     rax, cs:qword_140CFCA10
                mov     [r14+4E8h], rax
                lea     rax, qword_140CFC990
                mov     [r14+4F0h], rax
                lea     rax, qword_140C31B20
                mov     [r14+4F8h], rax
                lea     rax, unk_140D23640
                mov     [r14+500h], rax
                mov     rax, cs:qword_140C259F0
                mov     [r14+508h], rax
                mov     rax, cs:IoDriverObjectType
                mov     [r14+510h], rax
                mov     rax, cs:PsProcessType
                mov     [r14+518h], rax
                lea     rax, qword_140C1E060
                mov     [r14+520h], rax
                lea     rax, dword_140E00010
                mov     [r14+528h], rax
                lea     rax, PsLoadedModuleList
                mov     [r14+530h], rax
                lea     rax, PsLoadedModuleResource
                mov     [r14+538h], rax
                lea     rax, unk_140D231C0
                mov     [r14+540h], rax
                lea     rax, qword_140D2E748
                mov     [r14+548h], rax
                lea     rax, qword_140CFC5C8
                mov     [r14+550h], rax
                lea     rax, qword_140CEC940
                mov     [r14+558h], rax
                lea     rax, qword_140C2A7A8
                mov     [r14+560h], rax
                lea     rax, xmmword_140E018C0
                mov     [r14+568h], rax
                lea     rax, xmmword_140CFCA40
                mov     [r14+570h], rax
                lea     rax, xmmword_140CFCC00
                mov     [r14+578h], rax
                lea     rax, byte_140C1CEC0
                mov     [r14+580h], rax
                lea     rax, unk_140C1DE28
                mov     [r14+588h], rax
                lea     rax, qword_140C12F08
                mov     [r14+590h], rax
                lea     rax, dword_140C13D58
                mov     [r14+598h], rax
                lea     rax, qword_140D2EB40
                mov     [r14+5A0h], rax
                lea     rax, qword_140D2E790
                mov     [r14+5A8h], rax
                mov     rax, cs:qword_140C259A0
                mov     [r14+5B0h], rax
                mov     rax, 0FFFFF78000000000h
                mov     [r14+5B8h], rax
                mov     rax, cs:qword_140CFC808
                mov     [r14+5C0h], rax
                lea     rax, qword_140984EA0
                mov     [r14+5C8h], rax
                lea     rax, word_140C31EA0
                mov     [r14+5D8h], rax
                mov     rax, cs:qword_140CFB358
                mov     [r14+5E0h], rax
                mov     rax, cs:qword_140CFC470
                mov     [r14+5E8h], rax
                mov     rax, cs:qword_140CFC500
                mov     [r14+5F0h], rax
                lea     rax, dword_140CFC404
                mov     [r14+5F8h], rax
                lea     rcx, qword_140034190
                lea     rax, qword_140CFC3C8
                mov     edx, 2
                mov     [r14+600h], rax
                lea     rax, qword_140CFC3D0
                mov     [r14+608h], rax
                lea     rax, off_140E00000
                mov     [r14+610h], rax
                lea     rax, sub_140409700
                mov     [r14+5D0h], rax
                lea     rax, [r14+630h]

loc_140A225BA:                          ; CODE XREF: sub_140A1EEE4+371E↓j
                movups  xmm0, xmmword ptr [rcx]
                movups  xmmword ptr [rax], xmm0
                movups  xmm1, xmmword ptr [rcx+10h]
                movups  xmmword ptr [rax+10h], xmm1
                movups  xmm0, xmmword ptr [rcx+20h]
                movups  xmmword ptr [rax+20h], xmm0
                movups  xmm1, xmmword ptr [rcx+30h]
                movups  xmmword ptr [rax+30h], xmm1
                movups  xmm0, xmmword ptr [rcx+40h]
                movups  xmmword ptr [rax+40h], xmm0
                movups  xmm1, xmmword ptr [rcx+50h]
                movups  xmmword ptr [rax+50h], xmm1
                movups  xmm0, xmmword ptr [rcx+60h]
                movups  xmmword ptr [rax+60h], xmm0
                add     rax, r15
                movups  xmm1, xmmword ptr [rcx+70h]
                add     rcx, r15
                movups  xmmword ptr [rax-10h], xmm1
                sub     rdx, 1
                jnz     short loc_140A225BA
                movups  xmm0, xmmword ptr [rcx]
                lea     rdi, sub_140A172C0
                movups  xmmword ptr [rax], xmm0
                movups  xmm1, xmmword ptr [rcx+10h]
                movups  xmmword ptr [rax+10h], xmm1
                movups  xmm0, xmmword ptr [rcx+20h]
                movups  xmmword ptr [rax+20h], xmm0
                movups  xmm1, xmmword ptr [rcx+30h]
                movups  xmmword ptr [rax+30h], xmm1
                cmp     cs:byte_140E01840, dl
                lea     rax, sub_1404009E0
                cmovnz  rax, rdi
                mov     [r14+618h], rax
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2264E

loc_140A2264C:                          ; CODE XREF: sub_140A1EEE4:loc_140A2264C↓j
                jmp     short loc_140A2264C
; ---------------------------------------------------------------------------

loc_140A2264E:                          ; CODE XREF: sub_140A1EEE4+3766↑j
                sti
                mov     [r14+808h], r13d
                mov     [r14+0A2Ch], r13d
                rdtsc
                shl     rdx, 20h
                mov     r8, 7010008004002001h
                or      rax, rdx
                mov     r15d, 5
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E80], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, r15d
                ja      loc_140A2276B
                jz      loc_140A22751
                test    ecx, ecx
                jz      short loc_140A22737
                sub     ecx, 1
                jz      short loc_140A2271E
                sub     ecx, 1
                jz      short loc_140A22704
                cmp     ecx, 1
                jz      short loc_140A226E7
                mov     [rsp+24B8h+var_2268], 67076494h
                mov     edi, [rsp+24B8h+var_2268]
                rol     edi, 4
                jmp     loc_140A22883
; ---------------------------------------------------------------------------

loc_140A226E7:                          ; CODE XREF: sub_140A1EEE4+37E7↑j
                mov     [rsp+24B8h+var_2264], 0A8223938h
                mov     edi, [rsp+24B8h+var_2264]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A22883
; ---------------------------------------------------------------------------

loc_140A22704:                          ; CODE XREF: sub_140A1EEE4+37E2↑j
                mov     [rsp+24B8h+var_2260], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2260]
                ror     edi, 2
                jmp     loc_140A22883
; ---------------------------------------------------------------------------

loc_140A2271E:                          ; CODE XREF: sub_140A1EEE4+37DD↑j
                mov     [rsp+24B8h+var_225C], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_225C]
                rol     edi, 1
                jmp     loc_140A22883
; ---------------------------------------------------------------------------

loc_140A22737:                          ; CODE XREF: sub_140A1EEE4+37D8↑j
                mov     [rsp+24B8h+var_2258], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2258]
                ror     edi, 6
                jmp     loc_140A22883
; ---------------------------------------------------------------------------

loc_140A22751:                          ; CODE XREF: sub_140A1EEE4+37D0↑j
                mov     [rsp+24B8h+var_21C4], 288C49EDh
                mov     edi, [rsp+24B8h+var_21C4]
                ror     edi, 5
                jmp     loc_140A22883
; ---------------------------------------------------------------------------

loc_140A2276B:                          ; CODE XREF: sub_140A1EEE4+37CA↑j
                sub     ecx, r12d
                jz      loc_140A2286B
                sub     ecx, 1
                jz      loc_140A22854
                sub     ecx, 1
                jz      loc_140A2283D
                cmp     ecx, 1
                jz      loc_140A22823
                rdtsc
                shl     rdx, 20h
                mov     r9d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1E78], rdx
                xor     edi, edx
                mov     eax, r9d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r9d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                or      ecx, ebx
                shr     edx, 3
                mov     rbx, [rsp+24B8h+arg_18]
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A22883
; ---------------------------------------------------------------------------

loc_140A22823:                          ; CODE XREF: sub_140A1EEE4+38A5↑j
                mov     [rsp+24B8h+var_2254], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2254]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A22883
; ---------------------------------------------------------------------------

loc_140A2283D:                          ; CODE XREF: sub_140A1EEE4+389C↑j
                mov     [rsp+24B8h+var_2250], 64664142h
                mov     edi, [rsp+24B8h+var_2250]
                ror     edi, 8
                jmp     short loc_140A22883
; ---------------------------------------------------------------------------

loc_140A22854:                          ; CODE XREF: sub_140A1EEE4+3893↑j
                mov     [rsp+24B8h+var_224C], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_224C]
                rol     edi, 7
                jmp     short loc_140A22883
; ---------------------------------------------------------------------------

loc_140A2286B:                          ; CODE XREF: sub_140A1EEE4+388A↑j
                mov     [rsp+24B8h+var_2248], 4E574672h
                mov     edi, [rsp+24B8h+var_2248]
                xor     edi, r12d
                ror     edi, 18h

loc_140A22883:                          ; CODE XREF: sub_140A1EEE4+37FE↑j
                                        ; sub_140A1EEE4+381B↑j ...
                mov     [r14+810h], edi
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E70], rdx
                xor     rcx, rax
                mov     rax, 410410410410411h
                mul     rcx
                mov     rax, rcx
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                shr     rax, 5
                imul    rax, 3Fh ; '?'
                sub     rcx, rax
                add     ecx, esi
                mov     [r14+814h], ecx
                rdtsc
                shl     rdx, 20h
                xor     r10d, r10d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     ecx, 2BCh
                sub     ecx, r13d
                mov     [rsp+24B8h+var_1E68], rdx
                xor     rdx, rax
                mov     eax, 80000000h
                mov     [r14+818h], rdx
                and     rdx, rax
                mov     eax, 2D4h
                sub     eax, r13d
                test    rdx, rdx
                cmovnz  ecx, eax
                mov     eax, 0BC2A27DBh
                add     ecx, [r14+95Ch]
                xor     ecx, eax
                mov     [r14+95Ch], ecx
                rdtsc
                shl     rdx, 20h
                mov     rdi, 0CCCCCCCCCCCCCCCDh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E60], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A22992
                or      dword ptr [r14+990h], 8

loc_140A22992:                          ; CODE XREF: sub_140A1EEE4+3AA4↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E58], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A229DC
                bts     dword ptr [r14+990h], 1Ah

loc_140A229DC:                          ; CODE XREF: sub_140A1EEE4+3AED↑j
                mov     esi, [rsp+24B8h+var_234C]
                cmp     esi, 7
                jz      short loc_140A22A29
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E50], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 2
                jnb     short loc_140A22A31

loc_140A22A29:                          ; CODE XREF: sub_140A1EEE4+3B02↑j
                or      dword ptr [r14+994h], 8

loc_140A22A31:                          ; CODE XREF: sub_140A1EEE4+3B43↑j
                rdtsc
                shl     rdx, 20h
                mov     r13d, 1
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E48], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     short loc_140A22A80
                bts     dword ptr [r14+990h], 0Fh

loc_140A22A80:                          ; CODE XREF: sub_140A1EEE4+3B91↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E40], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A22ACA
                bts     dword ptr [r14+990h], 16h

loc_140A22ACA:                          ; CODE XREF: sub_140A1EEE4+3BDB↑j
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A22AD7

loc_140A22AD5:                          ; CODE XREF: sub_140A1EEE4:loc_140A22AD5↓j
                jmp     short loc_140A22AD5
; ---------------------------------------------------------------------------

loc_140A22AD7:                          ; CODE XREF: sub_140A1EEE4+3BEF↑j
                sti
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E38], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     short loc_140A22B21
                bts     dword ptr [r14+990h], 1Bh

loc_140A22B21:                          ; CODE XREF: sub_140A1EEE4+3C32↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E30], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A22B6B
                bts     dword ptr [r14+990h], 17h

loc_140A22B6B:                          ; CODE XREF: sub_140A1EEE4+3C7C↑j
                xor     eax, eax
                test    rbx, rbx
                jz      short loc_140A22BCA
                test    byte ptr [rsp+24B8h+var_213C], r13b
                jz      short loc_140A22BCA
                cmp     esi, 4
                jz      short loc_140A22BCA
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E28], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r12
                jnb     short loc_140A22BC8
                or      [r14+994h], r13d

loc_140A22BC8:                          ; CODE XREF: sub_140A1EEE4+3CDB↑j
                xor     eax, eax

loc_140A22BCA:                          ; CODE XREF: sub_140A1EEE4+3C8C↑j
                                        ; sub_140A1EEE4+3C96↑j ...
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A22BD5

loc_140A22BD3:                          ; CODE XREF: sub_140A1EEE4:loc_140A22BD3↓j
                jmp     short loc_140A22BD3
; ---------------------------------------------------------------------------

loc_140A22BD5:                          ; CODE XREF: sub_140A1EEE4+3CED↑j
                sti
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E20], rdx
                xor     rcx, rax
                mov     rax, 47AE147AE147AE15h
                mul     rcx
                mov     rax, rcx
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                shr     rax, 6
                imul    rax, 64h ; 'd'
                sub     rcx, rax
                cmp     rcx, r13
                jnb     short loc_140A22C2F
                bts     dword ptr [r14+994h], 11h

loc_140A22C2F:                          ; CODE XREF: sub_140A1EEE4+3D40↑j
                mov     rax, [r14+428h]
                call    j__guard_dispatch_icall_nop
                test    al, al
                jz      short loc_140A22C47
                or      dword ptr [r14+994h], 2

loc_140A22C47:                          ; CODE XREF: sub_140A1EEE4+3D59↑j
                call    sub_1403A7BE0
                test    eax, eax
                jz      short loc_140A22C59
                bts     dword ptr [r14+994h], 12h

loc_140A22C59:                          ; CODE XREF: sub_140A1EEE4+3D6A↑j
                call    sub_1402EF804
                test    al, al
                jz      short loc_140A22C6B
                bts     dword ptr [r14+994h], 14h

loc_140A22C6B:                          ; CODE XREF: sub_140A1EEE4+3D7C↑j
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E18], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     short loc_140A22CC5
                bts     dword ptr [r14+994h], 7

loc_140A22CC5:                          ; CODE XREF: sub_140A1EEE4+3DD6↑j
                cmp     esi, 7
                jnz     short loc_140A22CE8
                mov     eax, [r14+990h]
                and     eax, 0FBFFFFF7h
                bts     eax, 1Eh
                mov     [r14+990h], eax
                mov     [r14+958h], r13d

loc_140A22CE8:                          ; CODE XREF: sub_140A1EEE4+3DE4↑j
                call    sub_140A43960
                test    eax, eax
                js      short loc_140A22D06
                mov     eax, 80000000h
                or      [r14+990h], eax
                bts     dword ptr [r14+994h], 0Dh

loc_140A22D06:                          ; CODE XREF: sub_140A1EEE4+3E0B↑j
                call    sub_1403D0068
                mov     [r14+0A90h], rax
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E10], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, r15d
                ja      loc_140A22E10
                jz      loc_140A22DF6
                test    ecx, ecx
                jz      short loc_140A22DDC
                sub     ecx, r13d
                jz      short loc_140A22DC3
                sub     ecx, r13d
                jz      short loc_140A22DA9
                cmp     ecx, r13d
                jz      short loc_140A22D8C
                mov     [rsp+24B8h+var_2244], 67076494h
                mov     edi, [rsp+24B8h+var_2244]
                rol     edi, 4
                jmp     loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22D8C:                          ; CODE XREF: sub_140A1EEE4+3E8C↑j
                mov     [rsp+24B8h+var_2240], 0A8223938h
                mov     edi, [rsp+24B8h+var_2240]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22DA9:                          ; CODE XREF: sub_140A1EEE4+3E87↑j
                mov     [rsp+24B8h+var_223C], 85B5910Dh
                mov     edi, [rsp+24B8h+var_223C]
                ror     edi, 2
                jmp     loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22DC3:                          ; CODE XREF: sub_140A1EEE4+3E82↑j
                mov     [rsp+24B8h+var_2238], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2238]
                rol     edi, 1
                jmp     loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22DDC:                          ; CODE XREF: sub_140A1EEE4+3E7D↑j
                mov     [rsp+24B8h+var_2234], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2234]
                ror     edi, 6
                jmp     loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22DF6:                          ; CODE XREF: sub_140A1EEE4+3E75↑j
                mov     [rsp+24B8h+var_2230], 288C49EDh
                mov     edi, [rsp+24B8h+var_2230]
                ror     edi, 5
                jmp     loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22E10:                          ; CODE XREF: sub_140A1EEE4+3E6F↑j
                sub     ecx, r12d
                jz      loc_140A22F12
                sub     ecx, r13d
                jz      loc_140A22EFB
                sub     ecx, r13d
                jz      loc_140A22EE4
                cmp     ecx, r13d
                jz      loc_140A22ECA
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1E08], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                or      ecx, ebx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     rbx, 7010008004002001h
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22ECA:                          ; CODE XREF: sub_140A1EEE4+3F4A↑j
                mov     [rsp+24B8h+var_222C], 0B0869E85h
                mov     edi, [rsp+24B8h+var_222C]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22EE4:                          ; CODE XREF: sub_140A1EEE4+3F41↑j
                mov     [rsp+24B8h+var_2228], 64664142h
                mov     edi, [rsp+24B8h+var_2228]
                ror     edi, 8
                jmp     short loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22EFB:                          ; CODE XREF: sub_140A1EEE4+3F38↑j
                mov     [rsp+24B8h+var_2224], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_2224]
                rol     edi, 7
                jmp     short loc_140A22F2A
; ---------------------------------------------------------------------------

loc_140A22F12:                          ; CODE XREF: sub_140A1EEE4+3F2F↑j
                mov     [rsp+24B8h+var_2220], 4E574672h
                mov     edi, [rsp+24B8h+var_2220]
                xor     edi, r12d
                ror     edi, 18h

loc_140A22F2A:                          ; CODE XREF: sub_140A1EEE4+3EA3↑j
                                        ; sub_140A1EEE4+3EC0↑j ...
                mov     rax, [r14+0F8h]
                mov     r8d, edi
                mov     rdx, [r14+0A90h]
                mov     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     [r14+0A88h], rax
                test    rax, rax
                jz      loc_140A237B3
                xor     eax, eax
                cmp     cs:qword_140D58640, rax
                jnz     loc_140A231A0
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1E00], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, r15d
                ja      loc_140A23062
                jz      loc_140A23048
                test    ecx, ecx
                jz      short loc_140A2302E
                sub     ecx, r13d
                jz      short loc_140A23015
                sub     ecx, r13d
                jz      short loc_140A22FFB
                cmp     ecx, r13d
                jz      short loc_140A22FDE
                mov     [rsp+24B8h+var_221C], 67076494h
                mov     edi, [rsp+24B8h+var_221C]
                rol     edi, 4
                jmp     loc_140A23172
; ---------------------------------------------------------------------------

loc_140A22FDE:                          ; CODE XREF: sub_140A1EEE4+40DE↑j
                mov     [rsp+24B8h+var_2218], 0A8223938h
                mov     edi, [rsp+24B8h+var_2218]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A23172
; ---------------------------------------------------------------------------

loc_140A22FFB:                          ; CODE XREF: sub_140A1EEE4+40D9↑j
                mov     [rsp+24B8h+var_2214], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2214]
                ror     edi, 2
                jmp     loc_140A23172
; ---------------------------------------------------------------------------

loc_140A23015:                          ; CODE XREF: sub_140A1EEE4+40D4↑j
                mov     [rsp+24B8h+var_2210], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2210]
                rol     edi, 1
                jmp     loc_140A23172
; ---------------------------------------------------------------------------

loc_140A2302E:                          ; CODE XREF: sub_140A1EEE4+40CF↑j
                mov     [rsp+24B8h+var_220C], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_220C]
                ror     edi, 6
                jmp     loc_140A23172
; ---------------------------------------------------------------------------

loc_140A23048:                          ; CODE XREF: sub_140A1EEE4+40C7↑j
                mov     [rsp+24B8h+var_2208], 288C49EDh
                mov     edi, [rsp+24B8h+var_2208]
                ror     edi, 5
                jmp     loc_140A23172
; ---------------------------------------------------------------------------

loc_140A23062:                          ; CODE XREF: sub_140A1EEE4+40C1↑j
                sub     ecx, r12d
                jz      loc_140A2315A
                sub     ecx, r13d
                jz      loc_140A23143
                sub     ecx, r13d
                jz      loc_140A2312C
                cmp     ecx, r13d
                jz      loc_140A23112
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1DF8], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A23172
; ---------------------------------------------------------------------------

loc_140A23112:                          ; CODE XREF: sub_140A1EEE4+419C↑j
                mov     [rsp+24B8h+var_2204], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2204]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A23172
; ---------------------------------------------------------------------------

loc_140A2312C:                          ; CODE XREF: sub_140A1EEE4+4193↑j
                mov     [rsp+24B8h+var_2200], 64664142h
                mov     edi, [rsp+24B8h+var_2200]
                ror     edi, 8
                jmp     short loc_140A23172
; ---------------------------------------------------------------------------

loc_140A23143:                          ; CODE XREF: sub_140A1EEE4+418A↑j
                mov     [rsp+24B8h+var_21FC], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_21FC]
                rol     edi, 7
                jmp     short loc_140A23172
; ---------------------------------------------------------------------------

loc_140A2315A:                          ; CODE XREF: sub_140A1EEE4+4181↑j
                mov     [rsp+24B8h+var_21F8], 4E574672h
                mov     edi, [rsp+24B8h+var_21F8]
                xor     edi, r12d
                ror     edi, 18h

loc_140A23172:                          ; CODE XREF: sub_140A1EEE4+40F5↑j
                                        ; sub_140A1EEE4+4112↑j ...
                mov     rax, [r14+0F8h]
                mov     r8d, edi
                mov     edx, 8
                mov     ecx, 200h
                call    j__guard_dispatch_icall_nop
                xor     ebx, ebx
                mov     cs:qword_140D58640, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     [rax], rbx

loc_140A231A0:                          ; CODE XREF: sub_140A1EEE4+407A↑j
                mov     rax, cs:qword_140D58640
                mov     [r14+0A00h], rax
                call    sub_140A763BC
                test    eax, eax
                jz      short loc_140A231BF
                or      dword ptr [r14+994h], 10h

loc_140A231BF:                          ; CODE XREF: sub_140A1EEE4+42D1↑j
                call    sub_140A76080
                test    eax, eax
                jz      short loc_140A231D0
                or      dword ptr [r14+994h], 40h

loc_140A231D0:                          ; CODE XREF: sub_140A1EEE4+42E2↑j
                mov     [r14+838h], esi
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A231E4

loc_140A231E2:                          ; CODE XREF: sub_140A1EEE4:loc_140A231E2↓j
                jmp     short loc_140A231E2
; ---------------------------------------------------------------------------

loc_140A231E4:                          ; CODE XREF: sub_140A1EEE4+42FC↑j
                sti
                xor     ecx, ecx
                mov     eax, 80000008h
                cpuid
                mov     edi, eax
                mov     [rsp+24B8h+var_13B8], eax
                shr     edi, 8
                mov     [r14+920h], dil
                mov     [rsp+24B8h+var_13B4], ebx
                mov     [rsp+24B8h+var_13B0], ecx
                mov     [rsp+24B8h+var_13AC], edx
                rdtsc
                shl     rdx, 20h
                mov     r15, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1DF0], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A23271
                bts     dword ptr [r14+994h], 8

loc_140A23271:                          ; CODE XREF: sub_140A1EEE4+4382↑j
                mov     ecx, 3Fh ; '?'
                cmp     dil, cl
                ja      loc_140A39282
                mov     eax, [rsp+24B8h+var_213C]
                and     eax, r13d
                mov     dword ptr [rsp+24B8h+var_23F8], eax
                jz      loc_140A234BF
                lea     rsi, qword_140C12F50
                mov     r12d, esi
                lea     rbx, cs:140000000h
                and     r12d, ecx
                mov     rcx, rbx
                call    RtlImageNtHeader
                lea     r8, [rsp+24B8h+var_21F0]
                mov     rcx, rbx
                lea     rdx, [rsp+24B8h+var_EE0]
                call    sub_140372240
                mov     ecx, [rsp+24B8h+var_21F0]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mov     r15, [rsp+24B8h+var_EE0]
                mov     r14, 7010008004002001h
                mul     rcx
                mov     rcx, rbx
                mov     [rsp+24B8h+var_ED0], rbx
                shr     rdx, 3
                mov     eax, edx
                mov     [rsp+24B8h+var_21F0], edx
                lea     rdx, [rsp+24B8h+var_1DE8]
                mov     [rsp+24B8h+var_EC0], rdx
                lea     rax, [rax+rax*2]
                lea     rax, [r15+rax*4]
                mov     [rsp+24B8h+var_EC8], rax

loc_140A23328:                          ; CODE XREF: sub_140A1EEE4+456C↓j
                test    r15, r15
                jz      loc_140A23455
                cmp     r15, rax
                jz      loc_140A23455
                mov     rdx, rcx
                mov     rcx, r15
                call    sub_1402AE7D0
                mov     rcx, rax
                mov     r9d, r12d
                mov     rax, [rsp+24B8h+var_EC0]
                mov     [rax], rcx
                mov     rax, [rsp+24B8h+var_1DE8]
                mov     r15, [rsp+24B8h+var_EE0]
                add     r15, 0Ch
                mov     [rsp+24B8h+var_EE0], r15
                mov     ecx, [rax]
                mov     edi, [rax+4]
                sub     edi, ecx
                lea     r10, [rbx+rcx]
                mov     ecx, edi
                add     rcx, r10
                mov     r8, r10
                mov     rax, r10
                cmp     r10, rcx
                jnb     short loc_140A23399

loc_140A2338D:                          ; CODE XREF: sub_140A1EEE4+44B3↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2338D

loc_140A23399:                          ; CODE XREF: sub_140A1EEE4+44A7↑j
                mov     r11d, edi
                mov     rbx, rsi
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A233FA

loc_140A233A8:                          ; CODE XREF: sub_140A1EEE4+4514↓j
                mov     eax, 8

loc_140A233AD:                          ; CODE XREF: sub_140A1EEE4+44E0↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, r13
                jnz     short loc_140A233AD
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, rsi
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1DE0], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A233A8

loc_140A233FA:                          ; CODE XREF: sub_140A1EEE4+44C2↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A2341D
                mov     eax, edi
                shr     rax, 3

loc_140A23408:                          ; CODE XREF: sub_140A1EEE4+4537↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rax, r13
                jnz     short loc_140A23408

loc_140A2341D:                          ; CODE XREF: sub_140A1EEE4+451C↑j
                test    edi, edi
                jz      short loc_140A23436

loc_140A23421:                          ; CODE XREF: sub_140A1EEE4+4550↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A23421

loc_140A23436:                          ; CODE XREF: sub_140A1EEE4+453B↑j
                mov     rax, [rsp+24B8h+var_EC8]
                mov     rsi, rbx
                mov     rcx, [rsp+24B8h+var_ED0]
                lea     rbx, cs:140000000h
                jmp     loc_140A23328
; ---------------------------------------------------------------------------

loc_140A23455:                          ; CODE XREF: sub_140A1EEE4+4447↑j
                                        ; sub_140A1EEE4+4450↑j
                mov     r14, [rsp+24B8h+var_2418]
                mov     edx, 40000h
                mov     rax, rsi
                mov     r12d, 6
                sub     rax, cs:qword_140C12F50
                mov     r15, 7010008004002001h
                neg     rax
                mov     eax, [r14+990h]
                sbb     ecx, ecx
                btr     eax, 12h
                and     ecx, edx
                or      ecx, eax
                mov     [r14+990h], ecx
                test    edx, ecx
                jz      short loc_140A234B8
                xor     eax, eax
                cmp     [r14+8F8h], eax
                jnz     short loc_140A234B8
                mov     rax, [r14+590h]
                xor     rsi, cs:qword_140C12F50
                mov     [rax+18h], rsi

loc_140A234B8:                          ; CODE XREF: sub_140A1EEE4+45B5↑j
                                        ; sub_140A1EEE4+45C0↑j
                mov     esi, [rsp+24B8h+var_234C]

loc_140A234BF:                          ; CODE XREF: sub_140A1EEE4+43AC↑j
                rdtsc
                shl     rdx, 20h
                mov     rdi, 0CCCCCCCCCCCCCCCDh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1DD8], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 2
                jnb     loc_140A236D3
                cmp     esi, 3
                jz      loc_140A236D3
                mov     r8d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rsi, rax
                mov     [rsp+24B8h+var_1DD0], rdx
                xor     esi, edx
                and     esi, 7FFh
                rdtsc
                shl     rdx, 20h
                lea     ebx, [rsi+1]
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     ecx, 200h
                xor     rax, rdx
                mov     [rsp+24B8h+var_1DC8], rdx
                xor     edx, edx
                div     rbx
                mov     rax, [r14+0F8h]
                mov     r15, rdx
                lea     edx, [rsi+20h]
                call    j__guard_dispatch_icall_nop
                mov     r9, rax
                xor     eax, eax
                test    r9, r9
                jnz     short loc_140A235A6
                add     [r14+0A18h], r13d
                mov     r8d, eax
                jmp     loc_140A236AF
; ---------------------------------------------------------------------------

loc_140A235A6:                          ; CODE XREF: sub_140A1EEE4+46B1↑j
                mov     edi, r15d
                mov     rbx, r9
                mov     r10, 7010008004002001h
                cmp     r15d, 8
                jb      short loc_140A235F6
                mov     r8d, r15d
                shr     r8, 3

loc_140A235C3:                          ; CODE XREF: sub_140A1EEE4+4710↓j
                rdtsc
                shl     rdx, 20h
                add     edi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1DC0], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r8, r13
                jnz     short loc_140A235C3

loc_140A235F6:                          ; CODE XREF: sub_140A1EEE4+46D6↑j
                test    edi, edi
                jz      short loc_140A2362C
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1DB8], rdx
                xor     rdx, rax

loc_140A2361E:                          ; CODE XREF: sub_140A1EEE4+4746↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2361E

loc_140A2362C:                          ; CODE XREF: sub_140A1EEE4+4714↑j
                mov     r8d, r15d
                sub     esi, r15d
                add     r8, r9
                lea     rbx, [r8+20h]
                cmp     esi, 8
                jb      short loc_140A23677
                mov     edi, esi
                shr     rdi, 3

loc_140A23644:                          ; CODE XREF: sub_140A1EEE4+4791↓j
                rdtsc
                shl     rdx, 20h
                add     esi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1DB0], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     rdi, r13
                jnz     short loc_140A23644

loc_140A23677:                          ; CODE XREF: sub_140A1EEE4+4758↑j
                test    esi, esi
                jz      short loc_140A236AD
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1DA8], rdx
                xor     rdx, rax

loc_140A2369F:                          ; CODE XREF: sub_140A1EEE4+47C7↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     esi, 0FFFFFFFFh
                jnz     short loc_140A2369F

loc_140A236AD:                          ; CODE XREF: sub_140A1EEE4+4795↑j
                xor     eax, eax

loc_140A236AF:                          ; CODE XREF: sub_140A1EEE4+46BD↑j
                mov     [r14+0A08h], r8
                test    r8, r8
                jz      loc_140A237B3
                mov     rdi, 0CCCCCCCCCCCCCCCDh
                mov     r15, 7010008004002001h

loc_140A236D3:                          ; CODE XREF: sub_140A1EEE4+4624↑j
                                        ; sub_140A1EEE4+462D↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1DA0], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 2
                jnb     loc_140A239EA
                test    dword ptr [r14+990h], 40000000h
                jnz     loc_140A239EA
                mov     r8d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rsi, rax
                mov     [rsp+24B8h+var_1D98], rdx
                xor     esi, edx
                and     esi, 7FFh
                rdtsc
                shl     rdx, 20h
                lea     ebx, [rsi+1]
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     ecx, 200h
                xor     rax, rdx
                mov     [rsp+24B8h+var_1D90], rdx
                xor     edx, edx
                div     rbx
                mov     rax, [r14+0F8h]
                mov     r15, rdx
                lea     edx, [rsi+202h]
                call    j__guard_dispatch_icall_nop
                mov     r9, rax
                xor     eax, eax
                test    r9, r9
                jnz     short loc_140A237BA

loc_140A237AC:                          ; CODE XREF: sub_140A1EEE4+5237↓j
                                        ; sub_140A1EEE4+5448↓j ...
                add     [r14+0A18h], r13d

loc_140A237B3:                          ; CODE XREF: sub_140A1EEE4+AD1↑j
                                        ; sub_140A1EEE4+AE7↑j ...
                xor     al, al
                jmp     loc_140A399C0
; ---------------------------------------------------------------------------

loc_140A237BA:                          ; CODE XREF: sub_140A1EEE4+48C6↑j
                mov     edi, r15d
                mov     rbx, r9
                mov     r11d, 0FFFFFFF8h
                mov     r10, 7010008004002001h
                cmp     r15d, 8
                jb      short loc_140A23810
                mov     r8d, r15d
                shr     r8, 3

loc_140A237DD:                          ; CODE XREF: sub_140A1EEE4+492A↓j
                rdtsc
                shl     rdx, 20h
                add     edi, r11d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1D88], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r8, r13
                jnz     short loc_140A237DD

loc_140A23810:                          ; CODE XREF: sub_140A1EEE4+48F0↑j
                test    edi, edi
                jz      short loc_140A23846
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1D80], rdx
                xor     rdx, rax

loc_140A23838:                          ; CODE XREF: sub_140A1EEE4+4960↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A23838

loc_140A23846:                          ; CODE XREF: sub_140A1EEE4+492E↑j
                mov     r8d, r15d
                sub     esi, r15d
                add     r8, r9
                mov     r15, 7010008004002001h
                lea     rbx, [r8+202h]
                cmp     esi, 8
                jb      short loc_140A2389E
                mov     edi, esi
                shr     rdi, 3

loc_140A2386B:                          ; CODE XREF: sub_140A1EEE4+49B8↓j
                rdtsc
                shl     rdx, 20h
                add     esi, r11d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     [rsp+24B8h+var_1D78], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     rdi, r13
                jnz     short loc_140A2386B

loc_140A2389E:                          ; CODE XREF: sub_140A1EEE4+497F↑j
                xor     eax, eax
                test    esi, esi
                jz      short loc_140A238D8
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     [rsp+24B8h+var_1D70], rdx
                xor     rdx, rax

loc_140A238C8:                          ; CODE XREF: sub_140A1EEE4+49F0↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     esi, 0FFFFFFFFh
                jnz     short loc_140A238C8
                xor     eax, eax

loc_140A238D8:                          ; CODE XREF: sub_140A1EEE4+49BE↑j
                test    r8, r8
                jz      loc_140A237B3
                rdtsc
                shl     rdx, 20h
                lea     rbx, [r8+2]
                or      rax, rdx
                mov     esi, 100h
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rcx, rbx
                mov     [rsp+24B8h+var_1D68], rdx
                xor     rdx, rax
                mov     [rsp+24B8h+var_1D60], rdx
                xor     eax, eax

loc_140A2391B:                          ; CODE XREF: sub_140A1EEE4+4A41↓j
                mov     [rcx], al
                add     eax, r13d
                add     rcx, r13
                cmp     eax, esi
                jb      short loc_140A2391B
                xor     eax, eax
                mov     r10, rsi
                mov     r9b, al
                lea     rdi, [rax-2]
                sub     rdi, r8

loc_140A23936:                          ; CODE XREF: sub_140A1EEE4+4A7D↓j
                mov     dl, [rbx]
                lea     rax, [rdi+rbx]
                and     eax, 7
                mov     cl, byte ptr [rsp+rax+24B8h+var_1D60]
                add     cl, dl
                add     r9b, cl
                movzx   ecx, r9b
                mov     al, [rcx+r8+2]
                mov     [rcx+r8+2], dl
                mov     [rbx], al
                add     rbx, r13
                sub     r10, r13
                jnz     short loc_140A23936
                mov     edi, esi
                lea     rbx, [r8+102h]
                lea     r9d, [r10+20h]

loc_140A23970:                          ; CODE XREF: sub_140A1EEE4+4ABD↓j
                rdtsc
                shl     rdx, 20h
                add     edi, r11d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     [rsp+24B8h+var_1D58], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r9, r13
                jnz     short loc_140A23970
                test    edi, edi
                jz      short loc_140A239D9
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     [rsp+24B8h+var_1D50], rdx
                xor     rdx, rax

loc_140A239CB:                          ; CODE XREF: sub_140A1EEE4+4AF3↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A239CB

loc_140A239D9:                          ; CODE XREF: sub_140A1EEE4+4AC1↑j
                mov     [r14+0A70h], r8
                mov     rdi, 0CCCCCCCCCCCCCCCDh

loc_140A239EA:                          ; CODE XREF: sub_140A1EEE4+482E↑j
                                        ; sub_140A1EEE4+483F↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rcx, rax
                mov     [rsp+24B8h+var_1D48], rdx
                xor     rcx, rdx
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     loc_140A24034
                mov     ecx, [rsp+24B8h+var_234C]
                lea     eax, [rcx-3]
                test    eax, 0FFFFFFFAh
                jnz     short loc_140A23A48
                cmp     ecx, 8
                jnz     loc_140A24034

loc_140A23A48:                          ; CODE XREF: sub_140A1EEE4+4B59↑j
                xor     eax, eax
                mov     esi, eax

loc_140A23A4C:                          ; CODE XREF: sub_140A1EEE4+4DAA↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1D40], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                mov     eax, 5
                cmp     ecx, eax
                ja      loc_140A23B4E
                jz      loc_140A23B34
                test    ecx, ecx
                jz      short loc_140A23B1A
                sub     ecx, r13d
                jz      short loc_140A23B01
                sub     ecx, r13d
                jz      short loc_140A23AE7
                cmp     ecx, r13d
                jz      short loc_140A23ACA
                mov     [rsp+24B8h+var_21EC], 67076494h
                mov     edi, [rsp+24B8h+var_21EC]
                rol     edi, 4
                jmp     loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23ACA:                          ; CODE XREF: sub_140A1EEE4+4BCA↑j
                mov     [rsp+24B8h+var_21E8], 0A8223938h
                mov     edi, [rsp+24B8h+var_21E8]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23AE7:                          ; CODE XREF: sub_140A1EEE4+4BC5↑j
                mov     [rsp+24B8h+var_21E4], 85B5910Dh
                mov     edi, [rsp+24B8h+var_21E4]
                ror     edi, 2
                jmp     loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23B01:                          ; CODE XREF: sub_140A1EEE4+4BC0↑j
                mov     [rsp+24B8h+var_21E0], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_21E0]
                rol     edi, 1
                jmp     loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23B1A:                          ; CODE XREF: sub_140A1EEE4+4BBB↑j
                mov     [rsp+24B8h+var_21DC], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_21DC]
                ror     edi, 6
                jmp     loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23B34:                          ; CODE XREF: sub_140A1EEE4+4BB3↑j
                mov     [rsp+24B8h+var_21D8], 288C49EDh
                mov     edi, [rsp+24B8h+var_21D8]
                ror     edi, 5
                jmp     loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23B4E:                          ; CODE XREF: sub_140A1EEE4+4BAD↑j
                sub     ecx, r12d
                jz      loc_140A23C46
                sub     ecx, r13d
                jz      loc_140A23C2F
                sub     ecx, r13d
                jz      loc_140A23C18
                cmp     ecx, r13d
                jz      loc_140A23BFE
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1D38], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23BFE:                          ; CODE XREF: sub_140A1EEE4+4C88↑j
                mov     [rsp+24B8h+var_21D4], 0B0869E85h
                mov     edi, [rsp+24B8h+var_21D4]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23C18:                          ; CODE XREF: sub_140A1EEE4+4C7F↑j
                mov     [rsp+24B8h+var_21D0], 64664142h
                mov     edi, [rsp+24B8h+var_21D0]
                ror     edi, 8
                jmp     short loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23C2F:                          ; CODE XREF: sub_140A1EEE4+4C76↑j
                mov     [rsp+24B8h+var_21CC], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_21CC]
                rol     edi, 7
                jmp     short loc_140A23C5E
; ---------------------------------------------------------------------------

loc_140A23C46:                          ; CODE XREF: sub_140A1EEE4+4C6D↑j
                mov     [rsp+24B8h+var_21C8], 4E574672h
                mov     edi, [rsp+24B8h+var_21C8]
                xor     edi, r12d
                ror     edi, 18h

loc_140A23C5E:                          ; CODE XREF: sub_140A1EEE4+4BE1↑j
                                        ; sub_140A1EEE4+4BFE↑j ...
                mov     r8d, edi
                mov     edx, 40h ; '@'
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     rcx, rax
                mov     eax, esi
                mov     [rsp+rax*8+24B8h+var_DF8], rcx
                xor     eax, eax
                test    rcx, rcx
                jz      loc_140A237B3
                add     esi, r13d
                cmp     esi, 10h
                jb      loc_140A23A4C
                rdtsc
                shl     rdx, 20h
                mov     ebx, 0Fh
                or      rax, rdx
                mov     r8d, ebx
                mov     rcx, rax
                mov     r12d, ebx
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                lea     rcx, [rsp+24B8h+var_DF8]
                mov     [rsp+24B8h+var_1D30], rdx
                xor     edx, eax
                and     edx, ebx
                lea     rax, [rsp+24B8h+var_DF8]
                sub     r8d, edx
                shl     r8, 3
                lea     rcx, [rcx+rdx*8]
                inc     edx
                mov     r13, [rcx]
                lea     rdx, [rax+rdx*8]
                call    memmove
                mov     eax, 0E0E20100h
                mov     rsi, r13
                xor     rsi, rax
                lea     rax, qword_140C12F08
                shr     rsi, 4
                xor     rsi, r13
                shr     rsi, 4
                xor     rsi, rax
                mov     al, sil
                and     al, bl
                movzx   r15d, al
                lea     eax, [rbx-0Eh]
                cmovz   r15d, eax
                mov     rbx, r13
                test    r15b, r15b
                jz      loc_140A23DC5
                mov     r14, 7010008004002001h

loc_140A23D33:                          ; CODE XREF: sub_140A1EEE4+4ED3↓j
                mov     rdi, rsi
                and     edi, 0Fh
                add     rdi, rbx
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                mov     ecx, r12d
                dec     r12d
                xor     rax, rdx
                mov     [rsp+24B8h+var_1D28], rdx
                xor     edx, edx
                mov     r8d, r12d
                div     rcx
                lea     rcx, [rsp+24B8h+var_DF8]
                mov     eax, edx
                sub     r8d, edx
                inc     edx
                shl     r8, 3
                lea     rcx, [rcx+rax*8]
                mov     rbx, [rcx]
                lea     rax, [rsp+24B8h+var_DF8]
                lea     rdx, [rax+rdx*8]
                call    memmove
                mov     rax, rbx
                mov     [rdi], rbx
                xor     rax, 1DFE00h
                shr     rax, 4
                xor     rax, rbx
                shr     rax, 4
                xor     rsi, rax
                add     r15b, 0FFh
                jnz     loc_140A23D33
                mov     r14, [rsp+24B8h+var_2418]

loc_140A23DC5:                          ; CODE XREF: sub_140A1EEE4+4E3F↑j
                rdtsc
                shl     rdx, 20h
                mov     r15, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1D20], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, 5
                ja      loc_140A23ECD
                jz      loc_140A23EB3
                test    ecx, ecx
                jz      short loc_140A23E99
                sub     ecx, 1
                jz      short loc_140A23E80
                sub     ecx, 1
                jz      short loc_140A23E66
                cmp     ecx, 1
                jz      short loc_140A23E49
                mov     [rsp+24B8h+var_2130], 67076494h
                mov     edi, [rsp+24B8h+var_2130]
                rol     edi, 4
                jmp     loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23E49:                          ; CODE XREF: sub_140A1EEE4+4F49↑j
                mov     [rsp+24B8h+var_21C0], 0A8223938h
                mov     edi, [rsp+24B8h+var_21C0]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23E66:                          ; CODE XREF: sub_140A1EEE4+4F44↑j
                mov     [rsp+24B8h+var_21BC], 85B5910Dh
                mov     edi, [rsp+24B8h+var_21BC]
                ror     edi, 2
                jmp     loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23E80:                          ; CODE XREF: sub_140A1EEE4+4F3F↑j
                mov     [rsp+24B8h+var_21B8], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_21B8]
                rol     edi, 1
                jmp     loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23E99:                          ; CODE XREF: sub_140A1EEE4+4F3A↑j
                mov     [rsp+24B8h+var_21B4], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_21B4]
                ror     edi, 6
                jmp     loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23EB3:                          ; CODE XREF: sub_140A1EEE4+4F32↑j
                mov     [rsp+24B8h+var_21B0], 288C49EDh
                mov     edi, [rsp+24B8h+var_21B0]
                ror     edi, 5
                jmp     loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23ECD:                          ; CODE XREF: sub_140A1EEE4+4F2C↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A23FC9
                sub     ecx, 1
                jz      loc_140A23FB2
                sub     ecx, 1
                jz      loc_140A23F9B
                cmp     ecx, 1
                jz      loc_140A23F81
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1D18], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23F81:                          ; CODE XREF: sub_140A1EEE4+500B↑j
                mov     [rsp+24B8h+var_21AC], 0B0869E85h
                mov     edi, [rsp+24B8h+var_21AC]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23F9B:                          ; CODE XREF: sub_140A1EEE4+5002↑j
                mov     [rsp+24B8h+var_21A8], 64664142h
                mov     edi, [rsp+24B8h+var_21A8]
                ror     edi, 8
                jmp     short loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23FB2:                          ; CODE XREF: sub_140A1EEE4+4FF9↑j
                mov     [rsp+24B8h+var_21A4], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_21A4]
                rol     edi, 7
                jmp     short loc_140A23FE0
; ---------------------------------------------------------------------------

loc_140A23FC9:                          ; CODE XREF: sub_140A1EEE4+4FF0↑j
                mov     [rsp+24B8h+var_21A0], 4E574672h
                mov     edi, [rsp+24B8h+var_21A0]
                xor     edi, edx
                ror     edi, 18h

loc_140A23FE0:                          ; CODE XREF: sub_140A1EEE4+4F60↑j
                                        ; sub_140A1EEE4+4F7D↑j ...
                mov     r8d, edi
                mov     edx, 40h ; '@'
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                xor     edx, edx
                test    rax, rax
                jz      loc_140A237B3
                mov     byte ptr [rax], 13h
                lea     rcx, sub_1403DD790
                mov     byte ptr [rax+1], 1
                mov     rdi, 0CCCCCCCCCCCCCCCDh
                mov     [rax+2], dx
                mov     [rax+18h], rcx
                mov     [rax+20h], r13
                lea     r13d, [rdx+1]
                mov     [rax+38h], rdx
                mov     [rax+10h], rdx
                mov     [r14+0A98h], rax

loc_140A24034:                          ; CODE XREF: sub_140A1EEE4+4B44↑j
                                        ; sub_140A1EEE4+4B5E↑j
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A24041

loc_140A2403F:                          ; CODE XREF: sub_140A1EEE4:loc_140A2403F↓j
                jmp     short loc_140A2403F
; ---------------------------------------------------------------------------

loc_140A24041:                          ; CODE XREF: sub_140A1EEE4+5159↑j
                sti
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1D10], rdx
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 5
                jnb     short loc_140A2408C
                bts     dword ptr [r14+990h], 18h

loc_140A2408C:                          ; CODE XREF: sub_140A1EEE4+519D↑j
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A24099

loc_140A24097:                          ; CODE XREF: sub_140A1EEE4:loc_140A24097↓j
                jmp     short loc_140A24097
; ---------------------------------------------------------------------------

loc_140A24099:                          ; CODE XREF: sub_140A1EEE4+51B1↑j
                sti
                mov     r8d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     rsi, rax
                mov     [rsp+24B8h+var_1D08], rdx
                xor     esi, edx
                and     esi, 7FFh
                rdtsc
                shl     rdx, 20h
                lea     ebx, [rsi+1]
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     ecx, 200h
                xor     rax, rdx
                mov     [rsp+24B8h+var_1D00], rdx
                xor     edx, edx
                div     rbx
                mov     rax, [r14+0F8h]
                mov     r15, rdx
                lea     edx, [rsi+88h]
                call    j__guard_dispatch_icall_nop
                mov     r9, rax
                xor     eax, eax
                test    r9, r9
                jz      loc_140A237AC
                lea     r12d, [rax+8]
                mov     edi, r15d
                mov     rbx, r9
                mov     r11, 7010008004002001h
                cmp     r15d, r12d
                jb      short loc_140A24173
                mov     r8d, r15d
                shr     r8, 3

loc_140A24141:                          ; CODE XREF: sub_140A1EEE4+528D↓j
                rdtsc
                shl     rdx, 20h
                add     edi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1CF8], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     r8, r13
                jnz     short loc_140A24141

loc_140A24173:                          ; CODE XREF: sub_140A1EEE4+5254↑j
                test    edi, edi
                jz      short loc_140A241A9
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1CF0], rdx
                xor     rdx, rax

loc_140A2419B:                          ; CODE XREF: sub_140A1EEE4+52C3↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2419B

loc_140A241A9:                          ; CODE XREF: sub_140A1EEE4+5291↑j
                mov     edi, r15d
                sub     esi, r15d
                add     rdi, r9
                mov     r15d, 0FFFFFFF8h
                mov     [rsp+24B8h+var_23C8], rdi
                lea     rbx, [rdi+88h]
                cmp     esi, r12d
                jb      short loc_140A2420C
                mov     edi, esi
                shr     rdi, 3

loc_140A241D2:                          ; CODE XREF: sub_140A1EEE4+531E↓j
                rdtsc
                shl     rdx, 20h
                add     esi, r15d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1CE8], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     rdi, r13
                jnz     short loc_140A241D2
                mov     rdi, [rsp+24B8h+var_23C8]

loc_140A2420C:                          ; CODE XREF: sub_140A1EEE4+52E6↑j
                xor     eax, eax
                test    esi, esi
                jz      short loc_140A24246
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1CE0], rdx
                xor     rdx, rax

loc_140A24236:                          ; CODE XREF: sub_140A1EEE4+535E↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     esi, 0FFFFFFFFh
                jnz     short loc_140A24236
                xor     eax, eax

loc_140A24246:                          ; CODE XREF: sub_140A1EEE4+532C↑j
                test    rdi, rdi
                jz      loc_140A237B3
                mov     [r14+788h], rdi
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A24261

loc_140A2425F:                          ; CODE XREF: sub_140A1EEE4:loc_140A2425F↓j
                jmp     short loc_140A2425F
; ---------------------------------------------------------------------------

loc_140A24261:                          ; CODE XREF: sub_140A1EEE4+5379↑j
                sti
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1CD8], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     loc_140A24456
                mov     r8d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1CD0], rdx
                xor     edi, edx
                and     edi, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                lea     ecx, [rdi+1]
                xor     rax, rdx
                mov     [rsp+24B8h+var_1CC8], rdx
                xor     edx, edx
                div     rcx
                mov     rax, [r14+0F8h]
                mov     ecx, 200h
                mov     rsi, rdx
                lea     edx, [rdi+48h]
                call    j__guard_dispatch_icall_nop
                mov     r10, rax
                xor     eax, eax
                test    r10, r10
                jz      loc_140A237AC
                mov     r8d, esi
                mov     rbx, r10
                mov     r11, 7010008004002001h
                cmp     esi, r12d
                jb      short loc_140A24380
                mov     r9d, esi
                shr     r9, 3

loc_140A2434E:                          ; CODE XREF: sub_140A1EEE4+549A↓j
                rdtsc
                shl     rdx, 20h
                add     r8d, r15d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1CC0], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     r9, r13
                jnz     short loc_140A2434E

loc_140A24380:                          ; CODE XREF: sub_140A1EEE4+5461↑j
                test    r8d, r8d
                jz      short loc_140A243B8
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1CB8], rdx
                xor     rdx, rax

loc_140A243A9:                          ; CODE XREF: sub_140A1EEE4+54D2↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A243A9

loc_140A243B8:                          ; CODE XREF: sub_140A1EEE4+549F↑j
                mov     r8d, esi
                sub     edi, esi
                add     r8, r10
                mov     [rsp+24B8h+var_1F98], r8
                lea     rbx, [r8+48h]
                cmp     edi, r12d
                jb      short loc_140A24412
                mov     r8d, edi
                shr     r8, 3

loc_140A243D8:                          ; CODE XREF: sub_140A1EEE4+5524↓j
                rdtsc
                shl     rdx, 20h
                add     edi, r15d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1CB0], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     r8, r13
                jnz     short loc_140A243D8
                mov     r8, [rsp+24B8h+var_1F98]

loc_140A24412:                          ; CODE XREF: sub_140A1EEE4+54EB↑j
                xor     eax, eax
                test    edi, edi
                jz      short loc_140A2444C
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1CA8], rdx
                xor     rdx, rax

loc_140A2443C:                          ; CODE XREF: sub_140A1EEE4+5564↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2443C
                xor     eax, eax

loc_140A2444C:                          ; CODE XREF: sub_140A1EEE4+5532↑j
                test    r8, r8
                jnz     short loc_140A24462
                jmp     loc_140A237B3
; ---------------------------------------------------------------------------

loc_140A24456:                          ; CODE XREF: sub_140A1EEE4+53C4↑j
                lea     r8, [rdi+40h]
                mov     [rsp+24B8h+var_1F98], r8

loc_140A24462:                          ; CODE XREF: sub_140A1EEE4+556B↑j
                mov     eax, [rsp+24B8h+var_234C]
                mov     [r14+790h], r8
                cmp     eax, 4
                jnz     loc_140A246BE
                mov     r8d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     rsi, rax
                mov     [rsp+24B8h+var_1CA0], rdx
                xor     esi, edx
                and     esi, 7FFh
                rdtsc
                shl     rdx, 20h
                lea     ebx, [rsi+1]
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     ecx, 200h
                xor     rax, rdx
                mov     [rsp+24B8h+var_1C98], rdx
                xor     edx, edx
                div     rbx
                mov     rax, [r14+0F8h]
                mov     r15, rdx
                lea     edx, [rsi+58h]
                call    j__guard_dispatch_icall_nop
                mov     r9, rax
                xor     eax, eax
                test    r9, r9
                jz      loc_140A237AC
                mov     edi, r15d
                mov     rbx, r9
                mov     r10, 7010008004002001h
                cmp     r15d, r12d
                jb      short loc_140A2454B
                mov     r8d, r15d
                shr     r8, 3

loc_140A24519:                          ; CODE XREF: sub_140A1EEE4+5665↓j
                rdtsc
                shl     rdx, 20h
                add     edi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1C90], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     r8, r13
                jnz     short loc_140A24519

loc_140A2454B:                          ; CODE XREF: sub_140A1EEE4+562C↑j
                test    edi, edi
                jz      short loc_140A24581
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1C88], rdx
                xor     rdx, rax

loc_140A24573:                          ; CODE XREF: sub_140A1EEE4+569B↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A24573

loc_140A24581:                          ; CODE XREF: sub_140A1EEE4+5669↑j
                mov     r8d, r15d
                sub     esi, r15d
                add     r8, r9
                lea     rbx, [r8+58h]
                cmp     esi, r12d
                jb      short loc_140A245CB
                mov     edi, esi
                shr     rdi, 3

loc_140A24599:                          ; CODE XREF: sub_140A1EEE4+56E5↓j
                rdtsc
                shl     rdx, 20h
                add     esi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1C80], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     rdi, r13
                jnz     short loc_140A24599

loc_140A245CB:                          ; CODE XREF: sub_140A1EEE4+56AD↑j
                xor     eax, eax
                mov     rdi, 7010008004002001h
                test    esi, esi
                jz      short loc_140A2460F
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     [rsp+24B8h+var_1C78], rdx
                xor     rdx, rax

loc_140A245FF:                          ; CODE XREF: sub_140A1EEE4+5727↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     esi, 0FFFFFFFFh
                jnz     short loc_140A245FF
                xor     eax, eax

loc_140A2460F:                          ; CODE XREF: sub_140A1EEE4+56F5↑j
                test    r8, r8
                jz      loc_140A237B3
                mov     [r14+9E0h], r8
                or      [r14+990h], r12d
                rdtsc
                shl     rdx, 20h
                mov     r8, r14
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     eax, eax
                mov     [r14+998h], rax
                mov     rcx, gs:20h
                mov     rax, [r14+648h]
                mov     [rsp+24B8h+var_1C70], rdx
                lea     rdx, sub_140A3A080
                mov     rax, [rax+rcx]
                add     rax, [r14+6A8h]
                mov     rcx, [r14+688h]
                mov     rcx, [rax+rcx]
                call    sub_140793088
                cmp     [r14+998h], r13
                jb      loc_140A237B3
                lea     rax, sub_14032AA40
                mov     [r14+9E8h], rax
                lea     rax, __misaligned_access
                mov     [r14+9F0h], rax
                mov     dword ptr [r14+954h], 7E80690Fh
                jmp     loc_140A2490D
; ---------------------------------------------------------------------------

loc_140A246BE:                          ; CODE XREF: sub_140A1EEE4+558F↑j
                cmp     eax, 5
                jnz     loc_140A24903
                mov     r8d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1C68], rdx
                xor     edi, edx
                and     edi, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                lea     ecx, [rdi+1]
                xor     rax, rdx
                mov     [rsp+24B8h+var_1C60], rdx
                xor     edx, edx
                div     rcx
                mov     rax, [r14+0F8h]
                mov     ecx, 200h
                mov     rsi, rdx
                lea     edx, [rdi+50h]
                call    j__guard_dispatch_icall_nop
                mov     r10, rax
                xor     eax, eax
                test    r10, r10
                jnz     short loc_140A24756
                add     [r14+0A18h], r13d
                mov     r9d, eax
                jmp     loc_140A2485E
; ---------------------------------------------------------------------------

loc_140A24756:                          ; CODE XREF: sub_140A1EEE4+5861↑j
                mov     r8d, esi
                mov     rbx, r10
                mov     r11, 7010008004002001h
                cmp     esi, r12d
                jb      short loc_140A247A4
                mov     r9d, esi
                shr     r9, 3

loc_140A24772:                          ; CODE XREF: sub_140A1EEE4+58BE↓j
                rdtsc
                shl     rdx, 20h
                add     r8d, r15d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1C58], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     r9, r13
                jnz     short loc_140A24772

loc_140A247A4:                          ; CODE XREF: sub_140A1EEE4+5885↑j
                test    r8d, r8d
                jz      short loc_140A247DC
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1C50], rdx
                xor     rdx, rax

loc_140A247CD:                          ; CODE XREF: sub_140A1EEE4+58F6↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A247CD

loc_140A247DC:                          ; CODE XREF: sub_140A1EEE4+58C3↑j
                mov     r9d, esi
                sub     edi, esi
                add     r9, r10
                lea     rbx, [r9+50h]
                cmp     edi, r12d
                jb      short loc_140A24826
                mov     r8d, edi
                shr     r8, 3

loc_140A247F4:                          ; CODE XREF: sub_140A1EEE4+5940↓j
                rdtsc
                shl     rdx, 20h
                add     edi, r15d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1C48], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     r8, r13
                jnz     short loc_140A247F4

loc_140A24826:                          ; CODE XREF: sub_140A1EEE4+5907↑j
                test    edi, edi
                jz      short loc_140A2485C
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1C40], rdx
                xor     rdx, rax

loc_140A2484E:                          ; CODE XREF: sub_140A1EEE4+5976↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2484E

loc_140A2485C:                          ; CODE XREF: sub_140A1EEE4+5944↑j
                xor     eax, eax

loc_140A2485E:                          ; CODE XREF: sub_140A1EEE4+586D↑j
                mov     [r14+998h], r9
                test    r9, r9
                jz      loc_140A237B3
                mov     rbx, [rsp+24B8h+arg_18]
                lea     rcx, qword_140C13D60
                mov     [r9], eax
                mov     rdi, [r14+998h]
                mov     rbx, [rbx+18h]
                movups  xmm0, xmmword ptr [rbx]
                movups  xmmword ptr [rdi+8], xmm0
                movups  xmm1, xmmword ptr [rbx+10h]
                movups  xmmword ptr [rdi+18h], xmm1
                movups  xmm0, xmmword ptr [rbx+20h]
                movups  xmmword ptr [rdi+28h], xmm0
                movups  xmm1, xmmword ptr [rbx+30h]
                movups  xmmword ptr [rdi+38h], xmm1
                call    KeAcquireSpinLockRaiseToDpc
                mov     dl, al
                lea     rcx, qword_140C13D60
                lea     rax, sub_1403E9E00
                xchg    rax, [rbx+18h]
                mov     [rbx+20h], rdi
                call    KeReleaseSpinLock
                mov     rax, [r14+998h]
                movups  xmm0, xmmword ptr [rax+8]
                movups  xmmword ptr [r14+9A0h], xmm0
                movups  xmm1, xmmword ptr [rax+18h]
                movups  xmmword ptr [r14+9B0h], xmm1
                movups  xmm0, xmmword ptr [rax+28h]
                movups  xmmword ptr [r14+9C0h], xmm0
                movups  xmm1, xmmword ptr [rax+38h]
                movups  xmmword ptr [r14+9D0h], xmm1

loc_140A24903:                          ; CODE XREF: sub_140A1EEE4+57DD↑j
                mov     rdi, 7010008004002001h

loc_140A2490D:                          ; CODE XREF: sub_140A1EEE4+57D5↑j
                rdtsc
                shl     rdx, 20h
                mov     r15, 0CCCCCCCCCCCCCCCDh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rax
                mov     [rsp+24B8h+var_1C38], rdx
                xor     rcx, rdx
                mov     rax, r15
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     short loc_140A2495F
                or      dword ptr [r14+990h], 2

loc_140A2495F:                          ; CODE XREF: sub_140A1EEE4+5A71↑j
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2496C

loc_140A2496A:                          ; CODE XREF: sub_140A1EEE4:loc_140A2496A↓j
                jmp     short loc_140A2496A
; ---------------------------------------------------------------------------

loc_140A2496C:                          ; CODE XREF: sub_140A1EEE4+5A84↑j
                sti
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1C30], rdx
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 7
                jnb     short loc_140A249C6
                mov     eax, [r14+990h]
                bt      eax, 1Eh
                jb      short loc_140A249C6
                bts     eax, 7
                mov     [r14+990h], eax

loc_140A249C6:                          ; CODE XREF: sub_140A1EEE4+5AC8↑j
                                        ; sub_140A1EEE4+5AD5↑j
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A249D3

loc_140A249D1:                          ; CODE XREF: sub_140A1EEE4:loc_140A249D1↓j
                jmp     short loc_140A249D1
; ---------------------------------------------------------------------------

loc_140A249D3:                          ; CODE XREF: sub_140A1EEE4+5AEB↑j
                sti
                rdtsc
                shl     rdx, 20h
                mov     rsi, 0FFFFFFFFB8797400h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1C28], rdx
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 7
                jnb     loc_140A24CB5
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1C20], rdx
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 7
                jnb     loc_140A24C3B
                mov     r8d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     r15, rax
                mov     [rsp+24B8h+var_1C18], rdx
                xor     r15d, edx
                and     r15d, 7FFh
                rdtsc
                shl     rdx, 20h
                lea     ebx, [r15+1]
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     ecx, 200h
                xor     rax, rdx
                mov     [rsp+24B8h+var_1C10], rdx
                xor     edx, edx
                div     rbx
                mov     rax, [r14+0F8h]
                mov     r12, rdx
                lea     edx, [r15+18h]
                call    j__guard_dispatch_icall_nop
                mov     r9, rax
                xor     eax, eax
                test    r9, r9
                jz      loc_140A237AC
                mov     edi, r12d
                mov     rbx, r9
                mov     r10, 7010008004002001h
                cmp     r12d, 8
                jb      short loc_140A24B3D
                mov     r8d, r12d
                shr     r8, 3

loc_140A24B0A:                          ; CODE XREF: sub_140A1EEE4+5C57↓j
                rdtsc
                shl     rdx, 20h
                add     edi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1C08], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r8, r13
                jnz     short loc_140A24B0A

loc_140A24B3D:                          ; CODE XREF: sub_140A1EEE4+5C1D↑j
                test    edi, edi
                jz      short loc_140A24B73
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1C00], rdx
                xor     rdx, rax

loc_140A24B65:                          ; CODE XREF: sub_140A1EEE4+5C8D↓j
                mov     [rbx], dl
                add     rbx, r13
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A24B65

loc_140A24B73:                          ; CODE XREF: sub_140A1EEE4+5C5B↑j
                mov     r13d, r12d
                sub     r15d, r12d
                add     r13, r9
                mov     r12d, 8
                lea     rbx, [r13+18h]
                cmp     r15d, r12d
                jb      short loc_140A24BC6
                mov     edi, r15d
                shr     rdi, 3

loc_140A24B92:                          ; CODE XREF: sub_140A1EEE4+5CE0↓j
                rdtsc
                shl     rdx, 20h
                add     r15d, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_1BF8], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, r12
                sub     rdi, 1
                jnz     short loc_140A24B92

loc_140A24BC6:                          ; CODE XREF: sub_140A1EEE4+5CA5↑j
                xor     eax, eax
                mov     rdi, 7010008004002001h
                test    r15d, r15d
                jz      short loc_140A24C0C
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     [rsp+24B8h+var_1BF0], rdx
                xor     rdx, rax

loc_140A24BFB:                          ; CODE XREF: sub_140A1EEE4+5D24↓j
                mov     [rbx], dl
                inc     rbx
                shr     rdx, 8
                add     r15d, 0FFFFFFFFh
                jnz     short loc_140A24BFB
                xor     eax, eax

loc_140A24C0C:                          ; CODE XREF: sub_140A1EEE4+5CF1↑j
                test    r13, r13
                jz      loc_140A237B3
                xor     r8d, r8d
                xor     edx, edx
                mov     rcx, r13
                call    KeInitializeEvent
                mov     [r14+9F8h], r13
                mov     r15, 0CCCCCCCCCCCCCCCDh
                mov     r13d, 1
                jmp     short loc_140A24CB5
; ---------------------------------------------------------------------------

loc_140A24C3B:                          ; CODE XREF: sub_140A1EEE4+5B7B↑j
                mov     r8d, r12d
                xor     edx, edx
                xor     ecx, ecx
                call    ExAllocateTimer
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     [r14+9F8h], rbx
                rdtsc
                shl     rdx, 20h
                xor     r9d, r9d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1BE8], rdx
                xor     rcx, rax
                mov     rax, 0ABCC77118461CEFDh
                mul     rcx
                shr     rdx, 1Ah
                imul    rax, rdx, 5F5E100h
                mov     rdx, rsi
                sub     rcx, rax
                sub     rdx, rcx
                mov     rcx, rbx
                mov     r8, rdx
                neg     r8
                call    ExSetTimer

loc_140A24CB5:                          ; CODE XREF: sub_140A1EEE4+5B36↑j
                                        ; sub_140A1EEE4+5D55↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1BE0], rdx
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 2
                jnb     short loc_140A24D0A
                xor     eax, eax
                cmp     [r14+990h], eax
                jl      short loc_140A24D0A
                bts     dword ptr [r14+994h], 9

loc_140A24D0A:                          ; CODE XREF: sub_140A1EEE4+5E10↑j
                                        ; sub_140A1EEE4+5E1B↑j
                mov     r12d, [rsp+24B8h+var_23C0]
                mov     edi, [rsp+24B8h+var_23F0]
                add     r12, r14
                mov     rbx, [rsp+24B8h+var_2450]
                mov     rcx, r12
                mov     r8d, edi
                mov     rdx, rbx
                call    memmove
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A24D3C

loc_140A24D3A:                          ; CODE XREF: sub_140A1EEE4:loc_140A24D3A↓j
                jmp     short loc_140A24D3A
; ---------------------------------------------------------------------------

loc_140A24D3C:                          ; CODE XREF: sub_140A1EEE4+5E54↑j
                sti
                test    edi, edi
                jz      short loc_140A24D54
                lea     rcx, j__guard_dispatch_icall_nop
                mov     eax, 0E0FFh
                sub     ecx, ebx
                mov     [rcx+r12], ax

loc_140A24D54:                          ; CODE XREF: sub_140A1EEE4+5E5B↑j
                lea     rax, sub_140A13340
                sub     eax, ebx
                test    edi, edi
                jz      short loc_140A24D66
                mov     byte ptr [rax+r12], 0C3h

loc_140A24D66:                          ; CODE XREF: sub_140A1EEE4+5E7B↑j
                lea     rbx, cs:140000000h
                mov     rcx, rbx
                mov     [r14+8C8h], rbx
                call    RtlImageNtHeader
                mov     [r14+8D8h], rax
                mov     ecx, [rax+50h]
                add     rcx, rbx
                mov     [r14+8D0h], rcx
                mov     eax, cs:dword_140D585E0
                mov     [r14+8ACh], eax
                mov     eax, cs:dword_140D58618
                mov     [r14+8B0h], eax
                mov     eax, cs:dword_140CFB354
                mov     [r14+8B4h], eax
                mov     r9, cs:qword_140D585E8
                cmp     r9d, 8
                jnz     loc_140A392B2
                mov     rbx, cr8
                lea     eax, [r9+7]
                mov     cr8, rax
                mov     rax, [r14+470h]
                mov     ecx, 0FEh
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rax]
                mov     eax, [r14+8B0h]
                mov     rcx, [rax+rcx]
                mov     [r14+8B8h], rcx
                movzx   eax, bl
                mov     cr8, rax
                mov     eax, 0CF48h
                mov     [r14+878h], ax
                mov     rax, gs:18h
                mov     r15, [rax+38h]
                movups  xmm0, xmmword ptr [r15+10h]
                movdqu  xmmword ptr [r14+848h], xmm0
                movups  xmm1, xmmword ptr [r15+20h]
                movdqu  xmmword ptr [r14+858h], xmm1
                movups  xmm0, xmmword ptr [r15+120h]
                movdqu  xmmword ptr [r14+868h], xmm0
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1BD8], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                mov     eax, 5
                cmp     ecx, eax
                ja      loc_140A24F54
                jz      loc_140A24F3A
                test    ecx, ecx
                jz      short loc_140A24F20
                sub     ecx, 1
                jz      short loc_140A24F07
                sub     ecx, 1
                jz      short loc_140A24EED
                cmp     ecx, 1
                jz      short loc_140A24ED0
                mov     [rsp+24B8h+var_2198], 67076494h
                mov     edi, [rsp+24B8h+var_2198]
                rol     edi, 4
                jmp     loc_140A25067
; ---------------------------------------------------------------------------

loc_140A24ED0:                          ; CODE XREF: sub_140A1EEE4+5FD0↑j
                mov     [rsp+24B8h+var_2194], 0A8223938h
                mov     edi, [rsp+24B8h+var_2194]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A25067
; ---------------------------------------------------------------------------

loc_140A24EED:                          ; CODE XREF: sub_140A1EEE4+5FCB↑j
                mov     [rsp+24B8h+var_2190], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2190]
                ror     edi, 2
                jmp     loc_140A25067
; ---------------------------------------------------------------------------

loc_140A24F07:                          ; CODE XREF: sub_140A1EEE4+5FC6↑j
                mov     [rsp+24B8h+var_218C], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_218C]
                rol     edi, 1
                jmp     loc_140A25067
; ---------------------------------------------------------------------------

loc_140A24F20:                          ; CODE XREF: sub_140A1EEE4+5FC1↑j
                mov     [rsp+24B8h+var_2188], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2188]
                ror     edi, 6
                jmp     loc_140A25067
; ---------------------------------------------------------------------------

loc_140A24F3A:                          ; CODE XREF: sub_140A1EEE4+5FB9↑j
                mov     [rsp+24B8h+var_2184], 288C49EDh
                mov     edi, [rsp+24B8h+var_2184]
                ror     edi, 5
                jmp     loc_140A25067
; ---------------------------------------------------------------------------

loc_140A24F54:                          ; CODE XREF: sub_140A1EEE4+5FB3↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A25050
                sub     ecx, 1
                jz      loc_140A25039
                sub     ecx, 1
                jz      loc_140A25022
                cmp     ecx, 1
                jz      loc_140A25008
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1BD0], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A25067
; ---------------------------------------------------------------------------

loc_140A25008:                          ; CODE XREF: sub_140A1EEE4+6092↑j
                mov     [rsp+24B8h+var_2180], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2180]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A25067
; ---------------------------------------------------------------------------

loc_140A25022:                          ; CODE XREF: sub_140A1EEE4+6089↑j
                mov     [rsp+24B8h+var_217C], 64664142h
                mov     edi, [rsp+24B8h+var_217C]
                ror     edi, 8
                jmp     short loc_140A25067
; ---------------------------------------------------------------------------

loc_140A25039:                          ; CODE XREF: sub_140A1EEE4+6080↑j
                mov     [rsp+24B8h+var_2178], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_2178]
                rol     edi, 7
                jmp     short loc_140A25067
; ---------------------------------------------------------------------------

loc_140A25050:                          ; CODE XREF: sub_140A1EEE4+6077↑j
                mov     [rsp+24B8h+var_2174], 4E574672h
                mov     edi, [rsp+24B8h+var_2174]
                xor     edi, edx
                ror     edi, 18h

loc_140A25067:                          ; CODE XREF: sub_140A1EEE4+5FE7↑j
                                        ; sub_140A1EEE4+6004↑j ...
                mov     rax, [r14+0F8h]
                mov     edx, 1B0h
                mov     r8d, edi
                lea     ecx, [rdx+50h]
                call    j__guard_dispatch_icall_nop
                mov     [r14+8E0h], rax
                test    rax, rax
                jz      loc_140A237B3
                sub     rax, 0FFFFFFFFFFFFFF80h
                and     rax, 0FFFFFFFFFFFFFF80h
                mov     [r14+8E0h], rax
                mov     eax, 50Fh
                mov     byte ptr [r14+87Eh], 48h ; 'H'
                mov     byte ptr [r14+87Fh], 87h
                mov     byte ptr [r14+880h], 0Ch
                mov     byte ptr [r14+881h], 24h ; '$'
                mov     byte ptr [r14+882h], 81h
                mov     byte ptr [r14+883h], 64h ; 'd'
                mov     byte ptr [r14+884h], 24h ; '$'
                mov     byte ptr [r14+885h], 10h
                mov     byte ptr [r14+886h], 0FFh
                mov     byte ptr [r14+887h], 0FEh
                mov     byte ptr [r14+888h], 0FFh
                mov     byte ptr [r14+889h], 0FFh
                mov     byte ptr [r14+88Ah], 48h ; 'H'
                mov     byte ptr [r14+88Bh], 0CFh
                mov     [r14+87Ch], ax
                xor     eax, eax
                mov     byte ptr [r14+87Ah], 0C3h
                mov     r9d, eax
                mov     r8, [r14+7C0h]
                mov     rcx, [r14+668h]
                mov     al, [r14+670h]
                cmp     [r8+rcx], al
                jnz     loc_140A25206
                xor     eax, eax
                xor     ecx, ecx
                cpuid
                mov     edi, eax
                mov     [rsp+24B8h+var_13A8], eax
                mov     rax, [r14+660h]
                mov     [rsp+24B8h+var_13A4], ebx
                mov     [rsp+24B8h+var_13A0], ecx
                mov     [rsp+24B8h+var_139C], edx
                mov     r10b, [r8+rax]
                mov     rax, [r14+658h]
                mov     r11b, [r8+rax]
                cmp     edi, 7
                jb      short loc_140A251B2
                xor     ecx, ecx
                mov     eax, 7
                cpuid
                bt      ebx, 0Bh
                mov     [rsp+24B8h+var_13A8], eax
                mov     [rsp+24B8h+var_13A4], ebx
                cmovb   r9d, r13d
                mov     [rsp+24B8h+var_13A0], ecx
                mov     [rsp+24B8h+var_139C], edx

loc_140A251B2:                          ; CODE XREF: sub_140A1EEE4+629F↑j
                mov     rax, [r14+650h]
                mov     edi, 6
                cmp     [r8+rax], dil
                jnz     short loc_140A251F7
                cmp     r10b, 3Ch ; '<'
                jnz     short loc_140A251D0
                cmp     r11b, 3
                jz      short loc_140A251F2

loc_140A251D0:                          ; CODE XREF: sub_140A1EEE4+62E4↑j
                cmp     r10b, 3Fh ; '?'
                jnz     short loc_140A251DC
                cmp     r11b, 2
                jz      short loc_140A251F2

loc_140A251DC:                          ; CODE XREF: sub_140A1EEE4+62F0↑j
                cmp     r10b, 45h ; 'E'
                jnz     short loc_140A251E7
                cmp     r11b, r13b
                jz      short loc_140A251F2

loc_140A251E7:                          ; CODE XREF: sub_140A1EEE4+62FC↑j
                cmp     r10b, 46h ; 'F'
                jnz     short loc_140A251F7
                cmp     r11b, r13b
                jnz     short loc_140A251F7

loc_140A251F2:                          ; CODE XREF: sub_140A1EEE4+62EA↑j
                                        ; sub_140A1EEE4+62F6↑j ...
                xor     eax, eax
                mov     r9d, eax

loc_140A251F7:                          ; CODE XREF: sub_140A1EEE4+62DE↑j
                                        ; sub_140A1EEE4+6307↑j ...
                test    r9d, r9d
                jz      short loc_140A2520B
                or      byte ptr [r14+87Bh], 4
                jmp     short loc_140A2520B
; ---------------------------------------------------------------------------

loc_140A25206:                          ; CODE XREF: sub_140A1EEE4+625C↑j
                mov     edi, 6

loc_140A2520B:                          ; CODE XREF: sub_140A1EEE4+6316↑j
                                        ; sub_140A1EEE4+6320↑j
                call    sub_1403605D8
                test    eax, eax
                jz      short loc_140A2521C
                or      byte ptr [r14+87Bh], 8

loc_140A2521C:                          ; CODE XREF: sub_140A1EEE4+632E↑j
                mov     byte ptr [r14+88Ch], 48h ; 'H'
                xor     eax, eax
                mov     byte ptr [r14+88Dh], 83h
                mov     ebx, eax
                mov     byte ptr [r14+88Eh], 2Ch ; ','
                mov     r9, 0FFFFF78000000289h
                mov     byte ptr [r14+88Fh], 24h ; '$'
                mov     r10d, 0C0000000h
                mov     byte ptr [r14+890h], 2
                mov     byte ptr [r14+891h], 48h ; 'H'
                mov     byte ptr [r14+892h], 0CFh
                cmp     [r9], al
                mov     eax, cs:NtBuildNumber
                setnz   bl
                and     eax, 0F0000000h
                cmp     eax, r10d
                cmovz   ebx, r13d
                test    dword ptr [r14+990h], 10000000h
                jnz     loc_140A25456
                mov     ecx, [r14+7ECh]
                mov     eax, ecx
                neg     eax
                mov     [rcx+r14+0Bh], eax
                rdtsc
                shl     rdx, 20h
                mov     r11d, 10000h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1BC8], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     short loc_140A25316
                mov     eax, [r14+990h]
                test    eax, eax
                js      short loc_140A25316
                test    r11d, eax
                jnz     short loc_140A25316
                cmp     dword ptr [r14+838h], 7
                jz      short loc_140A25316
                or      [r14+87Bh], r13b

loc_140A25316:                          ; CODE XREF: sub_140A1EEE4+640F↑j
                                        ; sub_140A1EEE4+641A↑j ...
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1BC0], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     short loc_140A25386
                mov     eax, [r14+990h]
                test    eax, eax
                js      short loc_140A25386
                test    r11d, eax
                jnz     short loc_140A25386
                cmp     dword ptr [r14+838h], 7
                jz      short loc_140A25386
                or      byte ptr [r14+87Bh], 2

loc_140A25386:                          ; CODE XREF: sub_140A1EEE4+647E↑j
                                        ; sub_140A1EEE4+6489↑j ...
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     [rsp+24B8h+var_1BB8], rdx
                xor     dl, al
                test    dl, 3
                jnz     short loc_140A253DB
                mov     eax, [r14+990h]
                test    eax, eax
                js      short loc_140A253DB
                test    r11d, eax
                jnz     short loc_140A253DB
                test    ebx, ebx
                jz      short loc_140A253DB
                cmp     dword ptr [r14+838h], 7
                jz      short loc_140A253DB
                or      byte ptr [r14+87Bh], 20h

loc_140A253DB:                          ; CODE XREF: sub_140A1EEE4+64CF↑j
                                        ; sub_140A1EEE4+64DA↑j ...
                rdtsc
                shl     rdx, 20h
                mov     r8, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1BB0], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     short loc_140A25460
                mov     eax, [r14+990h]
                test    eax, eax
                js      short loc_140A25460
                test    r11d, eax
                jnz     short loc_140A25460
                xor     eax, eax
                test    ebx, ebx
                jz      short loc_140A25462
                cmp     dword ptr [r14+838h], 7
                jz      short loc_140A25462
                or      byte ptr [r14+87Bh], 10h
                jmp     short loc_140A25462
; ---------------------------------------------------------------------------

loc_140A25456:                          ; CODE XREF: sub_140A1EEE4+63A7↑j
                mov     r8, 7010008004002001h

loc_140A25460:                          ; CODE XREF: sub_140A1EEE4+6546↑j
                                        ; sub_140A1EEE4+6551↑j ...
                xor     eax, eax

loc_140A25462:                          ; CODE XREF: sub_140A1EEE4+655C↑j
                                        ; sub_140A1EEE4+6566↑j ...
                cmp     cs:dword_140D58088, eax
                mov     r11, 0CCCCCCCCCCCCCCCDh
                jz      loc_140A25534
                test    dword ptr [r14+990h], 10000000h
                jnz     loc_140A25532
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1BA8], rdx
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                xor     eax, eax
                cmp     rcx, 5
                jnb     short loc_140A25534
                bts     dword ptr [r14+994h], 0Ah
                cmp     [r14+990h], eax
                jl      short loc_140A25534
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1BA0], rdx
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A25532
                cmp     dword ptr [r14+838h], 7
                jz      short loc_140A25532
                bts     dword ptr [r14+994h], 0Bh

loc_140A25532:                          ; CODE XREF: sub_140A1EEE4+659F↑j
                                        ; sub_140A1EEE4+6639↑j ...
                xor     eax, eax

loc_140A25534:                          ; CODE XREF: sub_140A1EEE4+658E↑j
                                        ; sub_140A1EEE4+65E6↑j ...
                mov     ecx, eax
                cmp     [r9], al
                jz      short loc_140A25547
                test    byte ptr [r14+87Bh], 4
                cmovnz  ecx, r13d

loc_140A25547:                          ; CODE XREF: sub_140A1EEE4+6655↑j
                mov     eax, cs:NtBuildNumber
                and     eax, 0F0000000h
                cmp     eax, r10d
                cmovz   ecx, r13d
                test    ecx, ecx
                jz      loc_140A259B7
                mov     eax, [r14+990h]
                bt      eax, 1Ch
                jb      loc_140A259B7
                test    eax, eax
                js      loc_140A259B7
                cmp     dword ptr [r14+838h], 7
                jz      loc_140A259B7
                mov     ebx, [r14+994h]
                bt      ebx, 10h
                jb      loc_140A259B7
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1B98], rdx
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     loc_140A259B7
                xor     eax, eax
                cmp     cs:qword_140D58080, rax
                jnz     loc_140A2592A
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1B90], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, 5
                ja      loc_140A256EB
                jz      loc_140A256D1
                test    ecx, ecx
                jz      short loc_140A256B7
                sub     ecx, 1
                jz      short loc_140A2569E
                sub     ecx, 1
                jz      short loc_140A25684
                cmp     ecx, 1
                jz      short loc_140A25667
                mov     [rsp+24B8h+var_2170], 67076494h
                mov     edi, [rsp+24B8h+var_2170]
                rol     edi, 4
                jmp     loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A25667:                          ; CODE XREF: sub_140A1EEE4+6767↑j
                mov     [rsp+24B8h+var_216C], 0A8223938h
                mov     edi, [rsp+24B8h+var_216C]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A25684:                          ; CODE XREF: sub_140A1EEE4+6762↑j
                mov     [rsp+24B8h+var_2168], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2168]
                ror     edi, 2
                jmp     loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A2569E:                          ; CODE XREF: sub_140A1EEE4+675D↑j
                mov     [rsp+24B8h+var_2164], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2164]
                rol     edi, 1
                jmp     loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A256B7:                          ; CODE XREF: sub_140A1EEE4+6758↑j
                mov     [rsp+24B8h+var_2160], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2160]
                ror     edi, 6
                jmp     loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A256D1:                          ; CODE XREF: sub_140A1EEE4+6750↑j
                mov     [rsp+24B8h+var_215C], 288C49EDh
                mov     edi, [rsp+24B8h+var_215C]
                ror     edi, 5
                jmp     loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A256EB:                          ; CODE XREF: sub_140A1EEE4+674A↑j
                sub     ecx, edi
                jz      loc_140A257E2
                sub     ecx, 1
                jz      loc_140A257CB
                sub     ecx, 1
                jz      loc_140A257B4
                cmp     ecx, 1
                jz      loc_140A2579A
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     r8d, 4EC4EC4Fh
                mov     rdi, rax
                mov     [rsp+24B8h+var_1B88], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A2579A:                          ; CODE XREF: sub_140A1EEE4+6824↑j
                mov     [rsp+24B8h+var_2158], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2158]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A257B4:                          ; CODE XREF: sub_140A1EEE4+681B↑j
                mov     [rsp+24B8h+var_2154], 64664142h
                mov     edi, [rsp+24B8h+var_2154]
                ror     edi, 8
                jmp     short loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A257CB:                          ; CODE XREF: sub_140A1EEE4+6812↑j
                mov     [rsp+24B8h+var_2150], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_2150]
                rol     edi, 7
                jmp     short loc_140A257F9
; ---------------------------------------------------------------------------

loc_140A257E2:                          ; CODE XREF: sub_140A1EEE4+6809↑j
                mov     [rsp+24B8h+var_214C], 4E574672h
                mov     eax, [rsp+24B8h+var_214C]
                xor     edi, eax
                ror     edi, 18h

loc_140A257F9:                          ; CODE XREF: sub_140A1EEE4+677E↑j
                                        ; sub_140A1EEE4+679B↑j ...
                mov     rax, [r14+0F8h]
                mov     r8d, edi
                mov     edi, 200h
                mov     ebx, 1480h
                mov     ecx, edi
                mov     edx, ebx
                call    j__guard_dispatch_icall_nop
                xor     edx, edx
                mov     cs:qword_140D58080, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, 290h

loc_140A2582D:                          ; CODE XREF: sub_140A1EEE4+6956↓j
                mov     [rax], rdx
                add     ebx, 0FFFFFFF8h
                add     rax, 8
                sub     rcx, r13
                jnz     short loc_140A2582D
                test    ebx, ebx
                jz      short loc_140A2584A

loc_140A25840:                          ; CODE XREF: sub_140A1EEE4+6964↓j
                mov     [rax], dl
                add     rax, r13
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A25840

loc_140A2584A:                          ; CODE XREF: sub_140A1EEE4+695A↑j
                mov     rcx, cs:qword_140D58080
                call    MmGetPhysicalAddress
                mov     rcx, cs:qword_140D58080
                mov     r9d, 40h ; '@'
                shr     rax, 0Ch
                mov     ebx, edi
                mov     edi, r9d
                mov     r8d, 0FFFFFFF8h
                mov     [rcx+1418h], rax
                mov     rcx, r15
                mov     rdx, cs:qword_140D58080

loc_140A25883:                          ; CODE XREF: sub_140A1EEE4+69B3↓j
                mov     rax, [rcx]
                add     ebx, r8d
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     rdi, r13
                jnz     short loc_140A25883
                test    ebx, ebx
                jz      short loc_140A258AC

loc_140A2589D:                          ; CODE XREF: sub_140A1EEE4+69C6↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [rdx], al
                add     rdx, r13
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A2589D

loc_140A258AC:                          ; CODE XREF: sub_140A1EEE4+69B7↑j
                mov     rcx, cs:qword_140D58080
                mov     edx, 200h
                add     rcx, rdx
                mov     rbx, r9

loc_140A258BE:                          ; CODE XREF: sub_140A1EEE4+69EE↓j
                mov     rax, [r15]
                add     edx, r8d
                mov     [rcx], rax
                add     r15, 8
                add     rcx, 8
                sub     rbx, r13
                jnz     short loc_140A258BE
                test    edx, edx
                jz      short loc_140A258E8

loc_140A258D8:                          ; CODE XREF: sub_140A1EEE4+6A02↓j
                mov     al, [r15]
                add     r15, r13
                mov     [rcx], al
                add     rcx, r13
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A258D8

loc_140A258E8:                          ; CODE XREF: sub_140A1EEE4+69F2↑j
                mov     rax, cs:qword_140D58080
                mov     ecx, 7FFFh
                and     [rax+44h], cx
                mov     rax, cs:qword_140D58080
                mov     rdx, rax
                shr     rdx, 10h
                mov     [rax+40h], ax
                mov     rcx, cs:qword_140D58080
                shr     rax, 20h
                mov     [rcx+46h], dx
                mov     rcx, cs:qword_140D58080
                mov     [rcx+48h], eax
                mov     ebx, [r14+994h]

loc_140A2592A:                          ; CODE XREF: sub_140A1EEE4+6703↑j
                sub     r12d, r14d
                lea     rcx, sub_140A13190
                sub     ecx, dword ptr [rsp+24B8h+var_2450]
                mov     edx, 28h ; '('
                bts     ebx, 0Fh
                mov     [r14+994h], ebx
                mov     rax, cs:qword_140D58080
                mov     [r14+8C0h], rax
                lea     eax, [r12+rcx]
                mov     [r14+8F4h], eax
                mov     byte ptr [r14+893h], 48h ; 'H'
                mov     byte ptr [r14+894h], 83h
                mov     byte ptr [r14+895h], 0ECh
                mov     [r14+896h], dl
                mov     byte ptr [r14+897h], 0FFh
                mov     byte ptr [r14+898h], 11h
                mov     byte ptr [r14+899h], 48h ; 'H'
                mov     byte ptr [r14+89Ah], 83h
                mov     byte ptr [r14+89Bh], 0C4h
                mov     [r14+89Ch], dl
                mov     byte ptr [r14+89Dh], 0C3h

loc_140A259B7:                          ; CODE XREF: sub_140A1EEE4+6677↑j
                                        ; sub_140A1EEE4+6688↑j ...
                mov     eax, [r14+990h]
                test    eax, eax
                jns     short loc_140A259CD
                bts     eax, 1Bh
                mov     [r14+990h], eax

loc_140A259CD:                          ; CODE XREF: sub_140A1EEE4+6ADC↑j
                mov     eax, cs:dword_140CFC404
                cmp     eax, r13d
                jnz     short loc_140A259E0
                or      dword ptr [r14+990h], 40h

loc_140A259E0:                          ; CODE XREF: sub_140A1EEE4+6AF2↑j
                mov     eax, [r14+95Ch]
                mov     ecx, 0BC2A27DBh
                xor     rax, rcx
                mov     rcx, 88000000000h
                sub     rax, rcx
                mov     al, [rax]
                test    al, 2
                jz      short loc_140A25A0E
                mov     eax, 1000h
                add     [r14+7E4h], eax

loc_140A25A0E:                          ; CODE XREF: sub_140A1EEE4+6B1C↑j
                cmp     dword ptr [r14+838h], 7
                mov     [rsp+24B8h+var_1B80], r14
                jz      loc_140A266D1
                lea     rax, ExQueueWorkItem
                xorps   xmm0, xmm0
                mov     [rsp+24B8h+var_C68], rax
                xorps   xmm1, xmm1
                lea     rax, sub_1402C45B0
                movdqa  [rsp+24B8h+var_C38], xmm0
                mov     [rsp+24B8h+var_C60], rax
                lea     rax, sub_140409C40
                mov     [rsp+24B8h+var_C58], rax
                lea     rax, sub_140411740
                mov     [rsp+24B8h+var_C50], rax
                lea     rax, sub_140339370
                mov     [rsp+24B8h+var_C48], rax
                xor     eax, eax
                mov     [rsp+24B8h+var_C40], rax
                lea     rax, sub_1402AAF70
                mov     [rsp+24B8h+var_BC8], rax
                lea     rax, sub_1403FD860
                mov     [rsp+24B8h+var_BC0], rax
                lea     rax, sub_1403DD870
                mov     [rsp+24B8h+var_BA8], rax
                lea     rax, KeAcquireSpinLockRaiseToDpc
                mov     [rsp+24B8h+var_BA0], rax
                lea     rax, KeReleaseSpinLock
                mov     [rsp+24B8h+var_B98], rax
                lea     rax, KeProcessorGroupAffinity
                mov     [rsp+24B8h+var_B90], rax
                lea     rax, KeSetSystemGroupAffinityThread
                mov     [rsp+24B8h+var_B88], rax
                lea     rax, KeRevertToUserGroupAffinityThread
                mov     [rsp+24B8h+var_B80], rax
                lea     rax, sub_140245840
                mov     [rsp+24B8h+var_B78], rax
                lea     rax, sub_1405BF450
                mov     [rsp+24B8h+var_B70], rax
                lea     rax, sub_1403DC800
                mov     [rsp+24B8h+var_B68], rax
                lea     rax, memmove
                mov     [rsp+24B8h+var_B60], rax
                lea     rax, qword_1403E9EF0
                mov     [rsp+24B8h+var_B58], rax
                lea     rax, sub_140240710
                mov     [rsp+24B8h+var_B50], rax
                lea     rax, KeDelayExecutionThread
                mov     [rsp+24B8h+var_B48], rax
                lea     rax, KeWaitForSingleObject
                mov     [rsp+24B8h+var_B40], rax
                lea     rax, sub_1402C4900
                mov     [rsp+24B8h+var_B38], rax
                lea     rax, sub_14032F6F0
                mov     [rsp+24B8h+var_B30], rax
                lea     rax, sub_1402D1580
                mov     [rsp+24B8h+var_B28], rax
                lea     rax, sub_1405A8660
                mov     [rsp+24B8h+var_B20], rax
                lea     rax, sub_1403DB960
                mov     [rsp+24B8h+var_B18], rax
                lea     rax, sub_1403E9D90
                mov     [rsp+24B8h+var_B10], rax
                lea     rax, KeIpiGenericCall
                mov     [rsp+24B8h+var_B08], rax
                mov     rax, cs:__guard_dispatch_icall_fptr
                mov     [rsp+24B8h+var_B00], rax
                lea     rax, nullsub_8
                mov     [rsp+24B8h+var_AF8], rax
                lea     rax, nullsub_9
                mov     [rsp+24B8h+var_AF0], rax
                lea     rax, sub_1405AA480
                mov     [rsp+24B8h+var_AE8], rax
                lea     rax, sub_1405AA430
                mov     [rsp+24B8h+var_AE0], rax
                xor     eax, eax
                mov     r15d, eax
                mov     dword ptr [rsp+24B8h+var_23D8], eax
                movdqa  [rsp+24B8h+var_C28], xmm1
                movdqa  [rsp+24B8h+var_C18], xmm0
                movdqa  [rsp+24B8h+var_C08], xmm1
                movdqa  [rsp+24B8h+var_BF8], xmm0
                movdqa  [rsp+24B8h+var_BE8], xmm1
                movdqa  [rsp+24B8h+var_BD8], xmm0
                movdqa  [rsp+24B8h+var_BB8], xmm0
                mov     r12d, eax
                mov     dword ptr [rsp+24B8h+var_23D0], eax

loc_140A25C81:                          ; CODE XREF: sub_140A1EEE4+762F↓j
                mov     ebx, r12d
                mov     r13, [rsp+rbx*8+24B8h+var_C68]
                mov     [rsp+24B8h+var_2418], r13
                test    r13, r13
                jz      loc_140A264FE
                lea     rdx, [rsp+24B8h+var_1B78]
                mov     rcx, r13
                call    RtlPcToFileHeader
                mov     rcx, [rsp+24B8h+var_1B78]
                call    RtlImageNtHeader
                mov     rdx, [rsp+24B8h+var_1B78]
                mov     r8d, r13d
                mov     rcx, rax
                sub     r8d, edx
                mov     rax, [r14+210h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, rax
                xor     eax, eax
                test    rcx, rcx
                jz      short loc_140A25D21
                cmp     dword ptr [rcx], 54494E49h
                jnz     short loc_140A25D05
                cmp     dword ptr [rcx+4], 4742444Bh
                jnz     short loc_140A25D05
                test    dword ptr [r14+994h], 2000h
                jz      loc_140A392E3
                jmp     short loc_140A25D21
; ---------------------------------------------------------------------------

loc_140A25D05:                          ; CODE XREF: sub_140A1EEE4+6E03↑j
                                        ; sub_140A1EEE4+6E0C↑j
                test    dword ptr [rcx+24h], 2000000h
                jnz     loc_140A392E3
                call    sub_1406F4BAC
                test    eax, eax
                jnz     loc_140A392E3
                xor     eax, eax

loc_140A25D21:                          ; CODE XREF: sub_140A1EEE4+6DFB↑j
                                        ; sub_140A1EEE4+6E1F↑j
                lea     r8, [rsp+24B8h+var_2148]
                mov     [rsp+24B8h+var_2400], eax
                lea     rdx, [rsp+24B8h+var_E80]
                mov     rcx, r13
                call    sub_1403C5CDC
                mov     rbx, rax
                mov     [rsp+24B8h+var_E90], rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A25E9B
                mov     [rsp+24B8h+var_E68], rax
                mov     rax, [rsp+24B8h+var_E80]
                cmp     [rsp+24B8h+var_1248], rax
                jnz     loc_140A25E36
                mov     r15, [rsp+24B8h+var_1240]
                lea     rdx, [rsp+24B8h+var_E80]
                xor     eax, eax
                mov     [rsp+24B8h+var_E68], r15
                mov     [rsp+24B8h+var_E60], rax
                xor     r8d, r8d
                mov     eax, [rsp+24B8h+var_1238]
                mov     rcx, r13
                mov     [rsp+24B8h+var_E58], eax
                xor     eax, eax
                mov     [rsp+24B8h+var_E54], eax
                call    RtlLookupFunctionEntry
                mov     r8, rax
                mov     [rsp+24B8h+var_E88], rax
                xor     eax, eax
                test    r8, r8
                jz      short loc_140A25E24
                mov     edx, [r15]
                mov     edi, r8d
                sub     edi, dword ptr [rsp+24B8h+var_E80]
                mov     ebx, eax
                sub     edx, 1
                js      short loc_140A25E24
                xor     r10d, r10d

loc_140A25DE1:                          ; CODE XREF: sub_140A1EEE4+6F28↓j
                lea     ecx, [rdx+rbx]
                mov     eax, edi
                sar     ecx, 1
                mov     r9d, ecx
                inc     r9
                lea     r9, [r15+r9*8]
                sub     eax, [r9]
                jns     short loc_140A25E03
                test    ecx, ecx
                jz      short loc_140A25E24
                lea     edx, [rcx-1]
                xor     r10d, r10d
                jmp     short loc_140A25E0A
; ---------------------------------------------------------------------------

loc_140A25E03:                          ; CODE XREF: sub_140A1EEE4+6F11↑j
                test    eax, eax
                jle     short loc_140A25E0E
                lea     ebx, [rcx+1]

loc_140A25E0A:                          ; CODE XREF: sub_140A1EEE4+6F1D↑j
                cmp     edx, ebx
                jge     short loc_140A25DE1

loc_140A25E0E:                          ; CODE XREF: sub_140A1EEE4+6F21↑j
                mov     rax, [rsp+24B8h+var_E60]
                cmp     edx, ebx
                cmovge  rax, r9
                mov     [rsp+24B8h+var_E60], rax

loc_140A25E24:                          ; CODE XREF: sub_140A1EEE4+6EE4↑j
                                        ; sub_140A1EEE4+6EF8↑j ...
                mov     rbx, [rsp+24B8h+var_E90]
                mov     r15d, dword ptr [rsp+24B8h+var_23D8]
                jmp     short loc_140A25E3E
; ---------------------------------------------------------------------------

loc_140A25E36:                          ; CODE XREF: sub_140A1EEE4+6E8A↑j
                mov     r8, [rsp+24B8h+var_E88]

loc_140A25E3E:                          ; CODE XREF: sub_140A1EEE4+6F50↑j
                mov     ecx, [rsp+24B8h+var_2148]
                lea     rdi, [rsp+24B8h+var_1B70]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mov     [rsp+24B8h+var_E98], r13
                mul     rcx
                mov     [rsp+24B8h+var_E70], rdi
                shr     rdx, 3
                mov     eax, edx
                mov     [rsp+24B8h+var_2148], edx
                lea     rcx, [rax+rax*2]
                lea     rax, [rbx+rcx*4]
                mov     [rsp+24B8h+var_E78], rax
                mov     rax, [rsp+24B8h+var_E80]
                mov     [rsp+24B8h+var_1B78], rax
                xor     eax, eax
                jmp     short loc_140A25EAB
; ---------------------------------------------------------------------------

loc_140A25E9B:                          ; CODE XREF: sub_140A1EEE4+6E6C↑j
                mov     rdi, [rsp+24B8h+var_E70]
                mov     r8, [rsp+24B8h+var_E88]

loc_140A25EAB:                          ; CODE XREF: sub_140A1EEE4+6FB5↑j
                mov     r13d, 1

loc_140A25EB1:                          ; CODE XREF: sub_140A1EEE4+74D7↓j
                test    rbx, rbx
                jz      loc_140A25FF0
                cmp     rbx, [rsp+24B8h+var_E78]
                jz      loc_140A25FF0
                cmp     [rsp+24B8h+var_E68], rax
                jz      loc_140A25F99
                test    r8, r8
                jz      loc_140A25FF0
                cmp     [rsp+24B8h+var_E60], rax
                jnz     short loc_140A25EF9
                mov     [rdi], r8
                mov     [rsp+24B8h+var_E88], rax
                jmp     loc_140A260E5
; ---------------------------------------------------------------------------

loc_140A25EF9:                          ; CODE XREF: sub_140A1EEE4+7003↑j
                mov     rax, [rsp+24B8h+var_E60]
                mov     ecx, [rax+4]
                test    r13b, cl
                jz      short loc_140A25F28
                and     ecx, 0FFFFFFFEh
                mov     eax, ecx
                add     rax, [rsp+24B8h+var_E80]
                mov     [rdi], rax
                xor     eax, eax
                mov     [rsp+24B8h+var_E60], rax
                jmp     loc_140A260E5
; ---------------------------------------------------------------------------

loc_140A25F28:                          ; CODE XREF: sub_140A1EEE4+7023↑j
                mov     r8d, [rsp+24B8h+var_E54]
                add     ecx, r8d
                mov     edx, ecx
                add     rcx, 4
                cmp     rcx, rdx
                jb      loc_140A3931C
                mov     eax, [rsp+24B8h+var_E58]
                cmp     rcx, rax
                ja      loc_140A3931C
                mov     rax, [rsp+24B8h+var_E68]
                add     r8d, 4
                mov     ebx, [rdx+rax]
                mov     edx, ebx
                and     edx, r13d
                mov     [rsp+24B8h+var_E54], r8d
                mov     eax, edx
                neg     eax
                mov     eax, ebx
                sbb     rcx, rcx
                and     eax, 0FFFFFFFEh
                and     [rsp+24B8h+var_E60], rcx
                test    edx, edx
                cmovnz  ebx, eax
                mov     eax, ebx
                add     rax, [rsp+24B8h+var_E80]
                mov     [rdi], rax
                jmp     loc_140A260E3
; ---------------------------------------------------------------------------

loc_140A25F99:                          ; CODE XREF: sub_140A1EEE4+6FEC↑j
                                        ; sub_140A1EEE4+710A↓j
                mov     rdx, [rsp+24B8h+var_E80]
                mov     rcx, rbx
                mov     rdi, rbx
                call    sub_1402AE7D0
                mov     r8, [rsp+24B8h+var_E98]
                mov     rcx, rax
                mov     rdx, [rsp+24B8h+var_E80]
                call    sub_1405868D0
                mov     rbx, [rsp+24B8h+var_E90]
                mov     rcx, rax
                add     rbx, 0Ch
                xor     eax, eax
                mov     [rsp+24B8h+var_E90], rbx
                test    rcx, rcx
                jnz     loc_140A260D8
                cmp     rbx, [rsp+24B8h+var_E78]
                jnz     short loc_140A25F99

loc_140A25FF0:                          ; CODE XREF: sub_140A1EEE4+6FD0↑j
                                        ; sub_140A1EEE4+6FDE↑j ...
                cmp     [rsp+24B8h+var_2400], eax
                jnz     loc_140A264F4
                mov     r15d, [r14+7E4h]
                mov     r8d, [r14+924h]
                lea     eax, [r15+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A263E8
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [r14+990h]
                lea     r12d, [rax+4]
                test    r12b, cl
                jnz     loc_140A263DF
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A26084
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A26075:                          ; CODE XREF: sub_140A1EEE4+719E↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, r13
                jnz     short loc_140A26075

loc_140A26084:                          ; CODE XREF: sub_140A1EEE4+7186↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A26095

loc_140A2608A:                          ; CODE XREF: sub_140A1EEE4+71AF↓j
                mov     [r14], cl
                add     r14, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2608A

loc_140A26095:                          ; CODE XREF: sub_140A1EEE4+71A4↑j
                mov     r14d, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      loc_140A263C9
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      loc_140A263C0
                mov     rax, [rbx+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     loc_140A263D8
; ---------------------------------------------------------------------------

loc_140A260D8:                          ; CODE XREF: sub_140A1EEE4+70FC↑j
                mov     rax, [rsp+24B8h+var_E70]
                mov     [rax], rdi

loc_140A260E3:                          ; CODE XREF: sub_140A1EEE4+70B0↑j
                xor     eax, eax

loc_140A260E5:                          ; CODE XREF: sub_140A1EEE4+7010↑j
                                        ; sub_140A1EEE4+703F↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jz      loc_140A265F6
                sti
                mov     rax, [rsp+24B8h+var_1B70]
                mov     r8d, [r14+924h]
                mov     [rsp+24B8h+var_2400], r13d
                mov     r13d, [r14+7E4h]
                mov     ecx, [rax]
                mov     r12d, [rax+4]
                mov     r15d, ecx
                add     r15, [rsp+24B8h+var_1B78]
                sub     r12d, ecx
                lea     eax, [r13+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A2620C
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A26203
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rbx, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A2619B
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2618B:                          ; CODE XREF: sub_140A1EEE4+72B5↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, 1
                jnz     short loc_140A2618B

loc_140A2619B:                          ; CODE XREF: sub_140A1EEE4+729C↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A261AC

loc_140A261A1:                          ; CODE XREF: sub_140A1EEE4+72C6↓j
                mov     [r14], cl
                inc     r14
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A261A1

loc_140A261AC:                          ; CODE XREF: sub_140A1EEE4+72BB↑j
                mov     r14d, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A261ED
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A261E4
                mov     rax, [rdi+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A261FC
; ---------------------------------------------------------------------------

loc_140A261E4:                          ; CODE XREF: sub_140A1EEE4+72E9↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A261F4
; ---------------------------------------------------------------------------

loc_140A261ED:                          ; CODE XREF: sub_140A1EEE4+72D8↑j
                mov     rax, [rdi+368h]

loc_140A261F4:                          ; CODE XREF: sub_140A1EEE4+7307↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A261FC:                          ; CODE XREF: sub_140A1EEE4+72FE↑j
                mov     [rdi+924h], r14d

loc_140A26203:                          ; CODE XREF: sub_140A1EEE4+7274↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A26216
; ---------------------------------------------------------------------------

loc_140A2620C:                          ; CODE XREF: sub_140A1EEE4+724C↑j
                mov     rdi, r14
                mov     [r14+7E4h], eax

loc_140A26216:                          ; CODE XREF: sub_140A1EEE4+7326↑j
                inc     dword ptr [rdi+80Ch]
                lea     r14, [rdi+r13]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_23E0], r14
                mov     [rsp+24B8h+var_1B68], r14
                mov     rax, r14
                xor     ebx, ebx
                lea     edx, [rcx-2Ah]
                lea     r13d, [rcx-2Fh]

loc_140A26241:                          ; CODE XREF: sub_140A1EEE4+736A↓j
                mov     [rax], rbx
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A26241
                test    ecx, ecx
                jz      short loc_140A2625E

loc_140A26254:                          ; CODE XREF: sub_140A1EEE4+7378↓j
                mov     [rax], bl
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A26254

loc_140A2625E:                          ; CODE XREF: sub_140A1EEE4+736E↑j
                xor     eax, eax
                mov     ecx, r12d
                mov     [r14], eax
                add     rcx, r15
                mov     [r14+8], r15
                mov     r8, r15
                mov     [r14+10h], r12d
                mov     rax, r15
                add     [rdi+828h], r12d
                mov     r9d, [rdi+814h]
                mov     r11, [rdi+818h]
                cmp     r15, rcx
                jnb     short loc_140A2629D

loc_140A26291:                          ; CODE XREF: sub_140A1EEE4+73B7↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A26291

loc_140A2629D:                          ; CODE XREF: sub_140A1EEE4+73AB↑j
                mov     r10d, r12d
                mov     rbx, r11
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A26311
                mov     r14, 7010008004002001h

loc_140A262B6:                          ; CODE XREF: sub_140A1EEE4+7423↓j
                mov     eax, 8

loc_140A262BB:                          ; CODE XREF: sub_140A1EEE4+73EE↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, r13
                jnz     short loc_140A262BB
                mov     rcx, r8
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1B60], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A262B6
                mov     r14, [rsp+24B8h+var_23E0]

loc_140A26311:                          ; CODE XREF: sub_140A1EEE4+73C6↑j
                mov     edx, r12d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A26337
                mov     eax, edx
                shr     rax, 3

loc_140A26322:                          ; CODE XREF: sub_140A1EEE4+7451↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r13
                jnz     short loc_140A26322

loc_140A26337:                          ; CODE XREF: sub_140A1EEE4+7436↑j
                test    edx, edx
                jz      short loc_140A26350

loc_140A2633B:                          ; CODE XREF: sub_140A1EEE4+746A↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2633B

loc_140A26350:                          ; CODE XREF: sub_140A1EEE4+7455↑j
                mov     rax, rbx
                jmp     short loc_140A26357
; ---------------------------------------------------------------------------

loc_140A26355:                          ; CODE XREF: sub_140A1EEE4+747A↓j
                xor     ebx, eax

loc_140A26357:                          ; CODE XREF: sub_140A1EEE4+746F↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A26355
                mov     r15d, dword ptr [rsp+24B8h+var_23D8]
                btr     ebx, 1Fh
                mov     [r14+14h], ebx
                add     r15d, r13d
                mov     rax, [rsp+24B8h+var_1B68]
                mov     r14, rdi
                mov     [rsp+24B8h+var_1B58], rax
                add     [rdi+828h], r12d
                mov     rax, [rsp+24B8h+var_1B58]
                mov     dword ptr [rsp+24B8h+var_23D8], r15d
                mov     [rax+18h], r13d
                xor     eax, eax
                mov     rdi, [rsp+24B8h+var_E70]
                mov     r8, [rsp+24B8h+var_E88]
                mov     rbx, [rsp+24B8h+var_E90]
                jmp     loc_140A25EB1
; ---------------------------------------------------------------------------

loc_140A263C0:                          ; CODE XREF: sub_140A1EEE4+71D6↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A263D0
; ---------------------------------------------------------------------------

loc_140A263C9:                          ; CODE XREF: sub_140A1EEE4+71C1↑j
                mov     rax, [rbx+368h]

loc_140A263D0:                          ; CODE XREF: sub_140A1EEE4+74E3↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A263D8:                          ; CODE XREF: sub_140A1EEE4+71EF↑j
                mov     [rbx+924h], r14d

loc_140A263DF:                          ; CODE XREF: sub_140A1EEE4+715E↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A263F8
; ---------------------------------------------------------------------------

loc_140A263E8:                          ; CODE XREF: sub_140A1EEE4+7132↑j
                mov     rbx, r14
                mov     [r14+7E4h], eax
                mov     r12d, 4

loc_140A263F8:                          ; CODE XREF: sub_140A1EEE4+7502↑j
                add     [rbx+80Ch], r13d
                lea     rdi, [rbx+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1B50], rdi
                mov     rax, rdi
                xor     r8d, r8d
                lea     edx, [rcx-2Ah]

loc_140A26419:                          ; CODE XREF: sub_140A1EEE4+7542↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A26419
                test    ecx, ecx
                jz      short loc_140A26437

loc_140A2642C:                          ; CODE XREF: sub_140A1EEE4+7551↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2642C

loc_140A26437:                          ; CODE XREF: sub_140A1EEE4+7546↑j
                mov     r13, [rsp+24B8h+var_2418]
                xor     eax, eax
                mov     [rdi], eax
                mov     rax, r13
                mov     [rdi+8], r13
                mov     [rdi+10h], r12d
                add     [rbx+828h], r12d
                lea     rcx, [r13+4]
                mov     r9d, [rbx+814h]
                mov     rdx, [rbx+818h]
                cmp     r13, rcx
                jnb     short loc_140A26478

loc_140A2646C:                          ; CODE XREF: sub_140A1EEE4+7592↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2646C

loc_140A26478:                          ; CODE XREF: sub_140A1EEE4+7586↑j
                mov     r8d, r12d

loc_140A2647B:                          ; CODE XREF: sub_140A1EEE4+75AC↓j
                movzx   eax, byte ptr [r13+0]
                mov     ecx, r9d
                xor     rdx, rax
                inc     r13
                rol     rdx, cl
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A2647B
                mov     rax, rdx
                jmp     short loc_140A26499
; ---------------------------------------------------------------------------

loc_140A26497:                          ; CODE XREF: sub_140A1EEE4+75BC↓j
                xor     edx, eax

loc_140A26499:                          ; CODE XREF: sub_140A1EEE4+75B1↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A26497
                mov     r15d, dword ptr [rsp+24B8h+var_23D8]
                btr     edx, 1Fh
                mov     [rdi+14h], edx
                mov     r13d, 1
                mov     rax, [rsp+24B8h+var_1B50]
                add     r15d, r13d
                mov     [rsp+24B8h+var_1B48], rax
                mov     r14, rbx
                add     [rbx+828h], r12d
                mov     rax, [rsp+24B8h+var_1B48]
                mov     r12d, dword ptr [rsp+24B8h+var_23D0]
                mov     dword ptr [rsp+24B8h+var_23D8], r15d
                mov     [rax+18h], r13d
                xor     eax, eax
                jmp     short loc_140A26504
; ---------------------------------------------------------------------------

loc_140A264F4:                          ; CODE XREF: sub_140A1EEE4+7113↑j
                mov     r12d, dword ptr [rsp+24B8h+var_23D0]
                xor     eax, eax

loc_140A264FE:                          ; CODE XREF: sub_140A1EEE4+6DB3↑j
                mov     r13d, 1

loc_140A26504:                          ; CODE XREF: sub_140A1EEE4+760E↑j
                add     r12d, r13d
                mov     dword ptr [rsp+24B8h+var_23D0], r12d
                cmp     r12d, 32h ; '2'
                jb      loc_140A25C81
                test    dword ptr [r14+990h], 40000000h
                jnz     loc_140A266BC
                mov     r15d, [r14+7E4h]
                mov     r8d, [r14+924h]
                lea     eax, [r15+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A26620
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A26617
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A265AD
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2659E:                          ; CODE XREF: sub_140A1EEE4+76C7↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, r13
                jnz     short loc_140A2659E

loc_140A265AD:                          ; CODE XREF: sub_140A1EEE4+76AF↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A265BE

loc_140A265B3:                          ; CODE XREF: sub_140A1EEE4+76D8↓j
                mov     [r14], cl
                add     r14, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A265B3

loc_140A265BE:                          ; CODE XREF: sub_140A1EEE4+76CD↑j
                mov     r14d, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A26601
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A265F8
                mov     rax, [rbx+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A26610
; ---------------------------------------------------------------------------

loc_140A265F6:                          ; CODE XREF: sub_140A1EEE4+7208↑j
                                        ; sub_140A1EEE4:loc_140A265F6↓j
                jmp     short loc_140A265F6
; ---------------------------------------------------------------------------

loc_140A265F8:                          ; CODE XREF: sub_140A1EEE4+76FB↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A26608
; ---------------------------------------------------------------------------

loc_140A26601:                          ; CODE XREF: sub_140A1EEE4+76EA↑j
                mov     rax, [rbx+368h]

loc_140A26608:                          ; CODE XREF: sub_140A1EEE4+771B↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A26610:                          ; CODE XREF: sub_140A1EEE4+7710↑j
                mov     [rbx+924h], r14d

loc_140A26617:                          ; CODE XREF: sub_140A1EEE4+7687↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A2662A
; ---------------------------------------------------------------------------

loc_140A26620:                          ; CODE XREF: sub_140A1EEE4+765F↑j
                mov     rbx, r14
                mov     [r14+7E4h], eax

loc_140A2662A:                          ; CODE XREF: sub_140A1EEE4+773A↑j
                add     [rbx+80Ch], r13d
                lea     rdx, [rbx+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1B40], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     edi, [rcx-2Ah]

loc_140A2664B:                          ; CODE XREF: sub_140A1EEE4+7774↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdi, r13
                jnz     short loc_140A2664B
                test    ecx, ecx
                jz      short loc_140A26669

loc_140A2665E:                          ; CODE XREF: sub_140A1EEE4+7783↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2665E

loc_140A26669:                          ; CODE XREF: sub_140A1EEE4+7778↑j
                xor     eax, eax
                mov     [rdx], eax
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A26682
; ---------------------------------------------------------------------------

loc_140A26680:                          ; CODE XREF: sub_140A1EEE4+77A5↓j
                xor     ecx, eax

loc_140A26682:                          ; CODE XREF: sub_140A1EEE4+779A↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A26680
                mov     r15d, dword ptr [rsp+24B8h+var_23D8]
                btr     ecx, 1Fh
                mov     [rdx+14h], ecx
                mov     r14, rbx
                mov     rax, [rsp+24B8h+var_1B40]
                mov     [rsp+24B8h+var_1B38], rax
                sub     eax, ebx
                mov     [rbx+0A28h], eax
                add     dword ptr [rbx+0A2Ch], 30h ; '0'

loc_140A266BC:                          ; CODE XREF: sub_140A1EEE4+7640↑j
                lea     eax, [r15+r15*2]
                mov     [r14+7E0h], r15d
                shl     eax, 4
                add     [r14+0A2Ch], eax

loc_140A266D1:                          ; CODE XREF: sub_140A1EEE4+6B3A↑j
                xor     eax, eax
                mov     [rsp+24B8h+var_1B80], r14
                test    r14, r14
                jz      loc_140A237B3
                mov     eax, [r14+7E4h]
                mov     ebx, [r14+990h]
                mov     dword ptr [rsp+24B8h+var_23D8], eax
                xor     eax, eax
                mov     dword ptr [rsp+24B8h+var_23D0], eax
                mov     edi, eax
                bt      ebx, 1Eh
                jb      loc_140A26818
                cmp     dword ptr [rsp+24B8h+var_23F8], eax
                jnz     loc_140A26818
                rdtsc
                shl     rdx, 20h
                mov     r8, 7010008004002001h
                or      rax, rdx
                mov     r9, 0CCCCCCCCCCCCCCCDh
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1B30], rdx
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, r13
                jnb     loc_140A26816
                mov     edi, r13d
                mov     dword ptr [rsp+24B8h+var_23D0], r13d
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1B28], rdx
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A26816
                bts     ebx, 10h
                mov     [r14+990h], ebx
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r8
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1B20], rdx
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 3
                jnb     short loc_140A26816
                bts     ebx, 14h
                mov     [r14+990h], ebx

loc_140A26816:                          ; CODE XREF: sub_140A1EEE4+7889↑j
                                        ; sub_140A1EEE4+78D9↑j ...
                xor     eax, eax

loc_140A26818:                          ; CODE XREF: sub_140A1EEE4+7824↑j
                                        ; sub_140A1EEE4+7831↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A26823

loc_140A26821:                          ; CODE XREF: sub_140A1EEE4:loc_140A26821↓j
                jmp     short loc_140A26821
; ---------------------------------------------------------------------------

loc_140A26823:                          ; CODE XREF: sub_140A1EEE4+793B↑j
                sti
                mov     dword ptr [rsp+24B8h+var_23F8], eax
                mov     ebx, 80000000h

loc_140A26830:                          ; CODE XREF: sub_140A1EEE4+BA87↓j
                mov     eax, eax
                lea     rcx, [rax+rax*2]
                lea     rax, cs:140000000h
                lea     r15, rva qword_140A99950[rax]
                lea     r15, [r15+rcx*8]
                mov     eax, [r15+10h]
                and     eax, 0E0000000h
                cmp     eax, ebx
                jz      short loc_140A2685F
                xor     eax, eax
                test    edi, edi
                jnz     loc_140A2A974

loc_140A2685F:                          ; CODE XREF: sub_140A1EEE4+796F↑j
                mov     rax, [r15+8]
                mov     [rsp+24B8h+var_1B18], rax
                test    rax, rax
                jnz     short loc_140A2688F
                lea     rax, cs:140000000h
                mov     r12, rax
                mov     [rsp+24B8h+var_2418], rax
                mov     [rsp+24B8h+var_1B18], rax
                jmp     loc_140A26AE9
; ---------------------------------------------------------------------------

loc_140A2688F:                          ; CODE XREF: sub_140A1EEE4+798A↑j
                cmp     rax, r13
                jnz     short loc_140A268A8
                mov     r12, cs:qword_140CFC500
                mov     [rsp+24B8h+var_2418], r12
                jmp     loc_140A26AD8
; ---------------------------------------------------------------------------

loc_140A268A8:                          ; CODE XREF: sub_140A1EEE4+79AE↑j
                cmp     rax, 2
                jnz     loc_140A26962
                xor     eax, eax
                test    byte ptr [rsp+24B8h+var_213C], 6
                mov     r12d, eax
                mov     [rsp+24B8h+var_2418], rax
                mov     [rsp+24B8h+var_1B18], rax
                jnz     loc_140A2A94E
                mov     r8, cs:qword_140C1DE30
                test    r8, r8
                jz      loc_140A2A94E
                mov     ebx, eax
                mov     edi, eax
                cmp     [r8+8], rax
                jbe     short loc_140A26952

loc_140A268EF:                          ; CODE XREF: sub_140A1EEE4+7A5D↓j
                mov     rbx, rax
                xor     eax, eax
                shl     rbx, 4
                add     rbx, [r8]
                cmp     [rbx+8], rax
                jz      short loc_140A26931
                mov     rax, [r14+208h]
                lea     rdx, [rsp+24B8h+var_1B18]
                mov     rcx, [rbx]
                call    j__guard_dispatch_icall_nop
                mov     r12, [rsp+24B8h+var_1B18]
                mov     [rsp+24B8h+var_2418], r12
                test    r12, r12
                jnz     loc_140A26AE9

loc_140A26931:                          ; CODE XREF: sub_140A1EEE4+7A1B↑j
                mov     r8, cs:qword_140C1DE30
                add     edi, r13d
                mov     eax, edi
                cmp     rax, [r8+8]
                jb      short loc_140A268EF
                xor     eax, eax
                test    r12, r12
                jnz     loc_140A26AE9
                cmp     [r8+8], rax

loc_140A26952:                          ; CODE XREF: sub_140A1EEE4+7A09↑j
                jnz     loc_140A39484

loc_140A26958:                          ; CODE XREF: sub_140A1EEE4+7B2E↓j
                mov     ebx, 80000000h
                jmp     loc_140A2A94E
; ---------------------------------------------------------------------------

loc_140A26962:                          ; CODE XREF: sub_140A1EEE4+79C8↑j
                cmp     rax, 3
                jnz     loc_140A26A17
                xor     eax, eax
                test    byte ptr [rsp+24B8h+var_213C], 6
                mov     r12d, eax
                mov     [rsp+24B8h+var_2418], rax
                mov     [rsp+24B8h+var_1B18], rax
                jnz     loc_140A2A94E
                mov     r8, cs:qword_140D58630
                test    r8, r8
                jz      loc_140A2A94E
                mov     ebx, eax
                mov     edi, eax
                cmp     [r8+8], rax
                jbe     short loc_140A26A0C

loc_140A269A9:                          ; CODE XREF: sub_140A1EEE4+7B17↓j
                mov     rbx, rax
                xor     eax, eax
                shl     rbx, 4
                add     rbx, [r8]
                cmp     [rbx+8], rax
                jz      short loc_140A269EB
                mov     rax, [r14+208h]
                lea     rdx, [rsp+24B8h+var_1B18]
                mov     rcx, [rbx]
                call    j__guard_dispatch_icall_nop
                mov     r12, [rsp+24B8h+var_1B18]
                mov     [rsp+24B8h+var_2418], r12
                test    r12, r12
                jnz     loc_140A26AE9

loc_140A269EB:                          ; CODE XREF: sub_140A1EEE4+7AD5↑j
                mov     r8, cs:qword_140D58630
                add     edi, r13d
                mov     eax, edi
                cmp     rax, [r8+8]
                jb      short loc_140A269A9
                xor     eax, eax
                test    r12, r12
                jnz     loc_140A26AE9
                cmp     [r8+8], rax

loc_140A26A0C:                          ; CODE XREF: sub_140A1EEE4+7AC3↑j
                jnz     loc_140A39357
                jmp     loc_140A26958
; ---------------------------------------------------------------------------

loc_140A26A17:                          ; CODE XREF: sub_140A1EEE4+7A82↑j
                xor     eax, eax
                mov     r12d, eax
                mov     [rsp+24B8h+var_2418], rax
                cli
                mov     rcx, gs:20h
                mov     r14, [rsp+24B8h+var_1B80]
                mov     rax, [r14+648h]
                mov     rcx, [rcx+rax]
                sti
                mov     rax, [r14+168h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [r14+538h]
                mov     dl, r13b
                mov     rax, [r14+0E8h]
                call    j__guard_dispatch_icall_nop
                mov     rbx, qword ptr cs:PsLoadedModuleList
                jmp     short loc_140A26A93
; ---------------------------------------------------------------------------

loc_140A26A6D:                          ; CODE XREF: sub_140A1EEE4+7BB9↓j
                mov     rdx, [r14+760h]
                mov     rdi, rbx
                sub     rdi, [r14+748h]
                mov     r8b, r13b
                add     rdx, rdi
                mov     rcx, r15
                call    RtlEqualUnicodeString
                test    al, al
                jnz     short loc_140A26AA1
                mov     rbx, [rbx]

loc_140A26A93:                          ; CODE XREF: sub_140A1EEE4+7B87↑j
                lea     rax, PsLoadedModuleList
                cmp     rbx, rax
                jnz     short loc_140A26A6D
                jmp     short loc_140A26AB4
; ---------------------------------------------------------------------------

loc_140A26AA1:                          ; CODE XREF: sub_140A1EEE4+7BAA↑j
                mov     rax, [r14+750h]
                mov     r12, [rdi+rax]
                mov     [rsp+24B8h+var_2418], r12

loc_140A26AB4:                          ; CODE XREF: sub_140A1EEE4+7BBB↑j
                mov     rcx, [r14+538h]
                mov     rax, [r14+118h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [r14+170h]
                call    j__guard_dispatch_icall_nop
                mov     ebx, 80000000h

loc_140A26AD8:                          ; CODE XREF: sub_140A1EEE4+79BF↑j
                mov     [rsp+24B8h+var_1B18], r12
                test    r12, r12
                jz      loc_140A2A94E

loc_140A26AE9:                          ; CODE XREF: sub_140A1EEE4+79A6↑j
                                        ; sub_140A1EEE4+7A47↑j ...
                mov     edx, [r15+10h]
                mov     ecx, edx
                and     ecx, r13d
                mov     [rsp+24B8h+var_2400], ecx
                test    dl, 4
                jz      short loc_140A26B1E
                test    dword ptr [r14+994h], 400h
                mov     [rsp+24B8h+var_2400], ecx
                jz      short loc_140A26B1E
                mov     ebx, ecx
                or      ebx, 10h
                mov     [rsp+24B8h+var_2400], ebx

loc_140A26B1E:                          ; CODE XREF: sub_140A1EEE4+7C18↑j
                                        ; sub_140A1EEE4+7C2C↑j
                xor     eax, eax
                test    dl, 2
                jz      loc_140A28BF4
                cmp     dword ptr [rsp+24B8h+var_23D0], eax
                jnz     loc_140A28BF4
                mov     rax, [r14+200h]
                lea     rdx, [rsp+24B8h+var_1230]
                mov     rbx, r14
                mov     rcx, r12
                mov     [rsp+24B8h+var_1B10], rbx
                call    j__guard_dispatch_icall_nop
                mov     r13d, [rsp+24B8h+var_121C]
                mov     r12, rax
                mov     [rsp+24B8h+var_23E0], rax
                mov     rax, [rsp+24B8h+var_1228]
                mov     dword ptr [rsp+24B8h+var_2408], r13d
                mov     [rsp+24B8h+var_23E8], rax
                test    rax, rax
                jz      loc_140A237B3
                xor     eax, eax
                mov     ecx, 4
                mov     [rsp+24B8h+var_1408], rax
                xor     edx, edx
                lea     rax, [rsp+24B8h+var_1400]

loc_140A26BA5:                          ; CODE XREF: sub_140A1EEE4+7CC9↓j
                mov     [rax], dl
                inc     rax
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A26BA5
                xor     eax, eax
                mov     r15d, eax
                cmp     [r14+80Ch], eax
                jbe     loc_140A26D95
                mov     edx, [rsp+24B8h+var_1400]
                mov     r8d, dword ptr [rsp+24B8h+var_1408+4]
                mov     r9d, dword ptr [rsp+24B8h+var_1408]

loc_140A26BD8:                          ; CODE XREF: sub_140A1EEE4+7EA9↓j
                mov     rax, [r14+0A78h]
                mov     r11, r14
                test    rax, rax
                cmovnz  r11, rax
                xor     eax, eax
                mov     r10d, eax
                mov     edi, [r11+808h]
                add     rdi, r11
                test    r9d, r9d
                jz      short loc_140A26C0A
                cmp     r8d, r15d
                ja      short loc_140A26C0A
                mov     edi, edx
                mov     r10d, r8d
                add     rdi, r11

loc_140A26C0A:                          ; CODE XREF: sub_140A1EEE4+7D17↑j
                                        ; sub_140A1EEE4+7D1C↑j
                cmp     r10d, r15d
                jz      loc_140A26D24
                mov     eax, r15d
                mov     r12, 0AAAAAAAAAAAAAAABh
                sub     eax, r10d
                mov     r8d, eax
                add     r10d, eax

loc_140A26C29:                          ; CODE XREF: sub_140A1EEE4+7E2A↓j
                mov     ecx, [rdi]
                cmp     ecx, 0Ch
                jg      short loc_140A26C72
                jz      short loc_140A26C8F
                sub     ecx, 1
                jz      short loc_140A26C8F
                sub     ecx, 6
                jz      short loc_140A26C61
                sub     ecx, 1
                jz      short loc_140A26C58
                cmp     ecx, 2
                jnz     loc_140A26CCB
                mov     eax, [rdi+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A26D07
; ---------------------------------------------------------------------------

loc_140A26C58:                          ; CODE XREF: sub_140A1EEE4+7D5B↑j
                movzx   eax, word ptr [rdi+20h]
                jmp     loc_140A26D01
; ---------------------------------------------------------------------------

loc_140A26C61:                          ; CODE XREF: sub_140A1EEE4+7D56↑j
                mov     eax, [rdi+18h]
                add     eax, 2
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A26D07
; ---------------------------------------------------------------------------

loc_140A26C72:                          ; CODE XREF: sub_140A1EEE4+7D4A↑j
                cmp     ecx, 1Ch
                jz      loc_140A26CFD
                cmp     ecx, 1Eh
                jz      short loc_140A26CD2
                cmp     ecx, 20h ; ' '
                jle     short loc_140A26CCB
                cmp     ecx, 22h ; '"'
                jle     short loc_140A26CA5
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A26CCB

loc_140A26C8F:                          ; CODE XREF: sub_140A1EEE4+7D4C↑j
                                        ; sub_140A1EEE4+7D51↑j
                mov     ecx, [rdi+10h]
                mov     rax, r12
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A26D07
; ---------------------------------------------------------------------------

loc_140A26CA5:                          ; CODE XREF: sub_140A1EEE4+7DA4↑j
                mov     ecx, [rdi+20h]
                mov     edx, [rdi+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A26D07
; ---------------------------------------------------------------------------

loc_140A26CCB:                          ; CODE XREF: sub_140A1EEE4+7D60↑j
                                        ; sub_140A1EEE4+7D9F↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A26D07
; ---------------------------------------------------------------------------

loc_140A26CD2:                          ; CODE XREF: sub_140A1EEE4+7D9A↑j
                mov     eax, [rdi+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r12
                mul     rcx
                movzx   eax, word ptr [rdi+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, 2
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A26D07
; ---------------------------------------------------------------------------

loc_140A26CFD:                          ; CODE XREF: sub_140A1EEE4+7D91↑j
                movzx   eax, word ptr [rdi+28h]

loc_140A26D01:                          ; CODE XREF: sub_140A1EEE4+7D78↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A26D07:                          ; CODE XREF: sub_140A1EEE4+7D6F↑j
                                        ; sub_140A1EEE4+7D89↑j ...
                add     rdi, rax
                sub     r8, 1
                jnz     loc_140A26C29
                mov     r12, [rsp+24B8h+var_23E0]
                mov     r13d, dword ptr [rsp+24B8h+var_2408]

loc_140A26D24:                          ; CODE XREF: sub_140A1EEE4+7D29↑j
                mov     edx, edi
                mov     dword ptr [rsp+24B8h+var_1408+4], r10d
                sub     edx, r11d
                mov     r9d, 1
                mov     [rsp+24B8h+var_1400], edx
                mov     r8d, r10d
                mov     dword ptr [rsp+24B8h+var_1408], r9d
                movsxd  rcx, dword ptr [rdi]
                cmp     ecx, 2Bh ; '+'
                ja      short loc_140A26D6D
                mov     r10, 80000001002h
                bt      r10, rcx
                jnb     short loc_140A26D6D
                cmp     [rdi+8], r12
                jnz     short loc_140A26D6D
                cmp     [rdi+10h], r13d
                jz      short loc_140A26D98

loc_140A26D6D:                          ; CODE XREF: sub_140A1EEE4+7E6B↑j
                                        ; sub_140A1EEE4+7E7B↑j ...
                lea     eax, [rcx-21h]
                cmp     eax, r9d
                ja      short loc_140A26D83
                mov     rax, [rsp+24B8h+var_23E8]
                cmp     [rdi+20h], rax
                jz      short loc_140A26D98

loc_140A26D83:                          ; CODE XREF: sub_140A1EEE4+7E8F↑j
                inc     r15d
                cmp     r15d, [r14+80Ch]
                jb      loc_140A26BD8
                xor     eax, eax

loc_140A26D95:                          ; CODE XREF: sub_140A1EEE4+7CD7↑j
                mov     rdi, rax

loc_140A26D98:                          ; CODE XREF: sub_140A1EEE4+7E87↑j
                                        ; sub_140A1EEE4+7E9D↑j
                test    rdi, rdi
                jnz     loc_140A28BF2
                mov     r13d, [rsp+24B8h+var_2400]
                lea     rdx, [rsp+24B8h+var_1218]
                mov     rax, [r14+200h]
                mov     dword ptr [rsp+24B8h+var_2408], r13d
                mov     r13, [rsp+24B8h+var_2418]
                mov     rcx, r13
                mov     [rsp+24B8h+var_1B00], r14
                call    j__guard_dispatch_icall_nop
                mov     r12d, [rsp+24B8h+var_1204]
                mov     [rsp+24B8h+var_23E0], rax
                mov     rax, [rsp+24B8h+var_1210]
                mov     dword ptr [rsp+24B8h+var_2440], r12d
                mov     [rsp+24B8h+var_2138], r12d
                mov     [rsp+24B8h+var_2410], rax
                test    rax, rax
                jnz     short loc_140A26E22

loc_140A26E0A:                          ; CODE XREF: sub_140A1EEE4+8310↓j
                mov     ecx, 0C000007Bh

loc_140A26E0F:                          ; CODE XREF: sub_140A1EEE4+8476↓j
                                        ; sub_140A1EEE4+8CAF↓j
                mov     [rsp+24B8h+var_1B80], rbx

loc_140A26E17:                          ; CODE XREF: sub_140A1EEE4+8A50↓j
                mov     r13d, 80000000h
                jmp     loc_140A28BDD
; ---------------------------------------------------------------------------

loc_140A26E22:                          ; CODE XREF: sub_140A1EEE4+7F24↑j
                xor     eax, eax
                mov     ecx, 4
                mov     [rsp+24B8h+var_13F8], rax
                xor     edx, edx
                lea     rax, [rsp+24B8h+var_13F0]

loc_140A26E3B:                          ; CODE XREF: sub_140A1EEE4+7F5F↓j
                mov     [rax], dl
                inc     rax
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A26E3B
                xor     eax, eax
                mov     r15d, eax
                cmp     [r14+80Ch], eax
                jbe     loc_140A27030
                mov     edx, [rsp+24B8h+var_13F0]
                mov     r8d, dword ptr [rsp+24B8h+var_13F8+4]
                mov     r9d, dword ptr [rsp+24B8h+var_13F8]

loc_140A26E6E:                          ; CODE XREF: sub_140A1EEE4+8144↓j
                mov     rax, [r14+0A78h]
                mov     r11, r14
                test    rax, rax
                cmovnz  r11, rax
                xor     eax, eax
                mov     r10d, eax
                mov     edi, [r11+808h]
                add     rdi, r11
                test    r9d, r9d
                jz      short loc_140A26EA0
                cmp     r8d, r15d
                ja      short loc_140A26EA0
                mov     edi, edx
                mov     r10d, r8d
                add     rdi, r11

loc_140A26EA0:                          ; CODE XREF: sub_140A1EEE4+7FAD↑j
                                        ; sub_140A1EEE4+7FB2↑j
                cmp     r10d, r15d
                jz      loc_140A26FB7
                mov     eax, r15d
                mov     r12, 0AAAAAAAAAAAAAAABh
                sub     eax, r10d
                mov     r8d, eax
                add     r10d, eax

loc_140A26EBF:                          ; CODE XREF: sub_140A1EEE4+80C0↓j
                mov     ecx, [rdi]
                cmp     ecx, 0Ch
                jg      short loc_140A26F08
                jz      short loc_140A26F25
                sub     ecx, 1
                jz      short loc_140A26F25
                sub     ecx, 6
                jz      short loc_140A26EF7
                sub     ecx, 1
                jz      short loc_140A26EEE
                cmp     ecx, 2
                jnz     loc_140A26F61
                mov     eax, [rdi+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A26F9D
; ---------------------------------------------------------------------------

loc_140A26EEE:                          ; CODE XREF: sub_140A1EEE4+7FF1↑j
                movzx   eax, word ptr [rdi+20h]
                jmp     loc_140A26F97
; ---------------------------------------------------------------------------

loc_140A26EF7:                          ; CODE XREF: sub_140A1EEE4+7FEC↑j
                mov     eax, [rdi+18h]
                add     eax, 2
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A26F9D
; ---------------------------------------------------------------------------

loc_140A26F08:                          ; CODE XREF: sub_140A1EEE4+7FE0↑j
                cmp     ecx, 1Ch
                jz      loc_140A26F93
                cmp     ecx, 1Eh
                jz      short loc_140A26F68
                cmp     ecx, 20h ; ' '
                jle     short loc_140A26F61
                cmp     ecx, 22h ; '"'
                jle     short loc_140A26F3B
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A26F61

loc_140A26F25:                          ; CODE XREF: sub_140A1EEE4+7FE2↑j
                                        ; sub_140A1EEE4+7FE7↑j
                mov     ecx, [rdi+10h]
                mov     rax, r12
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A26F9D
; ---------------------------------------------------------------------------

loc_140A26F3B:                          ; CODE XREF: sub_140A1EEE4+803A↑j
                mov     ecx, [rdi+20h]
                mov     edx, [rdi+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A26F9D
; ---------------------------------------------------------------------------

loc_140A26F61:                          ; CODE XREF: sub_140A1EEE4+7FF6↑j
                                        ; sub_140A1EEE4+8035↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A26F9D
; ---------------------------------------------------------------------------

loc_140A26F68:                          ; CODE XREF: sub_140A1EEE4+8030↑j
                mov     eax, [rdi+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r12
                mul     rcx
                movzx   eax, word ptr [rdi+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, 2
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A26F9D
; ---------------------------------------------------------------------------

loc_140A26F93:                          ; CODE XREF: sub_140A1EEE4+8027↑j
                movzx   eax, word ptr [rdi+28h]

loc_140A26F97:                          ; CODE XREF: sub_140A1EEE4+800E↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A26F9D:                          ; CODE XREF: sub_140A1EEE4+8005↑j
                                        ; sub_140A1EEE4+801F↑j ...
                add     rdi, rax
                sub     r8, 1
                jnz     loc_140A26EBF
                mov     r12d, dword ptr [rsp+24B8h+var_2440]
                mov     r13, [rsp+24B8h+var_2418]

loc_140A26FB7:                          ; CODE XREF: sub_140A1EEE4+7FBF↑j
                mov     edx, edi
                mov     dword ptr [rsp+24B8h+var_13F8+4], r10d
                sub     edx, r11d
                mov     r9d, 1
                mov     [rsp+24B8h+var_13F0], edx
                mov     r8d, r10d
                mov     dword ptr [rsp+24B8h+var_13F8], r9d
                movsxd  rcx, dword ptr [rdi]
                cmp     ecx, 2Bh ; '+'
                ja      short loc_140A27008
                mov     r10, 80000001002h
                bt      r10, rcx
                jnb     short loc_140A27008
                mov     rax, [rsp+24B8h+var_23E0]
                cmp     [rdi+8], rax
                jnz     short loc_140A27008
                cmp     [rdi+10h], r12d
                jz      short loc_140A27033

loc_140A27008:                          ; CODE XREF: sub_140A1EEE4+80FE↑j
                                        ; sub_140A1EEE4+810E↑j ...
                lea     eax, [rcx-21h]
                cmp     eax, r9d
                ja      short loc_140A2701E
                mov     rax, [rsp+24B8h+var_2410]
                cmp     [rdi+20h], rax
                jz      short loc_140A27033

loc_140A2701E:                          ; CODE XREF: sub_140A1EEE4+812A↑j
                inc     r15d
                cmp     r15d, [r14+80Ch]
                jb      loc_140A26E6E
                xor     eax, eax

loc_140A27030:                          ; CODE XREF: sub_140A1EEE4+7F6D↑j
                mov     rdi, rax

loc_140A27033:                          ; CODE XREF: sub_140A1EEE4+8122↑j
                                        ; sub_140A1EEE4+8138↑j
                mov     [rsp+24B8h+var_1AF0], rdi
                test    rdi, rdi
                jz      short loc_140A27053
                mov     [rsp+24B8h+var_1B80], rbx
                mov     r13d, 80000000h
                jmp     loc_140A28B43
; ---------------------------------------------------------------------------

loc_140A27053:                          ; CODE XREF: sub_140A1EEE4+815A↑j
                mov     rax, [r14+2A8h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     ecx, [rsp+24B8h+var_2400]
                mov     r15d, eax
                mov     dword ptr [rsp+24B8h+var_2440], eax
                mov     eax, [rsp+24B8h+var_2138]
                mov     dword ptr [rsp+24B8h+var_2448], eax
                test    cl, 10h
                jz      short loc_140A2709B
                test    dword ptr [r14+994h], 400h
                jnz     short loc_140A2709B
                mov     edi, ecx
                and     edi, 0FFFFFFEFh
                mov     dword ptr [rsp+24B8h+var_2408], edi
                jmp     short loc_140A270A2
; ---------------------------------------------------------------------------

loc_140A2709B:                          ; CODE XREF: sub_140A1EEE4+819A↑j
                                        ; sub_140A1EEE4+81A7↑j
                mov     edi, dword ptr [rsp+24B8h+var_2408]

loc_140A270A2:                          ; CODE XREF: sub_140A1EEE4+81B5↑j
                mov     r12, [rsp+24B8h+var_2410]
                test    dil, 10h
                jz      short loc_140A270C9
                mov     rdx, r12
                mov     rcx, r14
                call    sub_140A11C50
                test    eax, eax
                jnz     short loc_140A270C9
                and     edi, 0FFFFFFEFh
                mov     dword ptr [rsp+24B8h+var_2408], edi

loc_140A270C9:                          ; CODE XREF: sub_140A1EEE4+81CA↑j
                                        ; sub_140A1EEE4+81D9↑j
                test    dword ptr [r14+990h], 40000000h
                jz      short loc_140A270F6
                mov     r8d, edi
                lea     rcx, [rsp+24B8h+var_1B10]
                mov     rdx, r12
                call    sub_140A1DFE4
                mov     rbx, [rsp+24B8h+var_1B10]
                jmp     loc_140A28B1B
; ---------------------------------------------------------------------------

loc_140A270F6:                          ; CODE XREF: sub_140A1EEE4+81F0↑j
                xor     eax, eax
                lea     r9, [rsp+24B8h+var_2138]
                xor     r8d, r8d
                mov     [rsp+24B8h+var_1000], rax
                mov     [rsp+24B8h+var_11F0], eax
                mov     rcx, r12
                mov     rax, [r14+1F0h]
                lea     edi, [r8+1]
                mov     dl, dil
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                lea     r8d, [rdi+0Bh]
                neg     rax
                mov     [rsp+24B8h+var_1018], rdx
                lea     r9, [rsp+24B8h+var_2138]
                mov     dl, dil
                sbb     ecx, ecx
                and     ecx, [rsp+24B8h+var_2138]
                mov     [rsp+24B8h+var_2138], ecx
                mov     rax, [r14+1F0h]
                mov     [rsp+24B8h+var_11FC], ecx
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                mov     [rsp+24B8h+var_2418], rax
                neg     rax
                mov     [rsp+24B8h+var_1010], rdx
                lea     r8d, [rdi+9]
                mov     dl, dil
                sbb     ecx, ecx
                lea     r9, [rsp+24B8h+var_2138]
                and     ecx, [rsp+24B8h+var_2138]
                mov     [rsp+24B8h+var_2138], ecx
                mov     rax, [r14+1F0h]
                mov     dword ptr [rsp+24B8h+var_2460], ecx
                mov     [rsp+24B8h+var_11F8], ecx
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                neg     rax
                mov     [rsp+24B8h+var_1008], rdx
                sbb     ecx, ecx
                and     ecx, [rsp+24B8h+var_2138]
                mov     [rsp+24B8h+var_2138], ecx
                mov     rax, [r14+1F8h]
                mov     [rsp+24B8h+var_11F4], ecx
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A26E0A
                mov     rax, [r14+498h]
                lea     rdx, [rsp+24B8h+var_1AE8]
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                mov     r13d, [r14+7E4h]
                mov     r8d, [r14+924h]
                mov     [rsp+24B8h+var_FF8], rax
                mov     eax, [rsp+24B8h+var_1AE8]
                mov     [rsp+24B8h+var_11EC], eax
                mov     eax, [rdi+54h]
                mov     [rsp+24B8h+var_1200], eax
                mov     eax, r15d
                neg     eax
                mov     [rsp+24B8h+var_1020], r12
                lea     eax, [r13+120h]
                sbb     edi, edi
                and     edi, 0Bh
                mov     dword ptr [rsp+24B8h+var_2458], edi
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A2735F
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     r15, rax
                mov     [rsp+24B8h+var_2428], rax
                xor     eax, eax
                test    r15, r15
                jz      loc_140A2734D
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A27343
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A272D5
                mov     ecx, eax
                shr     rcx, 3
                xor     ebx, ebx

loc_140A272C5:                          ; CODE XREF: sub_140A1EEE4+83EF↓j
                mov     [r14], rbx
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, 1
                jnz     short loc_140A272C5

loc_140A272D5:                          ; CODE XREF: sub_140A1EEE4+83D7↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A272E6

loc_140A272DB:                          ; CODE XREF: sub_140A1EEE4+8400↓j
                mov     [r14], cl
                inc     r14
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A272DB

loc_140A272E6:                          ; CODE XREF: sub_140A1EEE4+83F5↑j
                mov     ebx, [r15+924h]
                mov     [r15+924h], edx
                cmp     edx, 3
                jz      short loc_140A27329
                test    dword ptr [r15+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A27320
                mov     rax, [r15+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A27338
; ---------------------------------------------------------------------------

loc_140A27320:                          ; CODE XREF: sub_140A1EEE4+8425↑j
                mov     rax, [r15+100h]
                jmp     short loc_140A27330
; ---------------------------------------------------------------------------

loc_140A27329:                          ; CODE XREF: sub_140A1EEE4+8413↑j
                mov     rax, [r15+368h]

loc_140A27330:                          ; CODE XREF: sub_140A1EEE4+8443↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A27338:                          ; CODE XREF: sub_140A1EEE4+843A↑j
                mov     edi, dword ptr [rsp+24B8h+var_2458]
                mov     [r15+924h], ebx

loc_140A27343:                          ; CODE XREF: sub_140A1EEE4+83AF↑j
                and     dword ptr [r15+990h], 0FFFFFFFBh
                jmp     short loc_140A27371
; ---------------------------------------------------------------------------

loc_140A2734D:                          ; CODE XREF: sub_140A1EEE4+839F↑j
                mov     [rsp+24B8h+var_1B00], rax
                mov     ecx, 0C000009Ah
                jmp     loc_140A26E0F
; ---------------------------------------------------------------------------

loc_140A2735F:                          ; CODE XREF: sub_140A1EEE4+837F↑j
                mov     r15, r14
                mov     [rsp+24B8h+var_2428], r14
                mov     [r14+7E4h], eax

loc_140A27371:                          ; CODE XREF: sub_140A1EEE4+8467↑j
                mov     edx, 6
                lea     r14, [r15+r13]
                add     [r15+80Ch], edx
                lea     r13, [rsp+24B8h+var_1020]
                mov     [rsp+24B8h+var_1AD8], r14
                lea     rsi, [rsp+24B8h+var_1200]
                mov     [rsp+24B8h+var_1AF0], r14
                xor     r8d, r8d
                lea     r9d, [rdx-5]
                mov     [rsp+24B8h+var_2420], r13
                mov     [rsp+24B8h+var_2438], rdx

loc_140A273B8:                          ; CODE XREF: sub_140A1EEE4+865E↓j
                mov     r12d, [rsi]
                mov     ecx, 30h ; '0'
                mov     r11, [r13+0]
                mov     rax, r14

loc_140A273C7:                          ; CODE XREF: sub_140A1EEE4+84F0↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r9
                jnz     short loc_140A273C7
                test    ecx, ecx
                jz      short loc_140A273E5

loc_140A273DA:                          ; CODE XREF: sub_140A1EEE4+84FF↓j
                mov     [rax], r8b
                add     rax, r9
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A273DA

loc_140A273E5:                          ; CODE XREF: sub_140A1EEE4+84F4↑j
                mov     [r14], edi
                lea     rcx, [r11+r12]
                mov     [r14+8], r11
                mov     r8, r11
                mov     [r14+10h], r12d
                mov     rax, r11
                add     [r15+828h], r12d
                mov     r10d, [r15+814h]
                mov     r9, [r15+818h]
                cmp     r11, rcx
                jnb     short loc_140A27420

loc_140A27414:                          ; CODE XREF: sub_140A1EEE4+853A↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A27414

loc_140A27420:                          ; CODE XREF: sub_140A1EEE4+852E↑j
                mov     edi, r12d
                mov     rbx, r9
                shr     edi, 7
                test    edi, edi
                jz      short loc_140A274A4
                mov     r13, 7010008004002001h

loc_140A27437:                          ; CODE XREF: sub_140A1EEE4+85AE↓j
                mov     edx, 8

loc_140A2743C:                          ; CODE XREF: sub_140A1EEE4+8576↓j
                mov     rax, [r8]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A2743C
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r9
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1AC0], rdx
                xor     r10d, eax
                mov     eax, 1
                and     r10d, 3Fh
                cmovz   r10d, eax
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A27437
                mov     r15, [rsp+24B8h+var_2428]
                mov     r13, [rsp+24B8h+var_2420]

loc_140A274A4:                          ; CODE XREF: sub_140A1EEE4+8547↑j
                mov     edx, r12d
                mov     r9d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A274D0
                mov     edi, edx
                shr     rdi, 3

loc_140A274BB:                          ; CODE XREF: sub_140A1EEE4+85EA↓j
                xor     rbx, [r8]
                mov     ecx, r10d
                rol     rbx, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     rdi, r9
                jnz     short loc_140A274BB

loc_140A274D0:                          ; CODE XREF: sub_140A1EEE4+85CF↑j
                test    edx, edx
                jz      short loc_140A274E9

loc_140A274D4:                          ; CODE XREF: sub_140A1EEE4+8603↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rbx, rax
                add     r8, r9
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A274D4

loc_140A274E9:                          ; CODE XREF: sub_140A1EEE4+85EE↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r8d, r8d
                jmp     short loc_140A274FB
; ---------------------------------------------------------------------------

loc_140A274F5:                          ; CODE XREF: sub_140A1EEE4+861A↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A274FB:                          ; CODE XREF: sub_140A1EEE4+860F↑j
                test    rax, rax
                jnz     short loc_140A274F5
                mov     edi, dword ptr [rsp+24B8h+var_2458]
                lea     edx, [rax+6]
                btr     ebx, 1Fh
                add     r13, 8
                mov     [r14+14h], ebx
                add     rsi, 4
                add     [r15+828h], r12d
                mov     r14, [rsp+24B8h+var_1AD8]
                add     r14, 30h ; '0'
                mov     [rsp+24B8h+var_2420], r13
                sub     [rsp+24B8h+var_2438], r9
                mov     [rsp+24B8h+var_1AD8], r14
                jnz     loc_140A273B8
                mov     rbx, [rsp+24B8h+var_1AF0]
                mov     rsi, 0FFFFFFFFB8797400h
                mov     r12, [rsp+24B8h+var_2410]
                mov     edi, dword ptr [rsp+24B8h+var_2440]
                mov     dword ptr [rbx], 2Ch ; ','
                mov     [rbx+18h], r12
                mov     eax, [r15+990h]
                bt      eax, 1Ch
                jb      short loc_140A275A8
                bt      eax, 15h
                jb      short loc_140A275A8
                test    edi, edi
                jnz     short loc_140A275AC
                test    dword ptr [r15+994h], 8000h
                jz      short loc_140A275B0
                or      [rbx+20h], r9d
                mov     rdx, r12
                mov     rcx, r15
                call    sub_140A11C50
                test    eax, eax
                jz      short loc_140A275B0
                or      dword ptr [rbx+20h], 4

loc_140A275A8:                          ; CODE XREF: sub_140A1EEE4+8694↑j
                                        ; sub_140A1EEE4+869A↑j
                test    edi, edi
                jz      short loc_140A275B0

loc_140A275AC:                          ; CODE XREF: sub_140A1EEE4+869E↑j
                or      dword ptr [rbx+20h], 2

loc_140A275B0:                          ; CODE XREF: sub_140A1EEE4+86AB↑j
                                        ; sub_140A1EEE4+86BE↑j ...
                mov     r13d, dword ptr [rsp+24B8h+var_2408]
                lea     rax, [rsp+24B8h+var_2124]
                mov     r8d, dword ptr [rsp+24B8h+var_2448]
                lea     rcx, [rsp+24B8h+var_1B00]
                mov     rdx, [rsp+24B8h+var_23E0]
                mov     rbx, r15
                mov     [rsp+24B8h+var_2480], rax
                mov     r9, r12
                lea     rax, [rsp+24B8h+var_2120]
                mov     [rsp+24B8h+var_1B00], r15
                mov     [rsp+24B8h+var_2488], rax
                mov     dword ptr [rsp+24B8h+var_2490], r13d
                mov     dword ptr [rsp+24B8h+var_2498], edi
                mov     [rsp+24B8h+var_1B10], rbx
                call    sub_140A10098
                mov     ecx, eax
                test    eax, eax
                js      loc_140A28B1D
                mov     r14, [rsp+24B8h+var_1B00]
                mov     rcx, [rsp+24B8h+var_1AF0]
                mov     rax, r14
                mov     r11d, [rsp+24B8h+var_2120]
                sub     rax, r15
                mov     edi, [rsp+24B8h+var_2124]
                add     rcx, rax
                sub     edi, [rsp+24B8h+var_2120]
                add     r11, r12
                mov     [rsp+24B8h+var_1AF0], rcx
                xor     ebx, ebx
                mov     [rsp+24B8h+var_1B10], r14
                lea     r12, [rcx+0C0h]
                mov     ecx, 30h ; '0'
                mov     rax, r12
                lea     edx, [rcx-2Ah]

loc_140A2766B:                          ; CODE XREF: sub_140A1EEE4+8795↓j
                mov     [rax], rbx
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, 1
                jnz     short loc_140A2766B
                mov     edx, 1
                test    ecx, ecx
                jz      short loc_140A2768E

loc_140A27684:                          ; CODE XREF: sub_140A1EEE4+87A8↓j
                mov     [rax], bl
                add     rax, rdx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A27684

loc_140A2768E:                          ; CODE XREF: sub_140A1EEE4+879E↑j
                mov     eax, dword ptr [rsp+24B8h+var_2458]
                mov     r8, r11
                mov     [r12], eax
                mov     rax, r11
                mov     [r12+8], r11
                mov     [r12+10h], edi
                add     [r14+828h], edi
                mov     r10d, [r14+814h]
                mov     r15, [r14+818h]
                mov     ecx, edi
                add     rcx, r11
                cmp     r11, rcx
                jnb     short loc_140A276D1

loc_140A276C5:                          ; CODE XREF: sub_140A1EEE4+87EB↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A276C5

loc_140A276D1:                          ; CODE XREF: sub_140A1EEE4+87DF↑j
                mov     r9d, edi
                mov     rbx, r15
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A27750
                mov     r13, 7010008004002001h

loc_140A276EA:                          ; CODE XREF: sub_140A1EEE4+8862↓j
                mov     edx, 8

loc_140A276EF:                          ; CODE XREF: sub_140A1EEE4+8829↓j
                mov     rax, [r8]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A276EF
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1AB8], rdx
                xor     r10d, eax
                mov     edx, 1
                and     r10d, 3Fh
                cmovz   r10d, edx
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A276EA
                mov     r13d, dword ptr [rsp+24B8h+var_2408]

loc_140A27750:                          ; CODE XREF: sub_140A1EEE4+87FA↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A27779
                mov     edx, edi
                shr     rdx, 3

loc_140A2775E:                          ; CODE XREF: sub_140A1EEE4+888E↓j
                xor     rbx, [r8]
                mov     ecx, r10d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, 1
                jnz     short loc_140A2775E
                mov     edx, 1

loc_140A27779:                          ; CODE XREF: sub_140A1EEE4+8872↑j
                test    edi, edi
                jz      short loc_140A27792

loc_140A2777D:                          ; CODE XREF: sub_140A1EEE4+88AC↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rbx, rax
                add     r8, rdx
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2777D

loc_140A27792:                          ; CODE XREF: sub_140A1EEE4+8897↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     ecx, ecx
                jmp     short loc_140A277A3
; ---------------------------------------------------------------------------

loc_140A2779D:                          ; CODE XREF: sub_140A1EEE4+88C2↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A277A3:                          ; CODE XREF: sub_140A1EEE4+88B7↑j
                test    rax, rax
                jnz     short loc_140A2779D
                btr     ebx, 1Fh
                mov     [r12+14h], ebx
                mov     rdx, [rsp+24B8h+var_1AF0]
                mov     dword ptr [rdx+0F0h], 30h ; '0'
                cmp     [rdx+100h], eax
                jz      short loc_140A277E3
                cmp     dword ptr [rsp+24B8h+var_2440], eax
                mov     eax, [rdx+108h]
                setnz   cl
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [rdx+108h], ecx

loc_140A277E3:                          ; CODE XREF: sub_140A1EEE4+88E5↑j
                mov     rcx, [rsp+24B8h+var_1AF0]
                mov     edi, 1
                mov     eax, dword ptr [rsp+24B8h+var_2440]
                and     r13d, edi
                add     rcx, 60h ; '`'
                mov     [rsp+24B8h+var_1B10], r14
                neg     eax
                mov     dword ptr [rsp+24B8h+var_2408], r13d
                mov     [rsp+24B8h+var_1AB0], rcx
                sbb     r12d, r12d
                neg     r12d
                add     r12d, 0Dh
                test    rcx, rcx
                jnz     loc_140A27ABD
                mov     r15d, [r14+7E4h]
                mov     r8d, [r14+924h]
                lea     eax, [r15+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A27939
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A2791F
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A27916
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     r8, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A278AB
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2789C:                          ; CODE XREF: sub_140A1EEE4+89C5↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, rdi
                jnz     short loc_140A2789C

loc_140A278AB:                          ; CODE XREF: sub_140A1EEE4+89AD↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A278BC

loc_140A278B1:                          ; CODE XREF: sub_140A1EEE4+89D6↓j
                mov     [r14], cl
                add     r14, rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A278B1

loc_140A278BC:                          ; CODE XREF: sub_140A1EEE4+89CB↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A278FC
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A278F3
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2790B
; ---------------------------------------------------------------------------

loc_140A278F3:                          ; CODE XREF: sub_140A1EEE4+89F8↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A27903
; ---------------------------------------------------------------------------

loc_140A278FC:                          ; CODE XREF: sub_140A1EEE4+89E7↑j
                mov     rax, [rbx+368h]

loc_140A27903:                          ; CODE XREF: sub_140A1EEE4+8A16↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2790B:                          ; CODE XREF: sub_140A1EEE4+8A0D↑j
                mov     [rbx+924h], edi
                mov     edi, 1

loc_140A27916:                          ; CODE XREF: sub_140A1EEE4+8985↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A27943
; ---------------------------------------------------------------------------

loc_140A2791F:                          ; CODE XREF: sub_140A1EEE4+8975↑j
                mov     [rsp+24B8h+var_1B00], rax
                mov     ecx, 0C000009Ah
                mov     [rsp+24B8h+var_1B80], r14
                jmp     loc_140A26E17
; ---------------------------------------------------------------------------

loc_140A27939:                          ; CODE XREF: sub_140A1EEE4+895D↑j
                mov     rbx, r14
                mov     [r14+7E4h], eax

loc_140A27943:                          ; CODE XREF: sub_140A1EEE4+8A39↑j
                add     [rbx+80Ch], edi
                lea     r14, [rbx+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1AA8], r14
                mov     rax, r14
                xor     r8d, r8d
                lea     edx, [rcx-2Ah]

loc_140A27963:                          ; CODE XREF: sub_140A1EEE4+8A8C↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rdi
                jnz     short loc_140A27963
                test    ecx, ecx
                jz      short loc_140A27981

loc_140A27976:                          ; CODE XREF: sub_140A1EEE4+8A9B↓j
                mov     [rax], r8b
                add     rax, rdi
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A27976

loc_140A27981:                          ; CODE XREF: sub_140A1EEE4+8A90↑j
                mov     r15d, dword ptr [rsp+24B8h+var_2460]
                mov     [r14], r12d
                mov     r12, [rsp+24B8h+var_2418]
                mov     [r14+8], r12
                mov     r8, r12
                mov     [r14+10h], r15d
                add     [rbx+828h], r15d
                mov     r10d, [rbx+814h]
                lea     rcx, [r12+r15]
                mov     r11, [rbx+818h]
                cmp     r12, rcx
                jnb     short loc_140A279C9
                mov     rax, r12

loc_140A279BD:                          ; CODE XREF: sub_140A1EEE4+8AE3↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A279BD

loc_140A279C9:                          ; CODE XREF: sub_140A1EEE4+8AD4↑j
                mov     r9d, r15d
                mov     rdi, r11
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A27A47
                mov     r15d, 1
                mov     r13, 7010008004002001h

loc_140A279E8:                          ; CODE XREF: sub_140A1EEE4+8B54↓j
                mov     eax, 8

loc_140A279ED:                          ; CODE XREF: sub_140A1EEE4+8B20↓j
                xor     rdi, [r8]
                mov     ecx, r10d
                rol     rdi, cl
                xor     rdi, [r8+8]
                add     r8, 10h
                rol     rdi, cl
                sub     rax, r15
                jnz     short loc_140A279ED
                mov     rcx, r8
                sub     rcx, r12
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1AA0], rdx
                xor     r10d, eax
                and     r10d, 3Fh
                cmovz   r10d, r15d
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A279E8
                mov     r15d, dword ptr [rsp+24B8h+var_2460]
                mov     r13d, dword ptr [rsp+24B8h+var_2408]

loc_140A27A47:                          ; CODE XREF: sub_140A1EEE4+8AF2↑j
                mov     edx, r15d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A27A6E
                mov     eax, edx
                shr     rax, 3

loc_140A27A58:                          ; CODE XREF: sub_140A1EEE4+8B88↓j
                xor     rdi, [r8]
                mov     ecx, r10d
                rol     rdi, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     rax, 1
                jnz     short loc_140A27A58

loc_140A27A6E:                          ; CODE XREF: sub_140A1EEE4+8B6C↑j
                test    edx, edx
                jz      short loc_140A27A87

loc_140A27A72:                          ; CODE XREF: sub_140A1EEE4+8BA1↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rdi, rax
                inc     r8
                rol     rdi, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A27A72

loc_140A27A87:                          ; CODE XREF: sub_140A1EEE4+8B8C↑j
                mov     rax, rdi
                jmp     short loc_140A27A8E
; ---------------------------------------------------------------------------

loc_140A27A8C:                          ; CODE XREF: sub_140A1EEE4+8BB1↓j
                xor     edi, eax

loc_140A27A8E:                          ; CODE XREF: sub_140A1EEE4+8BA6↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A27A8C
                btr     edi, 1Fh
                mov     [r14+14h], edi
                mov     edi, 1
                mov     rax, [rsp+24B8h+var_1AA8]
                mov     [rsp+24B8h+var_1AB0], rax
                add     [rbx+828h], r15d
                jmp     short loc_140A27AD0
; ---------------------------------------------------------------------------

loc_140A27ABD:                          ; CODE XREF: sub_140A1EEE4+893E↑j
                mov     r15d, dword ptr [rsp+24B8h+var_2460]
                mov     rbx, r14
                mov     [rcx], r12d
                mov     r12, [rsp+24B8h+var_2418]

loc_140A27AD0:                          ; CODE XREF: sub_140A1EEE4+8BD7↑j
                test    dword ptr [rbx+990h], 40000000h
                jz      short loc_140A27AFB
                test    r15d, r15d
                jz      short loc_140A27AFB
                mov     r9, [rsp+24B8h+var_1AB0]
                mov     r8d, r15d
                add     r9, 1Ch
                mov     rdx, r12
                mov     rcx, rbx
                call    sub_1403EA0CC

loc_140A27AFB:                          ; CODE XREF: sub_140A1EEE4+8BF6↑j
                                        ; sub_140A1EEE4+8BFB↑j
                mov     rax, [rsp+24B8h+var_1AB0]
                xor     ecx, ecx
                mov     [rax+18h], ecx
                xor     eax, eax
                test    r13d, r13d
                jz      short loc_140A27B1C
                mov     rax, [rsp+24B8h+var_1AB0]
                or      [rax+18h], edi
                xor     eax, eax

loc_140A27B1C:                          ; CODE XREF: sub_140A1EEE4+8C29↑j
                mov     rdi, [rsp+24B8h+var_1AF0]
                mov     ecx, eax
                cmp     dword ptr [rsp+24B8h+var_2440], eax
                mov     [rsp+24B8h+var_1B10], rbx
                setnz   cl
                mov     dword ptr [rdi+90h], 23h ; '#'
                mov     eax, [rdi+0B8h]
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [rdi+0B8h], ecx
                cmp     dword ptr [rdi+0A0h], 94h
                jb      loc_140A27BED
                mov     r15, [rsp+24B8h+var_2410]
                mov     rax, [rbx+1F8h]
                mov     rcx, r15
                mov     r14, [rdi+98h]
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     short loc_140A27B98
                mov     [rsp+24B8h+var_1B00], rax
                mov     ecx, 0C000009Ah
                mov     r14, rbx
                jmp     loc_140A26E0F
; ---------------------------------------------------------------------------

loc_140A27B98:                          ; CODE XREF: sub_140A1EEE4+8C9D↑j
                mov     ecx, [rax+50h]
                or      dword ptr [rdi+0B8h], 2
                add     rcx, r15
                mov     rax, [r14+70h]
                cmp     rax, r15
                jb      short loc_140A27BC4
                cmp     rax, rcx
                jnb     short loc_140A27BC4
                mov     rax, [rax]
                mov     [rdi+0A8h], rax
                or      dword ptr [rdi+0B8h], 4

loc_140A27BC4:                          ; CODE XREF: sub_140A1EEE4+8CC8↑j
                                        ; sub_140A1EEE4+8CCD↑j
                mov     rax, [r14+78h]
                mov     r14, [rsp+24B8h+var_2410]
                cmp     rax, r14
                jb      short loc_140A27BF5
                cmp     rax, rcx
                jnb     short loc_140A27BF5
                mov     rax, [rax]
                mov     [rdi+0B0h], rax
                or      dword ptr [rdi+0B8h], 8
                jmp     short loc_140A27BF5
; ---------------------------------------------------------------------------

loc_140A27BED:                          ; CODE XREF: sub_140A1EEE4+8C76↑j
                mov     r14, [rsp+24B8h+var_2410]

loc_140A27BF5:                          ; CODE XREF: sub_140A1EEE4+8CEF↑j
                                        ; sub_140A1EEE4+8CF4↑j ...
                test    dword ptr [rbx+990h], 400000h
                mov     [rsp+24B8h+var_1B00], rbx
                jz      loc_140A28B11
                mov     rax, [rbx+1F8h]
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                mov     [rsp+24B8h+var_2438], rax
                mov     r15, rax
                test    rax, rax
                jnz     short loc_140A27C36

loc_140A27C2C:                          ; CODE XREF: sub_140A1EEE4+8D9E↓j
                                        ; sub_140A1EEE4+8DE3↓j
                mov     ecx, 0C000007Bh
                jmp     loc_140A28B1D
; ---------------------------------------------------------------------------

loc_140A27C36:                          ; CODE XREF: sub_140A1EEE4+8D46↑j
                movzx   r13d, word ptr [r15+6]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mov     ecx, dword ptr [rsp+24B8h+var_2448]
                mul     rcx
                xor     eax, eax
                mov     word ptr [rsp+24B8h+var_2408], r13w
                mov     rdi, rdx
                shr     rdi, 3
                mov     [rsp+24B8h+var_2420], rdi
                test    r13w, r13w
                jnz     short loc_140A27CCC
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A394B2

loc_140A27C7C:                          ; CODE XREF: sub_140A1EEE4+9095↓j
                                        ; sub_140A1EEE4+90AC↓j ...
                cmp     [rbx+8F8h], eax
                jnz     short loc_140A27C2C
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rbx
                mov     rcx, rbx
                mov     [rbx+900h], rax
                xor     eax, eax
                mov     [rbx+908h], rax
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], r14
                mov     dword ptr [rbx+8F8h], 1
                call    sub_140A113CC
                jmp     loc_140A27C2C
; ---------------------------------------------------------------------------

loc_140A27CCC:                          ; CODE XREF: sub_140A1EEE4+8D86↑j
                mov     r12, [rsp+24B8h+var_23E0]
                movzx   r8d, word ptr [r15+14h]
                add     r8, 18h
                movzx   r9d, r13w
                add     r8, r15
                mov     eax, edi
                mov     [rsp+24B8h+var_2430], r8
                mov     dword ptr [rsp+24B8h+var_2458], r9d
                lea     rax, [rax+rax*2]
                shl     rax, 2
                mov     [rsp+24B8h+var_2428], rax
                add     rax, r12
                mov     [rsp+24B8h+var_2418], rax
                xor     eax, eax
                mov     dword ptr [rsp+24B8h+var_2450], eax
                mov     ecx, eax
                test    r9d, r9d
                jz      loc_140A27F5D

loc_140A27D1F:                          ; CODE XREF: sub_140A1EEE4+9058↓j
                mov     eax, ecx
                lea     rdx, [rax+rax*4]
                mov     r13d, [r8+rdx*8+10h]
                mov     eax, [r8+rdx*8+8]
                cmp     r13d, eax
                mov     edi, [r8+rdx*8+0Ch]
                cmovbe  r13d, eax
                mov     [rsp+24B8h+var_2468], rdx
                add     r13d, edi
                mov     dword ptr [rsp+24B8h+var_2460], edi
                test    ecx, ecx
                jz      short loc_140A27D61
                lea     eax, [rcx-1]
                lea     rax, [rax+rax*4]
                cmp     r13d, [r8+rax*8+0Ch]
                jb      loc_140A27F7E
                mov     ecx, dword ptr [rsp+24B8h+var_2450]

loc_140A27D61:                          ; CODE XREF: sub_140A1EEE4+8E65↑j
                cmp     r12, [rsp+24B8h+var_2418]
                jz      loc_140A27F33

loc_140A27D6F:                          ; CODE XREF: sub_140A1EEE4+9040↓j
                mov     ecx, [r12]
                mov     eax, [r12+4]
                cmp     ecx, r13d
                jnb     loc_140A27F2A
                cmp     eax, edi
                jbe     loc_140A27F2A
                cmp     ecx, edi
                jb      loc_140A27F95
                cmp     eax, r13d
                ja      loc_140A27F95
                mov     eax, [r12+8]
                test    al, 1
                jnz     short loc_140A27DAF
                mov     al, [rax+r14]
                test    al, 20h
                jz      loc_140A27F18

loc_140A27DAF:                          ; CODE XREF: sub_140A1EEE4+8EBD↑j
                mov     eax, [r8+rdx*8+8]
                mov     rcx, r12
                mov     r14d, [r8+rdx*8+10h]
                cmp     r14d, eax
                mov     r15d, [r8+rdx*8+0Ch]
                mov     rdx, [rsp+24B8h+var_2410]
                cmovbe  r14d, eax
                mov     rax, [rbx+418h]
                add     r14d, r15d
                call    j__guard_dispatch_icall_nop
                mov     rdi, rax
                cmp     [rax], r15d
                jb      short loc_140A27DED
                cmp     [rax+4], r14d
                jbe     short loc_140A27E5E

loc_140A27DED:                          ; CODE XREF: sub_140A1EEE4+8F01↑j
                mov     r8, [rsp+24B8h+var_2410]
                mov     eax, 80000000h
                mov     edx, edi
                sub     edx, r8d
                or      edx, eax
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A39513
                cmp     [rbx+8F8h], eax
                jnz     short loc_140A27E5E
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rbx
                mov     rcx, rbx
                mov     [rbx+900h], rax
                xor     eax, eax
                mov     [rbx+908h], rax
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], r8
                mov     dword ptr [rbx+8F8h], 1
                call    sub_140A113CC

loc_140A27E5E:                          ; CODE XREF: sub_140A1EEE4+8F07↑j
                                        ; sub_140A1EEE4+8F35↑j
                mov     r8d, [rdi]
                mov     rcx, rdi
                add     r8, [rsp+24B8h+var_2410]
                mov     rax, [rbx+420h]
                mov     rdx, [rsp+24B8h+var_2410]
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                cmp     [rax], r15d
                jb      short loc_140A27E8E
                cmp     [rax+4], r14d
                jbe     short loc_140A27EFF

loc_140A27E8E:                          ; CODE XREF: sub_140A1EEE4+8FA2↑j
                mov     r14, [rsp+24B8h+var_2410]
                mov     eax, 80000000h
                sub     edx, r14d
                or      edx, eax
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A394E2
                cmp     [rbx+8F8h], eax
                jnz     short loc_140A27F07
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, rbx
                mov     rcx, rbx
                mov     [rbx+900h], rax
                xor     eax, eax
                mov     [rbx+908h], rax
                mov     qword ptr [rbx+910h], 10Fh
                mov     [rbx+918h], r14
                mov     dword ptr [rbx+8F8h], 1
                call    sub_140A113CC
                jmp     short loc_140A27F07
; ---------------------------------------------------------------------------

loc_140A27EFF:                          ; CODE XREF: sub_140A1EEE4+8FA8↑j
                mov     r14, [rsp+24B8h+var_2410]

loc_140A27F07:                          ; CODE XREF: sub_140A1EEE4+8FD4↑j
                                        ; sub_140A1EEE4+9019↑j
                mov     rdx, [rsp+24B8h+var_2468]
                mov     edi, dword ptr [rsp+24B8h+var_2460]
                mov     r8, [rsp+24B8h+var_2430]

loc_140A27F18:                          ; CODE XREF: sub_140A1EEE4+8EC5↑j
                add     r12, 0Ch
                cmp     r12, [rsp+24B8h+var_2418]
                jnz     loc_140A27D6F

loc_140A27F2A:                          ; CODE XREF: sub_140A1EEE4+8E97↑j
                                        ; sub_140A1EEE4+8E9F↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2450]
                mov     r9d, dword ptr [rsp+24B8h+var_2458]

loc_140A27F33:                          ; CODE XREF: sub_140A1EEE4+8E85↑j
                inc     ecx
                mov     dword ptr [rsp+24B8h+var_2450], ecx
                cmp     ecx, r9d
                jb      loc_140A27D1F
                mov     rdi, [rsp+24B8h+var_2420]
                xor     eax, eax
                mov     r15, [rsp+24B8h+var_2438]
                movzx   r13d, word ptr [rsp+24B8h+var_2408]

loc_140A27F5D:                          ; CODE XREF: sub_140A1EEE4+8E35↑j
                cmp     r12, [rsp+24B8h+var_2418]
                jz      short loc_140A27FAC
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A39385
                jmp     loc_140A27C7C
; ---------------------------------------------------------------------------

loc_140A27F7E:                          ; CODE XREF: sub_140A1EEE4+8E73↑j
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A393B8
                jmp     loc_140A27C7C
; ---------------------------------------------------------------------------

loc_140A27F95:                          ; CODE XREF: sub_140A1EEE4+8EA7↑j
                                        ; sub_140A1EEE4+8EB0↑j
                xor     eax, eax
                test    dword ptr [rbx+990h], 200000h
                jz      loc_140A393EB
                jmp     loc_140A27C7C
; ---------------------------------------------------------------------------

loc_140A27FAC:                          ; CODE XREF: sub_140A1EEE4+9081↑j
                test    edi, edi
                jz      short loc_140A27FB8
                lea     ecx, [rdi+6]
                and     ecx, 0FFFFFFF8h
                jmp     short loc_140A27FBA
; ---------------------------------------------------------------------------

loc_140A27FB8:                          ; CODE XREF: sub_140A1EEE4+90CA↑j
                mov     ecx, eax

loc_140A27FBA:                          ; CODE XREF: sub_140A1EEE4+90D2↑j
                mov     r14d, [rbx+7E4h]
                lea     eax, [r9+2]
                mov     r8d, [rbx+924h]
                lea     eax, [rax+rax*2]
                lea     eax, [rcx+rax*8]
                add     eax, r14d
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A280D5
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     [rsp+24B8h+var_2468], rax
                mov     r11, rax
                test    rax, rax
                jz      loc_140A280CB
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A280BC
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     rdi, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A28046
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A28036:                          ; CODE XREF: sub_140A1EEE4+9160↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A28036

loc_140A28046:                          ; CODE XREF: sub_140A1EEE4+9147↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A28056

loc_140A2804C:                          ; CODE XREF: sub_140A1EEE4+9170↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2804C

loc_140A28056:                          ; CODE XREF: sub_140A1EEE4+9166↑j
                mov     ebx, [r11+924h]
                mov     [r11+924h], edx
                cmp     edx, 3
                jz      short loc_140A28099
                test    dword ptr [r11+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A28090
                mov     rax, [r11+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A280A8
; ---------------------------------------------------------------------------

loc_140A28090:                          ; CODE XREF: sub_140A1EEE4+9195↑j
                mov     rax, [r11+100h]
                jmp     short loc_140A280A0
; ---------------------------------------------------------------------------

loc_140A28099:                          ; CODE XREF: sub_140A1EEE4+9183↑j
                mov     rax, [r11+368h]

loc_140A280A0:                          ; CODE XREF: sub_140A1EEE4+91B3↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A280A8:                          ; CODE XREF: sub_140A1EEE4+91AA↑j
                mov     r11, [rsp+24B8h+var_2468]
                mov     rdi, [rsp+24B8h+var_2420]
                mov     [r11+924h], ebx

loc_140A280BC:                          ; CODE XREF: sub_140A1EEE4+9121↑j
                and     dword ptr [r11+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2458]
                jmp     short loc_140A280E3
; ---------------------------------------------------------------------------

loc_140A280CB:                          ; CODE XREF: sub_140A1EEE4+9112↑j
                mov     ecx, 0C000009Ah
                jmp     loc_140A28B1D
; ---------------------------------------------------------------------------

loc_140A280D5:                          ; CODE XREF: sub_140A1EEE4+90F7↑j
                mov     r11, rbx
                mov     [rsp+24B8h+var_2468], rbx
                mov     [rbx+7E4h], eax

loc_140A280E3:                          ; CODE XREF: sub_140A1EEE4+91E5↑j
                mov     r12d, 1
                lea     rbx, [r11+r14]
                add     [r11+80Ch], r12d
                mov     rax, rbx
                mov     [rsp+24B8h+var_1A88], rbx
                xor     r8d, r8d
                lea     ecx, [r12+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A2810A:                          ; CODE XREF: sub_140A1EEE4+9233↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r12
                jnz     short loc_140A2810A
                test    ecx, ecx
                jz      short loc_140A28128

loc_140A2811D:                          ; CODE XREF: sub_140A1EEE4+9242↓j
                mov     [rax], r8b
                add     rax, r12
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2811D

loc_140A28128:                          ; CODE XREF: sub_140A1EEE4+9237↑j
                mov     rax, [rsp+24B8h+var_23E0]
                mov     dword ptr [rbx], 1Eh
                mov     [rbx+8], rax
                xor     eax, eax
                mov     [rbx+10h], eax
                mov     rcx, [r11+818h]
                mov     rax, rcx
                jmp     short loc_140A2814D
; ---------------------------------------------------------------------------

loc_140A2814B:                          ; CODE XREF: sub_140A1EEE4+9270↓j
                xor     ecx, eax

loc_140A2814D:                          ; CODE XREF: sub_140A1EEE4+9265↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2814B
                mov     rdx, [rsp+24B8h+var_2410]
                btr     ecx, 1Fh
                mov     [rbx+14h], ecx
                mov     r8d, 0FFFEh
                mov     rax, [rsp+24B8h+var_1A88]
                mov     rbx, r11
                mov     [rsp+24B8h+var_1A80], rax
                mov     [rsp+24B8h+var_1B00], rbx
                mov     [rax+18h], rdx
                mov     ecx, [r15+50h]
                mov     rax, [rsp+24B8h+var_1A80]
                mov     [rax+20h], ecx
                mov     rax, [rsp+24B8h+var_1A80]
                mov     ecx, dword ptr [rsp+24B8h+var_2448]
                mov     [rax+24h], ecx
                mov     rax, [rsp+24B8h+var_1A80]
                mov     [rax+28h], r13w
                xor     eax, eax
                cmp     dword ptr [rsp+24B8h+var_2440], eax
                mov     ecx, eax
                mov     rdx, [rsp+24B8h+var_1A80]
                setnz   cl
                movzx   eax, word ptr [rdx+2Ah]
                and     ax, r8w
                or      cx, ax
                mov     [rdx+2Ah], cx
                mov     rcx, [rsp+24B8h+var_1A80]
                lea     rdx, [rcx+30h]
                mov     [rsp+24B8h+var_2438], rdx
                test    edi, edi
                jz      short loc_140A28200
                lea     r10d, [rdi-1]
                add     r10, 7
                and     r10, 0FFFFFFFFFFFFFFF8h
                add     r10, rdx
                jmp     short loc_140A28203
; ---------------------------------------------------------------------------

loc_140A28200:                          ; CODE XREF: sub_140A1EEE4+9309↑j
                mov     r10, rdx

loc_140A28203:                          ; CODE XREF: sub_140A1EEE4+931A↑j
                movzx   eax, word ptr [rcx+28h]
                mov     [rsp+24B8h+var_2420], r10
                lea     rcx, [rax+rax*2]
                xor     eax, eax
                lea     r8, [r10+rcx*8]
                test    edi, edi
                mov     rdi, [rsp+24B8h+var_23E0]
                mov     ecx, 0Ch
                cmovz   rcx, [rsp+24B8h+var_2428]
                add     rcx, rdi
                mov     [rsp+24B8h+var_2408], r8
                mov     [rsp+24B8h+var_2428], rcx
                test    r9d, r9d
                jz      short loc_140A28279
                mov     edx, r9d
                lea     rax, [r10+8]
                xor     r9d, r9d
                mov     r15d, 80000000h

loc_140A28259:                          ; CODE XREF: sub_140A1EEE4+9391↓j
                mov     ecx, 2

loc_140A2825E:                          ; CODE XREF: sub_140A1EEE4+938C↓j
                mov     [rax-8], r9d
                mov     [rax-4], r9d
                mov     [rax], r15d
                add     rax, 0Ch
                sub     rcx, r12
                jnz     short loc_140A2825E
                sub     rdx, r12
                jnz     short loc_140A28259
                xor     eax, eax

loc_140A28279:                          ; CODE XREF: sub_140A1EEE4+9363↑j
                cmp     r10, r8
                jz      loc_140A28B11
                mov     r15, [rsp+24B8h+var_2430]
                jmp     short loc_140A28292
; ---------------------------------------------------------------------------

loc_140A2828C:                          ; CODE XREF: sub_140A1EEE4+9C1F↓j
                xor     eax, eax
                lea     r12d, [rax+1]

loc_140A28292:                          ; CODE XREF: sub_140A1EEE4+93A6↑j
                mov     r14d, eax
                mov     eax, [r15+24h]
                bt      eax, 19h
                jb      loc_140A28491
                mov     ecx, [r15]
                cmp     ecx, 54494E49h
                jnz     short loc_140A282BC
                cmp     dword ptr [r15+4], 4742444Bh
                jz      loc_140A28491

loc_140A282BC:                          ; CODE XREF: sub_140A1EEE4+93C8↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A282F3
                movzx   eax, word ptr [r15+4]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_140A28491
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_140A28491
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_140A28491

loc_140A282F3:                          ; CODE XREF: sub_140A1EEE4+93DE↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A2830B
                mov     eax, 4154h
                cmp     [r15+4], ax
                jz      loc_140A28491

loc_140A2830B:                          ; CODE XREF: sub_140A1EEE4+9415↑j
                mov     rbx, [r11+930h]
                mov     rdi, r15
                mov     r8, [r11+938h]
                sub     rdi, rbx
                mov     r10, [r11+940h]
                or      r13d, 0FFFFFFFFh
                mov     r11, [r11+948h]
                mov     r9d, 7

loc_140A28337:                          ; CODE XREF: sub_140A1EEE4+9465↓j
                movzx   edx, byte ptr [rbx+rdi]
                movzx   eax, byte ptr [rbx]
                add     rbx, r12
                cmp     rdx, rax
                jnz     short loc_140A28350
                add     r9d, r13d
                jnz     short loc_140A28337
                jmp     loc_140A283D4
; ---------------------------------------------------------------------------

loc_140A28350:                          ; CODE XREF: sub_140A1EEE4+9460↑j
                mov     ebx, 8
                mov     rdi, r15

loc_140A28358:                          ; CODE XREF: sub_140A1EEE4+948D↓j
                mov     rcx, [rdi]
                add     rdi, 8
                mov     rax, [r8]
                add     r8, 8
                cmp     rcx, rax
                jnz     short loc_140A28390
                add     ebx, 0FFFFFFF8h
                cmp     ebx, 8
                jnb     short loc_140A28358
                test    ebx, ebx
                jz      short loc_140A283D4

loc_140A28377:                          ; CODE XREF: sub_140A1EEE4+94A8↓j
                movzx   edx, byte ptr [rdi]
                add     rdi, r12
                movzx   eax, byte ptr [r8]
                add     r8, r12
                cmp     rdx, rax
                jnz     short loc_140A28390
                add     ebx, r13d
                jnz     short loc_140A28377
                jmp     short loc_140A283D4
; ---------------------------------------------------------------------------

loc_140A28390:                          ; CODE XREF: sub_140A1EEE4+9485↑j
                                        ; sub_140A1EEE4+94A3↑j
                mov     rbx, r15
                mov     edi, 4
                sub     rbx, r10

loc_140A2839B:                          ; CODE XREF: sub_140A1EEE4+94CB↓j
                movzx   edx, byte ptr [r10+rbx]
                movzx   eax, byte ptr [r10]
                add     r10, r12
                cmp     rdx, rax
                jnz     short loc_140A283B3
                add     edi, r13d
                jnz     short loc_140A2839B
                jmp     short loc_140A283D4
; ---------------------------------------------------------------------------

loc_140A283B3:                          ; CODE XREF: sub_140A1EEE4+94C6↑j
                mov     rbx, r15
                mov     edi, 6
                sub     rbx, r11

loc_140A283BE:                          ; CODE XREF: sub_140A1EEE4+94EE↓j
                movzx   edx, byte ptr [r11+rbx]
                movzx   eax, byte ptr [r11]
                add     r11, r12
                cmp     rdx, rax
                jnz     short loc_140A283D7
                add     edi, r13d
                jnz     short loc_140A283BE

loc_140A283D4:                          ; CODE XREF: sub_140A1EEE4+9467↑j
                                        ; sub_140A1EEE4+9491↑j ...
                mov     r14d, r12d

loc_140A283D7:                          ; CODE XREF: sub_140A1EEE4+94E9↑j
                mov     rdi, [rsp+24B8h+var_23E0]
                mov     r10, [rsp+24B8h+var_2420]
                mov     r11, [rsp+24B8h+var_2468]

loc_140A283EC:                          ; CODE XREF: sub_140A1EEE4+95B0↓j
                mov     ecx, [r15+24h]
                xor     eax, eax
                test    ecx, ecx
                cmovs   r14d, r12d
                mov     dword ptr [rsp+24B8h+var_2450], r14d
                test    r14d, r14d
                jz      short loc_140A28429
                cmp     dword ptr [r15], 54494E49h
                jnz     short loc_140A28429
                cmp     dword ptr [r15+4], 4742444Bh
                jnz     short loc_140A28429
                test    dword ptr [r11+994h], 2000h
                cmovnz  r14d, eax
                mov     dword ptr [rsp+24B8h+var_2450], r14d

loc_140A28429:                          ; CODE XREF: sub_140A1EEE4+951C↑j
                                        ; sub_140A1EEE4+9525↑j ...
                test    dword ptr [r11+994h], 4000h
                mov     rdx, [rsp+24B8h+var_2410]
                jz      short loc_140A2845E
                bt      ecx, 1Dh
                jnb     short loc_140A2845E
                cmp     rdx, [r11+5E8h]
                jz      short loc_140A28456
                cmp     rdx, [r11+5F0h]
                jnz     short loc_140A2845E

loc_140A28456:                          ; CODE XREF: sub_140A1EEE4+9567↑j
                mov     r14d, r12d
                mov     dword ptr [rsp+24B8h+var_2450], r12d

loc_140A2845E:                          ; CODE XREF: sub_140A1EEE4+9558↑j
                                        ; sub_140A1EEE4+955E↑j ...
                mov     ecx, [r15+10h]
                mov     eax, [r15+8]
                cmp     ecx, eax
                mov     r8d, [r15+0Ch]
                mov     rbx, [rsp+24B8h+var_2418]
                cmovbe  ecx, eax
                add     ecx, r8d
                mov     dword ptr [rsp+24B8h+var_2458], r8d
                mov     dword ptr [rsp+24B8h+var_2460], ecx
                cmp     rdi, rbx
                jz      short loc_140A28499
                mov     r15d, [rdi]
                mov     r12d, [rdi+4]
                jmp     short loc_140A284A1
; ---------------------------------------------------------------------------

loc_140A28491:                          ; CODE XREF: sub_140A1EEE4+93B9↑j
                                        ; sub_140A1EEE4+93D2↑j ...
                mov     r14d, r12d
                jmp     loc_140A283EC
; ---------------------------------------------------------------------------

loc_140A28499:                          ; CODE XREF: sub_140A1EEE4+95A2↑j
                xor     eax, eax
                mov     r15d, eax
                mov     r12d, eax

loc_140A284A1:                          ; CODE XREF: sub_140A1EEE4+95AB↑j
                mov     dword ptr [rsp+24B8h+var_2440], r12d
                mov     r13d, r8d
                mov     dword ptr [rsp+24B8h+var_2448], r15d
                cmp     rdi, rbx
                jz      loc_140A2865E
                cmp     r15d, r8d
                jbe     loc_140A2865E
                cmp     r12d, ecx
                ja      loc_140A2865E
                test    r14d, r14d
                jnz     loc_140A2865E
                mov     [r10], r8d
                mov     edi, r15d
                mov     [r10+4], r15d
                mov     r13d, r15d
                mov     eax, [r10]
                sub     edi, eax
                mov     r9d, edi
                lea     r10, [rdx+rax]
                add     r9, r10
                xor     eax, eax
                mov     edx, eax

loc_140A284F2:                          ; CODE XREF: sub_140A1EEE4+9635↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_1020]
                mov     ecx, [rsp+rax*4+24B8h+var_1200]
                add     rcx, rbx
                cmp     r10, rcx
                jnb     short loc_140A28514
                cmp     r9, rbx
                ja      loc_140A2864A

loc_140A28514:                          ; CODE XREF: sub_140A1EEE4+9625↑j
                inc     edx
                cmp     edx, 6
                jb      short loc_140A284F2
                add     [r11+828h], edi
                mov     r8, r10
                mov     r14d, [r11+814h]
                mov     rax, r10
                mov     r11, [r11+818h]
                cmp     r10, r9
                jnb     short loc_140A28547

loc_140A2853B:                          ; CODE XREF: sub_140A1EEE4+9661↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r9
                jb      short loc_140A2853B

loc_140A28547:                          ; CODE XREF: sub_140A1EEE4+9655↑j
                mov     r9d, edi
                mov     rbx, r11
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A285C8
                mov     r15, 7010008004002001h

loc_140A28560:                          ; CODE XREF: sub_140A1EEE4+96D8↓j
                mov     edx, 8

loc_140A28565:                          ; CODE XREF: sub_140A1EEE4+969F↓j
                mov     rax, [r8]
                mov     ecx, r14d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A28565
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1A78], rdx
                xor     r14d, eax
                mov     eax, 1
                and     r14d, 3Fh
                cmovz   r14d, eax
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A28560
                mov     r15d, dword ptr [rsp+24B8h+var_2448]
                mov     r12d, dword ptr [rsp+24B8h+var_2440]

loc_140A285C8:                          ; CODE XREF: sub_140A1EEE4+9670↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A285EC
                mov     edx, edi
                shr     rdx, 3

loc_140A285D6:                          ; CODE XREF: sub_140A1EEE4+9706↓j
                xor     rbx, [r8]
                mov     ecx, r14d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, 1
                jnz     short loc_140A285D6

loc_140A285EC:                          ; CODE XREF: sub_140A1EEE4+96EA↑j
                test    edi, edi
                jz      short loc_140A28605

loc_140A285F0:                          ; CODE XREF: sub_140A1EEE4+971F↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r14d
                xor     rbx, rax
                inc     r8
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A285F0

loc_140A28605:                          ; CODE XREF: sub_140A1EEE4+970A↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     edx, edx
                jmp     short loc_140A28616
; ---------------------------------------------------------------------------

loc_140A28610:                          ; CODE XREF: sub_140A1EEE4+9735↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A28616:                          ; CODE XREF: sub_140A1EEE4+972A↑j
                test    rax, rax
                jnz     short loc_140A28610
                mov     rax, [rsp+24B8h+var_2420]
                btr     ebx, 1Fh
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     r8d, dword ptr [rsp+24B8h+var_2458]
                mov     r11, [rsp+24B8h+var_2468]
                mov     rdi, [rsp+24B8h+var_23E0]
                mov     [rax+8], ebx
                mov     rbx, [rsp+24B8h+var_2418]
                jmp     short loc_140A28660
; ---------------------------------------------------------------------------

loc_140A2864A:                          ; CODE XREF: sub_140A1EEE4+962A↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     rbx, [rsp+24B8h+var_2418]
                mov     rdi, [rsp+24B8h+var_23E0]

loc_140A2865E:                          ; CODE XREF: sub_140A1EEE4+95CD↑j
                                        ; sub_140A1EEE4+95D6↑j ...
                xor     edx, edx

loc_140A28660:                          ; CODE XREF: sub_140A1EEE4+9764↑j
                cmp     r15d, r8d
                jb      loc_140A288F5
                cmp     r12d, ecx
                mov     r12d, dword ptr [rsp+24B8h+var_2450]
                ja      loc_140A288FA
                cmp     rdi, rbx
                jz      loc_140A288FA
                mov     r14, [rsp+24B8h+var_2428]
                mov     r15d, [r14+4]
                mov     dword ptr [rsp+24B8h+var_2448], r15d
                cmp     r15d, ecx
                ja      loc_140A288FA
                mov     rax, [rsp+24B8h+var_2438]
                jmp     short loc_140A286A9
; ---------------------------------------------------------------------------

loc_140A286A4:                          ; CODE XREF: sub_140A1EEE4+9A09↓j
                mov     r11, [rsp+24B8h+var_2468]

loc_140A286A9:                          ; CODE XREF: sub_140A1EEE4+97BE↑j
                cmp     r14, rbx
                jz      loc_140A288FA
                test    r12d, r12d
                jz      short loc_140A286BE
                mov     bl, 80h
                jmp     loc_140A288A7
; ---------------------------------------------------------------------------

loc_140A286BE:                          ; CODE XREF: sub_140A1EEE4+97D1↑j
                mov     ebx, [rdi+4]
                mov     r13d, [r14]
                cmp     r13d, ebx
                jnb     short loc_140A28731
                xor     eax, eax
                test    dword ptr [r11+990h], 200000h
                jz      loc_140A39541
                cmp     [r11+8F8h], eax
                jnz     short loc_140A28731
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r11
                mov     rcx, r11
                mov     [r11+900h], rax
                xor     eax, eax
                mov     [r11+908h], rax
                mov     rax, [rsp+24B8h+var_2410]
                mov     qword ptr [r11+910h], 10Fh
                mov     [r11+918h], rax
                mov     dword ptr [r11+8F8h], 1
                call    sub_140A113CC

loc_140A28731:                          ; CODE XREF: sub_140A1EEE4+97E3↑j
                                        ; sub_140A1EEE4+97FF↑j
                mov     edi, r13d
                mov     r10, rbx
                add     r10, [rsp+24B8h+var_2410]
                sub     edi, ebx
                mov     r9d, edi
                add     r9, r10
                xor     eax, eax
                mov     edx, eax

loc_140A2874B:                          ; CODE XREF: sub_140A1EEE4+988E↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_1020]
                mov     ecx, [rsp+rax*4+24B8h+var_1200]
                add     rcx, rbx
                cmp     r10, rcx
                jnb     short loc_140A2876D
                cmp     r9, rbx
                ja      loc_140A2888F

loc_140A2876D:                          ; CODE XREF: sub_140A1EEE4+987E↑j
                inc     edx
                cmp     edx, 6
                jb      short loc_140A2874B
                cmp     edi, 4
                jb      loc_140A2888F
                mov     r11, [rsp+24B8h+var_2468]
                mov     r8, r10
                mov     rax, r10
                add     [r11+828h], edi
                mov     r14d, [r11+814h]
                mov     r11, [r11+818h]
                cmp     r10, r9
                jnb     short loc_140A287AE

loc_140A287A2:                          ; CODE XREF: sub_140A1EEE4+98C8↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r9
                jb      short loc_140A287A2

loc_140A287AE:                          ; CODE XREF: sub_140A1EEE4+98BC↑j
                mov     r9d, edi
                mov     rbx, r11
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A2882F
                mov     r15, 7010008004002001h

loc_140A287C7:                          ; CODE XREF: sub_140A1EEE4+993F↓j
                mov     edx, 8

loc_140A287CC:                          ; CODE XREF: sub_140A1EEE4+9906↓j
                mov     rax, [r8]
                mov     ecx, r14d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A287CC
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1A70], rdx
                xor     r14d, eax
                mov     eax, 1
                and     r14d, 3Fh
                cmovz   r14d, eax
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A287C7
                mov     r15d, dword ptr [rsp+24B8h+var_2448]
                mov     r12d, dword ptr [rsp+24B8h+var_2450]

loc_140A2882F:                          ; CODE XREF: sub_140A1EEE4+98D7↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A28853
                mov     edx, edi
                shr     rdx, 3

loc_140A2883D:                          ; CODE XREF: sub_140A1EEE4+996D↓j
                xor     rbx, [r8]
                mov     ecx, r14d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, 1
                jnz     short loc_140A2883D

loc_140A28853:                          ; CODE XREF: sub_140A1EEE4+9951↑j
                test    edi, edi
                jz      short loc_140A2886C

loc_140A28857:                          ; CODE XREF: sub_140A1EEE4+9986↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r14d
                xor     rbx, rax
                inc     r8
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A28857

loc_140A2886C:                          ; CODE XREF: sub_140A1EEE4+9971↑j
                mov     rax, rbx
                shr     rax, 7
                xor     edx, edx
                jmp     short loc_140A2887D
; ---------------------------------------------------------------------------

loc_140A28877:                          ; CODE XREF: sub_140A1EEE4+999C↓j
                xor     bl, al
                shr     rax, 7

loc_140A2887D:                          ; CODE XREF: sub_140A1EEE4+9991↑j
                test    rax, rax
                jnz     short loc_140A28877
                mov     r14, [rsp+24B8h+var_2428]
                and     bl, 7Fh
                jmp     short loc_140A28893
; ---------------------------------------------------------------------------

loc_140A2888F:                          ; CODE XREF: sub_140A1EEE4+9883↑j
                                        ; sub_140A1EEE4+9893↑j
                xor     edx, edx
                mov     bl, 80h

loc_140A28893:                          ; CODE XREF: sub_140A1EEE4+99A9↑j
                mov     rdi, [rsp+24B8h+var_23E0]
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     rax, [rsp+24B8h+var_2438]

loc_140A288A7:                          ; CODE XREF: sub_140A1EEE4+97D5↑j
                mov     [rax], bl
                add     rdi, 0Ch
                mov     rax, [rsp+24B8h+var_2438]
                add     r14, 0Ch
                mov     rbx, [rsp+24B8h+var_2418]
                inc     rax
                mov     [rsp+24B8h+var_23E0], rdi
                mov     [rsp+24B8h+var_2438], rax
                mov     [rsp+24B8h+var_2428], r14
                cmp     r14, rbx
                jz      short loc_140A288EA
                mov     r15d, [r14+4]
                mov     dword ptr [rsp+24B8h+var_2448], r15d

loc_140A288EA:                          ; CODE XREF: sub_140A1EEE4+99FB↑j
                cmp     r15d, ecx
                jbe     loc_140A286A4
                jmp     short loc_140A288FA
; ---------------------------------------------------------------------------

loc_140A288F5:                          ; CODE XREF: sub_140A1EEE4+977F↑j
                mov     r12d, dword ptr [rsp+24B8h+var_2450]

loc_140A288FA:                          ; CODE XREF: sub_140A1EEE4+978D↑j
                                        ; sub_140A1EEE4+9796↑j ...
                test    r12d, r12d
                jnz     loc_140A28A75
                cmp     r13d, ecx
                jz      loc_140A28A75
                mov     rax, [rsp+24B8h+var_2420]
                lea     r15d, [r12+1]
                mov     r10, [rsp+24B8h+var_2410]
                mov     edi, ecx
                mov     [rax+0Ch], r13d
                mov     [rax+10h], ecx
                mov     eax, [rax+0Ch]
                sub     edi, eax
                add     r10, rax
                mov     r9d, edi
                add     r9, r10
                xor     eax, eax
                mov     edx, eax

loc_140A2893C:                          ; CODE XREF: sub_140A1EEE4+9A80↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_1020]
                mov     ecx, [rsp+rax*4+24B8h+var_1200]
                add     rcx, rbx
                cmp     r10, rcx
                jnb     short loc_140A2895E
                cmp     r9, rbx
                ja      loc_140A28A6D

loc_140A2895E:                          ; CODE XREF: sub_140A1EEE4+9A6F↑j
                add     edx, r15d
                cmp     edx, 6
                jb      short loc_140A2893C
                mov     rax, [rsp+24B8h+var_2468]
                mov     r8, r10
                add     [rax+828h], edi
                mov     r11d, [rax+814h]
                mov     r14, [rax+818h]
                mov     rax, r10
                cmp     r10, r9
                jnb     short loc_140A28996

loc_140A2898A:                          ; CODE XREF: sub_140A1EEE4+9AB0↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r9
                jb      short loc_140A2898A

loc_140A28996:                          ; CODE XREF: sub_140A1EEE4+9AA4↑j
                mov     r9d, edi
                mov     rbx, r14
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A28A07
                mov     rsi, 7010008004002001h

loc_140A289AF:                          ; CODE XREF: sub_140A1EEE4+9B21↓j
                mov     edx, 8

loc_140A289B4:                          ; CODE XREF: sub_140A1EEE4+9AED↓j
                mov     rax, [r8]
                mov     ecx, r11d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r15
                jnz     short loc_140A289B4
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1A68], rdx
                xor     r11d, eax
                and     r11d, 3Fh
                cmovz   r11d, r15d
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A289AF

loc_140A28A07:                          ; CODE XREF: sub_140A1EEE4+9ABF↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A28A2A
                mov     edx, edi
                shr     rdx, 3

loc_140A28A15:                          ; CODE XREF: sub_140A1EEE4+9B44↓j
                xor     rbx, [r8]
                mov     ecx, r11d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, r15
                jnz     short loc_140A28A15

loc_140A28A2A:                          ; CODE XREF: sub_140A1EEE4+9B29↑j
                test    edi, edi
                jz      short loc_140A28A43

loc_140A28A2E:                          ; CODE XREF: sub_140A1EEE4+9B5D↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r11d
                xor     rbx, rax
                add     r8, r15
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A28A2E

loc_140A28A43:                          ; CODE XREF: sub_140A1EEE4+9B48↑j
                mov     rax, rbx
                jmp     short loc_140A28A4A
; ---------------------------------------------------------------------------

loc_140A28A48:                          ; CODE XREF: sub_140A1EEE4+9B6D↓j
                xor     ebx, eax

loc_140A28A4A:                          ; CODE XREF: sub_140A1EEE4+9B62↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A28A48
                mov     r10, [rsp+24B8h+var_2420]
                btr     ebx, 1Fh
                mov     rdi, [rsp+24B8h+var_23E0]
                mov     [r10+14h], ebx
                jmp     short loc_140A28A7D
; ---------------------------------------------------------------------------

loc_140A28A6D:                          ; CODE XREF: sub_140A1EEE4+9A74↑j
                mov     rdi, [rsp+24B8h+var_23E0]

loc_140A28A75:                          ; CODE XREF: sub_140A1EEE4+9A19↑j
                                        ; sub_140A1EEE4+9A22↑j
                mov     r10, [rsp+24B8h+var_2420]

loc_140A28A7D:                          ; CODE XREF: sub_140A1EEE4+9B87↑j
                mov     rdx, [rsp+24B8h+var_2418]
                cmp     rdi, rdx
                jz      short loc_140A28AD6
                mov     eax, [rdi]
                mov     ecx, [rdi+4]
                cmp     eax, dword ptr [rsp+24B8h+var_2458]
                jb      short loc_140A28AD6
                cmp     ecx, dword ptr [rsp+24B8h+var_2460]
                ja      short loc_140A28AD6
                mov     rcx, [rsp+24B8h+var_2428]
                cmp     rcx, rdx
                jz      short loc_140A28ACA
                mov     rax, [rsp+24B8h+var_2438]
                mov     byte ptr [rax], 80h
                inc     rax
                add     rcx, 0Ch
                mov     [rsp+24B8h+var_2438], rax
                mov     [rsp+24B8h+var_2428], rcx

loc_140A28ACA:                          ; CODE XREF: sub_140A1EEE4+9BC2↑j
                add     rdi, 0Ch
                mov     [rsp+24B8h+var_23E0], rdi

loc_140A28AD6:                          ; CODE XREF: sub_140A1EEE4+9BA4↑j
                                        ; sub_140A1EEE4+9BAF↑j ...
                mov     r15, [rsp+24B8h+var_2430]
                add     r10, 18h
                mov     r11, [rsp+24B8h+var_2468]
                add     r15, 28h ; '('
                mov     [rsp+24B8h+var_2420], r10
                mov     [rsp+24B8h+var_2430], r15
                cmp     r10, [rsp+24B8h+var_2408]
                jnz     loc_140A2828C
                mov     rbx, [rsp+24B8h+var_1B00]

loc_140A28B11:                          ; CODE XREF: sub_140A1EEE4+8D23↑j
                                        ; sub_140A1EEE4+9398↑j
                mov     [rsp+24B8h+var_1B10], rbx
                xor     eax, eax

loc_140A28B1B:                          ; CODE XREF: sub_140A1EEE4+820D↑j
                mov     ecx, eax

loc_140A28B1D:                          ; CODE XREF: sub_140A1EEE4+872B↑j
                                        ; sub_140A1EEE4+8D4D↑j ...
                mov     r13d, 80000000h
                mov     [rsp+24B8h+var_1B80], rbx
                mov     r14, rbx
                lea     eax, [rcx+r13]
                test    r13d, eax
                jnz     short loc_140A28B43
                cmp     ecx, 0C000010Eh
                jnz     loc_140A28BDD

loc_140A28B43:                          ; CODE XREF: sub_140A1EEE4+816A↑j
                                        ; sub_140A1EEE4+9C51↑j
                mov     r15d, [rsp+24B8h+var_2400]
                mov     r12, [rsp+24B8h+var_23E8]
                and     r15d, 0FFFFFFEFh
                mov     rax, [rbx+1F8h]
                mov     rcx, r12
                or      r15d, r13d
                call    j__guard_dispatch_icall_nop
                mov     ecx, [rax+94h]
                cmp     ecx, 14h
                jb      short loc_140A28BF2
                mov     eax, [rax+90h]
                lea     rdi, [rax+rcx]
                add     rdi, r12
                lea     rbx, [rax+r12]

loc_140A28B85:                          ; CODE XREF: sub_140A1EEE4+9CF3↓j
                cmp     rbx, rdi
                jz      short loc_140A28BD9
                xor     eax, eax
                cmp     [rbx+0Ch], eax
                jz      short loc_140A28BDB
                mov     eax, [rbx+10h]
                test    eax, eax
                jz      short loc_140A28BD9
                mov     rdx, [rax+r12]
                test    rdx, rdx
                jz      short loc_140A28BD3
                mov     r8d, r15d
                lea     rcx, [rsp+24B8h+var_1B10]
                call    sub_140A0E0FC
                mov     r14, [rsp+24B8h+var_1B10]
                mov     ecx, eax
                add     eax, r13d
                mov     [rsp+24B8h+var_1B80], r14
                test    r13d, eax
                jnz     short loc_140A28BD3
                cmp     ecx, 0C000010Eh
                jnz     short loc_140A28BDD

loc_140A28BD3:                          ; CODE XREF: sub_140A1EEE4+9CBB↑j
                                        ; sub_140A1EEE4+9CE5↑j
                add     rbx, 14h
                jmp     short loc_140A28B85
; ---------------------------------------------------------------------------

loc_140A28BD9:                          ; CODE XREF: sub_140A1EEE4+9CA4↑j
                                        ; sub_140A1EEE4+9CB2↑j
                xor     eax, eax

loc_140A28BDB:                          ; CODE XREF: sub_140A1EEE4+9CAB↑j
                mov     ecx, eax

loc_140A28BDD:                          ; CODE XREF: sub_140A1EEE4+7F39↑j
                                        ; sub_140A1EEE4+9C59↑j ...
                lea     eax, [rcx+r13]
                test    r13d, eax
                jnz     short loc_140A28BF2
                cmp     ecx, 0C000010Eh
                jnz     loc_140A237B3

loc_140A28BF2:                          ; CODE XREF: sub_140A1EEE4+7EB7↑j
                                        ; sub_140A1EEE4+9C8E↑j ...
                xor     eax, eax

loc_140A28BF4:                          ; CODE XREF: sub_140A1EEE4+7C3F↑j
                                        ; sub_140A1EEE4+7C4C↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jz      loc_140A2A970
                sti
                mov     r12, [rsp+24B8h+var_1B18]
                lea     rdx, [rsp+24B8h+var_11E8]
                mov     rax, [r14+200h]
                mov     rcx, r12
                mov     [rsp+24B8h+var_2468], r12
                mov     [rsp+24B8h+var_1A60], r14
                call    j__guard_dispatch_icall_nop
                mov     r13, [rsp+24B8h+var_11E0]
                mov     r15d, [rsp+24B8h+var_11D4]
                mov     [rsp+24B8h+var_2430], rax
                xor     eax, eax
                mov     [rsp+24B8h+var_211C], r15d
                mov     [rsp+24B8h+var_2438], r13
                test    r13, r13
                jz      loc_140A237B3
                mov     [rsp+24B8h+var_13E8], rax
                mov     ecx, 4
                lea     rax, [rsp+24B8h+var_13E0]
                xor     edx, edx

loc_140A28C78:                          ; CODE XREF: sub_140A1EEE4+9D9C↓j
                mov     [rax], dl
                inc     rax
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A28C78
                xor     eax, eax
                mov     r11d, eax
                cmp     [r14+80Ch], eax
                jbe     loc_140A28E63
                mov     edx, [rsp+24B8h+var_13E0]
                mov     edi, dword ptr [rsp+24B8h+var_13E8+4]
                mov     r8d, dword ptr [rsp+24B8h+var_13E8]

loc_140A28CAA:                          ; CODE XREF: sub_140A1EEE4+9F77↓j
                mov     rax, [r14+0A78h]
                mov     r10, r14
                test    rax, rax
                cmovnz  r10, rax
                xor     eax, eax
                mov     r9d, eax
                mov     ebx, [r10+808h]
                add     rbx, r10
                test    r8d, r8d
                jz      short loc_140A28CDC
                cmp     edi, r11d
                ja      short loc_140A28CDC
                mov     ebx, edx
                mov     r9d, edi
                add     rbx, r10

loc_140A28CDC:                          ; CODE XREF: sub_140A1EEE4+9DE9↑j
                                        ; sub_140A1EEE4+9DEE↑j
                cmp     r9d, r11d
                jz      loc_140A28DF2
                mov     eax, r11d
                mov     r12, 0AAAAAAAAAAAAAAABh
                sub     eax, r9d
                mov     edi, eax
                add     r9d, eax

loc_140A28CFA:                          ; CODE XREF: sub_140A1EEE4+9EFB↓j
                mov     ecx, [rbx]
                cmp     ecx, 0Ch
                jg      short loc_140A28D43
                jz      short loc_140A28D60
                sub     ecx, 1
                jz      short loc_140A28D60
                sub     ecx, 6
                jz      short loc_140A28D32
                sub     ecx, 1
                jz      short loc_140A28D29
                cmp     ecx, 2
                jnz     loc_140A28D9C
                mov     eax, [rbx+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A28DD8
; ---------------------------------------------------------------------------

loc_140A28D29:                          ; CODE XREF: sub_140A1EEE4+9E2C↑j
                movzx   eax, word ptr [rbx+20h]
                jmp     loc_140A28DD2
; ---------------------------------------------------------------------------

loc_140A28D32:                          ; CODE XREF: sub_140A1EEE4+9E27↑j
                mov     eax, [rbx+18h]
                add     eax, 2
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A28DD8
; ---------------------------------------------------------------------------

loc_140A28D43:                          ; CODE XREF: sub_140A1EEE4+9E1B↑j
                cmp     ecx, 1Ch
                jz      loc_140A28DCE
                cmp     ecx, 1Eh
                jz      short loc_140A28DA3
                cmp     ecx, 20h ; ' '
                jle     short loc_140A28D9C
                cmp     ecx, 22h ; '"'
                jle     short loc_140A28D76
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A28D9C

loc_140A28D60:                          ; CODE XREF: sub_140A1EEE4+9E1D↑j
                                        ; sub_140A1EEE4+9E22↑j
                mov     ecx, [rbx+10h]
                mov     rax, r12
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A28DD8
; ---------------------------------------------------------------------------

loc_140A28D76:                          ; CODE XREF: sub_140A1EEE4+9E75↑j
                mov     ecx, [rbx+20h]
                mov     edx, [rbx+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A28DD8
; ---------------------------------------------------------------------------

loc_140A28D9C:                          ; CODE XREF: sub_140A1EEE4+9E31↑j
                                        ; sub_140A1EEE4+9E70↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A28DD8
; ---------------------------------------------------------------------------

loc_140A28DA3:                          ; CODE XREF: sub_140A1EEE4+9E6B↑j
                mov     eax, [rbx+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r12
                mul     rcx
                movzx   eax, word ptr [rbx+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, 2
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A28DD8
; ---------------------------------------------------------------------------

loc_140A28DCE:                          ; CODE XREF: sub_140A1EEE4+9E62↑j
                movzx   eax, word ptr [rbx+28h]

loc_140A28DD2:                          ; CODE XREF: sub_140A1EEE4+9E49↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A28DD8:                          ; CODE XREF: sub_140A1EEE4+9E40↑j
                                        ; sub_140A1EEE4+9E5A↑j ...
                add     rbx, rax
                sub     rdi, 1
                jnz     loc_140A28CFA
                mov     r12, [rsp+24B8h+var_2468]
                mov     r13, [rsp+24B8h+var_2438]

loc_140A28DF2:                          ; CODE XREF: sub_140A1EEE4+9DFB↑j
                mov     edx, ebx
                mov     dword ptr [rsp+24B8h+var_13E8+4], r9d
                sub     edx, r10d
                mov     r8d, 1
                mov     [rsp+24B8h+var_13E0], edx
                mov     edi, r9d
                mov     dword ptr [rsp+24B8h+var_13E8], r8d
                movsxd  rcx, dword ptr [rbx]
                cmp     ecx, 2Bh ; '+'
                ja      short loc_140A28E43
                mov     r9, 80000001002h
                bt      r9, rcx
                jnb     short loc_140A28E43
                mov     rax, [rsp+24B8h+var_2430]
                cmp     [rbx+8], rax
                jnz     short loc_140A28E43
                cmp     [rbx+10h], r15d
                jz      short loc_140A28E66

loc_140A28E43:                          ; CODE XREF: sub_140A1EEE4+9F39↑j
                                        ; sub_140A1EEE4+9F49↑j ...
                lea     eax, [rcx-21h]
                cmp     eax, r8d
                ja      short loc_140A28E51
                cmp     [rbx+20h], r13
                jz      short loc_140A28E66

loc_140A28E51:                          ; CODE XREF: sub_140A1EEE4+9F65↑j
                inc     r11d
                cmp     r11d, [r14+80Ch]
                jb      loc_140A28CAA
                xor     eax, eax

loc_140A28E63:                          ; CODE XREF: sub_140A1EEE4+9DAA↑j
                mov     rbx, rax

loc_140A28E66:                          ; CODE XREF: sub_140A1EEE4+9F5D↑j
                                        ; sub_140A1EEE4+9F6B↑j
                mov     [rsp+24B8h+var_1A58], rbx
                test    rbx, rbx
                jnz     loc_140A2A943
                mov     rax, [r14+2A8h]
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                mov     ebx, [rsp+24B8h+var_2400]
                mov     r15d, eax
                mov     dword ptr [rsp+24B8h+var_2450], eax
                mov     eax, [rsp+24B8h+var_211C]
                mov     dword ptr [rsp+24B8h+var_2458], eax
                test    bl, 10h
                jz      short loc_140A28ED9
                test    dword ptr [r14+994h], 400h
                jnz     short loc_140A28EBB
                and     ebx, 0FFFFFFEFh
                mov     [rsp+24B8h+var_2400], ebx

loc_140A28EBB:                          ; CODE XREF: sub_140A1EEE4+9FCB↑j
                test    bl, 10h
                jz      short loc_140A28ED9
                mov     rdx, r13
                mov     rcx, r14
                call    sub_140A11C50
                test    eax, eax
                jnz     short loc_140A28ED9
                and     ebx, 0FFFFFFEFh
                mov     [rsp+24B8h+var_2400], ebx

loc_140A28ED9:                          ; CODE XREF: sub_140A1EEE4+9FBE↑j
                                        ; sub_140A1EEE4+9FDA↑j ...
                test    dword ptr [r14+990h], 40000000h
                jz      short loc_140A28F06
                mov     r8d, ebx
                lea     rcx, [rsp+24B8h+var_1B80]
                mov     rdx, r13
                call    sub_140A1DFE4
                mov     r14, [rsp+24B8h+var_1B80]
                jmp     loc_140A2A927
; ---------------------------------------------------------------------------

loc_140A28F06:                          ; CODE XREF: sub_140A1EEE4+A000↑j
                xor     eax, eax
                lea     r9, [rsp+24B8h+var_211C]
                xor     r8d, r8d
                mov     [rsp+24B8h+var_FD0], rax
                mov     [rsp+24B8h+var_11C0], eax
                mov     rcx, r13
                mov     rax, [r14+1F0h]
                lea     edi, [r8+1]
                mov     dl, dil
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                lea     r8d, [rdi+0Bh]
                neg     rax
                mov     [rsp+24B8h+var_FE8], rdx
                lea     r9, [rsp+24B8h+var_211C]
                mov     dl, dil
                sbb     ecx, ecx
                and     ecx, [rsp+24B8h+var_211C]
                mov     [rsp+24B8h+var_211C], ecx
                mov     rax, [r14+1F0h]
                mov     [rsp+24B8h+var_11CC], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                mov     [rsp+24B8h+var_2468], rax
                neg     rax
                mov     [rsp+24B8h+var_FE0], rdx
                lea     r8d, [rdi+9]
                mov     dl, dil
                sbb     ecx, ecx
                lea     r9, [rsp+24B8h+var_211C]
                and     ecx, [rsp+24B8h+var_211C]
                mov     [rsp+24B8h+var_211C], ecx
                mov     rax, [r14+1F0h]
                mov     dword ptr [rsp+24B8h+var_2460], ecx
                mov     [rsp+24B8h+var_11C8], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                neg     rax
                mov     [rsp+24B8h+var_FD8], rdx
                sbb     ecx, ecx
                and     ecx, [rsp+24B8h+var_211C]
                mov     [rsp+24B8h+var_211C], ecx
                mov     rax, [r14+1F8h]
                mov     [rsp+24B8h+var_11C4], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     rax, [r14+498h]
                lea     rdx, [rsp+24B8h+var_1A50]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r8d, [r14+924h]
                mov     [rsp+24B8h+var_FC8], rax
                mov     eax, [rsp+24B8h+var_1A50]
                mov     [rsp+24B8h+var_11BC], eax
                mov     eax, [rbx+54h]
                mov     [rsp+24B8h+var_11D0], eax
                mov     eax, r15d
                neg     eax
                mov     [rsp+24B8h+var_FF0], r13
                mov     r13d, [r14+7E4h]
                sbb     ebx, ebx
                and     ebx, 0Bh
                mov     dword ptr [rsp+24B8h+var_2448], ebx
                lea     eax, [r13+120h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A29161
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     r15, rax
                mov     [rsp+24B8h+var_2420], rax
                xor     eax, eax
                test    r15, r15
                jz      loc_140A237B3
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A29157
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A290E4
                mov     ecx, eax
                shr     rcx, 3
                xor     ebx, ebx

loc_140A290D4:                          ; CODE XREF: sub_140A1EEE4+A1FE↓j
                mov     [r14], rbx
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, 1
                jnz     short loc_140A290D4

loc_140A290E4:                          ; CODE XREF: sub_140A1EEE4+A1E6↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A290F5

loc_140A290EA:                          ; CODE XREF: sub_140A1EEE4+A20F↓j
                mov     [r14], cl
                inc     r14
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A290EA

loc_140A290F5:                          ; CODE XREF: sub_140A1EEE4+A204↑j
                mov     ebx, [r15+924h]
                mov     [r15+924h], edx
                cmp     edx, 3
                jz      short loc_140A29138
                test    dword ptr [r15+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2912F
                mov     rax, [r15+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A29147
; ---------------------------------------------------------------------------

loc_140A2912F:                          ; CODE XREF: sub_140A1EEE4+A234↑j
                mov     rax, [r15+100h]
                jmp     short loc_140A2913F
; ---------------------------------------------------------------------------

loc_140A29138:                          ; CODE XREF: sub_140A1EEE4+A222↑j
                mov     rax, [r15+368h]

loc_140A2913F:                          ; CODE XREF: sub_140A1EEE4+A252↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A29147:                          ; CODE XREF: sub_140A1EEE4+A249↑j
                mov     [r15+924h], ebx
                mov     edi, 1
                mov     ebx, dword ptr [rsp+24B8h+var_2448]

loc_140A29157:                          ; CODE XREF: sub_140A1EEE4+A1BE↑j
                and     dword ptr [r15+990h], 0FFFFFFFBh
                jmp     short loc_140A29173
; ---------------------------------------------------------------------------

loc_140A29161:                          ; CODE XREF: sub_140A1EEE4+A18E↑j
                mov     r15, r14
                mov     [rsp+24B8h+var_2420], r14
                mov     [r14+7E4h], eax

loc_140A29173:                          ; CODE XREF: sub_140A1EEE4+A27B↑j
                lea     r14, [r15+r13]
                mov     edx, 6
                add     [r15+80Ch], edx
                lea     r13, [rsp+24B8h+var_FF0]
                xor     r8d, r8d
                mov     [rsp+24B8h+var_1A48], r14
                mov     [rsp+24B8h+var_1A58], r14
                lea     rsi, [rsp+24B8h+var_11D0]
                mov     [rsp+24B8h+var_2428], r13
                mov     [rsp+24B8h+var_2410], rdx

loc_140A291B6:                          ; CODE XREF: sub_140A1EEE4+A464↓j
                mov     r12d, [rsi]
                mov     ecx, 30h ; '0'
                mov     r11, [r13+0]
                mov     rax, r14

loc_140A291C5:                          ; CODE XREF: sub_140A1EEE4+A2EE↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rdi
                jnz     short loc_140A291C5
                test    ecx, ecx
                jz      short loc_140A291E3

loc_140A291D8:                          ; CODE XREF: sub_140A1EEE4+A2FD↓j
                mov     [rax], r8b
                add     rax, rdi
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A291D8

loc_140A291E3:                          ; CODE XREF: sub_140A1EEE4+A2F2↑j
                mov     [r14], ebx
                lea     rcx, [r11+r12]
                mov     [r14+8], r11
                mov     r8, r11
                mov     [r14+10h], r12d
                mov     rax, r11
                add     [r15+828h], r12d
                mov     r10d, [r15+814h]
                mov     r9, [r15+818h]
                cmp     r11, rcx
                jnb     short loc_140A2921E

loc_140A29212:                          ; CODE XREF: sub_140A1EEE4+A338↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A29212

loc_140A2921E:                          ; CODE XREF: sub_140A1EEE4+A32C↑j
                mov     edi, r12d
                mov     rbx, r9
                shr     edi, 7
                test    edi, edi
                jz      short loc_140A292A2
                mov     r13, 7010008004002001h

loc_140A29235:                          ; CODE XREF: sub_140A1EEE4+A3AC↓j
                mov     edx, 8

loc_140A2923A:                          ; CODE XREF: sub_140A1EEE4+A374↓j
                mov     rax, [r8]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A2923A
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r9
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1A40], rdx
                xor     r10d, eax
                mov     eax, 1
                and     r10d, 3Fh
                cmovz   r10d, eax
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A29235
                mov     r15, [rsp+24B8h+var_2420]
                mov     r13, [rsp+24B8h+var_2428]

loc_140A292A2:                          ; CODE XREF: sub_140A1EEE4+A345↑j
                mov     edx, r12d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A292D1
                mov     edi, edx
                shr     rdi, 3

loc_140A292B3:                          ; CODE XREF: sub_140A1EEE4+A3E3↓j
                xor     rbx, [r8]
                mov     ecx, r10d
                rol     rbx, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     rdi, 1
                jnz     short loc_140A292B3
                mov     r15, [rsp+24B8h+var_2420]

loc_140A292D1:                          ; CODE XREF: sub_140A1EEE4+A3C7↑j
                mov     edi, 1
                test    edx, edx
                jz      short loc_140A292EF

loc_140A292DA:                          ; CODE XREF: sub_140A1EEE4+A409↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rbx, rax
                add     r8, rdi
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A292DA

loc_140A292EF:                          ; CODE XREF: sub_140A1EEE4+A3F4↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r8d, r8d
                jmp     short loc_140A29301
; ---------------------------------------------------------------------------

loc_140A292FB:                          ; CODE XREF: sub_140A1EEE4+A420↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A29301:                          ; CODE XREF: sub_140A1EEE4+A415↑j
                test    rax, rax
                jnz     short loc_140A292FB
                btr     ebx, 1Fh
                lea     edx, [rax+6]
                mov     [r14+14h], ebx
                add     r13, 8
                add     [r15+828h], r12d
                add     rsi, 4
                mov     r14, [rsp+24B8h+var_1A48]
                mov     ebx, dword ptr [rsp+24B8h+var_2448]
                add     r14, 30h ; '0'
                sub     [rsp+24B8h+var_2410], rdi
                mov     [rsp+24B8h+var_1A48], r14
                mov     [rsp+24B8h+var_2428], r13
                jnz     loc_140A291B6
                mov     rbx, [rsp+24B8h+var_1A58]
                mov     r12, [rsp+24B8h+var_2438]
                mov     r13d, dword ptr [rsp+24B8h+var_2450]
                mov     dword ptr [rbx], 2Ch ; ','
                mov     [rbx+18h], r12
                mov     eax, [r15+990h]
                bt      eax, 1Ch
                jb      short loc_140A293A8
                bt      eax, 15h
                jb      short loc_140A293A8
                test    r13d, r13d
                jnz     short loc_140A293AD
                test    dword ptr [r15+994h], 8000h
                jz      short loc_140A293B1
                or      [rbx+20h], edi
                mov     rdx, r12
                mov     rcx, r15
                call    sub_140A11C50
                test    eax, eax
                jz      short loc_140A293B1
                or      dword ptr [rbx+20h], 4

loc_140A293A8:                          ; CODE XREF: sub_140A1EEE4+A494↑j
                                        ; sub_140A1EEE4+A49A↑j
                test    r13d, r13d
                jz      short loc_140A293B1

loc_140A293AD:                          ; CODE XREF: sub_140A1EEE4+A49F↑j
                or      dword ptr [rbx+20h], 2

loc_140A293B1:                          ; CODE XREF: sub_140A1EEE4+A4AC↑j
                                        ; sub_140A1EEE4+A4BE↑j ...
                mov     r8d, dword ptr [rsp+24B8h+var_2458]
                lea     rax, [rsp+24B8h+var_2118]
                mov     rdx, [rsp+24B8h+var_2430]
                lea     rcx, [rsp+24B8h+var_1A60]
                mov     [rsp+24B8h+var_2480], rax
                mov     r9, r12
                lea     rax, [rsp+24B8h+var_2114]
                mov     [rsp+24B8h+var_1A60], r15
                mov     [rsp+24B8h+var_2488], rax
                mov     r14, r15
                mov     eax, [rsp+24B8h+var_2400]
                mov     dword ptr [rsp+24B8h+var_2490], eax
                mov     dword ptr [rsp+24B8h+var_2498], r13d
                mov     [rsp+24B8h+var_1B80], r15
                call    sub_140A10098
                mov     ecx, eax
                test    eax, eax
                js      loc_140A2A929
                mov     rdi, [rsp+24B8h+var_1A60]
                mov     rcx, [rsp+24B8h+var_1A58]
                mov     rax, rdi
                mov     r14d, [rsp+24B8h+var_2114]
                sub     rax, r15
                mov     r8d, [rsp+24B8h+var_2118]
                add     rcx, rax
                sub     r8d, [rsp+24B8h+var_2114]
                add     r14, r12
                mov     [rsp+24B8h+var_1A58], rcx
                xor     ebx, ebx
                mov     [rsp+24B8h+var_1B80], rdi
                lea     r12, [rcx+0C0h]
                mov     ecx, 30h ; '0'
                mov     rax, r12
                lea     edx, [rcx-2Ah]

loc_140A2946D:                          ; CODE XREF: sub_140A1EEE4+A597↓j
                mov     [rax], rbx
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, 1
                jnz     short loc_140A2946D
                mov     edx, 1
                test    ecx, ecx
                jz      short loc_140A29490

loc_140A29486:                          ; CODE XREF: sub_140A1EEE4+A5AA↓j
                mov     [rax], bl
                add     rax, rdx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A29486

loc_140A29490:                          ; CODE XREF: sub_140A1EEE4+A5A0↑j
                mov     eax, dword ptr [rsp+24B8h+var_2448]
                mov     r9, r14
                mov     [r12], eax
                mov     rax, r14
                mov     [r12+8], r14
                mov     [r12+10h], r8d
                add     [rdi+828h], r8d
                mov     r11d, [rdi+814h]
                mov     r15, [rdi+818h]
                mov     ecx, r8d
                add     rcx, r14
                cmp     r14, rcx
                jnb     short loc_140A294D4

loc_140A294C8:                          ; CODE XREF: sub_140A1EEE4+A5EE↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A294C8

loc_140A294D4:                          ; CODE XREF: sub_140A1EEE4+A5E2↑j
                mov     r10d, r8d
                mov     rbx, r15
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A29550
                mov     rsi, 7010008004002001h

loc_140A294ED:                          ; CODE XREF: sub_140A1EEE4+A665↓j
                mov     edx, 8

loc_140A294F2:                          ; CODE XREF: sub_140A1EEE4+A62C↓j
                mov     rax, [r9]
                mov     ecx, r11d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A294F2
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1A38], rdx
                xor     r11d, eax
                mov     edx, 1
                and     r11d, 3Fh
                cmovz   r11d, edx
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A294ED
                mov     r13d, dword ptr [rsp+24B8h+var_2450]

loc_140A29550:                          ; CODE XREF: sub_140A1EEE4+A5FD↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A29582
                mov     edx, r8d
                shr     rdx, 3

loc_140A29561:                          ; CODE XREF: sub_140A1EEE4+A692↓j
                xor     rbx, [r9]
                mov     ecx, r11d
                rol     rbx, cl
                add     r9, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, 1
                jnz     short loc_140A29561
                mov     r13d, dword ptr [rsp+24B8h+var_2450]
                mov     edx, 1

loc_140A29582:                          ; CODE XREF: sub_140A1EEE4+A674↑j
                test    r8d, r8d
                jz      short loc_140A2959D

loc_140A29587:                          ; CODE XREF: sub_140A1EEE4+A6B7↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r11d
                xor     rbx, rax
                add     r9, rdx
                rol     rbx, cl
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A29587

loc_140A2959D:                          ; CODE XREF: sub_140A1EEE4+A6A1↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     ecx, ecx
                jmp     short loc_140A295AE
; ---------------------------------------------------------------------------

loc_140A295A8:                          ; CODE XREF: sub_140A1EEE4+A6CD↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A295AE:                          ; CODE XREF: sub_140A1EEE4+A6C2↑j
                test    rax, rax
                jnz     short loc_140A295A8
                btr     ebx, 1Fh
                mov     [r12+14h], ebx
                mov     rdx, [rsp+24B8h+var_1A58]
                mov     dword ptr [rdx+0F0h], 30h ; '0'
                cmp     [rdx+100h], eax
                jz      short loc_140A295ED
                mov     eax, [rdx+108h]
                test    r13d, r13d
                setnz   cl
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [rdx+108h], ecx

loc_140A295ED:                          ; CODE XREF: sub_140A1EEE4+A6F0↑j
                mov     rcx, [rsp+24B8h+var_1A58]
                mov     ebx, 1
                and     [rsp+24B8h+var_2400], ebx
                add     rcx, 60h ; '`'
                mov     eax, r13d
                mov     [rsp+24B8h+var_1B80], rdi
                neg     eax
                mov     [rsp+24B8h+var_1A30], rcx
                sbb     r12d, r12d
                neg     r12d
                add     r12d, 0Dh
                test    rcx, rcx
                jnz     loc_140A298A1
                mov     r15d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                lea     eax, [r15+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A29724
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A2971A
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A296AC
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2969D:                          ; CODE XREF: sub_140A1EEE4+A7C6↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, rbx
                jnz     short loc_140A2969D

loc_140A296AC:                          ; CODE XREF: sub_140A1EEE4+A7AE↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A296BC

loc_140A296B2:                          ; CODE XREF: sub_140A1EEE4+A7D6↓j
                mov     [rdi], cl
                add     rdi, rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A296B2

loc_140A296BC:                          ; CODE XREF: sub_140A1EEE4+A7CC↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A296FF
                test    dword ptr [r14+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A296F6
                mov     rax, [r14+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2970E
; ---------------------------------------------------------------------------

loc_140A296F6:                          ; CODE XREF: sub_140A1EEE4+A7FB↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A29706
; ---------------------------------------------------------------------------

loc_140A296FF:                          ; CODE XREF: sub_140A1EEE4+A7E9↑j
                mov     rax, [r14+368h]

loc_140A29706:                          ; CODE XREF: sub_140A1EEE4+A819↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2970E:                          ; CODE XREF: sub_140A1EEE4+A810↑j
                mov     [r14+924h], ebx
                mov     ebx, 1

loc_140A2971A:                          ; CODE XREF: sub_140A1EEE4+A788↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                jmp     short loc_140A2972D
; ---------------------------------------------------------------------------

loc_140A29724:                          ; CODE XREF: sub_140A1EEE4+A761↑j
                mov     r14, rdi
                mov     [rdi+7E4h], eax

loc_140A2972D:                          ; CODE XREF: sub_140A1EEE4+A83E↑j
                add     [r14+80Ch], ebx
                lea     r11, [r14+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1A28], r11
                mov     rax, r11
                xor     edi, edi
                lea     edx, [rcx-2Ah]

loc_140A2974D:                          ; CODE XREF: sub_140A1EEE4+A876↓j
                mov     [rax], rdi
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_140A2974D
                test    ecx, ecx
                jz      short loc_140A2976B

loc_140A29760:                          ; CODE XREF: sub_140A1EEE4+A885↓j
                mov     [rax], dil
                add     rax, rbx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A29760

loc_140A2976B:                          ; CODE XREF: sub_140A1EEE4+A87A↑j
                mov     r15d, dword ptr [rsp+24B8h+var_2460]
                mov     [r11], r12d
                mov     r12, [rsp+24B8h+var_2468]
                mov     [r11+8], r12
                mov     rdi, r12
                mov     [r11+10h], r15d
                add     [r14+828h], r15d
                mov     r8d, [r14+814h]
                lea     rcx, [r12+r15]
                mov     r10, [r14+818h]
                cmp     r12, rcx
                jnb     short loc_140A297B0
                mov     rax, r12

loc_140A297A4:                          ; CODE XREF: sub_140A1EEE4+A8CA↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A297A4

loc_140A297B0:                          ; CODE XREF: sub_140A1EEE4+A8BB↑j
                mov     r9d, r15d
                mov     rbx, r10
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A2982C
                mov     rsi, 7010008004002001h
                mov     r13d, 1

loc_140A297CF:                          ; CODE XREF: sub_140A1EEE4+A93C↓j
                mov     eax, 8

loc_140A297D4:                          ; CODE XREF: sub_140A1EEE4+A907↓j
                xor     rbx, [rdi]
                mov     ecx, r8d
                rol     rbx, cl
                xor     rbx, [rdi+8]
                add     rdi, 10h
                rol     rbx, cl
                sub     rax, r13
                jnz     short loc_140A297D4
                mov     rcx, rdi
                sub     rcx, r12
                xor     rcx, r10
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r8d, eax
                mov     [rsp+24B8h+var_1A20], rdx
                xor     r8d, edx
                and     r8d, 3Fh
                cmovz   r8d, r13d
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A297CF
                mov     r15d, dword ptr [rsp+24B8h+var_2460]
                mov     r13d, dword ptr [rsp+24B8h+var_2450]

loc_140A2982C:                          ; CODE XREF: sub_140A1EEE4+A8D9↑j
                mov     edx, r15d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A29853
                mov     eax, edx
                shr     rax, 3

loc_140A2983D:                          ; CODE XREF: sub_140A1EEE4+A96D↓j
                xor     rbx, [rdi]
                mov     ecx, r8d
                rol     rbx, cl
                add     rdi, 8
                add     edx, 0FFFFFFF8h
                sub     rax, 1
                jnz     short loc_140A2983D

loc_140A29853:                          ; CODE XREF: sub_140A1EEE4+A951↑j
                test    edx, edx
                jz      short loc_140A2986B

loc_140A29857:                          ; CODE XREF: sub_140A1EEE4+A985↓j
                movzx   eax, byte ptr [rdi]
                mov     ecx, r8d
                xor     rbx, rax
                inc     rdi
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A29857

loc_140A2986B:                          ; CODE XREF: sub_140A1EEE4+A971↑j
                mov     rax, rbx
                jmp     short loc_140A29872
; ---------------------------------------------------------------------------

loc_140A29870:                          ; CODE XREF: sub_140A1EEE4+A995↓j
                xor     ebx, eax

loc_140A29872:                          ; CODE XREF: sub_140A1EEE4+A98A↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A29870
                btr     ebx, 1Fh
                mov     [r11+14h], ebx
                mov     ebx, 1
                mov     rax, [rsp+24B8h+var_1A28]
                mov     [rsp+24B8h+var_1A30], rax
                add     [r14+828h], r15d
                jmp     short loc_140A298B1
; ---------------------------------------------------------------------------

loc_140A298A1:                          ; CODE XREF: sub_140A1EEE4+A743↑j
                mov     r15d, dword ptr [rsp+24B8h+var_2460]
                mov     r14, rdi
                mov     [rcx], r12d
                mov     r12, [rsp+24B8h+var_2468]

loc_140A298B1:                          ; CODE XREF: sub_140A1EEE4+A9BB↑j
                test    dword ptr [r14+990h], 40000000h
                jz      short loc_140A298DD
                test    r15d, r15d
                jz      short loc_140A298DD
                mov     r9, [rsp+24B8h+var_1A30]
                mov     r8d, r15d
                add     r9, 1Ch
                mov     rdx, r12
                mov     rcx, r14
                call    sub_1403EA0CC

loc_140A298DD:                          ; CODE XREF: sub_140A1EEE4+A9D8↑j
                                        ; sub_140A1EEE4+A9DD↑j
                mov     rax, [rsp+24B8h+var_1A30]
                xor     ecx, ecx
                mov     [rax+18h], ecx
                xor     eax, eax
                cmp     [rsp+24B8h+var_2400], eax
                jz      short loc_140A29902
                mov     rax, [rsp+24B8h+var_1A30]
                or      [rax+18h], ebx
                xor     eax, eax

loc_140A29902:                          ; CODE XREF: sub_140A1EEE4+AA0F↑j
                mov     rbx, [rsp+24B8h+var_1A58]
                mov     ecx, eax
                mov     r15, [rsp+24B8h+var_2438]
                test    r13d, r13d
                setnz   cl
                mov     dword ptr [rbx+90h], 23h ; '#'
                mov     eax, [rbx+0B8h]
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [rbx+0B8h], ecx
                cmp     dword ptr [rbx+0A0h], 94h
                jb      short loc_140A299AB
                mov     rax, [r14+1F8h]
                mov     rcx, r15
                mov     rdi, [rbx+98h]
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rax+50h]
                or      dword ptr [rbx+0B8h], 2
                add     rcx, r15
                mov     rax, [rdi+70h]
                cmp     rax, r15
                jb      short loc_140A2998C
                cmp     rax, rcx
                jnb     short loc_140A2998C
                mov     rax, [rax]
                mov     [rbx+0A8h], rax
                or      dword ptr [rbx+0B8h], 4

loc_140A2998C:                          ; CODE XREF: sub_140A1EEE4+AA90↑j
                                        ; sub_140A1EEE4+AA95↑j
                mov     rax, [rdi+78h]
                cmp     rax, r15
                jb      short loc_140A299AB
                cmp     rax, rcx
                jnb     short loc_140A299AB
                mov     rax, [rax]
                mov     [rbx+0B0h], rax
                or      dword ptr [rbx+0B8h], 8

loc_140A299AB:                          ; CODE XREF: sub_140A1EEE4+AA5B↑j
                                        ; sub_140A1EEE4+AAAF↑j ...
                test    dword ptr [r14+990h], 400000h
                mov     [rsp+24B8h+var_1A60], r14
                mov     [rsp+24B8h+var_1B80], r14
                jz      loc_140A2A91D
                mov     rax, [r14+1F8h]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     [rsp+24B8h+var_2468], rax
                mov     r13, rax
                test    rax, rax
                jnz     short loc_140A299F2

loc_140A299E8:                          ; CODE XREF: sub_140A1EEE4+AB5A↓j
                                        ; sub_140A1EEE4+ABA0↓j ...
                mov     ecx, 0C000007Bh
                jmp     loc_140A2A929
; ---------------------------------------------------------------------------

loc_140A299F2:                          ; CODE XREF: sub_140A1EEE4+AB02↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2458]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                xor     eax, eax
                mov     rdi, rdx
                movzx   edx, word ptr [r13+6]
                shr     rdi, 3
                mov     [rsp+24B8h+var_2420], rdi
                mov     word ptr [rsp+24B8h+var_2408], dx
                test    dx, dx
                jnz     short loc_140A29A89
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A39579

loc_140A29A37:                          ; CODE XREF: sub_140A1EEE4+AE4C↓j
                                        ; sub_140A1EEE4+AE64↓j
                cmp     [r14+8F8h], eax
                jnz     short loc_140A299E8
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, r14
                mov     [r14+900h], rax
                xor     eax, eax
                mov     [r14+908h], rax
                mov     qword ptr [r14+910h], 10Fh
                mov     [r14+918h], r15
                mov     dword ptr [r14+8F8h], 1

loc_140A29A7A:                          ; CODE XREF: sub_140A1EEE4+AECE↓j
                xor     edx, edx
                mov     rcx, r14
                call    sub_140A113CC
                jmp     loc_140A299E8
; ---------------------------------------------------------------------------

loc_140A29A89:                          ; CODE XREF: sub_140A1EEE4+AB40↑j
                mov     r12, [rsp+24B8h+var_2430]
                movzx   r8d, word ptr [r13+14h]
                add     r8, 18h
                movzx   r9d, dx
                add     r8, r13
                mov     eax, edi
                mov     [rsp+24B8h+var_23E8], r8
                mov     dword ptr [rsp+24B8h+var_2448], r9d
                lea     rax, [rax+rax*2]
                shl     rax, 2
                mov     [rsp+24B8h+var_2428], rax
                add     rax, r12
                mov     [rsp+24B8h+var_2410], rax
                xor     eax, eax
                mov     dword ptr [rsp+24B8h+var_2460], eax
                mov     ecx, eax
                test    r9d, r9d
                jz      loc_140A29D4D

loc_140A29ADC:                          ; CODE XREF: sub_140A1EEE4+AE22↓j
                mov     eax, ecx
                lea     rdx, [rax+rax*4]
                mov     r13d, [r8+rdx*8+10h]
                mov     eax, [r8+rdx*8+8]
                cmp     r13d, eax
                mov     ebx, [r8+rdx*8+0Ch]
                cmovbe  r13d, eax
                mov     [rsp+24B8h+var_2418], rdx
                add     r13d, ebx
                mov     dword ptr [rsp+24B8h+var_2440], ebx
                test    ecx, ecx
                jz      short loc_140A29B21
                lea     eax, [rcx-1]
                lea     rax, [rax+rax*4]
                cmp     r13d, [r8+rax*8+0Ch]
                jb      loc_140A29D1D
                mov     ecx, dword ptr [rsp+24B8h+var_2460]

loc_140A29B21:                          ; CODE XREF: sub_140A1EEE4+AC25↑j
                cmp     r12, [rsp+24B8h+var_2410]
                jz      loc_140A29CF8

loc_140A29B2F:                          ; CODE XREF: sub_140A1EEE4+AE05↓j
                mov     ecx, [r12]
                mov     eax, [r12+4]
                cmp     ecx, r13d
                jnb     loc_140A29CEF
                cmp     eax, ebx
                jbe     loc_140A29CEF
                cmp     ecx, ebx
                jb      loc_140A29D35
                cmp     eax, r13d
                ja      loc_140A29D35
                mov     eax, [r12+8]
                test    al, 1
                jnz     short loc_140A29B6F
                mov     al, [rax+r15]
                test    al, 20h
                jz      loc_140A29CDD

loc_140A29B6F:                          ; CODE XREF: sub_140A1EEE4+AC7D↑j
                mov     eax, [r8+rdx*8+8]
                mov     rcx, r12
                mov     ebx, [r8+rdx*8+10h]
                cmp     ebx, eax
                mov     r15d, [r8+rdx*8+0Ch]
                mov     rdx, [rsp+24B8h+var_2438]
                cmovbe  ebx, eax
                mov     rax, [r14+418h]
                add     ebx, r15d
                call    j__guard_dispatch_icall_nop
                mov     rdi, rax
                cmp     [rax], r15d
                jb      short loc_140A29BAA
                cmp     [rax+4], ebx
                jbe     short loc_140A29C1E

loc_140A29BAA:                          ; CODE XREF: sub_140A1EEE4+ACBF↑j
                mov     r8, [rsp+24B8h+var_2438]
                mov     eax, 80000000h
                mov     edx, edi
                sub     edx, r8d
                or      edx, eax
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A395DA
                cmp     [r14+8F8h], eax
                jnz     short loc_140A29C1E
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r14
                mov     rcx, r14
                mov     [r14+900h], rax
                xor     eax, eax
                mov     [r14+908h], rax
                mov     qword ptr [r14+910h], 10Fh
                mov     [r14+918h], r8
                mov     dword ptr [r14+8F8h], 1
                call    sub_140A113CC

loc_140A29C1E:                          ; CODE XREF: sub_140A1EEE4+ACC4↑j
                                        ; sub_140A1EEE4+ACF4↑j
                mov     r8d, [rdi]
                mov     rcx, rdi
                add     r8, [rsp+24B8h+var_2438]
                mov     rax, [r14+420h]
                mov     rdx, [rsp+24B8h+var_2438]
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                cmp     [rax], r15d
                jb      short loc_140A29C4D
                cmp     [rax+4], ebx
                jbe     short loc_140A29CC1

loc_140A29C4D:                          ; CODE XREF: sub_140A1EEE4+AD62↑j
                mov     r15, [rsp+24B8h+var_2438]
                mov     eax, 80000000h
                sub     edx, r15d
                or      edx, eax
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A395A9
                cmp     [r14+8F8h], eax
                jnz     short loc_140A29CC9
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r14
                mov     rcx, r14
                mov     [r14+900h], rax
                xor     eax, eax
                mov     [r14+908h], rax
                mov     qword ptr [r14+910h], 10Fh
                mov     [r14+918h], r15
                mov     dword ptr [r14+8F8h], 1
                call    sub_140A113CC
                jmp     short loc_140A29CC9
; ---------------------------------------------------------------------------

loc_140A29CC1:                          ; CODE XREF: sub_140A1EEE4+AD67↑j
                mov     r15, [rsp+24B8h+var_2438]

loc_140A29CC9:                          ; CODE XREF: sub_140A1EEE4+AD95↑j
                                        ; sub_140A1EEE4+ADDB↑j
                mov     rdx, [rsp+24B8h+var_2418]
                mov     ebx, dword ptr [rsp+24B8h+var_2440]
                mov     r8, [rsp+24B8h+var_23E8]

loc_140A29CDD:                          ; CODE XREF: sub_140A1EEE4+AC85↑j
                add     r12, 0Ch
                cmp     r12, [rsp+24B8h+var_2410]
                jnz     loc_140A29B2F

loc_140A29CEF:                          ; CODE XREF: sub_140A1EEE4+AC57↑j
                                        ; sub_140A1EEE4+AC5F↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     r9d, dword ptr [rsp+24B8h+var_2448]

loc_140A29CF8:                          ; CODE XREF: sub_140A1EEE4+AC45↑j
                mov     ebx, 1
                add     ecx, ebx
                mov     dword ptr [rsp+24B8h+var_2460], ecx
                cmp     ecx, r9d
                jb      loc_140A29ADC
                mov     rdi, [rsp+24B8h+var_2420]
                xor     eax, eax
                mov     r13, [rsp+24B8h+var_2468]
                jmp     short loc_140A29D52
; ---------------------------------------------------------------------------

loc_140A29D1D:                          ; CODE XREF: sub_140A1EEE4+AC33↑j
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A3941E
                jmp     loc_140A29A37
; ---------------------------------------------------------------------------

loc_140A29D35:                          ; CODE XREF: sub_140A1EEE4+AC67↑j
                                        ; sub_140A1EEE4+AC70↑j
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A39451
                jmp     loc_140A29A37
; ---------------------------------------------------------------------------

loc_140A29D4D:                          ; CODE XREF: sub_140A1EEE4+ABF2↑j
                mov     ebx, 1

loc_140A29D52:                          ; CODE XREF: sub_140A1EEE4+AE37↑j
                cmp     r12, [rsp+24B8h+var_2410]
                jz      short loc_140A29DB7
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A39608
                cmp     [r14+8F8h], eax
                jnz     loc_140A299E8
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, r14
                mov     [r14+900h], rax
                xor     eax, eax
                mov     [r14+908h], rax
                mov     qword ptr [r14+910h], 10Fh
                mov     [r14+918h], r15
                mov     [r14+8F8h], ebx
                jmp     loc_140A29A7A
; ---------------------------------------------------------------------------

loc_140A29DB7:                          ; CODE XREF: sub_140A1EEE4+AE76↑j
                test    edi, edi
                jz      short loc_140A29DC3
                lea     ecx, [rdi+6]
                and     ecx, 0FFFFFFF8h
                jmp     short loc_140A29DC5
; ---------------------------------------------------------------------------

loc_140A29DC3:                          ; CODE XREF: sub_140A1EEE4+AED5↑j
                mov     ecx, eax

loc_140A29DC5:                          ; CODE XREF: sub_140A1EEE4+AEDD↑j
                mov     r15d, [r14+7E4h]
                lea     eax, [r9+r9*2]
                mov     r8d, [r14+924h]
                lea     ecx, [rcx+rax*8]
                lea     eax, [r15+30h]
                add     eax, ecx
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A29EE4
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     [rsp+24B8h+var_2468], rax
                mov     r11, rax
                test    rax, rax
                jz      loc_140A29EDA
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A29ECB
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A29E54
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A29E45:                          ; CODE XREF: sub_140A1EEE4+AF6E↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, rbx
                jnz     short loc_140A29E45

loc_140A29E54:                          ; CODE XREF: sub_140A1EEE4+AF56↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A29E65

loc_140A29E5A:                          ; CODE XREF: sub_140A1EEE4+AF7F↓j
                mov     [r14], cl
                add     r14, rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A29E5A

loc_140A29E65:                          ; CODE XREF: sub_140A1EEE4+AF74↑j
                mov     ebx, [r11+924h]
                mov     [r11+924h], edx
                cmp     edx, 3
                jz      short loc_140A29EA8
                test    dword ptr [r11+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A29E9F
                mov     rax, [r11+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A29EB7
; ---------------------------------------------------------------------------

loc_140A29E9F:                          ; CODE XREF: sub_140A1EEE4+AFA4↑j
                mov     rax, [r11+100h]
                jmp     short loc_140A29EAF
; ---------------------------------------------------------------------------

loc_140A29EA8:                          ; CODE XREF: sub_140A1EEE4+AF92↑j
                mov     rax, [r11+368h]

loc_140A29EAF:                          ; CODE XREF: sub_140A1EEE4+AFC2↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A29EB7:                          ; CODE XREF: sub_140A1EEE4+AFB9↑j
                mov     r11, [rsp+24B8h+var_2468]
                mov     rdi, [rsp+24B8h+var_2420]
                mov     [r11+924h], ebx

loc_140A29ECB:                          ; CODE XREF: sub_140A1EEE4+AF2E↑j
                and     dword ptr [r11+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2448]
                jmp     short loc_140A29EF3
; ---------------------------------------------------------------------------

loc_140A29EDA:                          ; CODE XREF: sub_140A1EEE4+AF1E↑j
                mov     ecx, 0C000009Ah
                jmp     loc_140A2A929
; ---------------------------------------------------------------------------

loc_140A29EE4:                          ; CODE XREF: sub_140A1EEE4+AF03↑j
                mov     r11, r14
                mov     [rsp+24B8h+var_2468], r14
                mov     [r14+7E4h], eax

loc_140A29EF3:                          ; CODE XREF: sub_140A1EEE4+AFF4↑j
                mov     r12d, 1
                lea     rbx, [r11+r15]
                add     [r11+80Ch], r12d
                mov     rax, rbx
                mov     [rsp+24B8h+var_1A18], rbx
                xor     r8d, r8d
                lea     ecx, [r12+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A29F1A:                          ; CODE XREF: sub_140A1EEE4+B043↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r12
                jnz     short loc_140A29F1A
                test    ecx, ecx
                jz      short loc_140A29F38

loc_140A29F2D:                          ; CODE XREF: sub_140A1EEE4+B052↓j
                mov     [rax], r8b
                add     rax, r12
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A29F2D

loc_140A29F38:                          ; CODE XREF: sub_140A1EEE4+B047↑j
                mov     rax, [rsp+24B8h+var_2430]
                mov     dword ptr [rbx], 1Eh
                mov     [rbx+8], rax
                xor     eax, eax
                mov     [rbx+10h], eax
                mov     rcx, [r11+818h]
                mov     rax, rcx
                jmp     short loc_140A29F5D
; ---------------------------------------------------------------------------

loc_140A29F5B:                          ; CODE XREF: sub_140A1EEE4+B080↓j
                xor     ecx, eax

loc_140A29F5D:                          ; CODE XREF: sub_140A1EEE4+B075↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A29F5B
                mov     rdx, [rsp+24B8h+var_2438]
                btr     ecx, 1Fh
                mov     [rbx+14h], ecx
                mov     r14, r11
                mov     rax, [rsp+24B8h+var_1A18]
                mov     ebx, 0FFFEh
                mov     [rsp+24B8h+var_1A10], rax
                mov     [rsp+24B8h+var_1A60], r11
                mov     [rax+18h], rdx
                mov     ecx, [r13+50h]
                mov     rax, [rsp+24B8h+var_1A10]
                mov     [rax+20h], ecx
                mov     rax, [rsp+24B8h+var_1A10]
                mov     ecx, dword ptr [rsp+24B8h+var_2458]
                mov     [rax+24h], ecx
                mov     rax, [rsp+24B8h+var_1A10]
                movzx   ecx, word ptr [rsp+24B8h+var_2408]
                mov     [rax+28h], cx
                xor     eax, eax
                cmp     dword ptr [rsp+24B8h+var_2450], eax
                mov     ecx, eax
                mov     rdx, [rsp+24B8h+var_1A10]
                setnz   cl
                movzx   eax, word ptr [rdx+2Ah]
                and     ax, bx
                or      cx, ax
                mov     [rdx+2Ah], cx
                mov     rcx, [rsp+24B8h+var_1A10]
                lea     rdx, [rcx+30h]
                mov     [rsp+24B8h+var_2420], rdx
                test    edi, edi
                jz      short loc_140A2A015
                lea     r10d, [rdi-1]
                add     r10, 7
                and     r10, 0FFFFFFFFFFFFFFF8h
                add     r10, rdx
                jmp     short loc_140A2A018
; ---------------------------------------------------------------------------

loc_140A2A015:                          ; CODE XREF: sub_140A1EEE4+B11E↑j
                mov     r10, rdx

loc_140A2A018:                          ; CODE XREF: sub_140A1EEE4+B12F↑j
                movzx   eax, word ptr [rcx+28h]
                mov     [rsp+24B8h+var_2418], r10
                lea     rcx, [rax+rax*2]
                xor     eax, eax
                lea     rbx, [r10+rcx*8]
                test    edi, edi
                mov     rdi, [rsp+24B8h+var_2430]
                mov     ecx, 0Ch
                cmovz   rcx, [rsp+24B8h+var_2428]
                add     rcx, rdi
                mov     [rsp+24B8h+var_23E0], rbx
                mov     [rsp+24B8h+var_2428], rcx
                test    r9d, r9d
                jz      short loc_140A2A08B
                lea     rax, [r10+8]
                mov     edx, r9d
                mov     r15d, 80000000h

loc_140A2A06B:                          ; CODE XREF: sub_140A1EEE4+B1A3↓j
                mov     ecx, 2

loc_140A2A070:                          ; CODE XREF: sub_140A1EEE4+B19E↓j
                mov     [rax-8], r8d
                mov     [rax-4], r8d
                mov     [rax], r15d
                add     rax, 0Ch
                sub     rcx, r12
                jnz     short loc_140A2A070
                sub     rdx, r12
                jnz     short loc_140A2A06B
                xor     eax, eax

loc_140A2A08B:                          ; CODE XREF: sub_140A1EEE4+B178↑j
                cmp     r10, rbx
                jz      loc_140A2A91D
                mov     r15, [rsp+24B8h+var_23E8]
                jmp     short loc_140A2A0A0
; ---------------------------------------------------------------------------

loc_140A2A09E:                          ; CODE XREF: sub_140A1EEE4+BA2B↓j
                xor     eax, eax

loc_140A2A0A0:                          ; CODE XREF: sub_140A1EEE4+B1B8↑j
                mov     r14d, eax
                mov     eax, [r15+24h]
                bt      eax, 19h
                jb      loc_140A2A29F
                mov     ecx, [r15]
                cmp     ecx, 54494E49h
                jnz     short loc_140A2A0CA
                cmp     dword ptr [r15+4], 4742444Bh
                jz      loc_140A2A29F

loc_140A2A0CA:                          ; CODE XREF: sub_140A1EEE4+B1D6↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A2A101
                movzx   eax, word ptr [r15+4]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_140A2A29F
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_140A2A29F
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_140A2A29F

loc_140A2A101:                          ; CODE XREF: sub_140A1EEE4+B1EC↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A2A119
                mov     eax, 4154h
                cmp     [r15+4], ax
                jz      loc_140A2A29F

loc_140A2A119:                          ; CODE XREF: sub_140A1EEE4+B223↑j
                mov     rbx, [r11+930h]
                mov     rdi, r15
                mov     r8, [r11+938h]
                sub     rdi, rbx
                mov     r10, [r11+940h]
                or      r13d, 0FFFFFFFFh
                mov     r11, [r11+948h]
                mov     r9d, 7

loc_140A2A145:                          ; CODE XREF: sub_140A1EEE4+B273↓j
                movzx   edx, byte ptr [rdi+rbx]
                movzx   eax, byte ptr [rbx]
                add     rbx, r12
                cmp     rdx, rax
                jnz     short loc_140A2A15E
                add     r9d, r13d
                jnz     short loc_140A2A145
                jmp     loc_140A2A1E2
; ---------------------------------------------------------------------------

loc_140A2A15E:                          ; CODE XREF: sub_140A1EEE4+B26E↑j
                mov     ebx, 8
                mov     rdi, r15

loc_140A2A166:                          ; CODE XREF: sub_140A1EEE4+B29B↓j
                mov     rcx, [rdi]
                add     rdi, 8
                mov     rax, [r8]
                add     r8, 8
                cmp     rcx, rax
                jnz     short loc_140A2A19E
                add     ebx, 0FFFFFFF8h
                cmp     ebx, 8
                jnb     short loc_140A2A166
                test    ebx, ebx
                jz      short loc_140A2A1E2

loc_140A2A185:                          ; CODE XREF: sub_140A1EEE4+B2B6↓j
                movzx   edx, byte ptr [rdi]
                add     rdi, r12
                movzx   eax, byte ptr [r8]
                add     r8, r12
                cmp     rdx, rax
                jnz     short loc_140A2A19E
                add     ebx, r13d
                jnz     short loc_140A2A185
                jmp     short loc_140A2A1E2
; ---------------------------------------------------------------------------

loc_140A2A19E:                          ; CODE XREF: sub_140A1EEE4+B293↑j
                                        ; sub_140A1EEE4+B2B1↑j
                mov     rbx, r15
                mov     edi, 4
                sub     rbx, r10

loc_140A2A1A9:                          ; CODE XREF: sub_140A1EEE4+B2D9↓j
                movzx   edx, byte ptr [rbx+r10]
                movzx   eax, byte ptr [r10]
                add     r10, r12
                cmp     rdx, rax
                jnz     short loc_140A2A1C1
                add     edi, r13d
                jnz     short loc_140A2A1A9
                jmp     short loc_140A2A1E2
; ---------------------------------------------------------------------------

loc_140A2A1C1:                          ; CODE XREF: sub_140A1EEE4+B2D4↑j
                mov     rbx, r15
                mov     edi, 6
                sub     rbx, r11

loc_140A2A1CC:                          ; CODE XREF: sub_140A1EEE4+B2FC↓j
                movzx   edx, byte ptr [rbx+r11]
                movzx   eax, byte ptr [r11]
                add     r11, r12
                cmp     rdx, rax
                jnz     short loc_140A2A1E5
                add     edi, r13d
                jnz     short loc_140A2A1CC

loc_140A2A1E2:                          ; CODE XREF: sub_140A1EEE4+B275↑j
                                        ; sub_140A1EEE4+B29F↑j ...
                mov     r14d, r12d

loc_140A2A1E5:                          ; CODE XREF: sub_140A1EEE4+B2F7↑j
                mov     rdi, [rsp+24B8h+var_2430]
                mov     r10, [rsp+24B8h+var_2418]
                mov     r11, [rsp+24B8h+var_2468]

loc_140A2A1FA:                          ; CODE XREF: sub_140A1EEE4+B3BE↓j
                mov     ecx, [r15+24h]
                xor     eax, eax
                test    ecx, ecx
                cmovs   r14d, r12d
                mov     dword ptr [rsp+24B8h+var_2450], r14d
                test    r14d, r14d
                jz      short loc_140A2A237
                cmp     dword ptr [r15], 54494E49h
                jnz     short loc_140A2A237
                cmp     dword ptr [r15+4], 4742444Bh
                jnz     short loc_140A2A237
                test    dword ptr [r11+994h], 2000h
                cmovnz  r14d, eax
                mov     dword ptr [rsp+24B8h+var_2450], r14d

loc_140A2A237:                          ; CODE XREF: sub_140A1EEE4+B32A↑j
                                        ; sub_140A1EEE4+B333↑j ...
                test    dword ptr [r11+994h], 4000h
                mov     rdx, [rsp+24B8h+var_2438]
                jz      short loc_140A2A26C
                bt      ecx, 1Dh
                jnb     short loc_140A2A26C
                cmp     rdx, [r11+5E8h]
                jz      short loc_140A2A264
                cmp     rdx, [r11+5F0h]
                jnz     short loc_140A2A26C

loc_140A2A264:                          ; CODE XREF: sub_140A1EEE4+B375↑j
                mov     r14d, r12d
                mov     dword ptr [rsp+24B8h+var_2450], r12d

loc_140A2A26C:                          ; CODE XREF: sub_140A1EEE4+B366↑j
                                        ; sub_140A1EEE4+B36C↑j ...
                mov     ecx, [r15+10h]
                mov     eax, [r15+8]
                cmp     ecx, eax
                mov     r8d, [r15+0Ch]
                mov     rbx, [rsp+24B8h+var_2410]
                cmovbe  ecx, eax
                add     ecx, r8d
                mov     dword ptr [rsp+24B8h+var_2458], r8d
                mov     dword ptr [rsp+24B8h+var_2460], ecx
                cmp     rdi, rbx
                jz      short loc_140A2A2A7
                mov     r15d, [rdi]
                mov     r12d, [rdi+4]
                jmp     short loc_140A2A2AF
; ---------------------------------------------------------------------------

loc_140A2A29F:                          ; CODE XREF: sub_140A1EEE4+B1C7↑j
                                        ; sub_140A1EEE4+B1E0↑j ...
                mov     r14d, r12d
                jmp     loc_140A2A1FA
; ---------------------------------------------------------------------------

loc_140A2A2A7:                          ; CODE XREF: sub_140A1EEE4+B3B0↑j
                xor     eax, eax
                mov     r15d, eax
                mov     r12d, eax

loc_140A2A2AF:                          ; CODE XREF: sub_140A1EEE4+B3B9↑j
                mov     dword ptr [rsp+24B8h+var_2440], r12d
                mov     r13d, r8d
                mov     dword ptr [rsp+24B8h+var_2448], r15d
                cmp     rdi, rbx
                jz      loc_140A2A472
                cmp     r15d, r8d
                jbe     loc_140A2A472
                cmp     r12d, ecx
                ja      loc_140A2A472
                test    r14d, r14d
                jnz     loc_140A2A472
                mov     [r10], r8d
                mov     edi, r15d
                mov     [r10+4], r15d
                mov     r13d, r15d
                mov     eax, [r10]
                sub     edi, eax
                mov     r9d, edi
                lea     r10, [rdx+rax]
                add     r9, r10
                xor     eax, eax
                mov     edx, eax

loc_140A2A300:                          ; CODE XREF: sub_140A1EEE4+B443↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_FF0]
                mov     ecx, [rsp+rax*4+24B8h+var_11D0]
                add     rcx, rbx
                cmp     r10, rcx
                jnb     short loc_140A2A322
                cmp     r9, rbx
                ja      loc_140A2A45E

loc_140A2A322:                          ; CODE XREF: sub_140A1EEE4+B433↑j
                inc     edx
                cmp     edx, 6
                jb      short loc_140A2A300
                add     [r11+828h], edi
                mov     r8, r10
                mov     r14, [rsp+24B8h+var_2468]
                mov     rax, r10
                mov     r11d, [r11+814h]
                mov     r14, [r14+818h]
                cmp     r10, r9
                jnb     short loc_140A2A35A

loc_140A2A34E:                          ; CODE XREF: sub_140A1EEE4+B474↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r9
                jb      short loc_140A2A34E

loc_140A2A35A:                          ; CODE XREF: sub_140A1EEE4+B468↑j
                mov     r9d, edi
                mov     rbx, r14
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A2A3DC
                mov     r15, 7010008004002001h

loc_140A2A373:                          ; CODE XREF: sub_140A1EEE4+B4EC↓j
                mov     edx, 8

loc_140A2A378:                          ; CODE XREF: sub_140A1EEE4+B4B2↓j
                mov     rax, [r8]
                mov     ecx, r11d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A2A378
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     r11d, eax
                mov     [rsp+24B8h+var_1A08], rdx
                xor     r11d, edx
                mov     eax, 1
                and     r11d, 3Fh
                cmovz   r11d, eax
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A2A373
                mov     r15d, dword ptr [rsp+24B8h+var_2448]
                mov     r12d, dword ptr [rsp+24B8h+var_2440]

loc_140A2A3DC:                          ; CODE XREF: sub_140A1EEE4+B483↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A2A400
                mov     edx, edi
                shr     rdx, 3

loc_140A2A3EA:                          ; CODE XREF: sub_140A1EEE4+B51A↓j
                xor     rbx, [r8]
                mov     ecx, r11d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, 1
                jnz     short loc_140A2A3EA

loc_140A2A400:                          ; CODE XREF: sub_140A1EEE4+B4FE↑j
                test    edi, edi
                jz      short loc_140A2A419

loc_140A2A404:                          ; CODE XREF: sub_140A1EEE4+B533↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r11d
                xor     rbx, rax
                inc     r8
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2A404

loc_140A2A419:                          ; CODE XREF: sub_140A1EEE4+B51E↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     edx, edx
                jmp     short loc_140A2A42A
; ---------------------------------------------------------------------------

loc_140A2A424:                          ; CODE XREF: sub_140A1EEE4+B549↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A2A42A:                          ; CODE XREF: sub_140A1EEE4+B53E↑j
                test    rax, rax
                jnz     short loc_140A2A424
                mov     rax, [rsp+24B8h+var_2418]
                btr     ebx, 1Fh
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     r8d, dword ptr [rsp+24B8h+var_2458]
                mov     r11, [rsp+24B8h+var_2468]
                mov     rdi, [rsp+24B8h+var_2430]
                mov     [rax+8], ebx
                mov     rbx, [rsp+24B8h+var_2410]
                jmp     short loc_140A2A474
; ---------------------------------------------------------------------------

loc_140A2A45E:                          ; CODE XREF: sub_140A1EEE4+B438↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     rbx, [rsp+24B8h+var_2410]
                mov     rdi, [rsp+24B8h+var_2430]

loc_140A2A472:                          ; CODE XREF: sub_140A1EEE4+B3DB↑j
                                        ; sub_140A1EEE4+B3E4↑j ...
                xor     edx, edx

loc_140A2A474:                          ; CODE XREF: sub_140A1EEE4+B578↑j
                cmp     r15d, r8d
                jb      loc_140A2A70A
                cmp     r12d, ecx
                mov     r12d, dword ptr [rsp+24B8h+var_2450]
                ja      loc_140A2A70F
                cmp     rdi, rbx
                jz      loc_140A2A70F
                mov     r14, [rsp+24B8h+var_2428]
                mov     r15d, [r14+4]
                mov     dword ptr [rsp+24B8h+var_2448], r15d
                cmp     r15d, ecx
                ja      loc_140A2A70F
                mov     rax, [rsp+24B8h+var_2420]
                jmp     short loc_140A2A4BD
; ---------------------------------------------------------------------------

loc_140A2A4B8:                          ; CODE XREF: sub_140A1EEE4+B81E↓j
                mov     r11, [rsp+24B8h+var_2468]

loc_140A2A4BD:                          ; CODE XREF: sub_140A1EEE4+B5D2↑j
                cmp     r14, rbx
                jz      loc_140A2A70F
                test    r12d, r12d
                jz      short loc_140A2A4D2
                mov     bl, 80h
                jmp     loc_140A2A6BC
; ---------------------------------------------------------------------------

loc_140A2A4D2:                          ; CODE XREF: sub_140A1EEE4+B5E5↑j
                mov     ebx, [rdi+4]
                mov     r13d, [r14]
                cmp     r13d, ebx
                jnb     short loc_140A2A545
                xor     eax, eax
                test    dword ptr [r11+990h], 200000h
                jz      loc_140A3963B
                cmp     [r11+8F8h], eax
                jnz     short loc_140A2A545
                mov     rdx, [rsp+24B8h+var_2438]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, r11
                mov     rcx, r11
                mov     [r11+900h], rax
                xor     eax, eax
                mov     [r11+908h], rax
                mov     qword ptr [r11+910h], 10Fh
                mov     [r11+918h], rdx
                xor     edx, edx
                mov     dword ptr [r11+8F8h], 1
                call    sub_140A113CC

loc_140A2A545:                          ; CODE XREF: sub_140A1EEE4+B5F7↑j
                                        ; sub_140A1EEE4+B613↑j
                mov     edi, r13d
                mov     r11, rbx
                add     r11, [rsp+24B8h+var_2438]
                sub     edi, ebx
                mov     r9d, edi
                add     r9, r11
                xor     eax, eax
                mov     edx, eax

loc_140A2A55F:                          ; CODE XREF: sub_140A1EEE4+B6A2↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_FF0]
                mov     ecx, [rsp+rax*4+24B8h+var_11D0]
                add     rcx, rbx
                cmp     r11, rcx
                jnb     short loc_140A2A581
                cmp     r9, rbx
                ja      loc_140A2A6A4

loc_140A2A581:                          ; CODE XREF: sub_140A1EEE4+B692↑j
                inc     edx
                cmp     edx, 6
                jb      short loc_140A2A55F
                cmp     edi, 4
                jb      loc_140A2A6A4
                mov     r14, [rsp+24B8h+var_2468]
                mov     r8, r11
                mov     rax, r11
                add     [r14+828h], edi
                mov     r10d, [r14+814h]
                mov     r14, [r14+818h]
                cmp     r11, r9
                jnb     short loc_140A2A5C2

loc_140A2A5B6:                          ; CODE XREF: sub_140A1EEE4+B6DC↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r9
                jb      short loc_140A2A5B6

loc_140A2A5C2:                          ; CODE XREF: sub_140A1EEE4+B6D0↑j
                mov     r9d, edi
                mov     rbx, r14
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A2A644
                mov     r15, 7010008004002001h

loc_140A2A5DB:                          ; CODE XREF: sub_140A1EEE4+B754↓j
                mov     edx, 8

loc_140A2A5E0:                          ; CODE XREF: sub_140A1EEE4+B71A↓j
                mov     rax, [r8]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A2A5E0
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     r10d, eax
                mov     [rsp+24B8h+var_1A00], rdx
                xor     r10d, edx
                mov     eax, 1
                and     r10d, 3Fh
                cmovz   r10d, eax
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A2A5DB
                mov     r15d, dword ptr [rsp+24B8h+var_2448]
                mov     r12d, dword ptr [rsp+24B8h+var_2450]

loc_140A2A644:                          ; CODE XREF: sub_140A1EEE4+B6EB↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A2A668
                mov     edx, edi
                shr     rdx, 3

loc_140A2A652:                          ; CODE XREF: sub_140A1EEE4+B782↓j
                xor     rbx, [r8]
                mov     ecx, r10d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, 1
                jnz     short loc_140A2A652

loc_140A2A668:                          ; CODE XREF: sub_140A1EEE4+B766↑j
                test    edi, edi
                jz      short loc_140A2A681

loc_140A2A66C:                          ; CODE XREF: sub_140A1EEE4+B79B↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rbx, rax
                inc     r8
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2A66C

loc_140A2A681:                          ; CODE XREF: sub_140A1EEE4+B786↑j
                mov     rax, rbx
                shr     rax, 7
                xor     edx, edx
                jmp     short loc_140A2A692
; ---------------------------------------------------------------------------

loc_140A2A68C:                          ; CODE XREF: sub_140A1EEE4+B7B1↓j
                xor     bl, al
                shr     rax, 7

loc_140A2A692:                          ; CODE XREF: sub_140A1EEE4+B7A6↑j
                test    rax, rax
                jnz     short loc_140A2A68C
                mov     r14, [rsp+24B8h+var_2428]
                and     bl, 7Fh
                jmp     short loc_140A2A6A8
; ---------------------------------------------------------------------------

loc_140A2A6A4:                          ; CODE XREF: sub_140A1EEE4+B697↑j
                                        ; sub_140A1EEE4+B6A7↑j
                xor     edx, edx
                mov     bl, 80h

loc_140A2A6A8:                          ; CODE XREF: sub_140A1EEE4+B7BE↑j
                mov     rdi, [rsp+24B8h+var_2430]
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     rax, [rsp+24B8h+var_2420]

loc_140A2A6BC:                          ; CODE XREF: sub_140A1EEE4+B5E9↑j
                mov     [rax], bl
                add     rdi, 0Ch
                mov     rax, [rsp+24B8h+var_2420]
                add     r14, 0Ch
                mov     rbx, [rsp+24B8h+var_2410]
                inc     rax
                mov     [rsp+24B8h+var_2430], rdi
                mov     [rsp+24B8h+var_2420], rax
                mov     [rsp+24B8h+var_2428], r14
                cmp     r14, rbx
                jz      short loc_140A2A6FF
                mov     r15d, [r14+4]
                mov     dword ptr [rsp+24B8h+var_2448], r15d

loc_140A2A6FF:                          ; CODE XREF: sub_140A1EEE4+B810↑j
                cmp     r15d, ecx
                jbe     loc_140A2A4B8
                jmp     short loc_140A2A70F
; ---------------------------------------------------------------------------

loc_140A2A70A:                          ; CODE XREF: sub_140A1EEE4+B593↑j
                mov     r12d, dword ptr [rsp+24B8h+var_2450]

loc_140A2A70F:                          ; CODE XREF: sub_140A1EEE4+B5A1↑j
                                        ; sub_140A1EEE4+B5AA↑j ...
                mov     r10, [rsp+24B8h+var_2418]
                test    r12d, r12d
                jnz     loc_140A2A883
                cmp     r13d, ecx
                jz      loc_140A2A883
                mov     r11, [rsp+24B8h+var_2438]
                lea     r15d, [r12+1]
                mov     [r10+0Ch], r13d
                mov     edi, ecx
                mov     [r10+10h], ecx
                mov     eax, [r10+0Ch]
                sub     edi, eax
                add     r11, rax
                mov     r9d, edi
                add     r9, r11
                xor     eax, eax
                mov     edx, eax

loc_140A2A753:                          ; CODE XREF: sub_140A1EEE4+B897↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_FF0]
                mov     ecx, [rsp+rax*4+24B8h+var_11D0]
                add     rcx, rbx
                cmp     r11, rcx
                jnb     short loc_140A2A775
                cmp     r9, rbx
                ja      loc_140A2A87B

loc_140A2A775:                          ; CODE XREF: sub_140A1EEE4+B886↑j
                add     edx, r15d
                cmp     edx, 6
                jb      short loc_140A2A753
                mov     rax, [rsp+24B8h+var_2468]
                mov     r8, r11
                add     [rax+828h], edi
                mov     r10d, [rax+814h]
                mov     r14, [rax+818h]
                mov     rax, r11
                cmp     r11, r9
                jnb     short loc_140A2A7AD

loc_140A2A7A1:                          ; CODE XREF: sub_140A1EEE4+B8C7↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r9
                jb      short loc_140A2A7A1

loc_140A2A7AD:                          ; CODE XREF: sub_140A1EEE4+B8BB↑j
                mov     r9d, edi
                mov     rbx, r14
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A2A81F
                mov     rsi, 7010008004002001h

loc_140A2A7C6:                          ; CODE XREF: sub_140A1EEE4+B939↓j
                mov     edx, 8

loc_140A2A7CB:                          ; CODE XREF: sub_140A1EEE4+B904↓j
                mov     rax, [r8]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r15
                jnz     short loc_140A2A7CB
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r10d, eax
                mov     [rsp+24B8h+var_19F8], rdx
                xor     r10d, edx
                and     r10d, 3Fh
                cmovz   r10d, r15d
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A2A7C6

loc_140A2A81F:                          ; CODE XREF: sub_140A1EEE4+B8D6↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A2A842
                mov     edx, edi
                shr     rdx, 3

loc_140A2A82D:                          ; CODE XREF: sub_140A1EEE4+B95C↓j
                xor     rbx, [r8]
                mov     ecx, r10d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, r15
                jnz     short loc_140A2A82D

loc_140A2A842:                          ; CODE XREF: sub_140A1EEE4+B941↑j
                test    edi, edi
                jz      short loc_140A2A85B

loc_140A2A846:                          ; CODE XREF: sub_140A1EEE4+B975↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rbx, rax
                add     r8, r15
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2A846

loc_140A2A85B:                          ; CODE XREF: sub_140A1EEE4+B960↑j
                mov     rax, rbx
                jmp     short loc_140A2A862
; ---------------------------------------------------------------------------

loc_140A2A860:                          ; CODE XREF: sub_140A1EEE4+B985↓j
                xor     ebx, eax

loc_140A2A862:                          ; CODE XREF: sub_140A1EEE4+B97A↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2A860
                mov     r10, [rsp+24B8h+var_2418]
                btr     ebx, 1Fh
                mov     [r10+14h], ebx

loc_140A2A87B:                          ; CODE XREF: sub_140A1EEE4+B88B↑j
                mov     rdi, [rsp+24B8h+var_2430]

loc_140A2A883:                          ; CODE XREF: sub_140A1EEE4+B836↑j
                                        ; sub_140A1EEE4+B83F↑j
                mov     rdx, [rsp+24B8h+var_2410]
                cmp     rdi, rdx
                jz      short loc_140A2A8DC
                mov     eax, [rdi]
                mov     ecx, [rdi+4]
                cmp     eax, dword ptr [rsp+24B8h+var_2458]
                jb      short loc_140A2A8DC
                cmp     ecx, dword ptr [rsp+24B8h+var_2460]
                ja      short loc_140A2A8DC
                mov     rcx, [rsp+24B8h+var_2428]
                cmp     rcx, rdx
                jz      short loc_140A2A8D0
                mov     rax, [rsp+24B8h+var_2420]
                mov     byte ptr [rax], 80h
                inc     rax
                add     rcx, 0Ch
                mov     [rsp+24B8h+var_2420], rax
                mov     [rsp+24B8h+var_2428], rcx

loc_140A2A8D0:                          ; CODE XREF: sub_140A1EEE4+B9C8↑j
                add     rdi, 0Ch
                mov     [rsp+24B8h+var_2430], rdi

loc_140A2A8DC:                          ; CODE XREF: sub_140A1EEE4+B9AA↑j
                                        ; sub_140A1EEE4+B9B5↑j ...
                mov     r15, [rsp+24B8h+var_23E8]
                add     r10, 18h
                mov     r11, [rsp+24B8h+var_2468]
                add     r15, 28h ; '('
                mov     r12d, 1
                mov     [rsp+24B8h+var_2418], r10
                mov     [rsp+24B8h+var_23E8], r15
                cmp     r10, [rsp+24B8h+var_23E0]
                jnz     loc_140A2A09E
                mov     r14, [rsp+24B8h+var_1A60]

loc_140A2A91D:                          ; CODE XREF: sub_140A1EEE4+AAE2↑j
                                        ; sub_140A1EEE4+B1AA↑j
                mov     [rsp+24B8h+var_1B80], r14
                xor     eax, eax

loc_140A2A927:                          ; CODE XREF: sub_140A1EEE4+A01D↑j
                mov     ecx, eax

loc_140A2A929:                          ; CODE XREF: sub_140A1EEE4+A52B↑j
                                        ; sub_140A1EEE4+AB09↑j ...
                mov     ebx, 80000000h
                lea     eax, [rcx+rbx]
                test    ebx, eax
                jnz     short loc_140A2A948
                cmp     ecx, 0C000010Eh
                jnz     loc_140A237B3
                jmp     short loc_140A2A948
; ---------------------------------------------------------------------------

loc_140A2A943:                          ; CODE XREF: sub_140A1EEE4+9F8D↑j
                mov     ebx, 80000000h

loc_140A2A948:                          ; CODE XREF: sub_140A1EEE4+BA4F↑j
                                        ; sub_140A1EEE4+BA5D↑j
                mov     r13d, 1

loc_140A2A94E:                          ; CODE XREF: sub_140A1EEE4+79EB↑j
                                        ; sub_140A1EEE4+79FB↑j ...
                mov     eax, dword ptr [rsp+24B8h+var_23F8]
                add     eax, r13d
                mov     dword ptr [rsp+24B8h+var_23F8], eax
                cmp     eax, 11h
                jnb     short loc_140A2A972
                mov     edi, dword ptr [rsp+24B8h+var_23D0]
                jmp     loc_140A26830
; ---------------------------------------------------------------------------

loc_140A2A970:                          ; CODE XREF: sub_140A1EEE4+9D17↑j
                                        ; sub_140A1EEE4:loc_140A2A970↓j
                jmp     short loc_140A2A970
; ---------------------------------------------------------------------------

loc_140A2A972:                          ; CODE XREF: sub_140A1EEE4+BA7E↑j
                xor     eax, eax

loc_140A2A974:                          ; CODE XREF: sub_140A1EEE4+7975↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2A97F

loc_140A2A97D:                          ; CODE XREF: sub_140A1EEE4:loc_140A2A97D↓j
                jmp     short loc_140A2A97D
; ---------------------------------------------------------------------------

loc_140A2A97F:                          ; CODE XREF: sub_140A1EEE4+BA97↑j
                sti
                call    sub_140A764A8
                mov     rcx, rax
                mov     [rsp+24B8h+var_2468], rax
                mov     rax, [rax]
                cmp     rax, rcx

loc_140A2A993:                          ; CODE XREF: sub_140A1EEE4+D7B3↓j
                mov     [rsp+24B8h+var_2430], rax
                jz      loc_140A2C6B4
                mov     rcx, rax
                call    sub_140A93B10
                mov     rcx, rax
                test    rax, rax
                jz      loc_140A2C687
                mov     rax, [r14+750h]
                lea     rdx, [rsp+24B8h+var_11B8]
                mov     [rsp+24B8h+var_19F0], r14
                mov     r12, [rcx+rax]
                mov     rax, [r14+200h]
                mov     rcx, r12
                mov     [rsp+24B8h+var_2438], r12
                call    j__guard_dispatch_icall_nop
                mov     r13, [rsp+24B8h+var_11B0]
                mov     r15d, [rsp+24B8h+var_11A4]
                mov     [rsp+24B8h+var_2420], rax
                xor     eax, eax
                mov     [rsp+24B8h+var_20D0], r15d
                mov     [rsp+24B8h+var_2428], r13
                test    r13, r13
                jz      loc_140A2C6AB
                mov     [rsp+24B8h+var_13D8], rax
                mov     ecx, 4
                lea     rax, [rsp+24B8h+var_13D0]
                xor     edx, edx

loc_140A2AA31:                          ; CODE XREF: sub_140A1EEE4+BB55↓j
                mov     [rax], dl
                inc     rax
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2AA31
                xor     eax, eax
                mov     r11d, eax
                cmp     [r14+80Ch], eax
                jbe     loc_140A2AC1F
                mov     edx, [rsp+24B8h+var_13D0]
                mov     edi, dword ptr [rsp+24B8h+var_13D8+4]
                mov     r8d, dword ptr [rsp+24B8h+var_13D8]

loc_140A2AA63:                          ; CODE XREF: sub_140A1EEE4+BD33↓j
                mov     rax, [r14+0A78h]
                mov     r10, r14
                test    rax, rax
                cmovnz  r10, rax
                xor     eax, eax
                mov     r9d, eax
                mov     ebx, [r10+808h]
                add     rbx, r10
                test    r8d, r8d
                jz      short loc_140A2AA95
                cmp     edi, r11d
                ja      short loc_140A2AA95
                mov     ebx, edx
                mov     r9d, edi
                add     rbx, r10

loc_140A2AA95:                          ; CODE XREF: sub_140A1EEE4+BBA2↑j
                                        ; sub_140A1EEE4+BBA7↑j
                cmp     r9d, r11d
                jz      loc_140A2ABAE
                mov     eax, r11d
                mov     r12, 0AAAAAAAAAAAAAAABh
                sub     eax, r9d
                mov     edi, eax
                add     r9d, eax

loc_140A2AAB3:                          ; CODE XREF: sub_140A1EEE4+BCB4↓j
                mov     ecx, [rbx]
                cmp     ecx, 0Ch
                jg      short loc_140A2AAFC
                jz      short loc_140A2AB19
                sub     ecx, 1
                jz      short loc_140A2AB19
                sub     ecx, 6
                jz      short loc_140A2AAEB
                sub     ecx, 1
                jz      short loc_140A2AAE2
                cmp     ecx, 2
                jnz     loc_140A2AB55
                mov     eax, [rbx+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A2AB91
; ---------------------------------------------------------------------------

loc_140A2AAE2:                          ; CODE XREF: sub_140A1EEE4+BBE5↑j
                movzx   eax, word ptr [rbx+20h]
                jmp     loc_140A2AB8B
; ---------------------------------------------------------------------------

loc_140A2AAEB:                          ; CODE XREF: sub_140A1EEE4+BBE0↑j
                mov     eax, [rbx+18h]
                add     eax, 2
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A2AB91
; ---------------------------------------------------------------------------

loc_140A2AAFC:                          ; CODE XREF: sub_140A1EEE4+BBD4↑j
                cmp     ecx, 1Ch
                jz      loc_140A2AB87
                cmp     ecx, 1Eh
                jz      short loc_140A2AB5C
                cmp     ecx, 20h ; ' '
                jle     short loc_140A2AB55
                cmp     ecx, 22h ; '"'
                jle     short loc_140A2AB2F
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A2AB55

loc_140A2AB19:                          ; CODE XREF: sub_140A1EEE4+BBD6↑j
                                        ; sub_140A1EEE4+BBDB↑j
                mov     ecx, [rbx+10h]
                mov     rax, r12
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A2AB91
; ---------------------------------------------------------------------------

loc_140A2AB2F:                          ; CODE XREF: sub_140A1EEE4+BC2E↑j
                mov     ecx, [rbx+20h]
                mov     edx, [rbx+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A2AB91
; ---------------------------------------------------------------------------

loc_140A2AB55:                          ; CODE XREF: sub_140A1EEE4+BBEA↑j
                                        ; sub_140A1EEE4+BC29↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A2AB91
; ---------------------------------------------------------------------------

loc_140A2AB5C:                          ; CODE XREF: sub_140A1EEE4+BC24↑j
                mov     eax, [rbx+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r12
                mul     rcx
                movzx   eax, word ptr [rbx+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, 2
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A2AB91
; ---------------------------------------------------------------------------

loc_140A2AB87:                          ; CODE XREF: sub_140A1EEE4+BC1B↑j
                movzx   eax, word ptr [rbx+28h]

loc_140A2AB8B:                          ; CODE XREF: sub_140A1EEE4+BC02↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A2AB91:                          ; CODE XREF: sub_140A1EEE4+BBF9↑j
                                        ; sub_140A1EEE4+BC13↑j ...
                add     rbx, rax
                sub     rdi, 1
                jnz     loc_140A2AAB3
                mov     r12, [rsp+24B8h+var_2438]
                mov     r13, [rsp+24B8h+var_2428]

loc_140A2ABAE:                          ; CODE XREF: sub_140A1EEE4+BBB4↑j
                mov     edx, ebx
                mov     dword ptr [rsp+24B8h+var_13D8+4], r9d
                sub     edx, r10d
                mov     r8d, 1
                mov     [rsp+24B8h+var_13D0], edx
                mov     edi, r9d
                mov     dword ptr [rsp+24B8h+var_13D8], r8d
                movsxd  rcx, dword ptr [rbx]
                cmp     ecx, 2Bh ; '+'
                ja      short loc_140A2ABFF
                mov     r9, 80000001002h
                bt      r9, rcx
                jnb     short loc_140A2ABFF
                mov     rax, [rsp+24B8h+var_2420]
                cmp     [rbx+8], rax
                jnz     short loc_140A2ABFF
                cmp     [rbx+10h], r15d
                jz      short loc_140A2AC22

loc_140A2ABFF:                          ; CODE XREF: sub_140A1EEE4+BCF5↑j
                                        ; sub_140A1EEE4+BD05↑j ...
                lea     eax, [rcx-21h]
                cmp     eax, r8d
                ja      short loc_140A2AC0D
                cmp     [rbx+20h], r13
                jz      short loc_140A2AC22

loc_140A2AC0D:                          ; CODE XREF: sub_140A1EEE4+BD21↑j
                inc     r11d
                cmp     r11d, [r14+80Ch]
                jb      loc_140A2AA63
                xor     eax, eax

loc_140A2AC1F:                          ; CODE XREF: sub_140A1EEE4+BB63↑j
                mov     rbx, rax

loc_140A2AC22:                          ; CODE XREF: sub_140A1EEE4+BD19↑j
                                        ; sub_140A1EEE4+BD27↑j
                mov     [rsp+24B8h+var_19E8], rbx
                test    rbx, rbx
                jnz     loc_140A2C687
                mov     rax, [r14+2A8h]
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                xor     r8d, r8d
                mov     dword ptr [rsp+24B8h+var_2450], eax
                test    dword ptr [r14+990h], 40000000h
                mov     edi, eax
                mov     eax, [rsp+24B8h+var_20D0]
                mov     dword ptr [rsp+24B8h+var_2458], eax
                jz      short loc_140A2AC80
                mov     rdx, r13
                lea     rcx, [rsp+24B8h+var_1B80]
                call    sub_140A1DFE4
                mov     r14, [rsp+24B8h+var_1B80]
                jmp     loc_140A2C671
; ---------------------------------------------------------------------------

loc_140A2AC80:                          ; CODE XREF: sub_140A1EEE4+BD7D↑j
                xor     eax, eax
                lea     r9, [rsp+24B8h+var_20D0]
                mov     [rsp+24B8h+var_FA0], rax
                mov     r12d, 1
                mov     [rsp+24B8h+var_1190], eax
                mov     dl, r12b
                mov     rax, [r14+1F0h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                lea     r8d, [r12+0Bh]
                neg     rax
                mov     [rsp+24B8h+var_FB8], rdx
                lea     r9, [rsp+24B8h+var_20D0]
                mov     dl, r12b
                sbb     ecx, ecx
                and     ecx, [rsp+24B8h+var_20D0]
                mov     [rsp+24B8h+var_20D0], ecx
                mov     rax, [r14+1F0h]
                mov     [rsp+24B8h+var_119C], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                mov     [rsp+24B8h+var_2438], rax
                neg     rax
                mov     [rsp+24B8h+var_FB0], rdx
                lea     r8d, [r12+9]
                mov     dl, r12b
                sbb     ecx, ecx
                lea     r9, [rsp+24B8h+var_20D0]
                and     ecx, [rsp+24B8h+var_20D0]
                mov     [rsp+24B8h+var_20D0], ecx
                mov     rax, [r14+1F0h]
                mov     dword ptr [rsp+24B8h+var_2460], ecx
                mov     [rsp+24B8h+var_1198], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                neg     rax
                mov     [rsp+24B8h+var_FA8], rdx
                sbb     ecx, ecx
                and     ecx, [rsp+24B8h+var_20D0]
                mov     [rsp+24B8h+var_20D0], ecx
                mov     rax, [r14+1F8h]
                mov     [rsp+24B8h+var_1194], ecx
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A2C6AB
                mov     rax, [r14+498h]
                lea     rdx, [rsp+24B8h+var_19E0]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r15d, [r14+7E4h]
                mov     r8d, [r14+924h]
                mov     [rsp+24B8h+var_F98], rax
                mov     eax, [rsp+24B8h+var_19E0]
                mov     [rsp+24B8h+var_118C], eax
                mov     eax, [rbx+54h]
                mov     [rsp+24B8h+var_11A0], eax
                mov     eax, edi
                neg     eax
                mov     [rsp+24B8h+var_FC0], r13
                lea     eax, [r15+120h]
                sbb     ebx, ebx
                and     ebx, 0Bh
                mov     dword ptr [rsp+24B8h+var_2448], ebx
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A2AED1
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rdi, rax
                mov     [rsp+24B8h+var_2410], rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A2C69C
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A2AEC8
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     r8, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A2AE5E
                mov     ecx, eax
                shr     rcx, 3
                xor     ebx, ebx

loc_140A2AE4F:                          ; CODE XREF: sub_140A1EEE4+BF78↓j
                mov     [r14], rbx
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, r12
                jnz     short loc_140A2AE4F

loc_140A2AE5E:                          ; CODE XREF: sub_140A1EEE4+BF61↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2AE6F

loc_140A2AE64:                          ; CODE XREF: sub_140A1EEE4+BF89↓j
                mov     [r14], cl
                add     r14, r12
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2AE64

loc_140A2AE6F:                          ; CODE XREF: sub_140A1EEE4+BF7E↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2AEAF
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2AEA6
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2AEBE
; ---------------------------------------------------------------------------

loc_140A2AEA6:                          ; CODE XREF: sub_140A1EEE4+BFAB↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2AEB6
; ---------------------------------------------------------------------------

loc_140A2AEAF:                          ; CODE XREF: sub_140A1EEE4+BF9A↑j
                mov     rax, [rdi+368h]

loc_140A2AEB6:                          ; CODE XREF: sub_140A1EEE4+BFC9↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2AEBE:                          ; CODE XREF: sub_140A1EEE4+BFC0↑j
                mov     [rdi+924h], ebx
                mov     ebx, dword ptr [rsp+24B8h+var_2448]

loc_140A2AEC8:                          ; CODE XREF: sub_140A1EEE4+BF39↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A2AEE3
; ---------------------------------------------------------------------------

loc_140A2AED1:                          ; CODE XREF: sub_140A1EEE4+BF09↑j
                mov     rdi, r14
                mov     [rsp+24B8h+var_2410], r14
                mov     [r14+7E4h], eax

loc_140A2AEE3:                          ; CODE XREF: sub_140A1EEE4+BFEB↑j
                add     r15, rdi
                lea     r13, [rsp+24B8h+var_FC0]
                mov     edx, 6
                mov     [rsp+24B8h+var_23E8], r13
                add     [rdi+80Ch], edx
                lea     rsi, [rsp+24B8h+var_11A0]
                xor     r9d, r9d
                mov     [rsp+24B8h+var_19D8], r15
                mov     [rsp+24B8h+var_19E8], r15
                mov     [rsp+24B8h+var_2418], rdx

loc_140A2AF24:                          ; CODE XREF: sub_140A1EEE4+C1D5↓j
                mov     r12d, [rsi]
                mov     ecx, 30h ; '0'
                mov     r14, [r13+0]
                mov     rax, r15
                lea     r8d, [rcx-2Fh]

loc_140A2AF37:                          ; CODE XREF: sub_140A1EEE4+C060↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A2AF37
                test    ecx, ecx
                jz      short loc_140A2AF55

loc_140A2AF4A:                          ; CODE XREF: sub_140A1EEE4+C06F↓j
                mov     [rax], r9b
                add     rax, r8
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2AF4A

loc_140A2AF55:                          ; CODE XREF: sub_140A1EEE4+C064↑j
                mov     [r15], ebx
                lea     rcx, [r14+r12]
                mov     [r15+8], r14
                mov     r9, r14
                mov     [r15+10h], r12d
                mov     rax, r14
                add     [rdi+828h], r12d
                mov     r10d, [rdi+814h]
                mov     r11, [rdi+818h]
                cmp     r14, rcx
                jnb     short loc_140A2AF90

loc_140A2AF84:                          ; CODE XREF: sub_140A1EEE4+C0AA↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2AF84

loc_140A2AF90:                          ; CODE XREF: sub_140A1EEE4+C09E↑j
                mov     r8d, r12d
                mov     rbx, r11
                shr     r8d, 7
                test    r8d, r8d
                jz      short loc_140A2B018
                mov     r13, 7010008004002001h

loc_140A2AFA9:                          ; CODE XREF: sub_140A1EEE4+C122↓j
                mov     edx, 8

loc_140A2AFAE:                          ; CODE XREF: sub_140A1EEE4+C0E8↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A2AFAE
                mov     rcx, r9
                sub     rcx, r14
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     r10d, eax
                mov     [rsp+24B8h+var_19D0], rdx
                xor     r10d, edx
                mov     eax, 1
                and     r10d, 3Fh
                cmovz   r10d, eax
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A2AFA9
                mov     rdi, [rsp+24B8h+var_2410]
                mov     r13, [rsp+24B8h+var_23E8]

loc_140A2B018:                          ; CODE XREF: sub_140A1EEE4+C0B9↑j
                mov     edx, r12d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2B040
                mov     r8d, edx
                shr     r8, 3

loc_140A2B02A:                          ; CODE XREF: sub_140A1EEE4+C15A↓j
                xor     rbx, [r9]
                mov     ecx, r10d
                rol     rbx, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     r8, 1
                jnz     short loc_140A2B02A

loc_140A2B040:                          ; CODE XREF: sub_140A1EEE4+C13D↑j
                test    edx, edx
                jz      short loc_140A2B059

loc_140A2B044:                          ; CODE XREF: sub_140A1EEE4+C173↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     rbx, rax
                inc     r9
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2B044

loc_140A2B059:                          ; CODE XREF: sub_140A1EEE4+C15E↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r9d, r9d
                jmp     short loc_140A2B06B
; ---------------------------------------------------------------------------

loc_140A2B065:                          ; CODE XREF: sub_140A1EEE4+C18A↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A2B06B:                          ; CODE XREF: sub_140A1EEE4+C17F↑j
                test    rax, rax
                jnz     short loc_140A2B065
                btr     ebx, 1Fh
                lea     r14d, [rax+4]
                mov     [r15+14h], ebx
                lea     edx, [rax+6]
                add     [rdi+828h], r12d
                add     r13, 8
                mov     r15, [rsp+24B8h+var_19D8]
                lea     r12d, [rax+1]
                mov     ebx, dword ptr [rsp+24B8h+var_2448]
                add     r15, 30h ; '0'
                add     rsi, r14
                mov     [rsp+24B8h+var_19D8], r15
                sub     [rsp+24B8h+var_2418], r12
                mov     [rsp+24B8h+var_23E8], r13
                jnz     loc_140A2AF24
                mov     rbx, [rsp+24B8h+var_19E8]
                mov     r15, [rsp+24B8h+var_2428]
                mov     r13d, dword ptr [rsp+24B8h+var_2450]
                mov     dword ptr [rbx], 2Ch ; ','
                mov     [rbx+18h], r15
                mov     eax, [rdi+990h]
                bt      eax, 1Ch
                jb      short loc_140A2B118
                bt      eax, 15h
                jb      short loc_140A2B118
                test    r13d, r13d
                jnz     short loc_140A2B11D
                test    dword ptr [rdi+994h], 8000h
                jz      short loc_140A2B121
                or      [rbx+20h], r12d
                mov     rdx, r15
                mov     rcx, rdi
                call    sub_140A11C50
                test    eax, eax
                jz      short loc_140A2B121
                or      [rbx+20h], r14d

loc_140A2B118:                          ; CODE XREF: sub_140A1EEE4+C204↑j
                                        ; sub_140A1EEE4+C20A↑j
                test    r13d, r13d
                jz      short loc_140A2B121

loc_140A2B11D:                          ; CODE XREF: sub_140A1EEE4+C20F↑j
                or      dword ptr [rbx+20h], 2

loc_140A2B121:                          ; CODE XREF: sub_140A1EEE4+C21B↑j
                                        ; sub_140A1EEE4+C22E↑j ...
                mov     r8d, dword ptr [rsp+24B8h+var_2458]
                lea     rax, [rsp+24B8h+var_20CC]
                mov     rdx, [rsp+24B8h+var_2420]
                lea     rcx, [rsp+24B8h+var_19F0]
                mov     [rsp+24B8h+var_2480], rax
                mov     r9, r15
                lea     rax, [rsp+24B8h+var_20C8]
                mov     [rsp+24B8h+var_19F0], rdi
                mov     [rsp+24B8h+var_2488], rax
                mov     r14, rdi
                xor     eax, eax
                mov     [rsp+24B8h+var_1B80], rdi
                mov     dword ptr [rsp+24B8h+var_2490], eax
                mov     dword ptr [rsp+24B8h+var_2498], r13d
                call    sub_140A10098
                mov     ecx, eax
                test    eax, eax
                js      loc_140A2C673
                mov     r14, [rsp+24B8h+var_19F0]
                mov     rcx, [rsp+24B8h+var_19E8]
                mov     rax, r14
                mov     r11d, [rsp+24B8h+var_20C8]
                sub     rax, rdi
                mov     edi, [rsp+24B8h+var_20CC]
                add     rcx, rax
                sub     edi, [rsp+24B8h+var_20C8]
                add     r11, r15
                mov     [rsp+24B8h+var_19E8], rcx
                xor     ebx, ebx
                mov     [rsp+24B8h+var_1B80], r14
                lea     r12, [rcx+0C0h]
                mov     ecx, 30h ; '0'
                mov     rax, r12
                lea     edx, [rcx-2Ah]

loc_140A2B1D6:                          ; CODE XREF: sub_140A1EEE4+C300↓j
                mov     [rax], rbx
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, 1
                jnz     short loc_140A2B1D6
                mov     edx, 1
                test    ecx, ecx
                jz      short loc_140A2B1F9

loc_140A2B1EF:                          ; CODE XREF: sub_140A1EEE4+C313↓j
                mov     [rax], bl
                add     rax, rdx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2B1EF

loc_140A2B1F9:                          ; CODE XREF: sub_140A1EEE4+C309↑j
                mov     eax, dword ptr [rsp+24B8h+var_2448]
                mov     r8, r11
                mov     [r12], eax
                mov     rax, r11
                mov     [r12+8], r11
                mov     [r12+10h], edi
                add     [r14+828h], edi
                mov     r9d, [r14+814h]
                mov     r15, [r14+818h]
                mov     ecx, edi
                add     rcx, r11
                cmp     r11, rcx
                jnb     short loc_140A2B23C

loc_140A2B230:                          ; CODE XREF: sub_140A1EEE4+C356↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2B230

loc_140A2B23C:                          ; CODE XREF: sub_140A1EEE4+C34A↑j
                mov     r10d, edi
                mov     rbx, r15
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A2B2B2
                mov     rsi, 7010008004002001h

loc_140A2B255:                          ; CODE XREF: sub_140A1EEE4+C3C7↓j
                mov     eax, 8

loc_140A2B25A:                          ; CODE XREF: sub_140A1EEE4+C38D↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_140A2B25A
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_19C8], rdx
                xor     r9d, edx
                mov     edx, 1
                and     r9d, 3Fh
                cmovz   r9d, edx
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2B255
                mov     r13d, dword ptr [rsp+24B8h+var_2450]

loc_140A2B2B2:                          ; CODE XREF: sub_140A1EEE4+C365↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A2B2D5
                mov     eax, edi
                shr     rax, 3

loc_140A2B2C0:                          ; CODE XREF: sub_140A1EEE4+C3EF↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A2B2C0

loc_140A2B2D5:                          ; CODE XREF: sub_140A1EEE4+C3D4↑j
                test    edi, edi
                jz      short loc_140A2B2EE

loc_140A2B2D9:                          ; CODE XREF: sub_140A1EEE4+C408↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, rdx
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2B2D9

loc_140A2B2EE:                          ; CODE XREF: sub_140A1EEE4+C3F3↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     ecx, ecx
                jmp     short loc_140A2B2FF
; ---------------------------------------------------------------------------

loc_140A2B2F9:                          ; CODE XREF: sub_140A1EEE4+C41E↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A2B2FF:                          ; CODE XREF: sub_140A1EEE4+C413↑j
                test    rax, rax
                jnz     short loc_140A2B2F9
                btr     ebx, 1Fh
                mov     [r12+14h], ebx
                mov     rdx, [rsp+24B8h+var_19E8]
                mov     dword ptr [rdx+0F0h], 30h ; '0'
                cmp     [rdx+100h], eax
                jz      short loc_140A2B33E
                mov     eax, [rdx+108h]
                test    r13d, r13d
                setnz   cl
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [rdx+108h], ecx

loc_140A2B33E:                          ; CODE XREF: sub_140A1EEE4+C441↑j
                mov     rcx, [rsp+24B8h+var_19E8]
                mov     eax, r13d
                add     rcx, 60h ; '`'
                mov     [rsp+24B8h+var_1B80], r14
                neg     eax
                mov     [rsp+24B8h+var_19C0], rcx
                sbb     r12d, r12d
                neg     r12d
                add     r12d, 0Dh
                test    rcx, rcx
                jnz     loc_140A2B5E6
                mov     r13d, [r14+7E4h]
                mov     r8d, [r14+924h]
                lea     eax, [r13+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A2B469
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     r15, rax
                xor     eax, eax
                test    r15, r15
                jz      loc_140A2C69C
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A2B45F
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A2B3F5
                mov     ecx, eax
                shr     rcx, 3
                xor     ebx, ebx

loc_140A2B3E5:                          ; CODE XREF: sub_140A1EEE4+C50F↓j
                mov     [r14], rbx
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, 1
                jnz     short loc_140A2B3E5

loc_140A2B3F5:                          ; CODE XREF: sub_140A1EEE4+C4F7↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2B406

loc_140A2B3FB:                          ; CODE XREF: sub_140A1EEE4+C520↓j
                mov     [r14], cl
                inc     r14
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2B3FB

loc_140A2B406:                          ; CODE XREF: sub_140A1EEE4+C515↑j
                mov     ebx, [r15+924h]
                mov     [r15+924h], edx
                cmp     edx, 3
                jz      short loc_140A2B449
                test    dword ptr [r15+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2B440
                mov     rax, [r15+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2B458
; ---------------------------------------------------------------------------

loc_140A2B440:                          ; CODE XREF: sub_140A1EEE4+C545↑j
                mov     rax, [r15+100h]
                jmp     short loc_140A2B450
; ---------------------------------------------------------------------------

loc_140A2B449:                          ; CODE XREF: sub_140A1EEE4+C533↑j
                mov     rax, [r15+368h]

loc_140A2B450:                          ; CODE XREF: sub_140A1EEE4+C563↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A2B458:                          ; CODE XREF: sub_140A1EEE4+C55A↑j
                mov     [r15+924h], ebx

loc_140A2B45F:                          ; CODE XREF: sub_140A1EEE4+C4CF↑j
                and     dword ptr [r15+990h], 0FFFFFFFBh
                jmp     short loc_140A2B473
; ---------------------------------------------------------------------------

loc_140A2B469:                          ; CODE XREF: sub_140A1EEE4+C4A7↑j
                mov     r15, r14
                mov     [r14+7E4h], eax

loc_140A2B473:                          ; CODE XREF: sub_140A1EEE4+C583↑j
                mov     r14d, 1
                lea     r11, [r15+r13]
                add     [r15+80Ch], r14d
                mov     rax, r11
                mov     [rsp+24B8h+var_19B8], r11
                xor     ebx, ebx
                lea     ecx, [r14+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A2B498:                          ; CODE XREF: sub_140A1EEE4+C5C1↓j
                mov     [rax], rbx
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r14
                jnz     short loc_140A2B498
                test    ecx, ecx
                jz      short loc_140A2B4B5

loc_140A2B4AB:                          ; CODE XREF: sub_140A1EEE4+C5CF↓j
                mov     [rax], bl
                add     rax, r14
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2B4AB

loc_140A2B4B5:                          ; CODE XREF: sub_140A1EEE4+C5C5↑j
                mov     r13, [rsp+24B8h+var_2438]
                mov     [r11], r12d
                mov     rdi, r13
                mov     r12d, dword ptr [rsp+24B8h+var_2460]
                mov     [r11+8], r13
                mov     [r11+10h], r12d
                add     [r15+828h], r12d
                mov     r9d, [r15+814h]
                lea     rcx, [r12+r13]
                mov     r10, [r15+818h]
                cmp     r13, rcx
                jnb     short loc_140A2B4FD
                mov     rax, r13

loc_140A2B4F1:                          ; CODE XREF: sub_140A1EEE4+C617↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2B4F1

loc_140A2B4FD:                          ; CODE XREF: sub_140A1EEE4+C608↑j
                mov     r8d, r12d
                mov     rbx, r10
                shr     r8d, 7
                test    r8d, r8d
                jz      short loc_140A2B573
                mov     r12, 7010008004002001h

loc_140A2B516:                          ; CODE XREF: sub_140A1EEE4+C688↓j
                mov     edx, 8

loc_140A2B51B:                          ; CODE XREF: sub_140A1EEE4+C654↓j
                mov     rax, [rdi]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [rdi+8]
                rol     rax, cl
                add     rdi, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r14
                jnz     short loc_140A2B51B
                mov     rcx, rdi
                sub     rcx, r13
                xor     rcx, r10
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_19B0], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r14d
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A2B516
                mov     r12d, dword ptr [rsp+24B8h+var_2460]

loc_140A2B573:                          ; CODE XREF: sub_140A1EEE4+C626↑j
                mov     edx, r12d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2B59A
                mov     r8d, edx
                shr     r8, 3

loc_140A2B585:                          ; CODE XREF: sub_140A1EEE4+C6B4↓j
                xor     rbx, [rdi]
                mov     ecx, r9d
                rol     rbx, cl
                add     rdi, 8
                add     edx, 0FFFFFFF8h
                sub     r8, r14
                jnz     short loc_140A2B585

loc_140A2B59A:                          ; CODE XREF: sub_140A1EEE4+C698↑j
                test    edx, edx
                jz      short loc_140A2B5B2

loc_140A2B59E:                          ; CODE XREF: sub_140A1EEE4+C6CC↓j
                movzx   eax, byte ptr [rdi]
                mov     ecx, r9d
                xor     rbx, rax
                add     rdi, r14
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2B59E

loc_140A2B5B2:                          ; CODE XREF: sub_140A1EEE4+C6B8↑j
                mov     rax, rbx
                jmp     short loc_140A2B5B9
; ---------------------------------------------------------------------------

loc_140A2B5B7:                          ; CODE XREF: sub_140A1EEE4+C6DC↓j
                xor     ebx, eax

loc_140A2B5B9:                          ; CODE XREF: sub_140A1EEE4+C6D1↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2B5B7
                btr     ebx, 1Fh
                mov     r14, r15
                mov     [r11+14h], ebx
                mov     rax, [rsp+24B8h+var_19B8]
                mov     [rsp+24B8h+var_19C0], rax
                add     [r15+828h], r12d
                jmp     short loc_140A2B5F6
; ---------------------------------------------------------------------------

loc_140A2B5E6:                          ; CODE XREF: sub_140A1EEE4+C488↑j
                mov     r13, [rsp+24B8h+var_2438]
                mov     [rcx], r12d
                mov     r12d, dword ptr [rsp+24B8h+var_2460]

loc_140A2B5F6:                          ; CODE XREF: sub_140A1EEE4+C700↑j
                test    dword ptr [r14+990h], 40000000h
                jz      short loc_140A2B622
                test    r12d, r12d
                jz      short loc_140A2B622
                mov     r9, [rsp+24B8h+var_19C0]
                mov     r8d, r12d
                add     r9, 1Ch
                mov     rdx, r13
                mov     rcx, r14
                call    sub_1403EA0CC

loc_140A2B622:                          ; CODE XREF: sub_140A1EEE4+C71D↑j
                                        ; sub_140A1EEE4+C722↑j
                mov     rax, [rsp+24B8h+var_19C0]
                xor     ecx, ecx
                mov     r15, [rsp+24B8h+var_2428]
                mov     [rsp+24B8h+var_1B80], r14
                mov     [rax+18h], ecx
                xor     eax, eax
                mov     rbx, [rsp+24B8h+var_19E8]
                cmp     dword ptr [rsp+24B8h+var_2450], eax
                setnz   cl
                mov     dword ptr [rbx+90h], 23h ; '#'
                mov     eax, [rbx+0B8h]
                and     eax, 0FFFFFFFEh
                or      ecx, eax
                mov     [rbx+0B8h], ecx
                cmp     dword ptr [rbx+0A0h], 94h
                jb      short loc_140A2B6E1
                mov     rax, [r14+1F8h]
                mov     rcx, r15
                mov     rdi, [rbx+98h]
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jz      loc_140A2C69C
                mov     ecx, [rax+50h]
                or      dword ptr [rbx+0B8h], 2
                add     rcx, r15
                mov     rax, [rdi+70h]
                cmp     rax, r15
                jb      short loc_140A2B6C2
                cmp     rax, rcx
                jnb     short loc_140A2B6C2
                mov     rax, [rax]
                mov     [rbx+0A8h], rax
                or      dword ptr [rbx+0B8h], 4

loc_140A2B6C2:                          ; CODE XREF: sub_140A1EEE4+C7C6↑j
                                        ; sub_140A1EEE4+C7CB↑j
                mov     rax, [rdi+78h]
                cmp     rax, r15
                jb      short loc_140A2B6E1
                cmp     rax, rcx
                jnb     short loc_140A2B6E1
                mov     rax, [rax]
                mov     [rbx+0B0h], rax
                or      dword ptr [rbx+0B8h], 8

loc_140A2B6E1:                          ; CODE XREF: sub_140A1EEE4+C791↑j
                                        ; sub_140A1EEE4+C7E5↑j ...
                test    dword ptr [r14+990h], 400000h
                mov     [rsp+24B8h+var_19F0], r14
                jz      loc_140A2C667
                mov     rax, [r14+1F8h]
                mov     rcx, r15
                call    j__guard_dispatch_icall_nop
                mov     [rsp+24B8h+var_2438], rax
                mov     r13, rax
                test    rax, rax
                jnz     short loc_140A2B723

loc_140A2B719:                          ; CODE XREF: sub_140A1EEE4+C88B↓j
                                        ; sub_140A1EEE4+C8D1↓j ...
                mov     ecx, 0C000007Bh
                jmp     loc_140A2C673
; ---------------------------------------------------------------------------

loc_140A2B723:                          ; CODE XREF: sub_140A1EEE4+C833↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2458]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                xor     eax, eax
                mov     rdi, rdx
                movzx   edx, word ptr [r13+6]
                shr     rdi, 3
                mov     [rsp+24B8h+var_2410], rdi
                mov     word ptr [rsp+24B8h+var_2408], dx
                test    dx, dx
                jnz     short loc_140A2B7BA
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A396D9

loc_140A2B768:                          ; CODE XREF: sub_140A1EEE4+CB80↓j
                                        ; sub_140A1EEE4+CB98↓j
                cmp     [r14+8F8h], eax
                jnz     short loc_140A2B719
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, r14
                mov     [r14+900h], rax
                xor     eax, eax
                mov     [r14+908h], rax
                mov     qword ptr [r14+910h], 10Fh
                mov     [r14+918h], r15
                mov     dword ptr [r14+8F8h], 1

loc_140A2B7AB:                          ; CODE XREF: sub_140A1EEE4+CC02↓j
                xor     edx, edx
                mov     rcx, r14
                call    sub_140A113CC
                jmp     loc_140A2B719
; ---------------------------------------------------------------------------

loc_140A2B7BA:                          ; CODE XREF: sub_140A1EEE4+C871↑j
                mov     r12, [rsp+24B8h+var_2420]
                movzx   r8d, word ptr [r13+14h]
                add     r8, 18h
                movzx   r9d, dx
                add     r8, r13
                mov     eax, edi
                mov     [rsp+24B8h+var_23E0], r8
                mov     dword ptr [rsp+24B8h+var_2448], r9d
                lea     rax, [rax+rax*2]
                shl     rax, 2
                mov     [rsp+24B8h+var_23E8], rax
                add     rax, r12
                mov     [rsp+24B8h+var_2418], rax
                xor     eax, eax
                mov     dword ptr [rsp+24B8h+var_2460], eax
                mov     ecx, eax
                test    r9d, r9d
                jz      loc_140A2BA81

loc_140A2B80D:                          ; CODE XREF: sub_140A1EEE4+CB53↓j
                mov     eax, ecx
                lea     rdx, [rax+rax*4]
                mov     r13d, [r8+rdx*8+10h]
                mov     eax, [r8+rdx*8+8]
                cmp     r13d, eax
                mov     ebx, [r8+rdx*8+0Ch]
                cmovbe  r13d, eax
                mov     [rsp+24B8h+var_23F8], rdx
                add     r13d, ebx
                mov     dword ptr [rsp+24B8h+var_2440], ebx
                test    ecx, ecx
                jz      short loc_140A2B852
                lea     eax, [rcx-1]
                lea     rax, [rax+rax*4]
                cmp     r13d, [r8+rax*8+0Ch]
                jb      loc_140A2BA51
                mov     ecx, dword ptr [rsp+24B8h+var_2460]

loc_140A2B852:                          ; CODE XREF: sub_140A1EEE4+C956↑j
                cmp     r12, [rsp+24B8h+var_2418]
                jz      loc_140A2BA29

loc_140A2B860:                          ; CODE XREF: sub_140A1EEE4+CB36↓j
                mov     ecx, [r12]
                mov     eax, [r12+4]
                cmp     ecx, r13d
                jnb     loc_140A2BA20
                cmp     eax, ebx
                jbe     loc_140A2BA20
                cmp     ecx, ebx
                jb      loc_140A2BA69
                cmp     eax, r13d
                ja      loc_140A2BA69
                mov     eax, [r12+8]
                test    al, 1
                jnz     short loc_140A2B8A0
                mov     al, [rax+r15]
                test    al, 20h
                jz      loc_140A2BA0E

loc_140A2B8A0:                          ; CODE XREF: sub_140A1EEE4+C9AE↑j
                mov     eax, [r8+rdx*8+8]
                mov     rcx, r12
                mov     ebx, [r8+rdx*8+10h]
                cmp     ebx, eax
                mov     r15d, [r8+rdx*8+0Ch]
                mov     rdx, [rsp+24B8h+var_2428]
                cmovbe  ebx, eax
                mov     rax, [r14+418h]
                add     ebx, r15d
                call    j__guard_dispatch_icall_nop
                mov     rdi, rax
                cmp     [rax], r15d
                jb      short loc_140A2B8DB
                cmp     [rax+4], ebx
                jbe     short loc_140A2B94F

loc_140A2B8DB:                          ; CODE XREF: sub_140A1EEE4+C9F0↑j
                mov     r8, [rsp+24B8h+var_2428]
                mov     eax, 80000000h
                mov     edx, edi
                sub     edx, r8d
                or      edx, eax
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A3973A
                cmp     [r14+8F8h], eax
                jnz     short loc_140A2B94F
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r14
                mov     rcx, r14
                mov     [r14+900h], rax
                xor     eax, eax
                mov     [r14+908h], rax
                mov     qword ptr [r14+910h], 10Fh
                mov     [r14+918h], r8
                mov     dword ptr [r14+8F8h], 1
                call    sub_140A113CC

loc_140A2B94F:                          ; CODE XREF: sub_140A1EEE4+C9F5↑j
                                        ; sub_140A1EEE4+CA25↑j
                mov     r8d, [rdi]
                mov     rcx, rdi
                add     r8, [rsp+24B8h+var_2428]
                mov     rax, [r14+420h]
                mov     rdx, [rsp+24B8h+var_2428]
                call    j__guard_dispatch_icall_nop
                mov     rdx, rax
                cmp     [rax], r15d
                jb      short loc_140A2B97E
                cmp     [rax+4], ebx
                jbe     short loc_140A2B9F2

loc_140A2B97E:                          ; CODE XREF: sub_140A1EEE4+CA93↑j
                mov     r15, [rsp+24B8h+var_2428]
                mov     eax, 80000000h
                sub     edx, r15d
                or      edx, eax
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A39709
                cmp     [r14+8F8h], eax
                jnz     short loc_140A2B9FA
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r14
                mov     rcx, r14
                mov     [r14+900h], rax
                xor     eax, eax
                mov     [r14+908h], rax
                mov     qword ptr [r14+910h], 10Fh
                mov     [r14+918h], r15
                mov     dword ptr [r14+8F8h], 1
                call    sub_140A113CC
                jmp     short loc_140A2B9FA
; ---------------------------------------------------------------------------

loc_140A2B9F2:                          ; CODE XREF: sub_140A1EEE4+CA98↑j
                mov     r15, [rsp+24B8h+var_2428]

loc_140A2B9FA:                          ; CODE XREF: sub_140A1EEE4+CAC6↑j
                                        ; sub_140A1EEE4+CB0C↑j
                mov     rdx, [rsp+24B8h+var_23F8]
                mov     ebx, dword ptr [rsp+24B8h+var_2440]
                mov     r8, [rsp+24B8h+var_23E0]

loc_140A2BA0E:                          ; CODE XREF: sub_140A1EEE4+C9B6↑j
                add     r12, 0Ch
                cmp     r12, [rsp+24B8h+var_2418]
                jnz     loc_140A2B860

loc_140A2BA20:                          ; CODE XREF: sub_140A1EEE4+C988↑j
                                        ; sub_140A1EEE4+C990↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     r9d, dword ptr [rsp+24B8h+var_2448]

loc_140A2BA29:                          ; CODE XREF: sub_140A1EEE4+C976↑j
                mov     ebx, 1
                add     ecx, ebx
                mov     dword ptr [rsp+24B8h+var_2460], ecx
                cmp     ecx, r9d
                jb      loc_140A2B80D
                mov     rdi, [rsp+24B8h+var_2410]
                xor     eax, eax
                mov     r13, [rsp+24B8h+var_2438]
                jmp     short loc_140A2BA86
; ---------------------------------------------------------------------------

loc_140A2BA51:                          ; CODE XREF: sub_140A1EEE4+C964↑j
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A39673
                jmp     loc_140A2B768
; ---------------------------------------------------------------------------

loc_140A2BA69:                          ; CODE XREF: sub_140A1EEE4+C998↑j
                                        ; sub_140A1EEE4+C9A1↑j
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A396A6
                jmp     loc_140A2B768
; ---------------------------------------------------------------------------

loc_140A2BA81:                          ; CODE XREF: sub_140A1EEE4+C923↑j
                mov     ebx, 1

loc_140A2BA86:                          ; CODE XREF: sub_140A1EEE4+CB6B↑j
                cmp     r12, [rsp+24B8h+var_2418]
                jz      short loc_140A2BAEB
                xor     eax, eax
                test    dword ptr [r14+990h], 200000h
                jz      loc_140A39768
                cmp     [r14+8F8h], eax
                jnz     loc_140A2B719
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, r14
                mov     [r14+900h], rax
                xor     eax, eax
                mov     [r14+908h], rax
                mov     qword ptr [r14+910h], 10Fh
                mov     [r14+918h], r15
                mov     [r14+8F8h], ebx
                jmp     loc_140A2B7AB
; ---------------------------------------------------------------------------

loc_140A2BAEB:                          ; CODE XREF: sub_140A1EEE4+CBAA↑j
                test    edi, edi
                jz      short loc_140A2BAF7
                lea     ecx, [rdi+6]
                and     ecx, 0FFFFFFF8h
                jmp     short loc_140A2BAF9
; ---------------------------------------------------------------------------

loc_140A2BAF7:                          ; CODE XREF: sub_140A1EEE4+CC09↑j
                mov     ecx, eax

loc_140A2BAF9:                          ; CODE XREF: sub_140A1EEE4+CC11↑j
                mov     r15d, [r14+7E4h]
                lea     eax, [r9+2]
                mov     r8d, [r14+924h]
                lea     eax, [rax+rax*2]
                lea     eax, [rcx+rax*8]
                add     eax, r15d
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A2BC1E
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     [rsp+24B8h+var_2438], rax
                mov     r8, rax
                test    rax, rax
                jz      loc_140A2BC14
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A2BC05
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A2BB8B
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2BB7C:                          ; CODE XREF: sub_140A1EEE4+CCA5↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, rbx
                jnz     short loc_140A2BB7C

loc_140A2BB8B:                          ; CODE XREF: sub_140A1EEE4+CC8D↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2BB9C

loc_140A2BB91:                          ; CODE XREF: sub_140A1EEE4+CCB6↓j
                mov     [r14], cl
                add     r14, rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2BB91

loc_140A2BB9C:                          ; CODE XREF: sub_140A1EEE4+CCAB↑j
                mov     ebx, [r8+924h]
                mov     [r8+924h], edx
                cmp     edx, 3
                jz      short loc_140A2BBDF
                test    dword ptr [r8+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2BBD6
                mov     rax, [r8+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2BBEE
; ---------------------------------------------------------------------------

loc_140A2BBD6:                          ; CODE XREF: sub_140A1EEE4+CCDB↑j
                mov     rax, [r8+100h]
                jmp     short loc_140A2BBE6
; ---------------------------------------------------------------------------

loc_140A2BBDF:                          ; CODE XREF: sub_140A1EEE4+CCC9↑j
                mov     rax, [r8+368h]

loc_140A2BBE6:                          ; CODE XREF: sub_140A1EEE4+CCF9↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A2BBEE:                          ; CODE XREF: sub_140A1EEE4+CCF0↑j
                mov     r8, [rsp+24B8h+var_2438]
                mov     rdi, [rsp+24B8h+var_2410]
                mov     [r8+924h], ebx

loc_140A2BC05:                          ; CODE XREF: sub_140A1EEE4+CC65↑j
                and     dword ptr [r8+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2448]
                jmp     short loc_140A2BC30
; ---------------------------------------------------------------------------

loc_140A2BC14:                          ; CODE XREF: sub_140A1EEE4+CC55↑j
                mov     ecx, 0C000009Ah
                jmp     loc_140A2C673
; ---------------------------------------------------------------------------

loc_140A2BC1E:                          ; CODE XREF: sub_140A1EEE4+CC37↑j
                mov     r8, r14
                mov     [rsp+24B8h+var_2438], r14
                mov     [r14+7E4h], eax

loc_140A2BC30:                          ; CODE XREF: sub_140A1EEE4+CD2E↑j
                mov     r12d, 1
                lea     rbx, [r8+r15]
                add     [r8+80Ch], r12d
                mov     rax, rbx
                mov     [rsp+24B8h+var_19A8], rbx
                xor     r10d, r10d
                lea     ecx, [r12+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A2BC57:                          ; CODE XREF: sub_140A1EEE4+CD80↓j
                mov     [rax], r10
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r12
                jnz     short loc_140A2BC57
                test    ecx, ecx
                jz      short loc_140A2BC75

loc_140A2BC6A:                          ; CODE XREF: sub_140A1EEE4+CD8F↓j
                mov     [rax], r10b
                add     rax, r12
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2BC6A

loc_140A2BC75:                          ; CODE XREF: sub_140A1EEE4+CD84↑j
                mov     r11, [rsp+24B8h+var_2420]
                xor     eax, eax
                mov     dword ptr [rbx], 1Eh
                mov     [rbx+8], r11
                mov     [rbx+10h], eax
                mov     rcx, [r8+818h]
                mov     rax, rcx
                jmp     short loc_140A2BC9A
; ---------------------------------------------------------------------------

loc_140A2BC98:                          ; CODE XREF: sub_140A1EEE4+CDBD↓j
                xor     ecx, eax

loc_140A2BC9A:                          ; CODE XREF: sub_140A1EEE4+CDB2↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2BC98
                mov     rdx, [rsp+24B8h+var_2428]
                btr     ecx, 1Fh
                mov     [rbx+14h], ecx
                mov     r14, r8
                mov     rax, [rsp+24B8h+var_19A8]
                mov     ebx, 0FFFEh
                mov     [rsp+24B8h+var_19A0], rax
                mov     [rsp+24B8h+var_19F0], r8
                mov     [rax+18h], rdx
                mov     ecx, [r13+50h]
                mov     rax, [rsp+24B8h+var_19A0]
                mov     [rax+20h], ecx
                mov     rax, [rsp+24B8h+var_19A0]
                mov     ecx, dword ptr [rsp+24B8h+var_2458]
                mov     [rax+24h], ecx
                mov     rax, [rsp+24B8h+var_19A0]
                movzx   ecx, word ptr [rsp+24B8h+var_2408]
                mov     [rax+28h], cx
                xor     eax, eax
                cmp     dword ptr [rsp+24B8h+var_2450], eax
                mov     ecx, eax
                mov     rdx, [rsp+24B8h+var_19A0]
                setnz   cl
                movzx   eax, word ptr [rdx+2Ah]
                and     ax, bx
                or      cx, ax
                mov     [rdx+2Ah], cx
                mov     rcx, [rsp+24B8h+var_19A0]
                lea     rdx, [rcx+30h]
                mov     [rsp+24B8h+var_2410], rdx
                test    edi, edi
                jz      short loc_140A2BD52
                lea     r10d, [rdi-1]
                add     r10, 7
                and     r10, 0FFFFFFFFFFFFFFF8h
                add     r10, rdx
                jmp     short loc_140A2BD55
; ---------------------------------------------------------------------------

loc_140A2BD52:                          ; CODE XREF: sub_140A1EEE4+CE5B↑j
                mov     r10, rdx

loc_140A2BD55:                          ; CODE XREF: sub_140A1EEE4+CE6C↑j
                movzx   eax, word ptr [rcx+28h]
                mov     [rsp+24B8h+var_23F8], r10
                lea     rcx, [rax+rax*2]
                xor     eax, eax
                lea     rbx, [r10+rcx*8]
                test    edi, edi
                mov     ecx, 0Ch
                mov     [rsp+24B8h+var_23D0], rbx
                cmovz   rcx, [rsp+24B8h+var_23E8]
                add     rcx, r11
                mov     [rsp+24B8h+var_23E8], rcx
                test    r9d, r9d
                jz      short loc_140A2BDC0
                lea     rax, [r10+8]
                mov     edx, r9d
                xor     edi, edi
                mov     r15d, 80000000h

loc_140A2BDA2:                          ; CODE XREF: sub_140A1EEE4+CED8↓j
                mov     ecx, 2

loc_140A2BDA7:                          ; CODE XREF: sub_140A1EEE4+CED3↓j
                mov     [rax-8], edi
                mov     [rax-4], edi
                mov     [rax], r15d
                add     rax, 0Ch
                sub     rcx, r12
                jnz     short loc_140A2BDA7
                sub     rdx, r12
                jnz     short loc_140A2BDA2
                xor     eax, eax

loc_140A2BDC0:                          ; CODE XREF: sub_140A1EEE4+CEAD↑j
                cmp     r10, rbx
                jz      loc_140A2C667
                mov     r15, [rsp+24B8h+var_23E0]
                jmp     short loc_140A2BDD9
; ---------------------------------------------------------------------------

loc_140A2BDD3:                          ; CODE XREF: sub_140A1EEE4+D775↓j
                xor     eax, eax
                lea     r12d, [rax+1]

loc_140A2BDD9:                          ; CODE XREF: sub_140A1EEE4+CEED↑j
                mov     r14d, eax
                mov     eax, [r15+24h]
                bt      eax, 19h
                jb      loc_140A2BFE3
                mov     ecx, [r15]
                cmp     ecx, 54494E49h
                jnz     short loc_140A2BE03
                cmp     dword ptr [r15+4], 4742444Bh
                jz      loc_140A2BFE3

loc_140A2BE03:                          ; CODE XREF: sub_140A1EEE4+CF0F↑j
                cmp     ecx, 45474150h
                jnz     short loc_140A2BE3A
                movzx   eax, word ptr [r15+4]
                mov     edx, 7877h
                cmp     ax, dx
                jz      loc_140A2BFE3
                mov     edx, 7277h
                cmp     ax, dx
                jz      loc_140A2BFE3
                mov     edx, 7777h
                cmp     ax, dx
                jz      loc_140A2BFE3

loc_140A2BE3A:                          ; CODE XREF: sub_140A1EEE4+CF25↑j
                cmp     ecx, 41525245h
                jnz     short loc_140A2BE52
                mov     eax, 4154h
                cmp     [r15+4], ax
                jz      loc_140A2BFE3

loc_140A2BE52:                          ; CODE XREF: sub_140A1EEE4+CF5C↑j
                mov     rax, [rsp+24B8h+var_2438]
                mov     rdi, r15
                mov     rbx, [r8+930h]
                mov     r9d, 7
                mov     r8, [r8+938h]
                sub     rdi, rbx
                or      r13d, 0FFFFFFFFh
                mov     r10, [rax+940h]
                mov     r11, [rax+948h]

loc_140A2BE86:                          ; CODE XREF: sub_140A1EEE4+CFB4↓j
                movzx   edx, byte ptr [rdi+rbx]
                movzx   eax, byte ptr [rbx]
                add     rbx, r12
                cmp     rdx, rax
                jnz     short loc_140A2BE9F
                add     r9d, r13d
                jnz     short loc_140A2BE86
                jmp     loc_140A2BF23
; ---------------------------------------------------------------------------

loc_140A2BE9F:                          ; CODE XREF: sub_140A1EEE4+CFAF↑j
                mov     ebx, 8
                mov     rdi, r15

loc_140A2BEA7:                          ; CODE XREF: sub_140A1EEE4+CFDC↓j
                mov     rcx, [rdi]
                add     rdi, 8
                mov     rax, [r8]
                add     r8, 8
                cmp     rcx, rax
                jnz     short loc_140A2BEDF
                add     ebx, 0FFFFFFF8h
                cmp     ebx, 8
                jnb     short loc_140A2BEA7
                test    ebx, ebx
                jz      short loc_140A2BF23

loc_140A2BEC6:                          ; CODE XREF: sub_140A1EEE4+CFF7↓j
                movzx   edx, byte ptr [rdi]
                add     rdi, r12
                movzx   eax, byte ptr [r8]
                add     r8, r12
                cmp     rdx, rax
                jnz     short loc_140A2BEDF
                add     ebx, r13d
                jnz     short loc_140A2BEC6
                jmp     short loc_140A2BF23
; ---------------------------------------------------------------------------

loc_140A2BEDF:                          ; CODE XREF: sub_140A1EEE4+CFD4↑j
                                        ; sub_140A1EEE4+CFF2↑j
                mov     rbx, r15
                mov     edi, 4
                sub     rbx, r10

loc_140A2BEEA:                          ; CODE XREF: sub_140A1EEE4+D01A↓j
                movzx   edx, byte ptr [rbx+r10]
                movzx   eax, byte ptr [r10]
                add     r10, r12
                cmp     rdx, rax
                jnz     short loc_140A2BF02
                add     edi, r13d
                jnz     short loc_140A2BEEA
                jmp     short loc_140A2BF23
; ---------------------------------------------------------------------------

loc_140A2BF02:                          ; CODE XREF: sub_140A1EEE4+D015↑j
                mov     rbx, r15
                mov     edi, 6
                sub     rbx, r11

loc_140A2BF0D:                          ; CODE XREF: sub_140A1EEE4+D03D↓j
                movzx   edx, byte ptr [rbx+r11]
                movzx   eax, byte ptr [r11]
                add     r11, r12
                cmp     rdx, rax
                jnz     short loc_140A2BF26
                add     edi, r13d
                jnz     short loc_140A2BF0D

loc_140A2BF23:                          ; CODE XREF: sub_140A1EEE4+CFB6↑j
                                        ; sub_140A1EEE4+CFE0↑j ...
                mov     r14d, r12d

loc_140A2BF26:                          ; CODE XREF: sub_140A1EEE4+D038↑j
                mov     r11, [rsp+24B8h+var_2420]
                mov     r10, [rsp+24B8h+var_23F8]
                mov     r8, [rsp+24B8h+var_2438]

loc_140A2BF3E:                          ; CODE XREF: sub_140A1EEE4+D102↓j
                mov     ecx, [r15+24h]
                xor     eax, eax
                test    ecx, ecx
                cmovs   r14d, r12d
                mov     dword ptr [rsp+24B8h+var_2450], r14d
                test    r14d, r14d
                jz      short loc_140A2BF7B
                cmp     dword ptr [r15], 54494E49h
                jnz     short loc_140A2BF7B
                cmp     dword ptr [r15+4], 4742444Bh
                jnz     short loc_140A2BF7B
                test    dword ptr [r8+994h], 2000h
                cmovnz  r14d, eax
                mov     dword ptr [rsp+24B8h+var_2450], r14d

loc_140A2BF7B:                          ; CODE XREF: sub_140A1EEE4+D06E↑j
                                        ; sub_140A1EEE4+D077↑j ...
                test    dword ptr [r8+994h], 4000h
                mov     rdx, [rsp+24B8h+var_2428]
                jz      short loc_140A2BFB0
                bt      ecx, 1Dh
                jnb     short loc_140A2BFB0
                cmp     rdx, [r8+5E8h]
                jz      short loc_140A2BFA8
                cmp     rdx, [r8+5F0h]
                jnz     short loc_140A2BFB0

loc_140A2BFA8:                          ; CODE XREF: sub_140A1EEE4+D0B9↑j
                mov     r14d, r12d
                mov     dword ptr [rsp+24B8h+var_2450], r12d

loc_140A2BFB0:                          ; CODE XREF: sub_140A1EEE4+D0AA↑j
                                        ; sub_140A1EEE4+D0B0↑j ...
                mov     ecx, [r15+10h]
                mov     eax, [r15+8]
                cmp     ecx, eax
                mov     r9d, [r15+0Ch]
                mov     rbx, [rsp+24B8h+var_2418]
                cmovbe  ecx, eax
                add     ecx, r9d
                mov     dword ptr [rsp+24B8h+var_2458], r9d
                mov     dword ptr [rsp+24B8h+var_2460], ecx
                cmp     r11, rbx
                jz      short loc_140A2BFEB
                mov     r15d, [r11]
                mov     r12d, [r11+4]
                jmp     short loc_140A2BFF3
; ---------------------------------------------------------------------------

loc_140A2BFE3:                          ; CODE XREF: sub_140A1EEE4+CF00↑j
                                        ; sub_140A1EEE4+CF19↑j ...
                mov     r14d, r12d
                jmp     loc_140A2BF3E
; ---------------------------------------------------------------------------

loc_140A2BFEB:                          ; CODE XREF: sub_140A1EEE4+D0F4↑j
                xor     eax, eax
                mov     r15d, eax
                mov     r12d, eax

loc_140A2BFF3:                          ; CODE XREF: sub_140A1EEE4+D0FD↑j
                mov     dword ptr [rsp+24B8h+var_2440], r12d
                mov     r13d, r9d
                mov     dword ptr [rsp+24B8h+var_2448], r15d
                cmp     r11, rbx
                jz      loc_140A2C1B4
                cmp     r15d, r9d
                jbe     loc_140A2C1B4
                cmp     r12d, ecx
                ja      loc_140A2C1B4
                test    r14d, r14d
                jnz     loc_140A2C1B4
                mov     [r10], r9d
                mov     edi, r15d
                mov     [r10+4], r15d
                mov     r13d, r15d
                mov     eax, [r10]
                sub     edi, eax
                mov     r10d, edi
                lea     r11, [rdx+rax]
                add     r10, r11
                xor     eax, eax
                mov     edx, eax

loc_140A2C044:                          ; CODE XREF: sub_140A1EEE4+D187↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_FC0]
                mov     ecx, [rsp+rax*4+24B8h+var_11A0]
                add     rcx, rbx
                cmp     r11, rcx
                jnb     short loc_140A2C066
                cmp     r10, rbx
                ja      loc_140A2C1A0

loc_140A2C066:                          ; CODE XREF: sub_140A1EEE4+D177↑j
                inc     edx
                cmp     edx, 6
                jb      short loc_140A2C044
                add     [r8+828h], edi
                mov     rax, r11
                mov     r9d, [r8+814h]
                mov     r14, [r8+818h]
                mov     r8, r11
                cmp     r11, r10
                jnb     short loc_140A2C099

loc_140A2C08D:                          ; CODE XREF: sub_140A1EEE4+D1B3↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r10
                jb      short loc_140A2C08D

loc_140A2C099:                          ; CODE XREF: sub_140A1EEE4+D1A7↑j
                mov     r10d, edi
                mov     rbx, r14
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A2C11B
                mov     r15, 7010008004002001h

loc_140A2C0B2:                          ; CODE XREF: sub_140A1EEE4+D22B↓j
                mov     edx, 8

loc_140A2C0B7:                          ; CODE XREF: sub_140A1EEE4+D1F1↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A2C0B7
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1998], rdx
                xor     r9d, edx
                mov     eax, 1
                and     r9d, 3Fh
                cmovz   r9d, eax
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2C0B2
                mov     r15d, dword ptr [rsp+24B8h+var_2448]
                mov     r12d, dword ptr [rsp+24B8h+var_2440]

loc_140A2C11B:                          ; CODE XREF: sub_140A1EEE4+D1C2↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A2C13F
                mov     edx, edi
                shr     rdx, 3

loc_140A2C129:                          ; CODE XREF: sub_140A1EEE4+D259↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, 1
                jnz     short loc_140A2C129

loc_140A2C13F:                          ; CODE XREF: sub_140A1EEE4+D23D↑j
                test    edi, edi
                jz      short loc_140A2C158

loc_140A2C143:                          ; CODE XREF: sub_140A1EEE4+D272↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                inc     r8
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2C143

loc_140A2C158:                          ; CODE XREF: sub_140A1EEE4+D25D↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     edx, edx
                jmp     short loc_140A2C169
; ---------------------------------------------------------------------------

loc_140A2C163:                          ; CODE XREF: sub_140A1EEE4+D288↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A2C169:                          ; CODE XREF: sub_140A1EEE4+D27D↑j
                test    rax, rax
                jnz     short loc_140A2C163
                mov     rax, [rsp+24B8h+var_23F8]
                btr     ebx, 1Fh
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     r8, [rsp+24B8h+var_2438]
                mov     r9d, dword ptr [rsp+24B8h+var_2458]
                mov     r11, [rsp+24B8h+var_2420]
                mov     [rax+8], ebx
                mov     rbx, [rsp+24B8h+var_2418]
                jmp     short loc_140A2C1B6
; ---------------------------------------------------------------------------

loc_140A2C1A0:                          ; CODE XREF: sub_140A1EEE4+D17C↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     rbx, [rsp+24B8h+var_2418]
                mov     r11, [rsp+24B8h+var_2420]

loc_140A2C1B4:                          ; CODE XREF: sub_140A1EEE4+D11F↑j
                                        ; sub_140A1EEE4+D128↑j ...
                xor     edx, edx

loc_140A2C1B6:                          ; CODE XREF: sub_140A1EEE4+D2BA↑j
                cmp     r15d, r9d
                jb      loc_140A2C440
                cmp     r12d, ecx
                mov     r12d, dword ptr [rsp+24B8h+var_2450]
                ja      loc_140A2C445
                cmp     r11, rbx
                jz      loc_140A2C445
                mov     r14, [rsp+24B8h+var_23E8]
                mov     r15d, [r14+4]
                cmp     r15d, ecx
                ja      loc_140A2C445
                mov     rax, [rsp+24B8h+var_2410]
                jmp     short loc_140A2C1FD
; ---------------------------------------------------------------------------

loc_140A2C1F5:                          ; CODE XREF: sub_140A1EEE4+D554↓j
                mov     r8, [rsp+24B8h+var_2438]

loc_140A2C1FD:                          ; CODE XREF: sub_140A1EEE4+D30F↑j
                cmp     r14, rbx
                jz      loc_140A2C445
                test    r12d, r12d
                jz      short loc_140A2C212
                mov     bl, 80h
                jmp     loc_140A2C3F7
; ---------------------------------------------------------------------------

loc_140A2C212:                          ; CODE XREF: sub_140A1EEE4+D325↑j
                mov     ebx, [r11+4]
                mov     r13d, [r14]
                cmp     r13d, ebx
                jnb     short loc_140A2C286
                xor     eax, eax
                test    dword ptr [r8+990h], 200000h
                jz      loc_140A3979B
                cmp     [r8+8F8h], eax
                jnz     short loc_140A2C286
                mov     rdx, [rsp+24B8h+var_2428]
                mov     rax, 0A3A03F5891C8B4E8h
                add     rax, r8
                mov     rcx, r8
                mov     [r8+900h], rax
                xor     eax, eax
                mov     [r8+908h], rax
                mov     qword ptr [r8+910h], 10Fh
                mov     [r8+918h], rdx
                xor     edx, edx
                mov     dword ptr [r8+8F8h], 1
                call    sub_140A113CC

loc_140A2C286:                          ; CODE XREF: sub_140A1EEE4+D338↑j
                                        ; sub_140A1EEE4+D354↑j
                mov     edi, r13d
                mov     r11, rbx
                add     r11, [rsp+24B8h+var_2428]
                sub     edi, ebx
                mov     r10d, edi
                add     r10, r11
                xor     eax, eax
                mov     edx, eax

loc_140A2C2A0:                          ; CODE XREF: sub_140A1EEE4+D3E3↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_FC0]
                mov     ecx, [rsp+rax*4+24B8h+var_11A0]
                add     rcx, rbx
                cmp     r11, rcx
                jnb     short loc_140A2C2C2
                cmp     r10, rbx
                ja      loc_140A2C3DF

loc_140A2C2C2:                          ; CODE XREF: sub_140A1EEE4+D3D3↑j
                inc     edx
                cmp     edx, 6
                jb      short loc_140A2C2A0
                cmp     edi, 4
                jb      loc_140A2C3DF
                mov     rax, [rsp+24B8h+var_2438]
                mov     r8, r11
                add     [rax+828h], edi
                mov     r9d, [rax+814h]
                mov     r14, [rax+818h]
                mov     rax, r11
                cmp     r11, r10
                jnb     short loc_140A2C305

loc_140A2C2F9:                          ; CODE XREF: sub_140A1EEE4+D41F↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r10
                jb      short loc_140A2C2F9

loc_140A2C305:                          ; CODE XREF: sub_140A1EEE4+D413↑j
                mov     r10d, edi
                mov     rbx, r14
                shr     r10d, 7
                mov     edx, 1
                test    r10d, r10d
                jz      short loc_140A2C380
                mov     rsi, 7010008004002001h

loc_140A2C323:                          ; CODE XREF: sub_140A1EEE4+D495↓j
                mov     eax, 8

loc_140A2C328:                          ; CODE XREF: sub_140A1EEE4+D45B↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, rdx
                jnz     short loc_140A2C328
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1990], rdx
                xor     r9d, edx
                mov     edx, 1
                and     r9d, 3Fh
                cmovz   r9d, edx
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2C323
                mov     r12d, dword ptr [rsp+24B8h+var_2450]

loc_140A2C380:                          ; CODE XREF: sub_140A1EEE4+D433↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A2C3A3
                mov     eax, edi
                shr     rax, 3

loc_140A2C38E:                          ; CODE XREF: sub_140A1EEE4+D4BD↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rax, rdx
                jnz     short loc_140A2C38E

loc_140A2C3A3:                          ; CODE XREF: sub_140A1EEE4+D4A2↑j
                test    edi, edi
                jz      short loc_140A2C3BC

loc_140A2C3A7:                          ; CODE XREF: sub_140A1EEE4+D4D6↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, rdx
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2C3A7

loc_140A2C3BC:                          ; CODE XREF: sub_140A1EEE4+D4C1↑j
                mov     rax, rbx
                shr     rax, 7
                xor     edx, edx
                jmp     short loc_140A2C3CD
; ---------------------------------------------------------------------------

loc_140A2C3C7:                          ; CODE XREF: sub_140A1EEE4+D4EC↓j
                xor     bl, al
                shr     rax, 7

loc_140A2C3CD:                          ; CODE XREF: sub_140A1EEE4+D4E1↑j
                test    rax, rax
                jnz     short loc_140A2C3C7
                mov     r14, [rsp+24B8h+var_23E8]
                and     bl, 7Fh
                jmp     short loc_140A2C3E3
; ---------------------------------------------------------------------------

loc_140A2C3DF:                          ; CODE XREF: sub_140A1EEE4+D3D8↑j
                                        ; sub_140A1EEE4+D3E8↑j
                xor     edx, edx
                mov     bl, 80h

loc_140A2C3E3:                          ; CODE XREF: sub_140A1EEE4+D4F9↑j
                mov     r11, [rsp+24B8h+var_2420]
                mov     ecx, dword ptr [rsp+24B8h+var_2460]
                mov     rax, [rsp+24B8h+var_2410]

loc_140A2C3F7:                          ; CODE XREF: sub_140A1EEE4+D329↑j
                mov     [rax], bl
                add     r11, 0Ch
                mov     rax, [rsp+24B8h+var_2410]
                add     r14, 0Ch
                mov     rbx, [rsp+24B8h+var_2418]
                inc     rax
                mov     [rsp+24B8h+var_2420], r11
                mov     [rsp+24B8h+var_2410], rax
                mov     [rsp+24B8h+var_23E8], r14
                cmp     r14, rbx
                jz      short loc_140A2C435
                mov     r15d, [r14+4]

loc_140A2C435:                          ; CODE XREF: sub_140A1EEE4+D54B↑j
                cmp     r15d, ecx
                jbe     loc_140A2C1F5
                jmp     short loc_140A2C445
; ---------------------------------------------------------------------------

loc_140A2C440:                          ; CODE XREF: sub_140A1EEE4+D2D5↑j
                mov     r12d, dword ptr [rsp+24B8h+var_2450]

loc_140A2C445:                          ; CODE XREF: sub_140A1EEE4+D2E3↑j
                                        ; sub_140A1EEE4+D2EC↑j ...
                test    r12d, r12d
                jnz     loc_140A2C5C6
                cmp     r13d, ecx
                jz      loc_140A2C5C6
                mov     rax, [rsp+24B8h+var_23F8]
                lea     r15d, [r12+1]
                mov     r11, [rsp+24B8h+var_2428]
                mov     edi, ecx
                mov     [rax+0Ch], r13d
                mov     [rax+10h], ecx
                mov     eax, [rax+0Ch]
                sub     edi, eax
                add     r11, rax
                mov     r10d, edi
                add     r10, r11
                mov     dword ptr [rsp+24B8h+var_2450], edi
                xor     eax, eax
                mov     edx, eax

loc_140A2C48B:                          ; CODE XREF: sub_140A1EEE4+D5CF↓j
                mov     eax, edx
                mov     rbx, [rsp+rax*8+24B8h+var_FC0]
                mov     ecx, [rsp+rax*4+24B8h+var_11A0]
                add     rcx, rbx
                cmp     r11, rcx
                jnb     short loc_140A2C4AD
                cmp     r10, rbx
                ja      loc_140A2C5BE

loc_140A2C4AD:                          ; CODE XREF: sub_140A1EEE4+D5BE↑j
                add     edx, r15d
                cmp     edx, 6
                jb      short loc_140A2C48B
                mov     rax, [rsp+24B8h+var_2438]
                mov     r8, r11
                add     [rax+828h], edi
                mov     r9d, [rax+814h]
                mov     r14, [rax+818h]
                mov     rax, r11
                cmp     r11, r10
                jnb     short loc_140A2C4E8

loc_140A2C4DC:                          ; CODE XREF: sub_140A1EEE4+D602↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r10
                jb      short loc_140A2C4DC

loc_140A2C4E8:                          ; CODE XREF: sub_140A1EEE4+D5F6↑j
                mov     r10d, edi
                mov     rbx, r14
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A2C558
                mov     rdi, 7010008004002001h

loc_140A2C501:                          ; CODE XREF: sub_140A1EEE4+D66E↓j
                mov     eax, 8

loc_140A2C506:                          ; CODE XREF: sub_140A1EEE4+D639↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, r15
                jnz     short loc_140A2C506
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1988], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r15d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2C501
                mov     edi, dword ptr [rsp+24B8h+var_2450]

loc_140A2C558:                          ; CODE XREF: sub_140A1EEE4+D611↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A2C57B
                mov     eax, edi
                shr     rax, 3

loc_140A2C566:                          ; CODE XREF: sub_140A1EEE4+D695↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rax, r15
                jnz     short loc_140A2C566

loc_140A2C57B:                          ; CODE XREF: sub_140A1EEE4+D67A↑j
                test    edi, edi
                jz      short loc_140A2C594

loc_140A2C57F:                          ; CODE XREF: sub_140A1EEE4+D6AE↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r15
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A2C57F

loc_140A2C594:                          ; CODE XREF: sub_140A1EEE4+D699↑j
                mov     rax, rbx
                jmp     short loc_140A2C59B
; ---------------------------------------------------------------------------

loc_140A2C599:                          ; CODE XREF: sub_140A1EEE4+D6BE↓j
                xor     ebx, eax

loc_140A2C59B:                          ; CODE XREF: sub_140A1EEE4+D6B3↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2C599
                mov     r10, [rsp+24B8h+var_23F8]
                btr     ebx, 1Fh
                mov     r11, [rsp+24B8h+var_2420]
                mov     [r10+14h], ebx
                jmp     short loc_140A2C5CE
; ---------------------------------------------------------------------------

loc_140A2C5BE:                          ; CODE XREF: sub_140A1EEE4+D5C3↑j
                mov     r11, [rsp+24B8h+var_2420]

loc_140A2C5C6:                          ; CODE XREF: sub_140A1EEE4+D564↑j
                                        ; sub_140A1EEE4+D56D↑j
                mov     r10, [rsp+24B8h+var_23F8]

loc_140A2C5CE:                          ; CODE XREF: sub_140A1EEE4+D6D8↑j
                mov     rdx, [rsp+24B8h+var_2418]
                cmp     r11, rdx
                jz      short loc_140A2C629
                mov     eax, [r11]
                mov     ecx, [r11+4]
                cmp     eax, dword ptr [rsp+24B8h+var_2458]
                jb      short loc_140A2C629
                cmp     ecx, dword ptr [rsp+24B8h+var_2460]
                ja      short loc_140A2C629
                mov     rcx, [rsp+24B8h+var_23E8]
                cmp     rcx, rdx
                jz      short loc_140A2C61D
                mov     rax, [rsp+24B8h+var_2410]
                mov     byte ptr [rax], 80h
                inc     rax
                add     rcx, 0Ch
                mov     [rsp+24B8h+var_2410], rax
                mov     [rsp+24B8h+var_23E8], rcx

loc_140A2C61D:                          ; CODE XREF: sub_140A1EEE4+D715↑j
                add     r11, 0Ch
                mov     [rsp+24B8h+var_2420], r11

loc_140A2C629:                          ; CODE XREF: sub_140A1EEE4+D6F5↑j
                                        ; sub_140A1EEE4+D702↑j ...
                mov     r15, [rsp+24B8h+var_23E0]
                add     r10, 18h
                mov     r8, [rsp+24B8h+var_2438]
                add     r15, 28h ; '('
                mov     [rsp+24B8h+var_23F8], r10
                mov     [rsp+24B8h+var_23E0], r15
                cmp     r10, [rsp+24B8h+var_23D0]
                jnz     loc_140A2BDD3
                mov     r14, [rsp+24B8h+var_19F0]

loc_140A2C667:                          ; CODE XREF: sub_140A1EEE4+C810↑j
                                        ; sub_140A1EEE4+CEDF↑j
                mov     [rsp+24B8h+var_1B80], r14
                xor     eax, eax

loc_140A2C671:                          ; CODE XREF: sub_140A1EEE4+BD97↑j
                mov     ecx, eax

loc_140A2C673:                          ; CODE XREF: sub_140A1EEE4+C296↑j
                                        ; sub_140A1EEE4+C83A↑j ...
                mov     edx, 80000000h
                lea     eax, [rcx+rdx]
                test    edx, eax
                jnz     short loc_140A2C687
                cmp     ecx, 0C000010Eh
                jnz     short loc_140A2C6B0

loc_140A2C687:                          ; CODE XREF: sub_140A1EEE4+BACB↑j
                                        ; sub_140A1EEE4+BD49↑j ...
                mov     rax, [rsp+24B8h+var_2430]
                mov     rax, [rax]
                cmp     rax, [rsp+24B8h+var_2468]
                jmp     loc_140A2A993
; ---------------------------------------------------------------------------

loc_140A2C69C:                          ; CODE XREF: sub_140A1EEE4+BF29↑j
                                        ; sub_140A1EEE4+C4BF↑j ...
                mov     [rsp+24B8h+var_19F0], rax
                mov     ecx, 0C000009Ah
                jmp     short loc_140A2C6B0
; ---------------------------------------------------------------------------

loc_140A2C6AB:                          ; CODE XREF: sub_140A1EEE4+BB30↑j
                                        ; sub_140A1EEE4+BE9B↑j
                mov     ecx, 0C000007Bh

loc_140A2C6B0:                          ; CODE XREF: sub_140A1EEE4+D7A1↑j
                                        ; sub_140A1EEE4+D7C5↑j
                xor     eax, eax
                jmp     short loc_140A2C6B8
; ---------------------------------------------------------------------------

loc_140A2C6B4:                          ; CODE XREF: sub_140A1EEE4+BAB7↑j
                xor     eax, eax
                mov     ecx, eax

loc_140A2C6B8:                          ; CODE XREF: sub_140A1EEE4+D7CE↑j
                test    ecx, ecx
                js      loc_140A237B3
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rax
                mov     [rsp+24B8h+var_1980], rdx
                xor     rcx, rdx
                mov     rax, 47AE147AE147AE15h
                mul     rcx
                mov     rax, rcx
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                shr     rax, 6
                imul    rax, 64h ; 'd'
                sub     rcx, rax
                cmp     rcx, 2
                jnb     short loc_140A2C721
                bts     dword ptr [r14+990h], 11h

loc_140A2C721:                          ; CODE XREF: sub_140A1EEE4+D832↑j
                mov     rax, [r14+568h]
                mov     ebx, 20h ; ' '
                mov     r9d, [r14+838h]
                mov     r13d, [r14+7E4h]
                mov     r8d, [r14+924h]
                mov     r15d, [rax+10h]
                mov     r12, [rax]
                shl     r15d, 2
                cmp     r9d, 7
                mov     [rsp+24B8h+var_2468], rax
                lea     eax, [rbx-20h]
                mov     dword ptr [rsp+24B8h+var_2450], r9d
                cmovnz  ebx, eax
                lea     eax, [r13+30h]
                mov     dword ptr [rsp+24B8h+var_2458], ebx
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A2C855
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A2C847
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rbx, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A2C7DB
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2C7CB:                          ; CODE XREF: sub_140A1EEE4+D8F5↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, 1
                jnz     short loc_140A2C7CB

loc_140A2C7DB:                          ; CODE XREF: sub_140A1EEE4+D8DC↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2C7EC

loc_140A2C7E1:                          ; CODE XREF: sub_140A1EEE4+D906↓j
                mov     [r14], cl
                inc     r14
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2C7E1

loc_140A2C7EC:                          ; CODE XREF: sub_140A1EEE4+D8FB↑j
                mov     r14d, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2C82D
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2C824
                mov     rax, [rdi+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2C83C
; ---------------------------------------------------------------------------

loc_140A2C824:                          ; CODE XREF: sub_140A1EEE4+D929↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2C834
; ---------------------------------------------------------------------------

loc_140A2C82D:                          ; CODE XREF: sub_140A1EEE4+D918↑j
                mov     rax, [rdi+368h]

loc_140A2C834:                          ; CODE XREF: sub_140A1EEE4+D947↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A2C83C:                          ; CODE XREF: sub_140A1EEE4+D93E↑j
                mov     ebx, dword ptr [rsp+24B8h+var_2458]
                mov     [rdi+924h], r14d

loc_140A2C847:                          ; CODE XREF: sub_140A1EEE4+D8B4↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2450]
                jmp     short loc_140A2C85F
; ---------------------------------------------------------------------------

loc_140A2C855:                          ; CODE XREF: sub_140A1EEE4+D88C↑j
                mov     rdi, r14
                mov     [r14+7E4h], eax

loc_140A2C85F:                          ; CODE XREF: sub_140A1EEE4+D96F↑j
                inc     dword ptr [rdi+80Ch]
                lea     r14, [rdi+r13]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1978], r14
                mov     rax, r14
                xor     r8d, r8d
                lea     edx, [rcx-2Ah]
                lea     r13d, [rcx-2Fh]

loc_140A2C883:                          ; CODE XREF: sub_140A1EEE4+D9AC↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A2C883
                test    ecx, ecx
                jz      short loc_140A2C8A1

loc_140A2C896:                          ; CODE XREF: sub_140A1EEE4+D9BB↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2C896

loc_140A2C8A1:                          ; CODE XREF: sub_140A1EEE4+D9B0↑j
                mov     [r14], ebx
                mov     [r14+8], r12
                cmp     r9d, 7
                jnz     short loc_140A2C8C5
                test    r15d, r15d
                jz      short loc_140A2C8C5
                lea     r9, [r14+18h]
                mov     r8d, r15d
                mov     rdx, r12
                mov     rcx, rdi
                call    sub_1403EA0CC

loc_140A2C8C5:                          ; CODE XREF: sub_140A1EEE4+D9C8↑j
                                        ; sub_140A1EEE4+D9CD↑j
                mov     [r14+10h], r15d
                mov     r8, r12
                add     [rdi+828h], r15d
                mov     rax, r12
                mov     r9d, [rdi+814h]
                mov     r11, [rdi+818h]
                mov     ecx, r15d
                add     rcx, r12
                cmp     r12, rcx
                jnb     short loc_140A2C8FB

loc_140A2C8EF:                          ; CODE XREF: sub_140A1EEE4+DA15↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2C8EF

loc_140A2C8FB:                          ; CODE XREF: sub_140A1EEE4+DA09↑j
                mov     r10d, r15d
                mov     rbx, r11
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A2C96C
                mov     rsi, 7010008004002001h

loc_140A2C914:                          ; CODE XREF: sub_140A1EEE4+DA86↓j
                mov     edx, 8

loc_140A2C919:                          ; CODE XREF: sub_140A1EEE4+DA52↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r13
                jnz     short loc_140A2C919
                mov     rcx, r8
                sub     rcx, r12
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1970], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2C914

loc_140A2C96C:                          ; CODE XREF: sub_140A1EEE4+DA24↑j
                mov     edx, r15d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2C993
                mov     r10d, edx
                shr     r10, 3

loc_140A2C97E:                          ; CODE XREF: sub_140A1EEE4+DAAD↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     r10, r13
                jnz     short loc_140A2C97E

loc_140A2C993:                          ; CODE XREF: sub_140A1EEE4+DA91↑j
                test    edx, edx
                jz      short loc_140A2C9AC

loc_140A2C997:                          ; CODE XREF: sub_140A1EEE4+DAC6↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2C997

loc_140A2C9AC:                          ; CODE XREF: sub_140A1EEE4+DAB1↑j
                mov     rax, rbx
                jmp     short loc_140A2C9B3
; ---------------------------------------------------------------------------

loc_140A2C9B1:                          ; CODE XREF: sub_140A1EEE4+DAD6↓j
                xor     ebx, eax

loc_140A2C9B3:                          ; CODE XREF: sub_140A1EEE4+DACB↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2C9B1
                mov     ecx, 20h ; ' '
                mov     [rsp+24B8h+var_1B80], rdi
                btr     ebx, 1Fh
                mov     [rsp+24B8h+var_1398], ecx
                mov     [r14+14h], ebx
                lea     rax, xmmword_140E018C0
                add     [rdi+828h], r15d
                mov     r10d, ecx
                mov     r9d, [rdi+838h]
                lea     r11d, [rcx-1Ch]
                mov     r14d, [rdi+7E4h]
                cmp     r9d, 7
                mov     r8d, [rdi+924h]
                mov     [rsp+24B8h+var_10C8], rax
                lea     rax, xmmword_140E018E0
                mov     [rsp+24B8h+var_10C0], rax
                lea     rax, xmmword_140CFCA40
                mov     [rsp+24B8h+var_10B8], rax
                lea     rax, xmmword_140CFCC00
                mov     [rsp+24B8h+var_10B0], rax
                lea     eax, [rcx-20h]
                cmovnz  r10d, eax
                mov     [rsp+24B8h+var_1394], ecx
                lea     eax, [r14+0C0h]
                mov     [rsp+24B8h+var_1390], ecx
                mov     [rsp+24B8h+var_138C], ecx
                mov     dword ptr [rsp+24B8h+var_2450], r11d
                mov     dword ptr [rsp+24B8h+var_2458], r9d
                mov     dword ptr [rsp+24B8h+var_2460], r10d
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2CB64
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                mov     [rsp+24B8h+var_2430], rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                lea     r11d, [rax+4]
                test    r11b, cl
                jnz     loc_140A2CB51
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2CAE6
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2CAD7:                          ; CODE XREF: sub_140A1EEE4+DC00↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A2CAD7

loc_140A2CAE6:                          ; CODE XREF: sub_140A1EEE4+DBE8↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2CAF6

loc_140A2CAEC:                          ; CODE XREF: sub_140A1EEE4+DC10↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2CAEC

loc_140A2CAF6:                          ; CODE XREF: sub_140A1EEE4+DC06↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A2CB36
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2CB2D
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2CB45
; ---------------------------------------------------------------------------

loc_140A2CB2D:                          ; CODE XREF: sub_140A1EEE4+DC32↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A2CB3D
; ---------------------------------------------------------------------------

loc_140A2CB36:                          ; CODE XREF: sub_140A1EEE4+DC21↑j
                mov     rax, [rbx+368h]

loc_140A2CB3D:                          ; CODE XREF: sub_140A1EEE4+DC50↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2CB45:                          ; CODE XREF: sub_140A1EEE4+DC47↑j
                mov     [rbx+924h], edi
                mov     r11d, 4

loc_140A2CB51:                          ; CODE XREF: sub_140A1EEE4+DBC2↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2458]
                mov     r10d, dword ptr [rsp+24B8h+var_2460]
                jmp     short loc_140A2CB75
; ---------------------------------------------------------------------------

loc_140A2CB64:                          ; CODE XREF: sub_140A1EEE4+DB8F↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax
                mov     [rsp+24B8h+var_2430], rbx

loc_140A2CB75:                          ; CODE XREF: sub_140A1EEE4+DC7E↑j
                add     [rbx+80Ch], r11d
                lea     r13, [rsp+24B8h+var_10C8]
                add     r14, rbx
                mov     [rsp+24B8h+var_2438], r13
                mov     [rsp+24B8h+var_1968], r14
                lea     rsi, [rsp+24B8h+var_1398]
                mov     [rsp+24B8h+var_1960], r14
                xor     r8d, r8d
                mov     [rsp+24B8h+var_2420], r11

loc_140A2CBB2:                          ; CODE XREF: sub_140A1EEE4+DE7B↓j
                mov     r12d, [rsi]
                mov     ecx, 30h ; '0'
                mov     r15, [r13+0]
                mov     rax, r14
                lea     edx, [rcx-2Ah]
                lea     edi, [rcx-2Fh]

loc_140A2CBC7:                          ; CODE XREF: sub_140A1EEE4+DCF0↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rdi
                jnz     short loc_140A2CBC7
                test    ecx, ecx
                jz      short loc_140A2CBE5

loc_140A2CBDA:                          ; CODE XREF: sub_140A1EEE4+DCFF↓j
                mov     [rax], r8b
                add     rax, rdi
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2CBDA

loc_140A2CBE5:                          ; CODE XREF: sub_140A1EEE4+DCF4↑j
                mov     [r14], r10d
                mov     [r14+8], r15
                cmp     r9d, 7
                jnz     short loc_140A2CC09
                test    r12d, r12d
                jz      short loc_140A2CC09
                lea     r9, [r14+18h]
                mov     r8d, r12d
                mov     rdx, r15
                mov     rcx, rbx
                call    sub_1403EA0CC

loc_140A2CC09:                          ; CODE XREF: sub_140A1EEE4+DD0C↑j
                                        ; sub_140A1EEE4+DD11↑j
                mov     [r14+10h], r12d
                lea     rcx, [r15+r12]
                add     [rbx+828h], r12d
                mov     r8, r15
                mov     r9d, [rbx+814h]
                mov     rax, r15
                mov     r11, [rbx+818h]
                cmp     r15, rcx
                jnb     short loc_140A2CC3D

loc_140A2CC31:                          ; CODE XREF: sub_140A1EEE4+DD57↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2CC31

loc_140A2CC3D:                          ; CODE XREF: sub_140A1EEE4+DD4B↑j
                mov     r10d, r12d
                mov     rdi, r11
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A2CCBE
                mov     ebx, 1
                mov     r13, 7010008004002001h

loc_140A2CC5B:                          ; CODE XREF: sub_140A1EEE4+DDC8↓j
                mov     eax, 8

loc_140A2CC60:                          ; CODE XREF: sub_140A1EEE4+DD93↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                xor     rdi, [r8+8]
                add     r8, 10h
                rol     rdi, cl
                sub     rax, rbx
                jnz     short loc_140A2CC60
                mov     rcx, r8
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1958], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, ebx
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2CC5B
                mov     rbx, [rsp+24B8h+var_2430]
                mov     r13, [rsp+24B8h+var_2438]

loc_140A2CCBE:                          ; CODE XREF: sub_140A1EEE4+DD66↑j
                mov     edx, r12d
                mov     r15d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2CCEA
                mov     eax, edx
                shr     rax, 3

loc_140A2CCD5:                          ; CODE XREF: sub_140A1EEE4+DE04↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r15
                jnz     short loc_140A2CCD5

loc_140A2CCEA:                          ; CODE XREF: sub_140A1EEE4+DDE9↑j
                test    edx, edx
                jz      short loc_140A2CD03

loc_140A2CCEE:                          ; CODE XREF: sub_140A1EEE4+DE1D↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rdi, rax
                add     r8, r15
                rol     rdi, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2CCEE

loc_140A2CD03:                          ; CODE XREF: sub_140A1EEE4+DE08↑j
                mov     rax, rdi
                shr     rax, 1Fh
                xor     r8d, r8d
                jmp     short loc_140A2CD15
; ---------------------------------------------------------------------------

loc_140A2CD0F:                          ; CODE XREF: sub_140A1EEE4+DE34↓j
                xor     edi, eax
                shr     rax, 1Fh

loc_140A2CD15:                          ; CODE XREF: sub_140A1EEE4+DE29↑j
                test    rax, rax
                jnz     short loc_140A2CD0F
                mov     r9d, dword ptr [rsp+24B8h+var_2458]
                btr     edi, 1Fh
                mov     r10d, dword ptr [rsp+24B8h+var_2460]
                add     r13, 8
                mov     [r14+14h], edi
                add     rsi, 4
                add     [rbx+828h], r12d
                mov     r14, [rsp+24B8h+var_1968]
                add     r14, 30h ; '0'
                mov     [rsp+24B8h+var_2438], r13
                sub     [rsp+24B8h+var_2420], r15
                mov     [rsp+24B8h+var_1968], r14
                jnz     loc_140A2CBB2
                or      r12d, 0FFFFFFFFh
                cmp     r9d, 7
                jnz     short loc_140A2CD98
                mov     rax, [rsp+24B8h+var_1960]
                mov     ecx, dword ptr [rsp+24B8h+var_2450]

loc_140A2CD7B:                          ; CODE XREF: sub_140A1EEE4+DEB2↓j
                or      [rax+28h], r15d
                mov     rax, [rsp+24B8h+var_1960]
                add     rax, 30h ; '0'
                mov     [rsp+24B8h+var_1960], rax
                add     ecx, r12d
                jnz     short loc_140A2CD7B

loc_140A2CD98:                          ; CODE XREF: sub_140A1EEE4+DE89↑j
                mov     r14, [rsp+24B8h+var_2468]
                xor     eax, eax
                mov     r13d, eax
                mov     [rsp+24B8h+var_1B80], rbx
                mov     rax, [r14]
                mov     [rsp+24B8h+var_2430], rax
                xor     eax, eax
                test    dword ptr [rbx+990h], 40000000h
                jnz     loc_140A2D0A6
                mov     edi, eax
                cmp     [r14+10h], eax
                jbe     loc_140A2D0A6
                mov     rsi, [rsp+24B8h+var_2430]

loc_140A2CDDB:                          ; CODE XREF: sub_140A1EEE4+DF2A↓j
                mov     eax, edi
                lea     rdx, [rsp+24B8h+var_1950]
                xor     r8d, r8d
                movsxd  rcx, dword ptr [rsi+rax*4]
                mov     rax, [rbx+260h]
                sar     rcx, 4
                add     rcx, rsi
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     short loc_140A2CE07
                add     r13d, r15d

loc_140A2CE07:                          ; CODE XREF: sub_140A1EEE4+DF1E↑j
                add     edi, r15d
                cmp     edi, [r14+10h]
                jb      short loc_140A2CDDB
                xor     eax, eax
                test    r13d, r13d
                jz      loc_140A2D0A6
                mov     r14d, [rbx+7E4h]
                mov     ecx, r13d
                mov     r8d, [rbx+924h]
                shl     ecx, 4
                add     ecx, 30h ; '0'
                add     ecx, r14d
                cmp     ecx, [rbx+0A1Ch]
                jbe     loc_140A2CF18
                mov     edx, ecx
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A2CF0E
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A2CF05
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A2CEA0
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2CE91:                          ; CODE XREF: sub_140A1EEE4+DFBA↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r15
                jnz     short loc_140A2CE91

loc_140A2CEA0:                          ; CODE XREF: sub_140A1EEE4+DFA2↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2CEB0

loc_140A2CEA6:                          ; CODE XREF: sub_140A1EEE4+DFCA↓j
                mov     [rbx], cl
                add     rbx, r15
                add     eax, r12d
                jnz     short loc_140A2CEA6

loc_140A2CEB0:                          ; CODE XREF: sub_140A1EEE4+DFC0↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2CEF0
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2CEE7
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2CEFF
; ---------------------------------------------------------------------------

loc_140A2CEE7:                          ; CODE XREF: sub_140A1EEE4+DFEC↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2CEF7
; ---------------------------------------------------------------------------

loc_140A2CEF0:                          ; CODE XREF: sub_140A1EEE4+DFDB↑j
                mov     rax, [rdi+368h]

loc_140A2CEF7:                          ; CODE XREF: sub_140A1EEE4+E00A↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2CEFF:                          ; CODE XREF: sub_140A1EEE4+E001↑j
                mov     [rdi+924h], ebx

loc_140A2CF05:                          ; CODE XREF: sub_140A1EEE4+DF7C↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A2CF21
; ---------------------------------------------------------------------------

loc_140A2CF0E:                          ; CODE XREF: sub_140A1EEE4+DF6D↑j
                mov     eax, 0C000022Dh
                jmp     loc_140A2D0A6
; ---------------------------------------------------------------------------

loc_140A2CF18:                          ; CODE XREF: sub_140A1EEE4+DF57↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], ecx

loc_140A2CF21:                          ; CODE XREF: sub_140A1EEE4+E028↑j
                add     [rdi+80Ch], r15d
                lea     rdx, [rdi+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1948], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     ebx, [rcx-2Ah]

loc_140A2CF42:                          ; CODE XREF: sub_140A1EEE4+E06B↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rbx, r15
                jnz     short loc_140A2CF42
                test    ecx, ecx
                jz      short loc_140A2CF60

loc_140A2CF55:                          ; CODE XREF: sub_140A1EEE4+E07A↓j
                mov     [rax], r8b
                add     rax, r15
                add     ecx, r12d
                jnz     short loc_140A2CF55

loc_140A2CF60:                          ; CODE XREF: sub_140A1EEE4+E06F↑j
                xor     eax, eax
                mov     dword ptr [rdx], 0Ah
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A2CF7D
; ---------------------------------------------------------------------------

loc_140A2CF7B:                          ; CODE XREF: sub_140A1EEE4+E0A0↓j
                xor     ecx, eax

loc_140A2CF7D:                          ; CODE XREF: sub_140A1EEE4+E095↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2CF7B
                btr     ecx, 1Fh
                mov     rbx, rdi
                mov     [rdx+14h], ecx
                xor     ecx, ecx
                mov     rax, [rsp+24B8h+var_1948]
                mov     [rsp+24B8h+var_1940], rax
                mov     [rax+18h], r8d
                mov     rax, [rsp+24B8h+var_1940]
                mov     [rax+1Ch], r13d
                xor     eax, eax
                mov     r15, [rsp+24B8h+var_1940]
                mov     r12d, eax
                mov     rax, [rsp+24B8h+var_2468]
                add     r15, 30h ; '0'
                cmp     [rax+10h], ecx
                jbe     loc_140A2D091

loc_140A2CFD1:                          ; CODE XREF: sub_140A1EEE4+E1A7↓j
                mov     rcx, [rsp+24B8h+var_2430]
                lea     rdx, [rsp+24B8h+var_1950]
                mov     eax, r12d
                xor     r8d, r8d
                movsxd  r14, dword ptr [rcx+rax*4]
                mov     rax, [rdi+260h]
                sar     r14, 4
                add     r14, rcx
                mov     rcx, r14
                call    j__guard_dispatch_icall_nop
                test    rax, rax
                jnz     short loc_140A2D07F
                lea     r11d, [rax+4]
                mov     r8, r14
                add     [rdi+828h], r11d
                lea     rcx, [r14+4]
                mov     r10d, [rdi+814h]
                mov     rax, r14
                mov     rdx, [rdi+818h]
                cmp     r14, rcx
                jnb     short loc_140A2D03A

loc_140A2D02E:                          ; CODE XREF: sub_140A1EEE4+E154↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2D02E

loc_140A2D03A:                          ; CODE XREF: sub_140A1EEE4+E148↑j
                mov     r9d, r11d

loc_140A2D03D:                          ; CODE XREF: sub_140A1EEE4+E16D↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rdx, rax
                inc     r8
                rol     rdx, cl
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A2D03D
                mov     rax, rdx
                jmp     short loc_140A2D05A
; ---------------------------------------------------------------------------

loc_140A2D058:                          ; CODE XREF: sub_140A1EEE4+E17D↓j
                xor     edx, eax

loc_140A2D05A:                          ; CODE XREF: sub_140A1EEE4+E172↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2D058
                xor     edx, [r15]
                btr     edx, 1Fh
                xor     [r15], edx
                mov     [r15+4], r11d
                mov     [r15+8], r14
                add     r15, 10h
                add     r13d, 0FFFFFFFFh
                jz      short loc_140A2D09E

loc_140A2D07F:                          ; CODE XREF: sub_140A1EEE4+E120↑j
                mov     rax, [rsp+24B8h+var_2468]
                inc     r12d
                cmp     r12d, [rax+10h]
                jb      loc_140A2CFD1

loc_140A2D091:                          ; CODE XREF: sub_140A1EEE4+E0E7↑j
                xor     eax, eax
                test    r13d, r13d
                jnz     loc_140A237B3
                jmp     short loc_140A2D0A0
; ---------------------------------------------------------------------------

loc_140A2D09E:                          ; CODE XREF: sub_140A1EEE4+E199↑j
                xor     eax, eax

loc_140A2D0A0:                          ; CODE XREF: sub_140A1EEE4+E1B8↑j
                mov     r15d, 1

loc_140A2D0A6:                          ; CODE XREF: sub_140A1EEE4+DEDD↑j
                                        ; sub_140A1EEE4+DEE9↑j ...
                mov     [rsp+24B8h+var_1B80], rbx
                test    eax, eax
                js      loc_140A237B3
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2D0C3

loc_140A2D0C1:                          ; CODE XREF: sub_140A1EEE4:loc_140A2D0C1↓j
                jmp     short loc_140A2D0C1
; ---------------------------------------------------------------------------

loc_140A2D0C3:                          ; CODE XREF: sub_140A1EEE4+E1DB↑j
                sti
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2D0CF

loc_140A2D0CD:                          ; CODE XREF: sub_140A1EEE4:loc_140A2D0CD↓j
                jmp     short loc_140A2D0CD
; ---------------------------------------------------------------------------

loc_140A2D0CF:                          ; CODE XREF: sub_140A1EEE4+E1E7↑j
                sti
                mov     r14d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A2D1BD
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A2D1B4
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A2D14F
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2D140:                          ; CODE XREF: sub_140A1EEE4+E269↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r15
                jnz     short loc_140A2D140

loc_140A2D14F:                          ; CODE XREF: sub_140A1EEE4+E251↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2D15F

loc_140A2D155:                          ; CODE XREF: sub_140A1EEE4+E279↓j
                mov     [rbx], cl
                add     rbx, r15
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2D155

loc_140A2D15F:                          ; CODE XREF: sub_140A1EEE4+E26F↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2D19F
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2D196
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2D1AE
; ---------------------------------------------------------------------------

loc_140A2D196:                          ; CODE XREF: sub_140A1EEE4+E29B↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2D1A6
; ---------------------------------------------------------------------------

loc_140A2D19F:                          ; CODE XREF: sub_140A1EEE4+E28A↑j
                mov     rax, [rdi+368h]

loc_140A2D1A6:                          ; CODE XREF: sub_140A1EEE4+E2B9↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2D1AE:                          ; CODE XREF: sub_140A1EEE4+E2B0↑j
                mov     [rdi+924h], ebx

loc_140A2D1B4:                          ; CODE XREF: sub_140A1EEE4+E22B↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A2D1C6
; ---------------------------------------------------------------------------

loc_140A2D1BD:                          ; CODE XREF: sub_140A1EEE4+E204↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A2D1C6:                          ; CODE XREF: sub_140A1EEE4+E2D7↑j
                mov     r13d, 1
                lea     r9, [rdi+r14]
                add     [rdi+80Ch], r13d
                mov     rax, r9
                mov     [rsp+24B8h+var_1938], r9
                xor     ebx, ebx
                mov     r11d, 0FFFFFFF8h
                lea     ecx, [r13+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A2D1F1:                          ; CODE XREF: sub_140A1EEE4+E31A↓j
                mov     [rax], rbx
                add     ecx, r11d
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A2D1F1
                test    ecx, ecx
                jz      short loc_140A2D20E

loc_140A2D204:                          ; CODE XREF: sub_140A1EEE4+E328↓j
                mov     [rax], bl
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2D204

loc_140A2D20E:                          ; CODE XREF: sub_140A1EEE4+E31E↑j
                mov     dword ptr [r9], 24h ; '$'
                lea     rax, xmmword_140E00020
                mov     [r9+8], rax
                mov     rbx, rax
                mov     dword ptr [r9+10h], 18h
                add     dword ptr [rdi+828h], 18h
                mov     ecx, [rdi+814h]
                mov     rdx, [rdi+818h]
                prefetchnta byte ptr cs:xmmword_140E00020
                mov     r8d, 18h
                lea     r10d, [r8-15h]

loc_140A2D250:                          ; CODE XREF: sub_140A1EEE4+E37C↓j
                xor     rdx, [rbx]
                add     r8d, r11d
                rol     rdx, cl
                add     rbx, 8
                sub     r10, r13
                jnz     short loc_140A2D250
                test    r8d, r8d
                jz      short loc_140A2D279

loc_140A2D267:                          ; CODE XREF: sub_140A1EEE4+E393↓j
                movzx   eax, byte ptr [rbx]
                add     rbx, r13
                xor     rdx, rax
                rol     rdx, cl
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A2D267

loc_140A2D279:                          ; CODE XREF: sub_140A1EEE4+E381↑j
                mov     rax, rdx
                jmp     short loc_140A2D280
; ---------------------------------------------------------------------------

loc_140A2D27E:                          ; CODE XREF: sub_140A1EEE4+E3A3↓j
                xor     edx, eax

loc_140A2D280:                          ; CODE XREF: sub_140A1EEE4+E398↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2D27E
                btr     edx, 1Fh
                mov     r14d, 0C0000225h
                mov     [r9+14h], edx
                mov     rax, [rsp+24B8h+var_1938]
                mov     [rsp+24B8h+var_1930], rax
                add     dword ptr [rdi+828h], 18h
                mov     rbx, [rsp+24B8h+var_1930]
                mov     r15, cs:qword_140CFC500
                mov     rcx, [rdi+540h]
                mov     r12, cr8
                mov     eax, 0Fh
                mov     cr8, rax
                mov     rax, [rdi+150h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rdi+610h]
                mov     rcx, [rax]
                mov     eax, [rcx]
                lea     rdx, [rcx+10h]
                lea     rcx, [rax+rax*2]
                lea     rax, [rdx+rcx*8]

loc_140A2D2F5:                          ; CODE XREF: sub_140A1EEE4+E420↓j
                cmp     [rdx+8], r15
                jz      short loc_140A2D306
                add     rdx, 18h
                cmp     rdx, rax
                jnb     short loc_140A2D31C
                jmp     short loc_140A2D2F5
; ---------------------------------------------------------------------------

loc_140A2D306:                          ; CODE XREF: sub_140A1EEE4+E415↑j
                movups  xmm0, xmmword ptr [rdx]
                xor     eax, eax
                mov     r14d, eax
                movups  xmmword ptr [rbx+18h], xmm0
                movsd   xmm1, qword ptr [rdx+10h]
                movsd   qword ptr [rbx+28h], xmm1

loc_140A2D31C:                          ; CODE XREF: sub_140A1EEE4+E41E↑j
                mov     rcx, [rdi+540h]
                mov     rax, [rdi+190h]
                call    j__guard_dispatch_icall_nop
                movzx   eax, r12b
                mov     cr8, rax
                xor     eax, eax
                mov     r12d, 0FFFFFFF8h
                test    r14d, r14d
                jns     short loc_140A2D382
                lea     ecx, [rax+18h]
                mov     rax, [rsp+24B8h+var_1930]
                add     rax, rcx
                lea     edx, [rcx-15h]
                xor     ebx, ebx

loc_140A2D357:                          ; CODE XREF: sub_140A1EEE4+E480↓j
                mov     [rax], rbx
                add     ecx, r12d
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A2D357
                test    ecx, ecx
                jz      short loc_140A2D374

loc_140A2D36A:                          ; CODE XREF: sub_140A1EEE4+E48E↓j
                mov     [rax], bl
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2D36A

loc_140A2D374:                          ; CODE XREF: sub_140A1EEE4+E484↑j
                mov     rax, [rsp+24B8h+var_1930]
                mov     [rax+18h], r13
                xor     eax, eax

loc_140A2D382:                          ; CODE XREF: sub_140A1EEE4+E45E↑j
                mov     [rsp+24B8h+var_1B80], rdi
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2D395

loc_140A2D393:                          ; CODE XREF: sub_140A1EEE4:loc_140A2D393↓j
                jmp     short loc_140A2D393
; ---------------------------------------------------------------------------

loc_140A2D395:                          ; CODE XREF: sub_140A1EEE4+E4AD↑j
                sti
                mov     r14d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2D487
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                lea     r15d, [rax+4]
                test    r15b, cl
                jnz     loc_140A2D47E
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2D419
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2D40A:                          ; CODE XREF: sub_140A1EEE4+E533↓j
                mov     [rdi], r10
                add     eax, r12d
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A2D40A

loc_140A2D419:                          ; CODE XREF: sub_140A1EEE4+E51B↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2D429

loc_140A2D41F:                          ; CODE XREF: sub_140A1EEE4+E543↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2D41F

loc_140A2D429:                          ; CODE XREF: sub_140A1EEE4+E539↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A2D469
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2D460
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2D478
; ---------------------------------------------------------------------------

loc_140A2D460:                          ; CODE XREF: sub_140A1EEE4+E565↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A2D470
; ---------------------------------------------------------------------------

loc_140A2D469:                          ; CODE XREF: sub_140A1EEE4+E554↑j
                mov     rax, [rbx+368h]

loc_140A2D470:                          ; CODE XREF: sub_140A1EEE4+E583↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2D478:                          ; CODE XREF: sub_140A1EEE4+E57A↑j
                mov     [rbx+924h], edi

loc_140A2D47E:                          ; CODE XREF: sub_140A1EEE4+E4F5↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A2D496
; ---------------------------------------------------------------------------

loc_140A2D487:                          ; CODE XREF: sub_140A1EEE4+E4CA↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax
                mov     r15d, 4

loc_140A2D496:                          ; CODE XREF: sub_140A1EEE4+E5A1↑j
                add     [rbx+80Ch], r13d
                lea     rdx, [rbx+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1928], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     edi, [rcx-2Ah]

loc_140A2D4B7:                          ; CODE XREF: sub_140A1EEE4+E5E0↓j
                mov     [rax], r8
                add     ecx, r12d
                add     rax, 8
                sub     rdi, r13
                jnz     short loc_140A2D4B7
                test    ecx, ecx
                jz      short loc_140A2D4D5

loc_140A2D4CA:                          ; CODE XREF: sub_140A1EEE4+E5EF↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2D4CA

loc_140A2D4D5:                          ; CODE XREF: sub_140A1EEE4+E5E4↑j
                xor     eax, eax
                mov     [rdx], r15d
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A2D4EF
; ---------------------------------------------------------------------------

loc_140A2D4ED:                          ; CODE XREF: sub_140A1EEE4+E612↓j
                xor     ecx, eax

loc_140A2D4EF:                          ; CODE XREF: sub_140A1EEE4+E607↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2D4ED
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rdx+14h], ecx
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2D512

loc_140A2D510:                          ; CODE XREF: sub_140A1EEE4:loc_140A2D510↓j
                jmp     short loc_140A2D510
; ---------------------------------------------------------------------------

loc_140A2D512:                          ; CODE XREF: sub_140A1EEE4+E62A↑j
                sti
                mov     r14d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A2D600
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    r15b, cl
                jnz     loc_140A2D5F7
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A2D592
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2D583:                          ; CODE XREF: sub_140A1EEE4+E6AC↓j
                mov     [rbx], r10
                add     eax, r12d
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A2D583

loc_140A2D592:                          ; CODE XREF: sub_140A1EEE4+E694↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2D5A2

loc_140A2D598:                          ; CODE XREF: sub_140A1EEE4+E6BC↓j
                mov     [rbx], cl
                add     rbx, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2D598

loc_140A2D5A2:                          ; CODE XREF: sub_140A1EEE4+E6B2↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2D5E2
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2D5D9
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2D5F1
; ---------------------------------------------------------------------------

loc_140A2D5D9:                          ; CODE XREF: sub_140A1EEE4+E6DE↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2D5E9
; ---------------------------------------------------------------------------

loc_140A2D5E2:                          ; CODE XREF: sub_140A1EEE4+E6CD↑j
                mov     rax, [rdi+368h]

loc_140A2D5E9:                          ; CODE XREF: sub_140A1EEE4+E6FC↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2D5F1:                          ; CODE XREF: sub_140A1EEE4+E6F3↑j
                mov     [rdi+924h], ebx

loc_140A2D5F7:                          ; CODE XREF: sub_140A1EEE4+E66E↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A2D609
; ---------------------------------------------------------------------------

loc_140A2D600:                          ; CODE XREF: sub_140A1EEE4+E647↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A2D609:                          ; CODE XREF: sub_140A1EEE4+E71A↑j
                add     [rdi+80Ch], r13d
                lea     rdx, [rdi+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1920], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     ebx, [rcx-2Ah]

loc_140A2D62A:                          ; CODE XREF: sub_140A1EEE4+E753↓j
                mov     [rax], r8
                add     ecx, r12d
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A2D62A
                test    ecx, ecx
                jz      short loc_140A2D648

loc_140A2D63D:                          ; CODE XREF: sub_140A1EEE4+E762↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2D63D

loc_140A2D648:                          ; CODE XREF: sub_140A1EEE4+E757↑j
                xor     eax, eax
                mov     dword ptr [rdx], 5
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A2D665
; ---------------------------------------------------------------------------

loc_140A2D663:                          ; CODE XREF: sub_140A1EEE4+E788↓j
                xor     ecx, eax

loc_140A2D665:                          ; CODE XREF: sub_140A1EEE4+E77D↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2D663
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], rdi
                mov     [rdx+14h], ecx
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2D688

loc_140A2D686:                          ; CODE XREF: sub_140A1EEE4:loc_140A2D686↓j
                jmp     short loc_140A2D686
; ---------------------------------------------------------------------------

loc_140A2D688:                          ; CODE XREF: sub_140A1EEE4+E7A0↑j
                sti
                mov     r14d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2D776
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    r15b, cl
                jnz     loc_140A2D76D
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2D708
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2D6F9:                          ; CODE XREF: sub_140A1EEE4+E822↓j
                mov     [rdi], r10
                add     eax, r12d
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A2D6F9

loc_140A2D708:                          ; CODE XREF: sub_140A1EEE4+E80A↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2D718

loc_140A2D70E:                          ; CODE XREF: sub_140A1EEE4+E832↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2D70E

loc_140A2D718:                          ; CODE XREF: sub_140A1EEE4+E828↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A2D758
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2D74F
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2D767
; ---------------------------------------------------------------------------

loc_140A2D74F:                          ; CODE XREF: sub_140A1EEE4+E854↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A2D75F
; ---------------------------------------------------------------------------

loc_140A2D758:                          ; CODE XREF: sub_140A1EEE4+E843↑j
                mov     rax, [rbx+368h]

loc_140A2D75F:                          ; CODE XREF: sub_140A1EEE4+E872↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2D767:                          ; CODE XREF: sub_140A1EEE4+E869↑j
                mov     [rbx+924h], edi

loc_140A2D76D:                          ; CODE XREF: sub_140A1EEE4+E7E4↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A2D77F
; ---------------------------------------------------------------------------

loc_140A2D776:                          ; CODE XREF: sub_140A1EEE4+E7BD↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A2D77F:                          ; CODE XREF: sub_140A1EEE4+E890↑j
                add     [rbx+80Ch], r13d
                lea     rdx, [rbx+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1918], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     edi, [rcx-2Ah]

loc_140A2D7A0:                          ; CODE XREF: sub_140A1EEE4+E8C9↓j
                mov     [rax], r8
                add     ecx, r12d
                add     rax, 8
                sub     rdi, r13
                jnz     short loc_140A2D7A0
                test    ecx, ecx
                jz      short loc_140A2D7BE

loc_140A2D7B3:                          ; CODE XREF: sub_140A1EEE4+E8D8↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2D7B3

loc_140A2D7BE:                          ; CODE XREF: sub_140A1EEE4+E8CD↑j
                xor     eax, eax
                mov     dword ptr [rdx], 19h
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A2D7DB
; ---------------------------------------------------------------------------

loc_140A2D7D9:                          ; CODE XREF: sub_140A1EEE4+E8FE↓j
                xor     ecx, eax

loc_140A2D7DB:                          ; CODE XREF: sub_140A1EEE4+E8F3↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2D7D9
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rdx+14h], ecx
                lea     r10, off_1409869E0
                cmp     cs:off_1409869E0, rax
                mov     r14d, eax
                jz      short loc_140A2D817
                xor     ecx, ecx

loc_140A2D808:                          ; CODE XREF: sub_140A1EEE4+E931↓j
                add     r14d, r13d
                mov     eax, r14d
                add     rax, rax
                cmp     [r10+rax*8], rcx
                jnz     short loc_140A2D808

loc_140A2D817:                          ; CODE XREF: sub_140A1EEE4+E920↑j
                mov     r15d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                shl     r14d, 4
                lea     eax, [r15+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A2D90F
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A2D8FF
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A2D89A
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2D88B:                          ; CODE XREF: sub_140A1EEE4+E9B4↓j
                mov     [rbx], r10
                add     eax, r12d
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A2D88B

loc_140A2D89A:                          ; CODE XREF: sub_140A1EEE4+E99C↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2D8AA

loc_140A2D8A0:                          ; CODE XREF: sub_140A1EEE4+E9C4↓j
                mov     [rbx], cl
                add     rbx, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2D8A0

loc_140A2D8AA:                          ; CODE XREF: sub_140A1EEE4+E9BA↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2D8EA
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2D8E1
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2D8F9
; ---------------------------------------------------------------------------

loc_140A2D8E1:                          ; CODE XREF: sub_140A1EEE4+E9E6↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2D8F1
; ---------------------------------------------------------------------------

loc_140A2D8EA:                          ; CODE XREF: sub_140A1EEE4+E9D5↑j
                mov     rax, [rdi+368h]

loc_140A2D8F1:                          ; CODE XREF: sub_140A1EEE4+EA04↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2D8F9:                          ; CODE XREF: sub_140A1EEE4+E9FB↑j
                mov     [rdi+924h], ebx

loc_140A2D8FF:                          ; CODE XREF: sub_140A1EEE4+E976↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                lea     r10, off_1409869E0
                jmp     short loc_140A2D918
; ---------------------------------------------------------------------------

loc_140A2D90F:                          ; CODE XREF: sub_140A1EEE4+E94F↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A2D918:                          ; CODE XREF: sub_140A1EEE4+EA29↑j
                add     [rdi+80Ch], r13d
                add     r15, rdi
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_2468], r15
                mov     [rsp+24B8h+var_1910], r15
                mov     rax, r15
                xor     ebx, ebx
                lea     edx, [rcx-2Ah]

loc_140A2D93C:                          ; CODE XREF: sub_140A1EEE4+EA65↓j
                mov     [rax], rbx
                add     ecx, r12d
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A2D93C
                test    ecx, ecx
                jz      short loc_140A2D959

loc_140A2D94F:                          ; CODE XREF: sub_140A1EEE4+EA73↓j
                mov     [rax], bl
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2D94F

loc_140A2D959:                          ; CODE XREF: sub_140A1EEE4+EA69↑j
                mov     dword ptr [r15], 1Dh
                mov     r8, r10
                mov     [r15+8], r10
                mov     rax, r10
                mov     [r15+10h], r14d
                add     [rdi+828h], r14d
                mov     r9d, [rdi+814h]
                mov     r11, [rdi+818h]
                mov     ecx, r14d
                add     rcx, r10
                cmp     r10, rcx
                jnb     short loc_140A2D99A

loc_140A2D98E:                          ; CODE XREF: sub_140A1EEE4+EAB4↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2D98E

loc_140A2D99A:                          ; CODE XREF: sub_140A1EEE4+EAA8↑j
                mov     r10d, r14d
                mov     rbx, r11
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A2DA12
                lea     rsi, off_1409869E0
                mov     r15, 7010008004002001h

loc_140A2D9BA:                          ; CODE XREF: sub_140A1EEE4+EB27↓j
                mov     eax, 8

loc_140A2D9BF:                          ; CODE XREF: sub_140A1EEE4+EAF2↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, r13
                jnz     short loc_140A2D9BF
                mov     rcx, r8
                sub     rcx, rsi
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1908], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2D9BA
                mov     r15, [rsp+24B8h+var_2468]

loc_140A2DA12:                          ; CODE XREF: sub_140A1EEE4+EAC3↑j
                mov     edx, r14d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2DA38
                mov     eax, edx
                shr     rax, 3

loc_140A2DA23:                          ; CODE XREF: sub_140A1EEE4+EB52↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edx, r12d
                sub     rax, r13
                jnz     short loc_140A2DA23

loc_140A2DA38:                          ; CODE XREF: sub_140A1EEE4+EB37↑j
                test    edx, edx
                jz      short loc_140A2DA51

loc_140A2DA3C:                          ; CODE XREF: sub_140A1EEE4+EB6B↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2DA3C

loc_140A2DA51:                          ; CODE XREF: sub_140A1EEE4+EB56↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r9d, r9d
                jmp     short loc_140A2DA63
; ---------------------------------------------------------------------------

loc_140A2DA5D:                          ; CODE XREF: sub_140A1EEE4+EB82↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A2DA63:                          ; CODE XREF: sub_140A1EEE4+EB77↑j
                test    rax, rax
                jnz     short loc_140A2DA5D
                btr     ebx, 1Fh
                mov     [r15+14h], ebx
                mov     rax, [rsp+24B8h+var_1910]
                mov     [rsp+24B8h+var_1900], rax
                add     [rdi+828h], r14d
                test    dword ptr [rdi+990h], 40000000h
                jz      loc_140A2DD3F
                mov     rax, [rsp+24B8h+var_1900]
                mov     r15d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                mov     r13d, [rax+10h]
                mov     r12, [rax+8]
                lea     eax, [r15+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2DB9D
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A2DB90
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     rbx, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2DB27
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2DB17:                          ; CODE XREF: sub_140A1EEE4+EC41↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A2DB17

loc_140A2DB27:                          ; CODE XREF: sub_140A1EEE4+EC28↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2DB37

loc_140A2DB2D:                          ; CODE XREF: sub_140A1EEE4+EC51↓j
                mov     [rdi], cl
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2DB2D

loc_140A2DB37:                          ; CODE XREF: sub_140A1EEE4+EC47↑j
                mov     edi, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A2DB7A
                test    dword ptr [r14+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2DB71
                mov     rax, [r14+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2DB89
; ---------------------------------------------------------------------------

loc_140A2DB71:                          ; CODE XREF: sub_140A1EEE4+EC76↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A2DB81
; ---------------------------------------------------------------------------

loc_140A2DB7A:                          ; CODE XREF: sub_140A1EEE4+EC64↑j
                mov     rax, [r14+368h]

loc_140A2DB81:                          ; CODE XREF: sub_140A1EEE4+EC94↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A2DB89:                          ; CODE XREF: sub_140A1EEE4+EC8B↑j
                mov     [r14+924h], edi

loc_140A2DB90:                          ; CODE XREF: sub_140A1EEE4+EC02↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                xor     r9d, r9d
                jmp     short loc_140A2DBA6
; ---------------------------------------------------------------------------

loc_140A2DB9D:                          ; CODE XREF: sub_140A1EEE4+EBDB↑j
                mov     r14, rdi
                mov     [rdi+7E4h], eax

loc_140A2DBA6:                          ; CODE XREF: sub_140A1EEE4+ECB7↑j
                mov     r11d, 1
                add     [r14+80Ch], r11d
                add     r15, r14
                mov     [rsp+24B8h+var_2468], r15
                mov     rax, r15
                lea     ecx, [r11+2Fh]
                mov     [rsp+24B8h+var_18F8], r15
                lea     edx, [rcx-2Ah]

loc_140A2DBCD:                          ; CODE XREF: sub_140A1EEE4+ECF6↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r11
                jnz     short loc_140A2DBCD
                test    ecx, ecx
                jz      short loc_140A2DBEB

loc_140A2DBE0:                          ; CODE XREF: sub_140A1EEE4+ED05↓j
                mov     [rax], r9b
                add     rax, r11
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2DBE0

loc_140A2DBEB:                          ; CODE XREF: sub_140A1EEE4+ECFA↑j
                mov     dword ptr [r15], 20h ; ' '
                mov     [r15+8], r12
                test    r13d, r13d
                jz      short loc_140A2DC13
                lea     r9, [r15+18h]
                mov     r8d, r13d
                mov     rdx, r12
                mov     rcx, r14
                call    sub_1403EA0CC
                mov     r11d, 1

loc_140A2DC13:                          ; CODE XREF: sub_140A1EEE4+ED15↑j
                mov     [r15+10h], r13d
                lea     rcx, [r12+r13]
                add     [r14+828h], r13d
                mov     rdi, r12
                mov     r8d, [r14+814h]
                mov     rax, r12
                mov     r10, [r14+818h]
                cmp     r12, rcx
                jnb     short loc_140A2DC47

loc_140A2DC3B:                          ; CODE XREF: sub_140A1EEE4+ED61↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2DC3B

loc_140A2DC47:                          ; CODE XREF: sub_140A1EEE4+ED55↑j
                mov     r9d, r13d
                mov     rbx, r10
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A2DCB8
                mov     r15, 7010008004002001h

loc_140A2DC60:                          ; CODE XREF: sub_140A1EEE4+EDCD↓j
                mov     eax, 8

loc_140A2DC65:                          ; CODE XREF: sub_140A1EEE4+ED98↓j
                xor     rbx, [rdi]
                mov     ecx, r8d
                rol     rbx, cl
                xor     rbx, [rdi+8]
                add     rdi, 10h
                rol     rbx, cl
                sub     rax, r11
                jnz     short loc_140A2DC65
                mov     rcx, rdi
                sub     rcx, r12
                xor     rcx, r10
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     r8d, eax
                mov     [rsp+24B8h+var_18F0], rdx
                xor     r8d, edx
                and     r8d, 3Fh
                cmovz   r8d, r11d
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A2DC60
                mov     r15, [rsp+24B8h+var_2468]

loc_140A2DCB8:                          ; CODE XREF: sub_140A1EEE4+ED70↑j
                mov     edx, r13d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2DCE4
                mov     eax, edx
                mov     r12d, 0FFFFFFF8h
                shr     rax, 3

loc_140A2DCCF:                          ; CODE XREF: sub_140A1EEE4+EDFE↓j
                xor     rbx, [rdi]
                mov     ecx, r8d
                rol     rbx, cl
                add     rdi, 8
                add     edx, r12d
                sub     rax, r11
                jnz     short loc_140A2DCCF

loc_140A2DCE4:                          ; CODE XREF: sub_140A1EEE4+EDDD↑j
                test    edx, edx
                jz      short loc_140A2DCFC

loc_140A2DCE8:                          ; CODE XREF: sub_140A1EEE4+EE16↓j
                movzx   eax, byte ptr [rdi]
                mov     ecx, r8d
                xor     rbx, rax
                add     rdi, r11
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2DCE8

loc_140A2DCFC:                          ; CODE XREF: sub_140A1EEE4+EE02↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     ecx, ecx
                jmp     short loc_140A2DD0D
; ---------------------------------------------------------------------------

loc_140A2DD07:                          ; CODE XREF: sub_140A1EEE4+EE2C↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A2DD0D:                          ; CODE XREF: sub_140A1EEE4+EE21↑j
                test    rax, rax
                jnz     short loc_140A2DD07
                btr     ebx, 1Fh
                mov     rdi, r14
                mov     [r15+14h], ebx
                mov     rax, [rsp+24B8h+var_18F8]
                mov     [rsp+24B8h+var_18E8], rax
                add     [r14+828h], r13d
                mov     rax, [rsp+24B8h+var_18E8]
                mov     [rax+28h], ecx

loc_140A2DD3F:                          ; CODE XREF: sub_140A1EEE4+EBAD↑j
                xor     eax, eax
                mov     [rsp+24B8h+var_1B80], rdi
                test    rdi, rdi
                jz      loc_140A237B3
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2DD5D

loc_140A2DD5B:                          ; CODE XREF: sub_140A1EEE4:loc_140A2DD5B↓j
                jmp     short loc_140A2DD5B
; ---------------------------------------------------------------------------

loc_140A2DD5D:                          ; CODE XREF: sub_140A1EEE4+EE75↑j
                sti
                mov     rcx, [rdi+6E8h]
                mov     r12d, 20h ; ' '
                mov     rax, cs:qword_140C259F0
                mov     r13d, [rdi+838h]
                mov     r14d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                mov     eax, [rax+rcx]
                mov     r15d, eax
                shl     r15d, 3
                cmp     r13d, 7
                mov     dword ptr [rsp+24B8h+var_2450], eax
                lea     eax, [r12-20h]
                cmovnz  r12d, eax
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2DE82
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A2DE79
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2DE14
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2DE04:                          ; CODE XREF: sub_140A1EEE4+EF2E↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A2DE04

loc_140A2DE14:                          ; CODE XREF: sub_140A1EEE4+EF15↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2DE24

loc_140A2DE1A:                          ; CODE XREF: sub_140A1EEE4+EF3E↓j
                mov     [rdi], cl
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2DE1A

loc_140A2DE24:                          ; CODE XREF: sub_140A1EEE4+EF34↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A2DE64
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2DE5B
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2DE73
; ---------------------------------------------------------------------------

loc_140A2DE5B:                          ; CODE XREF: sub_140A1EEE4+EF60↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A2DE6B
; ---------------------------------------------------------------------------

loc_140A2DE64:                          ; CODE XREF: sub_140A1EEE4+EF4F↑j
                mov     rax, [rbx+368h]

loc_140A2DE6B:                          ; CODE XREF: sub_140A1EEE4+EF7E↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2DE73:                          ; CODE XREF: sub_140A1EEE4+EF75↑j
                mov     [rbx+924h], edi

loc_140A2DE79:                          ; CODE XREF: sub_140A1EEE4+EEEF↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A2DE8B
; ---------------------------------------------------------------------------

loc_140A2DE82:                          ; CODE XREF: sub_140A1EEE4+EEC8↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A2DE8B:                          ; CODE XREF: sub_140A1EEE4+EF9C↑j
                add     r14, rbx
                mov     edi, 1
                add     [rbx+80Ch], edi
                mov     rax, r14
                mov     [rsp+24B8h+var_2468], r14
                xor     r8d, r8d
                mov     [rsp+24B8h+var_18E0], r14
                lea     ecx, [rdi+2Fh]
                lea     edx, [rdi+5]

loc_140A2DEB2:                          ; CODE XREF: sub_140A1EEE4+EFDB↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rdi
                jnz     short loc_140A2DEB2
                test    ecx, ecx
                jz      short loc_140A2DED0

loc_140A2DEC5:                          ; CODE XREF: sub_140A1EEE4+EFEA↓j
                mov     [rax], r8b
                add     rax, rdi
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2DEC5

loc_140A2DED0:                          ; CODE XREF: sub_140A1EEE4+EFDF↑j
                mov     [r14], r12d
                lea     r12, qword_140C25120
                mov     [r14+8], r12
                cmp     r13d, 7
                jnz     short loc_140A2DEFB
                test    r15d, r15d
                jz      short loc_140A2DEFB
                lea     r9, [r14+18h]
                mov     r8d, r15d
                mov     rdx, r12
                mov     rcx, rbx
                call    sub_1403EA0CC

loc_140A2DEFB:                          ; CODE XREF: sub_140A1EEE4+EFFE↑j
                                        ; sub_140A1EEE4+F003↑j
                mov     [r14+10h], r15d
                mov     r8, r12
                add     [rbx+828h], r15d
                mov     rax, r12
                mov     r9d, [rbx+814h]
                mov     r11, [rbx+818h]
                mov     ecx, r15d
                add     rcx, r12
                cmp     r12, rcx
                jnb     short loc_140A2DF31

loc_140A2DF25:                          ; CODE XREF: sub_140A1EEE4+F04B↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2DF25

loc_140A2DF31:                          ; CODE XREF: sub_140A1EEE4+F03F↑j
                mov     r10d, r15d
                mov     rdi, r11
                shr     r10d, 7
                mov     r13d, 1
                test    r10d, r10d
                jz      short loc_140A2DFA8
                mov     r14, 7010008004002001h

loc_140A2DF50:                          ; CODE XREF: sub_140A1EEE4+F0BD↓j
                mov     eax, 8

loc_140A2DF55:                          ; CODE XREF: sub_140A1EEE4+F088↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                xor     rdi, [r8+8]
                add     r8, 10h
                rol     rdi, cl
                sub     rax, r13
                jnz     short loc_140A2DF55
                mov     rcx, r8
                sub     rcx, r12
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_18D8], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2DF50
                mov     r14, [rsp+24B8h+var_2468]

loc_140A2DFA8:                          ; CODE XREF: sub_140A1EEE4+F060↑j
                mov     edx, r15d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2DFCE
                mov     eax, edx
                shr     rax, 3

loc_140A2DFB9:                          ; CODE XREF: sub_140A1EEE4+F0E8↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r13
                jnz     short loc_140A2DFB9

loc_140A2DFCE:                          ; CODE XREF: sub_140A1EEE4+F0CD↑j
                test    edx, edx
                jz      short loc_140A2DFE7

loc_140A2DFD2:                          ; CODE XREF: sub_140A1EEE4+F101↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rdi, rax
                add     r8, r13
                rol     rdi, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2DFD2

loc_140A2DFE7:                          ; CODE XREF: sub_140A1EEE4+F0EC↑j
                mov     rax, rdi
                shr     rax, 1Fh
                xor     ecx, ecx
                jmp     short loc_140A2DFF8
; ---------------------------------------------------------------------------

loc_140A2DFF2:                          ; CODE XREF: sub_140A1EEE4+F117↓j
                xor     edi, eax
                shr     rax, 1Fh

loc_140A2DFF8:                          ; CODE XREF: sub_140A1EEE4+F10C↑j
                test    rax, rax
                jnz     short loc_140A2DFF2
                btr     edi, 1Fh
                mov     dword ptr [rsp+24B8h+var_2448], eax
                mov     [r14+14h], edi
                add     [rbx+828h], r15d
                mov     edx, [rbx+708h]
                mov     r10d, [rbx+710h]
                mov     dword ptr [rsp+24B8h+var_2458], edx
                mov     dword ptr [rsp+24B8h+var_2460], r10d
                cmp     dword ptr [rsp+24B8h+var_2450], ecx
                jbe     loc_140A2E6D1

loc_140A2E030:                          ; CODE XREF: sub_140A1EEE4+F7E7↓j
                mov     eax, eax
                mov     r12, [r12+rax*8]
                xor     eax, eax
                test    r12, r12
                jz      loc_140A2E6B5
                lea     r13, [r12-30h]
                mov     al, [r13+1Ah]
                test    al, 2
                jz      short loc_140A2E068
                movzx   eax, al
                lea     rcx, cs:140000000h
                and     eax, 3
                movzx   eax, byte ptr [rax+rcx+0C25E20h]
                sub     r13, rax
                jmp     short loc_140A2E06D
; ---------------------------------------------------------------------------

loc_140A2E068:                          ; CODE XREF: sub_140A1EEE4+F168↑j
                xor     eax, eax
                mov     r13d, eax

loc_140A2E06D:                          ; CODE XREF: sub_140A1EEE4+F182↑j
                test    r13, r13
                jz      loc_140A2E6AF
                movzx   ecx, word ptr [r13+8]
                test    cx, cx
                jz      loc_140A2E6AF
                mov     al, [rbx+718h]
                cmp     [r12+28h], al
                jz      loc_140A2E6AF
                mov     r15d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                movzx   eax, cx
                mov     r14d, edx
                add     r14, r12
                lea     ecx, [rax+1Ah]
                mov     dword ptr [rsp+24B8h+var_2440], ecx
                lea     ecx, [rax+21h]
                and     ecx, 0FFFFFFF8h
                add     ecx, 30h ; '0'
                add     ecx, r15d
                cmp     ecx, [rbx+0A1Ch]
                jbe     loc_140A2E1A0
                mov     edx, ecx
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A2E192
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A2E12D
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2E11D:                          ; CODE XREF: sub_140A1EEE4+F247↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A2E11D

loc_140A2E12D:                          ; CODE XREF: sub_140A1EEE4+F22E↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2E13D

loc_140A2E133:                          ; CODE XREF: sub_140A1EEE4+F257↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2E133

loc_140A2E13D:                          ; CODE XREF: sub_140A1EEE4+F24D↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2E17D
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2E174
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2E18C
; ---------------------------------------------------------------------------

loc_140A2E174:                          ; CODE XREF: sub_140A1EEE4+F279↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2E184
; ---------------------------------------------------------------------------

loc_140A2E17D:                          ; CODE XREF: sub_140A1EEE4+F268↑j
                mov     rax, [rdi+368h]

loc_140A2E184:                          ; CODE XREF: sub_140A1EEE4+F297↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2E18C:                          ; CODE XREF: sub_140A1EEE4+F28E↑j
                mov     [rdi+924h], ebx

loc_140A2E192:                          ; CODE XREF: sub_140A1EEE4+F208↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r10d, dword ptr [rsp+24B8h+var_2460]
                jmp     short loc_140A2E1A9
; ---------------------------------------------------------------------------

loc_140A2E1A0:                          ; CODE XREF: sub_140A1EEE4+F1E1↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], ecx

loc_140A2E1A9:                          ; CODE XREF: sub_140A1EEE4+F2BA↑j
                add     r15, rdi
                mov     ebx, 1
                add     [rdi+80Ch], ebx
                mov     rax, r15
                mov     [rsp+24B8h+var_2430], r15
                xor     r8d, r8d
                mov     [rsp+24B8h+var_18D0], r15
                lea     ecx, [rbx+2Fh]
                lea     edx, [rbx+5]

loc_140A2E1D3:                          ; CODE XREF: sub_140A1EEE4+F2FC↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_140A2E1D3
                test    ecx, ecx
                jz      short loc_140A2E1F1

loc_140A2E1E6:                          ; CODE XREF: sub_140A1EEE4+F30B↓j
                mov     [rax], r8b
                add     rax, rbx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2E1E6

loc_140A2E1F1:                          ; CODE XREF: sub_140A1EEE4+F300↑j
                mov     dword ptr [r15], 8
                mov     r8, r14
                mov     [r15+8], r14
                mov     rax, r14
                mov     [r15+10h], r10d
                add     [rdi+828h], r10d
                mov     r9d, [rdi+814h]
                mov     r11, [rdi+818h]
                mov     ecx, r10d
                add     rcx, r14
                cmp     r14, rcx
                jnb     short loc_140A2E232

loc_140A2E226:                          ; CODE XREF: sub_140A1EEE4+F34C↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2E226

loc_140A2E232:                          ; CODE XREF: sub_140A1EEE4+F340↑j
                shr     r10d, 7
                mov     rbx, r11
                test    r10d, r10d
                jz      short loc_140A2E2AE
                mov     r15, 7010008004002001h

loc_140A2E248:                          ; CODE XREF: sub_140A1EEE4+F3C0↓j
                mov     edx, 8

loc_140A2E24D:                          ; CODE XREF: sub_140A1EEE4+F387↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A2E24D
                mov     rcx, r8
                sub     rcx, r14
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_18C8], rdx
                xor     r9d, eax
                mov     eax, 1
                and     r9d, 3Fh
                cmovz   r9d, eax
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2E248
                mov     r15, [rsp+24B8h+var_2430]

loc_140A2E2AE:                          ; CODE XREF: sub_140A1EEE4+F358↑j
                mov     r11d, dword ptr [rsp+24B8h+var_2460]
                mov     r14d, 1
                mov     edx, r11d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2E2E0
                mov     r10d, edx
                shr     r10, 3

loc_140A2E2CB:                          ; CODE XREF: sub_140A1EEE4+F3FA↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     r10, r14
                jnz     short loc_140A2E2CB

loc_140A2E2E0:                          ; CODE XREF: sub_140A1EEE4+F3DE↑j
                test    edx, edx
                jz      short loc_140A2E2F9

loc_140A2E2E4:                          ; CODE XREF: sub_140A1EEE4+F413↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r14
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2E2E4

loc_140A2E2F9:                          ; CODE XREF: sub_140A1EEE4+F3FE↑j
                mov     rax, rbx
                jmp     short loc_140A2E300
; ---------------------------------------------------------------------------

loc_140A2E2FE:                          ; CODE XREF: sub_140A1EEE4+F423↓j
                xor     ebx, eax

loc_140A2E300:                          ; CODE XREF: sub_140A1EEE4+F418↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2E2FE
                mov     edx, dword ptr [rsp+24B8h+var_2440]
                btr     ebx, 1Fh
                mov     [r15+14h], ebx
                mov     r9d, 1Ah
                mov     rax, [rsp+24B8h+var_18D0]
                mov     rbx, rdi
                mov     [rsp+24B8h+var_18C0], rax
                add     [rdi+828h], r11d
                mov     rax, [rsp+24B8h+var_18C0]
                lea     r10d, [r9-17h]
                mov     rcx, [rdi+6F0h]
                add     rcx, r12
                mov     [rax+18h], r12
                mov     rax, [rsp+24B8h+var_18C0]
                mov     [rax+20h], dx
                mov     rax, [rdi+720h]
                movzx   ecx, word ptr [rcx+rax]
                mov     rax, [rsp+24B8h+var_18C0]
                mov     [rax+22h], cx
                lea     rcx, aObjecttypes ; "\\ObjectTypes\\"
                mov     r8, [rsp+24B8h+var_18C0]
                lea     rdx, [r8+30h]

loc_140A2E385:                          ; CODE XREF: sub_140A1EEE4+F4B6↓j
                mov     rax, [rcx]
                add     r9d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r10, r14
                jnz     short loc_140A2E385
                test    r9d, r9d
                jz      short loc_140A2E3B1

loc_140A2E3A1:                          ; CODE XREF: sub_140A1EEE4+F4CB↓j
                mov     al, [rcx]
                add     rcx, r14
                mov     [rdx], al
                add     rdx, r14
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A2E3A1

loc_140A2E3B1:                          ; CODE XREF: sub_140A1EEE4+F4BB↑j
                movzx   edx, word ptr [r13+8]
                add     r8, 4Ah ; 'J'
                mov     rcx, [r13+10h]
                mov     r13d, 1
                cmp     edx, 8
                jb      short loc_140A2E3E6
                mov     r9d, edx
                shr     r9, 3

loc_140A2E3D0:                          ; CODE XREF: sub_140A1EEE4+F500↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [r8], rax
                add     rcx, 8
                add     r8, 8
                sub     r9, r13
                jnz     short loc_140A2E3D0

loc_140A2E3E6:                          ; CODE XREF: sub_140A1EEE4+F4E3↑j
                test    edx, edx
                jz      short loc_140A2E3FB
                sub     r8, rcx

loc_140A2E3ED:                          ; CODE XREF: sub_140A1EEE4+F515↓j
                mov     al, [rcx]
                mov     [r8+rcx], al
                add     rcx, r13
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2E3ED

loc_140A2E3FB:                          ; CODE XREF: sub_140A1EEE4+F504↑j
                test    dword ptr [rdi+990h], 40000000h
                jz      loc_140A2E6A8
                mov     rax, [rsp+24B8h+var_18C0]
                mov     r14d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                mov     r12d, [rax+10h]
                mov     r15, [rax+8]
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2E508
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A2E4FF
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2E49A
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2E48B:                          ; CODE XREF: sub_140A1EEE4+F5B4↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A2E48B

loc_140A2E49A:                          ; CODE XREF: sub_140A1EEE4+F59C↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2E4AA

loc_140A2E4A0:                          ; CODE XREF: sub_140A1EEE4+F5C4↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2E4A0

loc_140A2E4AA:                          ; CODE XREF: sub_140A1EEE4+F5BA↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A2E4EA
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2E4E1
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2E4F9
; ---------------------------------------------------------------------------

loc_140A2E4E1:                          ; CODE XREF: sub_140A1EEE4+F5E6↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A2E4F1
; ---------------------------------------------------------------------------

loc_140A2E4EA:                          ; CODE XREF: sub_140A1EEE4+F5D5↑j
                mov     rax, [rbx+368h]

loc_140A2E4F1:                          ; CODE XREF: sub_140A1EEE4+F604↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2E4F9:                          ; CODE XREF: sub_140A1EEE4+F5FB↑j
                mov     [rbx+924h], edi

loc_140A2E4FF:                          ; CODE XREF: sub_140A1EEE4+F576↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A2E50E
; ---------------------------------------------------------------------------

loc_140A2E508:                          ; CODE XREF: sub_140A1EEE4+F54F↑j
                mov     [rdi+7E4h], eax

loc_140A2E50E:                          ; CODE XREF: sub_140A1EEE4+F622↑j
                add     [rbx+80Ch], r13d
                add     r14, rbx
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_2468], r14
                mov     [rsp+24B8h+var_18B8], r14
                mov     rax, r14
                xor     edi, edi
                lea     edx, [rcx-2Ah]

loc_140A2E532:                          ; CODE XREF: sub_140A1EEE4+F65B↓j
                mov     [rax], rdi
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A2E532
                test    ecx, ecx
                jz      short loc_140A2E550

loc_140A2E545:                          ; CODE XREF: sub_140A1EEE4+F66A↓j
                mov     [rax], dil
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2E545

loc_140A2E550:                          ; CODE XREF: sub_140A1EEE4+F65F↑j
                mov     dword ptr [r14], 20h ; ' '
                mov     [r14+8], r15
                test    r12d, r12d
                jz      short loc_140A2E572
                lea     r9, [r14+18h]
                mov     r8d, r12d
                mov     rdx, r15
                mov     rcx, rbx
                call    sub_1403EA0CC

loc_140A2E572:                          ; CODE XREF: sub_140A1EEE4+F67A↑j
                mov     [r14+10h], r12d
                lea     rcx, [r15+r12]
                add     [rbx+828h], r12d
                mov     r8, r15
                mov     r9d, [rbx+814h]
                mov     rax, r15
                mov     r11, [rbx+818h]
                cmp     r15, rcx
                jnb     short loc_140A2E5A6

loc_140A2E59A:                          ; CODE XREF: sub_140A1EEE4+F6C0↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2E59A

loc_140A2E5A6:                          ; CODE XREF: sub_140A1EEE4+F6B4↑j
                mov     r10d, r12d
                mov     rdi, r11
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A2E616
                mov     r14, 7010008004002001h

loc_140A2E5BF:                          ; CODE XREF: sub_140A1EEE4+F72B↓j
                mov     eax, 8

loc_140A2E5C4:                          ; CODE XREF: sub_140A1EEE4+F6F7↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                xor     rdi, [r8+8]
                add     r8, 10h
                rol     rdi, cl
                sub     rax, r13
                jnz     short loc_140A2E5C4
                mov     rcx, r8
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_18B0], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2E5BF
                mov     r14, [rsp+24B8h+var_2468]

loc_140A2E616:                          ; CODE XREF: sub_140A1EEE4+F6CF↑j
                mov     edx, r12d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2E63C
                mov     eax, edx
                shr     rax, 3

loc_140A2E627:                          ; CODE XREF: sub_140A1EEE4+F756↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r13
                jnz     short loc_140A2E627

loc_140A2E63C:                          ; CODE XREF: sub_140A1EEE4+F73B↑j
                test    edx, edx
                jz      short loc_140A2E655

loc_140A2E640:                          ; CODE XREF: sub_140A1EEE4+F76F↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rdi, rax
                add     r8, r13
                rol     rdi, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2E640

loc_140A2E655:                          ; CODE XREF: sub_140A1EEE4+F75A↑j
                mov     rax, rdi
                shr     rax, 1Fh
                xor     ecx, ecx
                jmp     short loc_140A2E666
; ---------------------------------------------------------------------------

loc_140A2E660:                          ; CODE XREF: sub_140A1EEE4+F785↓j
                xor     edi, eax
                shr     rax, 1Fh

loc_140A2E666:                          ; CODE XREF: sub_140A1EEE4+F77A↑j
                test    rax, rax
                jnz     short loc_140A2E660
                mov     r10d, dword ptr [rsp+24B8h+var_2460]
                btr     edi, 1Fh
                mov     [r14+14h], edi
                mov     rax, [rsp+24B8h+var_18B8]
                mov     [rsp+24B8h+var_18A8], rax
                add     [rbx+828h], r12d
                mov     rax, [rsp+24B8h+var_18A8]
                mov     [rax+28h], ecx
                mov     rax, [rsp+24B8h+var_18A8]
                or      [rax+28h], r13d
                jmp     short loc_140A2E6AB
; ---------------------------------------------------------------------------

loc_140A2E6A8:                          ; CODE XREF: sub_140A1EEE4+F521↑j
                mov     r10d, r11d

loc_140A2E6AB:                          ; CODE XREF: sub_140A1EEE4+F7C2↑j
                mov     edx, dword ptr [rsp+24B8h+var_2458]

loc_140A2E6AF:                          ; CODE XREF: sub_140A1EEE4+F18C↑j
                                        ; sub_140A1EEE4+F19A↑j ...
                mov     r13d, 1

loc_140A2E6B5:                          ; CODE XREF: sub_140A1EEE4+F157↑j
                mov     eax, dword ptr [rsp+24B8h+var_2448]
                lea     r12, qword_140C25120
                add     eax, r13d
                mov     dword ptr [rsp+24B8h+var_2448], eax
                cmp     eax, dword ptr [rsp+24B8h+var_2450]
                jb      loc_140A2E030

loc_140A2E6D1:                          ; CODE XREF: sub_140A1EEE4+F146↑j
                xor     eax, eax
                mov     [rsp+24B8h+var_1B80], rbx
                test    rbx, rbx
                jz      loc_140A237B3
                mov     r14d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A2E7D1
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A2E7C8
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A2E763
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2E754:                          ; CODE XREF: sub_140A1EEE4+F87D↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A2E754

loc_140A2E763:                          ; CODE XREF: sub_140A1EEE4+F865↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2E773

loc_140A2E769:                          ; CODE XREF: sub_140A1EEE4+F88D↓j
                mov     [rbx], cl
                add     rbx, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2E769

loc_140A2E773:                          ; CODE XREF: sub_140A1EEE4+F883↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2E7B3
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2E7AA
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2E7C2
; ---------------------------------------------------------------------------

loc_140A2E7AA:                          ; CODE XREF: sub_140A1EEE4+F8AF↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2E7BA
; ---------------------------------------------------------------------------

loc_140A2E7B3:                          ; CODE XREF: sub_140A1EEE4+F89E↑j
                mov     rax, [rdi+368h]

loc_140A2E7BA:                          ; CODE XREF: sub_140A1EEE4+F8CD↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2E7C2:                          ; CODE XREF: sub_140A1EEE4+F8C4↑j
                mov     [rdi+924h], ebx

loc_140A2E7C8:                          ; CODE XREF: sub_140A1EEE4+F83F↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A2E7DA
; ---------------------------------------------------------------------------

loc_140A2E7D1:                          ; CODE XREF: sub_140A1EEE4+F818↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A2E7DA:                          ; CODE XREF: sub_140A1EEE4+F8EB↑j
                add     [rdi+80Ch], r13d
                lea     rdx, [rdi+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_18A0], rdx
                mov     rax, rdx
                mov     r12d, 0FFFFFFF8h
                xor     r8d, r8d
                lea     ebx, [rcx-2Ah]

loc_140A2E801:                          ; CODE XREF: sub_140A1EEE4+F92A↓j
                mov     [rax], r8
                add     ecx, r12d
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A2E801
                test    ecx, ecx
                jz      short loc_140A2E81F

loc_140A2E814:                          ; CODE XREF: sub_140A1EEE4+F939↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2E814

loc_140A2E81F:                          ; CODE XREF: sub_140A1EEE4+F92E↑j
                xor     eax, eax
                mov     dword ptr [rdx], 27h ; '''
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A2E83C
; ---------------------------------------------------------------------------

loc_140A2E83A:                          ; CODE XREF: sub_140A1EEE4+F95F↓j
                xor     ecx, eax

loc_140A2E83C:                          ; CODE XREF: sub_140A1EEE4+F954↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2E83A
                mov     r15d, [rsp+24B8h+var_23F0]
                btr     ecx, 1Fh
                mov     [rdx+14h], ecx
                mov     rax, [rsp+24B8h+var_18A0]
                mov     ecx, [rsp+24B8h+var_23C0]
                mov     [rsp+24B8h+var_1898], rax
                mov     [rax+20h], ecx
                mov     rax, [rsp+24B8h+var_1898]
                lea     r11, [rdi+rcx]
                lea     rcx, [r11+r15]
                mov     r8, r11
                mov     [rax+24h], r15d
                mov     rax, r11
                add     [rdi+828h], r15d
                mov     r9d, [rdi+814h]
                mov     r14, [rdi+818h]
                cmp     r11, rcx
                jnb     short loc_140A2E8AE

loc_140A2E8A2:                          ; CODE XREF: sub_140A1EEE4+F9C8↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2E8A2

loc_140A2E8AE:                          ; CODE XREF: sub_140A1EEE4+F9BC↑j
                mov     r10d, r15d
                mov     rbx, r14
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A2E927
                mov     r15, 7010008004002001h

loc_140A2E8C7:                          ; CODE XREF: sub_140A1EEE4+FA39↓j
                mov     edx, 8

loc_140A2E8CC:                          ; CODE XREF: sub_140A1EEE4+FA05↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r13
                jnz     short loc_140A2E8CC
                mov     rcx, r8
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1890], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A2E8C7
                mov     r15d, [rsp+24B8h+var_23F0]

loc_140A2E927:                          ; CODE XREF: sub_140A1EEE4+F9D7↑j
                and     r15d, 7Fh
                cmp     r15d, 8
                jb      short loc_140A2E94D
                mov     edx, r15d
                shr     rdx, 3

loc_140A2E938:                          ; CODE XREF: sub_140A1EEE4+FA67↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     r15d, r12d
                sub     rdx, r13
                jnz     short loc_140A2E938

loc_140A2E94D:                          ; CODE XREF: sub_140A1EEE4+FA4B↑j
                test    r15d, r15d
                jz      short loc_140A2E968

loc_140A2E952:                          ; CODE XREF: sub_140A1EEE4+FA82↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     r15d, 0FFFFFFFFh
                jnz     short loc_140A2E952

loc_140A2E968:                          ; CODE XREF: sub_140A1EEE4+FA6C↑j
                mov     rax, [rsp+24B8h+var_1898]
                mov     [rsp+24B8h+var_1B80], rdi
                mov     [rax+18h], rbx
                test    dword ptr [rdi+990h], 8000000h
                jnz     loc_140A2EEBE
                mov     r13d, [rdi+7E4h]
                lea     r15, [rdi+0AA0h]
                mov     eax, [r15]
                lea     r14, [r15+8]
                mov     r12d, [r15+4]
                mov     r8d, [rdi+924h]
                shl     rax, 4
                add     r14, rax
                shl     r12d, 4
                mov     eax, r14d
                sub     r14d, r15d
                sub     eax, edi
                sub     r15d, edi
                mov     dword ptr [rsp+24B8h+var_2450], eax
                lea     eax, [r13+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2EAA6
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A2EA9D
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2EA38
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2EA28:                          ; CODE XREF: sub_140A1EEE4+FB52↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A2EA28

loc_140A2EA38:                          ; CODE XREF: sub_140A1EEE4+FB39↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2EA48

loc_140A2EA3E:                          ; CODE XREF: sub_140A1EEE4+FB62↓j
                mov     [rdi], cl
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2EA3E

loc_140A2EA48:                          ; CODE XREF: sub_140A1EEE4+FB58↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A2EA88
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2EA7F
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2EA97
; ---------------------------------------------------------------------------

loc_140A2EA7F:                          ; CODE XREF: sub_140A1EEE4+FB84↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A2EA8F
; ---------------------------------------------------------------------------

loc_140A2EA88:                          ; CODE XREF: sub_140A1EEE4+FB73↑j
                mov     rax, [rbx+368h]

loc_140A2EA8F:                          ; CODE XREF: sub_140A1EEE4+FBA2↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2EA97:                          ; CODE XREF: sub_140A1EEE4+FB99↑j
                mov     [rbx+924h], edi

loc_140A2EA9D:                          ; CODE XREF: sub_140A1EEE4+FB13↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A2EAAF
; ---------------------------------------------------------------------------

loc_140A2EAA6:                          ; CODE XREF: sub_140A1EEE4+FAEC↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A2EAAF:                          ; CODE XREF: sub_140A1EEE4+FBC0↑j
                inc     dword ptr [rbx+80Ch]
                lea     rdx, [rbx+r13]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1888], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     edi, [rcx-2Ah]
                lea     r13d, [rcx-2Fh]

loc_140A2EAD3:                          ; CODE XREF: sub_140A1EEE4+FBFC↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdi, r13
                jnz     short loc_140A2EAD3
                test    ecx, ecx
                jz      short loc_140A2EAF1

loc_140A2EAE6:                          ; CODE XREF: sub_140A1EEE4+FC0B↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2EAE6

loc_140A2EAF1:                          ; CODE XREF: sub_140A1EEE4+FC00↑j
                xor     eax, eax
                mov     dword ptr [rdx], 28h ; '('
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A2EB0E
; ---------------------------------------------------------------------------

loc_140A2EB0C:                          ; CODE XREF: sub_140A1EEE4+FC31↓j
                xor     ecx, eax

loc_140A2EB0E:                          ; CODE XREF: sub_140A1EEE4+FC26↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2EB0C
                btr     ecx, 1Fh
                mov     r10d, r15d
                mov     [rdx+14h], ecx
                add     r10, rbx
                mov     rax, [rsp+24B8h+var_1888]
                mov     r8, r10
                mov     [rsp+24B8h+var_1880], rax
                mov     ecx, r14d
                add     rcx, r10
                mov     [rax+20h], r15d
                mov     rax, [rsp+24B8h+var_1880]
                mov     [rax+24h], r14d
                mov     rax, r10
                add     [rbx+828h], r14d
                mov     r9d, [rbx+814h]
                mov     r15, [rbx+818h]
                cmp     r10, rcx
                jnb     short loc_140A2EB76

loc_140A2EB6A:                          ; CODE XREF: sub_140A1EEE4+FC90↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2EB6A

loc_140A2EB76:                          ; CODE XREF: sub_140A1EEE4+FC84↑j
                mov     r11d, r14d
                mov     rdi, r15
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A2EBE7
                mov     rsi, 7010008004002001h

loc_140A2EB8F:                          ; CODE XREF: sub_140A1EEE4+FD01↓j
                mov     edx, 8

loc_140A2EB94:                          ; CODE XREF: sub_140A1EEE4+FCCD↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rdi
                mov     rdi, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rdi, rax
                rol     rdi, cl
                sub     rdx, r13
                jnz     short loc_140A2EB94
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1878], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A2EB8F

loc_140A2EBE7:                          ; CODE XREF: sub_140A1EEE4+FC9F↑j
                and     r14d, 7Fh
                mov     r15d, 8
                cmp     r14d, r15d
                jb      short loc_140A2EC12
                mov     edx, r14d
                shr     rdx, 3

loc_140A2EBFD:                          ; CODE XREF: sub_140A1EEE4+FD2C↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                add     r8, r15
                add     r14d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A2EBFD

loc_140A2EC12:                          ; CODE XREF: sub_140A1EEE4+FD10↑j
                test    r14d, r14d
                jz      short loc_140A2EC2D

loc_140A2EC17:                          ; CODE XREF: sub_140A1EEE4+FD47↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rdi, rax
                add     r8, r13
                rol     rdi, cl
                add     r14d, 0FFFFFFFFh
                jnz     short loc_140A2EC17

loc_140A2EC2D:                          ; CODE XREF: sub_140A1EEE4+FD31↑j
                mov     rax, [rsp+24B8h+var_1880]
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rax+18h], rdi
                mov     r14d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A2ED2D
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A2ED24
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, r15d
                jb      short loc_140A2ECBF
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2ECB1:                          ; CODE XREF: sub_140A1EEE4+FDD9↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, r15
                sub     rcx, r13
                jnz     short loc_140A2ECB1

loc_140A2ECBF:                          ; CODE XREF: sub_140A1EEE4+FDC2↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2ECCF

loc_140A2ECC5:                          ; CODE XREF: sub_140A1EEE4+FDE9↓j
                mov     [rbx], cl
                add     rbx, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2ECC5

loc_140A2ECCF:                          ; CODE XREF: sub_140A1EEE4+FDDF↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2ED0F
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2ED06
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2ED1E
; ---------------------------------------------------------------------------

loc_140A2ED06:                          ; CODE XREF: sub_140A1EEE4+FE0B↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2ED16
; ---------------------------------------------------------------------------

loc_140A2ED0F:                          ; CODE XREF: sub_140A1EEE4+FDFA↑j
                mov     rax, [rdi+368h]

loc_140A2ED16:                          ; CODE XREF: sub_140A1EEE4+FE29↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2ED1E:                          ; CODE XREF: sub_140A1EEE4+FE20↑j
                mov     [rdi+924h], ebx

loc_140A2ED24:                          ; CODE XREF: sub_140A1EEE4+FD9C↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A2ED36
; ---------------------------------------------------------------------------

loc_140A2ED2D:                          ; CODE XREF: sub_140A1EEE4+FD75↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A2ED36:                          ; CODE XREF: sub_140A1EEE4+FE47↑j
                add     [rdi+80Ch], r13d
                lea     rdx, [rdi+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1870], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     ebx, [rcx-2Ah]

loc_140A2ED57:                          ; CODE XREF: sub_140A1EEE4+FE7F↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, r15
                sub     rbx, r13
                jnz     short loc_140A2ED57
                test    ecx, ecx
                jz      short loc_140A2ED74

loc_140A2ED69:                          ; CODE XREF: sub_140A1EEE4+FE8E↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2ED69

loc_140A2ED74:                          ; CODE XREF: sub_140A1EEE4+FE83↑j
                xor     eax, eax
                mov     dword ptr [rdx], 29h ; ')'
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A2ED91
; ---------------------------------------------------------------------------

loc_140A2ED8F:                          ; CODE XREF: sub_140A1EEE4+FEB4↓j
                xor     ecx, eax

loc_140A2ED91:                          ; CODE XREF: sub_140A1EEE4+FEA9↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2ED8F
                btr     ecx, 1Fh
                mov     [rdx+14h], ecx
                mov     rax, [rsp+24B8h+var_1870]
                mov     ecx, dword ptr [rsp+24B8h+var_2450]
                mov     [rsp+24B8h+var_1868], rax
                mov     [rax+20h], ecx
                mov     rax, [rsp+24B8h+var_1868]
                lea     r10, [rdi+rcx]
                mov     ecx, r12d
                mov     r8, r10
                add     rcx, r10
                mov     [rax+24h], r12d
                mov     rax, r10
                add     [rdi+828h], r12d
                mov     r9d, [rdi+814h]
                mov     r14, [rdi+818h]
                cmp     r10, rcx
                jnb     short loc_140A2EDFA

loc_140A2EDEE:                          ; CODE XREF: sub_140A1EEE4+FF14↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2EDEE

loc_140A2EDFA:                          ; CODE XREF: sub_140A1EEE4+FF08↑j
                mov     r11d, r12d
                mov     rbx, r14
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A2EE6A
                mov     rsi, 7010008004002001h

loc_140A2EE13:                          ; CODE XREF: sub_140A1EEE4+FF84↓j
                mov     rdx, r15

loc_140A2EE16:                          ; CODE XREF: sub_140A1EEE4+FF50↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rbx
                add     r8, r15
                rol     rax, cl
                mov     rbx, [r8]
                add     r8, r15
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r13
                jnz     short loc_140A2EE16
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1860], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A2EE13

loc_140A2EE6A:                          ; CODE XREF: sub_140A1EEE4+FF23↑j
                and     r12d, 7Fh
                cmp     r12d, r15d
                jb      short loc_140A2EE8F
                mov     edx, r12d
                shr     rdx, 3

loc_140A2EE7A:                          ; CODE XREF: sub_140A1EEE4+FFA9↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, r15
                add     r12d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A2EE7A

loc_140A2EE8F:                          ; CODE XREF: sub_140A1EEE4+FF8D↑j
                test    r12d, r12d
                jz      short loc_140A2EEAA

loc_140A2EE94:                          ; CODE XREF: sub_140A1EEE4+FFC4↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     r12d, 0FFFFFFFFh
                jnz     short loc_140A2EE94

loc_140A2EEAA:                          ; CODE XREF: sub_140A1EEE4+FFAE↑j
                mov     rax, [rsp+24B8h+var_1868]
                mov     [rsp+24B8h+var_1B80], rdi
                mov     [rax+18h], rbx

loc_140A2EEBE:                          ; CODE XREF: sub_140A1EEE4+FAA2↑j
                mov     r15, [rsp+24B8h+var_1B80]
                lea     r9, [rsp+24B8h+var_20A8]
                mov     rax, cs:off_140C00A68
                lea     r8, [rsp+24B8h+var_1388]
                mov     ebx, 6
                mov     [rsp+24B8h+var_2468], r15
                mov     r14d, [r15+990h]
                shr     r14d, 1Eh
                not     r14d
                lea     edx, [rbx+0Ah]
                and     r14d, r13d
                lea     ecx, [rbx+1Fh]
                add     r14d, ebx
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                js      short loc_140A2EF14
                add     r14d, dword ptr [rsp+24B8h+var_1380]
                jmp     short loc_140A2EF1E
; ---------------------------------------------------------------------------

loc_140A2EF14:                          ; CODE XREF: sub_140A1EEE4+10024↑j
                xor     eax, eax
                mov     [rsp+24B8h+var_1380], rax

loc_140A2EF1E:                          ; CODE XREF: sub_140A1EEE4+1002E↑j
                mov     eax, [rsp+24B8h+var_213C]
                and     eax, ebx
                mov     dword ptr [rsp+24B8h+var_2450], eax
                jnz     short loc_140A2EF54
                mov     rax, cs:qword_140C1DE30
                test    rax, rax
                jz      short loc_140A2EF3D
                add     r14d, [rax+8]

loc_140A2EF3D:                          ; CODE XREF: sub_140A1EEE4+10053↑j
                mov     rax, cs:qword_140D58630
                test    rax, rax
                jz      short loc_140A2EF4D
                add     r14d, [rax+8]

loc_140A2EF4D:                          ; CODE XREF: sub_140A1EEE4+10063↑j
                add     r14d, dword ptr cs:qword_140C04760

loc_140A2EF54:                          ; CODE XREF: sub_140A1EEE4+10047↑j
                rdtsc
                shl     rdx, 20h
                mov     rdi, 7010008004002001h
                or      rax, rdx
                mov     r12d, 5
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1858], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, r12d
                ja      loc_140A2F062
                jz      loc_140A2F048
                test    ecx, ecx
                jz      short loc_140A2F02E
                sub     ecx, 1
                jz      short loc_140A2F015
                sub     ecx, 1
                jz      short loc_140A2EFFB
                cmp     ecx, 1
                jz      short loc_140A2EFDE
                mov     [rsp+24B8h+var_20A4], 67076494h
                mov     edi, [rsp+24B8h+var_20A4]
                rol     edi, 4
                jmp     loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2EFDE:                          ; CODE XREF: sub_140A1EEE4+100DE↑j
                mov     [rsp+24B8h+var_20A0], 0A8223938h
                mov     edi, [rsp+24B8h+var_20A0]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2EFFB:                          ; CODE XREF: sub_140A1EEE4+100D9↑j
                mov     [rsp+24B8h+var_2008], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2008]
                ror     edi, 2
                jmp     loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2F015:                          ; CODE XREF: sub_140A1EEE4+100D4↑j
                mov     [rsp+24B8h+var_2098], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2098]
                rol     edi, 1
                jmp     loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2F02E:                          ; CODE XREF: sub_140A1EEE4+100CF↑j
                mov     [rsp+24B8h+var_2094], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2094]
                ror     edi, 6
                jmp     loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2F048:                          ; CODE XREF: sub_140A1EEE4+100C7↑j
                mov     [rsp+24B8h+var_2090], 288C49EDh
                mov     edi, [rsp+24B8h+var_2090]
                ror     edi, 5
                jmp     loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2F062:                          ; CODE XREF: sub_140A1EEE4+100C1↑j
                sub     ecx, ebx
                jz      loc_140A2F15E
                sub     ecx, 1
                jz      loc_140A2F147
                sub     ecx, 1
                jz      loc_140A2F130
                cmp     ecx, 1
                jz      loc_140A2F116
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1850], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                or      ecx, ebx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ebx, 6
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2F116:                          ; CODE XREF: sub_140A1EEE4+1019B↑j
                mov     [rsp+24B8h+var_208C], 0B0869E85h
                mov     edi, [rsp+24B8h+var_208C]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2F130:                          ; CODE XREF: sub_140A1EEE4+10192↑j
                mov     [rsp+24B8h+var_2088], 64664142h
                mov     edi, [rsp+24B8h+var_2088]
                ror     edi, 8
                jmp     short loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2F147:                          ; CODE XREF: sub_140A1EEE4+10189↑j
                mov     [rsp+24B8h+var_2084], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_2084]
                rol     edi, 7
                jmp     short loc_140A2F175
; ---------------------------------------------------------------------------

loc_140A2F15E:                          ; CODE XREF: sub_140A1EEE4+10180↑j
                mov     [rsp+24B8h+var_2080], 4E574672h
                mov     edi, [rsp+24B8h+var_2080]
                xor     edi, ebx
                ror     edi, 18h

loc_140A2F175:                          ; CODE XREF: sub_140A1EEE4+100F5↑j
                                        ; sub_140A1EEE4+10112↑j ...
                mov     rdx, r14
                mov     r8d, edi
                shl     rdx, 3
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     r13, rax
                mov     [rsp+24B8h+var_2430], rax
                xor     eax, eax
                test    r13, r13
                jz      loc_140A237B3
                rdtsc
                shl     rdx, 20h
                mov     rdi, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1848], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, r12d
                ja      loc_140A2F2A7
                jz      loc_140A2F28D
                test    ecx, ecx
                jz      short loc_140A2F273
                sub     ecx, 1
                jz      short loc_140A2F25A
                sub     ecx, 1
                jz      short loc_140A2F240
                cmp     ecx, 1
                jz      short loc_140A2F223
                mov     [rsp+24B8h+var_207C], 67076494h
                mov     edi, [rsp+24B8h+var_207C]
                rol     edi, 4
                jmp     loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F223:                          ; CODE XREF: sub_140A1EEE4+10323↑j
                mov     [rsp+24B8h+var_2078], 0A8223938h
                mov     edi, [rsp+24B8h+var_2078]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F240:                          ; CODE XREF: sub_140A1EEE4+1031E↑j
                mov     [rsp+24B8h+var_2074], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2074]
                ror     edi, 2
                jmp     loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F25A:                          ; CODE XREF: sub_140A1EEE4+10319↑j
                mov     [rsp+24B8h+var_2070], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2070]
                rol     edi, 1
                jmp     loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F273:                          ; CODE XREF: sub_140A1EEE4+10314↑j
                mov     [rsp+24B8h+var_206C], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_206C]
                ror     edi, 6
                jmp     loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F28D:                          ; CODE XREF: sub_140A1EEE4+1030C↑j
                mov     [rsp+24B8h+var_2068], 288C49EDh
                mov     edi, [rsp+24B8h+var_2068]
                ror     edi, 5
                jmp     loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F2A7:                          ; CODE XREF: sub_140A1EEE4+10306↑j
                sub     ecx, ebx
                jz      loc_140A2F39E
                sub     ecx, 1
                jz      loc_140A2F387
                sub     ecx, 1
                jz      loc_140A2F370
                cmp     ecx, 1
                jz      loc_140A2F356
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_1840], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F356:                          ; CODE XREF: sub_140A1EEE4+103E0↑j
                mov     [rsp+24B8h+var_2064], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2064]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F370:                          ; CODE XREF: sub_140A1EEE4+103D7↑j
                mov     [rsp+24B8h+var_2060], 64664142h
                mov     edi, [rsp+24B8h+var_2060]
                ror     edi, 8
                jmp     short loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F387:                          ; CODE XREF: sub_140A1EEE4+103CE↑j
                mov     [rsp+24B8h+var_205C], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_205C]
                rol     edi, 7
                jmp     short loc_140A2F3B5
; ---------------------------------------------------------------------------

loc_140A2F39E:                          ; CODE XREF: sub_140A1EEE4+103C5↑j
                mov     [rsp+24B8h+var_2058], 4E574672h
                mov     edi, [rsp+24B8h+var_2058]
                xor     edi, ebx
                ror     edi, 18h

loc_140A2F3B5:                          ; CODE XREF: sub_140A1EEE4+1033A↑j
                                        ; sub_140A1EEE4+10357↑j ...
                mov     rdx, r14
                mov     r8d, edi
                shl     rdx, 2
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     r12, rax
                mov     [rsp+24B8h+var_2438], rax
                xor     eax, eax
                test    r12, r12
                jnz     short loc_140A2F3E8
                mov     rcx, r13

loc_140A2F3DE:                          ; CODE XREF: sub_140A1EEE4+11833↓j
                call    ExFreePoolWithTag
                jmp     loc_140A237B3
; ---------------------------------------------------------------------------

loc_140A2F3E8:                          ; CODE XREF: sub_140A1EEE4+104F5↑j
                mov     ecx, cs:dword_140D585C8
                mov     r10, 88000000000h
                mov     eax, ecx
                mov     r11d, 1000h
                sub     rax, r10
                mov     r14d, 1
                mov     [r13+0], rax
                mov     ebx, r14d
                mov     eax, r11d
                sub     eax, ecx
                mov     [r12], eax
                mov     eax, [rsp+24B8h+var_213C]
                and     eax, 2
                mov     dword ptr [rsp+24B8h+var_2458], eax
                jnz     short loc_140A2F441
                lea     rax, InitSafeBootMode
                mov     [r13+8], rax
                lea     ebx, [r14+1]
                mov     dword ptr [r12+4], 4

loc_140A2F441:                          ; CODE XREF: sub_140A1EEE4+10543↑j
                mov     r9d, dword ptr [rsp+24B8h+var_2450]
                lea     rcx, dword_140E01940
                mov     eax, ebx
                add     ebx, r14d
                mov     [r13+rax*8+0], rcx
                lea     rcx, xmmword_140E00020
                mov     dword ptr [r12+rax*4], 0D8h
                xor     eax, eax
                mov     [r13+rbx*8+0], rcx
                mov     dword ptr [r12+rbx*4], 18h
                add     ebx, r14d
                mov     dword ptr [rsp+24B8h+var_2460], ebx
                test    r9d, r9d
                jnz     loc_140A2F78B
                lea     rdx, [rsp+24B8h+var_1838]
                lea     rcx, [rsp+24B8h+var_1830]
                call    sub_140371970
                mov     rax, [rsp+24B8h+var_1830]
                mov     r10, 88000000000h
                mov     r9d, dword ptr [rsp+24B8h+var_2450]
                mov     r11d, 1000h
                mov     [r13+rbx*8+0], rax
                mov     dword ptr [r12+rbx*4], 8
                add     ebx, r14d
                mov     rax, [rsp+24B8h+var_1838]
                mov     [r13+rbx*8+0], rax
                mov     dword ptr [r12+rbx*4], 8
                add     ebx, r14d
                test    dword ptr [r15+990h], 40000000h
                mov     dword ptr [rsp+24B8h+var_2460], ebx
                jnz     short loc_140A2F515
                mov     rax, [rsp+24B8h+var_1830]
                mov     rcx, [rax]
                mov     [r13+rbx*8+0], rcx
                mov     rax, [rsp+24B8h+var_1838]
                mov     ecx, [rax]
                mov     [r12+rbx*4], ecx
                add     ebx, r14d
                mov     dword ptr [rsp+24B8h+var_2460], ebx

loc_140A2F515:                          ; CODE XREF: sub_140A1EEE4+1060A↑j
                xor     eax, eax

loc_140A2F517:                          ; CODE XREF: sub_140A1EEE4+108B7↓j
                mov     r8d, eax
                cmp     [rsp+24B8h+var_1380], rax
                jbe     short loc_140A2F562
                mov     rdi, rax

loc_140A2F527:                          ; CODE XREF: sub_140A1EEE4+10678↓j
                mov     rax, [rsp+24B8h+var_1388]
                add     rdi, rdi
                add     r8d, r14d
                mov     rcx, [rax+rdi*8]
                mov     [r13+rbx*8+0], rcx
                mov     rax, [rsp+24B8h+var_1388]
                mov     ecx, [rax+rdi*8+8]
                mov     [r12+rbx*4], ecx
                add     ebx, r14d
                mov     edi, r8d
                cmp     rdi, [rsp+24B8h+var_1380]
                jb      short loc_140A2F527
                mov     dword ptr [rsp+24B8h+var_2460], ebx

loc_140A2F562:                          ; CODE XREF: sub_140A1EEE4+1063E↑j
                test    r9d, r9d
                jnz     loc_140A2F65C
                mov     rax, cs:qword_140C1DE30
                xor     r9d, r9d
                test    rax, rax
                jz      short loc_140A2F5C1
                mov     r8d, r9d
                cmp     [rax+8], r9
                jbe     short loc_140A2F5C1
                mov     edi, r9d

loc_140A2F586:                          ; CODE XREF: sub_140A1EEE4+106D7↓j
                mov     rax, [rax]
                add     rdi, rdi
                add     r8d, r14d
                mov     rcx, [rax+rdi*8]
                mov     [r13+rbx*8+0], rcx
                mov     rax, cs:qword_140C1DE30
                mov     rcx, [rax]
                mov     eax, [rcx+rdi*8+8]
                mov     [r12+rbx*4], eax
                add     ebx, r14d
                mov     rax, cs:qword_140C1DE30
                mov     edi, r8d
                cmp     rdi, [rax+8]
                jb      short loc_140A2F586
                mov     dword ptr [rsp+24B8h+var_2460], ebx

loc_140A2F5C1:                          ; CODE XREF: sub_140A1EEE4+10694↑j
                                        ; sub_140A1EEE4+1069D↑j
                mov     rax, cs:qword_140D58630
                test    rax, rax
                jz      short loc_140A2F614
                mov     r8d, r9d
                cmp     [rax+8], r9
                jbe     short loc_140A2F614
                mov     rdi, r9

loc_140A2F5D9:                          ; CODE XREF: sub_140A1EEE4+1072A↓j
                mov     rax, [rax]
                add     rdi, rdi
                add     r8d, r14d
                mov     rcx, [rax+rdi*8]
                mov     [r13+rbx*8+0], rcx
                mov     rax, cs:qword_140D58630
                mov     rcx, [rax]
                mov     eax, [rcx+rdi*8+8]
                mov     [r12+rbx*4], eax
                add     ebx, r14d
                mov     rax, cs:qword_140D58630
                mov     edi, r8d
                cmp     rdi, [rax+8]
                jb      short loc_140A2F5D9
                mov     dword ptr [rsp+24B8h+var_2460], ebx

loc_140A2F614:                          ; CODE XREF: sub_140A1EEE4+106E7↑j
                                        ; sub_140A1EEE4+106F0↑j
                xor     eax, eax
                cmp     cs:qword_140C04760, rax
                mov     r8d, eax
                jbe     short loc_140A2F65C
                mov     edi, eax

loc_140A2F624:                          ; CODE XREF: sub_140A1EEE4+10772↓j
                mov     rax, cs:off_140C04758
                add     rdi, rdi
                add     r8d, r14d
                mov     rcx, [rax+rdi*8]
                mov     [r13+rbx*8+0], rcx
                mov     rax, cs:off_140C04758
                mov     ecx, [rax+rdi*8+8]
                mov     [r12+rbx*4], ecx
                add     ebx, r14d
                mov     edi, r8d
                cmp     rdi, cs:qword_140C04760
                jb      short loc_140A2F624
                mov     dword ptr [rsp+24B8h+var_2460], ebx

loc_140A2F65C:                          ; CODE XREF: sub_140A1EEE4+10681↑j
                                        ; sub_140A1EEE4+1073C↑j
                mov     rax, [rsp+24B8h+var_1B80]
                mov     ecx, [rax+95Ch]
                mov     eax, 0BC2A27DBh
                xor     rcx, rax
                sub     rcx, r10
                mov     al, [rcx]
                mov     r14, [rsp+24B8h+var_1B80]
                test    al, 2
                jz      short loc_140A2F68A
                add     [r14+7E4h], r11d

loc_140A2F68A:                          ; CODE XREF: sub_140A1EEE4+1079D↑j
                mov     r10d, [r14+838h]
                mov     r9d, 20h ; ' '
                mov     r15d, [r14+7E4h]
                cmp     r10d, 7
                mov     r8d, [r14+924h]
                mov     dword ptr [rsp+24B8h+var_2448], r10d
                lea     eax, [r9-20h]
                cmovnz  r9d, eax
                lea     eax, [rbx+rbx*2]
                shl     eax, 4
                add     eax, r15d
                mov     dword ptr [rsp+24B8h+var_2440], r9d
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A2F7DA
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rdi, rax
                mov     [rsp+24B8h+var_2420], rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A2F7D2
                mov     rax, [rsp+24B8h+var_2468]
                mov     ecx, [rax+990h]
                test    cl, 4
                jnz     loc_140A2F7BF
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     r8, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A2F742
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2F732:                          ; CODE XREF: sub_140A1EEE4+1085C↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, 1
                jnz     short loc_140A2F732

loc_140A2F742:                          ; CODE XREF: sub_140A1EEE4+10843↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2F753

loc_140A2F748:                          ; CODE XREF: sub_140A1EEE4+1086D↓j
                mov     [r14], cl
                inc     r14
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2F748

loc_140A2F753:                          ; CODE XREF: sub_140A1EEE4+10862↑j
                mov     r14d, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A2F7A9
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2F7A0
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2F7B8
; ---------------------------------------------------------------------------

loc_140A2F78B:                          ; CODE XREF: sub_140A1EEE4+1059B↑j
                mov     [rsp+24B8h+var_1830], rax
                mov     [rsp+24B8h+var_1838], rax
                jmp     loc_140A2F517
; ---------------------------------------------------------------------------

loc_140A2F7A0:                          ; CODE XREF: sub_140A1EEE4+10890↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A2F7B0
; ---------------------------------------------------------------------------

loc_140A2F7A9:                          ; CODE XREF: sub_140A1EEE4+1087F↑j
                mov     rax, [rdi+368h]

loc_140A2F7B0:                          ; CODE XREF: sub_140A1EEE4+108C3↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A2F7B8:                          ; CODE XREF: sub_140A1EEE4+108A5↑j
                mov     [rdi+924h], r14d

loc_140A2F7BF:                          ; CODE XREF: sub_140A1EEE4+1081B↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2440]
                mov     r10d, dword ptr [rsp+24B8h+var_2448]
                jmp     short loc_140A2F7EC
; ---------------------------------------------------------------------------

loc_140A2F7D2:                          ; CODE XREF: sub_140A1EEE4+10807↑j
                mov     rdi, rax
                jmp     loc_140A2FA38
; ---------------------------------------------------------------------------

loc_140A2F7DA:                          ; CODE XREF: sub_140A1EEE4+107E7↑j
                mov     rdi, r14
                mov     [rsp+24B8h+var_2420], r14
                mov     [r14+7E4h], eax

loc_140A2F7EC:                          ; CODE XREF: sub_140A1EEE4+108EC↑j
                add     [rdi+80Ch], ebx
                lea     r14, [rdi+r15]
                mov     [rsp+24B8h+var_1828], r14
                mov     r11d, 1
                mov     [rsp+24B8h+var_1820], r14
                test    ebx, ebx
                jz      loc_140A2FA10
                mov     eax, ebx
                mov     rsi, r13
                mov     [rsp+24B8h+var_2428], rax
                mov     rbx, r12
                mov     [rsp+24B8h+var_2468], r12
                xor     r13d, r13d

loc_140A2F82C:                          ; CODE XREF: sub_140A1EEE4+10B0A↓j
                mov     r12d, [rbx]
                mov     ecx, 30h ; '0'
                mov     r15, [rsi]
                mov     rax, r14
                mov     dword ptr [rsp+24B8h+var_23F8], r12d
                lea     edx, [rcx-2Ah]

loc_140A2F845:                          ; CODE XREF: sub_140A1EEE4+1096E↓j
                mov     [rax], r13
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r11
                jnz     short loc_140A2F845
                test    ecx, ecx
                jz      short loc_140A2F863

loc_140A2F858:                          ; CODE XREF: sub_140A1EEE4+1097D↓j
                mov     [rax], r13b
                add     rax, r11
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2F858

loc_140A2F863:                          ; CODE XREF: sub_140A1EEE4+10972↑j
                mov     [r14], r9d
                mov     [r14+8], r15
                cmp     r10d, 7
                jnz     short loc_140A2F887
                test    r12d, r12d
                jz      short loc_140A2F887
                lea     r9, [r14+18h]
                mov     r8d, r12d
                mov     rdx, r15
                mov     rcx, rdi
                call    sub_1403EA0CC

loc_140A2F887:                          ; CODE XREF: sub_140A1EEE4+1098A↑j
                                        ; sub_140A1EEE4+1098F↑j
                mov     [r14+10h], r12d
                lea     rcx, [r15+r12]
                add     [rdi+828h], r12d
                mov     r9, r15
                mov     r10d, [rdi+814h]
                mov     rax, r15
                mov     r13, [rdi+818h]
                cmp     r15, rcx
                jnb     short loc_140A2F8BB

loc_140A2F8AF:                          ; CODE XREF: sub_140A1EEE4+109D5↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2F8AF

loc_140A2F8BB:                          ; CODE XREF: sub_140A1EEE4+109C9↑j
                mov     r11d, r12d
                mov     r8, r13
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A2F947
                mov     r12, 7010008004002001h

loc_140A2F8D4:                          ; CODE XREF: sub_140A1EEE4+10A4C↓j
                mov     edx, 8

loc_140A2F8D9:                          ; CODE XREF: sub_140A1EEE4+10A13↓j
                mov     rax, [r9]
                mov     ecx, r10d
                xor     rax, r8
                mov     r8, [r9+8]
                rol     rax, cl
                add     r9, 10h
                xor     r8, rax
                rol     r8, cl
                sub     rdx, 1
                jnz     short loc_140A2F8D9
                mov     rcx, r9
                sub     rcx, r15
                xor     rcx, r13
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1818], rdx
                xor     r10d, eax
                mov     eax, 1
                and     r10d, 3Fh
                cmovz   r10d, eax
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A2F8D4
                mov     rdi, [rsp+24B8h+var_2420]
                mov     r12d, dword ptr [rsp+24B8h+var_23F8]
                mov     rbx, [rsp+24B8h+var_2468]

loc_140A2F947:                          ; CODE XREF: sub_140A1EEE4+109E4↑j
                mov     edx, r12d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2F974
                mov     r11d, edx
                shr     r11, 3

loc_140A2F959:                          ; CODE XREF: sub_140A1EEE4+10A89↓j
                xor     r8, [r9]
                mov     ecx, r10d
                rol     r8, cl
                add     r9, 8
                add     edx, 0FFFFFFF8h
                sub     r11, 1
                jnz     short loc_140A2F959
                mov     rbx, [rsp+24B8h+var_2468]

loc_140A2F974:                          ; CODE XREF: sub_140A1EEE4+10A6C↑j
                mov     r11d, 1
                test    edx, edx
                jz      short loc_140A2F993

loc_140A2F97E:                          ; CODE XREF: sub_140A1EEE4+10AAD↓j
                movzx   eax, byte ptr [r9]
                mov     ecx, r10d
                xor     r8, rax
                add     r9, r11
                rol     r8, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2F97E

loc_140A2F993:                          ; CODE XREF: sub_140A1EEE4+10A98↑j
                mov     rax, r8
                shr     rax, 1Fh
                xor     r13d, r13d
                jmp     short loc_140A2F9A6
; ---------------------------------------------------------------------------

loc_140A2F99F:                          ; CODE XREF: sub_140A1EEE4+10AC5↓j
                xor     r8d, eax
                shr     rax, 1Fh

loc_140A2F9A6:                          ; CODE XREF: sub_140A1EEE4+10AB9↑j
                test    rax, rax
                jnz     short loc_140A2F99F
                mov     r9d, dword ptr [rsp+24B8h+var_2440]
                btr     r8d, 1Fh
                mov     r10d, dword ptr [rsp+24B8h+var_2448]
                add     rbx, 4
                mov     [r14+14h], r8d
                add     rsi, 8
                add     [rdi+828h], r12d
                mov     r14, [rsp+24B8h+var_1828]
                add     r14, 30h ; '0'
                mov     [rsp+24B8h+var_2468], rbx
                sub     [rsp+24B8h+var_2428], r11
                mov     [rsp+24B8h+var_1828], r14
                jnz     loc_140A2F82C
                mov     r14, [rsp+24B8h+var_1820]
                mov     ebx, dword ptr [rsp+24B8h+var_2460]
                mov     r12, [rsp+24B8h+var_2438]
                mov     r13, [rsp+24B8h+var_2430]

loc_140A2FA10:                          ; CODE XREF: sub_140A1EEE4+1092A↑j
                cmp     dword ptr [rsp+24B8h+var_2448], 7
                jnz     short loc_140A2FA38
                test    ebx, ebx
                jz      short loc_140A2FA38

loc_140A2FA1B:                          ; CODE XREF: sub_140A1EEE4+10B52↓j
                or      [r14+28h], r11d
                mov     r14, [rsp+24B8h+var_1820]
                add     r14, 30h ; '0'
                mov     [rsp+24B8h+var_1820], r14
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A2FA1B

loc_140A2FA38:                          ; CODE XREF: sub_140A1EEE4+108F1↑j
                                        ; sub_140A1EEE4+10B31↑j ...
                mov     rcx, r12
                mov     [rsp+24B8h+var_1B80], rdi
                call    ExFreePoolWithTag
                mov     rcx, r13
                call    ExFreePoolWithTag
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                test    dword ptr [rdi+990h], 40000000h
                jz      loc_140A2FD28
                mov     rcx, [rsp+24B8h+var_1830]
                test    rcx, rcx
                jz      loc_140A2FD28
                mov     rax, [rsp+24B8h+var_1838]
                mov     ebx, 20h ; ' '
                mov     r9d, [rdi+838h]
                cmp     r9d, 7
                mov     r15d, [rdi+7E4h]
                mov     r12, [rcx]
                mov     r13d, [rax]
                lea     eax, [rbx-20h]
                mov     r8d, [rdi+924h]
                cmovnz  ebx, eax
                lea     eax, [r15+30h]
                mov     dword ptr [rsp+24B8h+var_2460], r9d
                mov     dword ptr [rsp+24B8h+var_2448], ebx
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2FBA5
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A2FB96
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     rbx, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2FB29
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2FB19:                          ; CODE XREF: sub_140A1EEE4+10C43↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A2FB19

loc_140A2FB29:                          ; CODE XREF: sub_140A1EEE4+10C2A↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2FB39

loc_140A2FB2F:                          ; CODE XREF: sub_140A1EEE4+10C53↓j
                mov     [rdi], cl
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A2FB2F

loc_140A2FB39:                          ; CODE XREF: sub_140A1EEE4+10C49↑j
                mov     edi, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A2FB7C
                test    dword ptr [r14+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2FB73
                mov     rax, [r14+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2FB8B
; ---------------------------------------------------------------------------

loc_140A2FB73:                          ; CODE XREF: sub_140A1EEE4+10C78↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A2FB83
; ---------------------------------------------------------------------------

loc_140A2FB7C:                          ; CODE XREF: sub_140A1EEE4+10C66↑j
                mov     rax, [r14+368h]

loc_140A2FB83:                          ; CODE XREF: sub_140A1EEE4+10C96↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A2FB8B:                          ; CODE XREF: sub_140A1EEE4+10C8D↑j
                mov     ebx, dword ptr [rsp+24B8h+var_2448]
                mov     [r14+924h], edi

loc_140A2FB96:                          ; CODE XREF: sub_140A1EEE4+10C04↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2460]
                jmp     short loc_140A2FBAE
; ---------------------------------------------------------------------------

loc_140A2FBA5:                          ; CODE XREF: sub_140A1EEE4+10BDD↑j
                mov     r14, rdi
                mov     [rdi+7E4h], eax

loc_140A2FBAE:                          ; CODE XREF: sub_140A1EEE4+10CBF↑j
                add     r15, r14
                mov     r11d, 1
                add     [r14+80Ch], r11d
                mov     rax, r15
                mov     [rsp+24B8h+var_1810], r15
                xor     edi, edi
                lea     ecx, [r11+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A2FBD2:                          ; CODE XREF: sub_140A1EEE4+10CFB↓j
                mov     [rax], rdi
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r11
                jnz     short loc_140A2FBD2
                test    ecx, ecx
                jz      short loc_140A2FBF0

loc_140A2FBE5:                          ; CODE XREF: sub_140A1EEE4+10D0A↓j
                mov     [rax], dil
                add     rax, r11
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A2FBE5

loc_140A2FBF0:                          ; CODE XREF: sub_140A1EEE4+10CFF↑j
                mov     [r15], ebx
                mov     [r15+8], r12
                cmp     r9d, 7
                jnz     short loc_140A2FC1A
                test    r13d, r13d
                jz      short loc_140A2FC1A
                lea     r9, [r15+18h]
                mov     r8d, r13d
                mov     rdx, r12
                mov     rcx, r14
                call    sub_1403EA0CC
                mov     r11d, 1

loc_140A2FC1A:                          ; CODE XREF: sub_140A1EEE4+10D17↑j
                                        ; sub_140A1EEE4+10D1C↑j
                mov     [r15+10h], r13d
                lea     rcx, [r12+r13]
                add     [r14+828h], r13d
                mov     rdi, r12
                mov     r8d, [r14+814h]
                mov     rax, r12
                mov     r10, [r14+818h]
                cmp     r12, rcx
                jnb     short loc_140A2FC4E

loc_140A2FC42:                          ; CODE XREF: sub_140A1EEE4+10D68↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A2FC42

loc_140A2FC4E:                          ; CODE XREF: sub_140A1EEE4+10D5C↑j
                mov     r9d, r13d
                mov     rbx, r10
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A2FCBF
                mov     rsi, 7010008004002001h

loc_140A2FC67:                          ; CODE XREF: sub_140A1EEE4+10DD9↓j
                mov     edx, 8

loc_140A2FC6C:                          ; CODE XREF: sub_140A1EEE4+10DA5↓j
                mov     rax, [rdi]
                mov     ecx, r8d
                xor     rax, rbx
                mov     rbx, [rdi+8]
                rol     rax, cl
                add     rdi, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r11
                jnz     short loc_140A2FC6C
                mov     rcx, rdi
                sub     rcx, r12
                xor     rcx, r10
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1808], rdx
                xor     r8d, eax
                and     r8d, 3Fh
                cmovz   r8d, r11d
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A2FC67

loc_140A2FCBF:                          ; CODE XREF: sub_140A1EEE4+10D77↑j
                mov     edx, r13d
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A2FCE6
                mov     r9d, edx
                shr     r9, 3

loc_140A2FCD1:                          ; CODE XREF: sub_140A1EEE4+10E00↓j
                xor     rbx, [rdi]
                mov     ecx, r8d
                rol     rbx, cl
                add     rdi, 8
                add     edx, 0FFFFFFF8h
                sub     r9, r11
                jnz     short loc_140A2FCD1

loc_140A2FCE6:                          ; CODE XREF: sub_140A1EEE4+10DE4↑j
                test    edx, edx
                jz      short loc_140A2FCFE

loc_140A2FCEA:                          ; CODE XREF: sub_140A1EEE4+10E18↓j
                movzx   eax, byte ptr [rdi]
                mov     ecx, r8d
                xor     rbx, rax
                add     rdi, r11
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A2FCEA

loc_140A2FCFE:                          ; CODE XREF: sub_140A1EEE4+10E04↑j
                mov     rax, rbx
                jmp     short loc_140A2FD05
; ---------------------------------------------------------------------------

loc_140A2FD03:                          ; CODE XREF: sub_140A1EEE4+10E28↓j
                xor     ebx, eax

loc_140A2FD05:                          ; CODE XREF: sub_140A1EEE4+10E1D↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A2FD03
                btr     ebx, 1Fh
                mov     [rsp+24B8h+var_1B80], r14
                mov     [r15+14h], ebx
                mov     rdi, r14
                add     [r14+828h], r13d

loc_140A2FD28:                          ; CODE XREF: sub_140A1EEE4+10B81↑j
                                        ; sub_140A1EEE4+10B92↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A2FD33

loc_140A2FD31:                          ; CODE XREF: sub_140A1EEE4:loc_140A2FD31↓j
                jmp     short loc_140A2FD31
; ---------------------------------------------------------------------------

loc_140A2FD33:                          ; CODE XREF: sub_140A1EEE4+10E4B↑j
                sti
                lea     rax, qword_140E01848
                mov     [rsp+24B8h+var_1378], 8
                or      r13d, 0FFFFFFFFh
                mov     [rsp+24B8h+var_10A8], rax
                xor     eax, eax
                mov     dword ptr [rsp+24B8h+var_2460], r13d
                cmp     cs:qword_140E01848, rax
                mov     r12d, 1
                mov     ebx, r12d
                jz      loc_140A2FE63
                cmp     dword ptr [rdi+838h], 7
                jz      short loc_140A2FD91
                cmp     [rdi+990h], eax
                jl      loc_140A2FE84
                call    sub_1404F1C48
                test    al, al
                jnz     loc_140A2FE84

loc_140A2FD91:                          ; CODE XREF: sub_140A1EEE4+10E92↑j
                mov     rax, cs:qword_140E01848
                xor     ecx, ecx
                mov     [rsp+24B8h+var_10A0], rax
                mov     eax, 40000000h
                cpuid
                mov     r8d, eax
                mov     [rsp+24B8h+var_1368], eax
                mov     dword ptr [rsp+24B8h+var_1364], ebx
                mov     dword ptr [rsp+24B8h+var_1364+4], ecx
                mov     rax, [rsp+24B8h+var_1364]
                cmp     rax, cs:qword_140A76660
                mov     [rsp+24B8h+var_135C], edx
                jnz     short loc_140A2FE57
                cmp     edx, cs:dword_140A76668
                jnz     short loc_140A2FE57
                mov     r9d, 40000002h
                cmp     r8d, r9d
                jb      short loc_140A2FE57
                xor     ecx, ecx
                lea     eax, [r9-1]
                cpuid
                mov     [rsp+24B8h+var_1368], eax
                mov     dword ptr [rsp+24B8h+var_1364], ebx
                mov     dword ptr [rsp+24B8h+var_1364+4], ecx
                mov     [rsp+24B8h+var_135C], edx
                cmp     eax, 31237648h
                jnz     short loc_140A2FE57
                xor     ecx, ecx
                mov     eax, r9d
                cpuid
                mov     [rsp+24B8h+var_1368], eax
                mov     eax, ebx
                and     eax, 0FFFF0000h
                mov     dword ptr [rsp+24B8h+var_1364], ebx
                mov     dword ptr [rsp+24B8h+var_1364+4], ecx
                mov     [rsp+24B8h+var_135C], edx
                cmp     eax, 60000h
                jnz     short loc_140A2FE57
                movzx   eax, bx
                cmp     eax, r12d
                jnz     short loc_140A2FE57
                mov     eax, 4
                jmp     short loc_140A2FE5C
; ---------------------------------------------------------------------------

loc_140A2FE57:                          ; CODE XREF: sub_140A1EEE4+10EF3↑j
                                        ; sub_140A1EEE4+10EFB↑j ...
                mov     eax, 1000h

loc_140A2FE5C:                          ; CODE XREF: sub_140A1EEE4+10F71↑j
                mov     dword ptr [rsp+24B8h+var_2460], r12d
                jmp     short loc_140A2FE78
; ---------------------------------------------------------------------------

loc_140A2FE63:                          ; CODE XREF: sub_140A1EEE4+10E85↑j
                lea     rax, off_140CFB430
                mov     [rsp+24B8h+var_10A0], rax
                mov     eax, cs:dword_140D585F8

loc_140A2FE78:                          ; CODE XREF: sub_140A1EEE4+10F7D↑j
                mov     ebx, 2
                mov     [rsp+24B8h+var_1374], eax

loc_140A2FE84:                          ; CODE XREF: sub_140A1EEE4+10E9A↑j
                                        ; sub_140A1EEE4+10EA7↑j
                mov     r10d, [rdi+838h]
                lea     rcx, qword_140E01860
                mov     r15d, [rdi+7E4h]
                mov     r9d, 20h ; ' '
                mov     r8d, [rdi+924h]
                mov     eax, ebx
                add     ebx, r12d
                cmp     r10d, 7
                mov     dword ptr [rsp+24B8h+var_2448], ebx
                mov     dword ptr [rsp+24B8h+var_2440], r10d
                mov     [rsp+rax*8+24B8h+var_10A8], rcx
                mov     [rsp+rax*4+24B8h+var_1378], 8
                lea     eax, [r9-20h]
                cmovnz  r9d, eax
                lea     eax, [rbx+rbx*2]
                shl     eax, 4
                add     eax, r15d
                mov     dword ptr [rsp+24B8h+var_23F8], r9d
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A2FFDA
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     r14, rax
                mov     [rsp+24B8h+var_2468], rax
                xor     eax, eax
                test    r14, r14
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A2FFC3
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     rbx, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A2FF56
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A2FF47:                          ; CODE XREF: sub_140A1EEE4+11070↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r12
                jnz     short loc_140A2FF47

loc_140A2FF56:                          ; CODE XREF: sub_140A1EEE4+11058↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A2FF66

loc_140A2FF5C:                          ; CODE XREF: sub_140A1EEE4+11080↓j
                mov     [rdi], cl
                add     rdi, r12
                add     eax, r13d
                jnz     short loc_140A2FF5C

loc_140A2FF66:                          ; CODE XREF: sub_140A1EEE4+11076↑j
                mov     edi, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A2FFA9
                test    dword ptr [r14+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A2FFA0
                mov     rax, [r14+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A2FFB8
; ---------------------------------------------------------------------------

loc_140A2FFA0:                          ; CODE XREF: sub_140A1EEE4+110A5↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A2FFB0
; ---------------------------------------------------------------------------

loc_140A2FFA9:                          ; CODE XREF: sub_140A1EEE4+11093↑j
                mov     rax, [r14+368h]

loc_140A2FFB0:                          ; CODE XREF: sub_140A1EEE4+110C3↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A2FFB8:                          ; CODE XREF: sub_140A1EEE4+110BA↑j
                mov     ebx, dword ptr [rsp+24B8h+var_2448]
                mov     [r14+924h], edi

loc_140A2FFC3:                          ; CODE XREF: sub_140A1EEE4+11032↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_23F8]
                mov     r10d, dword ptr [rsp+24B8h+var_2440]
                jmp     short loc_140A2FFE8
; ---------------------------------------------------------------------------

loc_140A2FFDA:                          ; CODE XREF: sub_140A1EEE4+11006↑j
                mov     r14, rdi
                mov     [rsp+24B8h+var_2468], rdi
                mov     [rdi+7E4h], eax

loc_140A2FFE8:                          ; CODE XREF: sub_140A1EEE4+110F4↑j
                add     [r14+80Ch], ebx
                lea     r11, [rsp+24B8h+var_10A8]
                add     r15, r14
                mov     eax, ebx
                mov     [rsp+24B8h+var_1800], r15
                lea     rsi, [rsp+24B8h+var_1378]
                mov     [rsp+24B8h+var_17F8], r15
                xor     edi, edi
                mov     [rsp+24B8h+var_2430], r11
                mov     [rsp+24B8h+var_2438], rax

loc_140A30026:                          ; CODE XREF: sub_140A1EEE4+11307↓j
                mov     r13d, [rsi]
                mov     ecx, 30h ; '0'
                mov     r12, [r11]
                mov     rax, r15
                mov     [rsp+24B8h+var_23F0], r13d
                lea     edx, [rcx-2Ah]
                lea     ebx, [rcx-2Fh]

loc_140A30042:                          ; CODE XREF: sub_140A1EEE4+1116B↓j
                mov     [rax], rdi
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_140A30042
                test    ecx, ecx
                jz      short loc_140A30060

loc_140A30055:                          ; CODE XREF: sub_140A1EEE4+1117A↓j
                mov     [rax], dil
                add     rax, rbx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A30055

loc_140A30060:                          ; CODE XREF: sub_140A1EEE4+1116F↑j
                mov     [r15], r9d
                mov     [r15+8], r12
                cmp     r10d, 7
                jnz     short loc_140A3008C
                test    r13d, r13d
                jz      short loc_140A3008C
                lea     r9, [r15+18h]
                mov     r8d, r13d
                mov     rdx, r12
                mov     rcx, r14
                call    sub_1403EA0CC
                mov     r11, [rsp+24B8h+var_2430]

loc_140A3008C:                          ; CODE XREF: sub_140A1EEE4+11187↑j
                                        ; sub_140A1EEE4+1118C↑j
                mov     [r15+10h], r13d
                lea     rcx, [r12+r13]
                add     [r14+828h], r13d
                mov     rdi, r12
                mov     r8d, [r14+814h]
                mov     rax, r12
                mov     r10, [r14+818h]
                cmp     r12, rcx
                jnb     short loc_140A300C0

loc_140A300B4:                          ; CODE XREF: sub_140A1EEE4+111DA↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A300B4

loc_140A300C0:                          ; CODE XREF: sub_140A1EEE4+111CE↑j
                mov     r9d, r13d
                mov     rbx, r10
                shr     r9d, 7
                test    r9d, r9d
                jz      short loc_140A30146
                mov     r11d, 1
                mov     r13, 7010008004002001h

loc_140A300DF:                          ; CODE XREF: sub_140A1EEE4+1124B↓j
                mov     eax, 8

loc_140A300E4:                          ; CODE XREF: sub_140A1EEE4+11217↓j
                xor     rbx, [rdi]
                mov     ecx, r8d
                rol     rbx, cl
                xor     rbx, [rdi+8]
                add     rdi, 10h
                rol     rbx, cl
                sub     rax, r11
                jnz     short loc_140A300E4
                mov     rcx, rdi
                sub     rcx, r12
                xor     rcx, r10
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_17F0], rdx
                xor     r8d, eax
                and     r8d, 3Fh
                cmovz   r8d, r11d
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A300DF
                mov     r14, [rsp+24B8h+var_2468]
                mov     r13d, [rsp+24B8h+var_23F0]
                mov     r11, [rsp+24B8h+var_2430]

loc_140A30146:                          ; CODE XREF: sub_140A1EEE4+111E9↑j
                mov     edx, r13d
                mov     r12d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A30172
                mov     eax, edx
                shr     rax, 3

loc_140A3015D:                          ; CODE XREF: sub_140A1EEE4+1128C↓j
                xor     rbx, [rdi]
                mov     ecx, r8d
                rol     rbx, cl
                add     rdi, 8
                add     edx, 0FFFFFFF8h
                sub     rax, r12
                jnz     short loc_140A3015D

loc_140A30172:                          ; CODE XREF: sub_140A1EEE4+11271↑j
                test    edx, edx
                jz      short loc_140A3018A

loc_140A30176:                          ; CODE XREF: sub_140A1EEE4+112A4↓j
                movzx   eax, byte ptr [rdi]
                mov     ecx, r8d
                xor     rbx, rax
                add     rdi, r12
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A30176

loc_140A3018A:                          ; CODE XREF: sub_140A1EEE4+11290↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     edi, edi
                jmp     short loc_140A3019B
; ---------------------------------------------------------------------------

loc_140A30195:                          ; CODE XREF: sub_140A1EEE4+112BA↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A3019B:                          ; CODE XREF: sub_140A1EEE4+112AF↑j
                test    rax, rax
                jnz     short loc_140A30195
                mov     r9d, dword ptr [rsp+24B8h+var_23F8]
                btr     ebx, 1Fh
                mov     r10d, dword ptr [rsp+24B8h+var_2440]
                add     r11, 8
                mov     [r15+14h], ebx
                add     [r14+828h], r13d
                lea     r13d, [rax+4]
                mov     r15, [rsp+24B8h+var_1800]
                add     rsi, r13
                add     r15, 30h ; '0'
                mov     [rsp+24B8h+var_2430], r11
                sub     [rsp+24B8h+var_2438], r12
                mov     [rsp+24B8h+var_1800], r15
                jnz     loc_140A30026
                mov     rcx, [rsp+24B8h+var_17F8]
                mov     [rsp+24B8h+var_17E8], rcx
                cmp     r10d, 7
                jnz     short loc_140A30230
                mov     eax, dword ptr [rsp+24B8h+var_2448]

loc_140A3020B:                          ; CODE XREF: sub_140A1EEE4+11342↓j
                or      [rcx+28h], r12d
                mov     rcx, [rsp+24B8h+var_17F8]
                add     rcx, 30h ; '0'
                mov     [rsp+24B8h+var_17F8], rcx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A3020B
                mov     rcx, [rsp+24B8h+var_17E8]

loc_140A30230:                          ; CODE XREF: sub_140A1EEE4+11321↑j
                mov     eax, dword ptr [rsp+24B8h+var_2460]
                cmp     eax, 0FFFFFFFFh
                jz      short loc_140A3024B
                lea     rdx, [rax+rax*2]
                add     rdx, rdx
                cmp     dword ptr [rcx+rdx*8], 20h ; ' '
                jnz     short loc_140A3024B
                or      [rcx+rdx*8+28h], r13d

loc_140A3024B:                          ; CODE XREF: sub_140A1EEE4+11353↑j
                                        ; sub_140A1EEE4+11360↑j
                mov     [rsp+24B8h+var_1B80], r14
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A30260

loc_140A3025E:                          ; CODE XREF: sub_140A1EEE4:loc_140A3025E↓j
                jmp     short loc_140A3025E
; ---------------------------------------------------------------------------

loc_140A30260:                          ; CODE XREF: sub_140A1EEE4+11378↑j
                sti
                cmp     dword ptr [rsp+24B8h+var_2458], eax
                jnz     loc_140A30BC7
                mov     eax, [rsp+24B8h+var_213C]
                mov     r8d, 7
                and     eax, r13d
                mov     dword ptr [rsp+24B8h+var_2458], eax
                jnz     short loc_140A3028C
                mov     r8d, cs:dword_140D586E4
                add     r8d, 7

loc_140A3028C:                          ; CODE XREF: sub_140A1EEE4+1139B↑j
                rdtsc
                shl     rdx, 20h
                mov     rdi, 7010008004002001h
                or      rax, rdx
                mov     ebx, 5
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_17E0], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, ebx
                ja      loc_140A30398
                jz      loc_140A3037E
                test    ecx, ecx
                jz      short loc_140A30364
                sub     ecx, 1
                jz      short loc_140A3034B
                sub     ecx, 1
                jz      short loc_140A30331
                cmp     ecx, 1
                jz      short loc_140A30314
                mov     [rsp+24B8h+var_2054], 67076494h
                mov     edi, [rsp+24B8h+var_2054]
                rol     edi, 4
                jmp     loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A30314:                          ; CODE XREF: sub_140A1EEE4+11414↑j
                mov     [rsp+24B8h+var_2050], 0A8223938h
                mov     edi, [rsp+24B8h+var_2050]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A30331:                          ; CODE XREF: sub_140A1EEE4+1140F↑j
                mov     [rsp+24B8h+var_204C], 85B5910Dh
                mov     edi, [rsp+24B8h+var_204C]
                ror     edi, 2
                jmp     loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A3034B:                          ; CODE XREF: sub_140A1EEE4+1140A↑j
                mov     [rsp+24B8h+var_2048], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2048]
                rol     edi, 1
                jmp     loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A30364:                          ; CODE XREF: sub_140A1EEE4+11405↑j
                mov     [rsp+24B8h+var_2044], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_2044]
                ror     edi, 6
                jmp     loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A3037E:                          ; CODE XREF: sub_140A1EEE4+113FD↑j
                mov     [rsp+24B8h+var_2040], 288C49EDh
                mov     edi, [rsp+24B8h+var_2040]
                ror     edi, 5
                jmp     loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A30398:                          ; CODE XREF: sub_140A1EEE4+113F7↑j
                sub     ecx, 6
                jz      loc_140A30495
                sub     ecx, 1
                jz      loc_140A3047E
                sub     ecx, 1
                jz      loc_140A30467
                cmp     ecx, 1
                jz      loc_140A3044D
                rdtsc
                shl     rdx, 20h
                mov     r9d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_17D8], rdx
                xor     edi, edx
                mov     eax, r9d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r9d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                or      ecx, ebx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ebx, 5
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A3044D:                          ; CODE XREF: sub_140A1EEE4+114D2↑j
                mov     [rsp+24B8h+var_203C], 0B0869E85h
                mov     edi, [rsp+24B8h+var_203C]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A30467:                          ; CODE XREF: sub_140A1EEE4+114C9↑j
                mov     [rsp+24B8h+var_2038], 64664142h
                mov     edi, [rsp+24B8h+var_2038]
                ror     edi, 8
                jmp     short loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A3047E:                          ; CODE XREF: sub_140A1EEE4+114C0↑j
                mov     [rsp+24B8h+var_2034], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_2034]
                rol     edi, 7
                jmp     short loc_140A304AD
; ---------------------------------------------------------------------------

loc_140A30495:                          ; CODE XREF: sub_140A1EEE4+114B7↑j
                mov     [rsp+24B8h+var_2030], 4E574672h
                mov     edi, [rsp+24B8h+var_2030]
                xor     edi, 6
                ror     edi, 18h

loc_140A304AD:                          ; CODE XREF: sub_140A1EEE4+1142B↑j
                                        ; sub_140A1EEE4+11448↑j ...
                mov     edx, r8d
                mov     ecx, 200h
                mov     r15d, r8d
                mov     r8d, edi
                shl     rdx, 3
                call    ExAllocatePoolWithTag
                mov     r12, rax
                mov     [rsp+24B8h+var_2468], rax
                xor     eax, eax
                test    r12, r12
                jz      loc_140A237B3
                rdtsc
                shl     rdx, 20h
                mov     rdi, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_17D0], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, ebx
                ja      loc_140A305DE
                jz      loc_140A305C4
                test    ecx, ecx
                jz      short loc_140A305AA
                sub     ecx, 1
                jz      short loc_140A30591
                sub     ecx, 1
                jz      short loc_140A30577
                cmp     ecx, 1
                jz      short loc_140A3055A
                mov     [rsp+24B8h+var_202C], 67076494h
                mov     edi, [rsp+24B8h+var_202C]
                rol     edi, 4
                jmp     loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A3055A:                          ; CODE XREF: sub_140A1EEE4+1165A↑j
                mov     [rsp+24B8h+var_2028], 0A8223938h
                mov     edi, [rsp+24B8h+var_2028]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A30577:                          ; CODE XREF: sub_140A1EEE4+11655↑j
                mov     [rsp+24B8h+var_2024], 85B5910Dh
                mov     edi, [rsp+24B8h+var_2024]
                ror     edi, 2
                jmp     loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A30591:                          ; CODE XREF: sub_140A1EEE4+11650↑j
                mov     [rsp+24B8h+var_2020], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_2020]
                rol     edi, 1
                jmp     loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A305AA:                          ; CODE XREF: sub_140A1EEE4+1164B↑j
                mov     [rsp+24B8h+var_201C], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_201C]
                ror     edi, 6
                jmp     loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A305C4:                          ; CODE XREF: sub_140A1EEE4+11643↑j
                mov     [rsp+24B8h+var_2018], 288C49EDh
                mov     edi, [rsp+24B8h+var_2018]
                ror     edi, 5
                jmp     loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A305DE:                          ; CODE XREF: sub_140A1EEE4+1163D↑j
                sub     ecx, 6
                jz      loc_140A306D6
                sub     ecx, 1
                jz      loc_140A306BF
                sub     ecx, 1
                jz      loc_140A306A8
                cmp     ecx, 1
                jz      loc_140A3068E
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_17C8], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A3068E:                          ; CODE XREF: sub_140A1EEE4+11718↑j
                mov     [rsp+24B8h+var_2014], 0B0869E85h
                mov     edi, [rsp+24B8h+var_2014]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A306A8:                          ; CODE XREF: sub_140A1EEE4+1170F↑j
                mov     [rsp+24B8h+var_2010], 64664142h
                mov     edi, [rsp+24B8h+var_2010]
                ror     edi, 8
                jmp     short loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A306BF:                          ; CODE XREF: sub_140A1EEE4+11706↑j
                mov     [rsp+24B8h+var_200C], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_200C]
                rol     edi, 7
                jmp     short loc_140A306EE
; ---------------------------------------------------------------------------

loc_140A306D6:                          ; CODE XREF: sub_140A1EEE4+116FD↑j
                mov     [rsp+24B8h+var_1F70], 4E574672h
                mov     edi, [rsp+24B8h+var_1F70]
                xor     edi, 6
                ror     edi, 18h

loc_140A306EE:                          ; CODE XREF: sub_140A1EEE4+11671↑j
                                        ; sub_140A1EEE4+1168E↑j ...
                mov     rdx, r15
                mov     r8d, edi
                shl     rdx, 2
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     r15, rax
                mov     [rsp+24B8h+var_2430], rax
                xor     eax, eax
                test    r15, r15
                jnz     short loc_140A3071C
                mov     rcx, r12
                jmp     loc_140A2F3DE
; ---------------------------------------------------------------------------

loc_140A3071C:                          ; CODE XREF: sub_140A1EEE4+1182E↑j
                lea     rax, dword_140C1D8E0
                mov     dword ptr [rsp+24B8h+var_2460], r13d
                mov     [r12], rax
                mov     eax, cs:dword_140D585D0
                mov     [r15], eax
                lea     rax, qword_140989E80
                mov     [r12+8], rax
                mov     eax, cs:dword_140D58600
                mov     [r15+4], eax
                lea     rax, byte_140985C50
                mov     [r12+10h], rax
                mov     eax, cs:dword_140D58608
                mov     [r15+8], eax
                lea     rax, qword_140984EA0
                mov     [r12+18h], rax
                mov     eax, cs:dword_140D58610
                mov     [r15+0Ch], eax
                xor     eax, eax
                cmp     dword ptr [rsp+24B8h+var_2458], eax
                jnz     loc_140A3080F
                mov     rax, cs:off_1400097F0
                mov     r8d, 1
                mov     [r12+20h], rax
                mov     eax, cs:dword_14003A874
                mov     [r15+10h], eax
                lea     rax, byte_14014D000
                mov     [r12+28h], rax
                lea     rax, dword_140CF4CE8
                mov     [r15+14h], r8d
                mov     [r12+30h], rax
                xor     eax, eax
                mov     [r15+18h], r13d
                mov     edi, eax
                cmp     cs:dword_140D586E4, eax
                lea     r13d, [r8+6]
                mov     dword ptr [rsp+24B8h+var_2460], r13d
                jbe     short loc_140A3080F

loc_140A307D4:                          ; CODE XREF: sub_140A1EEE4+11922↓j
                mov     rax, cs:qword_140D58770
                mov     edx, r13d
                add     r13d, r8d
                mov     ebx, edi
                add     edi, r8d
                add     rbx, rbx
                mov     rcx, [rax+rbx*8]
                mov     [r12+rdx*8], rcx
                mov     rax, cs:qword_140D58770
                mov     ecx, [rax+rbx*8+8]
                mov     [r15+rdx*4], ecx
                cmp     edi, cs:dword_140D586E4
                jb      short loc_140A307D4
                mov     dword ptr [rsp+24B8h+var_2460], r13d
                xor     eax, eax

loc_140A3080F:                          ; CODE XREF: sub_140A1EEE4+11899↑j
                                        ; sub_140A1EEE4+118EE↑j
                mov     r9d, [r14+838h]
                mov     ebx, 20h ; ' '
                mov     r12d, [r14+7E4h]
                cmp     r9d, 7
                mov     r8d, [r14+924h]
                cmovnz  ebx, eax
                mov     dword ptr [rsp+24B8h+var_2458], r9d
                lea     eax, ds:0[r13*2]
                mov     dword ptr [rsp+24B8h+var_2448], ebx
                add     eax, r13d
                shl     eax, 4
                add     eax, r12d
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A30946
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rdi, rax
                mov     [rsp+24B8h+var_2438], rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3093E
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A30930
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rbx, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A308C4
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A308B4:                          ; CODE XREF: sub_140A1EEE4+119DE↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, 1
                jnz     short loc_140A308B4

loc_140A308C4:                          ; CODE XREF: sub_140A1EEE4+119C5↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A308D5

loc_140A308CA:                          ; CODE XREF: sub_140A1EEE4+119EF↓j
                mov     [r14], cl
                inc     r14
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A308CA

loc_140A308D5:                          ; CODE XREF: sub_140A1EEE4+119E4↑j
                mov     r14d, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A30916
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A3090D
                mov     rax, [rdi+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A30925
; ---------------------------------------------------------------------------

loc_140A3090D:                          ; CODE XREF: sub_140A1EEE4+11A12↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A3091D
; ---------------------------------------------------------------------------

loc_140A30916:                          ; CODE XREF: sub_140A1EEE4+11A01↑j
                mov     rax, [rdi+368h]

loc_140A3091D:                          ; CODE XREF: sub_140A1EEE4+11A30↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A30925:                          ; CODE XREF: sub_140A1EEE4+11A27↑j
                mov     ebx, dword ptr [rsp+24B8h+var_2448]
                mov     [rdi+924h], r14d

loc_140A30930:                          ; CODE XREF: sub_140A1EEE4+1199D↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2458]
                jmp     short loc_140A30958
; ---------------------------------------------------------------------------

loc_140A3093E:                          ; CODE XREF: sub_140A1EEE4+1198D↑j
                mov     r14, rax
                jmp     loc_140A30B9A
; ---------------------------------------------------------------------------

loc_140A30946:                          ; CODE XREF: sub_140A1EEE4+1196D↑j
                mov     rdi, r14
                mov     [rsp+24B8h+var_2438], r14
                mov     [r14+7E4h], eax

loc_140A30958:                          ; CODE XREF: sub_140A1EEE4+11A58↑j
                add     [rdi+80Ch], r13d
                lea     r14, [rdi+r12]
                mov     [rsp+24B8h+var_17C0], r14
                mov     [rsp+24B8h+var_17B8], r14
                test    r13d, r13d
                jz      loc_140A30B75
                mov     rsi, [rsp+24B8h+var_2468]
                mov     r11d, 1
                mov     eax, r13d
                xor     r8d, r8d
                mov     [rsp+24B8h+var_2428], rax
                mov     r13, r15
                mov     [rsp+24B8h+var_2420], r15

loc_140A309A0:                          ; CODE XREF: sub_140A1EEE4+11C76↓j
                mov     r12d, [r13+0]
                mov     ecx, 30h ; '0'
                mov     r15, [rsi]
                mov     rax, r14
                mov     dword ptr [rsp+24B8h+var_2440], r12d
                lea     edx, [rcx-2Ah]

loc_140A309B7:                          ; CODE XREF: sub_140A1EEE4+11AE0↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r11
                jnz     short loc_140A309B7
                test    ecx, ecx
                jz      short loc_140A309D5

loc_140A309CA:                          ; CODE XREF: sub_140A1EEE4+11AEF↓j
                mov     [rax], r8b
                add     rax, r11
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A309CA

loc_140A309D5:                          ; CODE XREF: sub_140A1EEE4+11AE4↑j
                mov     [r14], ebx
                mov     [r14+8], r15
                cmp     r9d, 7
                jnz     short loc_140A309F9
                test    r12d, r12d
                jz      short loc_140A309F9
                lea     r9, [r14+18h]
                mov     r8d, r12d
                mov     rdx, r15
                mov     rcx, rdi
                call    sub_1403EA0CC

loc_140A309F9:                          ; CODE XREF: sub_140A1EEE4+11AFC↑j
                                        ; sub_140A1EEE4+11B01↑j
                mov     [r14+10h], r12d
                lea     rcx, [r15+r12]
                add     [rdi+828h], r12d
                mov     r8, r15
                mov     r9d, [rdi+814h]
                mov     rax, r15
                mov     r11, [rdi+818h]
                cmp     r15, rcx
                jnb     short loc_140A30A2D

loc_140A30A21:                          ; CODE XREF: sub_140A1EEE4+11B47↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A30A21

loc_140A30A2D:                          ; CODE XREF: sub_140A1EEE4+11B3B↑j
                mov     r10d, r12d
                mov     rbx, r11
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A30AB9
                mov     r12, 7010008004002001h

loc_140A30A46:                          ; CODE XREF: sub_140A1EEE4+11BBE↓j
                mov     edx, 8

loc_140A30A4B:                          ; CODE XREF: sub_140A1EEE4+11B85↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A30A4B
                mov     rcx, r8
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_17B0], rdx
                xor     r9d, eax
                mov     eax, 1
                and     r9d, 3Fh
                cmovz   r9d, eax
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A30A46
                mov     rdi, [rsp+24B8h+var_2438]
                mov     r12d, dword ptr [rsp+24B8h+var_2440]
                mov     r13, [rsp+24B8h+var_2420]

loc_140A30AB9:                          ; CODE XREF: sub_140A1EEE4+11B56↑j
                mov     edx, r12d
                mov     r11d, 1
                and     edx, 7Fh
                cmp     edx, 8
                jb      short loc_140A30AE6
                mov     r10d, edx
                shr     r10, 3

loc_140A30AD1:                          ; CODE XREF: sub_140A1EEE4+11C00↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edx, 0FFFFFFF8h
                sub     r10, r11
                jnz     short loc_140A30AD1

loc_140A30AE6:                          ; CODE XREF: sub_140A1EEE4+11BE4↑j
                test    edx, edx
                jz      short loc_140A30AFF

loc_140A30AEA:                          ; CODE XREF: sub_140A1EEE4+11C19↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r11
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A30AEA

loc_140A30AFF:                          ; CODE XREF: sub_140A1EEE4+11C04↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r8d, r8d
                jmp     short loc_140A30B11
; ---------------------------------------------------------------------------

loc_140A30B0B:                          ; CODE XREF: sub_140A1EEE4+11C30↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A30B11:                          ; CODE XREF: sub_140A1EEE4+11C25↑j
                test    rax, rax
                jnz     short loc_140A30B0B
                mov     r9d, dword ptr [rsp+24B8h+var_2458]
                btr     ebx, 1Fh
                mov     [r14+14h], ebx
                add     r13, 4
                add     [rdi+828h], r12d
                add     rsi, 8
                mov     r14, [rsp+24B8h+var_17C0]
                mov     ebx, dword ptr [rsp+24B8h+var_2448]
                add     r14, 30h ; '0'
                sub     [rsp+24B8h+var_2428], r11
                mov     [rsp+24B8h+var_17C0], r14
                mov     [rsp+24B8h+var_2420], r13
                jnz     loc_140A309A0
                mov     r14, [rsp+24B8h+var_17B8]
                mov     r13d, dword ptr [rsp+24B8h+var_2460]
                mov     r15, [rsp+24B8h+var_2430]

loc_140A30B75:                          ; CODE XREF: sub_140A1EEE4+11A92↑j
                cmp     dword ptr [rsp+24B8h+var_2458], 7
                jnz     short loc_140A30B97
                test    r13d, r13d
                jz      short loc_140A30B97
                mov     eax, r13d
                lea     rcx, [rax+rax*2]
                shl     rcx, 4
                add     r14, rcx
                mov     [rsp+24B8h+var_17B8], r14

loc_140A30B97:                          ; CODE XREF: sub_140A1EEE4+11C96↑j
                                        ; sub_140A1EEE4+11C9B↑j
                mov     r14, rdi

loc_140A30B9A:                          ; CODE XREF: sub_140A1EEE4+11A5D↑j
                mov     rcx, r15
                call    ExFreePoolWithTag
                mov     rcx, [rsp+24B8h+var_2468]
                call    ExFreePoolWithTag
                xor     eax, eax
                test    r14, r14
                jz      loc_140A237B3
                mov     [rsp+24B8h+var_1B80], r14
                lea     r12d, [rax+1]
                lea     r13d, [rax+4]

loc_140A30BC7:                          ; CODE XREF: sub_140A1EEE4+11381↑j
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A30BD2

loc_140A30BD0:                          ; CODE XREF: sub_140A1EEE4:loc_140A30BD0↓j
                jmp     short loc_140A30BD0
; ---------------------------------------------------------------------------

loc_140A30BD2:                          ; CODE XREF: sub_140A1EEE4+11CEA↑j
                sti
                cmp     dword ptr [rsp+24B8h+var_2450], eax
                jnz     loc_140A30EEA
                call    sub_140A7629C
                test    eax, eax
                jnz     loc_140A30EEA
                cli
                xor     eax, eax
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A30BF7

loc_140A30BF5:                          ; CODE XREF: sub_140A1EEE4:loc_140A30BF5↓j
                jmp     short loc_140A30BF5
; ---------------------------------------------------------------------------

loc_140A30BF7:                          ; CODE XREF: sub_140A1EEE4+11D0F↑j
                sti
                mov     r15d, [r14+7E4h]
                mov     r8d, [r14+924h]
                lea     eax, [r15+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A30CEC
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [r14+990h]
                test    r13b, cl
                jnz     loc_140A30CE3
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A30C7B
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A30C6C:                          ; CODE XREF: sub_140A1EEE4+11D95↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, r12
                jnz     short loc_140A30C6C

loc_140A30C7B:                          ; CODE XREF: sub_140A1EEE4+11D7D↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A30C8C

loc_140A30C81:                          ; CODE XREF: sub_140A1EEE4+11DA6↓j
                mov     [r14], cl
                add     r14, r12
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A30C81

loc_140A30C8C:                          ; CODE XREF: sub_140A1EEE4+11D9B↑j
                mov     r14d, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A30CCD
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A30CC4
                mov     rax, [rbx+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A30CDC
; ---------------------------------------------------------------------------

loc_140A30CC4:                          ; CODE XREF: sub_140A1EEE4+11DC9↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A30CD4
; ---------------------------------------------------------------------------

loc_140A30CCD:                          ; CODE XREF: sub_140A1EEE4+11DB8↑j
                mov     rax, [rbx+368h]

loc_140A30CD4:                          ; CODE XREF: sub_140A1EEE4+11DE7↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A30CDC:                          ; CODE XREF: sub_140A1EEE4+11DDE↑j
                mov     [rbx+924h], r14d

loc_140A30CE3:                          ; CODE XREF: sub_140A1EEE4+11D55↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A30CF6
; ---------------------------------------------------------------------------

loc_140A30CEC:                          ; CODE XREF: sub_140A1EEE4+11D2D↑j
                mov     rbx, r14
                mov     [r14+7E4h], eax

loc_140A30CF6:                          ; CODE XREF: sub_140A1EEE4+11E06↑j
                add     [rbx+80Ch], r12d
                lea     rdx, [rbx+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_17A8], rdx
                mov     rax, rdx
                mov     r13d, 0FFFFFFF8h
                xor     r8d, r8d
                lea     edi, [rcx-2Ah]

loc_140A30D1D:                          ; CODE XREF: sub_140A1EEE4+11E46↓j
                mov     [rax], r8
                add     ecx, r13d
                add     rax, 8
                sub     rdi, r12
                jnz     short loc_140A30D1D
                test    ecx, ecx
                jz      short loc_140A30D3B

loc_140A30D30:                          ; CODE XREF: sub_140A1EEE4+11E55↓j
                mov     [rax], r8b
                add     rax, r12
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A30D30

loc_140A30D3B:                          ; CODE XREF: sub_140A1EEE4+11E4A↑j
                xor     eax, eax
                mov     dword ptr [rdx], 1Fh
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A30D58
; ---------------------------------------------------------------------------

loc_140A30D56:                          ; CODE XREF: sub_140A1EEE4+11E7B↓j
                xor     ecx, eax

loc_140A30D58:                          ; CODE XREF: sub_140A1EEE4+11E70↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A30D56
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rdx+14h], ecx
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A30D7B

loc_140A30D79:                          ; CODE XREF: sub_140A1EEE4:loc_140A30D79↓j
                jmp     short loc_140A30D79
; ---------------------------------------------------------------------------

loc_140A30D7B:                          ; CODE XREF: sub_140A1EEE4+11E93↑j
                sti
                mov     r15d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r15+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A30E6E
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A30E64
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     rdi, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A30DFB
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A30DEC:                          ; CODE XREF: sub_140A1EEE4+11F15↓j
                mov     [rbx], r10
                add     eax, r13d
                add     rbx, 8
                sub     rcx, r12
                jnz     short loc_140A30DEC

loc_140A30DFB:                          ; CODE XREF: sub_140A1EEE4+11EFD↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A30E0B

loc_140A30E01:                          ; CODE XREF: sub_140A1EEE4+11F25↓j
                mov     [rbx], cl
                add     rbx, r12
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A30E01

loc_140A30E0B:                          ; CODE XREF: sub_140A1EEE4+11F1B↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A30E4E
                test    dword ptr [r14+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A30E45
                mov     rax, [r14+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A30E5D
; ---------------------------------------------------------------------------

loc_140A30E45:                          ; CODE XREF: sub_140A1EEE4+11F4A↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A30E55
; ---------------------------------------------------------------------------

loc_140A30E4E:                          ; CODE XREF: sub_140A1EEE4+11F38↑j
                mov     rax, [r14+368h]

loc_140A30E55:                          ; CODE XREF: sub_140A1EEE4+11F68↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A30E5D:                          ; CODE XREF: sub_140A1EEE4+11F5F↑j
                mov     [r14+924h], ebx

loc_140A30E64:                          ; CODE XREF: sub_140A1EEE4+11ED7↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                jmp     short loc_140A30E77
; ---------------------------------------------------------------------------

loc_140A30E6E:                          ; CODE XREF: sub_140A1EEE4+11EB0↑j
                mov     r14, rbx
                mov     [rbx+7E4h], eax

loc_140A30E77:                          ; CODE XREF: sub_140A1EEE4+11F88↑j
                add     [r14+80Ch], r12d
                lea     rdx, [r14+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_17A0], rdx
                mov     rax, rdx
                xor     edi, edi
                lea     ebx, [rcx-2Ah]

loc_140A30E97:                          ; CODE XREF: sub_140A1EEE4+11FC0↓j
                mov     [rax], rdi
                add     ecx, r13d
                add     rax, 8
                sub     rbx, r12
                jnz     short loc_140A30E97
                test    ecx, ecx
                jz      short loc_140A30EB5

loc_140A30EAA:                          ; CODE XREF: sub_140A1EEE4+11FCF↓j
                mov     [rax], dil
                add     rax, r12
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A30EAA

loc_140A30EB5:                          ; CODE XREF: sub_140A1EEE4+11FC4↑j
                xor     eax, eax
                mov     dword ptr [rdx], 25h ; '%'
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [r14+818h]
                mov     rax, rcx
                jmp     short loc_140A30ED2
; ---------------------------------------------------------------------------

loc_140A30ED0:                          ; CODE XREF: sub_140A1EEE4+11FF5↓j
                xor     ecx, eax

loc_140A30ED2:                          ; CODE XREF: sub_140A1EEE4+11FEA↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A30ED0
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], r14
                mov     [rdx+14h], ecx

loc_140A30EEA:                          ; CODE XREF: sub_140A1EEE4+11CF3↑j
                                        ; sub_140A1EEE4+11D00↑j
                cmp     cs:byte_140E01840, 0
                lea     rax, sub_140A172C0
                mov     r13d, [r14+838h]
                lea     r10, sub_1404009E0
                mov     r15d, [r14+7E4h]
                cmovnz  r10, rax
                mov     r8d, [r14+924h]
                mov     r12d, 20h ; ' '
                cmp     r13d, 7
                mov     [rsp+24B8h+var_2468], r10
                lea     eax, [r12-20h]
                cmovnz  r12d, eax
                lea     eax, [r15+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A3102A
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3101C
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A3100E
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rbx, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A30FA6
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A30F96:                          ; CODE XREF: sub_140A1EEE4+120C0↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, 1
                jnz     short loc_140A30F96

loc_140A30FA6:                          ; CODE XREF: sub_140A1EEE4+120A7↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A30FB7

loc_140A30FAC:                          ; CODE XREF: sub_140A1EEE4+120D1↓j
                mov     [r14], cl
                inc     r14
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A30FAC

loc_140A30FB7:                          ; CODE XREF: sub_140A1EEE4+120C6↑j
                mov     r14d, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A30FF8
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A30FEF
                mov     rax, [rdi+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A31007
; ---------------------------------------------------------------------------

loc_140A30FEF:                          ; CODE XREF: sub_140A1EEE4+120F4↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A30FFF
; ---------------------------------------------------------------------------

loc_140A30FF8:                          ; CODE XREF: sub_140A1EEE4+120E3↑j
                mov     rax, [rdi+368h]

loc_140A30FFF:                          ; CODE XREF: sub_140A1EEE4+12112↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A31007:                          ; CODE XREF: sub_140A1EEE4+12109↑j
                mov     [rdi+924h], r14d

loc_140A3100E:                          ; CODE XREF: sub_140A1EEE4+1207F↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r10, [rsp+24B8h+var_2468]
                jmp     short loc_140A31034
; ---------------------------------------------------------------------------

loc_140A3101C:                          ; CODE XREF: sub_140A1EEE4+1206F↑j
                                        ; sub_140A1EEE4+12A06↓j ...
                mov     rdi, rax
                mov     r13d, 1
                jmp     loc_140A33873
; ---------------------------------------------------------------------------

loc_140A3102A:                          ; CODE XREF: sub_140A1EEE4+12057↑j
                mov     rdi, r14
                mov     [r14+7E4h], eax

loc_140A31034:                          ; CODE XREF: sub_140A1EEE4+12136↑j
                mov     ebx, 1
                lea     r14, [rdi+r15]
                add     [rdi+80Ch], ebx
                mov     rax, r14
                mov     [rsp+24B8h+var_2430], r14
                xor     r8d, r8d
                mov     [rsp+24B8h+var_1798], r14
                lea     ecx, [rbx+2Fh]
                lea     edx, [rbx+5]

loc_140A3105F:                          ; CODE XREF: sub_140A1EEE4+12188↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_140A3105F
                test    ecx, ecx
                jz      short loc_140A3107D

loc_140A31072:                          ; CODE XREF: sub_140A1EEE4+12197↓j
                mov     [rax], r8b
                add     rax, rbx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A31072

loc_140A3107D:                          ; CODE XREF: sub_140A1EEE4+1218C↑j
                mov     [r14], r12d
                mov     r12d, 800h
                mov     [r14+8], r10
                cmp     r13d, 7
                jnz     short loc_140A310A7
                lea     r9, [r14+18h]
                mov     r8d, r12d
                mov     rdx, r10
                mov     rcx, rdi
                call    sub_1403EA0CC
                mov     r10, [rsp+24B8h+var_2468]

loc_140A310A7:                          ; CODE XREF: sub_140A1EEE4+121AA↑j
                mov     [r14+10h], r12d
                lea     rcx, [r10+800h]
                add     [rdi+828h], r12d
                mov     r9, r10
                mov     r8d, [rdi+814h]
                mov     rax, r10
                mov     r11, [rdi+818h]
                cmp     r10, rcx
                jnb     short loc_140A310DE

loc_140A310D2:                          ; CODE XREF: sub_140A1EEE4+121F8↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A310D2

loc_140A310DE:                          ; CODE XREF: sub_140A1EEE4+121EC↑j
                mov     r15, [rsp+24B8h+var_2468]
                mov     r10d, 10h
                mov     rbx, r11
                mov     r14, 7010008004002001h
                lea     r13d, [r10-0Fh]

loc_140A310FA:                          ; CODE XREF: sub_140A1EEE4+12268↓j
                mov     eax, 8

loc_140A310FF:                          ; CODE XREF: sub_140A1EEE4+12232↓j
                xor     rbx, [r9]
                mov     ecx, r8d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, r13
                jnz     short loc_140A310FF
                mov     rcx, r9
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1790], rdx
                xor     r8d, eax
                and     r8d, 3Fh
                cmovz   r8d, r13d
                or      ecx, 0FFFFFFFFh
                add     r10d, ecx
                jnz     short loc_140A310FA
                mov     r14, [rsp+24B8h+var_2430]
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r15d, r15d
                jmp     short loc_140A31168
; ---------------------------------------------------------------------------

loc_140A31162:                          ; CODE XREF: sub_140A1EEE4+12287↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A31168:                          ; CODE XREF: sub_140A1EEE4+1227C↑j
                test    rax, rax
                jnz     short loc_140A31162
                btr     ebx, 1Fh
                mov     [r14+14h], ebx
                add     [rdi+828h], r12d
                mov     rax, cs:qword_140D58090
                mov     [rdi+0A10h], rax
                mov     [rdi+8F0h], ecx
                test    dword ptr [rdi+990h], 10000h
                jnz     loc_140A33871
                xor     ecx, ecx
                call    sub_14023DAD0
                mov     r8, rax
                mov     ecx, 0Bh
                lea     rax, [rsp+24B8h+var_D70]

loc_140A311B7:                          ; CODE XREF: sub_140A1EEE4+122E2↓j
                or      qword ptr [rax-8], 0FFFFFFFFFFFFFFFFh
                mov     [rax], r15
                lea     rax, [rax+18h]
                sub     rcx, r13
                jnz     short loc_140A311B7
                mov     eax, 80000001h
                mov     [rsp+24B8h+var_D68], 0C0000082h
                cpuid
                mov     [rsp+24B8h+var_134C], edx
                shr     edx, 1Bh
                and     edx, r13d
                mov     [rsp+24B8h+var_1358], eax
                mov     eax, [rsp+24B8h+var_C90]
                mov     [rsp+24B8h+var_1350], ecx
                mov     ecx, 0C0000103h
                cmovnz  eax, ecx
                mov     [rsp+24B8h+var_D50], 0C0000081h
                mov     rcx, [rdi+668h]
                add     edx, 9
                mov     [rsp+24B8h+var_C90], eax
                mov     al, [rdi+670h]
                mov     [rsp+24B8h+var_D38], 0C0000083h
                mov     [rsp+24B8h+var_D20], 1Bh
                mov     [rsp+24B8h+var_D08], 174h
                mov     [rsp+24B8h+var_CF0], 175h
                mov     [rsp+24B8h+var_CD8], 176h
                mov     [rsp+24B8h+var_CC0], 0C0000084h
                mov     [rsp+24B8h+var_CA8], 0C0000080h
                mov     [rsp+24B8h+var_CB8], 0FFFFFFFFFFFFEFFFh
                mov     [rsp+24B8h+var_1354], ebx
                mov     dword ptr [rsp+24B8h+var_2450], edx
                cmp     [r8+rcx], al
                jnz     short loc_140A312B7
                lea     rcx, [rdx+rdx*2]
                mov     rax, 400440000h
                inc     edx
                mov     [rsp+rcx*8+24B8h+var_D68], 1A0h
                mov     [rsp+rcx*8+24B8h+var_D78], rax
                mov     dword ptr [rsp+24B8h+var_2450], edx

loc_140A312B7:                          ; CODE XREF: sub_140A1EEE4+123AA↑j
                mov     eax, cs:dword_140CFC404
                mov     ecx, r15d
                mov     dword ptr [rsp+24B8h+var_2458], ecx
                test    eax, eax
                jz      loc_140A33871

loc_140A312CC:                          ; CODE XREF: sub_140A1EEE4+14987↓j
                mov     rax, [rdi+1A0h]
                mov     edx, ecx
                mov     r12, [rdi+198h]
                lea     rcx, [rsp+24B8h+var_1348]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rdi+1D0h]
                lea     rdx, [rsp+24B8h+var_1338]
                lea     rcx, [rsp+24B8h+var_1348]
                call    j__guard_dispatch_icall_nop
                lea     rdx, [rsp+24B8h+var_1448]
                lea     rcx, [rsp+24B8h+var_1438]
                call    sub_140A12F60
                mov     rbx, [rsp+24B8h+var_1436]
                lea     rdx, dword_14000F28C
                mov     r8d, 7

loc_140A3132F:                          ; CODE XREF: sub_140A1EEE4+12466↓j
                movzx   ecx, byte ptr [rdx]
                mov     eax, [rcx+rbx+4]
                bt      eax, 8
                jb      short loc_140A31344
                bts     eax, 8
                mov     [rcx+rbx+4], eax

loc_140A31344:                          ; CODE XREF: sub_140A1EEE4+12456↑j
                add     rdx, r13
                sub     r8, r13
                jnz     short loc_140A3132F
                mov     eax, [rbx+44h]
                mov     ecx, 200h
                test    ecx, eax
                jnz     short loc_140A3135D
                or      eax, ecx
                mov     [rbx+44h], eax

loc_140A3135D:                          ; CODE XREF: sub_140A1EEE4+12472↑j
                mov     r15d, [rdi+7E4h]
                mov     r14, [rsp+24B8h+var_1436]
                mov     r8d, [rdi+924h]
                lea     eax, [r15+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A3145A
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A31452
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A31449
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A313E4
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A313D5:                          ; CODE XREF: sub_140A1EEE4+124FE↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A313D5

loc_140A313E4:                          ; CODE XREF: sub_140A1EEE4+124E6↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A313F4

loc_140A313EA:                          ; CODE XREF: sub_140A1EEE4+1250E↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A313EA

loc_140A313F4:                          ; CODE XREF: sub_140A1EEE4+12504↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A31434
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A3142B
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A31443
; ---------------------------------------------------------------------------

loc_140A3142B:                          ; CODE XREF: sub_140A1EEE4+12530↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A3143B
; ---------------------------------------------------------------------------

loc_140A31434:                          ; CODE XREF: sub_140A1EEE4+1251F↑j
                mov     rax, [rbx+368h]

loc_140A3143B:                          ; CODE XREF: sub_140A1EEE4+1254E↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A31443:                          ; CODE XREF: sub_140A1EEE4+12545↑j
                mov     [rbx+924h], edi

loc_140A31449:                          ; CODE XREF: sub_140A1EEE4+124C0↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A31463
; ---------------------------------------------------------------------------

loc_140A31452:                          ; CODE XREF: sub_140A1EEE4+124B1↑j
                mov     rbx, rax
                jmp     loc_140A3154E
; ---------------------------------------------------------------------------

loc_140A3145A:                          ; CODE XREF: sub_140A1EEE4+12499↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A31463:                          ; CODE XREF: sub_140A1EEE4+1256C↑j
                add     [rbx+80Ch], r13d
                lea     r8, [rbx+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1788], r8
                mov     rax, r8
                xor     edi, edi
                mov     r10d, 0FFFFFFF8h
                lea     edx, [rcx-2Ah]

loc_140A31489:                          ; CODE XREF: sub_140A1EEE4+125B2↓j
                mov     [rax], rdi
                add     ecx, r10d
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A31489
                test    ecx, ecx
                jz      short loc_140A314A7

loc_140A3149C:                          ; CODE XREF: sub_140A1EEE4+125C1↓j
                mov     [rax], dil
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A3149C

loc_140A314A7:                          ; CODE XREF: sub_140A1EEE4+125B6↑j
                mov     dword ptr [r8], 3
                lea     rcx, [r14+50h]
                mov     [r8+8], r14
                mov     r11d, 50h ; 'P'
                mov     [r8+10h], r11d
                mov     rax, r14
                add     [rbx+828h], r11d
                mov     r9d, [rbx+814h]
                mov     rdx, [rbx+818h]
                cmp     r14, rcx
                jnb     short loc_140A314E9

loc_140A314DD:                          ; CODE XREF: sub_140A1EEE4+12603↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A314DD

loc_140A314E9:                          ; CODE XREF: sub_140A1EEE4+125F7↑j
                mov     edi, r11d
                mov     eax, 0Ah

loc_140A314F1:                          ; CODE XREF: sub_140A1EEE4+12620↓j
                xor     rdx, [r14]
                mov     ecx, r9d
                rol     rdx, cl
                add     r14, 8
                add     edi, r10d
                sub     rax, r13
                jnz     short loc_140A314F1
                test    edi, edi
                jz      short loc_140A3151F

loc_140A3150A:                          ; CODE XREF: sub_140A1EEE4+12639↓j
                movzx   eax, byte ptr [r14]
                mov     ecx, r9d
                xor     rdx, rax
                add     r14, r13
                rol     rdx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A3150A

loc_140A3151F:                          ; CODE XREF: sub_140A1EEE4+12624↑j
                mov     rax, rdx
                jmp     short loc_140A31526
; ---------------------------------------------------------------------------

loc_140A31524:                          ; CODE XREF: sub_140A1EEE4+12649↓j
                xor     edx, eax

loc_140A31526:                          ; CODE XREF: sub_140A1EEE4+1263E↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A31524
                btr     edx, 1Fh
                mov     [r8+14h], edx
                mov     rax, [rsp+24B8h+var_1788]
                mov     [rsp+24B8h+var_1780], rax
                add     [rbx+828h], r11d

loc_140A3154E:                          ; CODE XREF: sub_140A1EEE4+12571↑j
                lea     rcx, [rsp+24B8h+var_1338]
                mov     rax, r12
                call    j__guard_dispatch_icall_nop
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A33886
                mov     rax, [rsp+24B8h+var_1780]
                mov     edx, dword ptr [rsp+24B8h+var_2458]
                mov     [rax+28h], edx
                mov     rcx, [rsp+24B8h+var_1780]
                movzx   eax, [rsp+24B8h+var_1438]
                mov     [rcx+2Ch], ax
                xor     eax, eax
                mov     r12, [rbx+198h]
                lea     rcx, [rsp+24B8h+var_1328]
                mov     r14d, eax
                mov     [rsp+24B8h+var_2468], r12
                mov     rax, [rbx+1A0h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rbx+1D0h]
                lea     rdx, [rsp+24B8h+var_1318]
                lea     rcx, [rsp+24B8h+var_1328]
                call    j__guard_dispatch_icall_nop
                lea     rdx, [rsp+24B8h+var_1428]
                lea     rcx, [rsp+24B8h+var_1418]
                call    sub_140A12F60
                mov     r13d, [rbx+7E4h]
                mov     r15, [rsp+24B8h+var_1426]
                mov     r8d, [rbx+924h]
                lea     eax, [r13+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A316E6
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A316D8
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A316CF
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A3166A
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A3165A:                          ; CODE XREF: sub_140A1EEE4+12784↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A3165A

loc_140A3166A:                          ; CODE XREF: sub_140A1EEE4+1276B↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A3167A

loc_140A31670:                          ; CODE XREF: sub_140A1EEE4+12794↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A31670

loc_140A3167A:                          ; CODE XREF: sub_140A1EEE4+1278A↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A316BA
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A316B1
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A316C9
; ---------------------------------------------------------------------------

loc_140A316B1:                          ; CODE XREF: sub_140A1EEE4+127B6↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A316C1
; ---------------------------------------------------------------------------

loc_140A316BA:                          ; CODE XREF: sub_140A1EEE4+127A5↑j
                mov     rax, [rdi+368h]

loc_140A316C1:                          ; CODE XREF: sub_140A1EEE4+127D4↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A316C9:                          ; CODE XREF: sub_140A1EEE4+127CB↑j
                mov     [rdi+924h], ebx

loc_140A316CF:                          ; CODE XREF: sub_140A1EEE4+12745↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A316EF
; ---------------------------------------------------------------------------

loc_140A316D8:                          ; CODE XREF: sub_140A1EEE4+12736↑j
                mov     rdi, rax
                mov     r13d, 1
                jmp     loc_140A318D5
; ---------------------------------------------------------------------------

loc_140A316E6:                          ; CODE XREF: sub_140A1EEE4+1271E↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A316EF:                          ; CODE XREF: sub_140A1EEE4+127F2↑j
                inc     dword ptr [rdi+80Ch]
                lea     r14, [rdi+r13]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1778], r14
                mov     rax, r14
                xor     ebx, ebx
                lea     r10d, [rcx-2Ah]
                mov     edx, r10d
                lea     r13d, [rcx-2Fh]

loc_140A31716:                          ; CODE XREF: sub_140A1EEE4+1283F↓j
                mov     [rax], rbx
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A31716
                test    ecx, ecx
                jz      short loc_140A31733

loc_140A31729:                          ; CODE XREF: sub_140A1EEE4+1284D↓j
                mov     [rax], bl
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A31729

loc_140A31733:                          ; CODE XREF: sub_140A1EEE4+12843↑j
                mov     dword ptr [r14], 2
                lea     rcx, [r15+350h]
                mov     [r14+8], r15
                mov     eax, 350h
                mov     [r14+10h], eax
                mov     r8, r15
                add     [rdi+828h], eax
                mov     rax, r15
                mov     r9d, [rdi+814h]
                mov     r11, [rdi+818h]
                cmp     r15, rcx
                jnb     short loc_140A31779

loc_140A3176D:                          ; CODE XREF: sub_140A1EEE4+12893↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A3176D

loc_140A31779:                          ; CODE XREF: sub_140A1EEE4+12887↑j
                mov     rbx, r11
                mov     r12, 7010008004002001h

loc_140A31786:                          ; CODE XREF: sub_140A1EEE4+128F3↓j
                mov     eax, 8

loc_140A3178B:                          ; CODE XREF: sub_140A1EEE4+128BE↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, r13
                jnz     short loc_140A3178B
                mov     rcx, r8
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1770], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A31786
                mov     r12, [rsp+24B8h+var_2468]
                lea     edx, [r10+50h]
                lea     eax, [rdx-46h]
                mov     r10d, 0FFFFFFF8h

loc_140A317EB:                          ; CODE XREF: sub_140A1EEE4+1291A↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edx, r10d
                sub     rax, r13
                jnz     short loc_140A317EB
                test    edx, edx
                jz      short loc_140A31819

loc_140A31804:                          ; CODE XREF: sub_140A1EEE4+12933↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A31804

loc_140A31819:                          ; CODE XREF: sub_140A1EEE4+1291E↑j
                mov     rax, rbx
                jmp     short loc_140A31820
; ---------------------------------------------------------------------------

loc_140A3181E:                          ; CODE XREF: sub_140A1EEE4+12943↓j
                xor     ebx, eax

loc_140A31820:                          ; CODE XREF: sub_140A1EEE4+12938↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A3181E
                mov     r9d, 7FFFFFFFh
                and     ebx, r9d
                mov     [r14+14h], ebx
                mov     rax, [rsp+24B8h+var_1778]
                mov     [rsp+24B8h+var_1768], rax
                add     dword ptr [rdi+828h], 350h
                mov     rdx, [rsp+24B8h+var_1426]
                add     dword ptr [rdi+828h], 10h
                add     rdx, 0E10h
                mov     r8d, [rdi+814h]
                mov     rax, rdx
                mov     r14, [rdi+818h]
                lea     rcx, [rdx+10h]
                cmp     rdx, rcx
                jnb     short loc_140A3188C

loc_140A31880:                          ; CODE XREF: sub_140A1EEE4+129A6↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A31880

loc_140A3188C:                          ; CODE XREF: sub_140A1EEE4+1299A↑j
                mov     ebx, 10h
                lea     eax, [rbx-0Eh]

loc_140A31894:                          ; CODE XREF: sub_140A1EEE4+129C3↓j
                xor     r14, [rdx]
                mov     ecx, r8d
                rol     r14, cl
                add     rdx, 8
                add     ebx, r10d
                sub     rax, r13
                jnz     short loc_140A31894
                test    ebx, ebx
                jz      short loc_140A318C1

loc_140A318AD:                          ; CODE XREF: sub_140A1EEE4+129DB↓j
                movzx   eax, byte ptr [rdx]
                mov     ecx, r8d
                xor     r14, rax
                add     rdx, r13
                rol     r14, cl
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A318AD

loc_140A318C1:                          ; CODE XREF: sub_140A1EEE4+129C7↑j
                mov     rax, r14
                jmp     short loc_140A318C9
; ---------------------------------------------------------------------------

loc_140A318C6:                          ; CODE XREF: sub_140A1EEE4+129EC↓j
                xor     r14d, eax

loc_140A318C9:                          ; CODE XREF: sub_140A1EEE4+129E0↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A318C6
                and     r14d, r9d

loc_140A318D5:                          ; CODE XREF: sub_140A1EEE4+127FD↑j
                lea     rcx, [rsp+24B8h+var_1318]
                mov     rax, r12
                call    j__guard_dispatch_icall_nop
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3101C
                mov     rax, [rsp+24B8h+var_1768]
                mov     r12d, dword ptr [rsp+24B8h+var_2458]
                mov     r15d, dword ptr [rsp+24B8h+var_2450]
                mov     ecx, r14d
                mov     [rax+18h], rcx
                mov     rax, [rsp+24B8h+var_1768]
                mov     [rax+28h], r12d
                mov     rcx, [rsp+24B8h+var_1768]
                movzx   eax, [rsp+24B8h+var_1428]
                mov     [rcx+2Ch], ax
                lea     eax, [r15+2]
                mov     r14d, [rdi+7E4h]
                lea     ecx, [rax+rax*2]
                mov     r8d, [rdi+924h]
                lea     eax, [r14+rcx*8]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A31A1D
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A3101C
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A31A14
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A319AF
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A319A0:                          ; CODE XREF: sub_140A1EEE4+12AC9↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A319A0

loc_140A319AF:                          ; CODE XREF: sub_140A1EEE4+12AB1↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A319BF

loc_140A319B5:                          ; CODE XREF: sub_140A1EEE4+12AD9↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A319B5

loc_140A319BF:                          ; CODE XREF: sub_140A1EEE4+12ACF↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A319FF
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A319F6
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A31A0E
; ---------------------------------------------------------------------------

loc_140A319F6:                          ; CODE XREF: sub_140A1EEE4+12AFB↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A31A06
; ---------------------------------------------------------------------------

loc_140A319FF:                          ; CODE XREF: sub_140A1EEE4+12AEA↑j
                mov     rax, [rbx+368h]

loc_140A31A06:                          ; CODE XREF: sub_140A1EEE4+12B19↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A31A0E:                          ; CODE XREF: sub_140A1EEE4+12B10↑j
                mov     [rbx+924h], edi

loc_140A31A14:                          ; CODE XREF: sub_140A1EEE4+12A8B↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A31A26
; ---------------------------------------------------------------------------

loc_140A31A1D:                          ; CODE XREF: sub_140A1EEE4+12A64↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A31A26:                          ; CODE XREF: sub_140A1EEE4+12B37↑j
                add     [rbx+80Ch], r13d
                lea     rdx, [rbx+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1760], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     edi, [rcx-2Ah]

loc_140A31A47:                          ; CODE XREF: sub_140A1EEE4+12B70↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdi, r13
                jnz     short loc_140A31A47
                test    ecx, ecx
                jz      short loc_140A31A65

loc_140A31A5A:                          ; CODE XREF: sub_140A1EEE4+12B7F↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A31A5A

loc_140A31A65:                          ; CODE XREF: sub_140A1EEE4+12B74↑j
                xor     eax, eax
                mov     dword ptr [rdx], 7
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A31A82
; ---------------------------------------------------------------------------

loc_140A31A80:                          ; CODE XREF: sub_140A1EEE4+12BA5↓j
                xor     ecx, eax

loc_140A31A82:                          ; CODE XREF: sub_140A1EEE4+12B9A↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A31A80
                btr     ecx, 1Fh
                mov     [rdx+14h], ecx
                mov     edx, r12d
                mov     rax, [rsp+24B8h+var_1760]
                lea     rcx, [rsp+24B8h+var_1308]
                mov     [rsp+24B8h+var_1758], rax
                mov     [rax+18h], r15d
                mov     rax, [rsp+24B8h+var_1758]
                mov     [rax+1Ch], r12d
                mov     r14, [rsp+24B8h+var_1758]
                mov     rax, [rbx+1A0h]
                add     r14, 30h ; '0'
                call    j__guard_dispatch_icall_nop
                mov     rax, [rbx+1D0h]
                lea     rdx, [rsp+24B8h+var_12F8]
                lea     rcx, [rsp+24B8h+var_1308]
                call    j__guard_dispatch_icall_nop
                test    r15d, r15d
                jz      short loc_140A31B5F
                lea     rax, [rsp+24B8h+var_D68]
                mov     r9, r15
                sub     r14, rax
                lea     rdi, [rsp+24B8h+var_D68]

loc_140A31B0C:                          ; CODE XREF: sub_140A1EEE4+12C79↓j
                mov     r8, [rdi-10h]
                mov     ecx, [rdi]
                mov     [rdi+r14], r8
                mov     [rdi+r14+10h], ecx
                test    byte ptr [rbx+87Bh], 2
                jz      short loc_140A31B45
                cmp     ecx, 0C0000082h
                jnz     short loc_140A31B45
                mov     eax, gs:1A4h
                cmp     eax, [rbx+8F0h]
                jnz     short loc_140A31B45
                mov     rax, [rbx+8E8h]
                jmp     short loc_140A31B4E
; ---------------------------------------------------------------------------

loc_140A31B45:                          ; CODE XREF: sub_140A1EEE4+12C3E↑j
                                        ; sub_140A1EEE4+12C46↑j ...
                rdmsr
                shl     rdx, 20h
                or      rax, rdx

loc_140A31B4E:                          ; CODE XREF: sub_140A1EEE4+12C5F↑j
                and     rax, r8
                mov     [rdi+r14+8], rax
                add     rdi, 18h
                sub     r9, r13
                jnz     short loc_140A31B0C

loc_140A31B5F:                          ; CODE XREF: sub_140A1EEE4+12C10↑j
                mov     rax, [rbx+198h]
                lea     rcx, [rsp+24B8h+var_12F8]
                call    j__guard_dispatch_icall_nop
                mov     r15d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r15+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A31C65
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jz      loc_140A3101C
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A31C5B
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     rdi, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A31BF2
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A31BE3:                          ; CODE XREF: sub_140A1EEE4+12D0C↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A31BE3

loc_140A31BF2:                          ; CODE XREF: sub_140A1EEE4+12CF4↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A31C02

loc_140A31BF8:                          ; CODE XREF: sub_140A1EEE4+12D1C↓j
                mov     [rbx], cl
                add     rbx, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A31BF8

loc_140A31C02:                          ; CODE XREF: sub_140A1EEE4+12D12↑j
                mov     ebx, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A31C45
                test    dword ptr [r14+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A31C3C
                mov     rax, [r14+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A31C54
; ---------------------------------------------------------------------------

loc_140A31C3C:                          ; CODE XREF: sub_140A1EEE4+12D41↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A31C4C
; ---------------------------------------------------------------------------

loc_140A31C45:                          ; CODE XREF: sub_140A1EEE4+12D2F↑j
                mov     rax, [r14+368h]

loc_140A31C4C:                          ; CODE XREF: sub_140A1EEE4+12D5F↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A31C54:                          ; CODE XREF: sub_140A1EEE4+12D56↑j
                mov     [r14+924h], ebx

loc_140A31C5B:                          ; CODE XREF: sub_140A1EEE4+12CCE↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                jmp     short loc_140A31C6E
; ---------------------------------------------------------------------------

loc_140A31C65:                          ; CODE XREF: sub_140A1EEE4+12CA7↑j
                mov     r14, rbx
                mov     [rbx+7E4h], eax

loc_140A31C6E:                          ; CODE XREF: sub_140A1EEE4+12D7F↑j
                add     [r14+80Ch], r13d
                lea     rdx, [r14+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1750], rdx
                mov     rax, rdx
                xor     edi, edi
                lea     ebx, [rcx-2Ah]

loc_140A31C8E:                          ; CODE XREF: sub_140A1EEE4+12DB7↓j
                mov     [rax], rdi
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A31C8E
                test    ecx, ecx
                jz      short loc_140A31CAC

loc_140A31CA1:                          ; CODE XREF: sub_140A1EEE4+12DC6↓j
                mov     [rax], dil
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A31CA1

loc_140A31CAC:                          ; CODE XREF: sub_140A1EEE4+12DBB↑j
                xor     eax, eax
                mov     dword ptr [rdx], 15h
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [r14+818h]
                mov     rax, rcx
                shr     rax, 1Fh
                xor     ebx, ebx
                jmp     short loc_140A31CD3
; ---------------------------------------------------------------------------

loc_140A31CCD:                          ; CODE XREF: sub_140A1EEE4+12DF2↓j
                xor     ecx, eax
                shr     rax, 1Fh

loc_140A31CD3:                          ; CODE XREF: sub_140A1EEE4+12DE7↑j
                test    rax, rax
                jnz     short loc_140A31CCD
                btr     ecx, 1Fh
                mov     edi, 80010001h
                mov     [rdx+14h], ecx
                mov     edx, r12d
                mov     rax, [rsp+24B8h+var_1750]
                lea     rcx, [rsp+24B8h+var_12E8]
                mov     [rsp+24B8h+var_1748], rax
                mov     [rax+28h], ebx
                mov     rax, [rsp+24B8h+var_1748]
                mov     [rax+18h], rdi
                mov     rax, [rsp+24B8h+var_1748]
                mov     [rax+2Ch], r12d
                mov     rax, [r14+1A0h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [r14+1D0h]
                lea     rdx, [rsp+24B8h+var_12D8]
                lea     rcx, [rsp+24B8h+var_12E8]
                call    j__guard_dispatch_icall_nop
                mov     rbx, cr0
                mov     rax, [r14+198h]
                lea     rcx, [rsp+24B8h+var_12D8]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsp+24B8h+var_1748]
                mov     [rax+20h], rbx
                mov     rax, [rsp+24B8h+var_1748]
                and     [rax+20h], rdi
                mov     r15d, [r14+7E4h]
                mov     r8d, [r14+924h]
                lea     eax, [r15+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A31E65
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3101C
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A31E5C
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rbx, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A31DF4
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A31DE5:                          ; CODE XREF: sub_140A1EEE4+12F0E↓j
                mov     [r14], r10
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, r13
                jnz     short loc_140A31DE5

loc_140A31DF4:                          ; CODE XREF: sub_140A1EEE4+12EF6↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A31E05

loc_140A31DFA:                          ; CODE XREF: sub_140A1EEE4+12F1F↓j
                mov     [r14], cl
                add     r14, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A31DFA

loc_140A31E05:                          ; CODE XREF: sub_140A1EEE4+12F14↑j
                mov     r14d, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A31E46
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A31E3D
                mov     rax, [rdi+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A31E55
; ---------------------------------------------------------------------------

loc_140A31E3D:                          ; CODE XREF: sub_140A1EEE4+12F42↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A31E4D
; ---------------------------------------------------------------------------

loc_140A31E46:                          ; CODE XREF: sub_140A1EEE4+12F31↑j
                mov     rax, [rdi+368h]

loc_140A31E4D:                          ; CODE XREF: sub_140A1EEE4+12F60↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A31E55:                          ; CODE XREF: sub_140A1EEE4+12F57↑j
                mov     [rdi+924h], r14d

loc_140A31E5C:                          ; CODE XREF: sub_140A1EEE4+12ECE↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A31E6F
; ---------------------------------------------------------------------------

loc_140A31E65:                          ; CODE XREF: sub_140A1EEE4+12EA6↑j
                mov     rdi, r14
                mov     [r14+7E4h], eax

loc_140A31E6F:                          ; CODE XREF: sub_140A1EEE4+12F7F↑j
                add     [rdi+80Ch], r13d
                lea     rdx, [rdi+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1740], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     ebx, [rcx-2Ah]

loc_140A31E90:                          ; CODE XREF: sub_140A1EEE4+12FB9↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A31E90
                test    ecx, ecx
                jz      short loc_140A31EAE

loc_140A31EA3:                          ; CODE XREF: sub_140A1EEE4+12FC8↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A31EA3

loc_140A31EAE:                          ; CODE XREF: sub_140A1EEE4+12FBD↑j
                xor     eax, eax
                mov     dword ptr [rdx], 15h
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A31ECB
; ---------------------------------------------------------------------------

loc_140A31EC9:                          ; CODE XREF: sub_140A1EEE4+12FEE↓j
                xor     ecx, eax

loc_140A31ECB:                          ; CODE XREF: sub_140A1EEE4+12FE3↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A31EC9
                btr     ecx, 1Fh
                mov     r14, 0FFFFFFFFFFFFDE3Fh
                mov     [rdx+14h], ecx
                mov     edx, r12d
                mov     rax, [rsp+24B8h+var_1740]
                lea     rcx, [rsp+24B8h+var_12C8]
                mov     [rsp+24B8h+var_1738], rax
                mov     dword ptr [rax+28h], 4
                mov     rax, [rsp+24B8h+var_1738]
                mov     [rax+18h], r14
                mov     rax, [rsp+24B8h+var_1738]
                mov     [rax+2Ch], r12d
                mov     rax, [rdi+1A0h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rdi+1D0h]
                lea     rdx, [rsp+24B8h+var_12B8]
                lea     rcx, [rsp+24B8h+var_12C8]
                call    j__guard_dispatch_icall_nop
                mov     rbx, cr4
                mov     rax, [rdi+198h]
                lea     rcx, [rsp+24B8h+var_12B8]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsp+24B8h+var_1738]
                or      rcx, 0FFFFFFFFFFFFFFFFh
                mov     [rax+20h], rbx
                mov     rax, [rsp+24B8h+var_1738]
                and     [rax+20h], r14
                call    RtlGetEnabledExtendedFeatures
                xor     r9d, r9d
                test    rax, rax
                jz      loc_140A32186
                mov     r15d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                lea     eax, [r15+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A3207D
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     r14, rax
                xor     eax, eax
                test    r14, r14
                jz      loc_140A3101C
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A32070
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     rbx, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A32007
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A31FF8:                          ; CODE XREF: sub_140A1EEE4+13121↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A31FF8

loc_140A32007:                          ; CODE XREF: sub_140A1EEE4+13109↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A32017

loc_140A3200D:                          ; CODE XREF: sub_140A1EEE4+13131↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A3200D

loc_140A32017:                          ; CODE XREF: sub_140A1EEE4+13127↑j
                mov     edi, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A3205A
                test    dword ptr [r14+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A32051
                mov     rax, [r14+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A32069
; ---------------------------------------------------------------------------

loc_140A32051:                          ; CODE XREF: sub_140A1EEE4+13156↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A32061
; ---------------------------------------------------------------------------

loc_140A3205A:                          ; CODE XREF: sub_140A1EEE4+13144↑j
                mov     rax, [r14+368h]

loc_140A32061:                          ; CODE XREF: sub_140A1EEE4+13174↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A32069:                          ; CODE XREF: sub_140A1EEE4+1316B↑j
                mov     [r14+924h], edi

loc_140A32070:                          ; CODE XREF: sub_140A1EEE4+130E3↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                xor     r9d, r9d
                jmp     short loc_140A32086
; ---------------------------------------------------------------------------

loc_140A3207D:                          ; CODE XREF: sub_140A1EEE4+130BC↑j
                mov     r14, rdi
                mov     [rdi+7E4h], eax

loc_140A32086:                          ; CODE XREF: sub_140A1EEE4+13197↑j
                add     [r14+80Ch], r13d
                lea     rdx, [r14+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1730], rdx
                mov     rax, rdx
                lea     ebx, [rcx-2Ah]

loc_140A320A4:                          ; CODE XREF: sub_140A1EEE4+131CD↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A320A4
                test    ecx, ecx
                jz      short loc_140A320C2

loc_140A320B7:                          ; CODE XREF: sub_140A1EEE4+131DC↓j
                mov     [rax], r9b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A320B7

loc_140A320C2:                          ; CODE XREF: sub_140A1EEE4+131D1↑j
                xor     eax, eax
                mov     dword ptr [rdx], 26h ; '&'
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [r14+818h]
                mov     rax, rcx
                shr     rax, 1Fh
                xor     ebx, ebx
                jmp     short loc_140A320E9
; ---------------------------------------------------------------------------

loc_140A320E3:                          ; CODE XREF: sub_140A1EEE4+13208↓j
                xor     ecx, eax
                shr     rax, 1Fh

loc_140A320E9:                          ; CODE XREF: sub_140A1EEE4+131FD↑j
                test    rax, rax
                jnz     short loc_140A320E3
                btr     ecx, 1Fh
                mov     [rdx+14h], ecx
                mov     edx, r12d
                mov     rax, [rsp+24B8h+var_1730]
                lea     rcx, [rsp+24B8h+var_12A8]
                mov     [rsp+24B8h+var_1728], rax
                mov     [rax+28h], ebx
                mov     rax, [rsp+24B8h+var_1728]
                or      qword ptr [rax+18h], 0FFFFFFFFFFFFFFFFh
                mov     rax, [rsp+24B8h+var_1728]
                mov     [rax+2Ch], r12d
                mov     rax, [r14+1A0h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [r14+1D0h]
                lea     rdx, [rsp+24B8h+var_1298]
                lea     rcx, [rsp+24B8h+var_12A8]
                call    j__guard_dispatch_icall_nop
                xor     ecx, ecx
                xgetbv
                shl     rdx, 20h
                lea     rcx, [rsp+24B8h+var_1298]
                or      rdx, rax
                mov     rax, [r14+198h]
                mov     rbx, rdx
                call    j__guard_dispatch_icall_nop
                mov     rax, [rsp+24B8h+var_1728]
                mov     rdi, r14
                mov     [rax+20h], rbx

loc_140A32186:                          ; CODE XREF: sub_140A1EEE4+1309E↑j
                mov     rax, [rdi+1A0h]
                lea     rcx, [rsp+24B8h+var_1288]
                mov     edx, r12d
                call    j__guard_dispatch_icall_nop
                mov     rax, [rdi+1D0h]
                lea     rdx, [rsp+24B8h+var_1278]
                lea     rcx, [rsp+24B8h+var_1288]
                call    j__guard_dispatch_icall_nop
                mov     rbx, [rdi+0A10h]
                test    rbx, rbx
                jz      short loc_140A321D5
                mov     r12d, [rbx+320h]
                mov     rbx, [rdi+0A10h]
                jmp     short loc_140A321E6
; ---------------------------------------------------------------------------

loc_140A321D5:                          ; CODE XREF: sub_140A1EEE4+132DF↑j
                mov     ecx, 832h
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     r12, rax

loc_140A321E6:                          ; CODE XREF: sub_140A1EEE4+132EF↑j
                test    rbx, rbx
                jz      short loc_140A321F4
                mov     r15d, [rbx+340h]
                jmp     short loc_140A32205
; ---------------------------------------------------------------------------

loc_140A321F4:                          ; CODE XREF: sub_140A1EEE4+13305↑j
                mov     ecx, 834h
                rdmsr
                shl     rdx, 20h
                or      rax, rdx
                mov     r15, rax

loc_140A32205:                          ; CODE XREF: sub_140A1EEE4+1330E↑j
                mov     rax, [rdi+198h]
                lea     rcx, [rsp+24B8h+var_1278]
                call    j__guard_dispatch_icall_nop
                mov     r14d, [rdi+7E4h]
                and     r12d, 0FFFCEF00h
                mov     r8d, [rdi+924h]
                and     r15d, 0FFFEE800h
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A32314
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A3101C
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A3230B
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A322A6
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A32297:                          ; CODE XREF: sub_140A1EEE4+133C0↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A32297

loc_140A322A6:                          ; CODE XREF: sub_140A1EEE4+133A8↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A322B6

loc_140A322AC:                          ; CODE XREF: sub_140A1EEE4+133D0↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A322AC

loc_140A322B6:                          ; CODE XREF: sub_140A1EEE4+133C6↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A322F6
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A322ED
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A32305
; ---------------------------------------------------------------------------

loc_140A322ED:                          ; CODE XREF: sub_140A1EEE4+133F2↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A322FD
; ---------------------------------------------------------------------------

loc_140A322F6:                          ; CODE XREF: sub_140A1EEE4+133E1↑j
                mov     rax, [rbx+368h]

loc_140A322FD:                          ; CODE XREF: sub_140A1EEE4+13410↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A32305:                          ; CODE XREF: sub_140A1EEE4+13407↑j
                mov     [rbx+924h], edi

loc_140A3230B:                          ; CODE XREF: sub_140A1EEE4+13382↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A3231D
; ---------------------------------------------------------------------------

loc_140A32314:                          ; CODE XREF: sub_140A1EEE4+1335B↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A3231D:                          ; CODE XREF: sub_140A1EEE4+1342E↑j
                add     [rbx+80Ch], r13d
                lea     rdx, [rbx+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1720], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     edi, [rcx-2Ah]

loc_140A3233E:                          ; CODE XREF: sub_140A1EEE4+13467↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdi, r13
                jnz     short loc_140A3233E
                test    ecx, ecx
                jz      short loc_140A3235C

loc_140A32351:                          ; CODE XREF: sub_140A1EEE4+13476↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A32351

loc_140A3235C:                          ; CODE XREF: sub_140A1EEE4+1346B↑j
                xor     eax, eax
                mov     dword ptr [rdx], 17h
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A32379
; ---------------------------------------------------------------------------

loc_140A32377:                          ; CODE XREF: sub_140A1EEE4+1349C↓j
                xor     ecx, eax

loc_140A32379:                          ; CODE XREF: sub_140A1EEE4+13491↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A32377
                btr     ecx, 1Fh
                mov     [rdx+14h], ecx
                mov     rax, [rsp+24B8h+var_1720]
                mov     edx, dword ptr [rsp+24B8h+var_2458]
                mov     ecx, edx
                mov     [rsp+24B8h+var_1718], rax
                mov     [rax+18h], r12d
                mov     rax, [rsp+24B8h+var_1718]
                mov     dword ptr [rax+1Ch], 0FFFCEF00h
                mov     rax, [rsp+24B8h+var_1718]
                mov     [rax+20h], r15d
                mov     rax, [rsp+24B8h+var_1718]
                mov     dword ptr [rax+24h], 0FFFEE800h
                mov     rax, [rsp+24B8h+var_1718]
                mov     [rax+28h], edx
                call    sub_14023DAD0
                mov     edx, 0F0000000h
                lea     rcx, [rax-180h]
                mov     eax, cs:NtBuildNumber
                and     eax, edx
                mov     [rsp+24B8h+var_2468], rcx
                cmp     eax, edx
                jnz     short loc_140A32405
                xor     eax, eax
                mov     [rcx+108h], rax
                jmp     short loc_140A32407
; ---------------------------------------------------------------------------

loc_140A32405:                          ; CODE XREF: sub_140A1EEE4+13514↑j
                xor     eax, eax

loc_140A32407:                          ; CODE XREF: sub_140A1EEE4+1351F↑j
                mov     r13d, [rbx+838h]
                lea     r14, [rcx+108h]
                mov     r15d, [rbx+7E4h]
                cmp     r13d, 7
                mov     r8d, [rbx+924h]
                mov     r12d, 20h ; ' '
                cmovnz  r12d, eax
                lea     eax, [r15+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A32511
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3101C
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A32508
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A324A3
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A32493:                          ; CODE XREF: sub_140A1EEE4+135BD↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A32493

loc_140A324A3:                          ; CODE XREF: sub_140A1EEE4+135A4↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A324B3

loc_140A324A9:                          ; CODE XREF: sub_140A1EEE4+135CD↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A324A9

loc_140A324B3:                          ; CODE XREF: sub_140A1EEE4+135C3↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A324F3
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A324EA
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A32502
; ---------------------------------------------------------------------------

loc_140A324EA:                          ; CODE XREF: sub_140A1EEE4+135EF↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A324FA
; ---------------------------------------------------------------------------

loc_140A324F3:                          ; CODE XREF: sub_140A1EEE4+135DE↑j
                mov     rax, [rdi+368h]

loc_140A324FA:                          ; CODE XREF: sub_140A1EEE4+1360D↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A32502:                          ; CODE XREF: sub_140A1EEE4+13604↑j
                mov     [rdi+924h], ebx

loc_140A32508:                          ; CODE XREF: sub_140A1EEE4+1357E↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A3251A
; ---------------------------------------------------------------------------

loc_140A32511:                          ; CODE XREF: sub_140A1EEE4+13557↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A3251A:                          ; CODE XREF: sub_140A1EEE4+1362B↑j
                mov     r8d, 1
                lea     rbx, [rdi+r15]
                add     [rdi+80Ch], r8d
                mov     rax, rbx
                mov     [rsp+24B8h+var_1710], rbx
                xor     r11d, r11d
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A32540:                          ; CODE XREF: sub_140A1EEE4+13669↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A32540
                test    ecx, ecx
                jz      short loc_140A3255E

loc_140A32553:                          ; CODE XREF: sub_140A1EEE4+13678↓j
                mov     [rax], r11b
                add     rax, r8
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A32553

loc_140A3255E:                          ; CODE XREF: sub_140A1EEE4+1366D↑j
                mov     [rbx], r12d
                mov     [rbx+8], r14
                cmp     r13d, 7
                jnz     short loc_140A32581
                lea     r9, [rbx+18h]
                mov     rdx, r14
                lea     r8d, [r13+1]
                mov     rcx, rdi
                call    sub_1403EA0CC
                xor     r11d, r11d

loc_140A32581:                          ; CODE XREF: sub_140A1EEE4+13685↑j
                mov     dword ptr [rbx+10h], 8
                lea     r8, [r14+8]
                add     dword ptr [rdi+828h], 8
                mov     rdx, r14
                mov     ecx, [rdi+814h]
                mov     rax, [rdi+818h]
                cmp     r14, r8
                jnb     short loc_140A325B4

loc_140A325A8:                          ; CODE XREF: sub_140A1EEE4+136CE↓j
                prefetchnta byte ptr [rdx]
                add     rdx, 40h ; '@'
                cmp     rdx, r8
                jb      short loc_140A325A8

loc_140A325B4:                          ; CODE XREF: sub_140A1EEE4+136C2↑j
                xor     rax, [r14]
                rol     rax, cl
                mov     rcx, rax
                jmp     short loc_140A325C1
; ---------------------------------------------------------------------------

loc_140A325BF:                          ; CODE XREF: sub_140A1EEE4+136E4↓j
                xor     eax, ecx

loc_140A325C1:                          ; CODE XREF: sub_140A1EEE4+136D9↑j
                shr     rcx, 1Fh
                test    rcx, rcx
                jnz     short loc_140A325BF
                mov     r14, [rsp+24B8h+var_2468]
                lea     r12d, [rcx+20h]
                btr     eax, 1Fh
                add     r14, 38h ; '8'
                mov     [rbx+14h], eax
                add     dword ptr [rdi+828h], 8
                mov     r15d, [rdi+7E4h]
                mov     r13d, [rdi+838h]
                cmp     r13d, 7
                mov     r8d, [rdi+924h]
                cmovnz  r12d, r11d
                lea     eax, [r15+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A326E5
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A3101C
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A326D9
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A32674
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A32664:                          ; CODE XREF: sub_140A1EEE4+1378E↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A32664

loc_140A32674:                          ; CODE XREF: sub_140A1EEE4+13775↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A32684

loc_140A3267A:                          ; CODE XREF: sub_140A1EEE4+1379E↓j
                mov     [rdi], cl
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A3267A

loc_140A32684:                          ; CODE XREF: sub_140A1EEE4+13794↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A326C4
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A326BB
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A326D3
; ---------------------------------------------------------------------------

loc_140A326BB:                          ; CODE XREF: sub_140A1EEE4+137C0↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A326CB
; ---------------------------------------------------------------------------

loc_140A326C4:                          ; CODE XREF: sub_140A1EEE4+137AF↑j
                mov     rax, [rbx+368h]

loc_140A326CB:                          ; CODE XREF: sub_140A1EEE4+137DE↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A326D3:                          ; CODE XREF: sub_140A1EEE4+137D5↑j
                mov     [rbx+924h], edi

loc_140A326D9:                          ; CODE XREF: sub_140A1EEE4+1374F↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                xor     r11d, r11d
                jmp     short loc_140A326EE
; ---------------------------------------------------------------------------

loc_140A326E5:                          ; CODE XREF: sub_140A1EEE4+13728↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A326EE:                          ; CODE XREF: sub_140A1EEE4+137FF↑j
                mov     r8d, 1
                lea     rdi, [rbx+r15]
                add     [rbx+80Ch], r8d
                mov     rax, rdi
                mov     [rsp+24B8h+var_1708], rdi
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A32711:                          ; CODE XREF: sub_140A1EEE4+1383A↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A32711
                test    ecx, ecx
                jz      short loc_140A3272F

loc_140A32724:                          ; CODE XREF: sub_140A1EEE4+13849↓j
                mov     [rax], r11b
                add     rax, r8
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A32724

loc_140A3272F:                          ; CODE XREF: sub_140A1EEE4+1383E↑j
                mov     [rdi], r12d
                mov     [rdi+8], r14
                cmp     r13d, 7
                jnz     short loc_140A32752
                lea     r9, [rdi+18h]
                mov     rdx, r14
                lea     r8d, [r13+1]
                mov     rcx, rbx
                call    sub_1403EA0CC
                xor     r11d, r11d

loc_140A32752:                          ; CODE XREF: sub_140A1EEE4+13856↑j
                mov     dword ptr [rdi+10h], 8
                lea     r8, [r14+8]
                add     dword ptr [rbx+828h], 8
                mov     rdx, r14
                mov     ecx, [rbx+814h]
                mov     rax, [rbx+818h]
                cmp     r14, r8
                jnb     short loc_140A32785

loc_140A32779:                          ; CODE XREF: sub_140A1EEE4+1389F↓j
                prefetchnta byte ptr [rdx]
                add     rdx, 40h ; '@'
                cmp     rdx, r8
                jb      short loc_140A32779

loc_140A32785:                          ; CODE XREF: sub_140A1EEE4+13893↑j
                xor     rax, [r14]
                rol     rax, cl
                mov     rcx, rax
                jmp     short loc_140A32792
; ---------------------------------------------------------------------------

loc_140A32790:                          ; CODE XREF: sub_140A1EEE4+138B5↓j
                xor     eax, ecx

loc_140A32792:                          ; CODE XREF: sub_140A1EEE4+138AA↑j
                shr     rcx, 1Fh
                test    rcx, rcx
                jnz     short loc_140A32790
                btr     eax, 1Fh
                lea     r15d, [rcx+20h]
                mov     [rdi+14h], eax
                add     dword ptr [rbx+828h], 8
                mov     r14d, [rbx+7E4h]
                mov     r12d, [rbx+838h]
                cmp     r12d, 7
                mov     r8d, [rbx+924h]
                cmovnz  r15d, r11d
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A328AD
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3101C
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A328A1
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A3283C
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A3282C:                          ; CODE XREF: sub_140A1EEE4+13956↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A3282C

loc_140A3283C:                          ; CODE XREF: sub_140A1EEE4+1393D↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A3284C

loc_140A32842:                          ; CODE XREF: sub_140A1EEE4+13966↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A32842

loc_140A3284C:                          ; CODE XREF: sub_140A1EEE4+1395C↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A3288C
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A32883
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A3289B
; ---------------------------------------------------------------------------

loc_140A32883:                          ; CODE XREF: sub_140A1EEE4+13988↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A32893
; ---------------------------------------------------------------------------

loc_140A3288C:                          ; CODE XREF: sub_140A1EEE4+13977↑j
                mov     rax, [rdi+368h]

loc_140A32893:                          ; CODE XREF: sub_140A1EEE4+139A6↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A3289B:                          ; CODE XREF: sub_140A1EEE4+1399D↑j
                mov     [rdi+924h], ebx

loc_140A328A1:                          ; CODE XREF: sub_140A1EEE4+13917↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                xor     r11d, r11d
                jmp     short loc_140A328B6
; ---------------------------------------------------------------------------

loc_140A328AD:                          ; CODE XREF: sub_140A1EEE4+138F0↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A328B6:                          ; CODE XREF: sub_140A1EEE4+139C7↑j
                mov     r8d, 1
                lea     rbx, [rdi+r14]
                add     [rdi+80Ch], r8d
                mov     rax, rbx
                mov     [rsp+24B8h+var_1700], rbx
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A328D9:                          ; CODE XREF: sub_140A1EEE4+13A02↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A328D9
                test    ecx, ecx
                jz      short loc_140A328F7

loc_140A328EC:                          ; CODE XREF: sub_140A1EEE4+13A11↓j
                mov     [rax], r11b
                add     rax, r8
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A328EC

loc_140A328F7:                          ; CODE XREF: sub_140A1EEE4+13A06↑j
                mov     r14, [rsp+24B8h+var_2468]
                mov     [rbx], r15d
                mov     [rbx+8], r14
                cmp     r12d, 7
                jnz     short loc_140A32920
                lea     r9, [rbx+18h]
                mov     rdx, r14
                lea     r8d, [r12+1]
                mov     rcx, rdi
                call    sub_1403EA0CC
                xor     r11d, r11d

loc_140A32920:                          ; CODE XREF: sub_140A1EEE4+13A23↑j
                mov     dword ptr [rbx+10h], 8
                lea     r13, [r14+8]
                add     dword ptr [rdi+828h], 8
                mov     rax, r14
                mov     ecx, [rdi+814h]
                mov     rdx, [rdi+818h]
                mov     [rsp+24B8h+var_2468], r13
                cmp     r14, r13
                jnb     short loc_140A32958

loc_140A3294C:                          ; CODE XREF: sub_140A1EEE4+13A72↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, r13
                jb      short loc_140A3294C

loc_140A32958:                          ; CODE XREF: sub_140A1EEE4+13A66↑j
                mov     rax, [r14]
                xor     rax, rdx
                rol     rax, cl
                mov     rcx, rax
                jmp     short loc_140A32968
; ---------------------------------------------------------------------------

loc_140A32966:                          ; CODE XREF: sub_140A1EEE4+13A8B↓j
                xor     eax, ecx

loc_140A32968:                          ; CODE XREF: sub_140A1EEE4+13A80↑j
                shr     rcx, 1Fh
                test    rcx, rcx
                jnz     short loc_140A32966
                btr     eax, 1Fh
                lea     r15d, [rcx+20h]
                mov     [rbx+14h], eax
                add     dword ptr [rdi+828h], 8
                mov     r14d, [rdi+7E4h]
                mov     r12d, [rdi+838h]
                cmp     r12d, 7
                mov     r8d, [rdi+924h]
                cmovnz  r15d, r11d
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A32A83
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A3101C
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A32A77
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A32A12
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A32A02:                          ; CODE XREF: sub_140A1EEE4+13B2C↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A32A02

loc_140A32A12:                          ; CODE XREF: sub_140A1EEE4+13B13↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A32A22

loc_140A32A18:                          ; CODE XREF: sub_140A1EEE4+13B3C↓j
                mov     [rdi], cl
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A32A18

loc_140A32A22:                          ; CODE XREF: sub_140A1EEE4+13B32↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A32A62
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A32A59
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A32A71
; ---------------------------------------------------------------------------

loc_140A32A59:                          ; CODE XREF: sub_140A1EEE4+13B5E↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A32A69
; ---------------------------------------------------------------------------

loc_140A32A62:                          ; CODE XREF: sub_140A1EEE4+13B4D↑j
                mov     rax, [rbx+368h]

loc_140A32A69:                          ; CODE XREF: sub_140A1EEE4+13B7C↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A32A71:                          ; CODE XREF: sub_140A1EEE4+13B73↑j
                mov     [rbx+924h], edi

loc_140A32A77:                          ; CODE XREF: sub_140A1EEE4+13AED↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                xor     r11d, r11d
                jmp     short loc_140A32A8C
; ---------------------------------------------------------------------------

loc_140A32A83:                          ; CODE XREF: sub_140A1EEE4+13AC6↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A32A8C:                          ; CODE XREF: sub_140A1EEE4+13B9D↑j
                mov     r8d, 1
                lea     rdi, [rbx+r14]
                add     [rbx+80Ch], r8d
                mov     rax, rdi
                mov     [rsp+24B8h+var_16F8], rdi
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A32AAF:                          ; CODE XREF: sub_140A1EEE4+13BD8↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A32AAF
                test    ecx, ecx
                jz      short loc_140A32ACD

loc_140A32AC2:                          ; CODE XREF: sub_140A1EEE4+13BE7↓j
                mov     [rax], r11b
                add     rax, r8
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A32AC2

loc_140A32ACD:                          ; CODE XREF: sub_140A1EEE4+13BDC↑j
                mov     [rdi], r15d
                mov     [rdi+8], r13
                cmp     r12d, 7
                jnz     short loc_140A32AF1
                lea     r9, [rdi+18h]
                mov     rdx, r13
                lea     r8d, [r12+1]
                mov     rcx, rbx
                call    sub_1403EA0CC
                xor     r11d, r11d

loc_140A32AF1:                          ; CODE XREF: sub_140A1EEE4+13BF4↑j
                mov     dword ptr [rdi+10h], 8
                lea     rdx, [r13+8]
                add     dword ptr [rbx+828h], 8
                mov     rax, r13
                mov     ecx, [rbx+814h]
                mov     r8, [rbx+818h]
                cmp     r13, rdx
                jnb     short loc_140A32B24

loc_140A32B18:                          ; CODE XREF: sub_140A1EEE4+13C3E↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rdx
                jb      short loc_140A32B18

loc_140A32B24:                          ; CODE XREF: sub_140A1EEE4+13C32↑j
                mov     rax, [r13+0]
                xor     rax, r8
                rol     rax, cl
                mov     rcx, rax
                jmp     short loc_140A32B35
; ---------------------------------------------------------------------------

loc_140A32B33:                          ; CODE XREF: sub_140A1EEE4+13C58↓j
                xor     eax, ecx

loc_140A32B35:                          ; CODE XREF: sub_140A1EEE4+13C4D↑j
                shr     rcx, 1Fh
                test    rcx, rcx
                jnz     short loc_140A32B33
                btr     eax, 1Fh
                mov     [rdi+14h], eax
                add     dword ptr [rbx+828h], 8
                test    byte ptr [rbx+87Bh], 8
                mov     r9d, [rbx+838h]
                mov     r12, [r13+0]
                mov     r8d, [rbx+924h]
                mov     dword ptr [rsp+24B8h+var_2460], r9d
                jz      loc_140A32D79
                mov     r14d, [rbx+7E4h]
                lea     r15d, [rcx+20h]
                cmp     r9d, 7
                cmovnz  r15d, r11d
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A32C73
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A32C6B
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A32C5A
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A32BF5
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A32BE5:                          ; CODE XREF: sub_140A1EEE4+13D0F↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A32BE5

loc_140A32BF5:                          ; CODE XREF: sub_140A1EEE4+13CF6↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A32C05

loc_140A32BFB:                          ; CODE XREF: sub_140A1EEE4+13D1F↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A32BFB

loc_140A32C05:                          ; CODE XREF: sub_140A1EEE4+13D15↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A32C45
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A32C3C
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A32C54
; ---------------------------------------------------------------------------

loc_140A32C3C:                          ; CODE XREF: sub_140A1EEE4+13D41↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A32C4C
; ---------------------------------------------------------------------------

loc_140A32C45:                          ; CODE XREF: sub_140A1EEE4+13D30↑j
                mov     rax, [rdi+368h]

loc_140A32C4C:                          ; CODE XREF: sub_140A1EEE4+13D5F↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A32C54:                          ; CODE XREF: sub_140A1EEE4+13D56↑j
                mov     [rdi+924h], ebx

loc_140A32C5A:                          ; CODE XREF: sub_140A1EEE4+13CD0↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2460]
                xor     r11d, r11d
                jmp     short loc_140A32C7C
; ---------------------------------------------------------------------------

loc_140A32C6B:                          ; CODE XREF: sub_140A1EEE4+13CC1↑j
                mov     rdi, rax
                jmp     loc_140A32F87
; ---------------------------------------------------------------------------

loc_140A32C73:                          ; CODE XREF: sub_140A1EEE4+13CA9↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A32C7C:                          ; CODE XREF: sub_140A1EEE4+13D85↑j
                mov     r10d, 1
                add     [rdi+80Ch], r10d
                add     r14, rdi
                mov     [rsp+24B8h+var_16F0], r14
                mov     rax, r14
                lea     ecx, [r10+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A32C9E:                          ; CODE XREF: sub_140A1EEE4+13DC7↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r10
                jnz     short loc_140A32C9E
                test    ecx, ecx
                jz      short loc_140A32CBC

loc_140A32CB1:                          ; CODE XREF: sub_140A1EEE4+13DD6↓j
                mov     [rax], r11b
                add     rax, r10
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A32CB1

loc_140A32CBC:                          ; CODE XREF: sub_140A1EEE4+13DCB↑j
                mov     [r14], r15d
                mov     [r14+8], r12
                cmp     r9d, 7
                jnz     short loc_140A32CE4
                lea     r9, [r14+18h]
                mov     r8d, 68h ; 'h'
                mov     rdx, r12
                mov     rcx, rdi
                call    sub_1403EA0CC
                mov     r10d, 1

loc_140A32CE4:                          ; CODE XREF: sub_140A1EEE4+13DE3↑j
                mov     r11d, 68h ; 'h'
                lea     rcx, [r12+68h]
                mov     [r14+10h], r11d
                mov     rax, r12
                add     [rdi+828h], r11d
                mov     r9d, [rdi+814h]
                mov     rdx, [rdi+818h]
                cmp     r12, rcx
                jnb     short loc_140A32D1C

loc_140A32D10:                          ; CODE XREF: sub_140A1EEE4+13E36↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A32D10

loc_140A32D1C:                          ; CODE XREF: sub_140A1EEE4+13E2A↑j
                mov     ebx, r11d
                mov     r8d, 0Dh

loc_140A32D25:                          ; CODE XREF: sub_140A1EEE4+13E55↓j
                xor     rdx, [r12]
                mov     ecx, r9d
                rol     rdx, cl
                add     r12, 8
                add     ebx, 0FFFFFFF8h
                sub     r8, r10
                jnz     short loc_140A32D25
                test    ebx, ebx
                jz      short loc_140A32D55

loc_140A32D3F:                          ; CODE XREF: sub_140A1EEE4+13E6F↓j
                movzx   eax, byte ptr [r12]
                mov     ecx, r9d
                xor     rdx, rax
                add     r12, r10
                rol     rdx, cl
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A32D3F

loc_140A32D55:                          ; CODE XREF: sub_140A1EEE4+13E59↑j
                mov     rax, rdx
                jmp     short loc_140A32D5C
; ---------------------------------------------------------------------------

loc_140A32D5A:                          ; CODE XREF: sub_140A1EEE4+13E7F↓j
                xor     edx, eax

loc_140A32D5C:                          ; CODE XREF: sub_140A1EEE4+13E74↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A32D5A
                btr     edx, 1Fh
                mov     [r14+14h], edx
                add     [rdi+828h], r11d
                jmp     loc_140A32F87
; ---------------------------------------------------------------------------

loc_140A32D79:                          ; CODE XREF: sub_140A1EEE4+13C86↑j
                mov     r15d, [rbx+7E4h]
                lea     r14, [r12+0Ch]
                cmp     r9d, 7
                mov     r13d, 20h ; ' '
                cmovnz  r13d, r11d
                lea     eax, [r15+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A32E83
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A32E7B
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A32E6A
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A32E05
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A32DF5:                          ; CODE XREF: sub_140A1EEE4+13F1F↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A32DF5

loc_140A32E05:                          ; CODE XREF: sub_140A1EEE4+13F06↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A32E15

loc_140A32E0B:                          ; CODE XREF: sub_140A1EEE4+13F2F↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A32E0B

loc_140A32E15:                          ; CODE XREF: sub_140A1EEE4+13F25↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A32E55
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A32E4C
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A32E64
; ---------------------------------------------------------------------------

loc_140A32E4C:                          ; CODE XREF: sub_140A1EEE4+13F51↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A32E5C
; ---------------------------------------------------------------------------

loc_140A32E55:                          ; CODE XREF: sub_140A1EEE4+13F40↑j
                mov     rax, [rdi+368h]

loc_140A32E5C:                          ; CODE XREF: sub_140A1EEE4+13F6F↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A32E64:                          ; CODE XREF: sub_140A1EEE4+13F66↑j
                mov     [rdi+924h], ebx

loc_140A32E6A:                          ; CODE XREF: sub_140A1EEE4+13EE0↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2460]
                xor     r11d, r11d
                jmp     short loc_140A32E8C
; ---------------------------------------------------------------------------

loc_140A32E7B:                          ; CODE XREF: sub_140A1EEE4+13ED1↑j
                mov     rdi, rax
                jmp     loc_140A32F82
; ---------------------------------------------------------------------------

loc_140A32E83:                          ; CODE XREF: sub_140A1EEE4+13EB9↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A32E8C:                          ; CODE XREF: sub_140A1EEE4+13F95↑j
                mov     r10d, 1
                add     [rdi+80Ch], r10d
                add     r15, rdi
                mov     [rsp+24B8h+var_16E8], r15
                mov     rax, r15
                lea     ecx, [r10+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A32EAE:                          ; CODE XREF: sub_140A1EEE4+13FD7↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r10
                jnz     short loc_140A32EAE
                test    ecx, ecx
                jz      short loc_140A32ECC

loc_140A32EC1:                          ; CODE XREF: sub_140A1EEE4+13FE6↓j
                mov     [rax], r11b
                add     rax, r10
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A32EC1

loc_140A32ECC:                          ; CODE XREF: sub_140A1EEE4+13FDB↑j
                mov     [r15], r13d
                mov     [r15+8], r14
                cmp     r9d, 7
                jnz     short loc_140A32EF4
                lea     r9, [r15+18h]
                mov     r8d, 5Ch ; '\'
                mov     rdx, r14
                mov     rcx, rdi
                call    sub_1403EA0CC
                mov     r10d, 1

loc_140A32EF4:                          ; CODE XREF: sub_140A1EEE4+13FF3↑j
                mov     r11d, 5Ch ; '\'
                lea     rcx, [r12+68h]
                mov     [r15+10h], r11d
                mov     rax, r14
                add     [rdi+828h], r11d
                mov     r9d, [rdi+814h]
                mov     rdx, [rdi+818h]
                cmp     r14, rcx
                jnb     short loc_140A32F2C

loc_140A32F20:                          ; CODE XREF: sub_140A1EEE4+14046↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A32F20

loc_140A32F2C:                          ; CODE XREF: sub_140A1EEE4+1403A↑j
                mov     ebx, r11d
                mov     r8d, 0Bh

loc_140A32F35:                          ; CODE XREF: sub_140A1EEE4+14064↓j
                xor     rdx, [r14]
                mov     ecx, r9d
                rol     rdx, cl
                add     r14, 8
                add     ebx, 0FFFFFFF8h
                sub     r8, r10
                jnz     short loc_140A32F35
                test    ebx, ebx
                jz      short loc_140A32F63

loc_140A32F4E:                          ; CODE XREF: sub_140A1EEE4+1407D↓j
                movzx   eax, byte ptr [r14]
                mov     ecx, r9d
                xor     rdx, rax
                add     r14, r10
                rol     rdx, cl
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A32F4E

loc_140A32F63:                          ; CODE XREF: sub_140A1EEE4+14068↑j
                mov     rax, rdx
                jmp     short loc_140A32F6A
; ---------------------------------------------------------------------------

loc_140A32F68:                          ; CODE XREF: sub_140A1EEE4+1408D↓j
                xor     edx, eax

loc_140A32F6A:                          ; CODE XREF: sub_140A1EEE4+14082↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A32F68
                btr     edx, 1Fh
                mov     [r15+14h], edx
                add     [rdi+828h], r11d

loc_140A32F82:                          ; CODE XREF: sub_140A1EEE4+13F9A↑j
                mov     r13, [rsp+24B8h+var_2468]

loc_140A32F87:                          ; CODE XREF: sub_140A1EEE4+13D8A↑j
                                        ; sub_140A1EEE4+13E90↑j
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3101C
                test    byte ptr [rdi+87Bh], 8
                jz      loc_140A333B0
                lea     r11d, [rax+1]
                mov     eax, r11d
                mov     dword ptr [rsp+24B8h+var_2460], eax

loc_140A32FAA:                          ; CODE XREF: sub_140A1EEE4+144C6↓j
                mov     ecx, eax
                mov     rax, [r13+0]
                mov     r15, [rax+rcx*8+1Ch]
                xor     eax, eax
                test    r15, r15
                jz      loc_140A3339C
                mov     r13d, [rdi+838h]
                lea     r12d, [rax+20h]
                mov     r14d, [rdi+7E4h]
                cmp     r13d, 7
                mov     r8d, [rdi+924h]
                cmovnz  r12d, eax
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A330C7
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A3101C
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A330B8
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A33053
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A33043:                          ; CODE XREF: sub_140A1EEE4+1416D↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A33043

loc_140A33053:                          ; CODE XREF: sub_140A1EEE4+14154↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A33063

loc_140A33059:                          ; CODE XREF: sub_140A1EEE4+1417D↓j
                mov     [rdi], cl
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A33059

loc_140A33063:                          ; CODE XREF: sub_140A1EEE4+14173↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A330A3
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A3309A
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A330B2
; ---------------------------------------------------------------------------

loc_140A3309A:                          ; CODE XREF: sub_140A1EEE4+1419F↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A330AA
; ---------------------------------------------------------------------------

loc_140A330A3:                          ; CODE XREF: sub_140A1EEE4+1418E↑j
                mov     rax, [rbx+368h]

loc_140A330AA:                          ; CODE XREF: sub_140A1EEE4+141BD↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A330B2:                          ; CODE XREF: sub_140A1EEE4+141B4↑j
                mov     [rbx+924h], edi

loc_140A330B8:                          ; CODE XREF: sub_140A1EEE4+1412E↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                mov     r11d, 1
                jmp     short loc_140A330D0
; ---------------------------------------------------------------------------

loc_140A330C7:                          ; CODE XREF: sub_140A1EEE4+14107↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A330D0:                          ; CODE XREF: sub_140A1EEE4+141E1↑j
                add     [rbx+80Ch], r11d
                add     r14, rbx
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_16E0], r14
                mov     rax, r14
                xor     edi, edi
                lea     edx, [rcx-2Ah]

loc_140A330EF:                          ; CODE XREF: sub_140A1EEE4+14218↓j
                mov     [rax], rdi
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r11
                jnz     short loc_140A330EF
                test    ecx, ecx
                jz      short loc_140A3310D

loc_140A33102:                          ; CODE XREF: sub_140A1EEE4+14227↓j
                mov     [rax], dil
                add     rax, r11
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A33102

loc_140A3310D:                          ; CODE XREF: sub_140A1EEE4+1421C↑j
                mov     [r14], r12d
                mov     [r14+8], r15
                cmp     r13d, 7
                jnz     short loc_140A33131
                lea     r9, [r14+18h]
                mov     rdx, r15
                lea     r8d, [r13+9]
                mov     rcx, rbx
                call    sub_1403EA0CC
                lea     r11d, [r13-6]

loc_140A33131:                          ; CODE XREF: sub_140A1EEE4+14234↑j
                mov     dword ptr [r14+10h], 10h
                lea     rcx, [r15+10h]
                add     dword ptr [rbx+828h], 10h
                mov     r8, r15
                mov     r10d, [rbx+814h]
                mov     rax, r15
                mov     rdx, [rbx+818h]
                cmp     r15, rcx
                jnb     short loc_140A33169

loc_140A3315D:                          ; CODE XREF: sub_140A1EEE4+14283↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A3315D

loc_140A33169:                          ; CODE XREF: sub_140A1EEE4+14277↑j
                mov     edi, 10h
                lea     r9d, [rdi-0Eh]

loc_140A33172:                          ; CODE XREF: sub_140A1EEE4+142A1↓j
                xor     rdx, [r8]
                mov     ecx, r10d
                rol     rdx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     r9, r11
                jnz     short loc_140A33172
                test    edi, edi
                jz      short loc_140A331A0

loc_140A3318B:                          ; CODE XREF: sub_140A1EEE4+142BA↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rdx, rax
                add     r8, r11
                rol     rdx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A3318B

loc_140A331A0:                          ; CODE XREF: sub_140A1EEE4+142A5↑j
                mov     rax, rdx
                shr     rax, 1Fh
                xor     r9d, r9d
                jmp     short loc_140A331B2
; ---------------------------------------------------------------------------

loc_140A331AC:                          ; CODE XREF: sub_140A1EEE4+142D1↓j
                xor     edx, eax
                shr     rax, 1Fh

loc_140A331B2:                          ; CODE XREF: sub_140A1EEE4+142C6↑j
                test    rax, rax
                jnz     short loc_140A331AC
                btr     edx, 1Fh
                lea     r12d, [rax+20h]
                mov     [r14+14h], edx
                add     dword ptr [rbx+828h], 10h
                mov     r14, [r15+8]
                mov     r15d, [rbx+7E4h]
                mov     r13d, [rbx+838h]
                cmp     r13d, 7
                mov     r8d, [rbx+924h]
                cmovnz  r12d, r9d
                lea     eax, [r15+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A332D4
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3101C
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A332C2
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A3325D
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A3324D:                          ; CODE XREF: sub_140A1EEE4+14377↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A3324D

loc_140A3325D:                          ; CODE XREF: sub_140A1EEE4+1435E↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A3326D

loc_140A33263:                          ; CODE XREF: sub_140A1EEE4+14387↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A33263

loc_140A3326D:                          ; CODE XREF: sub_140A1EEE4+1437D↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A332AD
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A332A4
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A332BC
; ---------------------------------------------------------------------------

loc_140A332A4:                          ; CODE XREF: sub_140A1EEE4+143A9↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A332B4
; ---------------------------------------------------------------------------

loc_140A332AD:                          ; CODE XREF: sub_140A1EEE4+14398↑j
                mov     rax, [rdi+368h]

loc_140A332B4:                          ; CODE XREF: sub_140A1EEE4+143C7↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A332BC:                          ; CODE XREF: sub_140A1EEE4+143BE↑j
                mov     [rdi+924h], ebx

loc_140A332C2:                          ; CODE XREF: sub_140A1EEE4+14338↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r11d, 1
                xor     r9d, r9d
                jmp     short loc_140A332DD
; ---------------------------------------------------------------------------

loc_140A332D4:                          ; CODE XREF: sub_140A1EEE4+14311↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A332DD:                          ; CODE XREF: sub_140A1EEE4+143EE↑j
                add     [rdi+80Ch], r11d
                lea     rbx, [rdi+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_16D8], rbx
                mov     rax, rbx
                lea     edx, [rcx-2Ah]

loc_140A332FB:                          ; CODE XREF: sub_140A1EEE4+14424↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r11
                jnz     short loc_140A332FB
                test    ecx, ecx
                jz      short loc_140A33319

loc_140A3330E:                          ; CODE XREF: sub_140A1EEE4+14433↓j
                mov     [rax], r9b
                add     rax, r11
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A3330E

loc_140A33319:                          ; CODE XREF: sub_140A1EEE4+14428↑j
                mov     [rbx], r12d
                mov     [rbx+8], r14
                cmp     r13d, 7
                jnz     short loc_140A3333D
                lea     r9, [rbx+18h]
                mov     rdx, r14
                lea     r8d, [r13+1]
                mov     rcx, rdi
                call    sub_1403EA0CC
                lea     r11d, [r13-6]

loc_140A3333D:                          ; CODE XREF: sub_140A1EEE4+14440↑j
                mov     dword ptr [rbx+10h], 8
                lea     rdx, [r14+8]
                add     dword ptr [rdi+828h], 8
                mov     rax, r14
                mov     ecx, [rdi+814h]
                mov     r8, [rdi+818h]
                cmp     r14, rdx
                jnb     short loc_140A33370

loc_140A33364:                          ; CODE XREF: sub_140A1EEE4+1448A↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rdx
                jb      short loc_140A33364

loc_140A33370:                          ; CODE XREF: sub_140A1EEE4+1447E↑j
                mov     rax, [r14]
                xor     rax, r8
                rol     rax, cl
                mov     rcx, rax
                jmp     short loc_140A33380
; ---------------------------------------------------------------------------

loc_140A3337E:                          ; CODE XREF: sub_140A1EEE4+144A3↓j
                xor     eax, ecx

loc_140A33380:                          ; CODE XREF: sub_140A1EEE4+14498↑j
                shr     rcx, 1Fh
                test    rcx, rcx
                jnz     short loc_140A3337E
                mov     r13, [rsp+24B8h+var_2468]
                btr     eax, 1Fh
                mov     [rbx+14h], eax
                add     dword ptr [rdi+828h], 8

loc_140A3339C:                          ; CODE XREF: sub_140A1EEE4+140D6↑j
                mov     eax, dword ptr [rsp+24B8h+var_2460]
                add     eax, r11d
                mov     dword ptr [rsp+24B8h+var_2460], eax
                cmp     eax, 8
                jb      loc_140A32FAA

loc_140A333B0:                          ; CODE XREF: sub_140A1EEE4+140B5↑j
                mov     r15, cs:qword_140D58080
                xor     eax, eax
                test    r15, r15
                jz      loc_140A33852
                mov     r13d, [rdi+838h]
                lea     r12d, [rax+20h]
                mov     r14d, [rdi+7E4h]
                cmp     r13d, 7
                mov     r8d, [rdi+924h]
                cmovnz  r12d, eax
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A334C3
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A3101C
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A334BA
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A33455
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A33445:                          ; CODE XREF: sub_140A1EEE4+1456F↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A33445

loc_140A33455:                          ; CODE XREF: sub_140A1EEE4+14556↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A33465

loc_140A3345B:                          ; CODE XREF: sub_140A1EEE4+1457F↓j
                mov     [rdi], cl
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A3345B

loc_140A33465:                          ; CODE XREF: sub_140A1EEE4+14575↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A334A5
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A3349C
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A334B4
; ---------------------------------------------------------------------------

loc_140A3349C:                          ; CODE XREF: sub_140A1EEE4+145A1↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A334AC
; ---------------------------------------------------------------------------

loc_140A334A5:                          ; CODE XREF: sub_140A1EEE4+14590↑j
                mov     rax, [rbx+368h]

loc_140A334AC:                          ; CODE XREF: sub_140A1EEE4+145BF↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A334B4:                          ; CODE XREF: sub_140A1EEE4+145B6↑j
                mov     [rbx+924h], edi

loc_140A334BA:                          ; CODE XREF: sub_140A1EEE4+14530↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A334CC
; ---------------------------------------------------------------------------

loc_140A334C3:                          ; CODE XREF: sub_140A1EEE4+14509↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A334CC:                          ; CODE XREF: sub_140A1EEE4+145DD↑j
                add     r14, rbx
                mov     edi, 1
                add     [rbx+80Ch], edi
                mov     rax, r14
                mov     [rsp+24B8h+var_2468], r14
                xor     r8d, r8d
                mov     [rsp+24B8h+var_16D0], r14
                lea     ecx, [rdi+2Fh]
                lea     edx, [rdi+5]

loc_140A334F3:                          ; CODE XREF: sub_140A1EEE4+1461C↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rdi
                jnz     short loc_140A334F3
                test    ecx, ecx
                jz      short loc_140A33511

loc_140A33506:                          ; CODE XREF: sub_140A1EEE4+1462B↓j
                mov     [rax], r8b
                add     rax, rdi
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A33506

loc_140A33511:                          ; CODE XREF: sub_140A1EEE4+14620↑j
                mov     [r14], r12d
                cmp     r13d, 7
                mov     [r14+8], r15
                mov     r13d, 200h
                jnz     short loc_140A33536
                lea     r9, [r14+18h]
                mov     r8d, r13d
                mov     rdx, r15
                mov     rcx, rbx
                call    sub_1403EA0CC

loc_140A33536:                          ; CODE XREF: sub_140A1EEE4+1463E↑j
                mov     [r14+10h], r13d
                lea     rcx, [r15+200h]
                add     [rbx+828h], r13d
                mov     r9, r15
                mov     r8d, [rbx+814h]
                mov     rax, r15
                mov     r11, [rbx+818h]
                cmp     r15, rcx
                jnb     short loc_140A3356D

loc_140A33561:                          ; CODE XREF: sub_140A1EEE4+14687↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A33561

loc_140A3356D:                          ; CODE XREF: sub_140A1EEE4+1467B↑j
                mov     r10d, 4
                mov     rdi, r11
                mov     r14, 7010008004002001h
                lea     r12d, [r10-3]

loc_140A33584:                          ; CODE XREF: sub_140A1EEE4+146F1↓j
                mov     eax, 8

loc_140A33589:                          ; CODE XREF: sub_140A1EEE4+146BC↓j
                xor     rdi, [r9]
                mov     ecx, r8d
                rol     rdi, cl
                xor     rdi, [r9+8]
                add     r9, 10h
                rol     rdi, cl
                sub     rax, r12
                jnz     short loc_140A33589
                mov     rcx, r9
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     r8d, eax
                mov     [rsp+24B8h+var_16C8], rdx
                xor     r8d, edx
                and     r8d, 3Fh
                cmovz   r8d, r12d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A33584
                mov     r14, [rsp+24B8h+var_2468]
                mov     rax, rdi
                shr     rax, 1Fh
                mov     rsi, 0FFFFFFFFB8797400h
                xor     r9d, r9d
                jmp     short loc_140A335F5
; ---------------------------------------------------------------------------

loc_140A335EF:                          ; CODE XREF: sub_140A1EEE4+14714↓j
                xor     edi, eax
                shr     rax, 1Fh

loc_140A335F5:                          ; CODE XREF: sub_140A1EEE4+14709↑j
                test    rax, rax
                jnz     short loc_140A335EF
                btr     edi, 1Fh
                lea     r12d, [rax+20h]
                mov     [r14+14h], edi
                add     [rbx+828h], r13d
                mov     r15, cs:qword_140D58080
                mov     r14d, [rbx+7E4h]
                add     r15, 200h
                mov     r13d, [rbx+838h]
                cmp     r13d, 7
                mov     r8d, [rbx+924h]
                cmovnz  r12d, r9d
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A3371B
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A3101C
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A3370F
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A336AA
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A3369A:                          ; CODE XREF: sub_140A1EEE4+147C4↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A3369A

loc_140A336AA:                          ; CODE XREF: sub_140A1EEE4+147AB↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A336BA

loc_140A336B0:                          ; CODE XREF: sub_140A1EEE4+147D4↓j
                mov     [rbx], cl
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A336B0

loc_140A336BA:                          ; CODE XREF: sub_140A1EEE4+147CA↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A336FA
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A336F1
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A33709
; ---------------------------------------------------------------------------

loc_140A336F1:                          ; CODE XREF: sub_140A1EEE4+147F6↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A33701
; ---------------------------------------------------------------------------

loc_140A336FA:                          ; CODE XREF: sub_140A1EEE4+147E5↑j
                mov     rax, [rdi+368h]

loc_140A33701:                          ; CODE XREF: sub_140A1EEE4+14814↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A33709:                          ; CODE XREF: sub_140A1EEE4+1480B↑j
                mov     [rdi+924h], ebx

loc_140A3370F:                          ; CODE XREF: sub_140A1EEE4+14785↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                xor     r9d, r9d
                jmp     short loc_140A33724
; ---------------------------------------------------------------------------

loc_140A3371B:                          ; CODE XREF: sub_140A1EEE4+1475E↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A33724:                          ; CODE XREF: sub_140A1EEE4+14835↑j
                mov     ebx, 1
                add     [rdi+80Ch], ebx
                add     r14, rdi
                mov     [rsp+24B8h+var_2468], r14
                mov     rax, r14
                mov     [rsp+24B8h+var_16C0], r14
                lea     ecx, [rbx+2Fh]
                lea     edx, [rbx+5]

loc_140A33748:                          ; CODE XREF: sub_140A1EEE4+14871↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rbx
                jnz     short loc_140A33748
                test    ecx, ecx
                jz      short loc_140A33766

loc_140A3375B:                          ; CODE XREF: sub_140A1EEE4+14880↓j
                mov     [rax], r9b
                add     rax, rbx
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A3375B

loc_140A33766:                          ; CODE XREF: sub_140A1EEE4+14875↑j
                mov     [r14], r12d
                mov     r12d, 200h
                mov     [r14+8], r15
                cmp     r13d, 7
                jnz     short loc_140A3378B
                lea     r9, [r14+18h]
                mov     r8d, r12d
                mov     rdx, r15
                mov     rcx, rdi
                call    sub_1403EA0CC

loc_140A3378B:                          ; CODE XREF: sub_140A1EEE4+14893↑j
                mov     [r14+10h], r12d
                lea     rcx, [r15+200h]
                add     [rdi+828h], r12d
                mov     r9, r15
                mov     r8d, [rdi+814h]
                mov     rax, r15
                mov     r11, [rdi+818h]
                cmp     r15, rcx
                jnb     short loc_140A337C2

loc_140A337B6:                          ; CODE XREF: sub_140A1EEE4+148DC↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A337B6

loc_140A337C2:                          ; CODE XREF: sub_140A1EEE4+148D0↑j
                mov     r10d, 4
                mov     rbx, r11
                mov     r14, 7010008004002001h
                lea     r13d, [r10-3]

loc_140A337D9:                          ; CODE XREF: sub_140A1EEE4+14946↓j
                mov     eax, 8

loc_140A337DE:                          ; CODE XREF: sub_140A1EEE4+14911↓j
                xor     rbx, [r9]
                mov     ecx, r8d
                rol     rbx, cl
                xor     rbx, [r9+8]
                add     r9, 10h
                rol     rbx, cl
                sub     rax, r13
                jnz     short loc_140A337DE
                mov     rcx, r9
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     r8d, eax
                mov     [rsp+24B8h+var_16B8], rdx
                xor     r8d, edx
                and     r8d, 3Fh
                cmovz   r8d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A337D9
                mov     r14, [rsp+24B8h+var_2468]
                mov     rax, rbx
                jmp     short loc_140A33838
; ---------------------------------------------------------------------------

loc_140A33836:                          ; CODE XREF: sub_140A1EEE4+1495B↓j
                xor     ebx, eax

loc_140A33838:                          ; CODE XREF: sub_140A1EEE4+14950↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A33836
                btr     ebx, 1Fh
                mov     [r14+14h], ebx
                add     [rdi+828h], r12d
                jmp     short loc_140A33858
; ---------------------------------------------------------------------------

loc_140A33852:                          ; CODE XREF: sub_140A1EEE4+144D8↑j
                mov     r13d, 1

loc_140A33858:                          ; CODE XREF: sub_140A1EEE4+1496C↑j
                mov     ecx, dword ptr [rsp+24B8h+var_2458]
                mov     eax, cs:dword_140CFC404
                add     ecx, r13d
                mov     dword ptr [rsp+24B8h+var_2458], ecx
                cmp     ecx, eax
                jb      loc_140A312CC

loc_140A33871:                          ; CODE XREF: sub_140A1EEE4+122B6↑j
                                        ; sub_140A1EEE4+123E2↑j
                xor     eax, eax

loc_140A33873:                          ; CODE XREF: sub_140A1EEE4+12141↑j
                                        ; sub_140A1EEE4+149A5↓j
                mov     [rsp+24B8h+var_1B80], rdi
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A3388B

loc_140A33884:                          ; CODE XREF: sub_140A1EEE4:loc_140A33884↓j
                jmp     short loc_140A33884
; ---------------------------------------------------------------------------

loc_140A33886:                          ; CODE XREF: sub_140A1EEE4+1267F↑j
                mov     rdi, rax
                jmp     short loc_140A33873
; ---------------------------------------------------------------------------

loc_140A3388B:                          ; CODE XREF: sub_140A1EEE4+1499E↑j
                sti
                test    rdi, rdi
                jz      loc_140A237B3
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A338A0

loc_140A3389E:                          ; CODE XREF: sub_140A1EEE4:loc_140A3389E↓j
                jmp     short loc_140A3389E
; ---------------------------------------------------------------------------

loc_140A338A0:                          ; CODE XREF: sub_140A1EEE4+149B8↑j
                sti
                mov     r14d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A3398E
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                mov     rbx, rax
                xor     eax, eax
                test    rbx, rbx
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A33985
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A33920
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A33911:                          ; CODE XREF: sub_140A1EEE4+14A3A↓j
                mov     [rdi], r10
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A33911

loc_140A33920:                          ; CODE XREF: sub_140A1EEE4+14A22↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A33930

loc_140A33926:                          ; CODE XREF: sub_140A1EEE4+14A4A↓j
                mov     [rdi], cl
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A33926

loc_140A33930:                          ; CODE XREF: sub_140A1EEE4+14A40↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A33970
                test    dword ptr [rbx+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A33967
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A3397F
; ---------------------------------------------------------------------------

loc_140A33967:                          ; CODE XREF: sub_140A1EEE4+14A6C↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A33977
; ---------------------------------------------------------------------------

loc_140A33970:                          ; CODE XREF: sub_140A1EEE4+14A5B↑j
                mov     rax, [rbx+368h]

loc_140A33977:                          ; CODE XREF: sub_140A1EEE4+14A8A↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A3397F:                          ; CODE XREF: sub_140A1EEE4+14A81↑j
                mov     [rbx+924h], edi

loc_140A33985:                          ; CODE XREF: sub_140A1EEE4+149FC↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A33997
; ---------------------------------------------------------------------------

loc_140A3398E:                          ; CODE XREF: sub_140A1EEE4+149D5↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A33997:                          ; CODE XREF: sub_140A1EEE4+14AA8↑j
                add     [rbx+80Ch], r13d
                lea     rdx, [rbx+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_16B0], rdx
                mov     rax, rdx
                xor     r8d, r8d
                lea     r15d, [rcx-2Ah]
                mov     edi, r15d

loc_140A339BC:                          ; CODE XREF: sub_140A1EEE4+14AE5↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdi, r13
                jnz     short loc_140A339BC
                or      r12d, 0FFFFFFFFh
                test    ecx, ecx
                jz      short loc_140A339DE

loc_140A339D3:                          ; CODE XREF: sub_140A1EEE4+14AF8↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, r12d
                jnz     short loc_140A339D3

loc_140A339DE:                          ; CODE XREF: sub_140A1EEE4+14AED↑j
                xor     eax, eax
                mov     dword ptr [rdx], 1Ah
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A339FB
; ---------------------------------------------------------------------------

loc_140A339F9:                          ; CODE XREF: sub_140A1EEE4+14B1E↓j
                xor     ecx, eax

loc_140A339FB:                          ; CODE XREF: sub_140A1EEE4+14B13↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A339F9
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rdx+14h], ecx
                cli
                cmp     cs:KdDebuggerNotPresent, al
                jnz     short loc_140A33A1E

loc_140A33A1C:                          ; CODE XREF: sub_140A1EEE4:loc_140A33A1C↓j
                jmp     short loc_140A33A1C
; ---------------------------------------------------------------------------

loc_140A33A1E:                          ; CODE XREF: sub_140A1EEE4+14B36↑j
                sti
                mov     r14d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A33B0C
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A33B03
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A33A9E
                mov     ecx, eax
                shr     rcx, 3
                xor     r10d, r10d

loc_140A33A8F:                          ; CODE XREF: sub_140A1EEE4+14BB8↓j
                mov     [rbx], r10
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A33A8F

loc_140A33A9E:                          ; CODE XREF: sub_140A1EEE4+14BA0↑j
                xor     ecx, ecx
                test    eax, eax
                jz      short loc_140A33AAE

loc_140A33AA4:                          ; CODE XREF: sub_140A1EEE4+14BC8↓j
                mov     [rbx], cl
                add     rbx, r13
                add     eax, r12d
                jnz     short loc_140A33AA4

loc_140A33AAE:                          ; CODE XREF: sub_140A1EEE4+14BBE↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A33AEE
                test    dword ptr [rdi+990h], 10000000h
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A33AE5
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A33AFD
; ---------------------------------------------------------------------------

loc_140A33AE5:                          ; CODE XREF: sub_140A1EEE4+14BEA↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A33AF5
; ---------------------------------------------------------------------------

loc_140A33AEE:                          ; CODE XREF: sub_140A1EEE4+14BD9↑j
                mov     rax, [rdi+368h]

loc_140A33AF5:                          ; CODE XREF: sub_140A1EEE4+14C08↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A33AFD:                          ; CODE XREF: sub_140A1EEE4+14BFF↑j
                mov     [rdi+924h], ebx

loc_140A33B03:                          ; CODE XREF: sub_140A1EEE4+14B7A↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A33B15
; ---------------------------------------------------------------------------

loc_140A33B0C:                          ; CODE XREF: sub_140A1EEE4+14B53↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A33B15:                          ; CODE XREF: sub_140A1EEE4+14C26↑j
                add     [rdi+80Ch], r13d
                lea     rdx, [rdi+r14]
                mov     [rsp+24B8h+var_16A8], rdx
                mov     rax, rdx
                xor     r8d, r8d
                mov     ecx, 30h ; '0'
                mov     rbx, r15

loc_140A33B36:                          ; CODE XREF: sub_140A1EEE4+14C5F↓j
                mov     [rax], r8
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A33B36
                test    ecx, ecx
                jz      short loc_140A33B54

loc_140A33B49:                          ; CODE XREF: sub_140A1EEE4+14C6E↓j
                mov     [rax], r8b
                add     rax, r13
                add     ecx, r12d
                jnz     short loc_140A33B49

loc_140A33B54:                          ; CODE XREF: sub_140A1EEE4+14C63↑j
                xor     eax, eax
                mov     dword ptr [rdx], 1Bh
                mov     [rdx+8], rax
                mov     [rdx+10h], eax
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                shr     rax, 1Fh
                xor     r9d, r9d
                jmp     short loc_140A33B7C
; ---------------------------------------------------------------------------

loc_140A33B76:                          ; CODE XREF: sub_140A1EEE4+14C9B↓j
                xor     ecx, eax
                shr     rax, 1Fh

loc_140A33B7C:                          ; CODE XREF: sub_140A1EEE4+14C90↑j
                test    rax, rax
                jnz     short loc_140A33B76
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], rdi
                mov     [rdx+14h], ecx
                lea     r15d, [rax+20h]
                mov     r14d, [rdi+7E4h]
                mov     r12d, [rdi+838h]
                cmp     r12d, 7
                mov     r8d, [rdi+924h]
                cmovnz  r15d, r9d
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A33C93
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                xor     r9d, r9d
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A33C8A
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A33C20
                mov     ecx, eax
                shr     rcx, 3

loc_140A33C11:                          ; CODE XREF: sub_140A1EEE4+14D3A↓j
                mov     [rdi], r9
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A33C11

loc_140A33C20:                          ; CODE XREF: sub_140A1EEE4+14D25↑j
                test    eax, eax
                jz      short loc_140A33C2F

loc_140A33C24:                          ; CODE XREF: sub_140A1EEE4+14D49↓j
                mov     [rdi], r9b
                add     rdi, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A33C24

loc_140A33C2F:                          ; CODE XREF: sub_140A1EEE4+14D3E↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A33C72
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A33C69
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A33C81
; ---------------------------------------------------------------------------

loc_140A33C69:                          ; CODE XREF: sub_140A1EEE4+14D6E↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A33C79
; ---------------------------------------------------------------------------

loc_140A33C72:                          ; CODE XREF: sub_140A1EEE4+14D5A↑j
                mov     rax, [rbx+368h]

loc_140A33C79:                          ; CODE XREF: sub_140A1EEE4+14D8C↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A33C81:                          ; CODE XREF: sub_140A1EEE4+14D83↑j
                mov     [rbx+924h], edi
                xor     r9d, r9d

loc_140A33C8A:                          ; CODE XREF: sub_140A1EEE4+14CFF↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A33C9C
; ---------------------------------------------------------------------------

loc_140A33C93:                          ; CODE XREF: sub_140A1EEE4+14CD7↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A33C9C:                          ; CODE XREF: sub_140A1EEE4+14DAD↑j
                add     [rbx+80Ch], r13d
                lea     rdi, [rbx+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_16A0], rdi
                mov     rax, rdi
                lea     edx, [rcx-2Ah]

loc_140A33CBA:                          ; CODE XREF: sub_140A1EEE4+14DE3↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r13
                jnz     short loc_140A33CBA
                test    ecx, ecx
                jz      short loc_140A33CD8

loc_140A33CCD:                          ; CODE XREF: sub_140A1EEE4+14DF2↓j
                mov     [rax], r9b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A33CCD

loc_140A33CD8:                          ; CODE XREF: sub_140A1EEE4+14DE7↑j
                mov     [rdi], r15d
                lea     rdx, byte_140E01840
                mov     [rdi+8], rdx
                cmp     r12d, 7
                jnz     short loc_140A33CFE
                lea     r9, [rdi+18h]
                mov     r8d, r13d
                mov     rcx, rbx
                call    sub_1403EA0CC
                xor     r9d, r9d

loc_140A33CFE:                          ; CODE XREF: sub_140A1EEE4+14E06↑j
                mov     [rdi+10h], r13d
                add     [rbx+828h], r13d
                mov     ecx, [rbx+814h]
                prefetchnta cs:byte_140E01840
                movzx   edx, cs:byte_140E01840
                xor     rdx, [rbx+818h]
                rol     rdx, cl
                mov     rax, rdx
                jmp     short loc_140A33D2E
; ---------------------------------------------------------------------------

loc_140A33D2C:                          ; CODE XREF: sub_140A1EEE4+14E51↓j
                xor     edx, eax

loc_140A33D2E:                          ; CODE XREF: sub_140A1EEE4+14E46↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A33D2C
                btr     edx, 1Fh
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rdi+14h], edx
                add     [rbx+828h], r13d
                test    byte ptr [rbx+87Bh], 8
                jz      loc_140A33ED3
                cli
                cmp     cs:KdDebuggerNotPresent, r9b
                jnz     short loc_140A33D66

loc_140A33D64:                          ; CODE XREF: sub_140A1EEE4:loc_140A33D64↓j
                jmp     short loc_140A33D64
; ---------------------------------------------------------------------------

loc_140A33D66:                          ; CODE XREF: sub_140A1EEE4+14E7E↑j
                sti
                mov     r14d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A33E57
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r9d, r9d
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A33E4E
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A33DE4
                mov     ecx, eax
                shr     rcx, 3

loc_140A33DD5:                          ; CODE XREF: sub_140A1EEE4+14EFE↓j
                mov     [rbx], r9
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A33DD5

loc_140A33DE4:                          ; CODE XREF: sub_140A1EEE4+14EE9↑j
                test    eax, eax
                jz      short loc_140A33DF3

loc_140A33DE8:                          ; CODE XREF: sub_140A1EEE4+14F0D↓j
                mov     [rbx], r9b
                add     rbx, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A33DE8

loc_140A33DF3:                          ; CODE XREF: sub_140A1EEE4+14F02↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A33E36
                test    dword ptr [rdi+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A33E2D
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A33E45
; ---------------------------------------------------------------------------

loc_140A33E2D:                          ; CODE XREF: sub_140A1EEE4+14F32↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A33E3D
; ---------------------------------------------------------------------------

loc_140A33E36:                          ; CODE XREF: sub_140A1EEE4+14F1E↑j
                mov     rax, [rdi+368h]

loc_140A33E3D:                          ; CODE XREF: sub_140A1EEE4+14F50↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A33E45:                          ; CODE XREF: sub_140A1EEE4+14F47↑j
                mov     [rdi+924h], ebx
                xor     r9d, r9d

loc_140A33E4E:                          ; CODE XREF: sub_140A1EEE4+14EC3↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A33E60
; ---------------------------------------------------------------------------

loc_140A33E57:                          ; CODE XREF: sub_140A1EEE4+14E9B↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A33E60:                          ; CODE XREF: sub_140A1EEE4+14F71↑j
                add     [rdi+80Ch], r13d
                lea     rdx, [rdi+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1698], rdx
                mov     rax, rdx
                lea     ebx, [rcx-2Ah]

loc_140A33E7E:                          ; CODE XREF: sub_140A1EEE4+14FA7↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A33E7E
                test    ecx, ecx
                jz      short loc_140A33E9C

loc_140A33E91:                          ; CODE XREF: sub_140A1EEE4+14FB6↓j
                mov     [rax], r9b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A33E91

loc_140A33E9C:                          ; CODE XREF: sub_140A1EEE4+14FAB↑j
                mov     dword ptr [rdx], 2Fh ; '/'
                mov     [rdx+8], r9
                mov     [rdx+10h], r9d
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A33EB8
; ---------------------------------------------------------------------------

loc_140A33EB6:                          ; CODE XREF: sub_140A1EEE4+14FDB↓j
                xor     ecx, eax

loc_140A33EB8:                          ; CODE XREF: sub_140A1EEE4+14FD0↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A33EB6
                btr     ecx, 1Fh
                mov     rbx, rdi
                mov     [rdx+14h], ecx
                mov     [rsp+24B8h+var_1B80], rbx

loc_140A33ED3:                          ; CODE XREF: sub_140A1EEE4+14E70↑j
                cli
                cmp     cs:KdDebuggerNotPresent, r9b
                jnz     short loc_140A33EDF

loc_140A33EDD:                          ; CODE XREF: sub_140A1EEE4:loc_140A33EDD↓j
                jmp     short loc_140A33EDD
; ---------------------------------------------------------------------------

loc_140A33EDF:                          ; CODE XREF: sub_140A1EEE4+14FF7↑j
                sti
                mov     r14d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A33FD0
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r9d, r9d
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A33FC7
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A33F5D
                mov     ecx, eax
                shr     rcx, 3

loc_140A33F4E:                          ; CODE XREF: sub_140A1EEE4+15077↓j
                mov     [rbx], r9
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A33F4E

loc_140A33F5D:                          ; CODE XREF: sub_140A1EEE4+15062↑j
                test    eax, eax
                jz      short loc_140A33F6C

loc_140A33F61:                          ; CODE XREF: sub_140A1EEE4+15086↓j
                mov     [rbx], r9b
                add     rbx, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A33F61

loc_140A33F6C:                          ; CODE XREF: sub_140A1EEE4+1507B↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A33FAF
                test    dword ptr [rdi+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A33FA6
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A33FBE
; ---------------------------------------------------------------------------

loc_140A33FA6:                          ; CODE XREF: sub_140A1EEE4+150AB↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A33FB6
; ---------------------------------------------------------------------------

loc_140A33FAF:                          ; CODE XREF: sub_140A1EEE4+15097↑j
                mov     rax, [rdi+368h]

loc_140A33FB6:                          ; CODE XREF: sub_140A1EEE4+150C9↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A33FBE:                          ; CODE XREF: sub_140A1EEE4+150C0↑j
                mov     [rdi+924h], ebx
                xor     r9d, r9d

loc_140A33FC7:                          ; CODE XREF: sub_140A1EEE4+1503C↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A33FD9
; ---------------------------------------------------------------------------

loc_140A33FD0:                          ; CODE XREF: sub_140A1EEE4+15014↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A33FD9:                          ; CODE XREF: sub_140A1EEE4+150EA↑j
                add     [rdi+80Ch], r13d
                lea     rdx, [rdi+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1690], rdx
                mov     rax, rdx
                lea     ebx, [rcx-2Ah]

loc_140A33FF7:                          ; CODE XREF: sub_140A1EEE4+15120↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A33FF7
                test    ecx, ecx
                jz      short loc_140A34015

loc_140A3400A:                          ; CODE XREF: sub_140A1EEE4+1512F↓j
                mov     [rax], r9b
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A3400A

loc_140A34015:                          ; CODE XREF: sub_140A1EEE4+15124↑j
                mov     dword ptr [rdx], 2Eh ; '.'
                mov     [rdx+8], r9
                mov     [rdx+10h], r9d
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A34031
; ---------------------------------------------------------------------------

loc_140A3402F:                          ; CODE XREF: sub_140A1EEE4+15154↓j
                xor     ecx, eax

loc_140A34031:                          ; CODE XREF: sub_140A1EEE4+15149↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A3402F
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], rdi
                mov     [rdx+14h], ecx
                mov     eax, cs:dword_140D58638
                test    al, 2
                jz      loc_140A3424F
                mov     rax, [rdi+630h]
                mov     r12d, 20h ; ' '
                mov     rcx, [rdi+7C0h]
                mov     [rcx+rax], r9
                mov     r14, [rdi+7C0h]
                add     r14, [rdi+630h]
                mov     r15d, [rdi+7E4h]
                mov     r13d, [rdi+838h]
                cmp     r13d, 7
                mov     r8d, [rdi+924h]
                cmovnz  r12d, r9d
                lea     eax, [r15+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A3417D
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                xor     r9d, r9d
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A34174
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A3410A
                mov     ecx, eax
                shr     rcx, 3

loc_140A340FA:                          ; CODE XREF: sub_140A1EEE4+15224↓j
                mov     [rdi], r9
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A340FA

loc_140A3410A:                          ; CODE XREF: sub_140A1EEE4+1520E↑j
                test    eax, eax
                jz      short loc_140A34119

loc_140A3410E:                          ; CODE XREF: sub_140A1EEE4+15233↓j
                mov     [rdi], r9b
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A3410E

loc_140A34119:                          ; CODE XREF: sub_140A1EEE4+15228↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A3415C
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A34153
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A3416B
; ---------------------------------------------------------------------------

loc_140A34153:                          ; CODE XREF: sub_140A1EEE4+15258↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A34163
; ---------------------------------------------------------------------------

loc_140A3415C:                          ; CODE XREF: sub_140A1EEE4+15244↑j
                mov     rax, [rbx+368h]

loc_140A34163:                          ; CODE XREF: sub_140A1EEE4+15276↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A3416B:                          ; CODE XREF: sub_140A1EEE4+1526D↑j
                mov     [rbx+924h], edi
                xor     r9d, r9d

loc_140A34174:                          ; CODE XREF: sub_140A1EEE4+151E8↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A34186
; ---------------------------------------------------------------------------

loc_140A3417D:                          ; CODE XREF: sub_140A1EEE4+151C0↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A34186:                          ; CODE XREF: sub_140A1EEE4+15297↑j
                mov     r8d, 1
                lea     rdi, [rbx+r15]
                add     [rbx+80Ch], r8d
                mov     rax, rdi
                mov     [rsp+24B8h+var_1688], rdi
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A341A9:                          ; CODE XREF: sub_140A1EEE4+152D2↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A341A9
                test    ecx, ecx
                jz      short loc_140A341C7

loc_140A341BC:                          ; CODE XREF: sub_140A1EEE4+152E1↓j
                mov     [rax], r9b
                add     rax, r8
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A341BC

loc_140A341C7:                          ; CODE XREF: sub_140A1EEE4+152D6↑j
                mov     [rdi], r12d
                mov     [rdi+8], r14
                cmp     r13d, 7
                jnz     short loc_140A341EA
                lea     r9, [rdi+18h]
                mov     rdx, r14
                lea     r8d, [r13+1]
                mov     rcx, rbx
                call    sub_1403EA0CC
                xor     r9d, r9d

loc_140A341EA:                          ; CODE XREF: sub_140A1EEE4+152EE↑j
                mov     dword ptr [rdi+10h], 8
                lea     rdx, [r14+8]
                add     dword ptr [rbx+828h], 8
                mov     rax, r14
                mov     ecx, [rbx+814h]
                mov     r8, [rbx+818h]
                cmp     r14, rdx
                jnb     short loc_140A3421D

loc_140A34211:                          ; CODE XREF: sub_140A1EEE4+15337↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rdx
                jb      short loc_140A34211

loc_140A3421D:                          ; CODE XREF: sub_140A1EEE4+1532B↑j
                mov     rax, [r14]
                xor     rax, r8
                rol     rax, cl
                mov     rcx, rax
                jmp     short loc_140A3422D
; ---------------------------------------------------------------------------

loc_140A3422B:                          ; CODE XREF: sub_140A1EEE4+15350↓j
                xor     eax, ecx

loc_140A3422D:                          ; CODE XREF: sub_140A1EEE4+15345↑j
                shr     rcx, 1Fh
                test    rcx, rcx
                jnz     short loc_140A3422B
                btr     eax, 1Fh
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rdi+14h], eax
                mov     rdi, rbx
                add     dword ptr [rbx+828h], 8

loc_140A3424F:                          ; CODE XREF: sub_140A1EEE4+1516D↑j
                mov     eax, cs:dword_140D58638
                test    al, 4
                jz      loc_140A3444B
                mov     rax, [rdi+7C0h]
                mov     r12d, 20h ; ' '
                mov     [rax+80h], r9
                mov     r14, [rdi+7C0h]
                mov     r15d, [rdi+7E4h]
                sub     r14, 0FFFFFFFFFFFFFF80h
                mov     r13d, [rdi+838h]
                cmp     r13d, 7
                mov     r8d, [rdi+924h]
                cmovnz  r12d, r9d
                lea     eax, [r15+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A3437C
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                xor     r9d, r9d
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A34373
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A34309
                mov     ecx, eax
                shr     rcx, 3

loc_140A342F9:                          ; CODE XREF: sub_140A1EEE4+15423↓j
                mov     [rdi], r9
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A342F9

loc_140A34309:                          ; CODE XREF: sub_140A1EEE4+1540D↑j
                test    eax, eax
                jz      short loc_140A34318

loc_140A3430D:                          ; CODE XREF: sub_140A1EEE4+15432↓j
                mov     [rdi], r9b
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A3430D

loc_140A34318:                          ; CODE XREF: sub_140A1EEE4+15427↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A3435B
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A34352
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A3436A
; ---------------------------------------------------------------------------

loc_140A34352:                          ; CODE XREF: sub_140A1EEE4+15457↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A34362
; ---------------------------------------------------------------------------

loc_140A3435B:                          ; CODE XREF: sub_140A1EEE4+15443↑j
                mov     rax, [rbx+368h]

loc_140A34362:                          ; CODE XREF: sub_140A1EEE4+15475↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A3436A:                          ; CODE XREF: sub_140A1EEE4+1546C↑j
                mov     [rbx+924h], edi
                xor     r9d, r9d

loc_140A34373:                          ; CODE XREF: sub_140A1EEE4+153E7↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A34385
; ---------------------------------------------------------------------------

loc_140A3437C:                          ; CODE XREF: sub_140A1EEE4+153BF↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A34385:                          ; CODE XREF: sub_140A1EEE4+15496↑j
                mov     r8d, 1
                lea     rdi, [rbx+r15]
                add     [rbx+80Ch], r8d
                mov     rax, rdi
                mov     [rsp+24B8h+var_1680], rdi
                lea     ecx, [r8+2Fh]
                lea     edx, [rcx-2Ah]

loc_140A343A8:                          ; CODE XREF: sub_140A1EEE4+154D1↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, r8
                jnz     short loc_140A343A8
                test    ecx, ecx
                jz      short loc_140A343C6

loc_140A343BB:                          ; CODE XREF: sub_140A1EEE4+154E0↓j
                mov     [rax], r9b
                add     rax, r8
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A343BB

loc_140A343C6:                          ; CODE XREF: sub_140A1EEE4+154D5↑j
                mov     [rdi], r12d
                mov     [rdi+8], r14
                cmp     r13d, 7
                jnz     short loc_140A343E9
                lea     r9, [rdi+18h]
                mov     rdx, r14
                lea     r8d, [r13+1]
                mov     rcx, rbx
                call    sub_1403EA0CC
                xor     r9d, r9d

loc_140A343E9:                          ; CODE XREF: sub_140A1EEE4+154ED↑j
                mov     dword ptr [rdi+10h], 8
                lea     r8, [r14+8]
                add     dword ptr [rbx+828h], 8
                mov     rdx, r14
                mov     ecx, [rbx+814h]
                mov     rax, [rbx+818h]
                cmp     r14, r8
                jnb     short loc_140A3441C

loc_140A34410:                          ; CODE XREF: sub_140A1EEE4+15536↓j
                prefetchnta byte ptr [rdx]
                add     rdx, 40h ; '@'
                cmp     rdx, r8
                jb      short loc_140A34410

loc_140A3441C:                          ; CODE XREF: sub_140A1EEE4+1552A↑j
                xor     rax, [r14]
                rol     rax, cl
                mov     rcx, rax
                jmp     short loc_140A34429
; ---------------------------------------------------------------------------

loc_140A34427:                          ; CODE XREF: sub_140A1EEE4+1554C↓j
                xor     eax, ecx

loc_140A34429:                          ; CODE XREF: sub_140A1EEE4+15541↑j
                shr     rcx, 1Fh
                test    rcx, rcx
                jnz     short loc_140A34427
                btr     eax, 1Fh
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rdi+14h], eax
                mov     rdi, rbx
                add     dword ptr [rbx+828h], 8

loc_140A3444B:                          ; CODE XREF: sub_140A1EEE4+15373↑j
                mov     r14d, [rdi+7E4h]
                mov     r15d, 20h ; ' '
                mov     r12d, [rdi+838h]
                cmp     r12d, 7
                mov     r8d, [rdi+924h]
                cmovnz  r15d, r9d
                lea     eax, [r14+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A34551
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                xor     r9d, r9d
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A34548
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     r8, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A344DE
                mov     ecx, eax
                shr     rcx, 3

loc_140A344CE:                          ; CODE XREF: sub_140A1EEE4+155F8↓j
                mov     [rdi], r9
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, 1
                jnz     short loc_140A344CE

loc_140A344DE:                          ; CODE XREF: sub_140A1EEE4+155E2↑j
                test    eax, eax
                jz      short loc_140A344ED

loc_140A344E2:                          ; CODE XREF: sub_140A1EEE4+15607↓j
                mov     [rdi], r9b
                inc     rdi
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A344E2

loc_140A344ED:                          ; CODE XREF: sub_140A1EEE4+155FC↑j
                mov     edi, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A34530
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r9d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A34527
                mov     rax, [rbx+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A3453F
; ---------------------------------------------------------------------------

loc_140A34527:                          ; CODE XREF: sub_140A1EEE4+1562C↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A34537
; ---------------------------------------------------------------------------

loc_140A34530:                          ; CODE XREF: sub_140A1EEE4+15618↑j
                mov     rax, [rbx+368h]

loc_140A34537:                          ; CODE XREF: sub_140A1EEE4+1564A↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A3453F:                          ; CODE XREF: sub_140A1EEE4+15641↑j
                mov     [rbx+924h], edi
                xor     r9d, r9d

loc_140A34548:                          ; CODE XREF: sub_140A1EEE4+155BC↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                jmp     short loc_140A3455A
; ---------------------------------------------------------------------------

loc_140A34551:                          ; CODE XREF: sub_140A1EEE4+15594↑j
                mov     rbx, rdi
                mov     [rdi+7E4h], eax

loc_140A3455A:                          ; CODE XREF: sub_140A1EEE4+1566B↑j
                mov     edi, 1
                add     [rbx+80Ch], edi
                add     r14, rbx
                mov     [rsp+24B8h+var_1678], r14
                mov     rax, r14
                lea     ecx, [rdi+2Fh]
                lea     edx, [rdi+5]

loc_140A34579:                          ; CODE XREF: sub_140A1EEE4+156A2↓j
                mov     [rax], r9
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdx, rdi
                jnz     short loc_140A34579
                test    ecx, ecx
                jz      short loc_140A34597

loc_140A3458C:                          ; CODE XREF: sub_140A1EEE4+156B1↓j
                mov     [rax], r9b
                add     rax, rdi
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A3458C

loc_140A34597:                          ; CODE XREF: sub_140A1EEE4+156A6↑j
                mov     [r14], r15d
                lea     r15, qword_140034190
                mov     [r14+8], r15
                mov     r13d, 140h
                cmp     r12d, 7
                jnz     short loc_140A345C3
                lea     r9, [r14+18h]
                mov     r8d, r13d
                mov     rdx, r15
                mov     rcx, rbx
                call    sub_1403EA0CC

loc_140A345C3:                          ; CODE XREF: sub_140A1EEE4+156CB↑j
                mov     [r14+10h], r13d
                mov     r8, r15
                add     [rbx+828h], r13d
                mov     rax, r15
                mov     r9d, [rbx+814h]
                mov     r11, [rbx+818h]

loc_140A345E2:                          ; CODE XREF: sub_140A1EEE4+1570F↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                lea     rcx, aVerifierextSys ; "VerifierExt.sys"
                cmp     rax, rcx
                jb      short loc_140A345E2
                mov     r10d, 2
                mov     rdi, r11
                mov     r13, 7010008004002001h
                lea     r12d, [r10-1]

loc_140A3460C:                          ; CODE XREF: sub_140A1EEE4+15779↓j
                mov     eax, 8

loc_140A34611:                          ; CODE XREF: sub_140A1EEE4+15744↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                xor     rdi, [r8+8]
                add     r8, 10h
                rol     rdi, cl
                sub     rax, r12
                jnz     short loc_140A34611
                mov     rcx, r8
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1670], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r12d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A3460C
                lea     edx, [r10+40h]
                mov     rsi, 0FFFFFFFFB8797400h
                lea     eax, [rdx-38h]
                mov     r15d, 0FFFFFFF8h
                mov     r13d, 140h

loc_140A34679:                          ; CODE XREF: sub_140A1EEE4+157A8↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                add     r8, 8
                add     edx, r15d
                sub     rax, r12
                jnz     short loc_140A34679
                xor     r11d, r11d
                test    edx, edx
                jz      short loc_140A346AA

loc_140A34695:                          ; CODE XREF: sub_140A1EEE4+157C4↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rdi, rax
                add     r8, r12
                rol     rdi, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A34695

loc_140A346AA:                          ; CODE XREF: sub_140A1EEE4+157AF↑j
                mov     rax, rdi
                jmp     short loc_140A346B1
; ---------------------------------------------------------------------------

loc_140A346AF:                          ; CODE XREF: sub_140A1EEE4+157D4↓j
                xor     edi, eax

loc_140A346B1:                          ; CODE XREF: sub_140A1EEE4+157C9↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A346AF
                btr     edi, 1Fh
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [r14+14h], edi
                add     [rbx+828h], r13d
                test    dword ptr [rbx+990h], 40000000h
                mov     dword ptr [rsp+24B8h+var_2450], r11d
                mov     dword ptr [rsp+24B8h+var_2458], r11d
                jnz     loc_140A349A2
                mov     r13d, [rbx+7E4h]
                mov     r9d, dword ptr [rsp+24B8h+var_23D8]
                mov     r14d, r13d
                mov     r8d, [rbx+924h]
                sub     r14d, r9d
                mov     dword ptr [rsp+24B8h+var_2450], r13d
                lea     eax, [r13+30h]
                mov     dword ptr [rsp+24B8h+var_2458], r14d
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A347FB
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A347EA
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A34780
                mov     ecx, eax
                shr     rcx, 3

loc_140A34771:                          ; CODE XREF: sub_140A1EEE4+1589A↓j
                mov     [rbx], r11
                add     eax, r15d
                add     rbx, 8
                sub     rcx, r12
                jnz     short loc_140A34771

loc_140A34780:                          ; CODE XREF: sub_140A1EEE4+15885↑j
                test    eax, eax
                jz      short loc_140A3478F

loc_140A34784:                          ; CODE XREF: sub_140A1EEE4+158A9↓j
                mov     [rbx], r11b
                add     rbx, r12
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A34784

loc_140A3478F:                          ; CODE XREF: sub_140A1EEE4+1589E↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A347D2
                test    dword ptr [rdi+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A347C9
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A347E1
; ---------------------------------------------------------------------------

loc_140A347C9:                          ; CODE XREF: sub_140A1EEE4+158CE↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A347D9
; ---------------------------------------------------------------------------

loc_140A347D2:                          ; CODE XREF: sub_140A1EEE4+158BA↑j
                mov     rax, [rdi+368h]

loc_140A347D9:                          ; CODE XREF: sub_140A1EEE4+158EC↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A347E1:                          ; CODE XREF: sub_140A1EEE4+158E3↑j
                mov     [rdi+924h], ebx
                xor     r11d, r11d

loc_140A347EA:                          ; CODE XREF: sub_140A1EEE4+1585F↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_23D8]
                jmp     short loc_140A34804
; ---------------------------------------------------------------------------

loc_140A347FB:                          ; CODE XREF: sub_140A1EEE4+15837↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A34804:                          ; CODE XREF: sub_140A1EEE4+15915↑j
                add     [rdi+80Ch], r12d
                lea     rdx, [rdi+r13]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1668], rdx
                mov     rax, rdx
                lea     ebx, [rcx-2Ah]

loc_140A34822:                          ; CODE XREF: sub_140A1EEE4+1594B↓j
                mov     [rax], r11
                add     ecx, r15d
                add     rax, 8
                sub     rbx, r12
                jnz     short loc_140A34822
                or      r13d, 0FFFFFFFFh
                test    ecx, ecx
                jz      short loc_140A34844

loc_140A34839:                          ; CODE XREF: sub_140A1EEE4+1595E↓j
                mov     [rax], r11b
                add     rax, r12
                add     ecx, r13d
                jnz     short loc_140A34839

loc_140A34844:                          ; CODE XREF: sub_140A1EEE4+15953↑j
                mov     dword ptr [rdx], 2Ah ; '*'
                mov     [rdx+8], r11
                mov     [rdx+10h], r11d
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A34860
; ---------------------------------------------------------------------------

loc_140A3485E:                          ; CODE XREF: sub_140A1EEE4+15983↓j
                xor     ecx, eax

loc_140A34860:                          ; CODE XREF: sub_140A1EEE4+15978↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A3485E
                btr     ecx, 1Fh
                mov     r10d, r9d
                mov     [rdx+14h], ecx
                add     r10, rdi
                mov     rax, [rsp+24B8h+var_1668]
                mov     r8, r10
                mov     [rsp+24B8h+var_1660], rax
                mov     ecx, r14d
                add     rcx, r10
                mov     [rax+20h], r9d
                mov     rax, [rsp+24B8h+var_1660]
                mov     [rax+24h], r14d
                mov     rax, r10
                add     [rdi+828h], r14d
                mov     r9d, [rdi+814h]
                mov     r15, [rdi+818h]
                cmp     r10, rcx
                jnb     short loc_140A348C8

loc_140A348BC:                          ; CODE XREF: sub_140A1EEE4+159E2↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A348BC

loc_140A348C8:                          ; CODE XREF: sub_140A1EEE4+159D6↑j
                mov     r11d, r14d
                mov     rbx, r15
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A34938
                mov     r14, 7010008004002001h

loc_140A348E1:                          ; CODE XREF: sub_140A1EEE4+15A4D↓j
                mov     eax, 8

loc_140A348E6:                          ; CODE XREF: sub_140A1EEE4+15A19↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                xor     rbx, [r8+8]
                add     r8, 10h
                rol     rbx, cl
                sub     rax, r12
                jnz     short loc_140A348E6
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r15
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                xor     r9d, eax
                mov     [rsp+24B8h+var_1658], rdx
                xor     r9d, edx
                and     r9d, 3Fh
                cmovz   r9d, r12d
                add     r11d, r13d
                jnz     short loc_140A348E1
                mov     r14d, dword ptr [rsp+24B8h+var_2458]

loc_140A34938:                          ; CODE XREF: sub_140A1EEE4+159F1↑j
                and     r14d, 7Fh
                cmp     r14d, 8
                jb      short loc_140A34964
                mov     eax, r14d
                mov     r15d, 0FFFFFFF8h
                shr     rax, 3

loc_140A3494F:                          ; CODE XREF: sub_140A1EEE4+15A7E↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     r14d, r15d
                sub     rax, r12
                jnz     short loc_140A3494F

loc_140A34964:                          ; CODE XREF: sub_140A1EEE4+15A5C↑j
                xor     r11d, r11d
                test    r14d, r14d
                jz      short loc_140A34981

loc_140A3496C:                          ; CODE XREF: sub_140A1EEE4+15A9B↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r12
                rol     rbx, cl
                add     r14d, r13d
                jnz     short loc_140A3496C

loc_140A34981:                          ; CODE XREF: sub_140A1EEE4+15A86↑j
                mov     rax, [rsp+24B8h+var_1660]
                mov     [rax+18h], rbx
                mov     rbx, rdi
                mov     eax, [rdi+7E4h]
                mov     [rsp+24B8h+var_1B80], rbx
                mov     dword ptr [rsp+24B8h+var_2458], eax

loc_140A349A2:                          ; CODE XREF: sub_140A1EEE4+15801↑j
                mov     r12d, r11d

loc_140A349A5:                          ; CODE XREF: sub_140A1EEE4+15DA0↓j
                mov     r13, r11
                cli
                mov     rcx, gs:20h
                mov     rax, [rbx+648h]
                mov     rcx, [rcx+rax]
                sti
                mov     rax, [rbx+168h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [rbx+538h]
                mov     dl, 1
                mov     rax, [rbx+0E8h]
                call    j__guard_dispatch_icall_nop
                mov     rdi, qword ptr cs:PsLoadedModuleList
                lea     rax, PsLoadedModuleList
                cmp     rdi, rax
                jz      short loc_140A34A49
                mov     eax, r12d
                lea     rcx, cs:140000000h
                shl     rax, 4
                lea     r15, rva unk_140C00288[rcx]
                add     r15, rax

loc_140A34A0A:                          ; CODE XREF: sub_140A1EEE4+15B56↓j
                mov     rdx, [rbx+760h]
                mov     r14, rdi
                sub     r14, [rbx+748h]
                mov     r8b, 1
                add     rdx, r14
                mov     rcx, r15
                call    RtlEqualUnicodeString
                test    al, al
                jnz     short loc_140A34A3E
                mov     rdi, [rdi]
                lea     rax, PsLoadedModuleList
                cmp     rdi, rax
                jnz     short loc_140A34A0A
                jmp     short loc_140A34A49
; ---------------------------------------------------------------------------

loc_140A34A3E:                          ; CODE XREF: sub_140A1EEE4+15B47↑j
                mov     rax, [rbx+750h]
                mov     r13, [r14+rax]

loc_140A34A49:                          ; CODE XREF: sub_140A1EEE4+15B0C↑j
                                        ; sub_140A1EEE4+15B58↑j
                mov     rcx, [rbx+538h]
                mov     rax, [rbx+118h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [rbx+170h]
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                test    r13, r13
                jz      loc_140A34C71
                mov     r15d, [rbx+7E4h]
                lea     rax, asc_140C002A8 ; " \""
                mov     r8d, [rbx+924h]
                mov     r14d, r12d
                shl     r14, 4
                add     r14, rax
                movzx   ecx, word ptr [r14]
                add     ecx, 7
                and     ecx, 0FFFFFFF8h
                add     ecx, 30h ; '0'
                add     ecx, r15d
                cmp     ecx, [rbx+0A1Ch]
                jbe     loc_140A34B82
                mov     edx, ecx
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A34B79
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A34B0F
                mov     ecx, eax
                shr     rcx, 3

loc_140A34AFF:                          ; CODE XREF: sub_140A1EEE4+15C29↓j
                mov     [rbx], r11
                add     eax, 0FFFFFFF8h
                add     rbx, 8
                sub     rcx, 1
                jnz     short loc_140A34AFF

loc_140A34B0F:                          ; CODE XREF: sub_140A1EEE4+15C13↑j
                test    eax, eax
                jz      short loc_140A34B1E

loc_140A34B13:                          ; CODE XREF: sub_140A1EEE4+15C38↓j
                mov     [rbx], r11b
                inc     rbx
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A34B13

loc_140A34B1E:                          ; CODE XREF: sub_140A1EEE4+15C2D↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A34B61
                test    dword ptr [rdi+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A34B58
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A34B70
; ---------------------------------------------------------------------------

loc_140A34B58:                          ; CODE XREF: sub_140A1EEE4+15C5D↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A34B68
; ---------------------------------------------------------------------------

loc_140A34B61:                          ; CODE XREF: sub_140A1EEE4+15C49↑j
                mov     rax, [rdi+368h]

loc_140A34B68:                          ; CODE XREF: sub_140A1EEE4+15C7B↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A34B70:                          ; CODE XREF: sub_140A1EEE4+15C72↑j
                mov     [rdi+924h], ebx
                xor     r11d, r11d

loc_140A34B79:                          ; CODE XREF: sub_140A1EEE4+15BED↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A34B8B
; ---------------------------------------------------------------------------

loc_140A34B82:                          ; CODE XREF: sub_140A1EEE4+15BC5↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], ecx

loc_140A34B8B:                          ; CODE XREF: sub_140A1EEE4+15C9C↑j
                lea     rdx, [rdi+r15]
                mov     r9d, 1
                add     [rdi+80Ch], r9d
                mov     rax, rdx
                mov     [rsp+24B8h+var_1650], rdx
                mov     r15d, 0FFFFFFF8h
                lea     ecx, [r9+2Fh]
                lea     ebx, [rcx-2Ah]

loc_140A34BB4:                          ; CODE XREF: sub_140A1EEE4+15CDD↓j
                mov     [rax], r11
                add     ecx, r15d
                add     rax, 8
                sub     rbx, r9
                jnz     short loc_140A34BB4
                test    ecx, ecx
                jz      short loc_140A34BD2

loc_140A34BC7:                          ; CODE XREF: sub_140A1EEE4+15CEC↓j
                mov     [rax], r11b
                add     rax, r9
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A34BC7

loc_140A34BD2:                          ; CODE XREF: sub_140A1EEE4+15CE1↑j
                mov     dword ptr [rdx], 1Ch
                mov     [rdx+8], r11
                mov     [rdx+10h], r11d
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A34BEE
; ---------------------------------------------------------------------------

loc_140A34BEC:                          ; CODE XREF: sub_140A1EEE4+15D11↓j
                xor     ecx, eax

loc_140A34BEE:                          ; CODE XREF: sub_140A1EEE4+15D06↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A34BEC
                btr     ecx, 1Fh
                mov     [rdx+14h], ecx
                mov     rax, [rsp+24B8h+var_1650]
                mov     [rsp+24B8h+var_1648], rax
                mov     [rax+18h], r13
                mov     rax, [rsp+24B8h+var_1648]
                movzx   ecx, word ptr [r14]
                mov     [rax+28h], cx
                mov     rax, [rsp+24B8h+var_1648]
                movzx   edx, word ptr [r14]
                mov     rcx, [r14+8]
                lea     rbx, [rax+30h]
                cmp     edx, 8
                jb      short loc_140A34C58
                mov     r8d, edx
                shr     r8, 3

loc_140A34C42:                          ; CODE XREF: sub_140A1EEE4+15D72↓j
                mov     rax, [rcx]
                add     edx, r15d
                mov     [rbx], rax
                add     rcx, 8
                add     rbx, 8
                sub     r8, r9
                jnz     short loc_140A34C42

loc_140A34C58:                          ; CODE XREF: sub_140A1EEE4+15D55↑j
                test    edx, edx
                jz      short loc_140A34C6C
                sub     rbx, rcx

loc_140A34C5F:                          ; CODE XREF: sub_140A1EEE4+15D86↓j
                mov     al, [rcx]
                mov     [rcx+rbx], al
                add     rcx, r9
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A34C5F

loc_140A34C6C:                          ; CODE XREF: sub_140A1EEE4+15D76↑j
                mov     rbx, rdi
                jmp     short loc_140A34C77
; ---------------------------------------------------------------------------

loc_140A34C71:                          ; CODE XREF: sub_140A1EEE4+15B8A↑j
                mov     r15d, 0FFFFFFF8h

loc_140A34C77:                          ; CODE XREF: sub_140A1EEE4+15D8B↑j
                mov     r13d, 1
                add     r12d, r13d
                cmp     r12d, 2
                jb      loc_140A349A5
                mov     [rsp+24B8h+var_1B80], rbx
                test    rbx, rbx
                jz      loc_140A237B3
                cli
                cmp     cs:KdDebuggerNotPresent, r11b
                jnz     short loc_140A34CA7

loc_140A34CA5:                          ; CODE XREF: sub_140A1EEE4:loc_140A34CA5↓j
                jmp     short loc_140A34CA5
; ---------------------------------------------------------------------------

loc_140A34CA7:                          ; CODE XREF: sub_140A1EEE4+15DBF↑j
                sti
                mov     r14d, [rbx+7E4h]
                mov     r8d, [rbx+924h]
                lea     eax, [r14+30h]
                cmp     eax, [rbx+0A1Ch]
                jbe     loc_140A34D98
                mov     edx, eax
                mov     rcx, rbx
                call    sub_140A10B30
                xor     r11d, r11d
                mov     rdi, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rbx+990h]
                test    cl, 4
                jnz     loc_140A34D8F
                mov     eax, [rbx+7E4h]
                and     ecx, 20000000h
                mov     r8, [rbx+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rbx+924h]
                cmp     eax, 8
                jb      short loc_140A34D25
                mov     ecx, eax
                shr     rcx, 3

loc_140A34D16:                          ; CODE XREF: sub_140A1EEE4+15E3F↓j
                mov     [rbx], r11
                add     eax, r15d
                add     rbx, 8
                sub     rcx, r13
                jnz     short loc_140A34D16

loc_140A34D25:                          ; CODE XREF: sub_140A1EEE4+15E2A↑j
                test    eax, eax
                jz      short loc_140A34D34

loc_140A34D29:                          ; CODE XREF: sub_140A1EEE4+15E4E↓j
                mov     [rbx], r11b
                add     rbx, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A34D29

loc_140A34D34:                          ; CODE XREF: sub_140A1EEE4+15E43↑j
                mov     ebx, [rdi+924h]
                mov     [rdi+924h], edx
                cmp     edx, 3
                jz      short loc_140A34D77
                test    dword ptr [rdi+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A34D6E
                mov     rax, [rdi+228h]
                lea     rcx, [r8-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A34D86
; ---------------------------------------------------------------------------

loc_140A34D6E:                          ; CODE XREF: sub_140A1EEE4+15E73↑j
                mov     rax, [rdi+100h]
                jmp     short loc_140A34D7E
; ---------------------------------------------------------------------------

loc_140A34D77:                          ; CODE XREF: sub_140A1EEE4+15E5F↑j
                mov     rax, [rdi+368h]

loc_140A34D7E:                          ; CODE XREF: sub_140A1EEE4+15E91↑j
                mov     rcx, r8
                call    j__guard_dispatch_icall_nop

loc_140A34D86:                          ; CODE XREF: sub_140A1EEE4+15E88↑j
                mov     [rdi+924h], ebx
                xor     r11d, r11d

loc_140A34D8F:                          ; CODE XREF: sub_140A1EEE4+15E04↑j
                and     dword ptr [rdi+990h], 0FFFFFFFBh
                jmp     short loc_140A34DA1
; ---------------------------------------------------------------------------

loc_140A34D98:                          ; CODE XREF: sub_140A1EEE4+15DDC↑j
                mov     rdi, rbx
                mov     [rbx+7E4h], eax

loc_140A34DA1:                          ; CODE XREF: sub_140A1EEE4+15EB2↑j
                add     [rdi+80Ch], r13d
                lea     rdx, [rdi+r14]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1640], rdx
                mov     rax, rdx
                lea     ebx, [rcx-2Ah]

loc_140A34DBF:                          ; CODE XREF: sub_140A1EEE4+15EE8↓j
                mov     [rax], r11
                add     ecx, r15d
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A34DBF
                or      r12d, 0FFFFFFFFh
                test    ecx, ecx
                jz      short loc_140A34DE1

loc_140A34DD6:                          ; CODE XREF: sub_140A1EEE4+15EFB↓j
                mov     [rax], r11b
                add     rax, r13
                add     ecx, r12d
                jnz     short loc_140A34DD6

loc_140A34DE1:                          ; CODE XREF: sub_140A1EEE4+15EF0↑j
                mov     dword ptr [rdx], 18h
                mov     [rdx+8], r11
                mov     [rdx+10h], r11d
                mov     rcx, [rdi+818h]
                mov     rax, rcx
                jmp     short loc_140A34DFD
; ---------------------------------------------------------------------------

loc_140A34DFB:                          ; CODE XREF: sub_140A1EEE4+15F20↓j
                xor     ecx, eax

loc_140A34DFD:                          ; CODE XREF: sub_140A1EEE4+15F15↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A34DFB
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], rdi
                mov     [rdx+14h], ecx
                cli
                cmp     cs:KdDebuggerNotPresent, r11b
                jnz     short loc_140A34E21

loc_140A34E1F:                          ; CODE XREF: sub_140A1EEE4:loc_140A34E1F↓j
                jmp     short loc_140A34E1F
; ---------------------------------------------------------------------------

loc_140A34E21:                          ; CODE XREF: sub_140A1EEE4+15F39↑j
                sti
                mov     r15d, [rdi+7E4h]
                mov     r8d, [rdi+924h]
                lea     eax, [r15+30h]
                cmp     eax, [rdi+0A1Ch]
                jbe     loc_140A34F17
                mov     edx, eax
                mov     rcx, rdi
                call    sub_140A10B30
                xor     r11d, r11d
                mov     r14, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [rdi+990h]
                test    cl, 4
                jnz     loc_140A34F0D
                mov     eax, [rdi+7E4h]
                and     ecx, 20000000h
                mov     rbx, [rdi+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [rdi+924h]
                cmp     eax, 8
                jb      short loc_140A34E9F
                mov     ecx, eax
                shr     rcx, 3

loc_140A34E90:                          ; CODE XREF: sub_140A1EEE4+15FB9↓j
                mov     [rdi], r11
                add     eax, 0FFFFFFF8h
                add     rdi, 8
                sub     rcx, r13
                jnz     short loc_140A34E90

loc_140A34E9F:                          ; CODE XREF: sub_140A1EEE4+15FA4↑j
                test    eax, eax
                jz      short loc_140A34EAE

loc_140A34EA3:                          ; CODE XREF: sub_140A1EEE4+15FC8↓j
                mov     [rdi], r11b
                add     rdi, r13
                add     eax, r12d
                jnz     short loc_140A34EA3

loc_140A34EAE:                          ; CODE XREF: sub_140A1EEE4+15FBD↑j
                mov     edi, [r14+924h]
                mov     [r14+924h], edx
                cmp     edx, 3
                jz      short loc_140A34EF4
                test    dword ptr [r14+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A34EEB
                mov     rax, [r14+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A34F03
; ---------------------------------------------------------------------------

loc_140A34EEB:                          ; CODE XREF: sub_140A1EEE4+15FF0↑j
                mov     rax, [r14+100h]
                jmp     short loc_140A34EFB
; ---------------------------------------------------------------------------

loc_140A34EF4:                          ; CODE XREF: sub_140A1EEE4+15FDB↑j
                mov     rax, [r14+368h]

loc_140A34EFB:                          ; CODE XREF: sub_140A1EEE4+1600E↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A34F03:                          ; CODE XREF: sub_140A1EEE4+16005↑j
                mov     [r14+924h], edi
                xor     r11d, r11d

loc_140A34F0D:                          ; CODE XREF: sub_140A1EEE4+15F7E↑j
                and     dword ptr [r14+990h], 0FFFFFFFBh
                jmp     short loc_140A34F20
; ---------------------------------------------------------------------------

loc_140A34F17:                          ; CODE XREF: sub_140A1EEE4+15F56↑j
                mov     r14, rdi
                mov     [rdi+7E4h], eax

loc_140A34F20:                          ; CODE XREF: sub_140A1EEE4+16031↑j
                add     [r14+80Ch], r13d
                lea     rdx, [r14+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1638], rdx
                mov     rax, rdx
                lea     ebx, [rcx-2Ah]

loc_140A34F3E:                          ; CODE XREF: sub_140A1EEE4+16067↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rbx, r13
                jnz     short loc_140A34F3E
                test    ecx, ecx
                jz      short loc_140A34F5C

loc_140A34F51:                          ; CODE XREF: sub_140A1EEE4+16076↓j
                mov     [rax], r11b
                add     rax, r13
                add     ecx, r12d
                jnz     short loc_140A34F51

loc_140A34F5C:                          ; CODE XREF: sub_140A1EEE4+1606B↑j
                mov     dword ptr [rdx], 0Fh
                mov     [rdx+8], r11
                mov     [rdx+10h], r11d
                mov     rcx, [r14+818h]
                mov     rax, rcx
                jmp     short loc_140A34F78
; ---------------------------------------------------------------------------

loc_140A34F76:                          ; CODE XREF: sub_140A1EEE4+1609B↓j
                xor     ecx, eax

loc_140A34F78:                          ; CODE XREF: sub_140A1EEE4+16090↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A34F76
                btr     ecx, 1Fh
                mov     [rsp+24B8h+var_1B80], r14
                mov     [rdx+14h], ecx
                mov     eax, [r14+990h]
                bt      eax, 1Eh
                jb      loc_140A35258
                mov     eax, [r14+994h]
                test    al, al
                jns     loc_140A35258
                mov     r15d, [r14+7E4h]
                mov     r12d, dword ptr [rsp+24B8h+var_2458]
                mov     r9d, dword ptr [rsp+24B8h+var_2450]
                sub     r12d, r9d
                mov     r8d, [r14+924h]
                lea     eax, [r15+30h]
                cmp     eax, [r14+0A1Ch]
                jbe     loc_140A350B8
                mov     edx, eax
                mov     rcx, r14
                call    sub_140A10B30
                xor     r11d, r11d
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A350AA
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rdi, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A3503E
                mov     ecx, eax
                shr     rcx, 3

loc_140A3502F:                          ; CODE XREF: sub_140A1EEE4+16158↓j
                mov     [r14], r11
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, r13
                jnz     short loc_140A3502F

loc_140A3503E:                          ; CODE XREF: sub_140A1EEE4+16143↑j
                test    eax, eax
                jz      short loc_140A3504D

loc_140A35042:                          ; CODE XREF: sub_140A1EEE4+16167↓j
                mov     [r14], r11b
                add     r14, r13
                add     eax, 0FFFFFFFFh
                jnz     short loc_140A35042

loc_140A3504D:                          ; CODE XREF: sub_140A1EEE4+1615C↑j
                mov     r14d, [rbx+924h]
                mov     [rbx+924h], edx
                cmp     edx, 3
                jz      short loc_140A35091
                test    dword ptr [rbx+990h], 10000000h
                mov     ecx, r11d
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A35088
                mov     rax, [rbx+228h]
                lea     rcx, [rdi-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A350A0
; ---------------------------------------------------------------------------

loc_140A35088:                          ; CODE XREF: sub_140A1EEE4+1618D↑j
                mov     rax, [rbx+100h]
                jmp     short loc_140A35098
; ---------------------------------------------------------------------------

loc_140A35091:                          ; CODE XREF: sub_140A1EEE4+16179↑j
                mov     rax, [rbx+368h]

loc_140A35098:                          ; CODE XREF: sub_140A1EEE4+161AB↑j
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop

loc_140A350A0:                          ; CODE XREF: sub_140A1EEE4+161A2↑j
                mov     [rbx+924h], r14d
                xor     r11d, r11d

loc_140A350AA:                          ; CODE XREF: sub_140A1EEE4+1611B↑j
                and     dword ptr [rbx+990h], 0FFFFFFFBh
                mov     r9d, dword ptr [rsp+24B8h+var_2450]
                jmp     short loc_140A350C2
; ---------------------------------------------------------------------------

loc_140A350B8:                          ; CODE XREF: sub_140A1EEE4+160F2↑j
                mov     rbx, r14
                mov     [r14+7E4h], eax

loc_140A350C2:                          ; CODE XREF: sub_140A1EEE4+161D2↑j
                add     [rbx+80Ch], r13d
                lea     rdx, [rbx+r15]
                mov     ecx, 30h ; '0'
                mov     [rsp+24B8h+var_1630], rdx
                mov     rax, rdx
                lea     edi, [rcx-2Ah]

loc_140A350E0:                          ; CODE XREF: sub_140A1EEE4+16209↓j
                mov     [rax], r11
                add     ecx, 0FFFFFFF8h
                add     rax, 8
                sub     rdi, r13
                jnz     short loc_140A350E0
                or      r15d, 0FFFFFFFFh
                test    ecx, ecx
                jz      short loc_140A35102

loc_140A350F7:                          ; CODE XREF: sub_140A1EEE4+1621C↓j
                mov     [rax], r11b
                add     rax, r13
                add     ecx, r15d
                jnz     short loc_140A350F7

loc_140A35102:                          ; CODE XREF: sub_140A1EEE4+16211↑j
                mov     dword ptr [rdx], 2Ah ; '*'
                mov     [rdx+8], r11
                mov     [rdx+10h], r11d
                mov     rcx, [rbx+818h]
                mov     rax, rcx
                jmp     short loc_140A3511E
; ---------------------------------------------------------------------------

loc_140A3511C:                          ; CODE XREF: sub_140A1EEE4+16241↓j
                xor     ecx, eax

loc_140A3511E:                          ; CODE XREF: sub_140A1EEE4+16236↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A3511C
                btr     ecx, 1Fh
                mov     r10d, r9d
                mov     [rdx+14h], ecx
                add     r10, rbx
                mov     rax, [rsp+24B8h+var_1630]
                mov     r8, r10
                mov     [rsp+24B8h+var_1628], rax
                mov     ecx, r12d
                add     rcx, r10
                mov     [rax+20h], r9d
                mov     rax, [rsp+24B8h+var_1628]
                mov     [rax+24h], r12d
                mov     rax, r10
                add     [rbx+828h], r12d
                mov     r9d, [rbx+814h]
                mov     r14, [rbx+818h]
                cmp     r10, rcx
                jnb     short loc_140A35186

loc_140A3517A:                          ; CODE XREF: sub_140A1EEE4+162A0↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A3517A

loc_140A35186:                          ; CODE XREF: sub_140A1EEE4+16294↑j
                mov     r11d, r12d
                mov     rdi, r14
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A351FD
                mov     rsi, 7010008004002001h

loc_140A3519F:                          ; CODE XREF: sub_140A1EEE4+16310↓j
                mov     edx, 8

loc_140A351A4:                          ; CODE XREF: sub_140A1EEE4+162DD↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rdi
                mov     rdi, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rdi, rax
                rol     rdi, cl
                sub     rdx, r13
                jnz     short loc_140A351A4
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1620], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r11d, r15d
                jnz     short loc_140A3519F
                mov     rsi, 0FFFFFFFFB8797400h

loc_140A351FD:                          ; CODE XREF: sub_140A1EEE4+162AF↑j
                and     r12d, 7Fh
                cmp     r12d, 8
                jb      short loc_140A35224
                mov     edx, r12d
                shr     rdx, 3

loc_140A3520E:                          ; CODE XREF: sub_140A1EEE4+1633E↓j
                xor     rdi, [r8]
                mov     ecx, r9d
                rol     rdi, cl
                add     r8, 8
                add     r12d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A3520E

loc_140A35224:                          ; CODE XREF: sub_140A1EEE4+16321↑j
                xor     r11d, r11d
                test    r12d, r12d
                jz      short loc_140A35241

loc_140A3522C:                          ; CODE XREF: sub_140A1EEE4+1635B↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rdi, rax
                add     r8, r13
                rol     rdi, cl
                add     r12d, r15d
                jnz     short loc_140A3522C

loc_140A35241:                          ; CODE XREF: sub_140A1EEE4+16346↑j
                mov     rax, [rsp+24B8h+var_1628]
                mov     r14, rbx
                mov     [rsp+24B8h+var_1B80], rbx
                mov     [rax+18h], rdi

loc_140A35258:                          ; CODE XREF: sub_140A1EEE4+160B7↑j
                                        ; sub_140A1EEE4+160C6↑j
                mov     rdi, 7010008004002001h
                cmp     [rsp+24B8h+arg_10], r13d
                jbe     short loc_140A352A3
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     ecx, [r14+80Ch]
                mov     [rsp+24B8h+var_1618], rdx
                xor     rax, rdx
                xor     edx, edx
                div     rcx
                mov     [r14+820h], edx

loc_140A352A3:                          ; CODE XREF: sub_140A1EEE4+16386↑j
                test    r14, r14
                jz      loc_140A237B3
                test    dword ptr [r14+990h], 10000000h
                jz      short loc_140A352F7
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     [rsp+24B8h+var_1610], rdx
                xor     rdx, rax
                and     edx, 0Fh
                shl     rdx, 4
                add     rdx, [r14+5D0h]
                mov     [r14+7D8h], rdx
                jmp     loc_140A35E17
; ---------------------------------------------------------------------------

loc_140A352F7:                          ; CODE XREF: sub_140A1EEE4+163D3↑j
                mov     eax, [rsp+24B8h+arg_0]
                mov     edx, 5
                cmp     eax, edx
                jbe     loc_140A359D3
                lea     rdi, sub_140A13350

loc_140A35312:                          ; CODE XREF: sub_140A1EEE4+16AE7↓j
                cmp     eax, 6
                jz      loc_140A35DA9
                cmp     eax, 7
                jz      loc_140A35D9B
                cmp     eax, 8
                jz      loc_140A35D8D
                cmp     eax, 9
                jz      loc_140A35D7F
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1608], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 8
                mov     ecx, [r14+838h]
                lea     eax, [rcx-3]
                jnb     loc_140A35A0D
                test    eax, 0FFFFFFFAh
                jnz     short loc_140A353A3
                cmp     ecx, 8
                jnz     loc_140A35979

loc_140A353A3:                          ; CODE XREF: sub_140A1EEE4+164B4↑j
                lea     r8, [rsp+24B8h+var_2004]
                mov     rcx, rdi
                lea     rdx, [rsp+24B8h+var_E30]
                or      r13, 0FFFFFFFFFFFFFFFFh
                mov     r15, r11
                call    sub_1403C5CDC
                xor     r11d, r11d
                mov     [rsp+24B8h+var_E40], rax
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A35504
                mov     rax, [rsp+24B8h+var_E30]
                mov     [rsp+24B8h+var_E18], r11
                cmp     [rsp+24B8h+var_1248], rax
                jnz     loc_140A354A5
                mov     r12, [rsp+24B8h+var_1240]
                lea     rdx, [rsp+24B8h+var_E30]
                mov     eax, [rsp+24B8h+var_1238]
                xor     r8d, r8d
                mov     rcx, rdi
                mov     [rsp+24B8h+var_E18], r12
                mov     [rsp+24B8h+var_E10], r11
                mov     [rsp+24B8h+var_E08], eax
                mov     [rsp+24B8h+var_E04], r11d
                call    RtlLookupFunctionEntry
                xor     r11d, r11d
                mov     [rsp+24B8h+var_E38], rax
                test    rax, rax
                jz      short loc_140A3549D
                mov     edx, [r12]
                mov     edi, eax
                sub     edi, dword ptr [rsp+24B8h+var_E30]
                mov     ebx, r11d
                sub     edx, 1
                js      short loc_140A3549D

loc_140A3545D:                          ; CODE XREF: sub_140A1EEE4+165A1↓j
                lea     ecx, [rdx+rbx]
                mov     eax, edi
                sar     ecx, 1
                mov     r8d, ecx
                inc     r8
                lea     r8, [r12+r8*8]
                sub     eax, [r8]
                jns     short loc_140A3547C
                test    ecx, ecx
                jz      short loc_140A3549D
                lea     edx, [rcx-1]
                jmp     short loc_140A35483
; ---------------------------------------------------------------------------

loc_140A3547C:                          ; CODE XREF: sub_140A1EEE4+1658D↑j
                test    eax, eax
                jle     short loc_140A35487
                lea     ebx, [rcx+1]

loc_140A35483:                          ; CODE XREF: sub_140A1EEE4+16596↑j
                cmp     edx, ebx
                jge     short loc_140A3545D

loc_140A35487:                          ; CODE XREF: sub_140A1EEE4+1659A↑j
                mov     rax, [rsp+24B8h+var_E10]
                cmp     edx, ebx
                cmovge  rax, r8
                mov     [rsp+24B8h+var_E10], rax

loc_140A3549D:                          ; CODE XREF: sub_140A1EEE4+16562↑j
                                        ; sub_140A1EEE4+16577↑j ...
                mov     rbx, [rsp+24B8h+var_E40]

loc_140A354A5:                          ; CODE XREF: sub_140A1EEE4+1650D↑j
                mov     ecx, [rsp+24B8h+var_2004]
                lea     rdi, [rsp+24B8h+var_1600]
                mov     rax, 0AAAAAAAAAAAAAAABh
                mov     [rsp+24B8h+var_E20], rdi
                mul     rcx
                shr     rdx, 3
                mov     eax, edx
                mov     [rsp+24B8h+var_2004], edx
                mov     rdx, [rsp+24B8h+var_E30]
                mov     [rsp+24B8h+var_2468], rdx
                lea     rcx, [rax+rax*2]
                lea     rax, [rbx+rcx*4]
                mov     [rsp+24B8h+var_E28], rax
                lea     rax, sub_140A13350
                mov     [rsp+24B8h+var_E48], rax
                jmp     short loc_140A35511
; ---------------------------------------------------------------------------

loc_140A35504:                          ; CODE XREF: sub_140A1EEE4+164EF↑j
                mov     rdx, [rsp+24B8h+var_2468]

loc_140A35509:                          ; CODE XREF: sub_140A1EEE4+168FD↓j
                mov     rdi, [rsp+24B8h+var_E20]

loc_140A35511:                          ; CODE XREF: sub_140A1EEE4+1661E↑j
                mov     r9, r15
                mov     r12, r13
                test    rbx, rbx
                jz      loc_140A35660
                cmp     rbx, [rsp+24B8h+var_E28]
                jz      loc_140A35660
                cmp     [rsp+24B8h+var_E18], r11
                jz      loc_140A3560B
                mov     rax, [rsp+24B8h+var_E38]
                test    rax, rax
                jz      loc_140A35660
                cmp     [rsp+24B8h+var_E10], r11
                jnz     short loc_140A35567
                mov     [rdi], rax
                mov     [rsp+24B8h+var_E38], r11
                jmp     loc_140A357B6
; ---------------------------------------------------------------------------

loc_140A35567:                          ; CODE XREF: sub_140A1EEE4+16671↑j
                mov     rax, [rsp+24B8h+var_E10]
                mov     r10d, 1
                mov     ecx, [rax+4]
                test    r10b, cl
                jz      short loc_140A3559A
                and     ecx, 0FFFFFFFEh
                mov     eax, ecx
                add     rax, [rsp+24B8h+var_E30]
                mov     [rdi], rax
                mov     [rsp+24B8h+var_E10], r11
                jmp     loc_140A357B6
; ---------------------------------------------------------------------------

loc_140A3559A:                          ; CODE XREF: sub_140A1EEE4+16697↑j
                mov     r8d, [rsp+24B8h+var_E04]
                add     ecx, r8d
                mov     edx, ecx
                add     rcx, 4
                cmp     rcx, rdx
                jb      loc_140A397D3
                mov     eax, [rsp+24B8h+var_E08]
                cmp     rcx, rax
                ja      loc_140A397D3
                mov     rax, [rsp+24B8h+var_E18]
                add     r8d, 4
                mov     ebx, [rax+rdx]
                mov     edx, ebx
                and     edx, r10d
                mov     [rsp+24B8h+var_E04], r8d
                mov     eax, edx
                neg     eax
                mov     eax, ebx
                sbb     rcx, rcx
                and     eax, 0FFFFFFFEh
                and     [rsp+24B8h+var_E10], rcx
                test    edx, edx
                cmovnz  ebx, eax
                mov     eax, ebx
                add     rax, [rsp+24B8h+var_E30]
                mov     [rdi], rax
                jmp     loc_140A357B1
; ---------------------------------------------------------------------------

loc_140A3560B:                          ; CODE XREF: sub_140A1EEE4+16652↑j
                                        ; sub_140A1EEE4+1677A↓j
                mov     rdx, [rsp+24B8h+var_E30]
                mov     rcx, rbx
                mov     rdi, rbx
                call    sub_1402AE7D0
                mov     r8, [rsp+24B8h+var_E48]
                mov     rcx, rax
                mov     rdx, [rsp+24B8h+var_E30]
                call    sub_1405868D0
                mov     rbx, [rsp+24B8h+var_E40]
                xor     r11d, r11d
                add     rbx, 0Ch
                mov     [rsp+24B8h+var_E40], rbx
                test    rax, rax
                jnz     loc_140A357A3
                cmp     rbx, [rsp+24B8h+var_E28]
                jnz     short loc_140A3560B

loc_140A35660:                          ; CODE XREF: sub_140A1EEE4+16636↑j
                                        ; sub_140A1EEE4+16644↑j ...
                test    r15, r15
                jz      loc_140A3596C
                sub     r15, r13
                mov     eax, 1000h
                cmp     r15, rax
                ja      loc_140A3596C
                mov     r9d, [r14+990h]
                mov     r8d, r11d
                and     r9d, 10000000h
                jnz     short loc_140A35694
                mov     r8d, [r14+924h]

loc_140A35694:                          ; CODE XREF: sub_140A1EEE4+167A7↑j
                mov     r10d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                mov     r12, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_15F8], rdx
                xor     edi, edx
                and     edi, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                lea     ecx, [rdi+1]
                xor     rax, rdx
                mov     [rsp+24B8h+var_15F0], rdx
                xor     edx, edx
                div     rcx
                mov     [rsp+24B8h+var_2430], rdx
                test    r8d, r8d
                jz      loc_140A357F4
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_15E8], rdx
                and     eax, 1
                or      edx, 0FFFFFFFFh
                shl     eax, 0Ch
                add     eax, 1000h
                add     edi, eax
                lea     eax, [rdi+r15]
                mov     ebx, eax
                lea     rcx, [rax+8]
                mov     rax, [r14+220h]
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                mov     r12, rax
                test    rax, rax
                jz      loc_140A3581D
                mov     rax, [r14+230h]
                lea     rdx, [rbx+0FFFh]
                and     edx, 0FFFFF000h
                lea     r8d, [r11+40h]
                mov     rcx, r12
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                test    al, al
                jnz     short loc_140A357E6
                mov     edx, ebx
                mov     rcx, r12

loc_140A35792:                          ; CODE XREF: sub_140A1EEE4+16C56↓j
                mov     rax, [r14+228h]
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                jmp     short loc_140A3581D
; ---------------------------------------------------------------------------

loc_140A357A3:                          ; CODE XREF: sub_140A1EEE4+1676C↑j
                mov     rax, [rsp+24B8h+var_E20]
                mov     r9, r15
                mov     [rax], rdi

loc_140A357B1:                          ; CODE XREF: sub_140A1EEE4+16722↑j
                mov     rdx, [rsp+24B8h+var_2468]

loc_140A357B6:                          ; CODE XREF: sub_140A1EEE4+1667E↑j
                                        ; sub_140A1EEE4+166B1↑j
                mov     rcx, [rsp+24B8h+var_1600]
                mov     rbx, [rsp+24B8h+var_E40]
                mov     r13d, [rcx]
                mov     r15d, [rcx+4]
                add     r13, rdx
                add     r15, rdx
                cmp     r12, r13
                cmovbe  r13, r12
                cmp     r9, r15
                cmovnb  r15, r9
                jmp     loc_140A35509
; ---------------------------------------------------------------------------

loc_140A357E6:                          ; CODE XREF: sub_140A1EEE4+168A7↑j
                lea     rax, [rbx+8]
                mov     [r12], rax
                add     r12, 8
                jmp     short loc_140A35818
; ---------------------------------------------------------------------------

loc_140A357F4:                          ; CODE XREF: sub_140A1EEE4+16824↑j
                mov     rax, [r14+0F8h]
                lea     edx, [rdi+r15]
                neg     r9d
                mov     r8d, r10d
                sbb     ecx, ecx
                and     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     r12, rax
                xor     r11d, r11d

loc_140A35818:                          ; CODE XREF: sub_140A1EEE4+1690E↑j
                test    r12, r12
                jnz     short loc_140A3582F

loc_140A3581D:                          ; CODE XREF: sub_140A1EEE4+1687C↑j
                                        ; sub_140A1EEE4+168BD↑j ...
                mov     r13d, 1

loc_140A35823:                          ; CODE XREF: sub_140A1EEE4+16C94↓j
                add     [r14+0A18h], r13d
                jmp     loc_140A35972
; ---------------------------------------------------------------------------

loc_140A3582F:                          ; CODE XREF: sub_140A1EEE4+16937↑j
                mov     r9, [rsp+24B8h+var_2430]
                mov     rbx, r12
                mov     r8d, r9d
                mov     r11d, 1
                mov     r10, 7010008004002001h
                cmp     r9d, 8
                jb      short loc_140A35896
                mov     r9d, r9d
                shr     r9, 3

loc_140A3585A:                          ; CODE XREF: sub_140A1EEE4+169A8↓j
                rdtsc
                shl     rdx, 20h
                add     r8d, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_15E0], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r9, r11
                jnz     short loc_140A3585A
                mov     r9, [rsp+24B8h+var_2430]

loc_140A35896:                          ; CODE XREF: sub_140A1EEE4+1696D↑j
                test    r8d, r8d
                jz      short loc_140A358CE
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                mov     [rsp+24B8h+var_15D8], rdx
                xor     rdx, rax

loc_140A358BF:                          ; CODE XREF: sub_140A1EEE4+169E8↓j
                mov     [rbx], dl
                add     rbx, r11
                shr     rdx, 8
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A358BF

loc_140A358CE:                          ; CODE XREF: sub_140A1EEE4+169B5↑j
                mov     r10d, r9d
                sub     edi, r9d
                mov     ebx, r15d
                mov     r9, 7010008004002001h
                add     rbx, r12
                add     rbx, r10
                cmp     edi, 8
                jb      short loc_140A35926
                mov     r8d, edi
                shr     r8, 3

loc_140A358F3:                          ; CODE XREF: sub_140A1EEE4+16A40↓j
                rdtsc
                shl     rdx, 20h
                add     edi, 0FFFFFFF8h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     [rsp+24B8h+var_15D0], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r8, r11
                jnz     short loc_140A358F3

loc_140A35926:                          ; CODE XREF: sub_140A1EEE4+16A06↑j
                test    edi, edi
                jz      short loc_140A3595C
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     [rsp+24B8h+var_15C8], rdx
                xor     rdx, rax

loc_140A3594E:                          ; CODE XREF: sub_140A1EEE4+16A76↓j
                mov     [rbx], dl
                add     rbx, r11
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A3594E

loc_140A3595C:                          ; CODE XREF: sub_140A1EEE4+16A44↑j
                lea     rcx, [r12+r10]
                test    rcx, rcx
                jnz     loc_140A35D25
                xor     r11d, r11d

loc_140A3596C:                          ; CODE XREF: sub_140A1EEE4+1677F↑j
                                        ; sub_140A1EEE4+16790↑j
                mov     r13d, 1

loc_140A35972:                          ; CODE XREF: sub_140A1EEE4+16946↑j
                                        ; sub_140A1EEE4+16DC0↓j ...
                lea     rdi, sub_140A13350

loc_140A35979:                          ; CODE XREF: sub_140A1EEE4+164B9↑j
                                        ; sub_140A1EEE4+16B33↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1588], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                mov     edx, 5
                add     rax, rax
                sub     rcx, rax
                mov     eax, ecx
                cmp     ecx, edx
                ja      loc_140A35312
                cmp     eax, edx

loc_140A359D3:                          ; CODE XREF: sub_140A1EEE4+16421↑j
                jz      loc_140A35DEA
                test    eax, eax
                jz      loc_140A35DDC
                sub     eax, 1
                jz      loc_140A35DCE
                sub     eax, 1
                jz      loc_140A35DC0
                cmp     eax, 1
                jz      loc_140A35DB2
                lea     rcx, sub_14032A6F0
                mov     eax, 0FB006943h
                jmp     loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35A0D:                          ; CODE XREF: sub_140A1EEE4+164A9↑j
                test    eax, 0FFFFFFFAh
                jnz     short loc_140A35A1D
                cmp     ecx, 8
                jnz     loc_140A35979

loc_140A35A1D:                          ; CODE XREF: sub_140A1EEE4+16B2E↑j
                mov     r9d, [r14+990h]
                mov     r8d, r11d
                and     r9d, 10000000h
                jnz     short loc_140A35A37
                mov     r8d, [r14+924h]

loc_140A35A37:                          ; CODE XREF: sub_140A1EEE4+16B4A↑j
                mov     r10d, [r14+810h]
                rdtsc
                shl     rdx, 20h
                mov     rdi, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                mov     r15, rax
                mov     [rsp+24B8h+var_15C0], rdx
                xor     r15d, edx
                and     r15d, 7FFh
                rdtsc
                shl     rdx, 20h
                lea     ebx, [r15+1]
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     rax, rdx
                mov     [rsp+24B8h+var_15B8], rdx
                xor     edx, edx
                div     rbx
                mov     r12, rdx
                test    r8d, r8d
                jz      loc_140A35B4E
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_15B0], rdx
                and     eax, r13d
                or      edx, 0FFFFFFFFh
                shl     eax, 0Ch
                add     eax, 1000h
                add     r15d, eax
                lea     eax, [r15+110h]
                lea     r13, [rax+8]
                mov     edi, eax
                mov     rax, [r14+220h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A3581D
                mov     rax, [r14+230h]
                lea     rdx, [rdi+0FFFh]
                and     edx, 0FFFFF000h
                lea     r8d, [r11+40h]
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop
                xor     r11d, r11d
                test    al, al
                jnz     short loc_140A35B3F
                mov     edx, edi
                mov     rcx, rbx
                jmp     loc_140A35792
; ---------------------------------------------------------------------------

loc_140A35B3F:                          ; CODE XREF: sub_140A1EEE4+16C4F↑j
                mov     [rbx], r13
                add     rbx, 8
                mov     r13d, 1
                jmp     short loc_140A35B75
; ---------------------------------------------------------------------------

loc_140A35B4E:                          ; CODE XREF: sub_140A1EEE4+16BC5↑j
                mov     rax, [r14+0F8h]
                lea     edx, [r15+110h]
                neg     r9d
                mov     r8d, r10d
                sbb     ecx, ecx
                and     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     rbx, rax
                xor     r11d, r11d

loc_140A35B75:                          ; CODE XREF: sub_140A1EEE4+16C68↑j
                test    rbx, rbx
                jz      loc_140A35823
                mov     r8d, r12d
                mov     rdi, rbx
                mov     r10d, 0FFFFFFF8h
                cmp     r12d, 8
                jb      short loc_140A35BD7
                mov     r9d, r12d
                mov     r11, 7010008004002001h
                shr     r9, 3

loc_140A35BA1:                          ; CODE XREF: sub_140A1EEE4+16CEE↓j
                rdtsc
                shl     rdx, 20h
                add     r8d, r10d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_15A8], rdx
                xor     rdx, rax
                mov     [rdi], rdx
                add     rdi, 8
                sub     r9, r13
                jnz     short loc_140A35BA1
                xor     r11d, r11d

loc_140A35BD7:                          ; CODE XREF: sub_140A1EEE4+16CAA↑j
                mov     r9, 7010008004002001h
                test    r8d, r8d
                jz      short loc_140A35C19
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     [rsp+24B8h+var_15A0], rdx
                xor     rdx, rax

loc_140A35C0A:                          ; CODE XREF: sub_140A1EEE4+16D33↓j
                mov     [rdi], dl
                add     rdi, r13
                shr     rdx, 8
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A35C0A

loc_140A35C19:                          ; CODE XREF: sub_140A1EEE4+16D00↑j
                mov     eax, r12d
                sub     r15d, r12d
                add     rbx, rax
                lea     rdi, [rbx+110h]
                cmp     r15d, 8
                jb      short loc_140A35C69
                mov     r8d, r15d
                shr     r8, 3

loc_140A35C36:                          ; CODE XREF: sub_140A1EEE4+16D83↓j
                rdtsc
                shl     rdx, 20h
                add     r15d, r10d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     [rsp+24B8h+var_1598], rdx
                xor     rdx, rax
                mov     [rdi], rdx
                add     rdi, 8
                sub     r8, r13
                jnz     short loc_140A35C36

loc_140A35C69:                          ; CODE XREF: sub_140A1EEE4+16D49↑j
                test    r15d, r15d
                jz      short loc_140A35CA1
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     [rsp+24B8h+var_1590], rdx
                xor     rdx, rax

loc_140A35C92:                          ; CODE XREF: sub_140A1EEE4+16DBB↓j
                mov     [rdi], dl
                add     rdi, r13
                shr     rdx, 8
                add     r15d, 0FFFFFFFFh
                jnz     short loc_140A35C92

loc_140A35CA1:                          ; CODE XREF: sub_140A1EEE4+16D88↑j
                test    rbx, rbx
                jz      loc_140A35972
                lea     rcx, [rbx+48h]
                mov     r8d, 0C8h
                mov     rdi, rcx
                lea     rdx, sub_140A3A270
                mov     r9d, 19h

loc_140A35CC4:                          ; CODE XREF: sub_140A1EEE4+16DF4↓j
                mov     rax, [rdx]
                add     r8d, r10d
                mov     [rdi], rax
                add     rdx, 8
                add     rdi, 8
                sub     r9, r13
                jnz     short loc_140A35CC4
                test    r8d, r8d
                jz      short loc_140A35CEF

loc_140A35CDF:                          ; CODE XREF: sub_140A1EEE4+16E09↓j
                mov     al, [rdx]
                add     rdx, r13
                mov     [rdi], al
                add     rdi, r13
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A35CDF

loc_140A35CEF:                          ; CODE XREF: sub_140A1EEE4+16DF9↑j
                mov     byte ptr [rbx], 13h
                mov     [rbx+1], r13b
                mov     [rbx+2], r11w
                mov     [rbx+18h], rcx
                mov     [rbx+20h], r11
                mov     [rbx+38h], r11
                mov     [rbx+10h], r11
                test    rcx, rcx
                jz      loc_140A35972
                bts     dword ptr [r14+990h], 8

loc_140A35D1D:                          ; CODE XREF: sub_140A1EEE4+16E99↓j
                mov     eax, r11d
                jmp     loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35D25:                          ; CODE XREF: sub_140A1EEE4+16A7F↑j
                mov     rdx, rcx
                cmp     r15d, 8
                jb      short loc_140A35D52
                mov     ebx, r15d
                mov     r10d, 0FFFFFFF8h
                shr     rbx, 3

loc_140A35D3B:                          ; CODE XREF: sub_140A1EEE4+16E6C↓j
                mov     rax, [r13+0]
                add     r15d, r10d
                mov     [rdx], rax
                add     r13, 8
                add     rdx, 8
                sub     rbx, r11
                jnz     short loc_140A35D3B

loc_140A35D52:                          ; CODE XREF: sub_140A1EEE4+16E48↑j
                test    r15d, r15d
                jz      short loc_140A35D6B
                sub     rdx, r13

loc_140A35D5A:                          ; CODE XREF: sub_140A1EEE4+16E85↓j
                mov     al, [r13+0]
                mov     [rdx+r13], al
                add     r13, r11
                add     r15d, 0FFFFFFFFh
                jnz     short loc_140A35D5A

loc_140A35D6B:                          ; CODE XREF: sub_140A1EEE4+16E71↑j
                bts     dword ptr [r14+990h], 9
                mov     r13d, 1
                xor     r11d, r11d
                jmp     short loc_140A35D1D
; ---------------------------------------------------------------------------

loc_140A35D7F:                          ; CODE XREF: sub_140A1EEE4+1644C↑j
                lea     rcx, sub_1402010F0
                mov     eax, 80007078h
                jmp     short loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35D8D:                          ; CODE XREF: sub_140A1EEE4+16443↑j
                lea     rcx, sub_14032A930
                mov     eax, 0E4006A9Ch
                jmp     short loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35D9B:                          ; CODE XREF: sub_140A1EEE4+1643A↑j
                lea     rcx, sub_14032A3A0
                mov     eax, 40007438h
                jmp     short loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35DA9:                          ; CODE XREF: sub_140A1EEE4+16431↑j
                lea     rcx, sub_140501240
                jmp     short loc_140A35DF1
; ---------------------------------------------------------------------------

loc_140A35DB2:                          ; CODE XREF: sub_140A1EEE4+16B12↑j
                lea     rcx, sub_140394BD0
                mov     eax, 0F700697Fh
                jmp     short loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35DC0:                          ; CODE XREF: sub_140A1EEE4+16B09↑j
                lea     rcx, sub_14032A810
                mov     eax, 0F00069E8h
                jmp     short loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35DCE:                          ; CODE XREF: sub_140A1EEE4+16B00↑j
                lea     rcx, sub_14035D190
                mov     eax, 0D0006BC8h
                jmp     short loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35DDC:                          ; CODE XREF: sub_140A1EEE4+16AF7↑j
                lea     rcx, sub_14032A2D0
                mov     eax, 0B0006DA8h
                jmp     short loc_140A35DF6
; ---------------------------------------------------------------------------

loc_140A35DEA:                          ; CODE XREF: sub_140A1EEE4:loc_140A359D3↑j
                lea     rcx, sub_140306830

loc_140A35DF1:                          ; CODE XREF: sub_140A1EEE4+16ECC↑j
                mov     eax, 77F8h

loc_140A35DF6:                          ; CODE XREF: sub_140A1EEE4+16B24↑j
                                        ; sub_140A1EEE4+16E3C↑j ...
                cmp     [r14+954h], r11d
                jnz     short loc_140A35E06
                mov     [r14+954h], eax

loc_140A35E06:                          ; CODE XREF: sub_140A1EEE4+16F19↑j
                mov     [r14+7D8h], rcx
                mov     rdi, 7010008004002001h

loc_140A35E17:                          ; CODE XREF: sub_140A1EEE4+1640E↑j
                mov     rax, [r14+960h]
                or      r12d, 0FFFFFFFFh
                mov     rcx, [rax]
                mov     [r14+968h], rcx
                mov     [r14+970h], r12d
                mov     [r14+974h], r11d
                mov     [r14+978h], r11
                cli
                cmp     cs:KdDebuggerNotPresent, r11b
                jnz     short loc_140A35E4D

loc_140A35E4B:                          ; CODE XREF: sub_140A1EEE4:loc_140A35E4B↓j
                jmp     short loc_140A35E4B
; ---------------------------------------------------------------------------

loc_140A35E4D:                          ; CODE XREF: sub_140A1EEE4+16F65↑j
                sti
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rdi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1580], rdx
                cmp     [rsp+24B8h+var_234C], 3
                mov     [r14+95Ch], eax
                jnz     short loc_140A35EA4
                mov     rdx, [rsp+24B8h+arg_18]
                mov     rcx, r14
                call    sub_140A39A14
                xor     r11d, r11d
                mov     [rsp+24B8h+var_2468], rax
                test    rax, rax
                jnz     short loc_140A35EA9
                jmp     loc_140A237B3
; ---------------------------------------------------------------------------

loc_140A35EA4:                          ; CODE XREF: sub_140A1EEE4+16F9C↑j
                mov     [rsp+24B8h+var_2468], r11

loc_140A35EA9:                          ; CODE XREF: sub_140A1EEE4+16FB9↑j
                mov     r8d, [r14+924h]
                mov     [r14+0A1Ch], r11d
                mov     ecx, [r14+7E4h]
                cmp     dword ptr [r14+838h], 7
                lea     edx, [rcx+0FFFh]
                cmovnz  edx, ecx
                mov     rcx, r14
                call    sub_140A10B30
                xor     edi, edi
                mov     [rsp+24B8h+var_2430], rax
                mov     r15, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     ecx, [r14+990h]
                test    cl, 4
                jnz     loc_140A35FA5
                mov     eax, [r14+7E4h]
                and     ecx, 20000000h
                mov     rbx, [r14+7C8h]
                neg     ecx
                sbb     edx, edx
                and     edx, [r14+924h]
                cmp     eax, 8
                jb      short loc_140A35F36
                mov     ecx, eax
                shr     rcx, 3

loc_140A35F27:                          ; CODE XREF: sub_140A1EEE4+17050↓j
                mov     [r14], rdi
                add     eax, 0FFFFFFF8h
                add     r14, 8
                sub     rcx, r13
                jnz     short loc_140A35F27

loc_140A35F36:                          ; CODE XREF: sub_140A1EEE4+1703B↑j
                test    eax, eax
                jz      short loc_140A35F45

loc_140A35F3A:                          ; CODE XREF: sub_140A1EEE4+1705F↓j
                mov     [r14], dil
                add     r14, r13
                add     eax, r12d
                jnz     short loc_140A35F3A

loc_140A35F45:                          ; CODE XREF: sub_140A1EEE4+17054↑j
                mov     edi, [r15+924h]
                mov     [r15+924h], edx
                cmp     edx, 3
                jz      short loc_140A35F8D
                test    dword ptr [r15+990h], 10000000h
                mov     ecx, 0
                cmovz   ecx, edx
                test    ecx, ecx
                jz      short loc_140A35F84
                mov     rax, [r15+228h]
                lea     rcx, [rbx-8]
                mov     rdx, [rcx]
                call    j__guard_dispatch_icall_nop
                jmp     short loc_140A35F9C
; ---------------------------------------------------------------------------

loc_140A35F84:                          ; CODE XREF: sub_140A1EEE4+17089↑j
                mov     rax, [r15+100h]
                jmp     short loc_140A35F94
; ---------------------------------------------------------------------------

loc_140A35F8D:                          ; CODE XREF: sub_140A1EEE4+17072↑j
                mov     rax, [r15+368h]

loc_140A35F94:                          ; CODE XREF: sub_140A1EEE4+170A7↑j
                mov     rcx, rbx
                call    j__guard_dispatch_icall_nop

loc_140A35F9C:                          ; CODE XREF: sub_140A1EEE4+1709E↑j
                mov     [r15+924h], edi
                xor     edi, edi

loc_140A35FA5:                          ; CODE XREF: sub_140A1EEE4+17013↑j
                and     dword ptr [r15+990h], 0FFFFFFFBh
                mov     rax, [r15+0A88h]
                mov     [rsp+24B8h+var_2438], rax
                mov     [r15+0A88h], rdi
                mov     eax, [r15+0A28h]
                test    eax, eax
                jz      loc_140A36B6D
                lea     r12, [r15+rax]
                mov     r10, [r12+8]
                mov     [rsp+24B8h+var_2420], r12
                test    r10, r10
                jz      loc_140A362AA
                mov     edi, [r12+10h]
                mov     r8, r10
                add     [r15+828h], edi
                mov     rax, r10
                mov     r9d, [r15+814h]
                mov     r14, [r15+818h]
                lea     rcx, [r10+rdi]
                cmp     r10, rcx
                jnb     short loc_140A36021

loc_140A36015:                          ; CODE XREF: sub_140A1EEE4+1713B↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A36015

loc_140A36021:                          ; CODE XREF: sub_140A1EEE4+1712F↑j
                mov     r11d, edi
                mov     rbx, r14
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A3609A
                mov     r15, 7010008004002001h

loc_140A3603A:                          ; CODE XREF: sub_140A1EEE4+171AC↓j
                mov     edx, 8

loc_140A3603F:                          ; CODE XREF: sub_140A1EEE4+17178↓j
                mov     rax, [r8]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r13
                jnz     short loc_140A3603F
                mov     rcx, r8
                sub     rcx, r10
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1578], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A3603A
                mov     r15, [rsp+24B8h+var_2430]

loc_140A3609A:                          ; CODE XREF: sub_140A1EEE4+1714A↑j
                and     edi, 7Fh
                cmp     edi, 8
                jb      short loc_140A360BD
                mov     edx, edi
                shr     rdx, 3

loc_140A360A8:                          ; CODE XREF: sub_140A1EEE4+171D7↓j
                xor     rbx, [r8]
                mov     ecx, r9d
                rol     rbx, cl
                add     r8, 8
                add     edi, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A360A8

loc_140A360BD:                          ; CODE XREF: sub_140A1EEE4+171BC↑j
                test    edi, edi
                jz      short loc_140A360D6

loc_140A360C1:                          ; CODE XREF: sub_140A1EEE4+171F0↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r9d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A360C1

loc_140A360D6:                          ; CODE XREF: sub_140A1EEE4+171DB↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     edi, edi
                jmp     short loc_140A360E7
; ---------------------------------------------------------------------------

loc_140A360E1:                          ; CODE XREF: sub_140A1EEE4+17206↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A360E7:                          ; CODE XREF: sub_140A1EEE4+171FB↑j
                test    rax, rax
                jnz     short loc_140A360E1
                btr     ebx, 1Fh
                mov     r14d, edi
                cmp     ebx, [r12+14h]
                jz      loc_140A3626F
                cmp     [r12], edi
                jnz     short loc_140A3610D
                cmp     [r12+18h], edi
                cmovnz  r14d, r13d

loc_140A3610D:                          ; CODE XREF: sub_140A1EEE4+1721E↑j
                mov     ecx, [r12+10h]
                mov     rdx, [r12+8]
                test    rcx, rcx
                jz      loc_140A361F0
                mov     eax, [r15+994h]
                test    al, 40h
                jz      loc_140A361F0
                mov     r13, cr8
                mov     eax, 2
                mov     cr8, rax
                mov     rdi, rdx
                lea     rax, [rcx-1]
                and     rdi, 0FFFFFFFFFFFFF000h
                add     rax, rdx
                or      rax, 0FFFh
                mov     [rsp+24B8h+arg_18], rax
                lea     rax, [rdi-1]
                mov     [rsp+24B8h+var_2428], rax

loc_140A36167:                          ; CODE XREF: sub_140A1EEE4+172E9↓j
                movzx   r12d, r13b

loc_140A3616B:                          ; CODE XREF: sub_140A1EEE4+172C0↓j
                mov     rax, [r15+468h]
                xor     edx, edx
                mov     rcx, rdi
                call    j__guard_dispatch_icall_nop
                cmp     eax, 0C000022Dh
                jnz     short loc_140A361A6
                test    r14d, r14d
                jnz     short loc_140A361E2
                cmp     r13b, 1
                ja      short loc_140A361AA
                movzx   r12d, r13b
                mov     cr8, r12
                mov     al, [rdi]
                mov     rax, cr8
                lea     eax, [r14+2]
                mov     cr8, rax
                jmp     short loc_140A3616B
; ---------------------------------------------------------------------------

loc_140A361A6:                          ; CODE XREF: sub_140A1EEE4+1729D↑j
                test    eax, eax
                js      short loc_140A361E2

loc_140A361AA:                          ; CODE XREF: sub_140A1EEE4+172A8↑j
                mov     rax, [rsp+24B8h+var_2428]
                mov     ecx, 1000h
                add     rax, rcx
                add     rdi, rcx
                mov     [rsp+24B8h+var_2428], rax
                cmp     rax, [rsp+24B8h+arg_18]
                jnz     short loc_140A36167
                mov     cr8, r12
                mov     r12, [rsp+24B8h+var_2420]
                xor     edi, edi
                jmp     loc_140A3626F
; ---------------------------------------------------------------------------

loc_140A361E2:                          ; CODE XREF: sub_140A1EEE4+172A2↑j
                                        ; sub_140A1EEE4+172C4↑j
                mov     cr8, r12
                mov     r12, [rsp+24B8h+var_2420]
                xor     edi, edi

loc_140A361F0:                          ; CODE XREF: sub_140A1EEE4+17236↑j
                                        ; sub_140A1EEE4+17245↑j
                mov     eax, [r15+8F8h]
                mov     ecx, [r12+14h]
                test    eax, eax
                jnz     short loc_140A36217
                mov     eax, ebx
                xor     rcx, rax
                mov     rax, [r15+590h]
                mov     [rax+18h], rcx
                mov     eax, [r15+8F8h]

loc_140A36217:                          ; CODE XREF: sub_140A1EEE4+1731A↑j
                mov     rcx, [r12+8]
                test    eax, eax
                jnz     short loc_140A3626F
                mov     rax, 0A3A03F5891C8B4E8h
                xor     edx, edx
                add     rax, r15
                mov     [r15+900h], rax
                mov     rax, 0B3B74BDEE4453415h
                add     rax, r12
                mov     [r15+908h], rax
                movsxd  rax, dword ptr [r12]
                mov     [r15+910h], rax
                mov     [r15+918h], rcx
                mov     rcx, r15
                mov     dword ptr [r15+8F8h], 1
                call    sub_140A113CC

loc_140A3626F:                          ; CODE XREF: sub_140A1EEE4+17214↑j
                                        ; sub_140A1EEE4+172F9↑j ...
                mov     rcx, [r12+18h]
                mov     rax, [r15+100h]
                call    j__guard_dispatch_icall_nop
                mov     [r12+8], rdi
                mov     [r12+10h], edi
                mov     rcx, [r15+818h]
                mov     rax, rcx
                jmp     short loc_140A36298
; ---------------------------------------------------------------------------

loc_140A36296:                          ; CODE XREF: sub_140A1EEE4+173BB↓j
                xor     ecx, eax

loc_140A36298:                          ; CODE XREF: sub_140A1EEE4+173B0↑j
                shr     rax, 1Fh
                test    rax, rax
                jnz     short loc_140A36296
                btr     ecx, 1Fh
                mov     [r12+14h], ecx

loc_140A362AA:                          ; CODE XREF: sub_140A1EEE4+17102↑j
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1570], rdx
                xor     rcx, rax
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                lea     rax, [rdx+rdx*2]
                cmp     rcx, rax
                jnz     loc_140A36B6D
                mov     r8d, [r15+810h]
                lea     r13, [r12+18h]
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     r14, rax
                mov     [rsp+24B8h+var_1568], rdx
                xor     r14d, edx
                and     r14d, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                lea     ecx, [r14+1]
                xor     rax, rdx
                mov     [rsp+24B8h+var_1560], rdx
                xor     edx, edx
                div     rcx
                mov     ecx, [r15+990h]
                mov     rax, [r15+0F8h]
                mov     r12, rdx
                shr     ecx, 13h
                lea     edx, [r14+0AA0h]
                and     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     r9, rax
                test    rax, rax
                jnz     short loc_140A3639D
                lea     r12d, [rax+1]
                add     [r15+0A18h], r12d
                jmp     loc_140A36B73
; ---------------------------------------------------------------------------

loc_140A3639D:                          ; CODE XREF: sub_140A1EEE4+174A7↑j
                mov     edi, r12d
                mov     rbx, r9
                mov     r10d, 0FFFFFFF8h
                cmp     r12d, 8
                jb      short loc_140A363FC
                mov     r8d, r12d
                mov     r15, 7010008004002001h
                shr     r8, 3

loc_140A363C0:                          ; CODE XREF: sub_140A1EEE4+1750E↓j
                rdtsc
                shl     rdx, 20h
                add     edi, r10d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r15
                mul     rcx
                mov     [rsp+24B8h+var_1558], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r8, 1
                jnz     short loc_140A363C0
                mov     r15, [rsp+24B8h+var_2430]

loc_140A363FC:                          ; CODE XREF: sub_140A1EEE4+174C9↑j
                test    edi, edi
                jz      short loc_140A36439
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     [rsp+24B8h+var_1550], rdx
                xor     rdx, rax

loc_140A3642B:                          ; CODE XREF: sub_140A1EEE4+17553↓j
                mov     [rbx], dl
                inc     rbx
                shr     rdx, 8
                add     edi, 0FFFFFFFFh
                jnz     short loc_140A3642B

loc_140A36439:                          ; CODE XREF: sub_140A1EEE4+1751A↑j
                mov     edi, r12d
                sub     r14d, r12d
                add     rdi, r9
                mov     r12d, 1
                lea     rbx, [rdi+0AA0h]
                cmp     r14d, 8
                jb      short loc_140A36499
                mov     r8d, r14d
                mov     r11, 7010008004002001h
                shr     r8, 3

loc_140A36466:                          ; CODE XREF: sub_140A1EEE4+175B3↓j
                rdtsc
                shl     rdx, 20h
                add     r14d, r10d
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r11
                mul     rcx
                mov     [rsp+24B8h+var_1548], rdx
                xor     rdx, rax
                mov     [rbx], rdx
                add     rbx, 8
                sub     r8, r12
                jnz     short loc_140A36466

loc_140A36499:                          ; CODE XREF: sub_140A1EEE4+1756F↑j
                test    r14d, r14d
                jz      short loc_140A364D8
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     [rsp+24B8h+var_1540], rdx
                xor     rdx, rax

loc_140A364C9:                          ; CODE XREF: sub_140A1EEE4+175F2↓j
                mov     [rbx], dl
                add     rbx, r12
                shr     rdx, 8
                add     r14d, 0FFFFFFFFh
                jnz     short loc_140A364C9

loc_140A364D8:                          ; CODE XREF: sub_140A1EEE4+175B8↑j
                test    r13, r13
                jz      short loc_140A364E1
                mov     [r13+0], r9

loc_140A364E1:                          ; CODE XREF: sub_140A1EEE4+175F7↑j
                xor     r13d, r13d
                test    rdi, rdi
                jz      loc_140A36B76
                mov     rax, [rsp+24B8h+var_2420]
                mov     r9d, 0AA0h
                mov     ebx, r9d
                mov     rcx, r15
                mov     rdx, rdi
                mov     r8d, 154h
                mov     [rax+8], rdi
                mov     [rax+10h], r9d

loc_140A36512:                          ; CODE XREF: sub_140A1EEE4+17642↓j
                mov     rax, [rcx]
                add     ebx, r10d
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r8, r12
                jnz     short loc_140A36512
                test    ebx, ebx
                jz      short loc_140A3653B

loc_140A3652C:                          ; CODE XREF: sub_140A1EEE4+17655↓j
                mov     al, [rcx]
                add     rcx, r12
                mov     [rdx], al
                add     rdx, r12
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A3652C

loc_140A3653B:                          ; CODE XREF: sub_140A1EEE4+17646↑j
                bts     dword ptr [rdi+990h], 13h
                mov     r13, 7010008004002001h
                mov     [rdi+7E4h], r9d
                mov     [rdi+808h], r9d
                and     dword ptr [rdi+990h], 0FFFFFFFDh
                mov     eax, [rdi+7E4h]
                mov     [rdi+0A2Ch], eax
                add     eax, 0FFFFFF38h
                mov     ecx, [rdi+954h]
                mov     dword ptr [rsp+24B8h+arg_18], ecx
                mov     ecx, [rdi+990h]
                mov     dword ptr [rsp+24B8h+var_2450], ecx
                mov     rcx, [rdi+4E8h]
                shr     eax, 3
                mov     [rsp+24B8h+var_2428], rcx
                mov     rcx, [rdi+5C0h]
                mov     [rsp+24B8h+var_2410], rcx
                mov     dword ptr [rsp+24B8h+var_2458], eax
                mov     [rdi+0C4h], eax

loc_140A365B5:                          ; CODE XREF: sub_140A1EEE4+176F8↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                mov     r11, rdx
                mov     [rsp+24B8h+var_1538], rdx
                xor     r11, rax
                jz      short loc_140A365B5
                mov     rax, [rdi+7B8h]
                lea     r12, [rdi+798h]
                mov     ebx, 20h ; ' '
                mov     [rsp+24B8h+var_23E8], rax
                mov     eax, [rdi+828h]
                lea     rdx, [rsp+24B8h+var_1088]
                mov     dword ptr [rsp+24B8h+var_2460], eax
                mov     rcx, r12
                xor     r13d, r13d
                lea     r14d, [rbx-1Ch]
                mov     r8d, r14d
                lea     r9d, [rbx-1Fh]

loc_140A3661C:                          ; CODE XREF: sub_140A1EEE4+1774C↓j
                mov     rax, [rcx]
                add     ebx, r10d
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r8, r9
                jnz     short loc_140A3661C
                test    ebx, ebx
                jz      short loc_140A36645

loc_140A36636:                          ; CODE XREF: sub_140A1EEE4+1775F↓j
                mov     al, [rcx]
                add     rcx, r9
                mov     [rdx], al
                add     rdx, r9
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A36636

loc_140A36645:                          ; CODE XREF: sub_140A1EEE4+17750↑j
                mov     [rdi+7B8h], r13
                mov     ecx, 20h ; ' '
                mov     [rdi+828h], r13d
                mov     rax, r12
                mov     rdx, r14

loc_140A3665E:                          ; CODE XREF: sub_140A1EEE4+17787↓j
                mov     [rax], r13
                add     ecx, r10d
                add     rax, 8
                sub     rdx, r9
                jnz     short loc_140A3665E
                test    ecx, ecx
                jz      short loc_140A3667C

loc_140A36671:                          ; CODE XREF: sub_140A1EEE4+17796↓j
                mov     [rax], r13b
                add     rax, r9
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A36671

loc_140A3667C:                          ; CODE XREF: sub_140A1EEE4+1778B↑j
                mov     eax, [rdi+7E4h]
                mov     r8, rdi
                add     [rdi+828h], eax
                mov     rax, rdi
                mov     r9d, [rdi+7E4h]
                mov     r10d, [rdi+814h]
                mov     r13, [rdi+818h]
                lea     rcx, [rdi+r9]
                cmp     rdi, rcx
                jnb     short loc_140A366B8

loc_140A366AC:                          ; CODE XREF: sub_140A1EEE4+177D2↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A366AC

loc_140A366B8:                          ; CODE XREF: sub_140A1EEE4+177C6↑j
                mov     r14d, r9d
                mov     rbx, r13
                shr     r14d, 7
                test    r14d, r14d
                jz      short loc_140A36745
                mov     r12, 7010008004002001h

loc_140A366D1:                          ; CODE XREF: sub_140A1EEE4+17849↓j
                mov     edx, 8

loc_140A366D6:                          ; CODE XREF: sub_140A1EEE4+17810↓j
                mov     rax, [r8]
                mov     ecx, r10d
                xor     rax, rbx
                mov     rbx, [r8+8]
                rol     rax, cl
                add     r8, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, 1
                jnz     short loc_140A366D6
                mov     rcx, r8
                sub     rcx, rdi
                xor     rcx, r13
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1530], rdx
                xor     r10d, eax
                mov     eax, 1
                and     r10d, 3Fh
                cmovz   r10d, eax
                add     r14d, 0FFFFFFFFh
                jnz     short loc_140A366D1
                mov     r15, [rsp+24B8h+var_2430]
                lea     r12, [rdi+798h]
                mov     rsi, 0FFFFFFFFB8797400h

loc_140A36745:                          ; CODE XREF: sub_140A1EEE4+177E1↑j
                and     r9d, 7Fh
                mov     r13d, 1
                cmp     r9d, 8
                jb      short loc_140A36772
                mov     edx, r9d
                shr     rdx, 3

loc_140A3675C:                          ; CODE XREF: sub_140A1EEE4+1788C↓j
                xor     rbx, [r8]
                mov     ecx, r10d
                rol     rbx, cl
                add     r8, 8
                add     r9d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A3675C

loc_140A36772:                          ; CODE XREF: sub_140A1EEE4+1786F↑j
                xor     r14d, r14d
                test    r9d, r9d
                jz      short loc_140A36790

loc_140A3677A:                          ; CODE XREF: sub_140A1EEE4+178AA↓j
                movzx   eax, byte ptr [r8]
                mov     ecx, r10d
                xor     rbx, rax
                add     r8, r13
                rol     rbx, cl
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A3677A

loc_140A36790:                          ; CODE XREF: sub_140A1EEE4+17894↑j
                mov     rax, [rsp+24B8h+var_23E8]
                lea     rcx, [rsp+24B8h+var_1088]
                mov     [rdi+7B8h], rax
                mov     edx, 20h ; ' '
                mov     eax, dword ptr [rsp+24B8h+var_2460]
                add     [rdi+828h], eax
                lea     r9d, [rdx-1Ch]
                mov     r8d, r9d

loc_140A367BD:                          ; CODE XREF: sub_140A1EEE4+178EE↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [r12], rax
                add     rcx, 8
                add     r12, 8
                sub     r8, r13
                jnz     short loc_140A367BD
                test    edx, edx
                jz      short loc_140A367E9

loc_140A367D8:                          ; CODE XREF: sub_140A1EEE4+17903↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [r12], al
                add     r12, r13
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A367D8

loc_140A367E9:                          ; CODE XREF: sub_140A1EEE4+178F2↑j
                mov     [rdi+7B8h], rbx
                test    dword ptr [rdi+990h], 40000000h
                jnz     loc_140A36A4B
                mov     rcx, rdi
                mov     eax, r14d
                mov     r10d, 19h

loc_140A3680C:                          ; CODE XREF: sub_140A1EEE4+17935↓j
                xor     [rcx], r11
                add     eax, r13d
                lea     rcx, [rcx+8]
                cmp     eax, r10d
                jb      short loc_140A3680C
                mov     r13d, dword ptr [rsp+24B8h+var_2458]
                mov     [rsp+24B8h+var_1528], r11
                mov     ebx, r13d
                test    r13d, r13d
                jz      short loc_140A3686B
                lea     rdx, [r13-1]
                lea     rdx, [rcx+rdx*8]

loc_140A36838:                          ; CODE XREF: sub_140A1EEE4+17985↓j
                xor     [rdx], r11
                lea     rax, [rsp+24B8h+var_1528]
                mov     ecx, ebx
                lea     rdx, [rdx-8]
                ror     r11, cl
                mov     [rsp+24B8h+var_1528], r11
                and     r11d, 3Fh
                btc     [rax], r11
                sub     ebx, 1
                jz      short loc_140A3686B
                mov     r11, [rsp+24B8h+var_1528]
                jmp     short loc_140A36838
; ---------------------------------------------------------------------------

loc_140A3686B:                          ; CODE XREF: sub_140A1EEE4+1794A↑j
                                        ; sub_140A1EEE4+1797B↑j
                mov     eax, dword ptr [rsp+24B8h+var_2450]
                bt      eax, 13h
                jnb     short loc_140A368C1
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rax
                mov     [rsp+24B8h+var_1520], rdx
                xor     rcx, rdx
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                lea     rax, [rdx+rdx*2]
                cmp     rcx, rax
                jz      short loc_140A368CB
                jmp     loc_140A36A45
; ---------------------------------------------------------------------------

loc_140A368C1:                          ; CODE XREF: sub_140A1EEE4+1798F↑j
                bt      eax, 8
                jb      loc_140A36A45

loc_140A368CB:                          ; CODE XREF: sub_140A1EEE4+179D6↑j
                mov     r12d, dword ptr [rsp+24B8h+arg_18]
                mov     ecx, edi
                mov     r15d, dword ptr [rsp+24B8h+var_2450]
                mov     r8, rdi
                mov     rsi, [rsp+24B8h+var_2410]
                ror     r8, cl
                xor     eax, eax
                mov     [rsp+24B8h+var_1268], r14b
                mov     [rsp+24B8h+var_1262], r9b
                mov     r14d, r10d
                mov     [rsp+24B8h+var_1265], 1
                mov     r9, rdi
                mov     [rsp+24B8h+var_1263], 2
                mov     r10d, eax
                lea     r11d, [rax+10h]
                mov     [rsp+24B8h+var_1260], 3
                mov     [rsp+24B8h+var_125F], 5
                mov     [rsp+24B8h+var_125C], 6
                mov     [rsp+24B8h+var_1261], 7
                mov     [rsp+24B8h+var_125B], 8
                mov     [rsp+24B8h+var_125E], 9
                mov     [rsp+24B8h+var_125A], 0Ah
                mov     [rsp+24B8h+var_1264], 0Bh
                mov     [rsp+24B8h+var_1267], 0Ch
                mov     [rsp+24B8h+var_1259], 0Dh
                mov     [rsp+24B8h+var_125D], 0Eh
                mov     [rsp+24B8h+var_1266], 0Fh

loc_140A36977:                          ; CODE XREF: sub_140A1EEE4+17B4C↓j
                test    r11d, r11d
                jz      short loc_140A369AA
                mov     rdx, [r9]
                mov     ebx, r11d

loc_140A36982:                          ; CODE XREF: sub_140A1EEE4+17ABF↓j
                movzx   eax, byte ptr [r9]
                and     rdx, 0FFFFFFFFFFFFFFF0h
                and     eax, 0Fh
                movzx   ecx, [rsp+rax+24B8h+var_1268]
                or      rdx, rcx
                ror     rdx, 4
                mov     [r9], rdx
                sub     rbx, 1
                jnz     short loc_140A36982
                mov     r13d, dword ptr [rsp+24B8h+var_2458]

loc_140A369AA:                          ; CODE XREF: sub_140A1EEE4+17A96↑j
                mov     eax, r10d
                add     rax, rdi
                sub     [r9], rax
                mov     rcx, [r9]
                bt      r15d, 9
                jb      short loc_140A369D8
                mov     rax, [rsp+24B8h+var_2428]
                xor     rax, rcx
                mov     ecx, esi
                bswap   rax
                xor     rax, r8
                ror     rax, cl
                xor     rax, rsi
                jmp     short loc_140A369DE
; ---------------------------------------------------------------------------

loc_140A369D8:                          ; CODE XREF: sub_140A1EEE4+17AD7↑j
                mov     rax, rcx
                xor     rax, r8

loc_140A369DE:                          ; CODE XREF: sub_140A1EEE4+17AF2↑j
                mov     edx, 0C8h
                mov     [r9], rax
                sub     edx, r10d
                mov     ecx, eax
                mov     ebx, eax
                not     ecx
                xor     ebx, 0EFFh
                mov     eax, r10d
                xor     rdx, rax
                add     r9, 8
                ror     rdx, cl
                mov     cl, bl
                xor     r8, rdx
                rol     r8, cl
                add     r8, rdi
                xor     r8, r12
                inc     r10d
                cmp     r10d, 19h
                jnz     short loc_140A36A2D
                bt      r15d, 13h
                lea     eax, [r10-19h]
                lea     r11d, [r10-18h]
                cmovnb  eax, r13d
                add     r14d, eax

loc_140A36A2D:                          ; CODE XREF: sub_140A1EEE4+17B33↑j
                cmp     r10d, r14d
                jb      loc_140A36977
                mov     r15, [rsp+24B8h+var_2430]
                mov     rsi, 0FFFFFFFFB8797400h

loc_140A36A45:                          ; CODE XREF: sub_140A1EEE4+179D8↑j
                                        ; sub_140A1EEE4+179E1↑j
                mov     r13d, 1

loc_140A36A4B:                          ; CODE XREF: sub_140A1EEE4+17916↑j
                mov     r12, [rsp+24B8h+var_2420]
                mov     r11, [r12+8]
                mov     r8d, [r12+10h]
                mov     rdi, r11
                add     [r15+828h], r8d
                mov     rax, r11
                mov     r9d, [r15+814h]
                mov     r14, [r15+818h]
                lea     rcx, [r11+r8]
                cmp     r11, rcx
                jnb     short loc_140A36A8D

loc_140A36A81:                          ; CODE XREF: sub_140A1EEE4+17BA7↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A36A81

loc_140A36A8D:                          ; CODE XREF: sub_140A1EEE4+17B9B↑j
                mov     r10d, r8d
                mov     rbx, r14
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A36B06
                mov     r12, 7010008004002001h

loc_140A36AA6:                          ; CODE XREF: sub_140A1EEE4+17C18↓j
                mov     edx, 8

loc_140A36AAB:                          ; CODE XREF: sub_140A1EEE4+17BE4↓j
                mov     rax, [rdi]
                mov     ecx, r9d
                xor     rax, rbx
                mov     rbx, [rdi+8]
                rol     rax, cl
                add     rdi, 10h
                xor     rbx, rax
                rol     rbx, cl
                sub     rdx, r13
                jnz     short loc_140A36AAB
                mov     rcx, rdi
                sub     rcx, r11
                xor     rcx, r14
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r12
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1518], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A36AA6
                mov     r12, [rsp+24B8h+var_2420]

loc_140A36B06:                          ; CODE XREF: sub_140A1EEE4+17BB6↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A36B2D
                mov     edx, r8d
                shr     rdx, 3

loc_140A36B17:                          ; CODE XREF: sub_140A1EEE4+17C47↓j
                xor     rbx, [rdi]
                mov     ecx, r9d
                rol     rbx, cl
                add     rdi, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A36B17

loc_140A36B2D:                          ; CODE XREF: sub_140A1EEE4+17C2A↑j
                test    r8d, r8d
                jz      short loc_140A36B47

loc_140A36B32:                          ; CODE XREF: sub_140A1EEE4+17C61↓j
                movzx   eax, byte ptr [rdi]
                mov     ecx, r9d
                xor     rbx, rax
                add     rdi, r13
                rol     rbx, cl
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A36B32

loc_140A36B47:                          ; CODE XREF: sub_140A1EEE4+17C4C↑j
                mov     rax, rbx
                shr     rax, 1Fh
                xor     r13d, r13d
                jmp     short loc_140A36B59
; ---------------------------------------------------------------------------

loc_140A36B53:                          ; CODE XREF: sub_140A1EEE4+17C78↓j
                xor     ebx, eax
                shr     rax, 1Fh

loc_140A36B59:                          ; CODE XREF: sub_140A1EEE4+17C6D↑j
                test    rax, rax
                jnz     short loc_140A36B53
                btr     ebx, 1Fh
                mov     [r12+14h], ebx
                lea     r12d, [rax+1]
                jmp     short loc_140A36B76
; ---------------------------------------------------------------------------

loc_140A36B6D:                          ; CODE XREF: sub_140A1EEE4+170E8↑j
                                        ; sub_140A1EEE4+1740E↑j
                mov     r12d, 1

loc_140A36B73:                          ; CODE XREF: sub_140A1EEE4+174B4↑j
                xor     r13d, r13d

loc_140A36B76:                          ; CODE XREF: sub_140A1EEE4+17603↑j
                                        ; sub_140A1EEE4+17C87↑j
                bts     dword ptr [r15+990h], 15h
                lea     rcx, [r15+620h]
                mov     r11d, [r15+0C4h]
                mov     rbx, r15
                mov     [r15+0C4h], r13d
                add     dword ptr [r15+828h], 620h
                mov     r8d, [r15+814h]
                mov     r10, [r15+818h]
                cmp     r15, rcx
                jnb     short loc_140A36BC4
                mov     rax, rbx

loc_140A36BB8:                          ; CODE XREF: sub_140A1EEE4+17CDE↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A36BB8

loc_140A36BC4:                          ; CODE XREF: sub_140A1EEE4+17CCF↑j
                mov     rdi, r10
                mov     r9d, 0Ch
                or      r14d, 0FFFFFFFFh
                mov     r13, 7010008004002001h

loc_140A36BDB:                          ; CODE XREF: sub_140A1EEE4+17D4C↓j
                mov     edx, 8

loc_140A36BE0:                          ; CODE XREF: sub_140A1EEE4+17D19↓j
                mov     rax, [rbx]
                mov     ecx, r8d
                xor     rax, rdi
                mov     rdi, [rbx+8]
                rol     rax, cl
                add     rbx, 10h
                xor     rdi, rax
                rol     rdi, cl
                sub     rdx, r12
                jnz     short loc_140A36BE0
                mov     rcx, rbx
                sub     rcx, r15
                xor     rcx, r10
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1510], rdx
                xor     r8d, eax
                and     r8d, 3Fh
                cmovz   r8d, r12d
                add     r9d, r14d
                jnz     short loc_140A36BDB
                lea     edx, [r9+20h]
                xor     r13d, r13d
                lea     r9d, [rdx-1Ch]

loc_140A36C3D:                          ; CODE XREF: sub_140A1EEE4+17D6C↓j
                xor     rdi, [rbx]
                mov     ecx, r8d
                rol     rdi, cl
                add     rbx, 8
                add     edx, 0FFFFFFF8h
                sub     r9, r12
                jnz     short loc_140A36C3D
                test    edx, edx
                jz      short loc_140A36C6A

loc_140A36C56:                          ; CODE XREF: sub_140A1EEE4+17D84↓j
                movzx   eax, byte ptr [rbx]
                mov     ecx, r8d
                xor     rdi, rax
                add     rbx, r12
                rol     rdi, cl
                add     edx, r14d
                jnz     short loc_140A36C56

loc_140A36C6A:                          ; CODE XREF: sub_140A1EEE4+17D70↑j
                mov     [r15+0C4h], r11d
                lea     rcx, [rsp+24B8h+var_AD8]
                mov     [r15+0A20h], rdi
                mov     rdx, r15
                mov     [r15+828h], r13d
                mov     r8d, 0AA0h
                mov     [r15+0A18h], r13d
                mov     rax, [r15+7C8h]
                mov     [rsp+24B8h+var_2420], rax
                call    memmove
                mov     edx, r12d
                mov     rcx, r15
                call    sub_140A113CC
                mov     ecx, [r15+954h]
                mov     r13d, [r15+0A2Ch]
                mov     dword ptr [rsp+24B8h+arg_18], ecx
                add     r13d, 0FFFFFF38h
                mov     ecx, [r15+990h]
                shr     r13d, 3
                mov     dword ptr [rsp+24B8h+var_2450], ecx
                mov     rcx, [r15+4E8h]
                mov     [rsp+24B8h+var_2428], rcx
                mov     rcx, [r15+5C0h]
                mov     [r15+0C4h], r13d
                mov     dword ptr [rsp+24B8h+var_2458], r13d
                mov     r13, 7010008004002001h
                mov     [rsp+24B8h+var_2410], rcx

loc_140A36D15:                          ; CODE XREF: sub_140A1EEE4+17E58↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                mov     r10, rdx
                mov     [rsp+24B8h+var_1508], rdx
                xor     r10, rax
                jz      short loc_140A36D15
                mov     rax, [r15+7B8h]
                lea     r14, [r15+798h]
                mov     r13d, dword ptr [rsp+24B8h+var_2458]
                lea     rdx, [rsp+24B8h+var_1068]
                mov     ebx, 20h ; ' '
                mov     [rsp+24B8h+var_23E8], rax
                mov     eax, [r15+828h]
                mov     rcx, r14
                mov     dword ptr [rsp+24B8h+var_2460], eax
                mov     r8d, 0FFFFFFF8h
                lea     r9d, [rbx-1Ch]
                mov     edi, r9d

loc_140A36D81:                          ; CODE XREF: sub_140A1EEE4+17EB1↓j
                mov     rax, [rcx]
                add     ebx, r8d
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     rdi, r12
                jnz     short loc_140A36D81
                test    ebx, ebx
                jz      short loc_140A36DAA

loc_140A36D9B:                          ; CODE XREF: sub_140A1EEE4+17EC4↓j
                mov     al, [rcx]
                add     rcx, r12
                mov     [rdx], al
                add     rdx, r12
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A36D9B

loc_140A36DAA:                          ; CODE XREF: sub_140A1EEE4+17EB5↑j
                mov     [r15+7B8h], rdi
                mov     ecx, 20h ; ' '
                mov     [r15+828h], edi
                mov     rax, r14
                mov     rdx, r9

loc_140A36DC3:                          ; CODE XREF: sub_140A1EEE4+17EEC↓j
                mov     [rax], rdi
                add     ecx, r8d
                add     rax, 8
                sub     rdx, r12
                jnz     short loc_140A36DC3
                test    ecx, ecx
                jz      short loc_140A36DE1

loc_140A36DD6:                          ; CODE XREF: sub_140A1EEE4+17EFB↓j
                mov     [rax], dil
                add     rax, r12
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A36DD6

loc_140A36DE1:                          ; CODE XREF: sub_140A1EEE4+17EF0↑j
                mov     eax, [r15+7E4h]
                mov     rbx, r15
                add     [r15+828h], eax
                mov     r8d, [r15+7E4h]
                mov     r9d, [r15+814h]
                mov     r12, [r15+818h]
                lea     rcx, [r15+r8]
                cmp     r15, rcx
                jnb     short loc_140A36E1F
                mov     rax, rbx

loc_140A36E13:                          ; CODE XREF: sub_140A1EEE4+17F39↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A36E13

loc_140A36E1F:                          ; CODE XREF: sub_140A1EEE4+17F2A↑j
                mov     r11d, r8d
                mov     rdi, r12
                shr     r11d, 7
                test    r11d, r11d
                jz      short loc_140A36EAA
                mov     r13, 7010008004002001h

loc_140A36E38:                          ; CODE XREF: sub_140A1EEE4+17FB8↓j
                mov     edx, 8

loc_140A36E3D:                          ; CODE XREF: sub_140A1EEE4+17F77↓j
                mov     rax, [rbx]
                mov     ecx, r9d
                xor     rax, rdi
                mov     rdi, [rbx+8]
                rol     rax, cl
                add     rbx, 10h
                xor     rdi, rax
                rol     rdi, cl
                sub     rdx, 1
                jnz     short loc_140A36E3D
                mov     r15, [rsp+24B8h+var_2430]
                mov     rcx, rbx
                sub     rcx, r15
                xor     rcx, r12
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, r13
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_1500], rdx
                xor     r9d, eax
                mov     eax, 1
                and     r9d, 3Fh
                cmovz   r9d, eax
                add     r11d, 0FFFFFFFFh
                jnz     short loc_140A36E38
                mov     r13d, dword ptr [rsp+24B8h+var_2458]
                mov     rsi, 0FFFFFFFFB8797400h

loc_140A36EAA:                          ; CODE XREF: sub_140A1EEE4+17F48↑j
                and     r8d, 7Fh
                mov     r11d, 1
                cmp     r8d, 8
                jb      short loc_140A36ED7
                mov     edx, r8d
                shr     rdx, 3

loc_140A36EC1:                          ; CODE XREF: sub_140A1EEE4+17FF1↓j
                xor     rdi, [rbx]
                mov     ecx, r9d
                rol     rdi, cl
                add     rbx, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, r11
                jnz     short loc_140A36EC1

loc_140A36ED7:                          ; CODE XREF: sub_140A1EEE4+17FD4↑j
                test    r8d, r8d
                jz      short loc_140A36EF1

loc_140A36EDC:                          ; CODE XREF: sub_140A1EEE4+1800B↓j
                movzx   eax, byte ptr [rbx]
                mov     ecx, r9d
                xor     rdi, rax
                add     rbx, r11
                rol     rdi, cl
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A36EDC

loc_140A36EF1:                          ; CODE XREF: sub_140A1EEE4+17FF6↑j
                mov     rax, [rsp+24B8h+var_23E8]
                lea     rcx, [rsp+24B8h+var_1068]
                mov     [r15+7B8h], rax
                mov     edx, 20h ; ' '
                mov     eax, dword ptr [rsp+24B8h+var_2460]
                add     [r15+828h], eax
                lea     r8d, [rdx-1Ch]
                mov     ebx, r8d

loc_140A36F1F:                          ; CODE XREF: sub_140A1EEE4+1804F↓j
                mov     rax, [rcx]
                add     edx, 0FFFFFFF8h
                mov     [r14], rax
                add     rcx, 8
                add     r14, 8
                sub     rbx, r11
                jnz     short loc_140A36F1F
                test    edx, edx
                jz      short loc_140A36F49

loc_140A36F39:                          ; CODE XREF: sub_140A1EEE4+18063↓j
                mov     al, [rcx]
                add     rcx, r11
                mov     [r14], al
                add     r14, r11
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A36F39

loc_140A36F49:                          ; CODE XREF: sub_140A1EEE4+18053↑j
                mov     [r15+7B8h], rdi
                test    dword ptr [r15+990h], 40000000h
                jnz     loc_140A37198
                xor     r14d, r14d
                mov     rcx, r15
                mov     eax, r14d
                lea     r9d, [r14+19h]

loc_140A36F6E:                          ; CODE XREF: sub_140A1EEE4+18097↓j
                xor     [rcx], r10
                add     eax, r11d
                lea     rcx, [rcx+8]
                cmp     eax, r9d
                jb      short loc_140A36F6E
                mov     [rsp+24B8h+var_14F8], r10
                mov     ebx, r13d
                test    r13d, r13d
                jz      short loc_140A36FCA
                mov     edx, r13d
                dec     rdx
                lea     rdx, [rcx+rdx*8]

loc_140A36F97:                          ; CODE XREF: sub_140A1EEE4+180E4↓j
                xor     [rdx], r10
                lea     rax, [rsp+24B8h+var_14F8]
                mov     ecx, ebx
                lea     rdx, [rdx-8]
                ror     r10, cl
                mov     [rsp+24B8h+var_14F8], r10
                and     r10d, 3Fh
                btc     [rax], r10
                sub     ebx, r11d
                jz      short loc_140A36FCA
                mov     r10, [rsp+24B8h+var_14F8]
                jmp     short loc_140A36F97
; ---------------------------------------------------------------------------

loc_140A36FCA:                          ; CODE XREF: sub_140A1EEE4+180A7↑j
                                        ; sub_140A1EEE4+180DA↑j
                mov     r12d, dword ptr [rsp+24B8h+var_2450]
                bt      r12d, 13h
                jnb     short loc_140A37022
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_14F0], rdx
                xor     rcx, rax
                mov     rax, 0AAAAAAAAAAAAAAABh
                mul     rcx
                shr     rdx, 1
                lea     rax, [rdx+rdx*2]
                cmp     rcx, rax
                jz      short loc_140A3702D
                jmp     loc_140A37198
; ---------------------------------------------------------------------------

loc_140A37022:                          ; CODE XREF: sub_140A1EEE4+180F0↑j
                bt      r12d, 8
                jb      loc_140A37198

loc_140A3702D:                          ; CODE XREF: sub_140A1EEE4+18137↑j
                mov     rsi, [rsp+24B8h+var_2410]
                mov     ecx, r15d
                mov     [rsp+24B8h+var_1255], r11b
                mov     rdi, r15
                mov     r11d, r9d
                mov     [rsp+24B8h+var_1258], r14b
                mov     r9d, r14d
                mov     [rsp+24B8h+var_1252], r8b
                mov     r14d, dword ptr [rsp+24B8h+arg_18]
                mov     r8, r15
                mov     [rsp+24B8h+var_1253], 2
                mov     r10d, 10h
                mov     [rsp+24B8h+var_1250], 3
                mov     [rsp+24B8h+var_124F], 5
                mov     [rsp+24B8h+var_124C], 6
                mov     [rsp+24B8h+var_1251], 7
                mov     [rsp+24B8h+var_124B], 8
                mov     [rsp+24B8h+var_124E], 9
                mov     [rsp+24B8h+var_124A], 0Ah
                mov     [rsp+24B8h+var_1254], 0Bh
                mov     [rsp+24B8h+var_1257], 0Ch
                mov     [rsp+24B8h+var_1249], 0Dh
                mov     [rsp+24B8h+var_124D], 0Eh
                mov     [rsp+24B8h+var_1256], 0Fh
                ror     rdi, cl

loc_140A370D5:                          ; CODE XREF: sub_140A1EEE4+182A7↓j
                test    r10d, r10d
                jz      short loc_140A37108
                mov     rdx, [r8]
                mov     ebx, r10d

loc_140A370E0:                          ; CODE XREF: sub_140A1EEE4+1821D↓j
                movzx   eax, byte ptr [r8]
                and     rdx, 0FFFFFFFFFFFFFFF0h
                and     eax, 0Fh
                movzx   ecx, [rsp+rax+24B8h+var_1258]
                or      rdx, rcx
                ror     rdx, 4
                mov     [r8], rdx
                sub     rbx, 1
                jnz     short loc_140A370E0
                mov     r12d, dword ptr [rsp+24B8h+var_2450]

loc_140A37108:                          ; CODE XREF: sub_140A1EEE4+181F4↑j
                mov     rdx, [r8]
                mov     eax, r9d
                sub     rdx, rax
                sub     rdx, r15
                mov     [r8], rdx
                bt      r12d, 9
                jb      short loc_140A37136
                xor     rdx, [rsp+24B8h+var_2428]
                mov     ecx, esi
                bswap   rdx
                xor     rdx, rdi
                ror     rdx, cl
                xor     rdx, rsi
                jmp     short loc_140A37139
; ---------------------------------------------------------------------------

loc_140A37136:                          ; CODE XREF: sub_140A1EEE4+18238↑j
                xor     rdx, rdi

loc_140A37139:                          ; CODE XREF: sub_140A1EEE4+18250↑j
                mov     [r8], rdx
                mov     ecx, edx
                mov     ebx, edx
                mov     eax, r9d
                xor     ebx, 0EFFh
                mov     edx, 0C8h
                sub     edx, r9d
                not     ecx
                xor     rdx, rax
                add     r8, 8
                ror     rdx, cl
                mov     cl, bl
                xor     rdi, rdx
                rol     rdi, cl
                add     rdi, r15
                xor     rdi, r14
                inc     r9d
                cmp     r9d, 19h
                jnz     short loc_140A37188
                bt      r12d, 13h
                lea     eax, [r9-19h]
                lea     r10d, [r9-18h]
                cmovnb  eax, r13d
                add     r11d, eax

loc_140A37188:                          ; CODE XREF: sub_140A1EEE4+1828E↑j
                cmp     r9d, r11d
                jb      loc_140A370D5
                mov     rsi, 0FFFFFFFFB8797400h

loc_140A37198:                          ; CODE XREF: sub_140A1EEE4+18077↑j
                                        ; sub_140A1EEE4+18139↑j ...
                mov     rcx, [rsp+24B8h+var_23C8]
                call    KeInitializeTimer
                cli
                xor     r10d, r10d
                cmp     cs:KdDebuggerNotPresent, r10b
                jnz     short loc_140A371B4

loc_140A371B2:                          ; CODE XREF: sub_140A1EEE4:loc_140A371B2↓j
                jmp     short loc_140A371B2
; ---------------------------------------------------------------------------

loc_140A371B4:                          ; CODE XREF: sub_140A1EEE4+182CC↑j
                sti
                cmp     [rsp+24B8h+var_234C], 7
                jnz     loc_140A3864D
                test    dword ptr [r15+990h], 10000000h
                mov     edi, 20h ; ' '
                lea     eax, [rdi-1Eh]
                cmovnz  edi, eax
                cmp     [r15+924h], r10d
                jz      short loc_140A371FA
                mov     rax, [r15+7C8h]
                mov     r8d, edi
                mov     rdx, [rax]
                lea     rcx, [rax-8]
                call    sub_140379FE0
                jmp     short loc_140A3721F
; ---------------------------------------------------------------------------

loc_140A371FA:                          ; CODE XREF: sub_140A1EEE4+182FC↑j
                mov     rbx, [r15+7C8h]
                lea     rdx, [rsp+24B8h+arg_8]
                mov     rcx, rbx
                call    ExQueryPoolBlockSize
                mov     r8d, edi
                mov     rdx, rax
                mov     rcx, rbx
                call    sub_14034B474

loc_140A3721F:                          ; CODE XREF: sub_140A1EEE4+18314↑j
                xor     r12d, r12d
                mov     rsi, 7010008004002001h
                mov     r8d, r12d
                lea     r13d, [r12+1]
                lea     r15d, [r12+6]
                lea     r14d, [r12+5]

loc_140A3723E:                          ; CODE XREF: sub_140A1EEE4+18580↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_14E8], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, r14d
                ja      loc_140A3733C
                jz      loc_140A37322
                test    ecx, ecx
                jz      short loc_140A37308
                sub     ecx, r13d
                jz      short loc_140A372EF
                sub     ecx, r13d
                jz      short loc_140A372D5
                cmp     ecx, r13d
                jz      short loc_140A372B8
                mov     [rsp+24B8h+var_1FFC], 67076494h
                mov     edi, [rsp+24B8h+var_1FFC]
                rol     edi, 4
                jmp     loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A372B8:                          ; CODE XREF: sub_140A1EEE4+183B8↑j
                mov     [rsp+24B8h+var_1FF8], 0A8223938h
                mov     edi, [rsp+24B8h+var_1FF8]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A372D5:                          ; CODE XREF: sub_140A1EEE4+183B3↑j
                mov     [rsp+24B8h+var_1FF4], 85B5910Dh
                mov     edi, [rsp+24B8h+var_1FF4]
                ror     edi, 2
                jmp     loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A372EF:                          ; CODE XREF: sub_140A1EEE4+183AE↑j
                mov     [rsp+24B8h+var_1FF0], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_1FF0]
                rol     edi, 1
                jmp     loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A37308:                          ; CODE XREF: sub_140A1EEE4+183A9↑j
                mov     [rsp+24B8h+var_1FEC], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_1FEC]
                ror     edi, 6
                jmp     loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A37322:                          ; CODE XREF: sub_140A1EEE4+183A1↑j
                mov     [rsp+24B8h+var_1FE8], 288C49EDh
                mov     edi, [rsp+24B8h+var_1FE8]
                ror     edi, 5
                jmp     loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A3733C:                          ; CODE XREF: sub_140A1EEE4+1839B↑j
                sub     ecx, r15d
                jz      loc_140A37434
                sub     ecx, r13d
                jz      loc_140A3741D
                sub     ecx, r13d
                jz      loc_140A37406
                cmp     ecx, r13d
                jz      loc_140A373EC
                rdtsc
                shl     rdx, 20h
                mov     r9d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_14E0], rdx
                xor     edi, edx
                mov     eax, r9d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r9d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r9d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A373EC:                          ; CODE XREF: sub_140A1EEE4+18476↑j
                mov     [rsp+24B8h+var_1FE4], 0B0869E85h
                mov     edi, [rsp+24B8h+var_1FE4]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A37406:                          ; CODE XREF: sub_140A1EEE4+1846D↑j
                mov     [rsp+24B8h+var_1FE0], 64664142h
                mov     edi, [rsp+24B8h+var_1FE0]
                ror     edi, 8
                jmp     short loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A3741D:                          ; CODE XREF: sub_140A1EEE4+18464↑j
                mov     [rsp+24B8h+var_1FDC], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_1FDC]
                rol     edi, 7
                jmp     short loc_140A3744C
; ---------------------------------------------------------------------------

loc_140A37434:                          ; CODE XREF: sub_140A1EEE4+1845B↑j
                mov     [rsp+24B8h+var_1FD8], 4E574672h
                mov     edi, [rsp+24B8h+var_1FD8]
                xor     edi, r15d
                ror     edi, 18h

loc_140A3744C:                          ; CODE XREF: sub_140A1EEE4+183CF↑j
                                        ; sub_140A1EEE4+183EC↑j ...
                mov     eax, r8d
                lea     rcx, cs:140000000h
                add     r8d, r13d
                mov     rva dword_140C12F60[rcx+rax*4], edi
                cmp     r8d, 10h
                jb      loc_140A3723E
                mov     r15, [rsp+24B8h+var_2430]
                mov     rsi, 0FFFFFFFFB8797400h
                mov     rbx, r15
                mov     r8d, [r15+7E4h]
                mov     r9d, [r15+814h]
                mov     r11, [r15+818h]
                lea     rcx, [r15+r8]
                cmp     r15, rcx
                jnb     short loc_140A374A9
                mov     rax, rbx

loc_140A3749D:                          ; CODE XREF: sub_140A1EEE4+185C3↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A3749D

loc_140A374A9:                          ; CODE XREF: sub_140A1EEE4+185B4↑j
                mov     r10d, r8d
                mov     rdi, r11
                shr     r10d, 7
                test    r10d, r10d
                jz      short loc_140A37521
                mov     rsi, 7010008004002001h

loc_140A374C2:                          ; CODE XREF: sub_140A1EEE4+18634↓j
                mov     edx, 8

loc_140A374C7:                          ; CODE XREF: sub_140A1EEE4+18600↓j
                mov     rax, [rbx]
                mov     ecx, r9d
                xor     rax, rdi
                mov     rdi, [rbx+8]
                rol     rax, cl
                add     rbx, 10h
                xor     rdi, rax
                rol     rdi, cl
                sub     rdx, r13
                jnz     short loc_140A374C7
                mov     rcx, rbx
                sub     rcx, r15
                xor     rcx, r11
                mov     rax, rcx
                rol     rax, 11h
                xor     rcx, rax
                mov     rax, rsi
                mul     rcx
                xor     eax, edx
                mov     [rsp+24B8h+var_14D8], rdx
                xor     r9d, eax
                and     r9d, 3Fh
                cmovz   r9d, r13d
                add     r10d, 0FFFFFFFFh
                jnz     short loc_140A374C2
                mov     rsi, 0FFFFFFFFB8797400h

loc_140A37521:                          ; CODE XREF: sub_140A1EEE4+185D2↑j
                and     r8d, 7Fh
                cmp     r8d, 8
                jb      short loc_140A37548
                mov     edx, r8d
                shr     rdx, 3

loc_140A37532:                          ; CODE XREF: sub_140A1EEE4+18662↓j
                xor     rdi, [rbx]
                mov     ecx, r9d
                rol     rdi, cl
                add     rbx, 8
                add     r8d, 0FFFFFFF8h
                sub     rdx, r13
                jnz     short loc_140A37532

loc_140A37548:                          ; CODE XREF: sub_140A1EEE4+18645↑j
                xor     edx, edx
                test    r8d, r8d
                jz      short loc_140A37564

loc_140A3754F:                          ; CODE XREF: sub_140A1EEE4+1867E↓j
                movzx   eax, byte ptr [rbx]
                mov     ecx, r9d
                xor     rdi, rax
                add     rbx, r13
                rol     rdi, cl
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A3754F

loc_140A37564:                          ; CODE XREF: sub_140A1EEE4+18669↑j
                mov     ecx, 4
                mov     cs:qword_140CFC3D0, rdi
                mov     r12d, ecx
                mov     dword ptr [rsp+24B8h+arg_18], ecx
                mov     [rsp+24B8h+var_13C8], rdx
                lea     rax, [rsp+24B8h+var_13C0]

loc_140A3758A:                          ; CODE XREF: sub_140A1EEE4+186AE↓j
                mov     [rax], dl
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A3758A
                mov     r11d, edx
                cmp     [r15+80Ch], edx
                jbe     loc_140A377E2
                mov     r9d, [rsp+24B8h+var_13C0]
                lea     esi, [rcx+2]
                mov     r10d, dword ptr [rsp+24B8h+var_13C8+4]
                mov     r14d, dword ptr [rsp+24B8h+var_13C8]
                jmp     short loc_140A375C3
; ---------------------------------------------------------------------------

loc_140A375C1:                          ; CODE XREF: sub_140A1EEE4+188E3↓j
                xor     edx, edx

loc_140A375C3:                          ; CODE XREF: sub_140A1EEE4+186DB↑j
                mov     rax, [r15+0A78h]
                mov     r8, r15
                test    rax, rax
                mov     edi, edx
                cmovnz  r8, rax
                mov     [rsp+24B8h+arg_18], r8
                mov     ebx, [r8+808h]
                add     rbx, r8
                test    r14d, r14d
                jz      short loc_140A375FB
                cmp     r10d, r11d
                ja      short loc_140A375FB
                mov     ebx, r9d
                mov     edi, r10d
                add     rbx, r8

loc_140A375FB:                          ; CODE XREF: sub_140A1EEE4+18707↑j
                                        ; sub_140A1EEE4+1870C↑j
                cmp     edi, r11d
                jz      loc_140A3770F
                mov     eax, r11d
                mov     r8, 0AAAAAAAAAAAAAAABh
                sub     eax, edi
                mov     r9d, eax
                add     edi, eax

loc_140A37618:                          ; CODE XREF: sub_140A1EEE4+18815↓j
                mov     ecx, [rbx]
                cmp     ecx, 0Ch
                jg      short loc_140A3765F
                jz      short loc_140A3767C
                sub     ecx, r13d
                jz      short loc_140A3767C
                sub     ecx, 6
                jz      short loc_140A3764F
                sub     ecx, r13d
                jz      short loc_140A37646
                cmp     ecx, esi
                jnz     loc_140A376B8
                mov     eax, [rbx+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A376F3
; ---------------------------------------------------------------------------

loc_140A37646:                          ; CODE XREF: sub_140A1EEE4+1874A↑j
                movzx   eax, word ptr [rbx+20h]
                jmp     loc_140A376ED
; ---------------------------------------------------------------------------

loc_140A3764F:                          ; CODE XREF: sub_140A1EEE4+18745↑j
                mov     eax, [rbx+18h]
                add     eax, esi
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A376F3
; ---------------------------------------------------------------------------

loc_140A3765F:                          ; CODE XREF: sub_140A1EEE4+18739↑j
                cmp     ecx, 1Ch
                jz      loc_140A376E9
                cmp     ecx, 1Eh
                jz      short loc_140A376BF
                cmp     ecx, 20h ; ' '
                jle     short loc_140A376B8
                cmp     ecx, 22h ; '"'
                jle     short loc_140A37692
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A376B8

loc_140A3767C:                          ; CODE XREF: sub_140A1EEE4+1873B↑j
                                        ; sub_140A1EEE4+18740↑j
                mov     ecx, [rbx+10h]
                mov     rax, r8
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A376F3
; ---------------------------------------------------------------------------

loc_140A37692:                          ; CODE XREF: sub_140A1EEE4+18791↑j
                mov     ecx, [rbx+20h]
                mov     edx, [rbx+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A376F3
; ---------------------------------------------------------------------------

loc_140A376B8:                          ; CODE XREF: sub_140A1EEE4+1874E↑j
                                        ; sub_140A1EEE4+1878C↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A376F3
; ---------------------------------------------------------------------------

loc_140A376BF:                          ; CODE XREF: sub_140A1EEE4+18787↑j
                mov     eax, [rbx+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, r8
                mul     rcx
                movzx   eax, word ptr [rbx+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, esi
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A376F3
; ---------------------------------------------------------------------------

loc_140A376E9:                          ; CODE XREF: sub_140A1EEE4+1877E↑j
                movzx   eax, word ptr [rbx+28h]

loc_140A376ED:                          ; CODE XREF: sub_140A1EEE4+18766↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A376F3:                          ; CODE XREF: sub_140A1EEE4+1875D↑j
                                        ; sub_140A1EEE4+18776↑j ...
                add     rbx, rax
                sub     r9, r13
                jnz     loc_140A37618
                mov     r15, [rsp+24B8h+var_2430]
                mov     r8, [rsp+24B8h+arg_18]

loc_140A3770F:                          ; CODE XREF: sub_140A1EEE4+1871A↑j
                mov     r9d, ebx
                mov     dword ptr [rsp+24B8h+var_13C8], r13d
                sub     r9d, r8d
                mov     dword ptr [rsp+24B8h+var_13C8+4], edi
                mov     [rsp+24B8h+var_13C0], r9d
                mov     r14d, r13d
                movsxd  rcx, dword ptr [rbx]
                mov     r10d, edi
                cmp     ecx, 26h ; '&'
                ja      short loc_140A37753
                mov     rdx, 400020020Ch
                bt      rdx, rcx
                jnb     short loc_140A37753
                add     r12d, r13d
                cmp     ecx, esi
                jnz     short loc_140A377BD
                jmp     short loc_140A37765
; ---------------------------------------------------------------------------

loc_140A37753:                          ; CODE XREF: sub_140A1EEE4+18854↑j
                                        ; sub_140A1EEE4+18864↑j
                cmp     ecx, 20h ; ' '
                jnz     short loc_140A3776A
                mov     eax, [rbx+28h]
                test    sil, al
                jnz     short loc_140A3776A
                test    r13b, al
                jz      short loc_140A3776A

loc_140A37765:                          ; CODE XREF: sub_140A1EEE4+1886D↑j
                add     r12d, r13d
                jmp     short loc_140A377BD
; ---------------------------------------------------------------------------

loc_140A3776A:                          ; CODE XREF: sub_140A1EEE4+18872↑j
                                        ; sub_140A1EEE4+1887A↑j ...
                cmp     ecx, 7
                jnz     short loc_140A37775
                add     r12d, [rbx+18h]
                jmp     short loc_140A377BD
; ---------------------------------------------------------------------------

loc_140A37775:                          ; CODE XREF: sub_140A1EEE4+18889↑j
                cmp     ecx, 21h ; '!'
                jnz     short loc_140A377BD
                mov     rcx, [rbx+20h]
                mov     eax, [rbx+28h]
                and     ecx, 0FFFh
                add     rcx, 0FFFh
                add     rax, rcx
                shr     rax, 0Ch
                mov     eax, eax
                add     rbx, 30h ; '0'
                lea     rcx, [rax+rax*4]
                lea     rdx, [rbx+rcx*4]
                jmp     short loc_140A377B8
; ---------------------------------------------------------------------------

loc_140A377A5:                          ; CODE XREF: sub_140A1EEE4+188D7↓j
                mov     al, [rbx+0Fh]
                mov     ecx, r12d
                inc     r12d
                test    al, al
                cmovs   r12d, ecx
                add     rbx, 14h

loc_140A377B8:                          ; CODE XREF: sub_140A1EEE4+188BF↑j
                cmp     rbx, rdx
                jnz     short loc_140A377A5

loc_140A377BD:                          ; CODE XREF: sub_140A1EEE4+1886B↑j
                                        ; sub_140A1EEE4+18884↑j ...
                add     r11d, r13d
                cmp     r11d, [r15+80Ch]
                jb      loc_140A375C1
                mov     dword ptr [rsp+24B8h+arg_18], r12d
                mov     rsi, 0FFFFFFFFB8797400h
                mov     r14d, 5

loc_140A377E2:                          ; CODE XREF: sub_140A1EEE4+186BA↑j
                rdtsc
                shl     rdx, 20h
                mov     rbx, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_14D0], rdx
                xor     rcx, rax
                mov     rax, 2E8BA2E8BA2E8BA3h
                mul     rcx
                shr     rdx, 1
                imul    rax, rdx, 0Bh
                sub     rcx, rax
                cmp     ecx, r14d
                ja      loc_140A378EA
                jz      loc_140A378D0
                test    ecx, ecx
                jz      short loc_140A378B6
                sub     ecx, r13d
                jz      short loc_140A3789D
                sub     ecx, r13d
                jz      short loc_140A37883
                cmp     ecx, r13d
                jz      short loc_140A37866
                mov     [rsp+24B8h+var_1FD4], 67076494h
                mov     edi, [rsp+24B8h+var_1FD4]
                rol     edi, 4
                jmp     loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A37866:                          ; CODE XREF: sub_140A1EEE4+18966↑j
                mov     [rsp+24B8h+var_1FD0], 0A8223938h
                mov     edi, [rsp+24B8h+var_1FD0]
                xor     edi, 3
                ror     edi, 0Fh
                jmp     loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A37883:                          ; CODE XREF: sub_140A1EEE4+18961↑j
                mov     [rsp+24B8h+var_1FCC], 85B5910Dh
                mov     edi, [rsp+24B8h+var_1FCC]
                ror     edi, 2
                jmp     loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A3789D:                          ; CODE XREF: sub_140A1EEE4+1895C↑j
                mov     [rsp+24B8h+var_1FC8], 0B2AD31A1h
                mov     edi, [rsp+24B8h+var_1FC8]
                rol     edi, 1
                jmp     loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A378B6:                          ; CODE XREF: sub_140A1EEE4+18957↑j
                mov     [rsp+24B8h+var_1FC4], 0D098D0D8h
                mov     edi, [rsp+24B8h+var_1FC4]
                ror     edi, 6
                jmp     loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A378D0:                          ; CODE XREF: sub_140A1EEE4+1894F↑j
                mov     [rsp+24B8h+var_1FC0], 288C49EDh
                mov     edi, [rsp+24B8h+var_1FC0]
                ror     edi, 5
                jmp     loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A378EA:                          ; CODE XREF: sub_140A1EEE4+18949↑j
                mov     edx, 6
                sub     ecx, edx
                jz      loc_140A379E6
                sub     ecx, r13d
                jz      loc_140A379CF
                sub     ecx, r13d
                jz      loc_140A379B8
                cmp     ecx, r13d
                jz      loc_140A3799E
                rdtsc
                shl     rdx, 20h
                mov     r8d, 4EC4EC4Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, rbx
                mul     rcx
                mov     rdi, rax
                mov     [rsp+24B8h+var_14C8], rdx
                xor     edi, edx
                mov     eax, r8d
                mul     edi
                mov     ecx, edi
                shr     edi, 5
                shr     edx, 3
                mov     ebx, edi
                imul    eax, edx, 1Ah
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edi, 5
                shl     ecx, 8
                shr     edx, 3
                imul    eax, edx, 1Ah
                sub     ebx, eax
                mov     eax, r8d
                mul     edi
                add     ebx, 41h ; 'A'
                or      ebx, ecx
                shr     edx, 3
                imul    eax, edx, 1Ah
                mov     ecx, edi
                shr     edi, 5
                shl     ebx, 8
                sub     ecx, eax
                mov     eax, r8d
                mul     edi
                add     ecx, 61h ; 'a'
                shr     edx, 3
                or      ecx, ebx
                imul    eax, edx, 1Ah
                shl     ecx, 8
                sub     edi, eax
                add     edi, 41h ; 'A'
                or      edi, ecx
                jmp     short loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A3799E:                          ; CODE XREF: sub_140A1EEE4+18A28↑j
                mov     [rsp+24B8h+var_1FBC], 0B0869E85h
                mov     edi, [rsp+24B8h+var_1FBC]
                xor     edi, 9
                ror     edi, 21h
                jmp     short loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A379B8:                          ; CODE XREF: sub_140A1EEE4+18A1F↑j
                mov     [rsp+24B8h+var_1FB8], 64664142h
                mov     edi, [rsp+24B8h+var_1FB8]
                ror     edi, 8
                jmp     short loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A379CF:                          ; CODE XREF: sub_140A1EEE4+18A16↑j
                mov     [rsp+24B8h+var_1FB4], 82C6A6D8h
                mov     edi, [rsp+24B8h+var_1FB4]
                rol     edi, 7
                jmp     short loc_140A379FD
; ---------------------------------------------------------------------------

loc_140A379E6:                          ; CODE XREF: sub_140A1EEE4+18A0D↑j
                mov     [rsp+24B8h+var_1FB0], 4E574672h
                mov     edi, [rsp+24B8h+var_1FB0]
                xor     edi, edx
                ror     edi, 18h

loc_140A379FD:                          ; CODE XREF: sub_140A1EEE4+1897D↑j
                                        ; sub_140A1EEE4+1899A↑j ...
                mov     rax, [r15+0F8h]
                mov     r8d, edi
                mov     ebx, r12d
                mov     ecx, 200h
                shl     rbx, 6
                mov     rdx, rbx
                mov     [rsp+24B8h+var_2428], rbx
                call    j__guard_dispatch_icall_nop
                xor     edi, edi
                mov     r14, rax
                test    rax, rax
                jz      loc_140A237B3
                mov     r8, rbx
                xor     edx, edx
                mov     rcx, rax
                call    memset
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                xor     ecx, ecx
                mov     rbx, rdx
                mov     [rsp+24B8h+var_14C0], rdx
                xor     rbx, rax
                call    sub_1402D2900
                mov     eax, eax
                xor     rax, rbx
                mov     [rsp+24B8h+var_14B8], rax
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, 7010008004002001h
                mul     rcx
                xor     ecx, ecx
                mov     rbx, rdx
                mov     [rsp+24B8h+var_14B0], rdx
                xor     rbx, rax
                call    sub_1402D2900
                mov     ecx, eax
                mov     rax, 410410410410411h
                xor     rcx, rbx
                lea     rbx, [r14+8]
                mul     rcx
                mov     rax, rcx
                mov     [rsp+24B8h+var_2410], rbx
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                shr     rax, 5
                imul    rax, 3Fh ; '?'
                sub     rcx, rax
                mov     eax, 1000h
                add     ecx, r13d
                mov     [rsp+24B8h+var_1FAC], ecx
                mov     [rbx], rdi
                mov     [r14+10h], rdi
                mov     [r14+18h], ax
                mov     rax, [rsp+24B8h+var_14B8]
                mov     [r14+20h], rax
                mov     eax, [rsp+24B8h+var_1FAC]
                mov     [r14+28h], eax
                mov     [r14+2Ch], edi
                call    sub_140A75BB8
                xor     edx, edx
                test    eax, eax
                jz      short loc_140A37B3A
                call    sub_140A3A0D4
                xor     edx, edx
                test    eax, eax
                jz      short loc_140A37B3A
                or      [r14+2Ch], r13d

loc_140A37B3A:                          ; CODE XREF: sub_140A1EEE4+18C45↑j
                                        ; sub_140A1EEE4+18C50↑j
                mov     edi, r13d
                mov     [rsp+24B8h+var_13C8], rdx
                lea     rax, [rsp+24B8h+var_13C0]
                mov     ecx, 4

loc_140A37B52:                          ; CODE XREF: sub_140A1EEE4+18C76↓j
                mov     [rax], dl
                add     rax, r13
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A37B52
                mov     [rsp+24B8h+var_1FA8], edx
                mov     r13, rdx
                mov     r11, rdx
                mov     [rsp+24B8h+var_23E8], rdx
                mov     ecx, edx
                mov     [rsp+24B8h+var_23C8], rdx
                mov     eax, 1001h
                mov     dword ptr [rsp+24B8h+var_2450], edx
                mov     dword ptr [rsp+24B8h+var_2458], edx
                cmp     [r15+80Ch], edx
                jbe     loc_140A38450
                mov     r10, rdi

loc_140A37B98:                          ; CODE XREF: sub_140A1EEE4+19555↓j
                mov     rax, [r15+0A78h]
                mov     r9, r15
                test    rax, rax
                mov     r8d, edx
                cmovnz  r9, rax
                mov     ebx, [r9+808h]
                add     rbx, r9
                cmp     dword ptr [rsp+24B8h+var_13C8], edx
                jz      short loc_140A37BDA
                cmp     dword ptr [rsp+24B8h+var_13C8+4], ecx
                ja      short loc_140A37BDA
                mov     ebx, [rsp+24B8h+var_13C0]
                mov     r8d, dword ptr [rsp+24B8h+var_13C8+4]
                add     rbx, r9

loc_140A37BDA:                          ; CODE XREF: sub_140A1EEE4+18CD9↑j
                                        ; sub_140A1EEE4+18CE2↑j
                cmp     r8d, ecx
                jz      loc_140A37D06
                mov     eax, ecx
                mov     rsi, 0AAAAAAAAAAAAAAABh
                sub     eax, r8d
                mov     r15d, 2
                mov     r10d, eax
                add     r8d, eax

loc_140A37BFE:                          ; CODE XREF: sub_140A1EEE4+18DFF↓j
                mov     ecx, [rbx]
                cmp     ecx, 0Ch
                jg      short loc_140A37C47
                jz      short loc_140A37C64
                sub     ecx, 1
                jz      short loc_140A37C64
                sub     ecx, 6
                jz      short loc_140A37C36
                sub     ecx, 1
                jz      short loc_140A37C2D
                cmp     ecx, r15d
                jnz     loc_140A37CA0
                mov     eax, [rbx+1Ch]
                add     eax, 3
                shl     eax, 4
                jmp     loc_140A37CDC
; ---------------------------------------------------------------------------

loc_140A37C2D:                          ; CODE XREF: sub_140A1EEE4+18D30↑j
                movzx   eax, word ptr [rbx+20h]
                jmp     loc_140A37CD6
; ---------------------------------------------------------------------------

loc_140A37C36:                          ; CODE XREF: sub_140A1EEE4+18D2B↑j
                mov     eax, [rbx+18h]
                add     eax, r15d
                lea     eax, [rax+rax*2]
                shl     eax, 3
                jmp     loc_140A37CDC
; ---------------------------------------------------------------------------

loc_140A37C47:                          ; CODE XREF: sub_140A1EEE4+18D1F↑j
                cmp     ecx, 1Ch
                jz      loc_140A37CD2
                cmp     ecx, 1Eh
                jz      short loc_140A37CA7
                cmp     ecx, 20h ; ' '
                jle     short loc_140A37CA0
                cmp     ecx, 22h ; '"'
                jle     short loc_140A37C7A
                cmp     ecx, 2Bh ; '+'
                jnz     short loc_140A37CA0

loc_140A37C64:                          ; CODE XREF: sub_140A1EEE4+18D21↑j
                                        ; sub_140A1EEE4+18D26↑j
                mov     ecx, [rbx+10h]
                mov     rax, rsi
                mul     rcx
                shr     rdx, 3
                lea     eax, ds:30h[rdx*4]
                jmp     short loc_140A37CDC
; ---------------------------------------------------------------------------

loc_140A37C7A:                          ; CODE XREF: sub_140A1EEE4+18D79↑j
                mov     ecx, [rbx+20h]
                mov     edx, [rbx+28h]
                and     ecx, 0FFFh
                add     rdx, 0FFFh
                add     rdx, rcx
                shr     rdx, 0Ch
                lea     eax, [rdx+rdx*4]
                lea     eax, ds:30h[rax*4]
                jmp     short loc_140A37CDC
; ---------------------------------------------------------------------------

loc_140A37CA0:                          ; CODE XREF: sub_140A1EEE4+18D35↑j
                                        ; sub_140A1EEE4+18D74↑j ...
                mov     eax, 30h ; '0'
                jmp     short loc_140A37CDC
; ---------------------------------------------------------------------------

loc_140A37CA7:                          ; CODE XREF: sub_140A1EEE4+18D6F↑j
                mov     eax, [rbx+24h]
                lea     ecx, [rax-1]
                neg     eax
                sbb     eax, eax
                and     ecx, eax
                mov     rax, rsi
                mul     rcx
                movzx   eax, word ptr [rbx+28h]
                shr     rdx, 3
                add     edx, 7
                and     edx, 0FFFFFFF8h
                add     eax, r15d
                lea     eax, [rax+rax*2]
                lea     eax, [rdx+rax*8]
                jmp     short loc_140A37CDC
; ---------------------------------------------------------------------------

loc_140A37CD2:                          ; CODE XREF: sub_140A1EEE4+18D66↑j
                movzx   eax, word ptr [rbx+28h]

loc_140A37CD6:                          ; CODE XREF: sub_140A1EEE4+18D4D↑j
                add     eax, 37h ; '7'
                and     eax, 0FFFFFFF8h

loc_140A37CDC:                          ; CODE XREF: sub_140A1EEE4+18D44↑j
                                        ; sub_140A1EEE4+18D5E↑j ...
                add     rbx, rax
                sub     r10, 1
                jnz     loc_140A37BFE
                mov     r15, [rsp+24B8h+var_2430]
                xor     edx, edx
                mov     r13, [rsp+24B8h+var_23E8]
                mov     rsi, 0FFFFFFFFB8797400h
                lea     r10d, [rdx+1]

loc_140A37D06:                          ; CODE XREF: sub_140A1EEE4+18CF9↑j
                mov     eax, ebx
                mov     dword ptr [rsp+24B8h+var_13C8], r10d
                sub     eax, r9d
                mov     dword ptr [rsp+24B8h+var_13C8+4], r8d
                mov     [rsp+24B8h+var_13C0], eax
                mov     ecx, [rbx]
                lea     eax, [rcx-2]
                cmp     eax, r10d
                jbe     loc_140A38381
                cmp     ecx, 9
                jnz     short loc_140A37D7E
                mov     rax, [rbx+8]
                lea     r9, [r14+20h]
                mov     edx, edi
                mov     rcx, r15
                shl     rdx, 6
                add     r9, rdx
                mov     [rdx+r14+8], rax
                mov     eax, [rbx+10h]
                mov     [rdx+r14+10h], rax
                mov     eax, 1001h
                mov     [rdx+r14+18h], ax
                mov     r8d, [rdx+r14+10h]
                mov     rdx, [rdx+r14+8]
                call    sub_1403EA0CC
                mov     r10d, 1
                add     edi, r10d
                jmp     loc_140A3841D
; ---------------------------------------------------------------------------

loc_140A37D7E:                          ; CODE XREF: sub_140A1EEE4+18E4F↑j
                cmp     ecx, 20h ; ' '
                jnz     loc_140A37F4F
                mov     eax, [rbx+28h]
                lea     r9d, [rcx-1Eh]
                test    r9b, al
                jnz     loc_140A37F4F
                test    r10b, al
                jz      loc_140A37F4F
                mov     rax, [rbx+8]
                lea     rdx, [r14+20h]
                mov     r12d, edi
                lea     r8d, [rcx-10h]
                shl     r12, 6
                lea     rcx, [rbx+18h]
                add     rdx, r12
                mov     [r12+r14+8], rax
                mov     eax, [rbx+10h]
                mov     [r12+r14+10h], rax
                mov     eax, 1001h
                mov     [r12+r14+18h], ax

loc_140A37DD2:                          ; CODE XREF: sub_140A1EEE4+18F03↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     r9, r10
                jnz     short loc_140A37DD2
                test    r8d, r8d
                jz      short loc_140A37DFE

loc_140A37DEE:                          ; CODE XREF: sub_140A1EEE4+18F18↓j
                mov     al, [rcx]
                add     rcx, r10
                mov     [rdx], al
                add     rdx, r10
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A37DEE

loc_140A37DFE:                          ; CODE XREF: sub_140A1EEE4+18F08↑j
                mov     rcx, [rbx+8]
                test    rcx, rcx
                jz      short loc_140A37E16
                cmp     rcx, r13
                jb      short loc_140A37E11
                cmp     rcx, r11
                jb      short loc_140A37E40

loc_140A37E11:                          ; CODE XREF: sub_140A1EEE4+18F26↑j
                test    rcx, rcx
                jnz     short loc_140A37E1B

loc_140A37E16:                          ; CODE XREF: sub_140A1EEE4+18F21↑j
                mov     r13, r9
                jmp     short loc_140A37E40
; ---------------------------------------------------------------------------

loc_140A37E1B:                          ; CODE XREF: sub_140A1EEE4+18F30↑j
                mov     rax, [r15+208h]
                lea     rdx, [rsp+24B8h+var_14A8]
                call    j__guard_dispatch_icall_nop
                mov     r11, [rsp+24B8h+var_23C8]
                mov     r13, rax
                mov     r10d, 1

loc_140A37E40:                          ; CODE XREF: sub_140A1EEE4+18F2B↑j
                                        ; sub_140A1EEE4+18F35↑j
                mov     eax, [rbx+28h]
                test    al, 4
                jz      short loc_140A37E69
                mov     eax, 100Ah
                mov     [r12+r14+18h], ax
                mov     rcx, [rbx+8]
                call    MmGetPhysicalAddress
                shr     rax, 0Ch
                mov     [r12+r14+30h], rax
                jmp     loc_140A37F31
; ---------------------------------------------------------------------------

loc_140A37E69:                          ; CODE XREF: sub_140A1EEE4+18F61↑j
                test    r13, r13
                jz      short loc_140A37ED2
                mov     rax, [r15+1F8h]
                mov     rcx, r13
                call    j__guard_dispatch_icall_nop
                mov     r8d, [rbx+8]
                mov     rdx, r13
                sub     r8d, r13d
                mov     [rsp+24B8h+var_23C8], rax
                mov     rcx, rax
                call    sub_14033C730
                test    rax, rax
                jz      short loc_140A37EAB
                mov     eax, [rax+24h]
                bt      eax, 1Dh
                jnb     short loc_140A37EAB
                or      byte ptr [r12+r14+2Fh], 80h

loc_140A37EAB:                          ; CODE XREF: sub_140A1EEE4+18FB6↑j
                                        ; sub_140A1EEE4+18FBF↑j
                mov     rax, [rsp+24B8h+var_23C8]
                mov     r10d, 1
                mov     [rsp+24B8h+var_23E8], r13
                mov     r11d, [rax+50h]
                add     r11, r13
                mov     [rsp+24B8h+var_23C8], r11
                jmp     short loc_140A37F47
; ---------------------------------------------------------------------------

loc_140A37ED2:                          ; CODE XREF: sub_140A1EEE4+18F88↑j
                mov     rax, [rbx+8]
                mov     rcx, 88000000000h
                add     rax, rcx
                cmp     rax, 0FFFh
                jbe     short loc_140A37F3F
                mov     eax, [rbx+10h]
                test    eax, eax
                jz      short loc_140A37F3F
                mov     ecx, 1000h
                cmp     eax, ecx
                ja      loc_140A3980E
                lea     eax, [rcx+9]
                mov     [r12+r14+18h], ax
                mov     rcx, [rbx+8]
                call    MmGetPhysicalAddress
                shr     rax, 0Ch
                mov     [r12+r14+30h], rax
                mov     ecx, [rbx+10h]
                dec     ecx
                add     rcx, [rbx+8]
                call    MmGetPhysicalAddress
                shr     rax, 0Ch
                mov     [r12+r14+38h], rax

loc_140A37F31:                          ; CODE XREF: sub_140A1EEE4+18F80↑j
                mov     r11, [rsp+24B8h+var_23C8]
                mov     r10d, 1

loc_140A37F3F:                          ; CODE XREF: sub_140A1EEE4+19005↑j
                                        ; sub_140A1EEE4+1900C↑j
                mov     r13, [rsp+24B8h+var_23E8]

loc_140A37F47:                          ; CODE XREF: sub_140A1EEE4+18FEC↑j
                                        ; sub_140A1EEE4+19498↓j
                add     edi, r10d
                jmp     loc_140A38425
; ---------------------------------------------------------------------------

loc_140A37F4F:                          ; CODE XREF: sub_140A1EEE4+18E9D↑j
                                        ; sub_140A1EEE4+18EAD↑j ...
                cmp     ecx, 7
                jnz     short loc_140A37FC2
                xor     eax, eax
                lea     rdx, [rbx+30h]
                mov     r8d, eax
                cmp     [rbx+18h], eax
                jbe     loc_140A38425
                xor     r15d, r15d

loc_140A37F69:                          ; CODE XREF: sub_140A1EEE4+190CF↓j
                mov     eax, 1003h
                mov     ecx, edi
                shl     rcx, 6
                add     edi, r10d
                add     r8d, r10d
                mov     [rcx+r14+8], r15
                mov     [rcx+r14+10h], r15
                mov     [rcx+r14+18h], ax
                mov     eax, [rbx+1Ch]
                mov     [rcx+r14+34h], eax
                mov     rax, [rdx]
                lea     rdx, [rdx+18h]
                mov     [rcx+r14+20h], rax
                mov     rax, [rdx-10h]
                mov     [rcx+r14+28h], rax
                mov     eax, [rdx-8]
                mov     [rcx+r14+30h], eax
                cmp     r8d, [rbx+18h]
                jb      short loc_140A37F69
                mov     r15, [rsp+24B8h+var_2430]
                jmp     loc_140A38425
; ---------------------------------------------------------------------------

loc_140A37FC2:                          ; CODE XREF: sub_140A1EEE4+1906E↑j
                cmp     ecx, 15h
                jz      loc_140A38335
                cmp     ecx, 26h ; '&'
                jz      loc_140A38335
                cmp     ecx, 21h ; '!'
                jnz     loc_140A38427
                mov     r13, [rbx+20h]
                mov     eax, [rbx+28h]
                mov     rcx, r13
                and     ecx, 0FFFh
                mov     [rsp+24B8h+var_23E8], r13
                add     rcx, 0FFFh
                add     rax, rcx
                mov     rcx, r13
                shr     rax, 0Ch
                mov     [rsp+24B8h+var_2418], rax
                mov     rax, [r15+1F8h]
                call    j__guard_dispatch_icall_nop
                xor     ecx, ecx
                mov     [rsp+24B8h+var_23E0], rax
                mov     eax, [rbx+28h]
                mov     r12b, cl
                add     rax, r13
                mov     [rsp+24B8h+var_2460], rcx
                mov     [rsp+24B8h+var_23C8], rax
                cli
                mov     rcx, gs:20h
                mov     rax, [r15+648h]
                mov     rcx, [rcx+rax]
                sti
                mov     rax, [r15+168h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, [r15+538h]
                mov     dl, 1
                mov     rax, [r15+0E8h]
                call    j__guard_dispatch_icall_nop
                mov     rcx, qword ptr cs:PsLoadedModuleList
                lea     rax, PsLoadedModuleList
                cmp     rcx, rax
                jz      loc_140A3813A
                mov     r9, [r15+748h]
                mov     r10, [r15+758h]
                mov     r11, [r15+750h]

loc_140A3809D:                          ; CODE XREF: sub_140A1EEE4+191E3↓j
                mov     r8, rcx
                sub     r8, r9
                mov     rax, [r11+r8]
                mov     edx, [r10+r8]
                add     rdx, rax
                cmp     r13, rax
                jb      short loc_140A380B8
                cmp     r13, rdx
                jb      short loc_140A380C9

loc_140A380B8:                          ; CODE XREF: sub_140A1EEE4+191CD↑j
                mov     rcx, [rcx]
                lea     rax, PsLoadedModuleList
                cmp     rcx, rax
                jz      short loc_140A3813A
                jmp     short loc_140A3809D
; ---------------------------------------------------------------------------

loc_140A380C9:                          ; CODE XREF: sub_140A1EEE4+191D2↑j
                mov     r11d, 1
                lea     rax, [rsp+24B8h+var_1FA4]
                mov     r12b, r11b
                xor     edx, edx
                lea     ecx, [r11+3]

loc_140A380E0:                          ; CODE XREF: sub_140A1EEE4+19204↓j
                mov     [rax], dl
                add     rax, r11
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A380E0
                mov     r10, [r15+760h]
                mov     r9d, edx

loc_140A380F4:                          ; CODE XREF: sub_140A1EEE4+19235↓j
                movzx   eax, word ptr [r8+r10]
                shr     eax, 1
                cmp     r9d, eax
                jnb     short loc_140A3811B
                mov     rax, [r8+r10+8]
                mov     edx, r9d
                add     r9d, r11d
                mov     cl, [rax+rdx*2]
                mov     [rsp+rdx+24B8h+var_1FA4], cl
                cmp     r9d, 4
                jb      short loc_140A380F4

loc_140A3811B:                          ; CODE XREF: sub_140A1EEE4+1921A↑j
                xor     eax, eax
                mov     edx, 4
                mov     ecx, eax

loc_140A38124:                          ; CODE XREF: sub_140A1EEE4+19254↓j
                mov     al, [rsp+rcx+24B8h+var_1FA4]
                mov     byte ptr [rsp+rcx+24B8h+var_1FA8], al
                add     rcx, r11
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A38124

loc_140A3813A:                          ; CODE XREF: sub_140A1EEE4+1919E↑j
                                        ; sub_140A1EEE4+191E1↑j
                mov     rcx, [r15+538h]
                mov     rax, [r15+118h]
                call    j__guard_dispatch_icall_nop
                mov     rax, [r15+170h]
                call    j__guard_dispatch_icall_nop
                neg     r12b
                lea     r12, [rbx+30h]
                sbb     eax, eax
                and     [rsp+24B8h+var_1FA8], eax
                mov     eax, dword ptr [rsp+24B8h+var_2418]
                lea     rcx, [rax+rax*4]
                lea     rax, [r12+rcx*4]
                mov     [rsp+24B8h+var_2418], rax
                cmp     r12, rax
                jz      loc_140A38417
                mov     rsi, [rsp+24B8h+var_2460]
                mov     r15, r13
                neg     r15
                mov     [rsp+24B8h+var_2448], r13
                xor     ebx, ebx
                mov     r11, r13
                mov     ecx, 1000h

loc_140A381A3:                          ; CODE XREF: sub_140A1EEE4+1942F↓j
                cmp     [r12+0Fh], bl
                jl      loc_140A382FE
                mov     ecx, edi
                cmp     [r12+10h], ebx
                jge     short loc_140A381C8
                mov     eax, ecx
                mov     edx, 1
                shl     rax, 6
                or      [rax+r14+1Ah], dx

loc_140A381C8:                          ; CODE XREF: sub_140A1EEE4+192D1↑j
                mov     eax, 1000h
                shl     rcx, 6
                mov     r9d, 10h
                lea     rbx, [rcx+r14]
                mov     [rbx+8], r11
                lea     r8, [rbx+20h]
                mov     [rbx+10h], rax
                lea     r10d, [r9-0Eh]
                mov     eax, 1002h
                mov     [rbx+18h], ax
                lea     rax, [r11+r15]
                cqo
                mov     [rbx+30h], r13
                and     edx, 0FFFh
                add     rax, rdx
                mov     rdx, r12
                sar     rax, 0Ch
                mov     [rbx+38h], eax

loc_140A38211:                          ; CODE XREF: sub_140A1EEE4+19343↓j
                mov     rax, [rdx]
                add     r9d, 0FFFFFFF8h
                mov     [r8], rax
                add     rdx, 8
                add     r8, 8
                sub     r10, 1
                jnz     short loc_140A38211
                mov     r13, [rsp+24B8h+var_23E8]
                mov     r10d, 1
                test    r9d, r9d
                jz      short loc_140A3824D

loc_140A3823C:                          ; CODE XREF: sub_140A1EEE4+19367↓j
                mov     al, [rdx]
                add     rdx, r10
                mov     [r8], al
                add     r8, r10
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A3823C

loc_140A3824D:                          ; CODE XREF: sub_140A1EEE4+19356↑j
                lea     rax, [rsp+24B8h+var_1FA8]
                mov     r8d, 4
                sub     rcx, rax
                lea     rdx, [rsp+24B8h+var_1FA8]
                lea     r9, [rcx+r14]

loc_140A3826A:                          ; CODE XREF: sub_140A1EEE4+19394↓j
                mov     al, [rdx]
                mov     [rdx+r9+3Ch], al
                add     rdx, r10
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A3826A
                mov     r8d, [rbx+38h]
                xor     ecx, ecx
                shl     r8d, 0Ch
                test    rsi, rsi
                jz      short loc_140A38290
                cmp     r8d, dword ptr [rsp+24B8h+var_2450]
                jb      short loc_140A382CF

loc_140A38290:                          ; CODE XREF: sub_140A1EEE4+193A3↑j
                mov     rcx, [rsp+24B8h+var_23E0]
                mov     rdx, r13
                call    sub_14033C730
                mov     r11, [rsp+24B8h+var_2448]
                mov     rsi, rax
                mov     r10d, 1
                test    rax, rax
                jz      short loc_140A382BB
                mov     eax, [rax+0Ch]
                add     eax, [rsi+8]
                jmp     short loc_140A382CB
; ---------------------------------------------------------------------------

loc_140A382BB:                          ; CODE XREF: sub_140A1EEE4+193CD↑j
                mov     rcx, [rsp+24B8h+var_23E0]
                movzx   eax, word ptr [rcx+14h]
                mov     eax, [rax+rcx+24h]

loc_140A382CB:                          ; CODE XREF: sub_140A1EEE4+193D5↑j
                mov     dword ptr [rsp+24B8h+var_2450], eax

loc_140A382CF:                          ; CODE XREF: sub_140A1EEE4+193AA↑j
                and     byte ptr [rbx+2Fh], 7Fh
                mov     cl, [rbx+2Fh]
                test    rsi, rsi
                jz      short loc_140A382EA
                test    dword ptr [rsi+24h], 20000000h
                jz      short loc_140A382EA
                or      cl, 80h
                mov     [rbx+2Fh], cl

loc_140A382EA:                          ; CODE XREF: sub_140A1EEE4+193F5↑j
                                        ; sub_140A1EEE4+193FE↑j
                mov     rax, [rsp+24B8h+var_2418]
                add     edi, r10d
                xor     ebx, ebx
                mov     ecx, 1000h
                jmp     short loc_140A38304
; ---------------------------------------------------------------------------

loc_140A382FE:                          ; CODE XREF: sub_140A1EEE4+192C4↑j
                mov     r10d, 1

loc_140A38304:                          ; CODE XREF: sub_140A1EEE4+19418↑j
                add     r11, rcx
                add     r12, 14h
                mov     [rsp+24B8h+var_2448], r11
                cmp     r12, rax
                jnz     loc_140A381A3
                mov     r15, [rsp+24B8h+var_2430]
                mov     rsi, 0FFFFFFFFB8797400h
                mov     [rsp+24B8h+var_23E8], r13
                jmp     loc_140A3841D
; ---------------------------------------------------------------------------

loc_140A38335:                          ; CODE XREF: sub_140A1EEE4+190E1↑j
                                        ; sub_140A1EEE4+190EA↑j
                mov     eax, 100Ch
                mov     ecx, edi
                shl     rcx, 6
                mov     [rcx+r14+8], rdx
                mov     [rcx+r14+10h], rdx
                lea     edx, [rax-6]
                cmp     dword ptr [rbx], 26h ; '&'
                cmovnz  ax, dx
                mov     [rcx+r14+18h], ax
                mov     eax, [rbx+2Ch]
                mov     [rcx+r14+34h], eax
                mov     rax, [rbx+18h]
                mov     [rcx+r14+20h], rax
                mov     rax, [rbx+20h]
                mov     [rcx+r14+28h], rax
                mov     eax, [rbx+28h]
                mov     [rcx+r14+30h], eax
                jmp     loc_140A37F47
; ---------------------------------------------------------------------------

loc_140A38381:                          ; CODE XREF: sub_140A1EEE4+18E46↑j
                mov     rax, [rbx+8]
                lea     r9, [r14+20h]
                mov     edx, edi
                mov     rcx, r15
                shl     rdx, 6
                mov     [rdx+r14+8], rax
                mov     eax, [rbx+10h]
                mov     [rdx+r14+10h], rax
                mov     eax, [rbx]
                sub     eax, 3
                neg     eax
                sbb     ax, ax
                add     r9, rdx
                add     ax, 1005h
                mov     [rdx+r14+18h], ax
                mov     eax, [rbx+28h]
                mov     [rdx+r14+30h], eax
                movzx   eax, word ptr [rbx+2Ch]
                mov     [rdx+r14+34h], ax
                mov     r8d, [rdx+r14+10h]
                mov     rdx, [rdx+r14+8]
                call    sub_1403EA0CC
                mov     r11, [rsp+24B8h+var_23C8]
                mov     r10d, 1
                add     edi, r10d
                xor     edx, edx
                cmp     dword ptr [rbx], 2
                jnz     short loc_140A38427
                mov     ecx, edi
                mov     eax, 100Bh
                shl     rcx, 6
                add     edi, r10d
                mov     [rcx+r14+8], rdx
                mov     [rcx+r14+10h], rdx
                mov     [rcx+r14+18h], ax
                mov     eax, [rbx+28h]
                mov     [rcx+r14+20h], eax
                jmp     short loc_140A38427
; ---------------------------------------------------------------------------

loc_140A38417:                          ; CODE XREF: sub_140A1EEE4+1929F↑j
                mov     r10d, 1

loc_140A3841D:                          ; CODE XREF: sub_140A1EEE4+18E95↑j
                                        ; sub_140A1EEE4+1944C↑j
                mov     r11, [rsp+24B8h+var_23C8]

loc_140A38425:                          ; CODE XREF: sub_140A1EEE4+19066↑j
                                        ; sub_140A1EEE4+1907C↑j ...
                xor     edx, edx

loc_140A38427:                          ; CODE XREF: sub_140A1EEE4+190F3↑j
                                        ; sub_140A1EEE4+19509↑j ...
                mov     ecx, dword ptr [rsp+24B8h+var_2458]
                add     ecx, r10d
                mov     dword ptr [rsp+24B8h+var_2458], ecx
                cmp     ecx, [r15+80Ch]
                jb      loc_140A37B98
                mov     r12d, dword ptr [rsp+24B8h+arg_18]
                lea     rbx, [r14+8]
                mov     eax, 1001h

loc_140A38450:                          ; CODE XREF: sub_140A1EEE4+18CAB↑j
                lock or [rsp+24B8h+var_24B8], edx
                mov     cs:qword_140CFC3C8, r15
                lea     rcx, qword_140CFC3C8
                mov     edx, edi
                lea     r9, [r14+20h]
                shl     rdx, 6
                add     r9, rdx
                mov     [rdx+r14+8], rcx
                mov     rcx, r15
                mov     qword ptr [rdx+r14+10h], 8
                mov     [rdx+r14+18h], ax
                mov     r8d, [rdx+r14+10h]
                mov     rdx, [rdx+r14+8]
                call    sub_1403EA0CC
                mov     rax, cs:qword_140CFC3C8
                lea     r9, [r14+20h]
                mov     ecx, 0FFFFF000h
                mov     r13d, 1
                add     edi, r13d
                mov     edx, edi
                shl     rdx, 6
                add     r9, rdx
                mov     [rdx+r14+8], rax
                mov     eax, [r15+7E4h]
                and     rax, rcx
                mov     rcx, r15
                mov     [rdx+r14+10h], rax
                mov     eax, 1001h
                mov     [rdx+r14+18h], ax
                mov     r8d, [rdx+r14+10h]
                mov     rdx, [rdx+r14+8]
                call    sub_1403EA0CC
                lea     rax, qword_140CFC3D0
                mov     rcx, r15
                lea     edx, [rdi+r13]
                shl     rdx, 6
                lea     r9, [r14+20h]
                add     r9, rdx
                mov     [rdx+r14+8], rax
                mov     eax, 1001h
                mov     qword ptr [rdx+r14+10h], 8
                mov     [rdx+r14+18h], ax
                mov     r8d, [rdx+r14+10h]
                mov     rdx, [rdx+r14+8]
                call    sub_1403EA0CC
                test    r12d, r12d
                jz      loc_140A385EE
                mov     r9d, r12d
                mov     r15d, 1000h

loc_140A3853B:                          ; CODE XREF: sub_140A1EEE4+196FC↓j
                mov     rdi, [rbx]
                mov     r8d, [rbx+8]
                mov     rax, rdi
                lea     rcx, [rdi+r8]
                cmp     rdi, rcx
                jnb     short loc_140A3855A

loc_140A3854E:                          ; CODE XREF: sub_140A1EEE4+19674↓j
                prefetchnta byte ptr [rax]
                add     rax, 40h ; '@'
                cmp     rax, rcx
                jb      short loc_140A3854E

loc_140A3855A:                          ; CODE XREF: sub_140A1EEE4+19668↑j
                mov     rbx, [rsp+24B8h+var_14B8]

loc_140A38562:                          ; CODE XREF: sub_140A1EEE4+196DC↓j
                mov     rdx, rdi
                and     rdx, 0FFFFFFFFFFFFF000h
                add     rdx, r15
                sub     edx, edi
                cmp     r8d, edx
                cmovb   edx, r8d
                sub     r8d, edx
                cmp     edx, 8
                jb      short loc_140A385A0
                movzx   ecx, byte ptr [rsp+24B8h+var_1FAC]
                mov     eax, edx
                shr     rax, 3

loc_140A3858E:                          ; CODE XREF: sub_140A1EEE4+196BA↓j
                xor     rbx, [rdi]
                add     edx, 0FFFFFFF8h
                ror     rbx, cl
                add     rdi, 8
                sub     rax, r13
                jnz     short loc_140A3858E

loc_140A385A0:                          ; CODE XREF: sub_140A1EEE4+1969A↑j
                test    edx, edx
                jz      short loc_140A385BD
                movzx   ecx, byte ptr [rsp+24B8h+var_1FAC]

loc_140A385AC:                          ; CODE XREF: sub_140A1EEE4+196D7↓j
                movzx   eax, byte ptr [rdi]
                add     rdi, r13
                xor     rbx, rax
                ror     rbx, cl
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A385AC

loc_140A385BD:                          ; CODE XREF: sub_140A1EEE4+196BE↑j
                test    r8d, r8d
                jnz     short loc_140A38562
                mov     rax, [rsp+24B8h+var_2410]
                mov     [rax-8], rbx
                mov     rbx, rax
                add     rbx, 40h ; '@'
                mov     [rsp+24B8h+var_2410], rbx
                sub     r9, r13
                jnz     loc_140A3853B
                mov     r15, [rsp+24B8h+var_2430]

loc_140A385EE:                          ; CODE XREF: sub_140A1EEE4+19648↑j
                test    byte ptr [rsp+24B8h+var_213C], 8
                mov     rcx, r14
                jz      short loc_140A38605
                call    ExFreePoolWithTag
                xor     r10d, r10d
                jmp     short loc_140A38653
; ---------------------------------------------------------------------------

loc_140A38605:                          ; CODE XREF: sub_140A1EEE4+19715↑j
                mov     edx, r12d
                call    sub_140A93AF4
                mov     rcx, [rsp+24B8h+var_2428]
                mov     ebx, eax
                xor     eax, eax
                mov     rdi, r14
                rep stosb
                lea     ecx, [rax+8]
                lea     rdi, [rsp+24B8h+var_14B8]
                rep stosb
                lea     ecx, [rax+4]
                lea     rdi, [rsp+24B8h+var_1FAC]
                rep stosb
                mov     rcx, r14
                call    ExFreePoolWithTag
                xor     r10d, r10d
                test    ebx, ebx
                js      loc_140A237B3
                jmp     short loc_140A38653
; ---------------------------------------------------------------------------

loc_140A3864D:                          ; CODE XREF: sub_140A1EEE4+182D9↑j
                mov     r13d, 1

loc_140A38653:                          ; CODE XREF: sub_140A1EEE4+1971F↑j
                                        ; sub_140A1EEE4+19767↑j
                mov     rax, [rsp+24B8h+var_2438]
                test    rax, rax
                jz      short loc_140A38673
                mov     rcx, rax
                mov     rax, [rsp+24B8h+var_9D8]
                call    j__guard_dispatch_icall_nop
                xor     r10d, r10d

loc_140A38673:                          ; CODE XREF: sub_140A1EEE4+1977A↑j
                rdtsc
                mov     r14, [rsp+24B8h+var_300]
                mov     r9, 7010008004002001h
                shl     rdx, 20h
                mov     r11d, 0Fh
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     r12, rax
                mov     [rsp+24B8h+var_14A0], rdx
                xor     r12, rdx
                test    [rsp+24B8h+var_148], 10000000h
                jz      short loc_140A386F5
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     r14, rdx
                mov     [rsp+24B8h+var_1498], rdx
                xor     r14, rax
                and     r14, r11
                shl     r14, 4
                add     r14, [rsp+24B8h+var_508]

loc_140A386F5:                          ; CODE XREF: sub_140A1EEE4+197D9↑j
                mov     ebx, 28h ; '('
                lea     rcx, [rsp+24B8h+var_1E0]
                lea     rdx, [rsp+24B8h+var_1048]
                lea     edi, [rbx-23h]

loc_140A3870D:                          ; CODE XREF: sub_140A1EEE4+1983D↓j
                mov     rax, [rcx]
                add     ebx, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     rdi, r13
                jnz     short loc_140A3870D
                test    ebx, ebx
                jz      short loc_140A38736

loc_140A38727:                          ; CODE XREF: sub_140A1EEE4+19850↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [rdx], al
                add     rdx, r13
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A38727

loc_140A38736:                          ; CODE XREF: sub_140A1EEE4+19841↑j
                test    [rsp+24B8h+var_148], 8000h
                jnz     short loc_140A38751
                cmp     [rsp+24B8h+var_1E0], r10d
                jnz     loc_140A38DFB

loc_140A38751:                          ; CODE XREF: sub_140A1EEE4+1985D↑j
                test    [rsp+24B8h+var_148], 40000000h
                jnz     loc_140A38FE8
                mov     al, [rsp+24B8h+var_1B8]
                mov     rbx, r12
                sub     al, r13b
                xor     rbx, r15
                movzx   r8d, al
                mov     edi, 3Fh ; '?'
                sub     edi, r8d
                rdtsc
                shl     rdx, 20h
                mov     r10, 7010008004002001h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r9
                mul     rcx
                mov     r9d, edi
                mov     [rsp+24B8h+var_1490], rdx
                xor     rax, rdx
                xor     edx, edx
                div     r9
                lea     edi, [r8+rdx]

loc_140A387B8:                          ; CODE XREF: sub_140A1EEE4+19902↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r10
                mul     rcx
                xor     rax, rdx
                mov     [rsp+24B8h+var_1488], rdx
                xor     edx, edx
                div     r9
                add     edx, r8d
                cmp     edx, edi
                jz      short loc_140A387B8
                mov     r15, [rsp+24B8h+var_350]
                mov     r10d, 0
                mov     eax, edi
                mov     rdi, [rsp+24B8h+var_348]
                bts     rbx, rax
                mov     eax, edx
                btr     rbx, rax
                mov     [rsp+24B8h+arg_18], rdi
                cmp     [rsp+24B8h+var_1B4], 3
                jnz     loc_140A38942
                mov     r13, [rsp+24B8h+var_2420]
                test    r13, r13
                jz      loc_140A3893C
                mov     rax, [rsp+24B8h+var_768]
                mov     byte ptr [rdi], 13h
                mov     byte ptr [rdi+1], 1
                mov     [rdi+2], r10w
                mov     [rdi+18h], rax
                mov     [rdi+20h], r13
                mov     [rdi+38h], r10
                mov     [rdi+10h], r10
                mov     [rdi+28h], rbx
                mov     r8, [r13+0]
                mov     edx, [r13+10h]
                mov     rcx, [r13+8]
                mov     rax, [rsp+24B8h+var_778]
                call    j__guard_dispatch_icall_nop
                mov     r8, [r13+0]
                mov     rcx, r13
                rol     rcx, 11h
                mov     rax, 7010008004002001h
                xor     rcx, r13
                mul     rcx
                mov     [rsp+24B8h+var_1480], rdx
                xor     rdx, rax
                lea     rax, [r13+18h]
                mov     rbx, rdx
                mov     r13d, 1
                xor     r10d, r10d
                lea     r9d, [r13+3]

loc_140A388AC:                          ; CODE XREF: sub_140A1EEE4+199D8↓j
                xor     [rax], rbx
                mov     ecx, r9d
                rol     rbx, cl
                lea     rax, [rax-8]
                sub     r9d, r13d
                jnz     short loc_140A388AC
                lea     r11d, [r9+0Fh]
                and     dl, r11b
                cmp     dl, 7
                jnb     loc_140A3895E
                mov     rcx, r8
                lea     r9d, [r11-9]
                rol     rcx, 11h
                mov     rax, 7010008004002001h
                xor     rcx, r8
                mul     rcx
                mov     [rsp+24B8h+var_1478], rdx
                xor     rdx, rax
                add     rbx, rdx
                lea     rax, [r8+28h]
                movsx   edx, word ptr [r8+8]

loc_140A38900:                          ; CODE XREF: sub_140A1EEE4+19A2C↓j
                xor     [rax], rbx
                mov     ecx, r9d
                rol     rbx, cl
                lea     rax, [rax-8]
                sub     r9d, r13d
                jnz     short loc_140A38900
                sub     rdx, 30h ; '0'
                shr     rdx, 3
                test    edx, edx
                jz      short loc_140A3895E
                movsxd  r9, edx
                add     r9, 5
                lea     r9, [r8+r9*8]

loc_140A38929:                          ; CODE XREF: sub_140A1EEE4+19A54↓j
                xor     [r9], rbx
                mov     ecx, edx
                rol     rbx, cl
                lea     r9, [r9-8]
                sub     edx, r13d
                jnz     short loc_140A38929
                jmp     short loc_140A3895E
; ---------------------------------------------------------------------------

loc_140A3893C:                          ; CODE XREF: sub_140A1EEE4+19947↑j
                mov     r13d, 1

loc_140A38942:                          ; CODE XREF: sub_140A1EEE4+19936↑j
                mov     byte ptr [rdi], 13h
                mov     [rdi+1], r13b
                mov     [rdi+2], r10w
                mov     [rdi+18h], r14
                mov     [rdi+20h], rbx
                mov     [rdi+38h], r10
                mov     [rdi+10h], r10

loc_140A3895E:                          ; CODE XREF: sub_140A1EEE4+199E4↑j
                                        ; sub_140A1EEE4+19A38↑j ...
                mov     [rdi+40h], r12
                test    [rsp+24B8h+var_148], 100h
                jz      short loc_140A389C8
                lea     r8, [r14-48h]
                mov     [r8+40h], rdi
                rdtsc
                shl     rdx, 20h
                mov     r14, 7010008004002001h
                or      rax, rdx
                mov     ebx, 19h
                mov     rcx, rax
                ror     rax, 3
                xor     rcx, rax
                mov     rax, r14
                mul     rcx
                mov     [rsp+24B8h+var_1470], rdx
                xor     rdx, rax
                lea     rax, [r8+48h]

loc_140A389AE:                          ; CODE XREF: sub_140A1EEE4+19AD4↓j
                xor     [rax], rdx
                lea     rax, [rax+8]
                sub     rbx, r13
                jnz     short loc_140A389AE
                mov     dword ptr [r8+48h], 48513148h
                mov     [r8+20h], rdx
                jmp     short loc_140A389D5
; ---------------------------------------------------------------------------

loc_140A389C8:                          ; CODE XREF: sub_140A1EEE4+19A89↑j
                mov     r8, rdi
                mov     r14, 7010008004002001h

loc_140A389D5:                          ; CODE XREF: sub_140A1EEE4+19AE2↑j
                mov     rbx, [rsp+24B8h+var_40]
                test    rbx, rbx
                jz      loc_140A38A70
                mov     rbx, [rbx+20h]
                mov     eax, 0E0E20100h
                mov     rcx, rbx
                xor     rcx, rax
                shr     rcx, 4
                xor     rcx, rbx
                shr     rcx, 4
                xor     rcx, [rsp+24B8h+var_548]
                mov     al, cl
                mov     r10, rcx
                and     al, r11b
                movzx   r9d, al
                cmovz   r9d, r13d
                xor     eax, eax
                mov     edx, eax
                test    r9b, r9b
                jz      short loc_140A38A4A

loc_140A38A21:                          ; CODE XREF: sub_140A1EEE4+19B64↓j
                mov     rdx, rcx
                and     rdx, r11
                add     rdx, rbx
                mov     rbx, [rdx]
                mov     rax, rbx
                xor     rax, 1DFE00h
                shr     rax, 4
                xor     rax, rbx
                shr     rax, 4
                xor     rcx, rax
                add     r9b, 0FFh
                jnz     short loc_140A38A21

loc_140A38A4A:                          ; CODE XREF: sub_140A1EEE4+19B3B↑j
                mov     rax, r10
                mov     ecx, 1000h
                and     rax, rcx
                mov     rcx, r8
                xor     rcx, r10
                xor     r10d, r10d
                test    rax, rax
                cmovz   rcx, r8
                mov     [rdx], rcx
                mov     r8, [rsp+24B8h+var_40]

loc_140A38A70:                          ; CODE XREF: sub_140A1EEE4+19AFC↑j
                lock or [rsp+24B8h+var_24B8], r10d
                mov     ecx, [rsp+24B8h+var_2A0]
                test    ecx, ecx
                jz      loc_140A38D4D
                sub     ecx, 1
                jz      loc_140A38D34
                sub     ecx, 1
                jz      loc_140A38D20
                sub     ecx, 1
                jz      loc_140A38C43
                cmp     ecx, 1
                jz      loc_140A38B2A
                mov     rbx, [rsp+24B8h+var_140]
                mov     [rbx+48h], r8
                lock or [rsp+24B8h+var_24B8], r10d
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r14
                xor     rdx, rcx
                mul     rdx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1468], rdx
                xor     rcx, rax
                mov     rax, 0ABCC77118461CEFDh
                mul     rcx
                shr     rdx, 1Ah
                imul    rax, rdx, 5F5E100h
                sub     rcx, rax
                mov     rax, 0D6BF94D5E57A42BDh
                add     rcx, 47868C00h
                imul    rcx
                add     rdx, rcx
                sar     rdx, 17h
                mov     rax, rdx
                shr     rax, 3Fh
                add     rdx, rax
                mov     [rbx], edx
                jmp     loc_140A38DFB
; ---------------------------------------------------------------------------

loc_140A38B2A:                          ; CODE XREF: sub_140A1EEE4+19BBE↑j
                mov     rcx, [rsp+24B8h+var_E8]
                xor     r9d, r9d
                mov     rax, [rsp+24B8h+var_F0]
                xor     r8d, r8d
                mov     rbx, [rsp+24B8h+var_F8]
                mov     rdx, rdi
                mov     rsi, [rsp+24B8h+var_140]
                mov     byte ptr [rbx], 12h
                mov     byte ptr [rbx+2], 58h ; 'X'
                mov     [rbx+50h], r10b
                mov     [rbx+8], rsi
                mov     [rbx+20h], rax
                mov     [rbx+28h], r10
                mov     [rbx+30h], rcx
                mov     [rbx+51h], r10b
                mov     [rbx+38h], r10
                mov     [rbx+52h], r10b
                mov     rcx, [rsp+24B8h+var_F8]
                mov     rax, [rsp+24B8h+var_818]
                call    j__guard_dispatch_icall_nop
                xor     r10d, r10d
                test    al, al
                jnz     loc_140A38DFB
                cmp     [rsp+24B8h+var_1E0], r10d
                jnz     short loc_140A38BF7
                mov     rdx, 0A3A03F5891C8B4E8h
                mov     [rsp+24B8h+var_1D0], r10
                lea     rax, [rsp+24B8h+var_AD8]
                mov     [rsp+24B8h+var_1C8], 104h
                add     rax, rdx
                mov     [rsp+24B8h+var_1C0], rsi
                xor     edx, edx
                mov     [rsp+24B8h+var_1D8], rax
                lea     rcx, [rsp+24B8h+var_AD8]
                mov     [rsp+24B8h+var_1E0], r13d
                call    sub_140A113CC
                xor     r10d, r10d

loc_140A38BF7:                          ; CODE XREF: sub_140A1EEE4+19CBE↑j
                lea     rcx, [rsp+24B8h+var_1E0]
                mov     ebx, 28h ; '('
                lea     rdx, [rsp+24B8h+var_1048]

loc_140A38C0C:                          ; CODE XREF: sub_140A1EEE4+19D41↓j
                mov     rax, [rcx]
                add     ebx, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     [rsp+24B8h+var_1B08], r13
                jnz     short loc_140A38C0C
                test    ebx, ebx
                jz      loc_140A38DFB

loc_140A38C2F:                          ; CODE XREF: sub_140A1EEE4+19D58↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [rdx], al
                add     rdx, r13
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A38C2F
                jmp     loc_140A38DFB
; ---------------------------------------------------------------------------

loc_140A38C43:                          ; CODE XREF: sub_140A1EEE4+19BB5↑j
                mov     rbx, [rsp+24B8h+var_140]
                mov     rax, [rsp+24B8h+var_440]
                mov     rcx, [rax+rbx]
                test    rcx, rcx
                jz      loc_140A38D0A
                cmp     [rsp+24B8h+var_1E0], r10d
                jnz     short loc_140A38CBD
                mov     rdx, 0A3A03F5891C8B4E8h
                mov     [rsp+24B8h+var_1C0], rcx
                lea     rax, [rsp+24B8h+var_AD8]
                mov     [rsp+24B8h+var_1D0], r10
                add     rax, rdx
                mov     [rsp+24B8h+var_1C8], 104h
                xor     edx, edx
                mov     [rsp+24B8h+var_1D8], rax
                lea     rcx, [rsp+24B8h+var_AD8]
                mov     [rsp+24B8h+var_1E0], r13d
                call    sub_140A113CC
                xor     r10d, r10d

loc_140A38CBD:                          ; CODE XREF: sub_140A1EEE4+19D84↑j
                mov     edi, 5
                lea     rcx, [rsp+24B8h+var_1E0]
                lea     rdx, [rsp+24B8h+var_1048]
                lea     r8d, [rdi+23h]

loc_140A38CD6:                          ; CODE XREF: sub_140A1EEE4+19E07↓j
                mov     rax, [rcx]
                add     r8d, 0FFFFFFF8h
                mov     [rdx], rax
                add     rcx, 8
                add     rdx, 8
                sub     rdi, r13
                jnz     short loc_140A38CD6
                mov     rdi, [rsp+24B8h+arg_18]
                test    r8d, r8d
                jz      short loc_140A38D0A

loc_140A38CFA:                          ; CODE XREF: sub_140A1EEE4+19E24↓j
                mov     al, [rcx]
                add     rcx, r13
                mov     [rdx], al
                add     rdx, r13
                add     r8d, 0FFFFFFFFh
                jnz     short loc_140A38CFA

loc_140A38D0A:                          ; CODE XREF: sub_140A1EEE4+19D76↑j
                                        ; sub_140A1EEE4+19E14↑j
                lock or [rsp+24B8h+var_24B8], r10d
                mov     rax, [rsp+24B8h+var_440]
                mov     [rax+rbx], rdi
                jmp     loc_140A38DFB
; ---------------------------------------------------------------------------

loc_140A38D20:                          ; CODE XREF: sub_140A1EEE4+19BAC↑j
                mov     rax, [rsp+24B8h+var_318]
                mov     [rax+80h], r8
                jmp     loc_140A38DFB
; ---------------------------------------------------------------------------

loc_140A38D34:                          ; CODE XREF: sub_140A1EEE4+19BA3↑j
                mov     rcx, [rsp+24B8h+var_318]
                mov     rax, [rsp+24B8h+var_4A8]
                mov     [rax+rcx], r8
                jmp     loc_140A38DFB
; ---------------------------------------------------------------------------

loc_140A38D4D:                          ; CODE XREF: sub_140A1EEE4+19B9A↑j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r14
                xor     rdx, rcx
                mul     rdx
                mov     rcx, rdx
                mov     [rsp+24B8h+var_1460], rdx
                xor     rcx, rax
                mov     rax, 0ABCC77118461CEFDh
                mul     rcx
                shr     rdx, 1Ah
                imul    rax, rdx, 5F5E100h
                sub     rcx, rax
                sub     rsi, rcx
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     [rsp+24B8h+var_2498], r8
                mov     rcx, rax
                mov     rdx, rax
                ror     rcx, 3
                mov     rax, r14
                xor     rdx, rcx
                xor     r8d, r8d
                mul     rdx
                mov     rcx, r15
                mov     rbx, rdx
                mov     [rsp+24B8h+var_1458], rdx
                xor     rbx, rax
                mov     rax, 346DC5D63886594Bh
                mul     rbx
                shr     rdx, 0Bh
                imul    rax, rdx, 2710h
                mov     rdx, rsi
                sub     rbx, rax
                mov     rax, [rsp+24B8h+var_900]
                mov     r9d, ebx
                call    j__guard_dispatch_icall_nop
                xor     r10d, r10d

loc_140A38DFB:                          ; CODE XREF: sub_140A1EEE4+19867↑j
                                        ; sub_140A1EEE4+19C41↑j ...
                cmp     [rsp+24B8h+var_1048], r10d
                jz      loc_140A38FE8
                test    [rsp+24B8h+var_148], 8000h
                jnz     loc_140A38FE8
                mov     r13, [rsp+24B8h+var_1030]
                lea     rcx, [rsp+24B8h+var_AD8]
                mov     r14, [rsp+24B8h+var_1028]
                mov     r12, [rsp+24B8h+var_1038]
                mov     rax, [rsp+24B8h+var_1040]
                mov     [rsp+24B8h+arg_18], r13
                mov     [rsp+24B8h+var_2468], r14
                mov     [rsp+24B8h+var_2430], r12
                mov     [rsp+24B8h+var_2438], rax
                mov     [rsp+24B8h+var_1450], rcx
                mov     rax, cr8
                mov     ebx, 2
                cmp     al, bl
                jnb     short loc_140A38E7C
                mov     rax, cr8
                mov     cr8, rbx

loc_140A38E7C:                          ; CODE XREF: sub_140A1EEE4+19F8E↑j
                mov     rdx, gs:20h
                mov     rax, [rsp+24B8h+var_1450]
                mov     rcx, [rax+638h]
                mov     rsi, [rdx+rcx]
                mov     rcx, gs:20h
                mov     rdi, [rsp+24B8h+var_1450]
                mov     rax, [rdi+648h]
                mov     r15, [rcx+rax]
                mov     rax, [rdi+640h]
                cmp     [rdx+rax], r10b
                jz      short loc_140A38EE2
                lea     rax, [rsp+24B8h+var_1450]
                cmp     rax, rsi
                ja      short loc_140A38EE2
                lea     rax, [rsi-6000h]
                lea     rcx, [rsp+24B8h+var_1450]
                cmp     rcx, rax
                jnb     short loc_140A38EF5

loc_140A38EE2:                          ; CODE XREF: sub_140A1EEE4+19FDB↑j
                                        ; sub_140A1EEE4+19FE8↑j
                mov     rax, [rsp+24B8h+var_1450]
                mov     rcx, [rax+678h]
                mov     rsi, [r15+rcx]

loc_140A38EF5:                          ; CODE XREF: sub_140A1EEE4+19FFC↑j
                mov     rdi, [rsp+24B8h+var_1450]
                test    dword ptr [rdi+990h], 8000000h
                jnz     loc_140A3986B
                mov     r12, cr0
                mov     rax, r12
                btr     rax, 10h
                mov     cr0, rax
                mov     eax, [rdi+0AA0h]
                lea     r14, [rdi+0AA8h]
                shl     rax, 4
                lea     r8, [rdi+0AA8h]
                add     r14, rax
                mov     ebx, r10d
                mov     rdx, r14
                cmp     [rdi+0AA4h], r10d
                jbe     short loc_140A38F80

loc_140A38F46:                          ; CODE XREF: sub_140A1EEE4+1A09A↓j
                mov     rcx, [rdx]
                mov     rax, [rdx+8]
                mov     [rcx], rax
                mov     rcx, cr4
                test    rcx, 20080h
                jz      short loc_140A38F6C
                mov     rax, rcx
                btc     rax, 7
                mov     cr4, rax
                mov     cr4, rcx
                jmp     short loc_140A38F72
; ---------------------------------------------------------------------------

loc_140A38F6C:                          ; CODE XREF: sub_140A1EEE4+1A076↑j
                mov     rax, cr3
                mov     cr3, rax

loc_140A38F72:                          ; CODE XREF: sub_140A1EEE4+1A086↑j
                add     rdx, 10h
                inc     ebx
                cmp     ebx, [rdi+0AA4h]
                jb      short loc_140A38F46

loc_140A38F80:                          ; CODE XREF: sub_140A1EEE4+1A060↑j
                cmp     r8, r14
                jnb     loc_140A3984B
                mov     r13d, 1

loc_140A38F8F:                          ; CODE XREF: sub_140A1EEE4+1A102↓j
                mov     r11d, [r8+8]
                mov     rcx, rdx
                mov     rbx, [r8]
                mov     r9d, r11d
                cmp     r11d, 8
                jb      short loc_140A38FC0
                mov     r10d, r11d
                shr     r10, 3

loc_140A38FA9:                          ; CODE XREF: sub_140A1EEE4+1A0DA↓j
                mov     rax, [rcx]
                add     r9d, 0FFFFFFF8h
                mov     [rbx], rax
                add     rcx, 8
                add     rbx, 8
                sub     r10, r13
                jnz     short loc_140A38FA9

loc_140A38FC0:                          ; CODE XREF: sub_140A1EEE4+1A0BC↑j
                test    r9d, r9d
                jz      short loc_140A38FD6
                sub     rbx, rcx

loc_140A38FC8:                          ; CODE XREF: sub_140A1EEE4+1A0F0↓j
                mov     al, [rcx]
                mov     [rbx+rcx], al
                add     rcx, r13
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A38FC8

loc_140A38FD6:                          ; CODE XREF: sub_140A1EEE4+1A0DF↑j
                add     rdx, r11
                add     r8, 10h
                cmp     r8, r14
                jnb     loc_140A39843
                jmp     short loc_140A38F8F
; ---------------------------------------------------------------------------

loc_140A38FE8:                          ; CODE XREF: sub_140A1EEE4+19878↑j
                                        ; sub_140A1EEE4+19F1F↑j ...
                cli
                cmp     cs:KdDebuggerNotPresent, r10b
                jnz     short loc_140A38FF4

loc_140A38FF2:                          ; CODE XREF: sub_140A1EEE4:loc_140A38FF2↓j
                jmp     short loc_140A38FF2
; ---------------------------------------------------------------------------

loc_140A38FF4:                          ; CODE XREF: sub_140A1EEE4+1A10C↑j
                sti
                mov     rax, [rsp+24B8h+var_2468]
                test    rax, rax
                jz      short loc_140A39022
                mov     rcx, [rsp+24B8h+var_1F98]
                mov     [rax+10h], rcx
                lock or [rsp+24B8h+var_24B8], r10d
                lea     rcx, [rax+18h]
                xor     r8d, r8d
                mov     edx, r13d
                call    KeSetEvent
                xor     r10d, r10d

loc_140A39022:                          ; CODE XREF: sub_140A1EEE4+1A119↑j
                lea     rax, [rsp+24B8h+var_AD8]
                mov     ecx, 154h
                mov     edx, 0AA0h

loc_140A39034:                          ; CODE XREF: sub_140A1EEE4+1A15D↓j
                mov     [rax], r10
                add     edx, 0FFFFFFF8h
                add     rax, 8
                sub     rcx, r13
                jnz     short loc_140A39034
                test    edx, edx
                jz      short loc_140A39052

loc_140A39047:                          ; CODE XREF: sub_140A1EEE4+1A16C↓j
                mov     [rax], r10b
                add     rax, r13
                add     edx, 0FFFFFFFFh
                jnz     short loc_140A39047

loc_140A39052:                          ; CODE XREF: sub_140A1EEE4+1A161↑j
                cli
                cmp     cs:KdDebuggerNotPresent, r10b
                jnz     short loc_140A3905E

loc_140A3905C:                          ; CODE XREF: sub_140A1EEE4:loc_140A3905C↓j
                jmp     short loc_140A3905C
; ---------------------------------------------------------------------------

loc_140A3905E:                          ; CODE XREF: sub_140A1EEE4+1A176↑j
                sti
                mov     al, r13b
                jmp     loc_140A399C0
; ---------------------------------------------------------------------------

loc_140A39067:                          ; CODE XREF: sub_140A1EEE4+BF↑j
                mov     [rsp+24B8h+var_2134], 0D0002D61h
                xor     r8d, r8d
                mov     ecx, [rsp+24B8h+var_2134]
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], r10
                ror     ecx, 5Ch
                lea     edx, [r8+2]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39094:                          ; CODE XREF: sub_140A1EEE4+FF↑j
                mov     [rsp+24B8h+var_212C], 0D0002D61h
                mov     rdx, r10
                mov     ecx, [rsp+24B8h+var_212C]
                xor     ecx, 2D72h
                movsxd  r9, ebx
                ror     ecx, 5Ch
                movsxd  r8, edi
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A390C3:                          ; CODE XREF: sub_140A1EEE4+292↑j
                mov     eax, [rsp+24B8h+var_2128]
                lea     r9, cs:140000000h
                mov     [rsp+24B8h+var_1F8C], 0D0002D61h
                mov     edx, 0Eh
                mov     ecx, [rsp+24B8h+var_1F8C]
                mov     r8, [rsp+24B8h+var_1AE0]
                xor     ecx, 2D72h
                ror     ecx, 5Ch
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39104:                          ; CODE XREF: sub_140A1EEE4+75D↑j
                mov     [rsp+24B8h+var_2384], 0D0002D61h
                lea     r9, cs:140000000h
                mov     ecx, [rsp+24B8h+var_2384]
                mov     edx, 0Fh
                mov     r8, [rsp+24B8h+var_1AE0]
                xor     ecx, 2D72h
                cdqe
                ror     ecx, 5Ch
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39140:                          ; CODE XREF: sub_140A1EEE4+A0F↑j
                mov     edx, ecx
                mov     r9, r8
                xor     rdx, rax
                mov     [rsp+24B8h+var_2358], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_2358]
                mov     r8, rbx
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rdx
                ror     ecx, 5Ch
                mov     edx, 10h
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39176:                          ; CODE XREF: sub_140A1EEE4+A1D↑j
                                        ; sub_140A1EEE4+A33↑j
                mov     [rsp+24B8h+var_2354], 0D0002D61h
                mov     r9, r8
                mov     ecx, [rsp+24B8h+var_2354]
                mov     r8, rbx
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rdx
                ror     ecx, 5Ch
                mov     edx, 11h
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A391A7:                          ; CODE XREF: sub_140A1EEE4+B6B↑j
                mov     [rsp+24B8h+var_2350], 0D0002D61h
                mov     r9, rdx
                mov     ecx, [rsp+24B8h+var_2350]
                mov     edx, 9
                xor     ecx, 2D72h
                mov     eax, ebx
                ror     ecx, 5Ch
                mov     r8d, edi
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A391DA:                          ; CODE XREF: sub_140A1EEE4+F11↑j
                                        ; sub_140A1EEE4+F21↑j
                mov     [rsp+24B8h+var_231C], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_231C]
                mov     r9, [rsp+24B8h+var_F70]
                xor     ecx, 2D72h
                mov     r8, [rsp+24B8h+var_F58]
                mov     [rsp+24B8h+var_2498], rdx
                mov     edx, 12h
                ror     ecx, 5Ch
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39215:                          ; CODE XREF: sub_140A1EEE4+1FC1↑j
                                        ; sub_140A1EEE4+1FD1↑j
                mov     [rsp+24B8h+var_229C], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_229C]
                mov     r9, [rsp+24B8h+var_F20]
                xor     ecx, 2D72h
                mov     r8, [rsp+24B8h+var_F08]
                mov     [rsp+24B8h+var_2498], rdx
                mov     edx, 12h
                ror     ecx, 5Ch
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39250:                          ; CODE XREF: sub_140A1EEE4+3368↑j
                xor     edx, edx
                mov     [rsp+24B8h+var_226C], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_226C]
                xor     r8d, r8d
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rdx
                ror     ecx, 5Ch
                mov     r9, rax
                lea     edx, [r8+3]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39282:                          ; CODE XREF: sub_140A1EEE4+4395↑j
                mov     [rsp+24B8h+var_21F4], 0D0002D61h
                xor     eax, eax
                mov     ecx, [rsp+24B8h+var_21F4]
                xor     r9d, r9d
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                xor     r8d, r8d
                xor     edx, edx
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A392B2:                          ; CODE XREF: sub_140A1EEE4+5EDE↑j
                mov     [rsp+24B8h+var_219C], 0D0002D61h
                xor     r8d, r8d
                mov     ecx, [rsp+24B8h+var_219C]
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], 8
                ror     ecx, 5Ch
                lea     edx, [r8+4]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A392E3:                          ; CODE XREF: sub_140A1EEE4+6E19↑j
                                        ; sub_140A1EEE4+6E28↑j ...
                mov     [rsp+24B8h+var_2144], 0D0002D61h
                mov     r9, r13
                mov     ecx, [rsp+24B8h+var_2144]
                mov     r8, rbx
                mov     rax, [rsp+24B8h+var_1B78]
                xor     ecx, 2D72h
                ror     ecx, 5Ch
                mov     edx, 1
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A3931C:                          ; CODE XREF: sub_140A1EEE4+7058↑j
                                        ; sub_140A1EEE4+7068↑j
                mov     [rsp+24B8h+var_2140], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_2140]
                mov     r9, [rsp+24B8h+var_E80]
                xor     ecx, 2D72h
                mov     r8, [rsp+24B8h+var_E68]
                mov     [rsp+24B8h+var_2498], rdx
                mov     edx, 12h
                ror     ecx, 5Ch
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39357:                          ; CODE XREF: sub_140A1EEE4:loc_140A26A0C↑j
                mov     r9, [rbx]
                mov     edx, 14h
                mov     [rsp+24B8h+var_210C], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_210C]
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rbx
                ror     ecx, 5Ch
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39385:                          ; CODE XREF: sub_140A1EEE4+908F↑j
                mov     [rsp+24B8h+var_20F4], 0D0002D61h
                mov     r9d, 3
                mov     ecx, [rsp+24B8h+var_20F4]
                mov     r8, r14
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+7]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A393B8:                          ; CODE XREF: sub_140A1EEE4+90A6↑j
                mov     [rsp+24B8h+var_2104], 0D0002D61h
                mov     r9d, 1
                mov     ecx, [rsp+24B8h+var_2104]
                mov     r8, r14
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+9]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A393EB:                          ; CODE XREF: sub_140A1EEE4+90BD↑j
                mov     [rsp+24B8h+var_20F8], 0D0002D61h
                mov     r9d, 2
                mov     ecx, [rsp+24B8h+var_20F8]
                mov     r8, r14
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+8]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A3941E:                          ; CODE XREF: sub_140A1EEE4+AE46↑j
                mov     [rsp+24B8h+var_20E8], 0D0002D61h
                mov     r9d, 1
                mov     ecx, [rsp+24B8h+var_20E8]
                mov     r8, r15
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+9]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39451:                          ; CODE XREF: sub_140A1EEE4+AE5E↑j
                mov     [rsp+24B8h+var_20DC], 0D0002D61h
                mov     r9d, 2
                mov     ecx, [rsp+24B8h+var_20DC]
                mov     r8, r15
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+8]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39484:                          ; CODE XREF: sub_140A1EEE4:loc_140A26952↑j
                mov     r9, [rbx]
                mov     edx, 13h
                mov     [rsp+24B8h+var_2110], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_2110]
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rbx
                ror     ecx, 5Ch
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A394B2:                          ; CODE XREF: sub_140A1EEE4+8D92↑j
                mov     [rsp+24B8h+var_2108], 0D0002D61h
                xor     r9d, r9d
                mov     ecx, [rsp+24B8h+var_2108]
                mov     r8, r14
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A394E2:                          ; CODE XREF: sub_140A1EEE4+8FC8↑j
                mov     [rsp+24B8h+var_2100], 0D0002D61h
                mov     r8, r14
                mov     ecx, [rsp+24B8h+var_2100]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                mov     edx, 0Ah
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39513:                          ; CODE XREF: sub_140A1EEE4+8F29↑j
                mov     [rsp+24B8h+var_20FC], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_20FC]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                mov     edx, 0Ah
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39541:                          ; CODE XREF: sub_140A1EEE4+97F2↑j
                mov     r8, [rsp+24B8h+var_2410]
                mov     r9d, 6
                mov     [rsp+24B8h+var_20F0], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_20F0]
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+4]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39579:                          ; CODE XREF: sub_140A1EEE4+AB4D↑j
                mov     [rsp+24B8h+var_20EC], 0D0002D61h
                xor     r9d, r9d
                mov     ecx, [rsp+24B8h+var_20EC]
                mov     r8, r15
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A395A9:                          ; CODE XREF: sub_140A1EEE4+AD88↑j
                mov     [rsp+24B8h+var_20E4], 0D0002D61h
                mov     r8, r15
                mov     ecx, [rsp+24B8h+var_20E4]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                mov     edx, 0Ah
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A395DA:                          ; CODE XREF: sub_140A1EEE4+ACE7↑j
                mov     [rsp+24B8h+var_20E0], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_20E0]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                mov     edx, 0Ah
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39608:                          ; CODE XREF: sub_140A1EEE4+AE85↑j
                mov     [rsp+24B8h+var_20D8], 0D0002D61h
                mov     r9d, 3
                mov     ecx, [rsp+24B8h+var_20D8]
                mov     r8, r15
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+7]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A3963B:                          ; CODE XREF: sub_140A1EEE4+B606↑j
                mov     r8, [rsp+24B8h+var_2438]
                mov     r9d, 6
                mov     [rsp+24B8h+var_20D4], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_20D4]
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+4]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39673:                          ; CODE XREF: sub_140A1EEE4+CB7A↑j
                mov     [rsp+24B8h+var_20C0], 0D0002D61h
                mov     r9d, 1
                mov     ecx, [rsp+24B8h+var_20C0]
                mov     r8, r15
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+9]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A396A6:                          ; CODE XREF: sub_140A1EEE4+CB92↑j
                mov     [rsp+24B8h+var_20B4], 0D0002D61h
                mov     r9d, 2
                mov     ecx, [rsp+24B8h+var_20B4]
                mov     r8, r15
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+8]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A396D9:                          ; CODE XREF: sub_140A1EEE4+C87E↑j
                mov     [rsp+24B8h+var_20C4], 0D0002D61h
                xor     r9d, r9d
                mov     ecx, [rsp+24B8h+var_20C4]
                mov     r8, r15
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+0Ah]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39709:                          ; CODE XREF: sub_140A1EEE4+CAB9↑j
                mov     [rsp+24B8h+var_20BC], 0D0002D61h
                mov     r8, r15
                mov     ecx, [rsp+24B8h+var_20BC]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                mov     edx, 0Ah
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A3973A:                          ; CODE XREF: sub_140A1EEE4+CA18↑j
                mov     [rsp+24B8h+var_20B8], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_20B8]
                xor     ecx, 2D72h
                mov     r9d, edx
                ror     ecx, 5Ch
                mov     edx, 0Ah
                mov     [rsp+24B8h+var_2498], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39768:                          ; CODE XREF: sub_140A1EEE4+CBB9↑j
                mov     [rsp+24B8h+var_20B0], 0D0002D61h
                mov     r9d, 3
                mov     ecx, [rsp+24B8h+var_20B0]
                mov     r8, r15
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+7]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A3979B:                          ; CODE XREF: sub_140A1EEE4+D347↑j
                mov     r8, [rsp+24B8h+var_2428]
                mov     r9d, 6
                mov     [rsp+24B8h+var_20AC], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_20AC]
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                lea     edx, [r9+4]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A397D3:                          ; CODE XREF: sub_140A1EEE4+166CA↑j
                                        ; sub_140A1EEE4+166DA↑j
                mov     [rsp+24B8h+var_2000], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_2000]
                mov     r9, [rsp+24B8h+var_E30]
                xor     ecx, 2D72h
                mov     r8, [rsp+24B8h+var_E18]
                mov     [rsp+24B8h+var_2498], rdx
                mov     edx, 12h
                ror     ecx, 5Ch
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A3980E:                          ; CODE XREF: sub_140A1EEE4+19015↑j
                mov     eax, [rbx+10h]
                mov     r8, r15
                mov     r9, [rbx+8]
                mov     edx, 0Dh
                mov     [rsp+24B8h+var_1FA0], 0D0002D61h
                mov     ecx, [rsp+24B8h+var_1FA0]
                xor     ecx, 2D72h
                mov     [rsp+24B8h+var_2498], rax
                ror     ecx, 5Ch
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A39843:                          ; CODE XREF: sub_140A1EEE4+1A0FC↑j
                mov     r13, [rsp+24B8h+arg_18]

loc_140A3984B:                          ; CODE XREF: sub_140A1EEE4+1A09F↑j
                mov     rax, [rdi+218h]
                mov     byte ptr [rax], 0C3h
                mov     cr0, r12
                mov     r14, [rsp+24B8h+var_2468]
                mov     ebx, 2
                mov     r12, [rsp+24B8h+var_2430]

loc_140A3986B:                          ; CODE XREF: sub_140A1EEE4+1A023↑j
                mov     rdi, [rsp+24B8h+var_1450]
                mov     ecx, [rdi+928h]
                test    ecx, ecx
                jz      loc_140A3994F
                mov     rax, cr8
                cmp     al, bl
                jnb     short loc_140A39897
                mov     rax, cr8
                mov     cr8, rbx
                mov     ecx, [rdi+928h]

loc_140A39897:                          ; CODE XREF: sub_140A1EEE4+1A9A3↑j
                test    ecx, ecx
                jz      loc_140A3994F
                sub     ecx, 1
                jz      loc_140A39942
                sub     ecx, 1
                jz      loc_140A39939
                sub     ecx, 1
                jz      short loc_140A39930
                sub     ecx, 1
                jz      short loc_140A398F8
                cmp     ecx, 1
                jz      short loc_140A398D2
                mov     rax, [rdi+5B8h]
                lock or qword ptr [rax+340h], 1
                jmp     short loc_140A3994F
; ---------------------------------------------------------------------------

loc_140A398D2:                          ; CODE XREF: sub_140A1EEE4+1A9DA↑j
                mov     rcx, gs:20h
                mov     rax, [rdi+648h]
                mov     edx, [rdi+990h]
                shr     edx, 0Ah
                and     edx, 1Fh
                mov     rcx, [rax+rcx]
                lock bts [rcx], edx
                jmp     short loc_140A3994F
; ---------------------------------------------------------------------------

loc_140A398F8:                          ; CODE XREF: sub_140A1EEE4+1A9D5↑j
                mov     rcx, gs:20h
                mov     rax, [rdi+648h]
                mov     ebx, [rdi+990h]
                shr     ebx, 0Ah
                and     ebx, 1Fh
                mov     rcx, [rax+rcx]
                add     rcx, [rdi+6A8h]
                mov     rax, [rdi+688h]
                mov     rdx, [rcx+rax]
                lock bts [rdx], ebx
                jmp     short loc_140A3994F
; ---------------------------------------------------------------------------

loc_140A39930:                          ; CODE XREF: sub_140A1EEE4+1A9D0↑j
                mov     rax, [rdi+560h]
                jmp     short loc_140A39949
; ---------------------------------------------------------------------------

loc_140A39939:                          ; CODE XREF: sub_140A1EEE4+1A9C7↑j
                mov     rax, [rdi+558h]
                jmp     short loc_140A39949
; ---------------------------------------------------------------------------

loc_140A39942:                          ; CODE XREF: sub_140A1EEE4+1A9BE↑j
                mov     rax, [rdi+548h]

loc_140A39949:                          ; CODE XREF: sub_140A1EEE4+1AA53↑j
                                        ; sub_140A1EEE4+1AA5C↑j
                lock bts qword ptr [rax], 0

loc_140A3994F:                          ; CODE XREF: sub_140A1EEE4+1A997↑j
                                        ; sub_140A1EEE4+1A9B5↑j ...
                mov     rax, [rsp+24B8h+var_1450]
                mov     rcx, [rax+690h]
                mov     [r15+rcx], r10
                mov     rax, [rsp+24B8h+var_1450]
                mov     rcx, [rax+6A0h]
                mov     [r15+rcx], r10
                mov     rcx, [rsp+24B8h+var_1450]
                mov     rcx, [rcx+158h]
                call    sub_140A13340
                mov     rax, [rsp+24B8h+var_1450]
                mov     r9, r14
                mov     rdx, [rsp+24B8h+var_2438]
                mov     r8, r12
                mov     [rsp+24B8h+var_2488], rsi
                mov     rcx, [rax+158h]
                mov     [rsp+24B8h+var_2490], rcx
                mov     ecx, 109h
                mov     [rsp+24B8h+var_2498], r13
                call    sub_140A13080
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_140A399C0:                          ; CODE XREF: sub_140A1EEE4+48D1↑j
                                        ; sub_140A1EEE4+1A17E↑j
                add     rsp, 2480h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                retn
sub_140A1EEE4   endp

; ---------------------------------------------------------------------------
algn_140A399D3:                         ; DATA XREF: .pdata:000000014012C990↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A399E0   proc near               ; DATA XREF: .pdata:000000014012C99C↑o
                                        ; sub_140A1DBA0+1C4↑o ...

var_18          = dword ptr -18h

                push    rbx
                sub     rsp, 30h
                mov     eax, [rcx+18h]
                mov     rbx, rcx
                mov     r9, [rcx+10h]
                mov     r8d, [rcx+8]
                mov     edx, [rcx+4]
                mov     ecx, [rcx]
                mov     [rsp+38h+var_18], eax
                call    sub_140A1EEE4
                mov     [rbx+1Ch], al
                add     rsp, 30h
                pop     rbx
                retn
sub_140A399E0   endp

; ---------------------------------------------------------------------------
byte_140A39A0B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012C99C↑o

; =============== S U B R O U T I N E =======================================


sub_140A39A14   proc near               ; CODE XREF: sub_140A1EEE4+16FA9↑p
                                        ; DATA XREF: .pdata:000000014012C9A8↑o

var_A8          = dword ptr -0A8h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_68          = qword ptr -68h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

; __unwind { // __C_specific_handler
                mov     r11, rsp
                mov     [r11+10h], rdx
                mov     [r11+8], rcx
                push    rbx
                push    rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 80h
                mov     rsi, rcx
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     r8, rax
                mov     rdx, rax
                ror     rdx, 3
                xor     r8, rdx
                mov     r15, 7010008004002001h
                mov     rax, r15
                mul     r8
                mov     [r11-60h], rdx
                mov     rbx, rax
                xor     ebx, edx
                and     ebx, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, r15
                mul     rdx
                mov     [r11-58h], rdx
                xor     rax, rdx
                lea     ecx, [rbx+1]
                xor     edx, edx
                div     rcx
                mov     rdi, rdx
                lea     edx, [rbx+30h]
                mov     rax, [rsi+0F8h]
                mov     r8d, [rsi+810h]
                mov     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     r11, rax
                xor     r14d, r14d
                test    rax, rax
                jnz     short loc_140A39AC7
                inc     dword ptr [rsi+0A18h]
                mov     edi, r14d
                jmp     loc_140A39BC9
; ---------------------------------------------------------------------------

loc_140A39AC7:                          ; CODE XREF: sub_140A39A14+A3↑j
                mov     r9d, edi
                mov     r8, r11
                cmp     edi, 8
                jb      short loc_140A39B0E
                mov     r10d, edi
                shr     r10, 3

loc_140A39AD9:                          ; CODE XREF: sub_140A39A14+F8↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, r15
                mul     rdx
                mov     [rsp+0A8h+var_50], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                add     r9d, 0FFFFFFF8h
                sub     r10, 1
                jnz     short loc_140A39AD9

loc_140A39B0E:                          ; CODE XREF: sub_140A39A14+BC↑j
                test    r9d, r9d
                jz      short loc_140A39B47
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, r15
                mul     rdx
                mov     [rsp+0A8h+var_48], rdx
                xor     rdx, rax

loc_140A39B37:                          ; CODE XREF: sub_140A39A14+131↓j
                mov     [r8], dl
                inc     r8
                shr     rdx, 8
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A39B37

loc_140A39B47:                          ; CODE XREF: sub_140A39A14+FD↑j
                sub     ebx, edi
                mov     edi, edi
                add     rdi, r11
                lea     r8, [rdi+30h]
                cmp     ebx, 8
                jb      short loc_140A39B92
                mov     r9d, ebx
                shr     r9, 3

loc_140A39B5E:                          ; CODE XREF: sub_140A39A14+17C↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, r15
                mul     rdx
                mov     [rsp+0A8h+var_40], rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                add     ebx, 0FFFFFFF8h
                sub     r9, 1
                jnz     short loc_140A39B5E

loc_140A39B92:                          ; CODE XREF: sub_140A39A14+141↑j
                test    ebx, ebx
                jz      short loc_140A39BC9
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, r15
                mul     rdx
                mov     [rsp+0A8h+var_38], rdx
                xor     rdx, rax

loc_140A39BBA:                          ; CODE XREF: sub_140A39A14+1B3↓j
                mov     [r8], dl
                inc     r8
                shr     rdx, 8
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A39BBA

loc_140A39BC9:                          ; CODE XREF: sub_140A39A14+AE↑j
                                        ; sub_140A39A14+180↑j
                mov     [rsp+0A8h+arg_18], rdi
                test    rdi, rdi
                jnz     short loc_140A39BDD
                xor     eax, eax
                jmp     loc_140A3A05C
; ---------------------------------------------------------------------------

loc_140A39BDD:                          ; CODE XREF: sub_140A39A14+1C0↑j
                mov     ecx, 30h ; '0'
                mov     rax, rdi
                lea     edx, [rcx-2Ah]

loc_140A39BE8:                          ; CODE XREF: sub_140A39A14+1E2↓j
                mov     [rax], r14
                add     rax, 8
                add     ecx, 0FFFFFFF8h
                sub     rdx, 1
                jnz     short loc_140A39BE8
                test    ecx, ecx
                jz      short loc_140A39C07

loc_140A39BFC:                          ; CODE XREF: sub_140A39A14+1F1↓j
                mov     [rax], r14b
                inc     rax
                add     ecx, 0FFFFFFFFh
                jnz     short loc_140A39BFC

loc_140A39C07:                          ; CODE XREF: sub_140A39A14+1E6↑j
                lea     rbx, [rdi+18h]
                xor     r8d, r8d
                xor     edx, edx
                mov     rcx, rbx
                call    KeInitializeEvent
                mov     [rdi], rbx
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, r15
                mul     rdx
                mov     rcx, rdx
                mov     [rsp+0A8h+var_30], rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 1
                jnb     short loc_140A39C73
                bts     dword ptr [rsi+990h], 19h
                mov     qword ptr [rdi+8], 1

loc_140A39C73:                          ; CODE XREF: sub_140A39A14+24D↑j
                lock or [rsp+0A8h+var_A8], r14d

loc_140A39C78:                          ; DATA XREF: .rdata:00000001400B16C4↑o
;   __try { // __except at loc_140A39D27
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, r15
                mul     rdx
                mov     r9, rdx
                xor     r9, rax
                xor     r9, rsi
                mov     al, [rsi+920h]
                dec     al
                movzx   r11d, al
                mov     ebx, 3Fh ; '?'
                sub     ebx, r11d
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, r15
                mul     rdx
                xor     rax, rdx
                xor     edx, edx
                div     rbx
                lea     r10d, [r11+rdx]

loc_140A39CD9:                          ; CODE XREF: sub_140A39A14+2EF↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     r8, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     r8, rcx
                mov     rax, r15
                mul     r8
                xor     rax, rdx
                xor     edx, edx
                div     rbx
                add     edx, r11d
                cmp     edx, r10d
                jz      short loc_140A39CD9
                mov     eax, r10d
                bts     r9, rax
                mov     eax, edx
                btr     r9, rax
                cli
                cmp     cs:KdDebuggerNotPresent, 0
                jnz     short loc_140A39D1E

loc_140A39D1C:                          ; CODE XREF: sub_140A39A14:loc_140A39D1C↓j
                jmp     short loc_140A39D1C
; ---------------------------------------------------------------------------

loc_140A39D1E:                          ; CODE XREF: sub_140A39A14+306↑j
                sti
                mov     eax, [r9]
                jmp     loc_140A3A059
;   } // starts at 140A39C78
; ---------------------------------------------------------------------------

loc_140A39D27:                          ; DATA XREF: .rdata:00000001400B16C4↑o
;   __except(1) // owned by 140A39C78
                cli
                cmp     cs:KdDebuggerNotPresent, 0
                jnz     short loc_140A39D33

loc_140A39D31:                          ; CODE XREF: sub_140A39A14:loc_140A39D31↓j
                jmp     short loc_140A39D31
; ---------------------------------------------------------------------------

loc_140A39D33:                          ; CODE XREF: sub_140A39A14+31B↑j
                sti
                mov     rsi, [rsp+0A8h+arg_0]
                mov     rax, [rsi+2D0h]
                mov     rdi, [rsp+0A8h+arg_18]
                mov     [rsp+0A8h+var_78], rdi
                mov     rcx, [rsp+0A8h+arg_8]
                mov     rdx, [rcx+10h]
                mov     [rsp+0A8h+var_80], rdx
                and     [rsp+0A8h+var_88], 0
                xor     r9d, r9d
                xor     r8d, r8d
                lea     edx, [r9+10h]
                lea     rcx, [rsp+0A8h+arg_10]
                call    j__guard_dispatch_icall_nop
                test    eax, eax
                jns     short loc_140A39D89
                xor     eax, eax
                jmp     loc_140A3A05C
; ---------------------------------------------------------------------------

loc_140A39D89:                          ; CODE XREF: sub_140A39A14+36C↑j
                and     [rsp+0A8h+var_80], 0
                lea     rax, [rsp+0A8h+var_68]
                mov     [rsp+0A8h+var_88], rax
                xor     r9d, r9d
                xor     r8d, r8d
                lea     edx, [r9+10h]
                mov     rcx, [rsp+0A8h+arg_10]
                call    ObReferenceObjectByHandle
                test    eax, eax
                jns     short loc_140A39DBB
                xor     eax, eax
                jmp     loc_140A3A05C
; ---------------------------------------------------------------------------

loc_140A39DBB:                          ; CODE XREF: sub_140A39A14+39E↑j
                mov     rcx, [rsp+0A8h+arg_10]
                call    NtClose
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, 7010008004002001h
                mul     rdx
                mov     ecx, edx
                mov     eax, eax
                xor     rcx, rax
                mov     rax, 2492492492492493h
                mul     rcx
                mov     rax, rcx
                sub     rax, rdx
                shr     rax, 1
                add     rax, rdx
                shr     rax, 2
                imul    rax, 7
                sub     rcx, rax
                mov     eax, ecx
                lea     rdx, off_140A99910
                mov     rdx, [rdx+rax*8]
                mov     rax, [rsi+690h]
                mov     rcx, [rsp+0A8h+var_68]
                mov     [rcx+rax], rdx
                mov     rax, [rsi+6A0h]
                mov     [rcx+rax], rdx
                mov     [rsi+998h], rcx
                mov     dword ptr [rsi+954h], 3D406922h
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, 7010008004002001h
                mul     rdx
                mov     rcx, rdx
                xor     rcx, rax
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rcx
                shr     rdx, 3
                lea     rax, [rdx+rdx*4]
                add     rax, rax
                sub     rcx, rax
                cmp     rcx, 1
                jnb     loc_140A3A059
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, 7010008004002001h
                mul     rdx
                mov     rbx, rdx
                xor     ebx, eax
                and     ebx, 7FFh
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     r8, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     r8, rcx
                mov     rax, 7010008004002001h
                mul     r8
                lea     r9d, [rbx+1]
                xor     rax, rdx
                xor     edx, edx
                div     r9
                mov     r14, rdx
                lea     edx, [rbx+20h]
                mov     rax, [rsi+0F8h]
                mov     r8d, [rsi+810h]
                mov     ecx, 200h
                call    j__guard_dispatch_icall_nop
                mov     r11, rax
                test    rax, rax
                jnz     short loc_140A39F2E
                inc     dword ptr [rsi+0A18h]
                xor     r9d, r9d
                jmp     loc_140A3A03B
; ---------------------------------------------------------------------------

loc_140A39F2E:                          ; CODE XREF: sub_140A39A14+50A↑j
                mov     r9d, r14d
                mov     r8, r11
                cmp     r14d, 8
                jb      short loc_140A39F78
                mov     r10d, r14d
                shr     r10, 3

loc_140A39F41:                          ; CODE XREF: sub_140A39A14+562↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, 7010008004002001h
                mul     rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                add     r9d, 0FFFFFFF8h
                sub     r10, 1
                jnz     short loc_140A39F41

loc_140A39F78:                          ; CODE XREF: sub_140A39A14+524↑j
                test    r9d, r9d
                jz      short loc_140A39FB3
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, 7010008004002001h
                mul     rdx
                xor     rdx, rax

loc_140A39FA3:                          ; CODE XREF: sub_140A39A14+59D↓j
                mov     [r8], dl
                inc     r8
                shr     rdx, 8
                add     r9d, 0FFFFFFFFh
                jnz     short loc_140A39FA3

loc_140A39FB3:                          ; CODE XREF: sub_140A39A14+567↑j
                sub     ebx, r14d
                mov     r9d, r14d
                add     r9, r11
                lea     r8, [r9+20h]
                cmp     ebx, 8
                jb      short loc_140A3A002
                mov     r10d, ebx
                shr     r10, 3

loc_140A39FCC:                          ; CODE XREF: sub_140A39A14+5EC↓j
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, 7010008004002001h
                mul     rdx
                xor     rdx, rax
                mov     [r8], rdx
                add     r8, 8
                add     ebx, 0FFFFFFF8h
                sub     r10, 1
                jnz     short loc_140A39FCC

loc_140A3A002:                          ; CODE XREF: sub_140A39A14+5AF↑j
                test    ebx, ebx
                jz      short loc_140A3A03B
                rdtsc
                shl     rdx, 20h
                or      rax, rdx
                mov     rdx, rax
                mov     rcx, rax
                ror     rcx, 3
                xor     rdx, rcx
                mov     rax, 7010008004002001h
                mul     rdx
                xor     rdx, rax

loc_140A3A02C:                          ; CODE XREF: sub_140A39A14+625↓j
                mov     [r8], dl
                inc     r8
                shr     rdx, 8
                add     ebx, 0FFFFFFFFh
                jnz     short loc_140A3A02C

loc_140A3A03B:                          ; CODE XREF: sub_140A39A14+515↑j
                                        ; sub_140A39A14+5F0↑j
                mov     [rsi+9E0h], r9
                test    r9, r9
                jnz     short loc_140A3A04B
                xor     eax, eax
                jmp     short loc_140A3A05C
; ---------------------------------------------------------------------------

loc_140A3A04B:                          ; CODE XREF: sub_140A39A14+631↑j
                lea     rax, qword_1403E9EF0
                mov     [rsi+110h], rax

loc_140A3A059:                          ; CODE XREF: sub_140A39A14+30E↑j
                                        ; sub_140A39A14+483↑j
                mov     rax, rdi

loc_140A3A05C:                          ; CODE XREF: sub_140A39A14+1C4↑j
                                        ; sub_140A39A14+370↑j ...
                add     rsp, 80h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbx
                retn
; } // starts at 140A39A14
sub_140A39A14   endp

; ---------------------------------------------------------------------------
algn_140A3A06B:                         ; DATA XREF: .pdata:000000014012C9A8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A3A080   proc near               ; DATA XREF: .pdata:000000014012C9B4↑o
                                        ; sub_140A1EEE4+577F↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                cmp     qword ptr [r8+998h], 0
                mov     rdi, r8
                mov     rbx, rdx
                jnz     short loc_140A3A0BF
                xor     edx, edx
                mov     rcx, rbx
                call    sub_140310648
                lea     rcx, sub_1403CBC00
                cmp     rax, rcx
                jnz     short loc_140A3A0BF
                mov     rcx, rbx
                call    ObfReferenceObject
                mov     [rdi+998h], rbx

loc_140A3A0BF:                          ; CODE XREF: sub_140A3A080+18↑j
                                        ; sub_140A3A080+2E↑j
                mov     rbx, [rsp+28h+arg_0]
                xor     eax, eax
                add     rsp, 20h
                pop     rdi
                retn
sub_140A3A080   endp

; ---------------------------------------------------------------------------
byte_140A3A0CC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C9B4↑o

; =============== S U B R O U T I N E =======================================


sub_140A3A0D4   proc near               ; CODE XREF: sub_140A1EEE4+B7E↑p
                                        ; sub_140A1EEE4+18C47↑p
                                        ; DATA XREF: ...

var_28          = dword ptr -28h
arg_0           = byte ptr  8
arg_8           = byte ptr  10h
arg_10          = qword ptr  18h

; __unwind { // __C_specific_handler
                push    rbx
                push    rsi
                push    rdi
                sub     rsp, 30h
                mov     rax, cr8
                mov     [rsp+48h+arg_0], al
                mov     eax, 0Fh
                mov     cr8, rax
                mov     rbx, cr0
                mov     [rsp+48h+arg_10], rbx

loc_140A3A0F5:                          ; DATA XREF: .rdata:00000001400B14C0↑o
;   __try { // __except at loc_140A3A15B
                mov     rax, rbx
                btr     rax, 10h
                mov     cr0, rax
;   } // starts at 140A3A0F5

loc_140A3A100:                          ; DATA XREF: .rdata:00000001400B14C0↑o
                lea     rdi, sub_140A13180
                mov     sil, [rdi+2]
                mov     [rsp+48h+arg_8], sil

loc_140A3A110:                          ; DATA XREF: .rdata:00000001400B14D0↑o
;   __try { // __except at loc_140A3A121
                mov     byte ptr [rdi+2], 0C3h
                call    sub_140A13180
                mov     ecx, eax
                mov     [rsp+48h+var_28], eax
                jmp     short loc_140A3A13B
;   } // starts at 140A3A110
; ---------------------------------------------------------------------------

loc_140A3A121:                          ; DATA XREF: .rdata:00000001400B14D0↑o
;   __except(1) // owned by 140A3A110
                mov     ecx, 1
                mov     [rsp+48h+var_28], ecx
                lea     rdi, sub_140A13180
                mov     rbx, [rsp+48h+arg_10]
                mov     sil, [rsp+48h+arg_8]

loc_140A3A13B:                          ; CODE XREF: sub_140A3A0D4+4B↑j
                cmp     [rdi+2], sil
                jz      short loc_140A3A145
                mov     [rdi+2], sil

loc_140A3A145:                          ; CODE XREF: sub_140A3A0D4+6B↑j
                                        ; DATA XREF: .rdata:00000001400B14E0↑o
;   __try { // __except at loc_140A3A14A
                mov     cr0, rbx
                jmp     short loc_140A3A14E
;   } // starts at 140A3A145
; ---------------------------------------------------------------------------

loc_140A3A14A:                          ; DATA XREF: .rdata:00000001400B14E0↑o
;   __except(1) // owned by 140A3A145
                mov     ecx, [rsp+48h+var_28]

loc_140A3A14E:                          ; CODE XREF: sub_140A3A0D4+74↑j
                movzx   eax, [rsp+48h+arg_0]
                mov     cr8, rax
                mov     eax, ecx
                jmp     short loc_140A3A169
; ---------------------------------------------------------------------------

loc_140A3A15B:                          ; DATA XREF: .rdata:00000001400B14C0↑o
;   __except(1) // owned by 140A3A0F5
                movzx   eax, [rsp+48h+arg_0]
                mov     cr8, rax
                mov     eax, 1

loc_140A3A169:                          ; CODE XREF: sub_140A3A0D4+85↑j
                add     rsp, 30h
                pop     rdi
                pop     rsi
                pop     rbx
                retn
; } // starts at 140A3A0D4
sub_140A3A0D4   endp

; ---------------------------------------------------------------------------
byte_140A3A171  db 15h dup(0CCh)        ; DATA XREF: .pdata:000000014012C9C0↑o
                align 10h
qword_140A3A190 dq 85131481131482Eh, 1851314810513148h, 2851314820513148h
                                        ; DATA XREF: .pdata:000000014012C9CC↑o
                                        ; sub_140A1EEE4+2B77↑o
                dq 3851314830513148h, 4851314840513148h, 5851314850513148h
                dq 6851314860513148h, 7851314870513148h, 851314878C18348h
                dq 1851314810513148h, 2851314820513148h, 3851314830513148h
                dq 4851314840513148h, 8B48113178E98348h, 0C48A8BD18B48C2h
                dq 481174C085480000h, 48000000C0CA8431h, 0EFE2C0BB0F48C8D3h
                dq 348000007E8828Bh, 48D0FF28EC8348C2h, 110808B4C28C483h
                dq 798888D480000h, 0FF4100000001BA00h, 90909090909090E0h
                dq 9090909090909090h
byte_140A3A258  db 0Eh dup(0CCh)        ; DATA XREF: .pdata:000000014012C9CC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A3A270   proc near               ; DATA XREF: .pdata:000000014012C9D8↑o
                                        ; sub_140A1EEE4+16DD3↑o
                xor     [rcx+48h], rdx
                xor     [rcx+50h], rdx
                add     rcx, 48h ; 'H'
                xor     [rcx+10h], rdx
                xor     [rcx+18h], rdx
                xor     [rcx+20h], rdx
                xor     [rcx+28h], rdx
                xor     [rcx+30h], rdx
                xor     [rcx+38h], rdx
                xor     [rcx+40h], rdx
                xor     [rcx+48h], rdx
                xor     [rcx+50h], rdx
                xor     [rcx+58h], rdx
                xor     [rcx+60h], rdx
                xor     [rcx+68h], rdx
                xor     [rcx+70h], rdx
                xor     [rcx+78h], rdx
                xor     [rcx+80h], rdx
                xor     [rcx+88h], rdx
                xor     [rcx+90h], rdx
                xor     [rcx+98h], rdx
                xor     [rcx+0A0h], rdx
                xor     [rcx+0A8h], rdx
                xor     [rcx+0B0h], rdx
                xor     [rcx+0B8h], rdx
                xor     [rcx+0C0h], rdx
                xor     [rcx], edx
                sub     rcx, 48h ; 'H'
                mov     r8, [rcx+40h]
                mov     r10, [r8+40h]
                mov     rdx, 0FFFF800000000000h
                mov     r9, [r8+20h]
                xor     r10, r9
                or      r10, rdx
                mov     rdx, 85131481131482Eh
                mov     rcx, rdx
                xor     rdx, [r10]
                mov     [r10], ecx
                mov     rcx, r10
                jmp     rcx
sub_140A3A270   endp

; ---------------------------------------------------------------------------
                db 0Bh dup(90h)
algn_140A3A338:                         ; DATA XREF: .pdata:000000014012C9D8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A3A340   proc near               ; CODE XREF: sub_14099D840+13F↑p
                                        ; DATA XREF: .pdata:000000014012C9E4↑o

var_28          = qword ptr -28h
var_20          = qword ptr -20h

                push    rbx
                sub     rsp, 40h
                mov     rbx, rcx
                call    sub_140A3AD98
                mov     rbx, [rbx+0F0h]
                add     rbx, 0DF0h
                mov     rcx, rbx
                call    sub_140A3A5E4
                mov     rax, [rbx+20h]
                mov     r9, [rbx+10h]
                mov     r8, [rbx+8]
                mov     rdx, [rbx]
                mov     [rsp+48h+var_20], rax
                mov     rax, [rbx+18h]
                mov     [rsp+48h+var_28], rax
                call    sub_140A3A70C
                add     rsp, 40h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3A340   endp

byte_140A3A38D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012C9E4↑o

; =============== S U B R O U T I N E =======================================


sub_140A3A394   proc near               ; CODE XREF: sub_140A5C16C:loc_140A5C82C↓p
                                        ; DATA XREF: .pdata:000000014012C9F0↑o

var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_28          = byte ptr -28h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     rax, rsp
                mov     [rax+10h], rbx
                push    rsi
                sub     rsp, 60h
                xorps   xmm0, xmm0
                lea     r8, [rax+8]
                xor     esi, esi
                lea     rcx, aOSygSydAGaSyAG ; "O:SYG:SYD:(A;;GA;;;SY)(A;;GA;;;BA)"
                xor     r9d, r9d
                mov     [rax+8], rsi
                movups  xmmword ptr [rax-28h], xmm0
                lea     edx, [rsi+1]
                movups  xmmword ptr [rax-18h], xmm0
                call    SeConvertStringSecurityDescriptorToSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      short loc_140A3A427
                lea     rcx, [rsp+68h+var_28]
                call    SeCaptureSubjectContext
                mov     rdx, [rsp+68h+arg_0]
                lea     rax, unk_140C11090
                mov     [rsp+68h+var_38], 1
                lea     r8, qword_140C48328
                mov     [rsp+68h+var_40], rax
                xor     r9d, r9d
                lea     rax, [rsp+68h+var_28]
                xor     ecx, ecx
                mov     [rsp+68h+var_48], rax
                call    SeAssignSecurity
                lea     rcx, [rsp+68h+var_28]
                mov     ebx, eax
                call    SeReleaseSubjectContext
                test    ebx, ebx
                js      short loc_140A3A427
                call    sub_140A3A7B8
                test    eax, eax
                mov     ebx, eax
                cmovns  ebx, esi

loc_140A3A427:                          ; CODE XREF: sub_140A3A394+37↑j
                                        ; sub_140A3A394+85↑j
                cmp     [rsp+68h+arg_0], rsi
                jz      short loc_140A3A43A
                mov     rcx, [rsp+68h+arg_0]
                xor     edx, edx
                call    ExFreePoolWithTag

loc_140A3A43A:                          ; CODE XREF: sub_140A3A394+98↑j
                mov     eax, ebx
                mov     rbx, [rsp+68h+arg_8]
                add     rsp, 60h
                pop     rsi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3A394   endp

algn_140A3A448:                         ; DATA XREF: .pdata:000000014012C9F0↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=10h

sub_140A3A450   proc near               ; CODE XREF: sub_140A4D514+25↓p
                                        ; DATA XREF: .pdata:000000014012C9FC↑o

var_F0          = dword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = byte ptr -0E0h
var_DF          = byte ptr -0DFh
var_DE          = byte ptr -0DEh
var_DC          = dword ptr -0DCh
var_D8          = dword ptr -0D8h
var_D4          = dword ptr -0D4h
var_D0          = dword ptr -0D0h
var_CC          = dword ptr -0CCh
var_C8          = qword ptr -0C8h
var_C0          = byte ptr -0C0h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind { // __GSHandlerCheck
                push    rbp
                lea     rbp, [rsp-10h]
                sub     rsp, 110h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+10h+var_10], rax
                lea     rcx, dword_140C01988
                call    sub_1407A4680
                mov     rax, cs:qword_140CFC460
                mov     r9, [rax+0F0h]
                add     r9, 0E20h
                cmp     cs:dword_140C01988, 5
                jbe     loc_140A3A5C6
                mov     rdx, 400000000000h
                lea     rcx, dword_140C01988
                call    sub_140209F38
                test    al, al
                jz      loc_140A3A5C6
                mov     al, [r9]
                lea     rdx, word_140021BEA
                mov     [rsp+110h+var_E0], al
                lea     rcx, dword_140C01988
                lea     rax, [rsp+110h+var_E0]
                mov     [rsp+110h+var_98], 1
                mov     [rsp+110h+var_A0], rax
                xor     r8d, r8d
                mov     al, [r9+1]
                mov     [rsp+110h+var_DF], al
                lea     rax, [rsp+110h+var_DF]
                mov     [rbp+10h+var_90], rax
                mov     al, [r9+2]
                mov     [rsp+110h+var_DE], al
                lea     rax, [rsp+110h+var_DE]
                mov     [rbp+10h+var_80], rax
                mov     eax, [r9+4]
                mov     [rsp+110h+var_DC], eax
                lea     rax, [rsp+110h+var_DC]
                mov     [rbp+10h+var_70], rax
                mov     eax, [r9+8]
                mov     [rsp+110h+var_D8], eax
                lea     rax, [rsp+110h+var_D8]
                mov     [rbp+10h+var_60], rax
                mov     eax, [r9+0Ch]
                mov     [rsp+110h+var_D4], eax
                lea     rax, [rsp+110h+var_D4]
                mov     [rbp+10h+var_50], rax
                mov     eax, [r9+10h]
                mov     [rsp+110h+var_D0], eax
                lea     rax, [rsp+110h+var_D0]
                mov     [rbp+10h+var_40], rax
                mov     eax, [r9+14h]
                xor     r9d, r9d
                mov     [rsp+110h+var_CC], eax
                lea     rax, [rsp+110h+var_CC]
                mov     [rbp+10h+var_30], rax
                lea     rax, [rsp+110h+var_C8]
                mov     [rbp+10h+var_20], rax
                lea     rax, [rsp+110h+var_C0]
                mov     [rsp+110h+var_E8], rax
                mov     [rsp+110h+var_F0], 0Bh
                mov     [rbp+10h+var_88], 1
                mov     [rbp+10h+var_78], 1
                mov     [rbp+10h+var_68], 4
                mov     [rbp+10h+var_58], 4
                mov     [rbp+10h+var_48], 4
                mov     [rbp+10h+var_38], 4
                mov     [rbp+10h+var_28], 4
                mov     [rsp+110h+var_C8], 1000000h
                mov     [rbp+10h+var_18], 8
                call    sub_140209DB8

loc_140A3A5C6:                          ; CODE XREF: sub_140A3A450+44↑j
                                        ; sub_140A3A450+62↑j
                mov     rcx, [rbp+10h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 110h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 140A3A450
sub_140A3A450   endp

byte_140A3A5DC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012C9FC↑o

; =============== S U B R O U T I N E =======================================


sub_140A3A5E4   proc near               ; CODE XREF: sub_140A3A340+1F↑p
                                        ; DATA XREF: .pdata:000000014012CA08↑o
                push    rbx
                sub     rsp, 20h
                call    sub_140A3A608
                mov     ebx, eax
                call    sub_1405CC638
                mov     eax, ebx
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3A5E4   endp

byte_140A3A5FF  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA08↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_140A3A608   proc near               ; CODE XREF: sub_140A3A5E4+6↑p
                                        ; DATA XREF: .pdata:000000014012CA14↑o

var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8
var_s0          = byte ptr  0
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = qword ptr  20h
arg_18          = qword ptr  28h

                mov     [rsp-8+arg_0], rbx
                mov     [rsp-8+arg_10], rsi
                mov     [rsp-8+arg_18], rdi
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rsi, rcx
                xor     edi, edi
                lea     rcx, off_1400C80E8
                jmp     loc_140A3A6B3
; ---------------------------------------------------------------------------

loc_140A3A630:                          ; CODE XREF: sub_140A3A608+B6↓j
                xor     eax, eax
                and     [rbp+arg_8], rax
                mov     [rbp+var_40], rax
                mov     [rbp+var_38], eax
                cmp     [rbx+15h], al
                jnz     short loc_140A3A685
                cmp     [rbx+16h], al
                jnz     short loc_140A3A685
                and     [rbp+var_18], rax
                lea     r9, [rbp+var_40]
                mov     rax, [rsi]
                lea     r8, [rbp+var_30]
                mov     ecx, [rbx+10h]
                lea     rdx, [rbp+var_18]
                and     [rbp+var_30], 0
                mov     [rbp+var_10], rax
                mov     rax, [rsi+8]
                mov     [rbp+var_8], rax
                mov     rax, [rsi+10h]
                mov     [rbp+var_28], rax
                mov     rax, [rsi+18h]
                mov     [rbp+var_20], rax
                call    sub_14091B9B0
                jmp     short loc_140A3A68A
; ---------------------------------------------------------------------------

loc_140A3A685:                          ; CODE XREF: sub_140A3A608+38↑j
                                        ; sub_140A3A608+3D↑j
                mov     eax, 0C0000225h

loc_140A3A68A:                          ; CODE XREF: sub_140A3A608+7B↑j
                cmp     eax, 80000022h
                jz      short loc_140A3A6C6
                lea     r8, [rbp+arg_8]
                mov     ecx, eax
                lea     rdx, [rbp+var_40]
                call    sub_1405CC5C4
                mov     rcx, [rbx]
                test    eax, eax
                cmovnz  edi, eax
                mov     rax, [rbp+arg_8]
                mov     [rcx], rax
                lea     rcx, [rbx+20h]

loc_140A3A6B3:                          ; CODE XREF: sub_140A3A608+23↑j
                call    sub_1403F0AEC
                mov     rbx, rax
                test    rax, rax
                jnz     loc_140A3A630
                jmp     short loc_140A3A6ED
; ---------------------------------------------------------------------------

loc_140A3A6C6:                          ; CODE XREF: sub_140A3A608+87↑j
                and     [rbp+arg_8], 0
                mov     dword ptr [rbp+arg_8], 83h
                mov     rdx, [rbp+arg_8]

loc_140A3A6D6:                          ; CODE XREF: sub_140A3A608+E3↓j
                mov     rcx, [rbx]
                mov     [rcx], rdx
                lea     rcx, [rbx+20h]
                call    sub_1403F0AEC
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_140A3A6D6

loc_140A3A6ED:                          ; CODE XREF: sub_140A3A608+BC↑j
                lea     r11, [rsp+60h+var_s0]
                mov     eax, edi
                mov     rbx, [r11+10h]
                mov     rsi, [r11+20h]
                mov     rdi, [r11+28h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3A608   endp

byte_140A3A706  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA14↑o

; =============== S U B R O U T I N E =======================================


sub_140A3A70C   proc near               ; CODE XREF: sub_140A3A340+41↑p
                                        ; DATA XREF: .pdata:000000014012CA20↑o

var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_18          = qword ptr -18h
arg_20          = qword ptr  28h
arg_28          = qword ptr  30h

; __unwind { // __GSHandlerCheck
                push    rbx
                sub     rsp, 80h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+88h+var_18], rax
                mov     rcx, cs:qword_140C47FD8
                call    sub_1407D3EFC
                mov     rcx, [rsp+88h+arg_20]
                mov     rbx, rax
                mov     [rsp+88h+var_28], rcx
                lea     rcx, unk_140C48030
                mov     [rsp+88h+var_60], rdx
                mov     [rsp+88h+var_58], r8
                mov     [rsp+88h+var_48], rdx
                mov     rdx, rax
                mov     [rsp+88h+var_40], r8
                lea     r8, [rsp+88h+var_68]
                mov     [rsp+88h+var_68], rax
                mov     [rsp+88h+var_50], rax
                mov     [rsp+88h+var_38], rax
                mov     [rsp+88h+var_30], r9
                call    sub_1407C95A4
                mov     rdx, rbx
                lea     rcx, qword_140C47FD8
                call    sub_1403CE0B4
                mov     rdx, [rsp+88h+arg_28]
                mov     cs:qword_140C48118, rdx
                mov     rcx, [rsp+88h+var_18]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 80h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 140A3A70C
sub_140A3A70C   endp

algn_140A3A7B1:                         ; DATA XREF: .pdata:000000014012CA20↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=30h

sub_140A3A7B8   proc near               ; CODE XREF: sub_140A3A394+87↑p
                                        ; DATA XREF: .pdata:000000014012CA2C↑o

var_110         = dword ptr -110h
var_108         = dword ptr -108h
var_100         = dword ptr -100h
var_F0          = qword ptr -0F0h
var_E8          = xmmword ptr -0E8h
var_D0          = byte ptr -0D0h
var_80          = byte ptr -80h
var_68          = byte ptr -68h
var_50          = byte ptr -50h
var_30          = qword ptr -30h
var_20          = byte ptr -20h

; __unwind { // __GSHandlerCheck
                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-38h]
                sub     rsp, 110h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+30h+var_30], rax
                xor     r15d, r15d
                lea     rcx, [rbp+30h+var_80]
                xorps   xmm0, xmm0
                mov     [rsp+130h+var_F0], r15
                movups  [rsp+130h+var_E8+8], xmm0
                lea     esi, [r15+3]
                mov     edx, esi

loc_140A3A803:                          ; CODE XREF: sub_140A3A7B8+58↓j
                call    sub_140722E10
                add     rcx, 18h
                sub     rdx, 1
                jnz     short loc_140A3A803
                lea     r13d, [rdx+48h]
                mov     qword ptr [rsp+130h+var_E8], r15
                mov     r8d, r13d
                lea     rcx, [rsp+130h+var_D0]
                call    memset
                lea     r12, qword_140C47FC0
                mov     cs:byte_140C48112, 1
                mov     r8, r12
                lea     edx, [r13-47h]
                xor     r9d, r9d
                lea     rcx, aOSygSydAGrSyAG ; "O:SYG:SYD:(A;;GR;;;SY)(A;;GR;;;BA)(A;;G"...
                call    SeConvertStringSecurityDescriptorToSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      loc_140A3AB7C
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                lea     rcx, qword_140C47FD0
                call    sub_1407D3D58
                lea     r8, [rsp+130h+var_E8]
                lea     rdx, [rsp+130h+var_F0]
                lea     rcx, unk_140C48030
                call    sub_1403A6958
                mov     r8, [rsp+130h+var_F0]
                lea     rax, [rbp+30h+var_80]
                mov     rcx, rsi

loc_140A3A894:                          ; CODE XREF: sub_140A3A7B8+E7↓j
                mov     [rax], r8
                lea     rax, [rax+18h]
                sub     rcx, 1
                jnz     short loc_140A3A894
                mov     rdi, qword ptr [rsp+130h+var_E8]
                mov     rcx, [rdi+8]
                test    rcx, rcx
                jz      short loc_140A3A8E4
                mov     r9, cs:qword_140C47FC0
                lea     rax, [rbp+30h+var_80]
                mov     rdx, [rdi+10h]
                mov     qword ptr [rsp+130h+var_110], rax
                call    sub_14087FE84
                mov     ebx, eax
                test    eax, eax
                js      loc_140A3AB50
                lea     rdx, [rbp+30h+var_80]
                lea     rcx, [rbp+30h+var_68]
                call    sub_1407043E8
                mov     r8, [rsp+130h+var_F0]

loc_140A3A8E4:                          ; CODE XREF: sub_140A3A7B8+F5↑j
                mov     rcx, [rdi+38h]
                test    rcx, rcx
                jz      short loc_140A3A910
                mov     r9, cs:qword_140C47FC0
                lea     rax, [rbp+30h+var_50]
                mov     rdx, [rdi+40h]
                mov     qword ptr [rsp+130h+var_110], rax
                call    sub_14087FE84
                mov     ebx, eax
                test    eax, eax
                js      loc_140A3AB50

loc_140A3A910:                          ; CODE XREF: sub_140A3A7B8+133↑j
                mov     rdx, rdi
                lea     rcx, unk_140C48030
                call    sub_1403A6D3C
                mov     rdi, r15
                mov     r14d, r15d

loc_140A3A925:                          ; CODE XREF: sub_140A3A7B8+1A8↓j
                mov     ecx, r14d
                call    sub_14091BAF8
                mov     edx, eax
                lea     rax, [rdx+rdx*2]
                lea     rdx, [rsp+130h+var_D0]
                lea     rdx, [rdx+rax*8]
                mov     eax, r14d
                lea     rcx, [rax+rax*2]
                lea     rax, [rbp+30h+var_80]
                lea     rcx, [rax+rcx*8]
                call    sub_1407D0DAC
                mov     ebx, eax
                test    eax, eax
                js      loc_140A3AB6B
                inc     r14d
                cmp     r14d, esi
                jb      short loc_140A3A925
                lea     rcx, qword_140C47FC8
                call    sub_1407D3D58
                mov     r10, r15
                mov     r11, rsi

loc_140A3A974:                          ; CODE XREF: sub_140A3A7B8+1D8↓j
                lea     rdx, [rbp+30h+var_80]
                lea     rcx, [r12+28h]
                add     rdx, r10
                add     rcx, r10
                call    sub_140880184
                add     r10, 18h
                sub     r11, 1
                jnz     short loc_140A3A974
                mov     rdx, [rsp+130h+var_F0]
                lea     r8, [rsp+130h+var_D0]
                lea     rcx, unk_140C48030
                call    sub_1407C95A4
                mov     r8, r13
                lea     rcx, [rsp+130h+var_D0]
                xor     edx, edx
                call    memset
                mov     rdx, [rsp+130h+var_F0]
                mov     rcx, 0FFFFF78000000710h
                call    sub_1403CE0B4
                lea     rcx, qword_140C47FC8
                call    sub_1407D1E24
                mov     [rsp+130h+var_100], r15d
                lea     r9, qword_140010168
                mov     [rsp+130h+var_108], r15d
                lea     rdx, [rsp+130h+var_F0]
                mov     r8d, 8
                mov     qword ptr [rsp+130h+var_110], r15
                lea     rcx, qword_14000F510
                call    ZwUpdateWnfStateData
                mov     ebx, eax
                test    eax, eax
                js      loc_140A3AB6B
                mov     r14d, r15d
                lea     rbx, qword_140C47FC0

loc_140A3AA18:                          ; CODE XREF: sub_140A3A7B8+329↓j
                lea     rcx, unk_140C480F0
                call    sub_1407D3A04
                mov     edx, 310h
                mov     ecx, 200h
                mov     r8d, 63466D43h
                lea     r12d, [rax-1]
                and     r12d, 1
                mov     rbx, [rbx+r12*8+158h]
                call    ExAllocatePoolWithTag
                mov     r15, rax
                test    rax, rax
                jz      loc_140A3AB66
                test    rbx, rbx
                jnz     short loc_140A3AA64
                mov     rcx, rax
                call    sub_14091B7F0
                jmp     short loc_140A3AABC
; ---------------------------------------------------------------------------

loc_140A3AA64:                          ; CODE XREF: sub_140A3A7B8+2A0↑j
                mov     ecx, 6
                lea     edx, [rcx+7Ah]

loc_140A3AA6C:                          ; CODE XREF: sub_140A3A7B8+2FC↓j
                movups  xmm0, xmmword ptr [rbx]
                movups  xmmword ptr [rax], xmm0
                movups  xmm1, xmmword ptr [rbx+10h]
                movups  xmmword ptr [rax+10h], xmm1
                movups  xmm0, xmmword ptr [rbx+20h]
                movups  xmmword ptr [rax+20h], xmm0
                movups  xmm1, xmmword ptr [rbx+30h]
                movups  xmmword ptr [rax+30h], xmm1
                movups  xmm0, xmmword ptr [rbx+40h]
                movups  xmmword ptr [rax+40h], xmm0
                movups  xmm1, xmmword ptr [rbx+50h]
                movups  xmmword ptr [rax+50h], xmm1
                movups  xmm0, xmmword ptr [rbx+60h]
                movups  xmmword ptr [rax+60h], xmm0
                add     rax, rdx
                movups  xmm1, xmmword ptr [rbx+70h]
                add     rbx, rdx
                movups  xmmword ptr [rax-10h], xmm1
                sub     rcx, 1
                jnz     short loc_140A3AA6C
                movups  xmm0, xmmword ptr [rbx]
                movups  xmmword ptr [rax], xmm0

loc_140A3AABC:                          ; CODE XREF: sub_140A3A7B8+2AA↑j
                lea     rbx, qword_140C47FC0
                mov     edx, r12d
                lea     rcx, unk_140C480F0
                mov     [rbx+r12*8+158h], r15
                call    sub_1407C97CC
                inc     r14d
                cmp     r14d, 2
                jb      loc_140A3AA18
                mov     r8d, 8
                lea     rcx, sub_1404EDD60
                mov     rdx, rbx
                call    ExAllocateTimer
                xor     r15d, r15d
                mov     cs:qword_140C481A8, rax
                test    rax, rax
                jz      short loc_140A3AB66
                call    RtlIsStateSeparationEnabled
                lea     rcx, [rsp+130h+var_E8+8]
                lea     rdx, aRegistryMachin_130 ; "\\REGISTRY\\MACHINE\\OSDATA"
                test    al, al
                jnz     short loc_140A3AB27
                lea     rdx, aRegistryMachin_131 ; "\\REGISTRY\\MACHINE\\SOFTWARE"

loc_140A3AB27:                          ; CODE XREF: sub_140A3A7B8+366↑j
                call    RtlInitUnicodeString
                lea     r9, unk_140C480E8
                mov     rdx, rbx
                lea     r8, [rsp+130h+var_E8+8]
                lea     rcx, sub_1407C9670
                call    CmRegisterMachineHiveLoadedNotification
                mov     ebx, eax
                test    eax, eax
                js      short loc_140A3AB6B
                mov     ebx, r15d

loc_140A3AB50:                          ; CODE XREF: sub_140A3A7B8+114↑j
                                        ; sub_140A3A7B8+152↑j
                test    rdi, rdi
                jz      short loc_140A3AB6B
                mov     rdx, rdi
                lea     rcx, unk_140C48030
                call    sub_1403A6D3C
                jmp     short loc_140A3AB6B
; ---------------------------------------------------------------------------

loc_140A3AB66:                          ; CODE XREF: sub_140A3A7B8+297↑j
                                        ; sub_140A3A7B8+351↑j
                mov     ebx, 0C000009Ah

loc_140A3AB6B:                          ; CODE XREF: sub_140A3A7B8+19C↑j
                                        ; sub_140A3A7B8+250↑j ...
                lea     rcx, qword_140C47FD0
                call    sub_1407D1E24
                call    KeLeaveCriticalRegion

loc_140A3AB7C:                          ; CODE XREF: sub_140A3A7B8+98↑j
                lea     rdi, [rsp+130h+var_D0]
                mov     r14, rsi

loc_140A3AB84:                          ; CODE XREF: sub_140A3A7B8+3DC↓j
                mov     rcx, rdi
                call    sub_1407D33E8
                add     rdi, 18h
                sub     r14, 1
                jnz     short loc_140A3AB84
                lea     rdi, [rbp+30h+var_80]

loc_140A3AB9A:                          ; CODE XREF: sub_140A3A7B8+3F2↓j
                mov     rcx, rdi
                call    sub_1407D33C8
                add     rdi, 18h
                sub     rsi, 1
                jnz     short loc_140A3AB9A
                mov     eax, ebx
                mov     rcx, [rbp+30h+var_30]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+130h+var_20]
                mov     rbx, [r11+30h]
                mov     rsi, [r11+38h]
                mov     rdi, [r11+40h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 140A3A7B8
sub_140A3A7B8   endp

byte_140A3ABDC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA2C↑o

; =============== S U B R O U T I N E =======================================


sub_140A3ABE4   proc near               ; CODE XREF: sub_140A3DE0C+180↓p
                                        ; DATA XREF: .pdata:000000014012CA38↑o
                sub     rsp, 28h
                xor     r8d, r8d
                lea     rcx, unk_140C01918
                xor     edx, edx
                call    KseRegisterShim
                test    eax, eax
                jns     short loc_140A3AC4D
                mov     ecx, 1
                lock xadd cs:dword_140C2A900, ecx
                inc     ecx
                lea     rdx, dword_140C2A920
                and     ecx, 3Fh
                mov     [rdx+rcx*8+4], eax
                mov     eax, cs:dword_140CF9EC4
                mov     dword ptr [rdx+rcx*8], 120069h
                test    al, 2
                jz      short loc_140A3AC3C
                lea     rdx, aKernelpadsecti_1 ; "KernelPadSectionsOverride shim: failed "...
                mov     ecx, 0Ch
                call    sub_1405270D8

loc_140A3AC3C:                          ; CODE XREF: sub_140A3ABE4+45↑j
                lea     rdx, aKernelpadsecti_1 ; "KernelPadSectionsOverride shim: failed "...
                mov     ecx, 0Ch
                call    sub_140371D14

loc_140A3AC4D:                          ; CODE XREF: sub_140A3ABE4+17↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3ABE4   endp

byte_140A3AC53  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA38↑o

; =============== S U B R O U T I N E =======================================


sub_140A3AC5C   proc near               ; CODE XREF: sub_140A3DE0C+185↓p
                                        ; DATA XREF: .pdata:000000014012CA44↑o
                sub     rsp, 28h
                xor     r8d, r8d
                lea     rcx, unk_140C01950
                xor     edx, edx
                call    KseRegisterShim
                test    eax, eax
                jns     short loc_140A3ACC5
                mov     ecx, 1
                lock xadd cs:dword_140C2A900, ecx
                inc     ecx
                lea     rdx, dword_140C2A920
                and     ecx, 3Fh
                mov     [rdx+rcx*8+4], eax
                mov     eax, cs:dword_140CF9EC4
                mov     dword ptr [rdx+rcx*8], 13005Bh
                test    al, 2
                jz      short loc_140A3ACB4
                lea     rdx, aUsercetbasicmo ; "UserCetBasicModeAllowRetTargetNotCetCom"...
                mov     ecx, 0Ch
                call    sub_1405270D8

loc_140A3ACB4:                          ; CODE XREF: sub_140A3AC5C+45↑j
                lea     rdx, aUsercetbasicmo ; "UserCetBasicModeAllowRetTargetNotCetCom"...
                mov     ecx, 0Ch
                call    sub_140371D14

loc_140A3ACC5:                          ; CODE XREF: sub_140A3AC5C+17↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3AC5C   endp

byte_140A3ACCB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA44↑o

; =============== S U B R O U T I N E =======================================


sub_140A3ACD4   proc near               ; CODE XREF: sub_140A444A4+330↓p
                                        ; DATA XREF: .pdata:000000014012CA50↑o
                movaps  xmm0, cs:xmmword_140C4E400
                movaps  xmmword ptr [rcx], xmm0
                movaps  xmm1, cs:xmmword_140C4E410
                movaps  xmmword ptr [rcx+10h], xmm1
                movaps  xmm0, cs:xmmword_140C4E420
                movaps  xmmword ptr [rcx+20h], xmm0
                mov     al, [rcx+22h]
                and     al, 0FDh
                or      al, 5
                mov     [rcx+22h], al
                retn
sub_140A3ACD4   endp

; ---------------------------------------------------------------------------
                align 20h
byte_140A3AD00  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA50↑o

; =============== S U B R O U T I N E =======================================


sub_140A3AD08   proc near               ; CODE XREF: sub_140A444A4+324↓p
                                        ; DATA XREF: .pdata:000000014012CA5C↑o

var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = xmmword ptr -18h

                sub     rsp, 38h
                mov     rdx, rcx
                xorps   xmm0, xmm0
                movups  xmmword ptr [rcx], xmm0
                mov     r8, 4000000000000h
                movups  xmmword ptr [rcx+10h], xmm0
                movups  xmmword ptr [rcx+20h], xmm0
                mov     byte ptr [rcx+22h], 6
                mov     al, [rcx+22h]
                and     al, 3Fh
                or      al, 40h
                mov     [rcx+22h], al
                mov     rcx, [rcx+28h]
                mov     rax, rcx
                or      rax, r8
                mov     r8, 0C000000000000001h
                mov     [rdx+28h], rax
                mov     rax, [rdx+18h]
                and     rax, r8
                or      rax, 1
                mov     [rdx+18h], rax
                mov     eax, 2
                mov     [rdx+20h], ax
                mov     rax, 4001000000000h
                or      rcx, rax
                movups  [rsp+38h+var_18], xmm0
                mov     qword ptr [rsp+38h+var_18+8], rcx
                movups  [rsp+38h+var_38], xmm0
                movups  [rsp+38h+var_28], xmm0
                mov     [rdx+28h], rcx
                add     rsp, 38h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3AD08   endp

byte_140A3AD8F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA5C↑o

; =============== S U B R O U T I N E =======================================


sub_140A3AD98   proc near               ; CODE XREF: sub_140A3A340+9↑p
                                        ; DATA XREF: .pdata:000000014012CA68↑o
                push    rbx
                sub     rsp, 20h
                lea     rbx, qword_140C47FC0
                xor     edx, edx
                mov     rcx, rbx
                mov     r8d, 368h
                call    memset
                lea     rcx, qword_140C47FC8
                call    RtlRunOnceInitialize
                lea     rcx, qword_140C47FD0
                call    RtlRunOnceInitialize
                lea     rcx, unk_140C47FE8
                mov     edx, 3

loc_140A3ADD9:                          ; CODE XREF: sub_140A3AD98+4E↓j
                call    sub_140722E10
                add     rcx, 18h
                sub     rdx, 1
                jnz     short loc_140A3ADD9
                mov     r8d, 0B8h
                lea     rcx, unk_140C48030
                call    memset
                lea     rcx, unk_140C48030
                call    unknown_libname_4 ; Windows Driver Kit 7/10 64bit
                xor     edx, edx
                lea     rcx, unk_140C48048
                mov     r8d, 90h
                call    memset
                lea     rcx, unk_140C480F0
                call    unknown_libname_4 ; Windows Driver Kit 7/10 64bit
                lea     rcx, qword_140C48108
                call    RtlRunOnceInitialize
                xor     ecx, ecx
                mov     cs:dword_140C48128, 113h
                mov     cs:qword_140C48160, rcx
                lea     rax, sub_1404EDD40
                mov     cs:qword_140C48138, rcx
                lea     r8, sub_14087FF60
                lea     rcx, unk_140C48168
                mov     cs:qword_140C48140, rax
                mov     r9, rbx
                mov     cs:qword_140C48148, rbx
                call    sub_1407D10E0
                mov     r9, rbx
                lea     r8, sub_1408800F0
                lea     rcx, unk_140C481B0
                call    sub_1407D10E0
                lea     rcx, qword_140C481F0
                call    RtlRunOnceInitialize
                lea     rax, qword_140C481F8
                mov     cs:qword_140C48200, rax
                mov     cs:qword_140C481F8, rax
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3AD98   endp

byte_140A3AEB5  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA68↑o

; =============== S U B R O U T I N E =======================================


sub_140A3AEBC   proc near               ; CODE XREF: sub_14099D840+68↑p
                                        ; DATA XREF: .pdata:000000014012CA74↑o
                lea     rdx, [rcx+0B90h]
                mov     r9d, 80h
                movups  xmm0, xmmword ptr [rdx]
                add     rcx, 0C70h
                lea     r8, cs:140000000h
                lea     rax, rva NtBuildLab[r8]
                movups  xmmword ptr [rax], xmm0
                movups  xmm1, xmmword ptr [rdx+10h]
                movups  xmmword ptr [rax+10h], xmm1
                movups  xmm0, xmmword ptr [rdx+20h]
                movups  xmmword ptr [rax+20h], xmm0
                movups  xmm1, xmmword ptr [rdx+30h]
                movups  xmmword ptr [rax+30h], xmm1
                movups  xmm0, xmmword ptr [rdx+40h]
                movups  xmmword ptr [rax+40h], xmm0
                movups  xmm1, xmmword ptr [rdx+50h]
                movups  xmmword ptr [rax+50h], xmm1
                movups  xmm0, xmmword ptr [rdx+60h]
                movups  xmmword ptr [rax+60h], xmm0
                add     rax, r9
                movups  xmm0, xmmword ptr [rdx+70h]
                add     rdx, r9
                movups  xmmword ptr [rax-10h], xmm0
                movups  xmm1, xmmword ptr [rdx]
                movups  xmmword ptr [rax], xmm1
                movups  xmm0, xmmword ptr [rdx+10h]
                movups  xmmword ptr [rax+10h], xmm0
                movups  xmm1, xmmword ptr [rdx+20h]
                movups  xmmword ptr [rax+20h], xmm1
                movups  xmm0, xmmword ptr [rdx+30h]
                movups  xmmword ptr [rax+30h], xmm0
                movups  xmm1, xmmword ptr [rdx+40h]
                movups  xmmword ptr [rax+40h], xmm1
                movups  xmm0, xmmword ptr [rdx+50h]
                movups  xmmword ptr [rax+50h], xmm0
                lea     rax, rva unk_140C4C0A0[r8]
                movups  xmm0, xmmword ptr [rcx]
                movups  xmmword ptr [rax], xmm0
                movups  xmm1, xmmword ptr [rcx+10h]
                movups  xmmword ptr [rax+10h], xmm1
                movups  xmm0, xmmword ptr [rcx+20h]
                movups  xmmword ptr [rax+20h], xmm0
                movups  xmm1, xmmword ptr [rcx+30h]
                movups  xmmword ptr [rax+30h], xmm1
                movups  xmm0, xmmword ptr [rcx+40h]
                movups  xmmword ptr [rax+40h], xmm0
                movups  xmm1, xmmword ptr [rcx+50h]
                movups  xmmword ptr [rax+50h], xmm1
                movups  xmm0, xmmword ptr [rcx+60h]
                movups  xmmword ptr [rax+60h], xmm0
                add     rax, r9
                movups  xmm1, xmmword ptr [rcx+70h]
                add     rcx, r9
                movups  xmmword ptr [rax-10h], xmm1
                movups  xmm0, xmmword ptr [rcx]
                movups  xmmword ptr [rax], xmm0
                movups  xmm1, xmmword ptr [rcx+10h]
                movups  xmmword ptr [rax+10h], xmm1
                movups  xmm0, xmmword ptr [rcx+20h]
                movups  xmmword ptr [rax+20h], xmm0
                movups  xmm1, xmmword ptr [rcx+30h]
                movups  xmmword ptr [rax+30h], xmm1
                movups  xmm0, xmmword ptr [rcx+40h]
                movups  xmmword ptr [rax+40h], xmm0
                movups  xmm1, xmmword ptr [rcx+50h]
                movups  xmmword ptr [rax+50h], xmm1
                retn
sub_140A3AEBC   endp

; ---------------------------------------------------------------------------
                db 0CCh
byte_140A3AFCB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA74↑o

; =============== S U B R O U T I N E =======================================


sub_140A3AFD4   proc near               ; CODE XREF: sub_1409A2DF0+31↑p
                                        ; DATA XREF: .pdata:000000014012CA80↑o
                lea     rax, sub_1403EFC50
                mov     cs:off_140C00610, rax
                lea     rcx, sub_1409B8480
                lea     rax, sub_1403CA560
                mov     cs:off_140C005F8, rcx
                mov     cs:off_140C00608, rax
                lea     rax, sub_1404BCC30
                mov     cs:off_140C00620, rax
                lea     rax, sub_1403BB810
                mov     cs:off_140C00628, rax
                lea     rax, sub_1403BD4D0
                mov     cs:qword_140C00630, rax
                lea     rax, sub_1404DF510
                mov     cs:qword_140C00638, rax
                lea     rax, sub_1409B8230
                mov     cs:off_140C00828, rax
                lea     rax, sub_1409B8430
                mov     cs:off_140C00600, rax
                mov     cs:off_140C00708, rax
                lea     rax, sub_1404C2B80
                mov     cs:off_140C00958, rax
                lea     rax, qword_140C48C08
                mov     cs:qword_140C48C10, rax
                mov     cs:qword_140C48C08, rax
                mov     cs:off_140C00700, rcx
                retn
sub_140A3AFD4   endp

; ---------------------------------------------------------------------------
                db 0CCh
byte_140A3B085  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA80↑o

; =============== S U B R O U T I N E =======================================


sub_140A3B08C   proc near               ; CODE XREF: sub_1409A2CC0+2D↑p
                                        ; DATA XREF: .pdata:000000014012CA8C↑o
                lea     rax, sub_140365100
                mov     cs:off_140C005C8, rax
                lea     rax, MmQueryMemoryRanges
                mov     cs:off_140C005D0, rax
                lea     rax, sub_1403CF2C0
                mov     cs:qword_140C005E0, rax
                retn
sub_140A3B08C   endp

; ---------------------------------------------------------------------------
                align 8
algn_140A3B0B8:                         ; DATA XREF: .pdata:000000014012CA8C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A3B0C0   proc near               ; CODE XREF: sub_1409A1940:loc_1409A1994↑p
                                        ; DATA XREF: .pdata:000000014012CA98↑o
                lea     rax, sub_14099B050
                mov     cs:off_140C006C0, rax
                retn
sub_140A3B0C0   endp

; ---------------------------------------------------------------------------
                align 10h
byte_140A3B0D0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014012CA98↑o

; =============== S U B R O U T I N E =======================================


sub_140A3B0D8   proc near               ; CODE XREF: sub_14039FE04+86↑p
                                        ; DATA XREF: .pdata:000000014012CAA4↑o
                mov     rax, [rsp+0]
                retn
sub_140A3B0D8   endp

; ---------------------------------------------------------------------------
                align 2
byte_140A3B0DE  db 12h dup(0CCh)        ; DATA XREF: .pdata:000000014012CAA4↑o

; =============== S U B R O U T I N E =======================================


sub_140A3B0F0   proc near               ; DATA XREF: .pdata:000000014012CAB0↑o
                                        ; INIT:0000000140A9ABC0↓o ...
                mov     cs:byte_140C4C340, 1
                retn
sub_140A3B0F0   endp

; ---------------------------------------------------------------------------
                db 0CCh
algn_140A3B0F9:                         ; DATA XREF: .pdata:000000014012CAB0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A3B100   proc near               ; DATA XREF: .pdata:000000014012CABC↑o
                                        ; sub_140A5A734+3DA↓o
                and     dword ptr [rdx], 0
                xor     eax, eax
                retn
sub_140A3B100   endp

; ---------------------------------------------------------------------------
                db 0CCh
algn_140A3B107:                         ; DATA XREF: .pdata:000000014012CABC↑o
                align 10h
; [00000006 BYTES: COLLAPSED FUNCTION ClfsMgmtNullAdvanceTailNotification(_FILE_OBJECT *,_CLS_LSN *,void *). PRESS CTRL-NUMPAD+ TO EXPAND]
                db 0CCh
algn_140A3B117:                         ; DATA XREF: .pdata:000000014012CAC8↑o
                align 20h
; [00000003 BYTES: COLLAPSED FUNCTION nullsub_13. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 4
algn_140A3B124:                         ; DATA XREF: .pdata:000000014012CAD4↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A3B130   proc near               ; DATA XREF: .pdata:000000014012CAE0↑o
                                        ; sub_140A76428+17B0E↓o
                mov     cs:qword_140CFCB10, rcx
                retn
sub_140A3B130   endp

; ---------------------------------------------------------------------------
                db 0CCh
algn_140A3B139:                         ; DATA XREF: .pdata:000000014012CAE0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A3B140   proc near               ; DATA XREF: .pdata:000000014012CAEC↑o
                                        ; sub_140A610CC+2C↓o

arg_20          = qword ptr  28h

                mov     rax, [rsp+arg_20]
                mov     ecx, [rax]
                mov     [r8], ecx
                retn
sub_140A3B140   endp

; ---------------------------------------------------------------------------
                align 4
algn_140A3B14C:                         ; DATA XREF: .pdata:000000014012CAEC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A3B160   proc near               ; DATA XREF: .pdata:000000014012CAF8↑o
                                        ; sub_140A54474+723↓o
                mov     rax, [rcx+30h]
                lea     rdx, FsRtlSyncVolumes
                mov     cs:qword_140C44D08, rcx
                mov     [rax+8], rdx
                lea     rax, sub_14074BC90
                mov     [rcx+148h], rax
                lea     rax, sub_14038AEA0
                mov     [rcx+120h], rax
                lea     rax, sub_1408ACF80
                mov     [rcx+128h], rax
                xor     eax, eax
                retn
sub_140A3B160   endp

; ---------------------------------------------------------------------------
                align 4
algn_140A3B1A4:                         ; DATA XREF: .pdata:000000014012CAF8↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A3B1B0   proc near               ; DATA XREF: .pdata:000000014012CB04↑o
                                        ; sub_140A55694+8B↓o
                mov     rax, [rcx+30h]
                lea     rdx, FsRtlSyncVolumes
                mov     cs:qword_140C43320, rcx
                mov     [rax+8], rdx
                lea     rax, sub_14074B600
                mov     [rcx+148h], rax
                lea     rax, sub_14038AEA0
                mov     [rcx+120h], rax
                lea     rax, sub_1408ACF80
                mov     [rcx+128h], rax
                xor     eax, eax
                retn
sub_140A3B1B0   endp

; ---------------------------------------------------------------------------
                align 4
algn_140A3B1F4:                         ; DATA XREF: .pdata:000000014012CB04↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_140A3B200   proc near               ; CODE XREF: sub_140A54474+2D2↓p
                                        ; DATA XREF: .pdata:000000014012CB10↑o
                push    rbx
                sub     rsp, 20h
                mov     edx, 1
                lea     rcx, unk_140C43D00
                call    sub_140790488
                mov     edx, 3
                lea     rcx, unk_140C43C20
                call    sub_140790488
                mov     edx, 4
                lea     rcx, unk_140C43B40
                call    sub_140790488
                mov     edx, 5
                lea     rcx, unk_140C43FA0
                call    sub_140790488
                mov     edx, 2
                lea     rcx, unk_140C43EC0
                call    sub_140790488
                mov     edx, 6
                lea     rcx, unk_140C43DE0
                call    sub_140790488
                lea     rcx, unk_140C43D00
                call    sub_1407904D8
                test    eax, eax
                js      short loc_140A3B2E0
                lea     rcx, unk_140C43C20
                call    sub_1407904D8
                test    eax, eax
                js      short loc_140A3B2E0
                lea     rcx, unk_140C43B40
                call    sub_1407904D8
                test    eax, eax
                js      short loc_140A3B2E0
                lea     rcx, unk_140C43FA0
                call    sub_1407904D8
                test    eax, eax
                js      short loc_140A3B2E0
                lea     rcx, unk_140C43EC0
                call    sub_1407904D8
                test    eax, eax
                js      short loc_140A3B2E0
                lea     rcx, unk_140C43DE0
                call    sub_1407904D8
                test    eax, eax
                js      short loc_140A3B2E0
                xor     ebx, ebx

loc_140A3B2CE:                          ; CODE XREF: sub_140A3B200+DE↓j
                mov     ecx, ebx
                call    sub_1407908B8
                test    eax, eax
                js      short loc_140A3B2E0
                inc     ebx
                cmp     ebx, 7
                jb      short loc_140A3B2CE

loc_140A3B2E0:                          ; CODE XREF: sub_140A3B200+7A↑j
                                        ; sub_140A3B200+8A↑j ...
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_140A3B200   endp

algn_140A3B2E7:                         ; DATA XREF: .pdata:000000014012CB10↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0B0h

sub_140A3B2F0   proc near               ; CODE XREF: HalReportResourceUsage+5D↓p
                                        ; DATA XREF: .rdata:000000014008DE10↑o ...

var_190         = qword ptr -190h
var_180         = byte ptr -180h
var_17C         = dword ptr -17Ch
var_178         = dword ptr -178h
var_174         = dword ptr -174h
var_170         = xmmword ptr -170h
var_160         = dword ptr -160h
var_158         = dword ptr -158h
var_150         = qword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = xmmword ptr -110h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = byte ptr -0E0h
var_D8          = qword ptr -0D8h
var_30          = qword ptr -30h
var_20          = byte ptr -20h

; FUNCTION CHUNK AT 0000000140A7D2AA SIZE 0000009E BYTES

; __unwind { // __GSHandlerCheck
                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-0B8h]
                sub     rsp, 190h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+0B0h+var_30], rax
                mov     [rbp+0B0h+var_E8], rcx
                xor     edx, edx
                lea     rcx, [rbp+0B0h+var_E0]
                mov     r8d, 0A8h
                call    memset
                mov     r11, cs:KdComPortInUse
                xor     r14d, r14d
                xor     eax, eax
                mov     dword ptr [rsp+1B0h+var_170], r14d
                mov     [rsp+1B0h+var_148], r14
                xorps   xmm0, xmm0
                mov     [rsp+1B0h+var_158], eax
                mov     dword ptr [rsp+1B0h+var_150], r14d
                mov     [rsp+1B0h+var_140], r14
                mov     [rbp+0B0h+var_128], r14
                mov     [rsp+1B0h+var_174], r14d
                movups  [rsp+1B0h+var_170+8], xmm0
                test    r11, r11
                jnz     loc_140A7D2AA

loc_140A3B37A:                          ; CODE XREF: sub_140A3B2F0+41FCA↓j
                mov     rdx, cs:KdHvComPortInUse
                test    rdx, rdx
                jnz     loc_140A7D2BF

loc_140A3B38A:                          ; CODE XREF: sub_140A3B2F0+41FD2↓j
                                        ; sub_140A3B2F0+41FE5↓j
                mov     edi, 206C6148h
                mov     r15d, 2000h
                mov     ebx, 200h
                mov     r8d, edi
                mov     edx, r15d
                mov     ecx, ebx
                call    ExAllocatePoolWithTag
                mov     r8d, edi
                mov     [rbp+0B0h+var_F8], rax
                mov     edx, r15d
                mov     ecx, ebx
                mov     rsi, rax
                call    ExAllocatePoolWithTag
                mov     [rbp+0B0h+var_F0], rax
                mov     r13, rax
                test    rsi, rsi
                jz      loc_140A7D322
                test    rax, rax
                jz      loc_140A7D322
                mov     r8d, r15d
                xor     edx, edx
                mov     rcx, rsi
                call    memset
                mov     r8d, r15d
                xor     edx, edx
                mov     rcx, r13
                call    memset
                lea     r9, [rsi+4]
                mov     ebx, 1
                or      dword ptr [r9], 0FFFFFFFFh
                lea     r12, [r13+4]
                mov     [rbp+0B0h+var_120], r9
                lea     r8, byte_140D58D61
                mov     r15, r9
                mov     [rbp+0B0h+var_130], r12
                lea     r9, byte_140D58960
                mov     edx, r14d
                mov     rcx, r9
                lea     r10d, [rbx+10h]

loc_140A3B422:                          ; CODE XREF: sub_140A3B2F0+148↓j
                test    [rcx], bl
                jnz     short loc_140A3B42C
                mov     [rcx], r10b
                mov     [r8], edx

loc_140A3B42C:                          ; CODE XREF: sub_140A3B2F0+134↑j
                add     edx, ebx
                add     rcx, rbx
                add     r8, 5
                cmp     edx, 30h ; '0'
                jb      short loc_140A3B422
                mov     [rbp+0B0h+var_118], r14
                mov     r8b, r14b
                mov     [rsp+1B0h+var_138], r14
                mov     [rsp+1B0h+var_180], r14b

loc_140A3B44B:                          ; CODE XREF: sub_140A3B2F0+575↓j
                mov     rdi, cs:qword_140D58698
                mov     al, r8b
                neg     al
                mov     edx, r14d
                sbb     cl, cl
                and     cl, 0F0h
                add     cl, 20h ; ' '
                mov     byte ptr [rsp+1B0h+var_178], cl
                xor     r11d, r11d

loc_140A3B469:                          ; CODE XREF: sub_140A3B2F0+193↓j
                mov     [rsp+1B0h+var_17C], edx

loc_140A3B46D:                          ; CODE XREF: sub_140A3B2F0+26C↓j
                                        ; sub_140A3B2F0+35A↓j
                cmp     edx, 0FFh
                ja      loc_140A3B561
                mov     eax, edx
                test    [rax+r9], cl
                jnz     short loc_140A3B485
                add     edx, ebx
                jmp     short loc_140A3B469
; ---------------------------------------------------------------------------

loc_140A3B485:                          ; CODE XREF: sub_140A3B2F0+18F↑j
                lea     rdx, word_140CFC840
                lea     rcx, [rbp+0B0h+var_E0]
                call    KeCopyAffinityEx
                mov     eax, cs:dword_140CFC404
                xor     r8d, r8d
                mov     edx, [rsp+1B0h+var_17C]
                lea     rax, byte_140D58960
                mov     word ptr [rsp+1B0h+var_170+8], 202h
                mov     word ptr [rsp+1B0h+var_170+0Ah], bx
                mov     al, [rdx+rax]
                test    al, 2
                jnz     short loc_140A3B4C2
                mov     word ptr [rsp+1B0h+var_170+0Ah], r8w

loc_140A3B4C2:                          ; CODE XREF: sub_140A3B2F0+1CA↑j
                lea     rcx, [rdx+rdx*4]
                mov     word ptr [rsp+1B0h+var_170+0Eh], r8w
                lea     r9, byte_140D58D60
                mov     eax, [rcx+r9+1]
                mov     [rsp+1B0h+var_160], eax
                mov     word ptr [rsp+1B0h+var_170+0Ch], ax
                mov     rax, [rbp+0B0h+var_D8]
                mov     [rsp+54h], rax
                movups  xmm0, [rsp+1B0h+var_170+8]
                movzx   eax, byte ptr [rcx+r9]
                mov     r8d, [rsp+1B0h+var_158]
                mov     r10d, r8d
                movups  [rbp+0B0h+var_110], xmm0
                mov     dword ptr [rbp+0B0h+var_110+8], edx
                add     edx, ebx
                mov     [rsp+1B0h+var_17C], edx
                mov     word ptr [rbp+0B0h+var_110+4], ax

loc_140A3B50D:                          ; CODE XREF: sub_140A3B2F0+34F↓j
                mov     rax, [rbp+0B0h+var_120]
                xor     ecx, ecx
                mov     r9, [rbp+0B0h+var_130]
                cmp     [rax], ecx
                jnz     loc_140A3B834
                mov     rax, [rbp+0B0h+var_118]
                mov     rcx, [rsp+1B0h+var_138]

loc_140A3B528:                          ; CODE XREF: sub_140A3B2F0+56D↓j
                add     [rax+4], ebx
                add     [rcx+4], ebx
                mov     cl, byte ptr [rsp+1B0h+var_178]
                movups  xmmword ptr [r15], xmm0
                mov     [r15+10h], r8d
                add     r15, 14h
                movups  xmm0, [rbp+0B0h+var_110]
                movups  xmmword ptr [r9], xmm0
                mov     [r9+10h], r10d
                add     r9, 14h
                mov     [rbp+0B0h+var_130], r9
                xor     r11d, r11d

loc_140A3B555:                          ; CODE XREF: sub_140A3B2F0+365↓j
                lea     r9, byte_140D58960
                jmp     loc_140A3B46D
; ---------------------------------------------------------------------------

loc_140A3B561:                          ; CODE XREF: sub_140A3B2F0+183↑j
                test    rdi, rdi
                jz      loc_140A3B677
                test    [rdi+0Ch], cl
                jz      loc_140A3B644
                mov     r9d, r14d
                add     r9, r9
                mov     r8, [rdi+r9*8+15h]
                test    r8, r8
                jz      loc_140A3B64F
                mov     edx, [rdi+8]
                lea     eax, [rdx-1]
                test    eax, 0FFFFFFF9h
                jnz     loc_140A7D2FB
                cmp     edx, 5
                jz      loc_140A7D2FB
                mov     r9, [rdi+r9*8+0Dh]
                lea     rcx, [rsp+1B0h+var_170+8]
                mov     word ptr [rsp+1B0h+var_170+0Ah], r11w
                call    RtlCmEncodeMemIoResource
                xor     r8d, r8d
                movsxd  rcx, eax
                test    eax, eax
                js      loc_140A7D304
                movzx   ecx, byte ptr [rsp+1B0h+var_170+8]
                mov     byte ptr [rsp+1B0h+var_170+9], 2
                sub     ecx, ebx
                jnz     loc_140A3B65A
                lea     eax, [rcx+11h]
                mov     [rsp+1B0h+var_174], ebx
                mov     word ptr [rsp+1B0h+var_170+0Ah], ax

loc_140A3B5E2:                          ; CODE XREF: sub_140A3B2F0+37C↓j
                                        ; sub_140A3B2F0+41FED↓j ...
                movups  xmm0, [rsp+1B0h+var_170+8]
                mov     eax, [rsp+1B0h+var_158]
                lea     r9, [rsp+1B0h+var_174]
                mov     r8, qword ptr [rsp+1B0h+var_170+0Ch]
                xor     edx, edx
                mov     dword ptr [rsp+1B0h+var_150+4], eax
                xor     ecx, ecx
                lea     rax, [rbp+0B0h+var_128]
                movups  [rbp+0B0h+var_110], xmm0
                mov     [rsp+1B0h+var_190], rax
                call    HalTranslateBusAddress
                mov     rax, [rbp+0B0h+var_128]
                mov     qword ptr [rbp+0B0h+var_110+4], rax
                cmp     byte ptr [rsp+1B0h+var_170+8], bl
                jnz     short loc_140A3B629
                xor     eax, eax
                cmp     [rsp+1B0h+var_174], eax
                jz      loc_140A7D2F2

loc_140A3B629:                          ; CODE XREF: sub_140A3B2F0+32B↑j
                                        ; sub_140A3B2F0+42006↓j
                movups  xmm0, [rsp+1B0h+var_170+8]
                mov     edx, [rsp+1B0h+var_17C]
                add     r14d, ebx
                mov     r8d, [rsp+1B0h+var_158]
                mov     r10d, dword ptr [rsp+1B0h+var_150+4]
                jmp     loc_140A3B50D
; ---------------------------------------------------------------------------

loc_140A3B644:                          ; CODE XREF: sub_140A3B2F0+27D↑j
                mov     rdi, [rdi]
                mov     r14d, r11d
                jmp     loc_140A3B46D
; ---------------------------------------------------------------------------

loc_140A3B64F:                          ; CODE XREF: sub_140A3B2F0+291↑j
                                        ; sub_140A3B2F0+4200F↓j
                mov     rdi, [rdi]
                mov     r14d, r11d
                jmp     loc_140A3B555
; ---------------------------------------------------------------------------

loc_140A3B65A:                          ; CODE XREF: sub_140A3B2F0+2E0↑j
                sub     ecx, 2
                jnz     loc_140A7D2DA

loc_140A3B663:                          ; CODE XREF: sub_140A3B2F0+41FF3↓j
                mov     [rsp+1B0h+var_174], r8d
                test    byte ptr [rdi+0Ch], 4
                jz      loc_140A3B5E2
                jmp     loc_140A7D2E8
; ---------------------------------------------------------------------------

loc_140A3B677:                          ; CODE XREF: sub_140A3B2F0+274↑j
                mov     r8b, [rsp+1B0h+var_180]
                add     r8b, bl
                mov     [rsp+1B0h+var_180], r8b
                cmp     r8b, 2
                jb      loc_140A3B862
                sub     r15d, esi
                mov     [rsp+1B0h+var_17C], r11d
                mov     [rsp+1B0h+var_138], r15
                mov     r15d, r11d
                cmp     [rsi], r11d
                jbe     loc_140A3B776
                lea     r9, [rsi+4]

loc_140A3B6AB:                          ; CODE XREF: sub_140A3B2F0+47C↓j
                mov     edi, [r9+0Ch]
                lea     r10, [r9+10h]
                add     r12, 10h
                mov     dword ptr [rsp+1B0h+var_150+4], edi
                test    edi, edi
                jz      loc_140A3B758

loc_140A3B6C3:                          ; CODE XREF: sub_140A3B2F0+459↓j
                lea     r8, [rsp+1B0h+var_148]
                mov     rcx, r10
                lea     rdx, [rsp+1B0h+var_170]
                call    sub_140A3B870
                mov     r14, r10
                mov     r13, r12
                cmp     r11d, edi
                jnb     short loc_140A3B73B
                mov     esi, dword ptr [rsp+1B0h+var_148+4]
                mov     r15d, edi
                mov     edi, dword ptr [rsp+1B0h+var_170]
                sub     r15d, r11d

loc_140A3B6EE:                          ; CODE XREF: sub_140A3B2F0+445↓j
                lea     r8, [rsp+1B0h+var_140]
                mov     rcx, r14
                lea     rdx, [rsp+1B0h+var_150]
                call    sub_140A3B870
                cmp     dword ptr [rsp+1B0h+var_150], edi
                jb      loc_140A3B7CF
                jnz     short loc_140A3B72A
                cmp     dword ptr [rsp+1B0h+var_140+4], esi
                jnz     short loc_140A3B724
                mov     eax, dword ptr [rsp+1B0h+var_148]
                cmp     dword ptr [rsp+1B0h+var_140], eax
                jb      loc_140A3B7CF
                cmp     dword ptr [rsp+1B0h+var_140+4], esi

loc_140A3B724:                          ; CODE XREF: sub_140A3B2F0+420↑j
                jl      loc_140A3B7CF

loc_140A3B72A:                          ; CODE XREF: sub_140A3B2F0+41A↑j
                                        ; sub_140A3B2F0+53F↓j
                add     r14, 14h
                add     r13, 14h
                sub     r15, rbx
                jnz     short loc_140A3B6EE
                mov     edi, dword ptr [rsp+1B0h+var_150+4]

loc_140A3B73B:                          ; CODE XREF: sub_140A3B2F0+3EE↑j
                add     r10, 14h
                add     r12, 14h
                add     r11d, ebx
                cmp     r11d, edi
                jb      loc_140A3B6C3
                mov     rsi, [rbp+0B0h+var_F8]
                mov     r15d, [rsp+1B0h+var_17C]

loc_140A3B758:                          ; CODE XREF: sub_140A3B2F0+3CD↑j
                add     r15d, ebx
                mov     r9, r10
                mov     r11d, 0
                mov     [rsp+1B0h+var_17C], r15d
                cmp     r15d, [rsi]
                jb      loc_140A3B6AB
                mov     r13, [rbp+0B0h+var_F0]

loc_140A3B776:                          ; CODE XREF: sub_140A3B2F0+3B1↑j
                mov     r9d, dword ptr [rsp+1B0h+var_138]
                mov     r8, r13
                mov     rcx, [rbp+0B0h+var_E8]
                mov     rdx, rsi
                call    IoReportHalResourceUsage
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag
                xor     edx, edx
                mov     rcx, r13
                call    ExFreePoolWithTag
                mov     rcx, [rbp+0B0h+var_30]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+1B0h+var_20]
                mov     rbx, [r11+38h]
                mov     rsi, [r11+40h]
                mov     rdi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_140A3B7CF:                          ; CODE XREF: sub_140A3B2F0+414↑j
                                        ; sub_140A3B2F0+42A↑j ...
                mov     ecx, [r10+10h]
                lea     r8, [rsp+1B0h+var_148]
                movups  xmm0, xmmword ptr [r14]
                lea     rdx, [rsp+1B0h+var_170]
                movups  xmm1, xmmword ptr [r10]
                movups  xmmword ptr [r10], xmm0
                mov     eax, [r14+10h]
                mov     [r10+10h], eax
                movups  xmmword ptr [r14], xmm1
                mov     [r14+10h], ecx
                mov     ecx, [r12+10h]
                movups  xmm0, xmmword ptr [r13+0]
                movups  xmm1, xmmword ptr [r12]
                movups  xmmword ptr [r12], xmm0
                mov     eax, [r13+10h]
                mov     [r12+10h], eax
                movups  xmmword ptr [r13+0], xmm1
                mov     [r13+10h], ecx
                mov     rcx, r10
                call    sub_140A3B870
                mov     esi, dword ptr [rsp+1B0h+var_148+4]
                mov     edi, dword ptr [rsp+1B0h+var_170]
                jmp     loc_140A3B72A
; ---------------------------------------------------------------------------

loc_140A3B834:                          ; CODE XREF: sub_140A3B2F0+229↑j
                add     [rsi], ebx
                lea     rax, [r15+8]
                add     [r13+0], ebx
                mov     [r15], ecx
                mov     [r9], ecx
                lea     rcx, [r9+8]
                mov     [rbp+0B0h+var_120], r15
                add     r15, 10h
                mov     [rsp+1B0h+var_138], rcx
                add     r9, 10h
                mov     [rbp+0B0h+var_118], rax
                jmp     loc_140A3B528
; ---------------------------------------------------------------------------

loc_140A3B862:                          ; CODE XREF: sub_140A3B2F0+398↑j
                xor     r14d, r14d
                jmp     loc_140A3B44B
; } // starts at 140A3B2F0
sub_140A3B2F0   endp

; ---------------------------------------------------------------------------
algn_140A3B86A:                         ; DATA XREF: .rdata:000000014008DE10↑o
                                        ; .pdata:000000014012CB1C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A3B870   proc near               ; CODE XREF: sub_140A3B2F0+3E0↑p
                                        ; sub_140A3B2F0+40B↑p ...

; FUNCTION CHUNK AT 0000000140A7D348 SIZE 00000015 BYTES

                movzx   r9d, byte ptr [rcx]
                sub     r9d, 1
                jz      short loc_140A3B88C
                sub     r9d, 1
                jnz     short loc_140A3B898
                and     [rdx], r9d
                movzx   eax, word ptr [rcx+4]

loc_140A3B887:                          ; CODE XREF: sub_140A3B870+26↓j
                mov     [r8], rax
                retn
; ---------------------------------------------------------------------------
                align 4

loc_140A3B88C:                          ; CODE XREF: sub_140A3B870+8↑j
                mov     dword ptr [rdx], 1

loc_140A3B892:                          ; CODE XREF: sub_140A3B870+38↓j
                mov     rax, [rcx+4]
                jmp     short loc_140A3B887
; ---------------------------------------------------------------------------

loc_140A3B898:                          ; CODE XREF: sub_140A3B870+E↑j
                sub     r9d, 1
                jnz     loc_140A7D348

loc_140A3B8A2:                          ; CODE XREF: sub_140A3B870+41ADC↓j
                mov     dword ptr [rdx], 2
                jmp     short loc_140A3B892
sub_140A3B870   endp

; ---------------------------------------------------------------------------
algn_140A3B8AA:                         ; DATA XREF: .pdata:000000014012CB28↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_140A3B8B0   proc near               ; CODE XREF: sub_140A54474+246↓p
                                        ; DATA XREF: .rdata:000000014008DE4C↑o ...

var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = dword ptr -0B0h
var_AC          = dword ptr -0ACh
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = xmmword ptr -98h
var_88          = xmmword ptr -88h
var_78          = qword ptr -78h
var_70          = xmmword ptr -70h
var_60          = byte ptr -60h
var_5D          = byte ptr -5Dh
var_5A          = byte ptr -5Ah
var_4A          = word ptr -4Ah
var_46          = byte ptr -46h
var_43          = byte ptr -43h
var_42          = word ptr -42h
var_40          = byte ptr -40h
var_3C          = word ptr -3Ch
var_30          = qword ptr -30h
var_20          = byte ptr -20h

; FUNCTION CHUNK AT 0000000140A7D35E SIZE 000000E2 BYTES

; __unwind { // __GSHandlerCheck
                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-5Fh]
                sub     rsp, 0C0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_30], rax
                and     [rbp+57h+var_A8], 0
                lea     rdx, aSystemResource ; "System Resources"
                xorps   xmm0, xmm0
                mov     [rbp+57h+var_A0], rcx
                mov     rbx, rcx
                xorps   xmm1, xmm1
                lea     rcx, [rbp+57h+var_70]
                movups  [rbp+57h+var_88], xmm0
                movups  [rbp+57h+var_70], xmm1
                movups  [rbp+57h+var_98], xmm0
                call    RtlInitUnicodeString
                xor     r14d, r14d
                mov     edi, 0FFFFF000h
                mov     [rbp+57h+var_B0], r14d
                mov     r15, 0FFFFFFFF00000FFFh
                mov     r12, 0FFFFFFFF00001000h

loc_140A3B92F:                          ; CODE XREF: sub_140A3B8B0+29E↓j
                lea     rcx, [rbp+57h+var_88]
                mov     eax, r14d
                test    r14d, r14d
                jz      loc_140A3BBDC
                cmp     eax, 1
                jz      loc_140A3BB82
                lea     rdx, aLoaderReserved ; "Loader Reserved"
                call    RtlInitUnicodeString
                lea     rdx, aRaw       ; ".Raw"
                lea     rcx, [rbp+57h+var_98]
                call    RtlInitUnicodeString
                xor     ecx, ecx
                xor     eax, eax

loc_140A3B968:                          ; CODE XREF: sub_140A3B8B0+CF↓j
                cmp     rax, 29h ; ')'
                jnb     loc_140A3BC04
                mov     [rbp+rax+57h+var_60], 0
                inc     ecx
                inc     rax
                cmp     ecx, 29h ; ')'
                jb      short loc_140A3B968
                lea     rdx, [rbp+57h+var_60]
                mov     [rbp+57h+var_5D], 1
                mov     rcx, rbx
                mov     [rbp+57h+var_42], 101h
                mov     [rbp+57h+var_5A], 1
                mov     [rbp+57h+var_40], 1
                mov     [rbp+57h+var_3C], 101h
                mov     [rbp+57h+var_4A], 101h
                mov     [rbp+57h+var_46], 1
                mov     [rbp+57h+var_43], 1
                call    sub_140A3BC10
                mov     rsi, rax
                test    rax, rax
                jz      loc_140A3BB54

loc_140A3B9BF:                          ; CODE XREF: sub_140A3B8B0+321↓j
                                        ; sub_140A3B8B0+34F↓j
                mov     eax, [rsi]
                test    eax, eax
                jz      loc_140A7D35E
                xor     ebx, ebx
                test    eax, eax
                jz      short loc_140A3B9FF
                lea     r9, [rsi+18h]
                mov     r10d, eax

loc_140A3B9D6:                          ; CODE XREF: sub_140A3B8B0+14D↓j
                mov     r8, [r9]
                shl     r8, 0Ch
                mov     rcx, r8
                shr     rcx, 8
                mov     ecx, ecx
                shl     rcx, 8
                cmp     r8, rcx
                jnz     loc_140A7D377

loc_140A3B9F3:                          ; CODE XREF: sub_140A3B8B0+41AD7↓j
                                        ; sub_140A3B8B0+41AF0↓j ...
                inc     ebx

loc_140A3B9F5:                          ; CODE XREF: sub_140A3B8B0+41B1C↓j
                add     r9, 10h
                sub     r10, 1
                jnz     short loc_140A3B9D6

loc_140A3B9FF:                          ; CODE XREF: sub_140A3B8B0+11D↑j
                lea     eax, [rbx+1]
                mov     r8d, 20207050h
                lea     r15d, [rax+rax*4]
                mov     ecx, 1
                shl     r15d, 2
                mov     edx, r15d
                mov     [rbp+57h+var_AC], r15d
                mov     edi, r15d
                call    ExAllocatePoolWithTag
                mov     [rbp+57h+var_78], rax
                mov     r12, rax
                test    rax, rax
                jz      loc_140A7D427
                mov     r8d, edi
                xor     edx, edx
                mov     rcx, rax
                call    memset
                xor     r13d, r13d
                mov     dword ptr [r12], 1
                mov     [r12+10h], ebx
                lea     rdi, [r12+14h]
                cmp     [rsi], r13d
                jbe     short loc_140A3BABB
                mov     r12, 0FFFFFFFF00000FFFh
                mov     r14, 0FFFFFFFF00001000h

loc_140A3BA6F:                          ; CODE XREF: sub_140A3B8B0+1FD↓j
                mov     ebx, r13d
                mov     dl, 3
                add     rbx, rbx
                mov     rcx, rdi
                mov     r15, [rsi+rbx*8+18h]
                mov     rbx, [rsi+rbx*8+10h]
                shl     rbx, 0Ch
                shl     r15, 0Ch
                mov     r9, rbx
                mov     r8, r15
                call    RtlCmEncodeMemIoResource
                test    eax, eax
                js      loc_140A7D3D1
                mov     byte ptr [rdi+1], 1

loc_140A3BAA3:                          ; CODE XREF: sub_140A3B8B0+41B72↓j
                add     rdi, 14h

loc_140A3BAA7:                          ; CODE XREF: sub_140A3B8B0+41B5F↓j
                inc     r13d
                cmp     r13d, [rsi]
                jb      short loc_140A3BA6F
                mov     r14d, [rbp+57h+var_B0]
                mov     r12, [rbp+57h+var_78]
                mov     r15d, [rbp+57h+var_AC]

loc_140A3BABB:                          ; CODE XREF: sub_140A3B8B0+1A9↑j
                and     [rsp+0E0h+var_B8], 0
                lea     r8, unk_140D2EC00
                mov     r9d, 2001Fh
                mov     dword ptr [rsp+0E0h+var_C0], 1
                xor     edx, edx
                lea     rcx, [rbp+57h+var_A8]
                call    sub_14073B9B0
                test    eax, eax
                js      short loc_140A3BB0D
                mov     rcx, [rbp+57h+var_A8]
                lea     r9, [rbp+57h+var_98]
                mov     dword ptr [rsp+0E0h+var_B8], r15d
                lea     r8, [rbp+57h+var_88]
                lea     rdx, [rbp+57h+var_70]
                mov     [rsp+0E0h+var_C0], r12
                call    sub_14074EAAC
                mov     rcx, [rbp+57h+var_A8]
                call    ZwClose

loc_140A3BB0D:                          ; CODE XREF: sub_140A3B8B0+233↑j
                xor     edx, edx
                mov     rcx, r12
                call    ExFreePoolWithTag
                test    r14d, r14d
                jz      short loc_140A3BB26
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_140A3BB26:                          ; CODE XREF: sub_140A3B8B0+26A↑j
                mov     rbx, [rbp+57h+var_A0]
                mov     r12, 0FFFFFFFF00001000h
                mov     r15, 0FFFFFFFF00000FFFh
                mov     edi, 0FFFFF000h

loc_140A3BB43:                          ; CODE XREF: sub_140A3B8B0+327↓j
                                        ; sub_140A3B8B0+41AB1↓j ...
                inc     r14d
                mov     [rbp+57h+var_B0], r14d
                cmp     r14d, 3
                jb      loc_140A3B92F

loc_140A3BB54:                          ; CODE XREF: sub_140A3B8B0+109↑j
                                        ; sub_140A3B8B0+41B7A↓j ...
                mov     rcx, [rbp+57h+var_30]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+0E0h+var_20]
                mov     rbx, [r11+38h]
                mov     rsi, [r11+40h]
                mov     rdi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 2

loc_140A3BB82:                          ; CODE XREF: sub_140A3B8B0+92↑j
                lea     rdx, aReserved  ; "Reserved"
                call    RtlInitUnicodeString
                lea     rdx, aTranslated ; ".Translated"
                lea     rcx, [rbp+57h+var_98]
                call    RtlInitUnicodeString
                xor     ecx, ecx
                xor     eax, eax

loc_140A3BBA2:                          ; CODE XREF: sub_140A3B8B0+305↓j
                cmp     rax, 29h ; ')'
                jnb     short loc_140A3BC04
                mov     [rbp+rax+57h+var_60], 0
                inc     ecx
                inc     rax
                cmp     ecx, 29h ; ')'
                jb      short loc_140A3BBA2
                lea     rdx, [rbp+57h+var_60]
                mov     byte ptr [rbp+57h+var_4A], 1
                mov     rcx, rbx
                mov     [rbp+57h+var_46], 1
                call    sub_140A3BC10
                mov     rsi, rax
                test    rax, rax
                jnz     loc_140A3B9BF
                jmp     loc_140A3BB43
; ---------------------------------------------------------------------------

loc_140A3BBDC:                          ; CODE XREF: sub_140A3B8B0+89↑j
                lea     rdx, aPhysicalMemory ; "Physical Memory"
                call    RtlInitUnicodeString
                lea     rdx, aTranslated ; ".Translated"
                lea     rcx, [rbp+57h+var_98]
                call    RtlInitUnicodeString
                mov     rsi, cs:qword_140CFC4A8
                jmp     loc_140A3B9BF
; ---------------------------------------------------------------------------

loc_140A3BC04:                          ; CODE XREF: sub_140A3B8B0+BC↑j
                                        ; sub_140A3B8B0+2F6↑j
                call    sub_1404B63DC
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 140A3B8B0
sub_140A3B8B0   endp

algn_140A3BC0A:                         ; DATA XREF: .rdata:000000014008DE4C↑o
                                        ; .pdata:000000014012CB34↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_140A3BC10   proc near               ; CODE XREF: sub_140A3B8B0+FE↑p
                                        ; sub_140A3B8B0+316↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

; FUNCTION CHUNK AT 0000000140A7D440 SIZE 0000000F BYTES

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 20h
                lea     r14, [rcx+20h]
                xor     esi, esi
                mov     rax, [r14]
                mov     r15, rdx
                cmp     rax, r14
                jz      loc_140A3BD5C

loc_140A3BC3D:                          ; CODE XREF: sub_140A3BC10+37↓j
                mov     rax, [rax]
                mov     ecx, esi
                inc     esi
                cmp     rax, r14
                jnz     short loc_140A3BC3D
                test    esi, esi
                jz      loc_140A3BD5C
                lea     rdx, [rcx+2]
                mov     r8d, 6C4D6D4Dh
                shl     rdx, 4
                mov     ecx, 40h ; '@'
                call    sub_140268720
                mov     rbx, rax
                test    rax, rax
                jz      loc_140A3BD5C
                mov     [rax], esi
                xor     edi, edi
                mov     rdx, [r14]
                xor     ebp, ebp
                or      r8, 0FFFFFFFFFFFFFFFFh
                cmp     rdx, r14
                jz      loc_140A7D440

loc_140A3BC8B:                          ; CODE XREF: sub_140A3BC10+91↓j
                movsxd  rax, dword ptr [rdx+10h]
                cmp     eax, 29h ; ')'
                jge     short loc_140A3BC9B
                cmp     byte ptr [rax+r15], 0
                jnz     short loc_140A3BD16

loc_140A3BC9B:                          ; CODE XREF: sub_140A3BC10+82↑j
                                        ; sub_140A3BC10+129↓j ...
                mov     rdx, [rdx]
                cmp     rdx, r14
                jnz     short loc_140A3BC8B
                test    edi, edi
                jz      loc_140A7D440
                cmp     esi, edi
                jbe     short loc_140A3BCF3
                lea     edx, [rdi-1]
                mov     ecx, 40h ; '@'
                add     rdx, 2
                mov     r8d, 6C4D6D4Dh
                shl     rdx, 4
                call    sub_140268720
                mov     rsi, rax
                test    rax, rax
                jz      short loc_140A3BCF3
                mov     r8d, edi
                lea     rdx, [rbx+10h]
                shl     r8, 4
                lea     rcx, [rax+10h]
                call    memmove
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag
                mov     rbx, rsi

loc_140A3BCF3:                          ; CODE XREF: sub_140A3BC10+9D↑j
                                        ; sub_140A3BC10+C0↑j ...
                mov     [rbx], edi
                mov     rax, rbx
                mov     [rbx+8], rbp

loc_140A3BCFC:                          ; CODE XREF: sub_140A3BC10+14E↓j
                mov     rbx, [rsp+38h+arg_0]
                mov     rbp, [rsp+38h+arg_8]
                mov     rsi, [rsp+38h+arg_10]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                align 2

loc_140A3BD16:                          ; CODE XREF: sub_140A3BC10+89↑j
                mov     r10, [rdx+20h]
                mov     r9, [rdx+18h]
                add     rbp, r10
                cmp     r9, r8
                jnz     short loc_140A3BD3E
                test    edi, edi
                jz      short loc_140A3BD3E
                lea     ecx, [rdi-1]
                add     rcx, rcx
                add     [rbx+rcx*8+18h], r10
                add     r8, [rdx+20h]
                jmp     loc_140A3BC9B
; ---------------------------------------------------------------------------

loc_140A3BD3E:                          ; CODE XREF: sub_140A3BC10+114↑j
                                        ; sub_140A3BC10+118↑j
                mov     ecx, edi
                add     rcx, rcx
                inc     edi
                mov     [rbx+rcx*8+10h], r9
                mov     rax, [rdx+20h]
                mov     [rbx+rcx*8+18h], rax
                lea     r8, [rax+r9]
                jmp     loc_140A3BC9B
; ---------------------------------------------------------------------------

loc_140A3BD5C:                          ; CODE XREF: sub_140A3BC10+27↑j
                                        ; sub_140A3BC10+3B↑j ...
                xor     eax, eax
                jmp     short loc_140A3BCFC
sub_140A3BC10   endp

; ---------------------------------------------------------------------------
byte_140A3BD60  db 10h dup(0CCh)        ; DATA XREF: .rdata:000000014008DE78↑o
                                        ; .pdata:000000014012CB40↑o
; Exported entry 957. IoReportHalResourceUsage

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

