ntoskrnl_15     proc near               ; DATA XREF: .pdata:000000014011D180↑o

var_38          = dword ptr -38h
var_30          = byte ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = qword ptr  28h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r14
                sub     rsp, 50h
                and     qword ptr [rax-18h], 0
                mov     ebx, edx
                mov     dl, 1
                mov     esi, r9d
                mov     rbp, r8
                mov     r14, rcx
                test    dl, bl
                jz      short loc_1408A2646
                mov     edi, 11h
                jmp     short loc_1408A2654
; ---------------------------------------------------------------------------

loc_1408A2646:                          ; CODE XREF: ntoskrnl_15+2D↑j
                test    bl, 2
                jz      loc_1408A26F8
                mov     edi, 12h

loc_1408A2654:                          ; CODE XREF: ntoskrnl_15+34↑j
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                lea     rcx, unk_140C44D40
                call    ExAcquireResourceExclusiveLite
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rsp+58h+var_18]
                mov     r8d, edi
                mov     rdx, r14
                bts     r8d, 9
                and     bl, 4
                cmovz   r8d, edi
                and     [rsp+58h+var_20], 0
                mov     [rsp+58h+var_28], rax
                xor     r9d, r9d
                mov     [rsp+58h+var_30], 0
                mov     [rsp+58h+var_38], 20019h
                call    sub_14062C9F8
                lea     rcx, unk_140C44D40
                mov     ebx, eax
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                test    ebx, ebx
                jns     short loc_1408A26D2

loc_1408A26CE:                          ; CODE XREF: ntoskrnl_15+E6↓j
                mov     eax, ebx
                jmp     short loc_1408A26FD
; ---------------------------------------------------------------------------

loc_1408A26D2:                          ; CODE XREF: ntoskrnl_15+BC↑j
                mov     r9, [rsp+58h+arg_20]
                mov     r8d, esi
                mov     rcx, [rsp+58h+var_18]
                mov     rdx, rbp
                call    sub_140739D08
                mov     rcx, [rsp+58h+var_18]
                mov     ebx, eax
                call    ZwClose
                jmp     short loc_1408A26CE
; ---------------------------------------------------------------------------

loc_1408A26F8:                          ; CODE XREF: ntoskrnl_15+39↑j
                mov     eax, 0C000000Dh

loc_1408A26FD:                          ; CODE XREF: ntoskrnl_15+C0↑j
                mov     rbx, [rsp+58h+arg_0]
                mov     rbp, [rsp+58h+arg_8]
                mov     rsi, [rsp+58h+arg_10]
                mov     rdi, [rsp+58h+arg_18]
                add     rsp, 50h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
ntoskrnl_15     endp

algn_1408A2719:                         ; DATA XREF: .pdata:000000014011D180↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A2720   proc near               ; CODE XREF: sub_1407B624C+5E8↑p
                                        ; sub_1407C7984+4E↑p ...
                sub     rsp, 28h
                mov     dl, 1
                call    sub_1407C8950
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2720   endp

algn_1408A2731:                         ; DATA XREF: .pdata:000000014011D18C↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408A2738   proc near               ; CODE XREF: sub_1407B624C+A4B3C↑p
                                        ; sub_1407C7984+987D6↑p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                xor     edx, edx
                call    sub_1407C8950
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2738   endp

algn_1408A2749:                         ; DATA XREF: .pdata:000000014011D198↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A2750   proc near               ; DATA XREF: .pdata:000000014011D1A4↑o
                                        ; sub_1408A2A00+32↓o

var_80          = qword ptr -80h
var_70          = dword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = qword ptr -50h
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_10          = byte ptr -10h

; __unwind { // __GSHandlerCheck
                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], rdi
                push    rbp
                push    r14
                push    r15
                lea     rbp, [rax-5Fh]
                sub     rsp, 90h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_20], rax
                and     [rbp+57h+var_68], 0
                mov     r15, rcx
                and     [rbp+57h+var_70], 0
                mov     rbx, [rcx+1A8h]
                test    rbx, rbx
                jz      loc_1408A2866
                xor     edi, edi
                cmp     [rbx], edi
                jbe     loc_1408A2866

loc_1408A27A3:                          ; CODE XREF: sub_1408A2750+110↓j
                lea     rcx, [rdi+rdi*8]
                xor     esi, esi
                lea     r14, [rbx+rcx*4]
                cmp     [r14+10h], esi
                jbe     loc_1408A285C

loc_1408A27B7:                          ; CODE XREF: sub_1408A2750+106↓j
                lea     rcx, [rsi+rsi*4]
                cmp     byte ptr [r14+rcx*4+14h], 84h
                jnz     loc_1408A2850
                mov     eax, [r14+rcx*4+20h]
                lea     rdx, qword_14002DE80
                mov     dword ptr [rbp+57h+var_68+4], eax
                mov     r9d, 4
                mov     eax, [r14+rcx*4+1Ch]
                xor     r8d, r8d
                movzx   ecx, word ptr [r15+28h]
                and     [rbp+57h+var_54], 0
                and     [rbp+57h+var_44], 0
                and     [rbp+57h+var_34], 0
                and     [rbp+57h+var_24], 0
                mov     dword ptr [rbp+57h+var_68], eax
                lea     rax, [r15+20h]
                mov     [rbp+57h+var_60], rax
                lea     rax, [rbp+57h+var_68]
                mov     [rbp+57h+var_50], rax
                mov     eax, ecx
                shr     eax, 1
                mov     [rbp+57h+var_70], eax
                lea     rax, [rbp+57h+var_70]
                mov     [rbp+57h+var_40], rax
                mov     rax, [r15+30h]
                mov     [rbp+57h+var_30], rax
                lea     rax, [rbp+57h+var_60]
                mov     [rbp+57h+var_28], ecx
                mov     rcx, cs:qword_140CF4368
                mov     [rsp+0A0h+var_80], rax
                mov     [rbp+57h+var_58], 8
                mov     [rbp+57h+var_48], 8
                mov     [rbp+57h+var_38], 4
                call    EtwWrite

loc_1408A2850:                          ; CODE XREF: sub_1408A2750+71↑j
                inc     esi
                cmp     esi, [r14+10h]
                jb      loc_1408A27B7

loc_1408A285C:                          ; CODE XREF: sub_1408A2750+61↑j
                inc     edi
                cmp     edi, [rbx]
                jb      loc_1408A27A3

loc_1408A2866:                          ; CODE XREF: sub_1408A2750+43↑j
                                        ; sub_1408A2750+4D↑j
                xor     eax, eax
                mov     rcx, [rbp+57h+var_20]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+0A0h+var_10]
                mov     rbx, [r11+20h]
                mov     rsi, [r11+28h]
                mov     rdi, [r11+30h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A2750
sub_1408A2750   endp

algn_1408A2892:                         ; DATA XREF: .pdata:000000014011D1A4↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A28A0   proc near               ; DATA XREF: .pdata:000000014011D1B0↑o
                                        ; sub_1408A2A00+A8↓o

var_70          = qword ptr -70h
var_60          = dword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
arg_0           = qword ptr  10h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_0], rcx
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 90h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                mov     [rbp+57h+var_48], 8
                lea     rax, [rbp+57h+arg_0]
                mov     [rbp+57h+var_50], rax
                mov     rdx, rcx
                mov     rax, [rcx+10h]
                xor     r8d, r8d
                mov     [rbp+57h+var_58], rax
                lea     rax, [rbp+57h+var_58]
                mov     [rbp+57h+var_40], rax
                mov     [rbp+57h+var_38], 8
                movzx   eax, word ptr [rcx+28h]
                lea     r9d, [r8+4]
                shr     eax, 1
                mov     [rbp+57h+var_60], eax
                lea     rax, [rbp+57h+var_60]
                mov     [rbp+57h+var_30], rax
                mov     [rbp+57h+var_28], r9
                mov     rax, [rdx+30h]
                lea     rdx, qword_140033D10
                movzx   ecx, word ptr [rcx+28h]
                mov     [rbp+57h+var_20], rax
                lea     rax, [rbp+57h+var_50]
                mov     [rbp+57h+var_18], ecx
                mov     rcx, cs:qword_140CF4368
                mov     [rsp+90h+var_70], rax
                mov     [rbp+57h+var_14], r8d
                call    EtwWrite
                xor     eax, eax
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 90h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A28A0
sub_1408A28A0   endp

algn_1408A294E:                         ; DATA XREF: .pdata:000000014011D1B0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A2960   proc near               ; DATA XREF: .pdata:000000014011D1BC↑o
                                        ; sub_1408A2A00+6D↓o

var_48          = qword ptr -48h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind { // __GSHandlerCheck
                sub     rsp, 68h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+68h+var_10], rax
                xor     edx, edx
                cmp     [rcx+50h], rdx
                jnz     short loc_1408A29DC
                lea     rax, [rcx+20h]
                mov     [rsp+68h+var_28], 8
                mov     [rsp+68h+var_30], rax
                mov     rax, [rcx+10h]
                test    rax, rax
                jnz     short loc_1408A299A
                mov     eax, edx
                jmp     short loc_1408A299E
; ---------------------------------------------------------------------------

loc_1408A299A:                          ; CODE XREF: sub_1408A2960+34↑j
                mov     rax, [rax+20h]

loc_1408A299E:                          ; CODE XREF: sub_1408A2960+38↑j
                mov     rcx, cs:qword_140CF4368
                lea     rdx, qword_140033F50
                mov     [rsp+68h+var_38], rax
                mov     r9d, 2
                lea     rax, [rsp+68h+var_38]
                mov     [rsp+68h+var_18], 8
                mov     [rsp+68h+var_20], rax
                xor     r8d, r8d
                lea     rax, [rsp+68h+var_30]
                mov     [rsp+68h+var_48], rax
                call    EtwWrite

loc_1408A29DC:                          ; CODE XREF: sub_1408A2960+19↑j
                xor     eax, eax
                mov     rcx, [rsp+68h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 68h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A2960
sub_1408A2960   endp

algn_1408A29F1:                         ; DATA XREF: .pdata:000000014011D1BC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A2A00   proc near               ; DATA XREF: .pdata:000000014011D1C8↑o
                                        ; sub_140A554F8+35↓o
                sub     rsp, 28h
                cmp     edx, 2
                jnz     loc_1408A2ABE
                mov     rcx, cs:qword_140CF4368
                lea     rdx, qword_14002DE80
                call    EtwEventEnabled
                test    al, al
                jz      short loc_1408A2A48
                xor     ecx, ecx
                call    sub_14067926C
                mov     rcx, cs:qword_140C44D00
                lea     rdx, sub_1408A2750
                xor     r8d, r8d
                call    sub_140719A30
                xor     ecx, ecx
                call    sub_140679140

loc_1408A2A48:                          ; CODE XREF: sub_1408A2A00+22↑j
                mov     rcx, cs:qword_140CF4368
                lea     rdx, qword_140033F50
                call    EtwEventEnabled
                test    al, al
                jz      short loc_1408A2A83
                xor     ecx, ecx
                call    sub_14067926C
                mov     rcx, cs:qword_140C44D00
                lea     rdx, sub_1408A2960
                xor     r8d, r8d
                call    sub_140719A30
                xor     ecx, ecx
                call    sub_140679140

loc_1408A2A83:                          ; CODE XREF: sub_1408A2A00+5D↑j
                mov     rcx, cs:qword_140CF4368
                lea     rdx, qword_140033D10
                call    EtwEventEnabled
                test    al, al
                jz      short loc_1408A2ABE
                xor     ecx, ecx
                call    sub_14067926C
                mov     rcx, cs:qword_140C44D00
                lea     rdx, sub_1408A28A0
                xor     r8d, r8d
                call    sub_140719A30
                xor     ecx, ecx
                call    sub_140679140

loc_1408A2ABE:                          ; CODE XREF: sub_1408A2A00+7↑j
                                        ; sub_1408A2A00+98↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2A00   endp

byte_1408A2AC4  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D1C8↑o

; =============== S U B R O U T I N E =======================================


sub_1408A2ACC   proc near               ; CODE XREF: sub_14050D080+39↑p
                                        ; sub_14050D080+9D↑p
                                        ; DATA XREF: ...

var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r14
                sub     rsp, 40h
                xorps   xmm0, xmm0
                xor     edi, edi
                mov     r14, rcx
                mov     rsi, r8
                movups  xmmword ptr [rax-28h], xmm0
                xor     ecx, ecx
                mov     rbp, rdx
                movups  xmmword ptr [rax-18h], xmm0
                jmp     short loc_1408A2B4D
; ---------------------------------------------------------------------------

loc_1408A2AFF:                          ; CODE XREF: sub_1408A2ACC+8C↓j
                mov     rcx, rbx
                call    sub_140639CB4
                test    rax, rax
                jz      short loc_1408A2B4A
                xor     r9d, r9d
                mov     [rsp+48h+var_28], r14
                lea     r8, [rsp+48h+var_28]
                mov     [rsp+48h+var_20], rbx
                lea     rdx, sub_1408A2B90
                mov     [rsp+48h+var_18], rbp
                mov     rcx, rax
                mov     [rsp+48h+var_10], rsi
                call    ExEnumHandleTable
                lea     rcx, [rbx+458h]
                movzx   edi, al
                call    sub_14024C380
                test    edi, edi
                jnz     short loc_1408A2B5C

loc_1408A2B4A:                          ; CODE XREF: sub_1408A2ACC+3E↑j
                mov     rcx, rbx

loc_1408A2B4D:                          ; CODE XREF: sub_1408A2ACC+31↑j
                call    sub_1405F73C0
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1408A2AFF
                jmp     short loc_1408A2B69
; ---------------------------------------------------------------------------

loc_1408A2B5C:                          ; CODE XREF: sub_1408A2ACC+7C↑j
                mov     edx, 6E457350h
                mov     rcx, rbx
                call    ObfDereferenceObjectWithTag

loc_1408A2B69:                          ; CODE XREF: sub_1408A2ACC+8E↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     eax, edi
                mov     rdi, [rsp+48h+arg_18]
                mov     rbp, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 40h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2ACC   endp

algn_1408A2B87:                         ; DATA XREF: .pdata:000000014011D1D4↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A2B90   proc near               ; DATA XREF: .pdata:000000014011D1E0↑o
                                        ; sub_1408A2ACC+52↑o

var_48          = dword ptr -48h
var_28          = qword ptr -28h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 30h
                mov     r11, [rdx]
                mov     r14, rcx
                sar     r11, 10h
                lea     rcx, qword_140CFCE60
                and     r11, 0FFFFFFFFFFFFFFF0h
                mov     rbx, r9
                mov     rax, r11
                mov     r15, r8
                shr     rax, 8
                mov     rdi, rdx
                movzx   r10d, al
                movzx   eax, byte ptr [r11+18h]
                xor     r10, rax
                movzx   eax, byte ptr cs:dword_140CFC728
                xor     r10, rax
                mov     rax, cs:IoFileObjectType
                cmp     [rcx+r10*8], rax
                jz      short loc_1408A2BF4

loc_1408A2BF0:                          ; CODE XREF: sub_1408A2B90+76↓j
                xor     bl, bl
                jmp     short loc_1408A2C29
; ---------------------------------------------------------------------------

loc_1408A2BF4:                          ; CODE XREF: sub_1408A2B90+5E↑j
                mov     rbp, [r9]
                lea     rsi, [r11+30h]
                mov     rcx, rsi
                call    IoGetBaseFileSystemDeviceObject
                cmp     rax, rbp
                jnz     short loc_1408A2BF0
                mov     rdx, [rbx+18h]
                mov     r9, r15
                mov     rax, [rbx+10h]
                mov     r8, rsi
                mov     [rsp+48h+var_28], rdx
                mov     rcx, rbp
                mov     rdx, [rbx+8]
                call    sub_1404079D0
                mov     ebx, eax

loc_1408A2C29:                          ; CODE XREF: sub_1408A2B90+62↑j
                mov     ecx, 1
                lock xadd [rdi], rcx
                lea     rcx, [r14+30h]
                lock or [rsp+48h+var_48], 0
                cmp     qword ptr [rcx], 0
                jz      short loc_1408A2C49
                xor     edx, edx
                call    ExfUnblockPushLock

loc_1408A2C49:                          ; CODE XREF: sub_1408A2B90+B0↑j
                mov     rbp, [rsp+48h+arg_8]
                mov     al, bl
                mov     rbx, [rsp+48h+arg_0]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2B90   endp

byte_1408A2C65  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D1E0↑o

; =============== S U B R O U T I N E =======================================


sub_1408A2C6C   proc near               ; CODE XREF: sub_14050D710+33↑p
                                        ; sub_14050D710+194↑p
                                        ; DATA XREF: ...

var_18          = qword ptr -18h

                sub     rsp, 38h
                add     rcx, 0A8h
                xor     r8d, r8d
                test    dl, dl
                jz      short loc_1408A2C9F
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                and     [rsp+38h+var_18], r8
                xor     r9d, r9d
                xor     edx, edx
                call    KeWaitForSingleObject
                jmp     short loc_1408A2CB4
; ---------------------------------------------------------------------------

loc_1408A2C9F:                          ; CODE XREF: sub_1408A2C6C+10↑j
                xor     edx, edx
                call    KeSetEvent
                mov     rcx, gs:188h
                call    sub_14021E1F0

loc_1408A2CB4:                          ; CODE XREF: sub_1408A2C6C+31↑j
                add     rsp, 38h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2C6C   endp

algn_1408A2CBA:                         ; DATA XREF: .pdata:000000014011D1EC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A2CC0   proc near               ; CODE XREF: sub_140760ADC+E1D3C↑p
                                        ; DATA XREF: .pdata:000000014011D1F8↑o

arg_0           = byte ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rbp
                mov     [rax+20h], rsi
                push    rdi
                sub     rsp, 20h
                cmp     dword ptr [rcx], 1
                mov     rbp, rdx
                mov     rdi, rcx
                mov     byte ptr [rax+8], 0
                jnz     loc_1408A2DFA
                mov     eax, [rcx+8]
                test    eax, eax
                jz      short loc_1408A2CF7
                cmp     eax, 3
                jnz     loc_1408A2DFA

loc_1408A2CF7:                          ; CODE XREF: sub_1408A2CC0+2C↑j
                mov     esi, [rcx+0Ch]
                mov     ecx, esi
                call    sub_14050D508
                test    rax, rax
                jz      short loc_1408A2D0D
                xor     edi, edi
                jmp     loc_1408A2DFF
; ---------------------------------------------------------------------------

loc_1408A2D0D:                          ; CODE XREF: sub_1408A2CC0+44↑j
                mov     edx, 0C8h
                mov     ecx, 200h
                mov     r8d, 6269704Bh
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1408A2D34
                mov     edi, 0C000009Ah
                jmp     loc_1408A2DFF
; ---------------------------------------------------------------------------

loc_1408A2D34:                          ; CODE XREF: sub_1408A2CC0+68↑j
                lea     rcx, [rax+10h]
                xor     edx, edx
                mov     r8d, 0B8h
                call    memset
                mov     [rbx+8], rbx
                mov     [rbx], rbx
                mov     eax, [rdi+8]
                mov     [rbx+10h], eax
                mov     [rbx+14h], esi
                mov     eax, [rdi+18h]
                mov     [rbx+20h], eax
                movups  xmm0, xmmword ptr [rbp+0]
                movdqu  xmmword ptr [rbx+28h], xmm0
                mov     eax, [rdi+8]
                test    eax, eax
                jnz     short loc_1408A2D84
                mov     edx, [rdi+40h]
                xor     ecx, ecx
                mov     [rbx+18h], edx
                mov     rax, cs:off_140C00780
                call    sub_1404079D0
                mov     [rbx+1Ch], al
                jmp     short loc_1408A2D8D
; ---------------------------------------------------------------------------

loc_1408A2D84:                          ; CODE XREF: sub_1408A2CC0+A9↑j
                cmp     eax, 3
                jnz     short loc_1408A2D8D
                mov     byte ptr [rbx+1Ch], 0

loc_1408A2D8D:                          ; CODE XREF: sub_1408A2CC0+C2↑j
                                        ; sub_1408A2CC0+C7↑j
                lea     rcx, [rbx+0A8h]
                mov     r8b, 1
                mov     edx, 1
                call    KeInitializeEvent
                lea     rcx, [rbx+68h]
                mov     r8, rbx
                lea     rdx, sub_14050D6F0
                call    KeInitializeDpc
                and     qword ptr [rbx+38h], 0
                lea     rax, sub_14050D710
                and     qword ptr [rbx+48h], 0
                lea     rdx, [rsp+28h+arg_0]
                mov     [rbx+58h], rax
                mov     rcx, rbx
                mov     [rbx+60h], rbx
                mov     byte ptr [rbx+69h], 2
                call    sub_14050D5F4
                mov     edi, eax
                test    eax, eax
                js      short loc_1408A2DEB
                cmp     [rsp+28h+arg_0], 0
                jnz     short loc_1408A2DFF

loc_1408A2DEB:                          ; CODE XREF: sub_1408A2CC0+122↑j
                mov     edx, 6269704Bh
                mov     rcx, rbx
                call    ExFreePoolWithTag
                jmp     short loc_1408A2DFF
; ---------------------------------------------------------------------------

loc_1408A2DFA:                          ; CODE XREF: sub_1408A2CC0+21↑j
                                        ; sub_1408A2CC0+31↑j
                mov     edi, 0C00000EFh

loc_1408A2DFF:                          ; CODE XREF: sub_1408A2CC0+48↑j
                                        ; sub_1408A2CC0+6F↑j ...
                mov     rbx, [rsp+28h+arg_8]
                mov     eax, edi
                mov     rbp, [rsp+28h+arg_10]
                mov     rsi, [rsp+28h+arg_18]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2CC0   endp

algn_1408A2E17:                         ; DATA XREF: .pdata:000000014011D1F8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A2E20   proc near               ; CODE XREF: IoDisconnectInterrupt+E21D7↑p
                                        ; sub_140760ADC+E1D58↑p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                call    sub_14050D508
                test    rax, rax
                jz      short loc_1408A2E3D
                lock dec dword ptr [rax+0C0h]
                mov     rcx, rax
                call    sub_14050D390

loc_1408A2E3D:                          ; CODE XREF: sub_1408A2E20+C↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2E20   endp

algn_1408A2E43:                         ; DATA XREF: .pdata:000000014011D204↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A2E50   proc near               ; DATA XREF: .pdata:000000014011D210↑o
                                        ; sub_14077B448+D34BF↑o

var_50          = dword ptr -50h
var_48          = dword ptr -48h
var_40          = xmmword ptr -40h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = xmmword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = byte ptr  20h
arg_18          = qword ptr  28h

                mov     [rsp-8+arg_8], rbx
                mov     [rsp-8+arg_18], rdi
                push    rbp
                mov     rbp, rsp
                sub     rsp, 70h
                and     [rbp+var_2C], 0
                xorps   xmm0, xmm0
                and     [rbp+var_14], 0
                mov     edi, r8d
                and     [rbp+arg_0], 0
                mov     rbx, rcx
                movups  [rbp+var_40], xmm0
                call    sub_1408B5A9C
                and     [rbp+var_28], 0
                lea     r9, [rbp+var_40]
                xorps   xmm0, xmm0
                mov     [rbp+var_30], 30h ; '0'
                and     dil, 10h
                mov     [rbp+var_18], 40h ; '@'
                neg     dil
                mov     [rbp+var_20], rbx
                lea     r8, [rbp+var_30]
                mov     edx, 10080h
                sbb     eax, eax
                lea     rcx, [rbp+arg_0]
                and     eax, 0FFFFFFC1h
                add     eax, 204040h
                mov     [rsp+70h+var_48], eax
                mov     [rsp+70h+var_50], 7
                movdqu  [rbp+var_10], xmm0
                call    ZwOpenFile
                test    eax, eax
                js      short loc_1408A2F05
                mov     rcx, [rbp+arg_0]
                lea     r8, [rbp+arg_10]
                mov     r9d, 1
                mov     [rbp+arg_10], 1
                lea     rdx, [rbp+var_40]
                mov     [rsp+70h+var_50], 0Dh
                call    ZwSetInformationFile
                mov     rcx, [rbp+arg_0]
                call    ZwClose
                xor     eax, eax

loc_1408A2F05:                          ; CODE XREF: sub_1408A2E50+85↑j
                lea     r11, [rsp+70h+var_s0]
                mov     rbx, [r11+18h]
                mov     rdi, [r11+28h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A2E50   endp

algn_1408A2F18:                         ; DATA XREF: .pdata:000000014011D210↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=47h

sub_1408A2F20   proc near               ; CODE XREF: sub_1407D1550+92C07↑p
                                        ; DATA XREF: .pdata:000000014011D21C↑o

var_B0          = byte ptr -0B0h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = xmmword ptr -90h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = xmmword ptr -60h
var_50          = byte ptr -50h
var_28          = qword ptr -28h

; __unwind { // __GSHandlerCheck
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r14
                lea     rbp, [rsp-27h]
                sub     rsp, 0B0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+47h+var_28], rax
                xor     r14d, r14d
                xorps   xmm0, xmm0
                mov     [rbp+47h+var_A0], r14
                mov     rax, rdx
                mov     [rbp+47h+var_98], r14
                mov     rsi, r9
                mov     ebx, r8d
                mov     edx, 20019h
                movups  [rbp+47h+var_90], xmm0
                test    rcx, rcx
                jz      short loc_1408A2FA8
                lea     rax, aEnum_0    ; "Enum"
                mov     [rbp+47h+var_78], rcx
                mov     qword ptr [rbp+47h+var_90+8], rax
                lea     r8, [rbp+47h+var_80]
                lea     rax, [rbp+47h+var_90]
                mov     dword ptr [rbp+47h+var_90], 0A0008h
                lea     rcx, [rbp+47h+var_98]
                mov     [rbp+47h+var_70], rax
                mov     [rbp+47h+var_80], 30h ; '0'
                mov     [rbp+47h+var_68], 240h
                movdqu  [rbp+47h+var_60], xmm0
                call    ZwOpenKey
                jmp     short loc_1408A2FBC
; ---------------------------------------------------------------------------

loc_1408A2FA8:                          ; CODE XREF: sub_1408A2F20+44↑j
                lea     r9, [rbp+47h+var_98]
                mov     [rsp+0D0h+var_B0], r14b
                xor     r8d, r8d
                mov     rcx, rax
                call    sub_140739E5C

loc_1408A2FBC:                          ; CODE XREF: sub_1408A2F20+86↑j
                test    eax, eax
                js      loc_1408A306F
                mov     r9d, ebx
                lea     r8, aU_4        ; "%u"
                mov     edx, 28h ; '('
                lea     rcx, [rbp+47h+var_50]
                call    sub_14021C308
                mov     rcx, [rbp+47h+var_98]
                lea     r9, [rbp+47h+var_A0]
                mov     r8d, 64h ; 'd'
                lea     rdx, [rbp+47h+var_50]
                call    sub_140739D08
                mov     rcx, [rbp+47h+var_98]
                mov     ebx, eax
                call    ZwClose
                test    ebx, ebx
                js      short loc_1408A306D
                mov     rdi, [rbp+47h+var_A0]
                cmp     dword ptr [rdi+4], 1
                jnz     short loc_1408A3047
                mov     ecx, [rdi+8]
                lea     r8, [rbp+47h+var_A0]
                mov     edx, [rdi+0Ch]
                add     rcx, rdi
                mov     dword ptr [rbp+47h+var_A0], r14d
                call    sub_14073B974
                mov     ecx, dword ptr [rbp+47h+var_A0]
                mov     word ptr [rbp+47h+var_90], cx
                movzx   eax, word ptr [rdi+0Ch]
                mov     word ptr [rbp+47h+var_90+2], ax
                mov     eax, [rdi+8]
                add     rax, rdi
                mov     qword ptr [rbp+47h+var_90+8], rax
                test    cx, cx
                jnz     short loc_1408A304C
                mov     ebx, 0C000003Ah
                jmp     short loc_1408A304C
; ---------------------------------------------------------------------------

loc_1408A3047:                          ; CODE XREF: sub_1408A2F20+EA↑j
                mov     ebx, 0C0000261h

loc_1408A304C:                          ; CODE XREF: sub_1408A2F20+11E↑j
                                        ; sub_1408A2F20+125↑j
                test    ebx, ebx
                js      short loc_1408A3063
                test    rsi, rsi
                jz      short loc_1408A3063
                lea     rdx, [rbp+47h+var_90]
                mov     rcx, rsi
                call    sub_140740B10
                mov     ebx, eax

loc_1408A3063:                          ; CODE XREF: sub_1408A2F20+12E↑j
                                        ; sub_1408A2F20+133↑j
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408A306D:                          ; CODE XREF: sub_1408A2F20+E0↑j
                mov     eax, ebx

loc_1408A306F:                          ; CODE XREF: sub_1408A2F20+9E↑j
                mov     rcx, [rbp+47h+var_28]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0B0h
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A2F20
sub_1408A2F20   endp

algn_1408A308A:                         ; DATA XREF: .pdata:000000014011D21C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A3090   proc near               ; CODE XREF: IoReportDetectedDevice+AA9BC↑p
                                        ; DATA XREF: .pdata:000000014011D228↑o

var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_18          = xmmword ptr -18h
arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 40h
                mov     rdi, rcx
                lea     rdx, aBasicconfigvec ; "BasicConfigVector"
                xorps   xmm0, xmm0
                lea     rcx, [rsp+48h+var_18]
                movups  [rsp+48h+var_18], xmm0
                mov     rbx, r8
                call    RtlInitUnicodeString
                lea     rdx, [rsp+48h+var_18]
                mov     rcx, rdi
                test    rbx, rbx
                jnz     short loc_1408A30CD
                call    ZwDeleteValueKey
                jmp     short loc_1408A30E6
; ---------------------------------------------------------------------------

loc_1408A30CD:                          ; CODE XREF: sub_1408A3090+34↑j
                mov     eax, [rbx]
                mov     r9d, 0Ah
                mov     [rsp+48h+var_20], eax
                xor     r8d, r8d
                mov     [rsp+48h+var_28], rbx
                call    ZwSetValueKey

loc_1408A30E6:                          ; CODE XREF: sub_1408A3090+3B↑j
                mov     rbx, [rsp+48h+arg_0]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A3090   endp

algn_1408A30F2:                         ; DATA XREF: .pdata:000000014011D228↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408A30F8   proc near               ; CODE XREF: IoReportDetectedDevice+AA9A1↑p
                                        ; DATA XREF: .pdata:000000014011D234↑o

var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_18          = xmmword ptr -18h
arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 40h
                mov     rdi, rcx
                lea     rdx, aBootconfig ; "BootConfig"
                xorps   xmm0, xmm0
                lea     rcx, [rsp+48h+var_18]
                movups  [rsp+48h+var_18], xmm0
                mov     rbx, r8
                call    RtlInitUnicodeString
                test    rbx, rbx
                jnz     short loc_1408A3135
                lea     rdx, [rsp+48h+var_18]
                mov     rcx, rdi
                call    ZwDeleteValueKey
                jmp     short loc_1408A315C
; ---------------------------------------------------------------------------

loc_1408A3135:                          ; CODE XREF: sub_1408A30F8+2C↑j
                mov     rcx, rbx
                call    sub_14074CF5C
                mov     [rsp+48h+var_20], eax
                lea     rdx, [rsp+48h+var_18]
                mov     r9d, 8
                mov     [rsp+48h+var_28], rbx
                xor     r8d, r8d
                mov     rcx, rdi
                call    ZwSetValueKey

loc_1408A315C:                          ; CODE XREF: sub_1408A30F8+3B↑j
                mov     rbx, [rsp+48h+arg_0]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A30F8   endp

algn_1408A3168:                         ; DATA XREF: .pdata:000000014011D234↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A3170   proc near               ; DATA XREF: .pdata:000000014011D240↑o
                                        ; sub_1407A17B0+40↑o

var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h

                sub     rsp, 48h
                cmp     edx, [rcx+4]
                jb      short loc_1408A3182
                mov     cs:byte_140C50BA0, 1
                jmp     short loc_1408A31BA
; ---------------------------------------------------------------------------

loc_1408A3182:                          ; CODE XREF: sub_1408A3170+7↑j
                mov     cs:byte_140C50BA0, 0
                call    sub_1408A4070
                and     [rsp+48h+var_18], 0
                xor     r9d, r9d
                mov     rcx, cs:qword_140C44D00
                xor     r8d, r8d
                and     [rsp+48h+var_20], 0
                and     [rsp+48h+var_28], 0
                lea     edx, [r9+0Eh]
                mov     rcx, [rcx+20h]
                call    sub_14036E8F4

loc_1408A31BA:                          ; CODE XREF: sub_1408A3170+10↑j
                add     rsp, 48h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A3170   endp

byte_1408A31C0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D240↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A31C8   proc near               ; CODE XREF: sub_140A932E0+1BF↓p
                                        ; DATA XREF: .pdata:000000014011D24C↑o

var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8
arg_0           = qword ptr  40h
arg_8           = dword ptr  48h
arg_10          = qword ptr  50h
arg_18          = dword ptr  58h

                mov     [rsp-38h+arg_0], rbx
                mov     [rsp-38h+arg_10], r8
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 50h
                xor     r15d, r15d
                lea     r8, [rbp+var_8]
                mov     r14, rdx
                mov     [rdx], r15b
                mov     rdi, rcx
                mov     [rbp+var_8], r15
                mov     rcx, cs:qword_140CF4378
                mov     sil, r15b
                lea     edx, [r15+4]
                mov     [rbp+var_10], r15
                mov     [rbp+var_18], r15
                mov     [rbp+var_20], r15d
                mov     [rbp+arg_8], r15d
                mov     [rbp+arg_18], r15d
                call    sub_14062C5C0
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A33B1
                cmp     [rdi], r15w
                jz      loc_1408A33A3
                mov     r13d, 0C0000034h
                mov     r12d, 0C000017Ch

loc_1408A323F:                          ; CODE XREF: sub_1408A31C8+240↓j
                lea     rdx, qword_1407D6EB0
                mov     rcx, rdi
                call    _wcsicmp
                test    eax, eax
                jz      loc_1408A33EE
                test    sil, sil
                jnz     loc_1408A33EE
                cmp     [rbp+var_10], r15
                jnz     short loc_1408A32BB
                mov     rax, cs:qword_140CF4378
                mov     rcx, r15
                test    rax, rax
                jz      short loc_1408A327B
                mov     rcx, [rax+0E0h]

loc_1408A327B:                          ; CODE XREF: sub_1408A31C8+AA↑j
                mov     rdx, [rbp+var_8]
                lea     rax, [rbp+var_10]
                mov     [rsp+50h+var_28], rax
                lea     r8, aControlFirmwar ; "Control\\FirmwareResources"
                xor     r9d, r9d
                mov     dword ptr [rsp+50h+var_30], 20019h
                call    sub_14062CECC
                mov     ebx, eax
                cmp     eax, r13d
                jz      loc_1408A33E8
                cmp     eax, r12d
                jz      loc_1408A33E8
                test    eax, eax
                js      loc_1408A33B1

loc_1408A32BB:                          ; CODE XREF: sub_1408A31C8+9B↑j
                mov     rcx, [rbp+var_18]
                test    rcx, rcx
                jz      short loc_1408A32CD
                call    ZwClose
                mov     [rbp+var_18], r15

loc_1408A32CD:                          ; CODE XREF: sub_1408A31C8+FA↑j
                mov     rax, cs:qword_140CF4378
                mov     rcx, r15
                test    rax, rax
                jz      short loc_1408A32E3
                mov     rcx, [rax+0E0h]

loc_1408A32E3:                          ; CODE XREF: sub_1408A31C8+112↑j
                mov     rdx, [rbp+var_10]
                lea     rax, [rbp+var_18]
                mov     [rsp+50h+var_28], rax
                xor     r9d, r9d
                mov     r8, rdi
                mov     dword ptr [rsp+50h+var_30], 1
                call    sub_14062CECC
                mov     ebx, eax
                cmp     eax, r13d
                jz      loc_1408A33EB
                cmp     eax, r12d
                jz      loc_1408A33EB
                test    eax, eax
                js      loc_1408A33B1
                mov     rcx, [rbp+var_18]
                lea     rax, [rbp+arg_10]
                lea     r9, [rbp+arg_8]
                mov     [rsp+50h+var_30], rax
                lea     r8, [rbp+arg_18]
                mov     dword ptr [rbp+arg_10], 4
                lea     rdx, aPhase     ; "Phase"
                call    sub_14062CB38
                mov     ebx, eax
                cmp     eax, r13d
                jz      loc_1408A3415
                cmp     eax, r12d
                jz      loc_1408A33EB
                test    eax, eax
                js      short loc_1408A33B1
                cmp     [rbp+arg_8], 2
                jnz     short loc_1408A33A3
                mov     rcx, [rbp+var_18]
                lea     rax, [rbp+arg_10]
                lea     r9, [rbp+var_20]
                mov     [rsp+50h+var_30], rax
                lea     r8, [rbp+arg_18]
                mov     dword ptr [rbp+arg_10], 4
                lea     rdx, aLastattemptsta ; "LastAttemptStatus"
                call    sub_14062CB38
                mov     ebx, eax
                cmp     eax, r13d
                jz      short loc_1408A3410
                cmp     eax, r12d
                jz      short loc_1408A33EB
                test    eax, eax
                js      short loc_1408A33B1
                cmp     [rbp+var_20], r15d
                jz      short loc_1408A33EE

loc_1408A33A3:                          ; CODE XREF: sub_1408A31C8+65↑j
                                        ; sub_1408A31C8+19B↑j ...
                test    ebx, ebx
                js      short loc_1408A33B1

loc_1408A33A7:                          ; CODE XREF: sub_1408A31C8+250↓j
                cmp     [rdi], r15w
                jnz     short loc_1408A33B1
                mov     byte ptr [r14], 1

loc_1408A33B1:                          ; CODE XREF: sub_1408A31C8+5B↑j
                                        ; sub_1408A31C8+ED↑j ...
                mov     rcx, [rbp+var_10]
                test    rcx, rcx
                jz      short loc_1408A33BF
                call    ZwClose

loc_1408A33BF:                          ; CODE XREF: sub_1408A31C8+1F0↑j
                mov     rcx, [rbp+var_18]
                test    rcx, rcx
                jz      short loc_1408A33CD
                call    ZwClose

loc_1408A33CD:                          ; CODE XREF: sub_1408A31C8+1FE↑j
                mov     eax, ebx
                mov     rbx, [rsp+50h+arg_0]
                add     rsp, 50h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 8

loc_1408A33E8:                          ; CODE XREF: sub_1408A31C8+DC↑j
                                        ; sub_1408A31C8+E5↑j
                mov     sil, 1

loc_1408A33EB:                          ; CODE XREF: sub_1408A31C8+140↑j
                                        ; sub_1408A31C8+149↑j ...
                mov     ebx, r15d

loc_1408A33EE:                          ; CODE XREF: sub_1408A31C8+88↑j
                                        ; sub_1408A31C8+91↑j ...
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A33F2:                          ; CODE XREF: sub_1408A31C8+232↓j
                inc     rax
                cmp     [rdi+rax*2], r15w
                jnz     short loc_1408A33F2
                lea     rdi, [rdi+rax*2]
                add     rdi, 2
                cmp     [rdi], r15w
                jnz     loc_1408A323F
                jmp     short loc_1408A33A3
; ---------------------------------------------------------------------------

loc_1408A3410:                          ; CODE XREF: sub_1408A31C8+1CA↑j
                mov     ebx, r15d
                jmp     short loc_1408A33A3
; ---------------------------------------------------------------------------

loc_1408A3415:                          ; CODE XREF: sub_1408A31C8+184↑j
                mov     ebx, r15d
                jmp     short loc_1408A33A7
sub_1408A31C8   endp

; ---------------------------------------------------------------------------
algn_1408A341A:                         ; DATA XREF: .pdata:000000014011D24C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A3420   proc near               ; CODE XREF: sub_1406D2A38+14BD7B↑p
                                        ; sub_1406D2A38+14BDD4↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = dword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = qword ptr  28h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+18h], rbp
                mov     [rax+20h], rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 20h
                xor     r13d, r13d
                mov     edi, r9d
                mov     r14, r8
                mov     [rax+10h], r13d
                mov     ebp, edx
                mov     r12, rcx
                mov     r15d, r9d
                lea     ebx, [r13+2]
                cmp     r9d, ebx
                jb      short loc_1408A345E
                mov     [r8], r13w

loc_1408A345E:                          ; CODE XREF: sub_1408A3420+38↑j
                mov     esi, r13d
                mov     edx, 0C0000023h
                test    ebp, ebp
                jz      short loc_1408A34CB

loc_1408A346A:                          ; CODE XREF: sub_1408A3420+A4↓j
                mov     ecx, esi
                lea     r9, [rsp+48h+arg_8]
                shl     rcx, 5
                mov     r8d, edi
                add     rcx, r12
                mov     rdx, r14
                call    sub_140980778
                mov     edx, 80000000h
                lea     ecx, [rax+rdx]
                test    edx, ecx
                jnz     short loc_1408A3496
                cmp     eax, 0C0000023h
                jnz     short loc_1408A34E0

loc_1408A3496:                          ; CODE XREF: sub_1408A3420+6D↑j
                mov     edx, [rsp+48h+arg_8]
                lea     eax, [rdx-2]
                add     eax, ebx
                cmp     eax, ebx
                jb      short loc_1408A34FE
                mov     ebx, eax
                lea     rcx, [rdx-2]
                mov     eax, edi
                cmp     rax, rcx
                jb      short loc_1408A34C0
                mov     eax, 2
                sub     eax, edx
                add     edi, eax
                shr     rcx, 1
                lea     r14, [r14+rcx*2]

loc_1408A34C0:                          ; CODE XREF: sub_1408A3420+8E↑j
                inc     esi
                cmp     esi, ebp
                jb      short loc_1408A346A
                mov     edx, 0C0000023h

loc_1408A34CB:                          ; CODE XREF: sub_1408A3420+48↑j
                mov     rcx, [rsp+48h+arg_20]
                mov     eax, r13d
                test    rcx, rcx
                jz      short loc_1408A34DA
                mov     [rcx], ebx

loc_1408A34DA:                          ; CODE XREF: sub_1408A3420+B6↑j
                cmp     ebx, r15d
                cmova   eax, edx

loc_1408A34E0:                          ; CODE XREF: sub_1408A3420+74↑j
                                        ; sub_1408A3420+E3↓j
                mov     rbx, [rsp+48h+arg_0]
                mov     rbp, [rsp+48h+arg_10]
                mov     rsi, [rsp+48h+arg_18]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                align 2

loc_1408A34FE:                          ; CODE XREF: sub_1408A3420+81↑j
                mov     eax, 0C0000095h
                jmp     short loc_1408A34E0
sub_1408A3420   endp

; ---------------------------------------------------------------------------
byte_1408A3505  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D258↑o

; =============== S U B R O U T I N E =======================================


sub_1408A350C   proc near               ; CODE XREF: sub_140735D48+B8C4F↑p
                                        ; sub_14074F15C+EAFE8↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     eax, [rcx+12Ch]
                mov     edi, edx
                mov     rbx, rcx
                cmp     eax, 301h
                jl      short loc_1408A3577
                cmp     eax, 302h
                jle     short loc_1408A355C
                cmp     eax, 308h
                jle     short loc_1408A353D
                cmp     eax, 30Dh
                jg      short loc_1408A3577

loc_1408A353D:                          ; CODE XREF: sub_1408A350C+28↑j
                mov     rcx, [rcx+20h]
                xor     edx, edx
                call    sub_1407335AC
                test    eax, eax
                jns     short loc_1408A355C
                mov     rcx, [rbx+20h]
                mov     edx, 3
                call    sub_140747FC0
                jmp     short loc_1408A3577
; ---------------------------------------------------------------------------

loc_1408A355C:                          ; CODE XREF: sub_1408A350C+21↑j
                                        ; sub_1408A350C+3E↑j
                mov     rcx, [rbx+20h]
                mov     edx, 2
                call    sub_140747FC0
                mov     edx, 1
                mov     rcx, rbx
                call    sub_140747E14

loc_1408A3577:                          ; CODE XREF: sub_1408A350C+1A↑j
                                        ; sub_1408A350C+2F↑j ...
                test    dword ptr [rbx+18Ch], 6000h
                jz      short loc_1408A358B
                mov     rcx, rbx
                call    sub_14074AC04

loc_1408A358B:                          ; CODE XREF: sub_1408A350C+75↑j
                xor     r8d, r8d
                mov     edx, edi
                mov     rcx, rbx
                call    sub_140748CA0
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A350C   endp

byte_1408A35A4  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D264↑o

; =============== S U B R O U T I N E =======================================


sub_1408A35AC   proc near               ; CODE XREF: sub_14072E3EC+104968↑p
                                        ; DATA XREF: .pdata:000000014011D270↑o

var_28          = xmmword ptr -28h
var_18          = xmmword ptr -18h

                push    rbx
                sub     rsp, 40h
                xorps   xmm0, xmm0
                mov     rbx, rcx
                lea     rcx, [rsp+48h+var_28]
                movups  [rsp+48h+var_28], xmm0
                movups  [rsp+48h+var_18], xmm0
                call    SeCaptureSubjectContext
                mov     rax, qword ptr [rsp+48h+var_28]
                mov     rdx, rbx
                mov     rcx, qword ptr [rsp+48h+var_18]
                test    rax, rax
                cmovnz  rcx, rax
                call    SeQuerySessionIdToken
                lea     rcx, [rsp+48h+var_28]
                mov     ebx, eax
                call    SeReleaseSubjectContext
                mov     eax, ebx
                add     rsp, 40h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A35AC   endp

algn_1408A35FA:                         ; DATA XREF: .pdata:000000014011D270↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A3600   proc near               ; CODE XREF: sub_140738BF8+B6695↑p
                                        ; DATA XREF: .pdata:000000014011D27C↑o

var_48          = xmmword ptr -48h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = qword ptr -18h

; __unwind { // __GSHandlerCheck
                push    rbx
                sub     rsp, 60h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+68h+var_18], rax
                xorps   xmm0, xmm0
                mov     rdx, rcx
                movups  [rsp+68h+var_48], xmm0
                mov     rbx, rcx
                movups  [rsp+68h+var_38], xmm0
                movups  [rsp+68h+var_28], xmm0
                call    sub_14089CE60
                mov     edx, eax
                test    eax, eax
                jns     short loc_1408A3660
                xor     r9d, r9d
                lea     rdx, [rsp+68h+var_48]
                lea     r8d, [r9+30h]
                lea     ecx, [r9+3]
                call    ZwQuerySystemInformation
                mov     edx, eax
                test    eax, eax
                js      short loc_1408A3660
                mov     rax, qword ptr [rsp+68h+var_48]
                sub     rax, qword ptr [rsp+68h+var_28]
                mov     [rbx], rax

loc_1408A3660:                          ; CODE XREF: sub_1408A3600+36↑j
                                        ; sub_1408A3600+51↑j
                mov     eax, edx
                mov     rcx, [rsp+68h+var_18]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 60h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A3600
sub_1408A3600   endp

byte_1408A3676  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D27C↑o

; =============== S U B R O U T I N E =======================================


sub_1408A367C   proc near               ; CODE XREF: sub_14073DF50+B4632↑p
                                        ; sub_140762970+E0C51↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_20          = dword ptr  28h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 20h
                xor     r13d, r13d
                mov     rbp, rcx
                mov     rsi, rdx
                mov     r12, r9
                mov     r15d, r8d
                mov     ecx, r13d
                mov     edx, r13d
                test    rbp, rbp
                jz      short loc_1408A36BA
                movzx   edx, word ptr [rbp+0]
                add     rdx, 2

loc_1408A36BA:                          ; CODE XREF: sub_1408A367C+34↑j
                test    rsi, rsi
                jz      short loc_1408A36C6
                movzx   ecx, word ptr [rsi]
                add     rcx, 2

loc_1408A36C6:                          ; CODE XREF: sub_1408A367C+41↑j
                mov     r14d, [rsp+48h+arg_20]
                lea     edi, [r14+28h]
                inc     rdi
                and     rdi, 0FFFFFFFFFFFFFFFEh
                lea     rax, [rdi+rcx]
                add     rax, rdx
                cmp     rax, 0F0h
                ja      loc_1408A377E
                mov     cl, al
                call    sub_140505998
                mov     rbx, rax
                test    rax, rax
                jz      loc_1408A377E
                mov     [rax+6], di
                add     rdi, rax
                mov     [rax+0Ch], r15d
                mov     [rax+14h], r15d
                mov     [rax+2], r14w
                test    r14d, r14d
                jz      short loc_1408A3724
                mov     r8d, r14d
                lea     rcx, [rax+28h]
                mov     rdx, r12
                call    memmove

loc_1408A3724:                          ; CODE XREF: sub_1408A367C+97↑j
                mov     r14d, 1
                test    rbp, rbp
                jz      short loc_1408A3754
                mov     [rbx+4], r14w
                mov     rcx, rdi
                movzx   r8d, word ptr [rbp+0]
                mov     rdx, [rbp+8]
                call    memmove
                movzx   eax, word ptr [rbp+0]
                add     rdi, rax
                mov     [rdi], r13w
                add     rdi, 2

loc_1408A3754:                          ; CODE XREF: sub_1408A367C+B1↑j
                test    rsi, rsi
                jz      short loc_1408A3776
                add     [rbx+4], r14w
                mov     rcx, rdi
                movzx   r8d, word ptr [rsi]
                mov     rdx, [rsi+8]
                call    memmove
                movzx   eax, word ptr [rsi]
                mov     [rax+rdi], r13w

loc_1408A3776:                          ; CODE XREF: sub_1408A367C+DB↑j
                mov     rcx, rbx
                call    IoWriteErrorLogEntry

loc_1408A377E:                          ; CODE XREF: sub_1408A367C+67↑j
                                        ; sub_1408A367C+7A↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     rbp, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A367C   endp

byte_1408A379C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D288↑o

; =============== S U B R O U T I N E =======================================


sub_1408A37A4   proc near               ; CODE XREF: sub_140762BD8+E0BE3↑p
                                        ; sub_14076F8BC+D8E68↑p ...

var_48          = byte ptr -48h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = xmmword ptr -18h
var_8           = byte ptr -8
arg_20          = qword ptr  28h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                push    rdi
                sub     rsp, 60h
                xor     ebp, ebp
                xorps   xmm0, xmm0
                mov     rsi, rdx
                mov     rbx, rcx
                movups  xmmword ptr [rax-48h], xmm0
                test    rcx, rcx
                jz      loc_1408A3862
                test    rdx, rdx
                jz      loc_1408A3862
                mov     rdi, [rsp+68h+arg_20]
                test    rdi, rdi
                jz      short loc_1408A3862
                mov     [rdi], rbp
                mov     eax, 0C0000034h
                cmp     [rcx], bp
                jz      short loc_1408A3867

loc_1408A37F3:                          ; CODE XREF: sub_1408A37A4+BA↓j
                mov     rdx, rbx
                lea     rcx, [rsp+68h+var_48]
                call    RtlInitUnicodeString
                lea     rax, [rsp+68h+var_48]
                mov     [rsp+68h+var_38], 30h ; '0'
                xorps   xmm0, xmm0
                mov     [rsp+68h+var_28], rax
                lea     r8, [rsp+68h+var_38]
                mov     [rsp+68h+var_20], 240h
                mov     edx, 20019h
                mov     [rdi], rbp
                mov     rcx, rdi
                mov     [rsp+68h+var_30], rsi
                movdqu  [rsp+68h+var_18], xmm0
                call    ZwOpenKey
                test    eax, eax
                jns     short loc_1408A3867
                mov     [rdi], rbp
                or      rcx, 0FFFFFFFFFFFFFFFFh

loc_1408A384A:                          ; CODE XREF: sub_1408A37A4+AD↓j
                inc     rcx
                cmp     [rbx+rcx*2], bp
                jnz     short loc_1408A384A
                lea     rbx, [rbx+rcx*2]
                add     rbx, 2
                cmp     [rbx], bp
                jnz     short loc_1408A37F3
                jmp     short loc_1408A3867
; ---------------------------------------------------------------------------

loc_1408A3862:                          ; CODE XREF: sub_1408A37A4+26↑j
                                        ; sub_1408A37A4+2F↑j ...
                mov     eax, 0C000000Dh

loc_1408A3867:                          ; CODE XREF: sub_1408A37A4+4D↑j
                                        ; sub_1408A37A4+9D↑j ...
                lea     r11, [rsp+68h+var_8]
                mov     rbx, [r11+10h]
                mov     rbp, [r11+18h]
                mov     rsi, [r11+20h]
                mov     rsp, r11
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A37A4   endp

byte_1408A387E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D294↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A3884   proc near               ; CODE XREF: sub_1407408F4+F4EC9↑p
                                        ; sub_140748F30+EF2DA↑p ...

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_10          = qword ptr -10h
arg_0           = qword ptr  30h
arg_8           = dword ptr  38h
arg_10          = dword ptr  40h
arg_18          = byte ptr  48h

                mov     r11, rsp
                mov     [r11+8], rbx
                mov     [r11+20h], r9b
                mov     [r11+10h], rdx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r14
                mov     rbp, rsp
                sub     rsp, 70h
                xor     ebx, ebx
                lea     rax, [rbp+arg_10]
                mov     [rsp+70h+var_20], ebx
                mov     rsi, r8
                mov     [r11-50h], rax
                mov     rdi, rcx
                lea     rax, [rbp+arg_18]
                mov     [rbp+arg_18], bl
                lea     r14d, [rbx+1]
                mov     [rbp+arg_10], ebx
                mov     [r11-58h], r14d
                mov     rdx, rcx
                mov     rcx, cs:qword_140CF4378
                xor     r9d, r9d
                mov     [r11-60h], rax
                mov     r8d, r14d
                lea     rax, [rbp+arg_8]
                mov     [rbp+arg_8], ebx
                mov     [r11-68h], rax
                lea     rax, qword_14000A598
                mov     [r11-70h], rax
                mov     [r11-78h], rbx
                mov     [rbp+var_10], rbx
                call    sub_1406CC6BC
                lea     r12, qword_14000B418
                test    eax, eax
                js      short loc_1408A3976
                cmp     [rbp+arg_8], 11h
                jnz     short loc_1408A3976
                cmp     [rbp+arg_10], r14d
                jnz     short loc_1408A3976
                cmp     [rbp+arg_18], 0FFh
                jnz     short loc_1408A3976
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+arg_10]
                mov     [rsp+70h+var_20], ebx
                xor     r9d, r9d
                mov     [rsp+70h+var_28], rax
                mov     r8d, r14d
                mov     [rsp+70h+var_30], 8
                lea     rax, [rbp+var_10]
                mov     [rsp+70h+var_38], rax
                mov     rdx, rdi
                lea     rax, [rbp+arg_8]
                mov     [rsp+70h+var_40], rax
                mov     [rsp+70h+var_48], r12
                mov     [rsp+70h+var_50], rbx
                call    sub_1406CC6BC
                test    eax, eax
                js      short loc_1408A3971
                cmp     [rbp+arg_8], 9
                jnz     short loc_1408A3971
                cmp     [rbp+arg_10], 8
                jz      short loc_1408A3976

loc_1408A3971:                          ; CODE XREF: sub_1408A3884+DF↑j
                                        ; sub_1408A3884+E5↑j
                mov     rax, rbx
                jmp     short loc_1408A397A
; ---------------------------------------------------------------------------

loc_1408A3976:                          ; CODE XREF: sub_1408A3884+83↑j
                                        ; sub_1408A3884+89↑j ...
                mov     rax, [rbp+var_10]

loc_1408A397A:                          ; CODE XREF: sub_1408A3884+F0↑j
                mov     rcx, cs:qword_140CF4378
                or      rax, rsi
                mov     [rbp+var_10], rax
                mov     r8d, r14d
                mov     dword ptr [rsp+70h+var_28], ebx
                mov     rdx, rdi
                jz      short loc_1408A39C3
                mov     [rsp+70h+var_30], 8
                lea     rax, [rbp+var_10]
                mov     [rsp+70h+var_38], rax
                xor     r9d, r9d
                mov     dword ptr [rsp+70h+var_40], 9
                mov     [rsp+70h+var_48], r12
                mov     [rsp+70h+var_50], rbx
                call    sub_1407374DC
                mov     ebx, eax
                jmp     short loc_1408A39E2
; ---------------------------------------------------------------------------

loc_1408A39C3:                          ; CODE XREF: sub_1408A3884+10E↑j
                mov     [rsp+70h+var_30], ebx
                xor     r9d, r9d
                mov     [rsp+70h+var_38], rbx
                mov     dword ptr [rsp+70h+var_40], ebx
                mov     [rsp+70h+var_48], r12
                mov     [rsp+70h+var_50], rbx
                call    sub_1407374DC

loc_1408A39E2:                          ; CODE XREF: sub_1408A3884+13D↑j
                mov     eax, ebx
                mov     rbx, [rsp+70h+arg_0]
                add     rsp, 70h
                pop     r14
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A3884   endp

algn_1408A39F9:                         ; DATA XREF: .pdata:000000014011D2A0↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A3A00   proc near               ; CODE XREF: sub_1407318AC+102794↑p
                                        ; DATA XREF: .pdata:000000014011D2AC↑o

var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  30h
arg_8           = dword ptr  38h
arg_10          = qword ptr  40h
arg_20          = qword ptr  50h

                mov     [rsp-28h+arg_0], rbx
                mov     [rsp-28h+arg_10], rsi
                push    rbp
                push    rdi
                push    r12
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 50h
                xor     r12d, r12d
                mov     r14, r9
                mov     [rbp+var_18], r12
                mov     esi, edx
                mov     [rbp+arg_8], r12d
                mov     r15, rcx
                mov     [rbp+var_10], r12
                test    edx, 0FFFFFFFBh
                jz      short loc_1408A3A3F
                lea     ecx, [r12+5]
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408A3A3F:                          ; CODE XREF: sub_1408A3A00+36↑j
                mov     rax, [rbp+arg_20]
                mov     r9b, 1
                mov     rdx, r14
                mov     [rsp+50h+var_30], rax
                mov     ecx, esi
                call    sub_140747A28
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A3C08
                mov     ecx, esi
                call    sub_140748A40
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A3A78
                mov     ebx, 0C0000017h
                jmp     loc_1408A3C08
; ---------------------------------------------------------------------------

loc_1408A3A78:                          ; CODE XREF: sub_1408A3A00+6C↑j
                mov     [rbp+var_20], 2

loc_1408A3A80:                          ; CODE XREF: sub_1408A3A00+B9↓j
                                        ; sub_1408A3A00+C3↓j ...
                lea     r9, [rbp+arg_8]
                mov     [rsp+50h+var_30], r12
                lea     r8, [rbp+var_18]
                mov     rcx, r14
                lea     rdx, [rbp+var_20]
                call    sub_140747BB8
                test    al, al
                jz      short loc_1408A3ADF
                mov     rdx, [rbp+var_18]
                test    rdx, rdx
                jz      short loc_1408A3AB3
                mov     rax, [rdx+138h]
                mov     rcx, [rax+28h]
                jmp     short loc_1408A3AB6
; ---------------------------------------------------------------------------

loc_1408A3AB3:                          ; CODE XREF: sub_1408A3A00+A4↑j
                mov     rcx, r12

loc_1408A3AB6:                          ; CODE XREF: sub_1408A3A00+B1↑j
                test    rcx, rcx
                jz      short loc_1408A3A80
                mov     eax, [rcx+2C0h]
                test    al, 2
                jz      short loc_1408A3A80
                mov     r8d, [rbp+arg_8]
                xor     r9d, r9d
                mov     rcx, rdi
                call    sub_140746F30
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408A3A80
                jmp     loc_1408A3C00
; ---------------------------------------------------------------------------

loc_1408A3ADF:                          ; CODE XREF: sub_1408A3A00+9B↑j
                mov     byte ptr [rdi+8], 1
                mov     [rbp+var_20], 1

loc_1408A3AEB:                          ; CODE XREF: sub_1408A3A00+12A↓j
                                        ; sub_1408A3A00+142↓j
                xor     r9d, r9d
                mov     [rsp+50h+var_30], r12
                lea     r8, [rbp+var_18]
                mov     rcx, rdi
                lea     rdx, [rbp+var_20]
                call    sub_140747BB8
                test    al, al
                jz      short loc_1408A3B44
                mov     rax, [rbp+var_18]
                test    rax, rax
                jz      short loc_1408A3B1D
                mov     rax, [rax+138h]
                mov     rcx, [rax+28h]
                jmp     short loc_1408A3B20
; ---------------------------------------------------------------------------

loc_1408A3B1D:                          ; CODE XREF: sub_1408A3A00+10E↑j
                mov     rcx, r12

loc_1408A3B20:                          ; CODE XREF: sub_1408A3A00+11B↑j
                cmp     dword ptr [rcx+12Ch], 310h
                jnz     short loc_1408A3AEB
                xor     r8d, r8d
                mov     [rsp+50h+var_28], r12
                mov     [rsp+50h+var_30], r12
                lea     edx, [r8+1]
                call    sub_140747C3C
                jmp     short loc_1408A3AEB
; ---------------------------------------------------------------------------

loc_1408A3B44:                          ; CODE XREF: sub_1408A3A00+105↑j
                mov     [rbp+var_20], 1

loc_1408A3B4C:                          ; CODE XREF: sub_1408A3A00+18C↓j
                                        ; sub_1408A3A00+193↓j ...
                xor     r9d, r9d
                mov     [rsp+50h+var_30], r12
                lea     r8, [rbp+var_18]
                mov     rcx, rdi
                lea     rdx, [rbp+var_20]
                call    sub_140747BB8
                test    al, al
                jz      short loc_1408A3BAD
                mov     rdx, [rbp+var_18]
                test    rdx, rdx
                jz      short loc_1408A3B7E
                mov     rax, [rdx+138h]
                mov     rcx, [rax+28h]
                jmp     short loc_1408A3B81
; ---------------------------------------------------------------------------

loc_1408A3B7E:                          ; CODE XREF: sub_1408A3A00+16F↑j
                mov     rcx, r12

loc_1408A3B81:                          ; CODE XREF: sub_1408A3A00+17C↑j
                mov     eax, [rcx+12Ch]
                cmp     eax, 312h
                jz      short loc_1408A3B4C
                cmp     eax, 302h
                jz      short loc_1408A3B4C
                cmp     eax, 301h
                jz      short loc_1408A3B4C
                xor     r8d, r8d
                lea     rcx, xmmword_14000AB70
                call    sub_14069FDE0
                jmp     short loc_1408A3B4C
; ---------------------------------------------------------------------------

loc_1408A3BAD:                          ; CODE XREF: sub_1408A3A00+166↑j
                lea     rax, [rbp+var_10]
                xor     r8d, r8d
                mov     rdx, rdi
                mov     [rsp+50h+var_30], rax
                mov     ecx, esi
                call    sub_140747A28
                mov     rsi, [rbp+var_10]
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A3BEE
                mov     [rsp+50h+var_28], r12
                lea     r8, xmmword_14000AB70
                xor     r9d, r9d
                mov     [rsp+50h+var_30], r12
                mov     rdx, rsi
                mov     rcx, r15
                call    sub_14074658C
                mov     ebx, eax

loc_1408A3BEE:                          ; CODE XREF: sub_1408A3A00+1CB↑j
                test    rsi, rsi
                jz      short loc_1408A3C00
                mov     edx, 4B706E50h
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408A3C00:                          ; CODE XREF: sub_1408A3A00+DA↑j
                                        ; sub_1408A3A00+1F1↑j
                mov     rcx, rdi
                call    sub_140748B04

loc_1408A3C08:                          ; CODE XREF: sub_1408A3A00+59↑j
                                        ; sub_1408A3A00+73↑j
                lea     r11, [rsp+50h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+30h]
                mov     rsi, [r11+40h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A3A00   endp

algn_1408A3C24:                         ; DATA XREF: .pdata:000000014011D2AC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A3C30   proc near               ; CODE XREF: sub_140745F30+F0B86↑p
                                        ; DATA XREF: .pdata:000000014011D2B8↑o ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     edx, [rcx+5Ch]
                xor     esi, esi
                mov     rbx, rcx
                cmp     edx, 1
                jbe     short loc_1408A3C5B
                mov     [rcx+59h], sil
                mov     rcx, [rcx+38h]
                call    sub_1408B5EAC
                mov     esi, eax

loc_1408A3C5B:                          ; CODE XREF: sub_1408A3C30+1A↑j
                mov     rcx, [rbx+60h]
                test    rcx, rcx
                jz      short loc_1408A3C87
                mov     rax, [rcx+20h]
                mov     edx, 1
                mov     rcx, [rcx+8]
                call    sub_1404079D0
                mov     rcx, [rbx+60h]
                mov     rax, [rcx+18h]
                mov     rcx, [rcx+8]
                call    sub_1404079D0

loc_1408A3C87:                          ; CODE XREF: sub_1408A3C30+32↑j
                mov     ecx, 1
                call    sub_14067926C
                mov     rcx, [rbx]
                cmp     [rcx+8], rbx
                jnz     loc_1408A3D76
                mov     rax, [rbx+8]
                cmp     [rax], rbx
                jnz     loc_1408A3D76
                mov     [rax], rcx
                mov     [rcx+8], rax
                mov     rax, [rbx+38h]
                test    rax, rax
                jz      short loc_1408A3CC8
                mov     rax, [rax+138h]
                mov     rdi, [rax+28h]
                jmp     short loc_1408A3CCA
; ---------------------------------------------------------------------------

loc_1408A3CC8:                          ; CODE XREF: sub_1408A3C30+89↑j
                xor     edi, edi

loc_1408A3CCA:                          ; CODE XREF: sub_1408A3C30+96↑j
                mov     rcx, [rbx+40h]
                test    rcx, rcx
                jz      short loc_1408A3D0F
                cmp     byte ptr [rbx+58h], 0
                jz      short loc_1408A3CE2
                call    sub_1408ACE6C
                mov     rcx, [rbx+40h]

loc_1408A3CE2:                          ; CODE XREF: sub_1408A3C30+A7↑j
                xor     r8d, r8d
                mov     r9b, 1
                lea     edx, [r8+4]
                call    sub_140747754
                mov     rcx, [rbx+40h]
                xor     edx, edx
                call    sub_140733790
                mov     rcx, [rbx+40h]
                call    sub_140748B04
                and     qword ptr [rdi+2B8h], 0
                jmp     short loc_1408A3D13
; ---------------------------------------------------------------------------

loc_1408A3D0F:                          ; CODE XREF: sub_1408A3C30+A1↑j
                mov     byte ptr [rbx+59h], 0

loc_1408A3D13:                          ; CODE XREF: sub_1408A3C30+DD↑j
                mov     ecx, 1
                call    sub_140679140
                mov     rdi, [rbx+30h]
                test    rdi, rdi
                jz      short loc_1408A3D43
                mov     rcx, [rdi+68h]
                test    rcx, rcx
                jz      short loc_1408A3D39
                call    sub_14067BFD0
                and     qword ptr [rdi+68h], 0

loc_1408A3D39:                          ; CODE XREF: sub_1408A3C30+FD↑j
                mov     edx, esi
                mov     rcx, rdi
                call    sub_1406A0298

loc_1408A3D43:                          ; CODE XREF: sub_1408A3C30+F4↑j
                cmp     byte ptr [rbx+59h], 0
                jz      short loc_1408A3D52
                mov     rcx, [rbx+38h]
                call    sub_1408AD624

loc_1408A3D52:                          ; CODE XREF: sub_1408A3C30+117↑j
                mov     rcx, [rbx+38h]
                call    PsDereferenceSiloContext
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                align 2

loc_1408A3D76:                          ; CODE XREF: sub_1408A3C30+68↑j
                                        ; sub_1408A3C30+75↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
sub_1408A3C30   endp

; ---------------------------------------------------------------------------
byte_1408A3D7D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D2B8↑o

; =============== S U B R O U T I N E =======================================


sub_1408A3D84   proc near               ; CODE XREF: sub_1408B4140+4B↓p
                                        ; sub_1408B4140+DA↓p ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     ecx, 1
                call    sub_14067926C
                mov     rax, cs:qword_140C44B48
                lea     rcx, qword_140C44B40
                cmp     [rax], rcx
                jz      short loc_1408A3DB1
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408A3DB1:                          ; CODE XREF: sub_1408A3D84+24↑j
                mov     [rbx], rcx
                mov     ecx, 1
                mov     [rbx+8], rax
                mov     [rax], rbx
                mov     cs:qword_140C44B48, rbx
                call    sub_140679140
                mov     al, 1
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A3D84   endp

byte_1408A3DD5  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D2C4↑o

; =============== S U B R O U T I N E =======================================


sub_1408A3DDC   proc near               ; CODE XREF: sub_14036ECD0+11FF97↑p
                                        ; DATA XREF: .pdata:000000014011D2D0↑o
                sub     rsp, 28h
                mov     rax, [rcx+10h]
                mov     r8, rcx
                mov     rdx, [rax+138h]
                mov     rcx, [rdx+28h]
                mov     edx, [rcx+12Ch]
                lea     eax, [rdx-313h]
                cmp     eax, 1
                jbe     short loc_1408A3E56
                test    dword ptr [r8+20h], 0FFFFFFFEh
                jz      short loc_1408A3E14
                mov     eax, 0C00000F0h
                jmp     short loc_1408A3E5B
; ---------------------------------------------------------------------------

loc_1408A3E14:                          ; CODE XREF: sub_1408A3DDC+2F↑j
                mov     eax, [rcx+18Ch]
                test    eax, 1001h
                jnz     short loc_1408A3E4F
                test    al, 1
                jnz     short loc_1408A3E2E
                cmp     dword ptr [rcx+258h], 0
                jnz     short loc_1408A3E4F

loc_1408A3E2E:                          ; CODE XREF: sub_1408A3DDC+47↑j
                cmp     edx, 308h
                jz      short loc_1408A3E3D
                mov     eax, 0C0000184h
                jmp     short loc_1408A3E5B
; ---------------------------------------------------------------------------

loc_1408A3E3D:                          ; CODE XREF: sub_1408A3DDC+58↑j
                xor     r9d, r9d
                xor     edx, edx
                lea     r8d, [r9+2Ch]
                call    sub_140745DFC
                xor     eax, eax
                jmp     short loc_1408A3E5B
; ---------------------------------------------------------------------------

loc_1408A3E4F:                          ; CODE XREF: sub_1408A3DDC+43↑j
                                        ; sub_1408A3DDC+50↑j
                mov     eax, 0C0000010h
                jmp     short loc_1408A3E5B
; ---------------------------------------------------------------------------

loc_1408A3E56:                          ; CODE XREF: sub_1408A3DDC+25↑j
                mov     eax, 0C0000056h

loc_1408A3E5B:                          ; CODE XREF: sub_1408A3DDC+36↑j
                                        ; sub_1408A3DDC+5F↑j ...
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A3DDC   endp

algn_1408A3E61:                         ; DATA XREF: .pdata:000000014011D2D0↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408A3E68   proc near               ; CODE XREF: sub_14036ECD0+11FFBB↑p
                                        ; DATA XREF: .pdata:000000014011D2DC↑o

var_28          = byte ptr -28h
var_20          = byte ptr -20h
var_18          = byte ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 40h
                and     [rsp+48h+arg_0], 0
                mov     rsi, rcx
                mov     rcx, [rcx+10h]
                test    rcx, rcx
                jz      short loc_1408A3E96
                mov     rax, [rcx+138h]
                mov     rdi, [rax+28h]
                jmp     short loc_1408A3E98
; ---------------------------------------------------------------------------

loc_1408A3E96:                          ; CODE XREF: sub_1408A3E68+1F↑j
                xor     edi, edi

loc_1408A3E98:                          ; CODE XREF: sub_1408A3E68+2C↑j
                mov     edx, 65706E50h
                call    ObfReferenceObjectWithTag
                mov     eax, [rdi+12Ch]
                sub     eax, 313h
                cmp     eax, 1
                jbe     loc_1408A3F79
                mov     rcx, [rsi+10h]
                call    sub_14036DA64
                or      dword ptr [rdi+2C0h], 40h
                mov     edx, 100h
                mov     rcx, rdi
                call    sub_14073832C
                mov     edx, 400h
                mov     rcx, rdi
                call    sub_140736ED4
                mov     rcx, rdi
                call    sub_14074AC04
                cmp     dword ptr [rdi+12Ch], 308h
                jnz     short loc_1408A3F72
                cmp     qword ptr [rsi+20h], 0
                mov     edx, 800h
                mov     rcx, rdi
                jnz     short loc_1408A3F0A
                call    sub_140736ED4
                jmp     short loc_1408A3F0F
; ---------------------------------------------------------------------------

loc_1408A3F0A:                          ; CODE XREF: sub_1408A3E68+99↑j
                call    sub_14073832C

loc_1408A3F0F:                          ; CODE XREF: sub_1408A3E68+A0↑j
                mov     rcx, rdi
                call    sub_1408B48E0
                mov     rcx, cs:qword_140C44D00
                mov     al, cs:byte_140C44D3A
                mov     rbx, [rsi+28h]
                mov     dword ptr [rsp+48h+arg_0], 3
                mov     byte ptr [rsp+48h+arg_0+4], al
                mov     rcx, [rcx+20h]
                call    ObfReferenceObject
                mov     rcx, cs:qword_140C44D00
                lea     r8, [rsp+48h+arg_0]
                mov     [rsp+48h+var_18], 0
                test    rbx, rbx
                mov     rdx, rsi
                setnz   al
                xor     r9d, r9d
                mov     [rsp+48h+var_20], al
                mov     [rsp+48h+var_28], 0
                call    sub_140738474
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408A3F7E
                xor     ebx, ebx
                jmp     short loc_1408A3F7E
; ---------------------------------------------------------------------------

loc_1408A3F72:                          ; CODE XREF: sub_1408A3E68+8A↑j
                mov     ebx, 0C0000001h
                jmp     short loc_1408A3F7E
; ---------------------------------------------------------------------------

loc_1408A3F79:                          ; CODE XREF: sub_1408A3E68+48↑j
                mov     ebx, 0C0000056h

loc_1408A3F7E:                          ; CODE XREF: sub_1408A3E68+104↑j
                                        ; sub_1408A3E68+108↑j ...
                mov     eax, [rdi+2C0h]
                test    al, 40h
                jz      short loc_1408A3F98
                mov     rcx, [rdi+20h]
                call    sub_14036D8E4
                and     dword ptr [rdi+2C0h], 0FFFFFFBFh

loc_1408A3F98:                          ; CODE XREF: sub_1408A3E68+11E↑j
                mov     rcx, [rsi+10h]
                mov     edx, 65706E50h
                call    ObfDereferenceObjectWithTag
                mov     rsi, [rsp+48h+arg_10]
                mov     eax, ebx
                mov     rbx, [rsp+48h+arg_8]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A3E68   endp

algn_1408A3FB9:                         ; DATA XREF: .pdata:000000014011D2DC↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A3FC0   proc near               ; CODE XREF: sub_140735D48+B896C↑p
                                        ; DATA XREF: .pdata:000000014011D2E8↑o

var_30          = dword ptr -30h
var_20          = xmmword ptr -20h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  10h

                mov     [rsp-8+arg_0], rbx
                push    rbp
                mov     rbp, rsp
                sub     rsp, 50h
                mov     rbx, rdx
                xorps   xmm0, xmm0
                mov     rdx, rcx
                xorps   xmm1, xmm1
                lea     rcx, [rbp+var_20]
                movups  [rbp+var_20], xmm0
                movups  [rbp+var_10], xmm1
                call    RtlInitUnicodeString
                mov     rdx, rbx
                lea     rcx, [rbp+var_10]
                call    RtlInitUnicodeString
                movzx   edx, word ptr [rbp+var_10+2]
                xor     r8d, r8d
                mov     r9d, 0F0h
                lea     rax, [rdx+2]
                cmp     rax, r9
                ja      short loc_1408A4026
                movzx   ecx, word ptr [rbp+var_20+2]
                add     ecx, edx
                cmp     ecx, r9d
                jbe     short loc_1408A4020
                lea     eax, [r9-2]
                sub     ax, dx
                jmp     short loc_1408A4033
; ---------------------------------------------------------------------------

loc_1408A4020:                          ; CODE XREF: sub_1408A3FC0+55↑j
                movzx   eax, word ptr [rbp+var_20]
                jmp     short loc_1408A4037
; ---------------------------------------------------------------------------

loc_1408A4026:                          ; CODE XREF: sub_1408A3FC0+4A↑j
                mov     eax, 0EEh
                mov     word ptr [rbp+var_10], ax
                movzx   eax, r8w

loc_1408A4033:                          ; CODE XREF: sub_1408A3FC0+5E↑j
                mov     word ptr [rbp+var_20], ax

loc_1408A4037:                          ; CODE XREF: sub_1408A3FC0+64↑j
                neg     ax
                mov     [rsp+50h+var_30], r8d
                lea     rax, [rbp+var_20]
                mov     r8d, 0C0040038h
                sbb     rcx, rcx
                lea     rdx, [rbp+var_10]
                and     rcx, rax
                xor     r9d, r9d
                call    sub_1408A367C
                mov     rbx, [rsp+50h+arg_0]
                add     rsp, 50h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A3FC0   endp

algn_1408A4067:                         ; DATA XREF: .pdata:000000014011D2E8↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A4070   proc near               ; CODE XREF: sub_1408A3170+19↑p
                                        ; DATA XREF: .pdata:000000014011D2F4↑o

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_18          = qword ptr -18h

; __unwind { // __GSHandlerCheck
                push    rbx
                sub     rsp, 40h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+48h+var_18], rax
                mov     rbx, cs:qword_140C44D00
                mov     ecx, 1
                and     [rsp+48h+var_24], 0
                and     [rsp+48h+var_20], 0
                mov     [rsp+48h+var_28], 31h ; '1'
                call    sub_14067926C
                lea     r8, [rsp+48h+var_28]
                mov     rcx, rbx
                lea     rdx, sub_14076D620
                call    sub_140719A30
                mov     ecx, 1
                call    sub_140679140
                mov     rcx, [rsp+48h+var_18]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 40h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A4070
sub_1408A4070   endp

algn_1408A40DA:                         ; DATA XREF: .pdata:000000014011D2F4↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=70h

sub_1408A40E0   proc near               ; CODE XREF: IoGetDeviceInterfacePropertyData+30↑p
                                        ; DATA XREF: .pdata:000000014011D300↑o

var_150         = qword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = dword ptr -130h
var_128         = qword ptr -128h
var_120         = dword ptr -120h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F0          = byte ptr -0F0h
var_40          = qword ptr -40h
arg_18          = qword ptr  28h
arg_20          = dword ptr  30h
arg_28          = qword ptr  38h
arg_30          = qword ptr  40h
arg_38          = qword ptr  48h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-40h]
                sub     rsp, 140h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+70h+var_40], rax
                mov     r14, [rbp+70h+arg_28]
                mov     ebx, r8d
                mov     r15, [rbp+70h+arg_30]
                mov     rsi, rdx
                mov     r12, [rbp+70h+arg_38]
                mov     rdi, rcx
                xor     edx, edx
                lea     rcx, [rbp+70h+var_F0]
                mov     r8d, 0AAh
                call    memset
                xor     r13d, r13d
                mov     [rsp+170h+var_108], r13
                mov     [rsp+170h+var_110], r13
                test    rdi, rdi
                jz      loc_1408A4249
                cmp     [rdi+8], r13
                jz      loc_1408A4249
                cmp     [rdi], r13w
                jz      loc_1408A4249
                test    ebx, ebx
                jz      short loc_1408A4194
                lea     rax, [rbp+70h+var_F0]
                mov     ecx, ebx
                mov     [rsp+170h+var_100], rax
                lea     rdx, [rsp+170h+var_108]
                mov     eax, 0AAh
                mov     word ptr [rsp+170h+var_108+2], ax
                call    RtlLCIDToCultureName
                test    al, al
                jnz     short loc_1408A4199
                mov     ebx, 0C0000001h
                jmp     loc_1408A424E
; ---------------------------------------------------------------------------

loc_1408A4194:                          ; CODE XREF: sub_1408A40E0+85↑j
                mov     [rsp+170h+var_100], r13

loc_1408A4199:                          ; CODE XREF: sub_1408A40E0+A8↑j
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C45240
                call    ExAcquireResourceSharedLite
                mov     r8, rdi
                lea     rcx, [rsp+170h+var_110]
                xor     edx, edx
                call    sub_1406CC09C
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A4213
                mov     eax, [rbp+70h+arg_20]
                xor     r9d, r9d
                mov     rdx, [rsp+170h+var_110]
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+170h+var_120], r13d
                mov     [rsp+170h+var_128], r15
                lea     r8d, [r9+3]
                mov     [rsp+170h+var_130], eax
                mov     rax, [rsp+170h+var_100]
                mov     [rsp+170h+var_138], r14
                mov     [rsp+170h+var_140], r12
                mov     [rsp+170h+var_148], rsi
                mov     [rsp+170h+var_150], rax
                call    sub_1406CC6BC
                mov     ebx, eax

loc_1408A4213:                          ; CODE XREF: sub_1408A40E0+EA↑j
                mov     rcx, [rsp+170h+var_110]
                mov     rdx, rdi
                call    sub_1406CA2D4
                lea     rcx, unk_140C45240
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                cmp     ebx, 0C0000225h
                jnz     short loc_1408A424E
                mov     ebx, 0C0000034h
                jmp     short loc_1408A424E
; ---------------------------------------------------------------------------

loc_1408A4249:                          ; CODE XREF: sub_1408A40E0+69↑j
                                        ; sub_1408A40E0+73↑j ...
                mov     ebx, 0C000000Dh

loc_1408A424E:                          ; CODE XREF: sub_1408A40E0+AF↑j
                                        ; sub_1408A40E0+160↑j ...
                mov     eax, ebx
                mov     rcx, [rbp+70h+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+170h+arg_18]
                add     rsp, 140h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A40E0
sub_1408A40E0   endp

algn_1408A4278:                         ; DATA XREF: .pdata:000000014011D300↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A4280   proc near               ; CODE XREF: sub_140772A60+E33AF↑p
                                        ; DATA XREF: .pdata:000000014011D30C↑o

var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_18          = dword ptr -18h
arg_0           = dword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_0], ecx
                push    rdi
                sub     rsp, 40h
                mov     rbx, rdx
                cmp     ecx, 0FFFFFFFFh
                jnz     short loc_1408A42BA
                xor     eax, eax
                lea     rcx, qword_14002DFD0
                mov     [rsp+48h+var_18], eax
                xor     r9d, r9d
                mov     [rsp+48h+var_20], eax
                mov     [rsp+48h+var_28], rax
                lea     r8d, [rax+10h]
                call    ZwUpdateWnfStateData
                jmp     short loc_1408A42F9
; ---------------------------------------------------------------------------

loc_1408A42BA:                          ; CODE XREF: sub_1408A4280+14↑j
                call    sub_140261EA0
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jz      short loc_1408A42F9
                mov     [rsp+48h+var_18], eax
                lea     rcx, qword_14002E148
                mov     [rsp+48h+var_20], eax
                xor     r9d, r9d
                lea     rax, [rsp+48h+arg_0]
                mov     rdx, rbx
                mov     [rsp+48h+var_28], rax
                lea     r8d, [r9+10h]
                call    ZwUpdateWnfStateData
                mov     rcx, rdi
                call    PsDereferenceSiloContext

loc_1408A42F9:                          ; CODE XREF: sub_1408A4280+38↑j
                                        ; sub_1408A4280+47↑j
                mov     rbx, [rsp+48h+arg_8]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4280   endp

byte_1408A4305  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D30C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A430C   proc near               ; CODE XREF: sub_140772A60+E339D↑p
                                        ; DATA XREF: .pdata:000000014011D318↑o

var_78          = qword ptr -78h
var_70          = dword ptr -70h
var_68          = dword ptr -68h
var_50          = dword ptr -50h
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = xmmword ptr -18h
var_8           = qword ptr -8
arg_18          = qword ptr  28h

; __unwind { // __GSHandlerCheck
                mov     r11, rsp
                mov     [r11+20h], rbx
                push    rbp
                lea     rbp, [r11-5Fh]
                sub     rsp, 90h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_8], rax
                and     qword ptr [r11-60h], 0
                xorps   xmm0, xmm0
                and     [rbp+57h+var_40], 0
                mov     rax, r8
                and     [rbp+57h+var_44], 0
                xor     r9d, r9d
                mov     [rbp+57h+var_50], ecx
                mov     rbx, rdx
                lea     rcx, [rbp+57h+var_40]
                mov     rdx, rax
                mov     [r11-68h], rcx
                mov     rcx, cs:qword_140CF4378
                lea     r8d, [r9+11h]
                mov     byte ptr [rsp+90h+var_68], 0
                movups  [rbp+57h+var_38], xmm0
                mov     [rsp+90h+var_70], 20019h
                movups  [rbp+57h+var_28], xmm0
                movups  [rbp+57h+var_18], xmm0
                call    sub_14062C9F8
                test    eax, eax
                js      loc_1408A442A
                mov     rcx, [rbp+57h+var_40]
                lea     rax, [rbp+57h+var_48]
                lea     r9, [rbp+57h+var_28]
                mov     qword ptr [rsp+90h+var_70], rax
                lea     r8, [rbp+57h+var_44]
                mov     [rbp+57h+var_48], 20h ; ' '
                lea     rdx, aPortname  ; "PortName"
                call    sub_14062CB38
                test    eax, eax
                js      short loc_1408A442A
                movups  xmm0, xmmword ptr [rbx]
                mov     ecx, [rbp+57h+var_50]
                movdqu  [rbp+57h+var_38], xmm0
                cmp     ecx, 0FFFFFFFFh
                jnz     short loc_1408A43EB
                and     dword ptr [rsp+30h], 0
                lea     rdx, [rbp+57h+var_38]
                and     [rsp+90h+var_68], 0
                lea     rcx, qword_14002E038
                and     qword ptr [rsp+90h+var_70], 0
                xor     r9d, r9d
                lea     r8d, [r9+30h]
                call    ZwUpdateWnfStateData
                jmp     short loc_1408A442A
; ---------------------------------------------------------------------------

loc_1408A43EB:                          ; CODE XREF: sub_1408A430C+B4↑j
                call    sub_140261EA0
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408A442A
                and     dword ptr [rsp+30h], 0
                lea     rax, [rbp+57h+var_50]
                and     [rsp+90h+var_68], 0
                lea     rdx, [rbp+57h+var_38]
                xor     r9d, r9d
                mov     qword ptr [rsp+90h+var_70], rax
                lea     rcx, qword_14002DFD8
                lea     r8d, [r9+30h]
                call    ZwUpdateWnfStateData
                mov     rcx, rbx
                call    PsDereferenceSiloContext

loc_1408A442A:                          ; CODE XREF: sub_1408A430C+74↑j
                                        ; sub_1408A430C+A4↑j ...
                mov     rcx, [rbp+57h+var_40]
                test    rcx, rcx
                jz      short loc_1408A4438
                call    ZwClose

loc_1408A4438:                          ; CODE XREF: sub_1408A430C+125↑j
                mov     rcx, [rbp+57h+var_8]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+90h+arg_18]
                add     rsp, 90h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A430C
sub_1408A430C   endp

byte_1408A4456  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D318↑o

; =============== S U B R O U T I N E =======================================


sub_1408A445C   proc near               ; CODE XREF: sub_14069F59C+178263↑p
                                        ; DATA XREF: .pdata:000000014011D324↑o

var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_18          = dword ptr -18h

                push    rbx
                sub     rsp, 40h
                and     [rsp+48h+var_18], 0
                mov     rbx, rcx
                and     [rsp+48h+var_20], 0
                lea     rcx, qword_14002E010
                and     [rsp+48h+var_28], 0
                xor     r9d, r9d
                xor     r8d, r8d
                xor     edx, edx
                call    ZwUpdateWnfStateData
                test    eax, eax
                js      short loc_1408A44A5
                test    cs:byte_140C1313A, 8
                jz      short loc_1408A44A5
                mov     r9, rbx
                lea     rdx, qword_140033C20
                call    sub_14050DC14

loc_1408A44A5:                          ; CODE XREF: sub_1408A445C+2F↑j
                                        ; sub_1408A445C+38↑j
                add     rsp, 40h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A445C   endp

byte_1408A44AC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D324↑o

; =============== S U B R O U T I N E =======================================


sub_1408A44B4   proc near               ; CODE XREF: sub_14077C8E4+D26D0↑p
                                        ; DATA XREF: .pdata:000000014011D330↑o

var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_18          = dword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 40h
                movzx   ebx, word ptr [rdx]
                mov     rsi, rdx
                mov     rbp, rcx
                add     ebx, 12h
                mov     edx, ebx
                mov     ecx, 1
                mov     r8d, 20207050h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A44F5
                mov     eax, 0C0000017h
                jmp     short loc_1408A4552
; ---------------------------------------------------------------------------

loc_1408A44F5:                          ; CODE XREF: sub_1408A44B4+38↑j
                movups  xmm0, xmmword ptr [rbp+0]
                lea     rcx, [rdi+12h]
                movdqu  xmmword ptr [rax], xmm0
                movzx   eax, word ptr [rsi]
                mov     [rdi+10h], ax
                movzx   r8d, word ptr [rsi]
                mov     rdx, [rsi+8]
                call    memmove
                mov     r8d, 1000h
                lea     rcx, qword_14002E138
                cmp     ebx, r8d
                mov     rdx, rdi
                cmovb   r8d, ebx
                and     [rsp+48h+var_18], 0
                and     [rsp+48h+var_20], 0
                xor     r9d, r9d
                and     [rsp+48h+var_28], 0
                call    ZwUpdateWnfStateData
                xor     edx, edx
                mov     rcx, rdi
                mov     ebx, eax
                call    ExFreePoolWithTag
                mov     eax, ebx

loc_1408A4552:                          ; CODE XREF: sub_1408A44B4+3F↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     rbp, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A44B4   endp

algn_1408A4568:                         ; DATA XREF: .pdata:000000014011D330↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A4570   proc near               ; CODE XREF: sub_14074F9B4+EAB90↑p
                                        ; DATA XREF: .pdata:000000014011D33C↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r14
                sub     rsp, 20h
                xor     esi, esi
                xor     ebp, ebp
                mov     rdi, rcx
                mov     rbx, rcx
                test    rcx, rcx
                jz      loc_1408A4623

loc_1408A459C:                          ; CODE XREF: sub_1408A4570+49↓j
                mov     rcx, [rbx+1A0h]
                test    rcx, rcx
                jz      short loc_1408A45AF
                call    sub_14074CF5C
                add     ebp, eax

loc_1408A45AF:                          ; CODE XREF: sub_1408A4570+36↑j
                mov     rbx, [rbx+218h]
                test    rbx, rbx
                jnz     short loc_1408A459C
                test    ebp, ebp
                jz      short loc_1408A4623
                mov     edx, ebp
                lea     ecx, [rbx+1]
                mov     r8d, 20207050h
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jz      short loc_1408A4623
                and     [rax], ebx
                lea     r14, [rax+4]

loc_1408A45DD:                          ; CODE XREF: sub_1408A4570+B1↓j
                mov     rbp, [rdi+1A0h]
                test    rbp, rbp
                jz      short loc_1408A4617
                mov     rcx, rbp
                call    sub_14074CF5C
                test    eax, eax
                jz      short loc_1408A4617
                add     eax, 0FFFFFFFCh
                lea     rdx, [rbp+4]
                mov     r8d, eax
                mov     rcx, r14
                mov     ebx, eax
                call    memmove
                mov     rax, [rdi+1A0h]
                add     r14, rbx
                mov     ecx, [rax]
                add     [rsi], ecx

loc_1408A4617:                          ; CODE XREF: sub_1408A4570+77↑j
                                        ; sub_1408A4570+83↑j
                mov     rdi, [rdi+218h]
                test    rdi, rdi
                jnz     short loc_1408A45DD

loc_1408A4623:                          ; CODE XREF: sub_1408A4570+26↑j
                                        ; sub_1408A4570+4D↑j ...
                mov     rbx, [rsp+28h+arg_0]
                mov     rax, rsi
                mov     rsi, [rsp+28h+arg_10]
                mov     rbp, [rsp+28h+arg_8]
                mov     rdi, [rsp+28h+arg_18]
                add     rsp, 20h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4570   endp

algn_1408A4642:                         ; DATA XREF: .pdata:000000014011D33C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A4650   proc near               ; DATA XREF: .pdata:000000014011D348↑o
                                        ; sub_1407A183C+5E↑o ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, r8
                call    RtlCmDecodeMemIoResource
                mov     [rbx], rax
                xor     eax, eax
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4650   endp

algn_1408A466A:                         ; DATA XREF: .pdata:000000014011D348↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A4670   proc near               ; CODE XREF: sub_1408A4770+30↓p
                                        ; DATA XREF: .pdata:000000014011D354↑o

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = dword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+18h], rbp
                mov     [rax+20h], rsi
                push    rdi
                sub     rsp, 30h
                xor     ebp, ebp
                mov     rsi, rdx
                mov     [rax+10h], ebp
                lea     rax, [rax+10h]
                mov     [rdx], bpl
                xor     r9d, r9d
                xor     r8d, r8d
                mov     [rsp+38h+var_18], rax
                lea     edx, [rbp+1]
                mov     rbx, rcx
                call    IoGetDeviceProperty
                cmp     eax, 0C0000023h
                jnz     loc_1408A4739
                mov     edx, [rsp+38h+arg_8]
                lea     ecx, [rbp+1]
                mov     r8d, 20207050h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A46D5
                mov     eax, 0C000009Ah
                jmp     short loc_1408A4739
; ---------------------------------------------------------------------------

loc_1408A46D5:                          ; CODE XREF: sub_1408A4670+5C↑j
                mov     r8d, [rsp+38h+arg_8]
                lea     rax, [rsp+38h+arg_8]
                mov     r9, rdi
                mov     [rsp+38h+var_18], rax
                mov     edx, 1
                mov     rcx, rbx
                call    IoGetDeviceProperty
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A472D
                mov     rbx, rdi
                cmp     [rdi], bp
                jz      short loc_1408A472B

loc_1408A4702:                          ; CODE XREF: sub_1408A4670+EF↓j
                lea     rdx, aAcpiPnp0a03 ; "ACPI\\PNP0A03"
                mov     rcx, rbx
                call    _wcsicmp
                test    eax, eax
                jz      short loc_1408A4728
                lea     rdx, aAcpiPnp0a08 ; "ACPI\\PNP0A08"
                mov     rcx, rbx
                call    _wcsicmp
                test    eax, eax
                jnz     short loc_1408A4753

loc_1408A4728:                          ; CODE XREF: sub_1408A4670+A3↑j
                mov     byte ptr [rsi], 1

loc_1408A472B:                          ; CODE XREF: sub_1408A4670+90↑j
                                        ; sub_1408A4670+F1↓j
                mov     ebx, ebp

loc_1408A472D:                          ; CODE XREF: sub_1408A4670+88↑j
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag
                mov     eax, ebx

loc_1408A4739:                          ; CODE XREF: sub_1408A4670+3E↑j
                                        ; sub_1408A4670+63↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     rbp, [rsp+38h+arg_10]
                mov     rsi, [rsp+38h+arg_18]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408A474F:                          ; CODE XREF: sub_1408A4670+E6↓j
                add     rbx, 2

loc_1408A4753:                          ; CODE XREF: sub_1408A4670+B6↑j
                cmp     [rbx], bp
                jnz     short loc_1408A474F
                add     rbx, 2
                cmp     [rbx], bp
                jnz     short loc_1408A4702
                jmp     short loc_1408A472B
sub_1408A4670   endp

; ---------------------------------------------------------------------------
algn_1408A4763:                         ; DATA XREF: .pdata:000000014011D354↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A4770   proc near               ; DATA XREF: .pdata:000000014011D360↑o
                                        ; sub_1407A18D4+5E↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = byte ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+20h], rsi
                push    rdi
                sub     rsp, 20h
                mov     rbx, rdx
                mov     byte ptr [rax+18h], 0
                call    sub_140868A30
                test    eax, eax
                js      loc_1408A4861
                mov     rcx, [rbx]
                lea     rdx, [rsp+28h+arg_10]
                call    sub_1408A4670
                mov     r11d, eax
                test    eax, eax
                js      loc_1408A485F
                cmp     [rsp+28h+arg_10], 0
                jz      loc_1408A485F
                mov     rdx, [rbx+10h]
                xor     r9d, r9d
                mov     rcx, [rbx+18h]
                mov     r8d, [rdx]
                mov     r10, [rcx]
                test    r8d, r8d
                jz      short loc_1408A4836

loc_1408A47D1:                          ; CODE XREF: sub_1408A4770+C0↓j
                mov     rdx, cs:qword_140C50930
                lea     rsi, [r9+r9*2]
                mov     rdi, [r10+rsi*8+8]
                mov     rbp, [r10+rsi*8+10h]
                test    rdx, rdx
                jz      short loc_1408A482A
                mov     eax, [rdx+4]
                lea     rcx, [rdx+8]
                shl     rax, 5
                add     rdx, 8
                add     rdx, rax
                jmp     short loc_1408A4825
; ---------------------------------------------------------------------------

loc_1408A47FF:                          ; CODE XREF: sub_1408A4770+B8↓j
                mov     al, [rcx+1]
                sub     al, 3
                test    al, 0FBh
                jnz     short loc_1408A4821
                mov     rax, [rcx+10h]
                cmp     rdi, rax
                jbe     short loc_1408A481A
                cmp     [rcx+18h], rdi
                jb      short loc_1408A4821
                cmp     rdi, rax

loc_1408A481A:                          ; CODE XREF: sub_1408A4770+9F↑j
                jnb     short loc_1408A483E
                cmp     rbp, rax
                jnb     short loc_1408A483E

loc_1408A4821:                          ; CODE XREF: sub_1408A4770+96↑j
                                        ; sub_1408A4770+A5↑j
                add     rcx, 20h ; ' '

loc_1408A4825:                          ; CODE XREF: sub_1408A4770+8D↑j
                cmp     rcx, rdx
                jb      short loc_1408A47FF

loc_1408A482A:                          ; CODE XREF: sub_1408A4770+79↑j
                inc     r9d

loc_1408A482D:                          ; CODE XREF: sub_1408A4770+ED↓j
                cmp     r9d, r8d
                jb      short loc_1408A47D1
                mov     rdx, [rbx+10h]

loc_1408A4836:                          ; CODE XREF: sub_1408A4770+5F↑j
                mov     [rdx], r8d
                mov     eax, r11d
                jmp     short loc_1408A4861
; ---------------------------------------------------------------------------

loc_1408A483E:                          ; CODE XREF: sub_1408A4770:loc_1408A481A↑j
                                        ; sub_1408A4770+AF↑j
                dec     r8d
                lea     rcx, [r8+r8*2]
                movups  xmm0, xmmword ptr [r10+rcx*8]
                movups  xmmword ptr [r10+rsi*8], xmm0
                movsd   xmm1, qword ptr [r10+rcx*8+10h]
                movsd   qword ptr [r10+rsi*8+10h], xmm1
                jmp     short loc_1408A482D
; ---------------------------------------------------------------------------

loc_1408A485F:                          ; CODE XREF: sub_1408A4770+3A↑j
                                        ; sub_1408A4770+45↑j
                xor     eax, eax

loc_1408A4861:                          ; CODE XREF: sub_1408A4770+22↑j
                                        ; sub_1408A4770+CC↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_18]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4770   endp

algn_1408A4877:                         ; DATA XREF: .pdata:000000014011D360↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A4880   proc near               ; DATA XREF: .pdata:000000014011D36C↑o
                                        ; sub_1407A183C+34↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 20h
                mov     rdi, [rdx]
                mov     rbx, rdx
                mov     [rsp+28h+arg_0], rdi
                mov     rsi, rcx

loc_1408A489D:                          ; CODE XREF: sub_1408A4880+57↓j
                mov     rax, [rbx+20h]
                lea     r8, [rsp+28h+arg_0]
                mov     r10, [rbx+28h]
                mov     rdx, rdi
                mov     r9, [rax+20h]
                mov     ecx, [r10+24h]
                call    sub_1407C6844
                mov     rcx, [rsi+30h]
                test    al, al
                jz      short loc_1408A48D9
                mov     rdi, [rsp+28h+arg_0]
                mov     rdx, rdi
                lea     r8, [rdi-1]
                add     r8, [r10+10h]
                call    RtlDeleteRange
                jmp     short loc_1408A489D
; ---------------------------------------------------------------------------

loc_1408A48D9:                          ; CODE XREF: sub_1408A4880+40↑j
                mov     r8, [rbx+8]
                mov     rdx, [rbx]
                call    RtlDeleteRange
                mov     rbx, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4880   endp

byte_1408A48F6  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D36C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A48FC   proc near               ; CODE XREF: sub_1408B0BC0+5EC↓p
                                        ; DATA XREF: .pdata:000000014011D378↑o

var_10          = qword ptr -10h
arg_0           = qword ptr  20h
arg_10          = qword ptr  30h
arg_18          = qword ptr  38h

                mov     [rsp-18h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                mov     rbp, rsp
                sub     rsp, 30h
                and     [rbp+arg_10], 0
                lea     r8, [rbp+arg_10]
                and     [rbp+arg_18], 0
                mov     ecx, 1
                and     [rbp+var_10], 0
                mov     rsi, rdx
                call    sub_1406CB5AC
                mov     edi, eax
                test    eax, eax
                js      short loc_1408A4938
                xor     edi, edi
                jmp     loc_1408A4A0E
; ---------------------------------------------------------------------------

loc_1408A4938:                          ; CODE XREF: sub_1408A48FC+33↑j
                cmp     eax, 0C0000034h
                jnz     loc_1408A4A0E
                lea     r8, [rbp+arg_10]
                mov     rdx, rsi
                mov     ecx, 1
                call    sub_140741E64
                mov     edi, eax
                test    eax, eax
                js      loc_1408A4A0E
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     rbx, [rbp+arg_10]
                xor     edx, edx
                mov     rcx, rbx
                call    ExAcquirePushLockExclusiveEx
                or      dword ptr [rbx+20h], 1
                xor     edx, edx
                mov     rcx, rbx
                call    ExReleasePushLockEx
                mov     rcx, gs:188h
                call    sub_14021E1F0
                lea     rcx, [rbp+arg_18]
                call    sub_1406C91CC
                test    eax, eax
                js      short loc_1408A4A0E
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C44120
                call    ExAcquireResourceSharedLite
                mov     r8, [rbp+arg_18]
                lea     r9, [rbp+var_10]
                mov     edx, 1
                mov     rcx, rsi
                call    sub_1406C9DF4
                lea     rcx, unk_140C44120
                mov     ebx, eax
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                test    ebx, ebx
                js      short loc_1408A4A05
                mov     rax, [rbp+var_10]
                test    rax, rax
                jz      short loc_1408A4A05
                or      dword ptr [rax+4], 1

loc_1408A4A05:                          ; CODE XREF: sub_1408A48FC+FA↑j
                                        ; sub_1408A48FC+103↑j
                mov     rcx, [rbp+arg_18]
                call    sub_1406CDB1C

loc_1408A4A0E:                          ; CODE XREF: sub_1408A48FC+37↑j
                                        ; sub_1408A48FC+41↑j ...
                mov     rcx, [rbp+arg_10]
                test    rcx, rcx
                jz      short loc_1408A4A1C
                call    sub_1406CB930

loc_1408A4A1C:                          ; CODE XREF: sub_1408A48FC+119↑j
                mov     rbx, [rsp+30h+arg_0]
                mov     eax, edi
                add     rsp, 30h
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A48FC   endp

algn_1408A4A2C:                         ; DATA XREF: .pdata:000000014011D378↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A4A40   proc near               ; DATA XREF: .pdata:000000014011D384↑o
                                        ; sub_1406CA460+15326E↑o ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rsi, rdx
                mov     rdi, r8
                xor     ebx, ebx
                mov     [r8], bl
                mov     rax, [rdx+8]
                mov     r8, [rdx+10h]
                mov     rdx, [rcx+10h]
                mov     rcx, [rsi]
                call    sub_1404079D0
                mov     ecx, eax
                test    eax, eax
                jz      short loc_1408A4A98
                sub     ecx, 1
                jz      short loc_1408A4A91
                sub     ecx, 1
                jz      short loc_1408A4A95
                cmp     ecx, 1
                jz      short loc_1408A4A8A
                mov     ebx, 0C00000E5h
                jmp     short loc_1408A4A98
; ---------------------------------------------------------------------------

loc_1408A4A8A:                          ; CODE XREF: sub_1408A4A40+41↑j
                mov     ebx, 0C0000240h
                jmp     short loc_1408A4A98
; ---------------------------------------------------------------------------

loc_1408A4A91:                          ; CODE XREF: sub_1408A4A40+37↑j
                mov     byte ptr [rsi+18h], 1

loc_1408A4A95:                          ; CODE XREF: sub_1408A4A40+3C↑j
                mov     byte ptr [rdi], 1

loc_1408A4A98:                          ; CODE XREF: sub_1408A4A40+32↑j
                                        ; sub_1408A4A40+48↑j ...
                mov     rsi, [rsp+28h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4A40   endp

byte_1408A4AAB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D384↑o

; =============== S U B R O U T I N E =======================================


sub_1408A4AB4   proc near               ; CODE XREF: sub_1406CA460+15333A↑p
                                        ; DATA XREF: .pdata:000000014011D390↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 20h
                mov     rsi, rdx
                mov     rdi, r8
                mov     edx, 10h
                mov     rbx, rcx
                mov     r8d, 47706E50h
                lea     ecx, [rdx-0Fh]
                call    ExAllocatePoolWithTag
                xor     ebp, ebp
                mov     [rdi], rax
                test    rax, rax
                jnz     short loc_1408A4AF5
                mov     ebx, 0C000009Ah
                jmp     short loc_1408A4B43
; ---------------------------------------------------------------------------

loc_1408A4AF5:                          ; CODE XREF: sub_1408A4AB4+38↑j
                xorps   xmm0, xmm0
                mov     r8, rax
                mov     rdx, rbx
                mov     ecx, 1
                movups  xmmword ptr [rax], xmm0
                call    sub_1406CB5AC
                mov     ebx, eax
                mov     eax, 80000000h
                lea     ecx, [rbx+rax]
                test    eax, ecx
                jnz     short loc_1408A4B21
                cmp     ebx, 0C0000034h
                jnz     short loc_1408A4B43

loc_1408A4B21:                          ; CODE XREF: sub_1408A4AB4+63↑j
                mov     r8, [rdi]
                mov     rdx, rsi
                add     r8, 8
                mov     ecx, 6
                call    sub_1406CB5AC
                cmp     eax, 0C0000034h
                mov     ebx, eax
                cmovz   ebx, ebp
                test    ebx, ebx
                jns     short loc_1408A4B4E

loc_1408A4B43:                          ; CODE XREF: sub_1408A4AB4+3F↑j
                                        ; sub_1408A4AB4+6B↑j
                mov     rcx, [rdi]
                call    sub_140733E34
                mov     [rdi], rbp

loc_1408A4B4E:                          ; CODE XREF: sub_1408A4AB4+8D↑j
                mov     rbp, [rsp+28h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4AB4   endp

algn_1408A4B66:                         ; DATA XREF: .pdata:000000014011D390↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A4B70   proc near               ; DATA XREF: .pdata:000000014011D39C↑o
                                        ; sub_1407A2E00+10C↑o

var_28          = xmmword ptr -28h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
arg_0           = qword ptr  8
arg_20          = dword ptr  28h
arg_28          = qword ptr  30h
arg_30          = dword ptr  38h

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 40h
                test    rdx, rdx
                jnz     short loc_1408A4B86

loc_1408A4B7F:                          ; CODE XREF: sub_1408A4B70+1E↓j
                                        ; sub_1408A4B70+28↓j
                mov     ecx, 0C000000Dh
                jmp     short loc_1408A4BF8
; ---------------------------------------------------------------------------

loc_1408A4B86:                          ; CODE XREF: sub_1408A4B70+D↑j
                mov     rbx, [rsp+48h+arg_28]
                test    rbx, rbx
                jz      short loc_1408A4B7F
                cmp     [rsp+48h+arg_30], 0
                jnz     short loc_1408A4B7F
                movups  xmm0, xmmword ptr [rdx]
                mov     edi, [rsp+48h+arg_20]
                lea     rdx, [rsp+48h+var_28]
                mov     [rsp+48h+var_18], r8d
                mov     r8d, 20h ; ' '
                movdqu  [rsp+48h+var_28], xmm0
                mov     [rsp+48h+var_10], r9
                mov     [rsp+48h+var_14], edi
                lea     ecx, [r8-10h]
                call    ntoskrnl_19
                mov     ecx, eax
                test    eax, eax
                js      short loc_1408A4BE4
                mov     eax, [rsp+48h+var_14]
                mov     [rbx], eax
                test    eax, eax
                jz      short loc_1408A4BF3
                cmp     eax, edi
                jbe     short loc_1408A4BF8
                mov     ecx, 0C0000023h
                jmp     short loc_1408A4BF8
; ---------------------------------------------------------------------------

loc_1408A4BE4:                          ; CODE XREF: sub_1408A4B70+5D↑j
                cmp     eax, 0C0000023h
                jnz     short loc_1408A4BF3
                mov     eax, [rsp+48h+var_14]
                mov     [rbx], eax
                jmp     short loc_1408A4BF8
; ---------------------------------------------------------------------------

loc_1408A4BF3:                          ; CODE XREF: sub_1408A4B70+67↑j
                                        ; sub_1408A4B70+79↑j
                mov     ecx, 0C0000034h

loc_1408A4BF8:                          ; CODE XREF: sub_1408A4B70+14↑j
                                        ; sub_1408A4B70+6B↑j ...
                mov     rbx, [rsp+48h+arg_0]
                mov     eax, ecx
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4B70   endp

byte_1408A4C06  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D39C↑o

; =============== S U B R O U T I N E =======================================


sub_1408A4C0C   proc near               ; CODE XREF: sub_1406D23A0+14C051↑p
                                        ; DATA XREF: .pdata:000000014011D3A8↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                call    sub_1406CB8D0
                mov     rcx, gs:188h
                mov     rdi, rax
                dec     word ptr [rcx+1E4h]
                mov     dl, 1
                mov     rcx, rax
                call    ExAcquireResourceSharedLite
                lea     rcx, [rdi+68h]
                call    RtlNumberGenericTableElementsAvl
                mov     rcx, rdi
                mov     ebx, eax
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4C0C   endp

algn_1408A4C67:                         ; DATA XREF: .pdata:000000014011D3A8↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A4C70   proc near               ; DATA XREF: .pdata:000000014011D3B4↑o
                                        ; sub_1406CAF50+1528D1↑o
                push    rbx
                sub     rsp, 30h
                mov     rax, [rdx]
                mov     rbx, r8
                test    rax, rax
                jz      short loc_1408A4C9B
                mov     r9, [rdx+8]
                mov     rdx, [rcx+10h]
                mov     r8d, [rcx+1Ch]
                mov     rcx, cs:qword_140CF4378
                call    sub_1404079D0
                jmp     short loc_1408A4C9D
; ---------------------------------------------------------------------------

loc_1408A4C9B:                          ; CODE XREF: sub_1408A4C70+F↑j
                mov     al, 1

loc_1408A4C9D:                          ; CODE XREF: sub_1408A4C70+29↑j
                mov     [rbx], al
                xor     eax, eax
                add     rsp, 30h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4C70   endp

algn_1408A4CA8:                         ; DATA XREF: .pdata:000000014011D3B4↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A4CB0   proc near               ; CODE XREF: sub_1407A3A74:loc_140855E3E↑p
                                        ; DATA XREF: .pdata:000000014011D3C0↑o

var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = qword ptr  20h

                mov     [rsp-8+arg_10], rbx
                push    rbp
                mov     rbp, rsp
                sub     rsp, 60h
                and     [rbp+var_3C], 0
                lea     rax, aRegistryMachin_104 ; "\\Registry\\Machine\\Software\\Policies"...
                and     [rbp+arg_8], 0
                lea     r8, [rbp+var_30]
                xor     ebx, ebx
                mov     [rbp+var_38], rax
                and     [rbp+var_2C], ebx
                lea     rax, [rbp+var_40]
                and     [rbp+var_14], ebx
                lea     rcx, [rbp+arg_0]
                and     [rbp+arg_0], rbx
                xorps   xmm0, xmm0
                and     [rbp+var_28], rbx
                mov     edx, 20019h
                mov     [rbp+var_20], rax
                mov     [rbp+var_40], 980096h
                mov     [rbp+var_30], 30h ; '0'
                mov     [rbp+var_18], 240h
                movdqu  [rbp+var_10], xmm0
                call    ZwOpenKey
                test    eax, eax
                js      short loc_1408A4D7C
                mov     rcx, [rbp+arg_0]
                lea     r9, [rbp+arg_8]
                xor     r8d, r8d
                lea     rdx, aDeviceenumerat ; "DeviceEnumerationPolicy"
                call    sub_140739D08
                mov     r8, [rbp+arg_8]
                test    eax, eax
                js      short loc_1408A4D6D
                mov     rcx, r8
                call    sub_14039A9A8
                test    al, al
                jz      short loc_1408A4D6D
                mov     ecx, [r8+8]
                mov     edx, [rcx+r8]
                test    edx, edx
                jz      short loc_1408A4D68
                sub     edx, 1
                jz      short loc_1408A4D61
                cmp     edx, 1
                jnz     short loc_1408A4D6D
                mov     ebx, edx
                jmp     short loc_1408A4D6D
; ---------------------------------------------------------------------------

loc_1408A4D61:                          ; CODE XREF: sub_1408A4CB0+A6↑j
                mov     ebx, 2
                jmp     short loc_1408A4D6D
; ---------------------------------------------------------------------------

loc_1408A4D68:                          ; CODE XREF: sub_1408A4CB0+A1↑j
                mov     ebx, 3

loc_1408A4D6D:                          ; CODE XREF: sub_1408A4CB0+89↑j
                                        ; sub_1408A4CB0+95↑j ...
                test    r8, r8
                jz      short loc_1408A4D7C
                xor     edx, edx
                mov     rcx, r8
                call    ExFreePoolWithTag

loc_1408A4D7C:                          ; CODE XREF: sub_1408A4CB0+6A↑j
                                        ; sub_1408A4CB0+C0↑j
                mov     rcx, [rbp+arg_0]
                cmp     rcx, 0FFFFFFFFFFFFFFFFh
                jz      short loc_1408A4D8B
                call    ZwClose

loc_1408A4D8B:                          ; CODE XREF: sub_1408A4CB0+D4↑j
                mov     eax, ebx
                mov     rbx, [rsp+60h+arg_10]
                add     rsp, 60h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4CB0   endp

byte_1408A4D9C  db 14h dup(0CCh)        ; DATA XREF: .pdata:000000014011D3C0↑o

; =============== S U B R O U T I N E =======================================


sub_1408A4DB0   proc near               ; DATA XREF: .pdata:000000014011D3CC↑o
                                        ; sub_140A55218+38↓o
                sub     rsp, 28h
                mov     rcx, rdx
                mov     edx, 47706E50h
                call    ExFreePoolWithTag
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4DB0   endp

algn_1408A4DC7:                         ; DATA XREF: .pdata:000000014011D3CC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A4DD0   proc near               ; CODE XREF: sub_140A54474+8A5↓p
                                        ; DATA XREF: .pdata:000000014011D3D8↑o
                sub     rsp, 28h
                lea     rcx, a00000000000000_1 ; "{00000000-0000-0000-FFFF-FFFFFFFFFFFF}"
                call    sub_140755998
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A4DD0   endp

algn_1408A4DE6:                         ; DATA XREF: .pdata:000000014011D3D8↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A4DF0   proc near               ; DATA XREF: .pdata:000000014011D3E4↑o
                                        ; sub_1408A5058+6D↓o

var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = dword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = dword ptr -0C0h
var_B0          = dword ptr -0B0h
var_AC          = dword ptr -0ACh
var_A8          = dword ptr -0A8h
var_A4          = dword ptr -0A4h
var_A0          = xmmword ptr -0A0h
var_90          = byte ptr -90h
var_40          = qword ptr -40h
arg_18          = qword ptr  28h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-27h]
                sub     rsp, 0E0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_40], rax
                xor     eax, eax
                xorps   xmm0, xmm0
                mov     esi, eax
                mov     [rbp+57h+var_AC], eax
                mov     r14b, al
                mov     [rbp+57h+var_B0], eax
                movups  [rbp+57h+var_A0], xmm0
                mov     edi, eax
                mov     [rbp+57h+var_A8], eax
                mov     [rbp+57h+var_A4], eax
                mov     r15, r8
                mov     r12, rdx
                mov     r13, rcx
                mov     rbx, rdx

loc_1408A4E42:                          ; CODE XREF: sub_1408A4DF0+1A0↓j
                mov     rcx, rbx
                call    sub_140711704
                test    al, al
                jnz     loc_1408A4FA2
                mov     rdx, rbx
                lea     rcx, [rbp+57h+var_A0]
                call    RtlInitUnicodeStringEx
                mov     esi, eax
                test    eax, eax
                js      loc_1408A5015
                mov     edx, 746C6644h
                lea     rcx, [rbp+57h+var_A0]
                call    sub_14067919C
                test    rax, rax
                jnz     loc_1408A4F9A
                cmp     rbx, r12
                jz      short loc_1408A4EF5
                and     dword ptr [rsp+110h+var_D8], eax
                mov     r9d, 25h ; '%'
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+57h+var_B0]
                mov     [rsp+110h+var_E0], rax
                xor     r8d, r8d
                lea     rax, [rbp+57h+var_90]
                mov     [rbp+57h+var_B0], 4Eh ; 'N'
                mov     [rsp+110h+var_E8], rax
                mov     rdx, rbx
                lea     rax, [rbp+57h+var_AC]
                mov     [rsp+110h+var_F0], rax
                call    sub_14062BA8C
                mov     esi, eax
                test    eax, eax
                js      loc_1408A5015
                cmp     [rbp+57h+var_AC], 1
                jnz     loc_1408A4FA2
                cmp     [rbp+57h+var_B0], 4Eh ; 'N'
                jnz     loc_1408A4FA2
                mov     rdx, [r15+8]
                lea     rcx, [rbp+57h+var_90]
                call    _wcsicmp
                test    eax, eax
                jnz     loc_1408A4FA2

loc_1408A4EF5:                          ; CODE XREF: sub_1408A4DF0+92↑j
                xor     esi, esi
                test    rdi, rdi
                jnz     short loc_1408A4F1B
                mov     edx, 190h
                lea     ecx, [rsi+1]
                mov     r8d, 47706E50h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jz      loc_1408A5027

loc_1408A4F1B:                          ; CODE XREF: sub_1408A4DF0+10A↑j
                mov     [rsp+110h+var_C0], esi
                lea     rax, [rbp+57h+var_A4]
                mov     [rsp+110h+var_C8], rax
                xor     r9d, r9d
                mov     [rsp+110h+var_D0], 190h
                lea     rax, [rbp+57h+var_A8]
                mov     [rsp+110h+var_D8], rdi
                mov     rdx, rbx
                mov     [rsp+110h+var_E0], rax
                mov     rcx, r13
                lea     rax, qword_14000B128
                mov     [rsp+110h+var_E8], rax
                lea     r8d, [r9+1]
                mov     [rsp+110h+var_F0], rsi
                call    sub_1406CC6BC
                xor     ebx, ebx
                mov     esi, eax
                test    eax, eax
                js      loc_1408A5015
                cmp     [rbp+57h+var_A8], 12h
                jnz     loc_1408A5015
                mov     [rdi+18Eh], bx
                mov     rcx, rdi
                mov     rdx, [r15]
                call    _wcsicmp
                test    eax, eax
                jz      short loc_1408A4F95
                mov     rbx, rdi
                jmp     loc_1408A4E42
; ---------------------------------------------------------------------------

loc_1408A4F95:                          ; CODE XREF: sub_1408A4DF0+19B↑j
                mov     r14b, 1
                jmp     short loc_1408A4FA2
; ---------------------------------------------------------------------------

loc_1408A4F9A:                          ; CODE XREF: sub_1408A4DF0+89↑j
                mov     rcx, rax
                call    PsDereferenceSiloContext

loc_1408A4FA2:                          ; CODE XREF: sub_1408A4DF0+5C↑j
                                        ; sub_1408A4DF0+E0↑j ...
                xor     r13d, r13d
                test    esi, esi
                js      short loc_1408A5015
                test    r14b, r14b
                jz      short loc_1408A5015
                mov     edx, 1A0h
                lea     ecx, [r13+1]
                mov     r8d, 47706E50h
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408A5015
                lea     rcx, [rax+10h]
                mov     r8, r12
                mov     edx, 190h
                call    sub_1402F1C38
                test    eax, eax
                js      short loc_1408A5003
                lea     rax, [r15+10h]
                mov     rcx, [rax+8]
                cmp     [rcx], rax
                jz      short loc_1408A4FF2
                lea     ecx, [r13+3]
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408A4FF2:                          ; CODE XREF: sub_1408A4DF0+1FA↑j
                mov     [rbx], rax
                mov     [rbx+8], rcx
                mov     [rcx], rbx
                mov     [rax+8], rbx
                mov     rbx, r13

loc_1408A5003:                          ; CODE XREF: sub_1408A4DF0+1ED↑j
                test    rbx, rbx
                jz      short loc_1408A5015
                mov     edx, 47706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408A5015:                          ; CODE XREF: sub_1408A4DF0+72↑j
                                        ; sub_1408A4DF0+D6↑j ...
                test    rdi, rdi
                jz      short loc_1408A5027
                mov     edx, 47706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408A5027:                          ; CODE XREF: sub_1408A4DF0+125↑j
                                        ; sub_1408A4DF0+228↑j
                xor     eax, eax
                mov     rcx, [rbp+57h+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+110h+arg_18]
                add     rsp, 0E0h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A4DF0
sub_1408A4DF0   endp

algn_1408A5051:                         ; DATA XREF: .pdata:000000014011D3E4↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A5058   proc near               ; CODE XREF: sub_14075529C+E9C4F↑p
                                        ; DATA XREF: .pdata:000000014011D3F0↑o

var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = dword ptr -0A8h
var_A0          = dword ptr -0A0h
var_9C          = dword ptr -9Ch
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_70          = byte ptr -70h
var_20          = qword ptr -20h
var_10          = byte ptr -10h
arg_10          = qword ptr  20h
arg_18          = qword ptr  28h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_10], rbx
                mov     [rsp-8+arg_18], rsi
                push    rbp
                push    rdi
                push    r14
                lea     rbp, [rsp-47h]
                sub     rsp, 0D0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_20], rax
                mov     rsi, rdx
                mov     [rbp+57h+var_98], rcx
                lea     rax, [rbp+57h+var_88]
                mov     [rbp+57h+var_90], rdx
                mov     [rbp+57h+var_80], rax
                lea     rdx, a00000000000000_1 ; "{00000000-0000-0000-FFFF-FFFFFFFFFFFF}"
                lea     rax, [rbp+57h+var_88]
                xor     edi, edi
                and     [rbp+57h+var_9C], edi
                mov     rcx, rsi
                and     [rbp+57h+var_A0], edi
                mov     [rbp+57h+var_88], rax
                call    _wcsicmp
                test    eax, eax
                jz      loc_1408A51B6
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+57h+var_98]
                lea     r9, sub_1408A4DF0
                mov     [rsp+0E0h+var_C0], rax
                xor     r8d, r8d
                mov     rdx, rsi
                call    sub_140977468
                mov     rbx, [rbp+57h+var_88]
                lea     rax, [rbp+57h+var_88]
                cmp     rbx, rax
                jz      loc_1408A51BA

loc_1408A50ED:                          ; CODE XREF: sub_1408A5058+158↓j
                and     [rsp+0E0h+var_A8], 0
                lea     rax, [rbp+57h+var_A0]
                mov     rcx, cs:qword_140CF4378
                lea     r14, [rbx+10h]
                mov     [rsp+0E0h+var_B0], rax
                mov     r9d, 25h ; '%'
                lea     rax, [rbp+57h+var_70]
                mov     [rbp+57h+var_A0], 4Eh ; 'N'
                mov     [rsp+0E0h+var_B8], rax
                xor     r8d, r8d
                lea     rax, [rbp+57h+var_9C]
                mov     rdx, r14
                mov     [rsp+0E0h+var_C0], rax
                call    sub_14062BA8C
                mov     edi, eax
                cmp     eax, 0C0000225h
                jz      short loc_1408A51A4
                cmp     [rbp+57h+var_9C], 1
                jnz     short loc_1408A51A4
                cmp     [rbp+57h+var_A0], 4Eh ; 'N'
                jnz     short loc_1408A51A4
                test    eax, eax
                js      short loc_1408A51B6
                mov     rcx, cs:qword_140CF4378
                lea     r8, [rbp+57h+var_70]
                mov     r9, r14
                mov     rdx, rsi
                call    sub_14072B15C
                mov     edi, eax
                test    eax, eax
                js      short loc_1408A51B6
                and     [rsp+0E0h+var_A8], 0
                mov     r9d, 25h ; '%'
                and     dword ptr [rsp+0E0h+var_B0], 0
                xor     r8d, r8d
                and     [rsp+0E0h+var_B8], 0
                mov     rdx, r14
                mov     rcx, cs:qword_140CF4378
                mov     dword ptr [rsp+0E0h+var_C0], 1
                call    sub_1407358C8
                mov     edi, eax
                cmp     eax, 0C0000225h
                jz      short loc_1408A51A4
                test    eax, eax
                js      short loc_1408A51B6
                jmp     short loc_1408A51A6
; ---------------------------------------------------------------------------

loc_1408A51A4:                          ; CODE XREF: sub_1408A5058+DF↑j
                                        ; sub_1408A5058+E5↑j ...
                xor     edi, edi

loc_1408A51A6:                          ; CODE XREF: sub_1408A5058+14A↑j
                mov     rbx, [rbx]
                lea     rax, [rbp+57h+var_88]
                cmp     rbx, rax
                jnz     loc_1408A50ED

loc_1408A51B6:                          ; CODE XREF: sub_1408A5058+5C↑j
                                        ; sub_1408A5058+EF↑j ...
                mov     rbx, [rbp+57h+var_88]

loc_1408A51BA:                          ; CODE XREF: sub_1408A5058+8F↑j
                lea     rax, [rbp+57h+var_88]
                cmp     rbx, rax
                jz      short loc_1408A51F8
                lea     rax, [rbp+57h+var_88]
                cmp     [rbx+8], rax
                jnz     short loc_1408A51F1
                mov     rax, [rbx]
                cmp     [rax+8], rbx
                jnz     short loc_1408A51F1
                lea     rcx, [rbp+57h+var_88]
                mov     [rbp+57h+var_88], rax
                mov     [rax+8], rcx
                mov     edx, 47706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag
                jmp     short loc_1408A51B6
; ---------------------------------------------------------------------------

loc_1408A51F1:                          ; CODE XREF: sub_1408A5058+173↑j
                                        ; sub_1408A5058+17C↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408A51F8:                          ; CODE XREF: sub_1408A5058+169↑j
                mov     eax, edi
                mov     rcx, [rbp+57h+var_20]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+0E0h+var_10]
                mov     rbx, [r11+30h]
                mov     rsi, [r11+38h]
                mov     rsp, r11
                pop     r14
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A5058
sub_1408A5058   endp

byte_1408A521F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D3F0↑o

; =============== S U B R O U T I N E =======================================


sub_1408A5228   proc near               ; CODE XREF: sub_14072E3EC+104981↑p
                                        ; DATA XREF: .pdata:000000014011D3FC↑o

arg_0           = byte ptr  8
arg_8           = byte ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+18h], rbx
                mov     [rax+20h], rsi
                push    rdi
                sub     rsp, 20h
                and     dword ptr [rax+10h], 0
                mov     edx, 0Ch
                mov     rsi, rcx
                mov     byte ptr [rcx], 0
                mov     r8d, 20207050h
                mov     word ptr [rax+14h], 500h
                mov     byte ptr [rax+8], 0
                lea     ecx, [rdx-0Bh]
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A526E
                mov     ebx, 0C000009Ah
                jmp     short loc_1408A52CD
; ---------------------------------------------------------------------------

loc_1408A526E:                          ; CODE XREF: sub_1408A5228+3D↑j
                mov     r8b, 1
                lea     rdx, [rsp+28h+arg_8]
                mov     rcx, rdi
                call    RtlInitializeSid
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A52C3
                xor     edx, edx
                mov     rcx, rdi
                call    RtlSubAuthoritySid
                mov     rcx, rdi
                mov     dword ptr [rax], 4
                call    RtlValidSid
                test    al, al
                mov     ecx, 0C00000E5h
                cmovz   ebx, ecx
                test    ebx, ebx
                js      short loc_1408A52C3
                lea     rdx, [rsp+28h+arg_0]
                mov     rcx, rdi
                call    sub_1408A52E8
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A52C3
                mov     al, [rsp+28h+arg_0]
                mov     [rsi], al

loc_1408A52C3:                          ; CODE XREF: sub_1408A5228+5A↑j
                                        ; sub_1408A5228+80↑j ...
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408A52CD:                          ; CODE XREF: sub_1408A5228+44↑j
                mov     rsi, [rsp+28h+arg_18]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A5228   endp

byte_1408A52E0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D3FC↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A52E8   proc near               ; CODE XREF: sub_1408A5228+8A↑p
                                        ; DATA XREF: .pdata:000000014011D408↑o

var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = byte ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = dword ptr -60h
var_5C          = dword ptr -5Ch
var_58          = xmmword ptr -58h
var_48          = xmmword ptr -48h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
arg_10          = qword ptr  20h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_10], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                lea     rbp, [rsp-37h]
                sub     rsp, 90h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_28], rax
                and     [rbp+57h+var_5C], 0
                xorps   xmm0, xmm0
                and     [rbp+57h+var_60], 0
                mov     eax, 20000h
                movups  [rbp+57h+var_58], xmm0
                mov     [rbp+57h+var_34], eax
                mov     r15, rdx
                movups  [rbp+57h+var_48], xmm0
                mov     [rbp+57h+var_30], eax
                mov     r14, rcx
                mov     [rbp+57h+var_38], 20001h
                mov     [rbp+57h+var_2C], 1F0001h
                mov     byte ptr [rdx], 0
                call    RtlLengthSid
                add     eax, 14h
                mov     r8d, 20207050h
                mov     ecx, 1
                lea     ebx, [rax+rax*2]
                mov     edx, ebx
                mov     esi, ebx
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A5374
                mov     ebx, 0C000009Ah
                jmp     loc_1408A5473
; ---------------------------------------------------------------------------

loc_1408A5374:                          ; CODE XREF: sub_1408A52E8+80↑j
                mov     r8, rsi
                xor     edx, edx
                mov     rcx, rdi
                call    memset
                mov     edx, 1
                lea     rsi, [rdi+28h]
                mov     rcx, rdi
                call    RtlCreateSecurityDescriptor
                xor     r8d, r8d
                mov     rdx, r14
                mov     rcx, rdi
                call    RtlSetOwnerSecurityDescriptor
                xor     r8d, r8d
                mov     rdx, r14
                mov     rcx, rdi
                call    RtlSetGroupSecurityDescriptor
                lea     edx, [rbx-28h]
                mov     r8d, 2
                mov     rcx, rsi
                call    RtlCreateAcl
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5469
                mov     r9d, 1
                mov     byte ptr [rsp+0B0h+var_88], 0
                xor     r8d, r8d
                mov     [rsp+0B0h+var_90], r14
                mov     rcx, rsi
                lea     edx, [r9+1]
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A5469
                xor     r9d, r9d
                mov     r8, rsi
                mov     dl, 1
                mov     rcx, rdi
                call    RtlSetDaclSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A5469
                lea     rcx, [rbp+57h+var_58]
                call    SeCaptureSubjectContext
                mov     rax, gs:188h
                lea     rdx, [rbp+57h+var_58]
                mov     r9d, 1
                xor     r8d, r8d
                mov     cl, [rax+232h]
                lea     rax, [rbp+57h+var_60]
                mov     [rsp+0B0h+var_68], rax
                lea     rax, [rbp+57h+var_5C]
                mov     [rsp+0B0h+var_70], rax
                lea     rax, [rbp+57h+var_38]
                mov     [rsp+0B0h+var_78], cl
                mov     rcx, rdi
                mov     [rsp+0B0h+var_80], rax
                and     [rsp+0B0h+var_88], 0
                and     dword ptr [rsp+0B0h+var_90], 0
                call    SeAccessCheck
                lea     rcx, [rbp+57h+var_58]
                mov     [r15], al
                call    SeReleaseSubjectContext
                xor     ebx, ebx

loc_1408A5469:                          ; CODE XREF: sub_1408A52E8+DB↑j
                                        ; sub_1408A52E8+104↑j ...
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408A5473:                          ; CODE XREF: sub_1408A52E8+87↑j
                mov     eax, ebx
                mov     rcx, [rbp+57h+var_28]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0B0h+arg_10]
                add     rsp, 90h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A52E8
sub_1408A52E8   endp

algn_1408A5499:                         ; DATA XREF: .pdata:000000014011D408↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A54A0   proc near               ; CODE XREF: IoOpenDriverRegistryKey+18D↑p
                                        ; sub_1407C4034+9AFD1↑p
                                        ; DATA XREF: ...

var_40          = qword ptr -40h
var_38          = byte ptr -38h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  30h
arg_8           = dword ptr  38h
arg_10          = qword ptr  40h

                mov     [rsp-28h+arg_0], rbx
                mov     [rsp-28h+arg_10], rsi
                push    rbp
                push    rdi
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                mov     r15, rcx
                xorps   xmm0, xmm0
                mov     rcx, cs:SeExports
                xor     eax, eax
                movups  [rbp+var_30], xmm0
                mov     [rbp+var_10], rax
                xor     edi, edi
                movups  [rbp+var_20], xmm0
                mov     rcx, [rcx+210h]
                call    RtlLengthSid
                mov     rcx, cs:qword_140D2E688
                mov     ebx, eax
                call    RtlLengthSid
                mov     rcx, cs:qword_140C54340
                add     ebx, eax
                call    RtlLengthSid
                mov     rcx, cs:qword_140C54320
                add     ebx, eax
                call    RtlLengthSid
                add     eax, 28h ; '('
                lea     ecx, [rdi+1]
                add     ebx, eax
                mov     r8d, 20207050h
                mov     edx, ebx
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408A5533
                mov     ebx, 0C000009Ah
                jmp     loc_1408A5700
; ---------------------------------------------------------------------------

loc_1408A5533:                          ; CODE XREF: sub_1408A54A0+87↑j
                mov     r13d, 2
                mov     edx, ebx
                mov     r8d, r13d
                mov     rcx, rsi
                call    RtlCreateAcl
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A56E7
                mov     r14, cs:qword_140C54320
                mov     r9d, 10000000h
                mov     [rsp+60h+var_38], dil
                mov     r8d, r13d
                mov     edx, r13d
                mov     [rsp+60h+var_40], r14
                mov     rcx, rsi
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A56E7
                mov     rax, cs:qword_140C54340
                mov     r9d, 80030006h
                mov     [rsp+60h+var_38], dil
                mov     r8d, r13d
                mov     edx, r13d
                mov     [rsp+60h+var_40], rax
                mov     rcx, rsi
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A56E7
                mov     rax, cs:qword_140D2E688
                mov     r9d, 80000000h
                mov     [rsp+60h+var_38], dil
                mov     r8d, r13d
                mov     edx, r13d
                mov     [rsp+60h+var_40], rax
                mov     rcx, rsi
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A56E7
                mov     rax, cs:SeExports
                mov     r9d, 80000000h
                mov     [rsp+60h+var_38], dil
                mov     r8d, r13d
                mov     edx, r13d
                mov     rcx, [rax+210h]
                mov     [rsp+60h+var_40], rcx
                mov     rcx, rsi
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A56E7
                mov     r13d, 1
                lea     rcx, [rbp+var_30]
                mov     edx, r13d
                call    RtlCreateSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A56E7
                xor     r9d, r9d
                lea     rcx, [rbp+var_30]
                mov     r8, rsi
                mov     dl, r13b
                call    RtlSetDaclSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A56E7
                xor     r8d, r8d
                lea     rcx, [rbp+var_30]
                mov     rdx, r14
                call    RtlSetOwnerSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A56E7
                xor     r8d, r8d
                lea     rcx, [rbp+var_30]
                mov     rdx, r14
                call    RtlSetGroupSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A56E7
                lea     rcx, [rbp+var_30]
                call    RtlValidSecurityDescriptor
                test    al, al
                jnz     short loc_1408A568D

loc_1408A5686:                          ; CODE XREF: sub_1408A54A0+1FC↓j
                mov     ebx, 0C00000E5h
                jmp     short loc_1408A56E7
; ---------------------------------------------------------------------------

loc_1408A568D:                          ; CODE XREF: sub_1408A54A0+1E4↑j
                lea     rcx, [rbp+var_30]
                call    RtlLengthSecurityDescriptor
                mov     [rbp+arg_8], eax
                cmp     eax, 28h ; '('
                jb      short loc_1408A5686
                mov     r8d, 20207050h
                mov     edx, eax
                mov     ecx, r13d
                mov     ebx, eax
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A56BF
                mov     ebx, 0C000009Ah
                jmp     short loc_1408A56E7
; ---------------------------------------------------------------------------

loc_1408A56BF:                          ; CODE XREF: sub_1408A54A0+216↑j
                mov     r8, rbx
                xor     edx, edx
                mov     rcx, rdi
                call    memset
                lea     r8, [rbp+arg_8]
                mov     rdx, rdi
                lea     rcx, [rbp+var_30]
                call    RtlAbsoluteToSelfRelativeSD
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A56E7
                mov     [r15], rdi
                xor     edi, edi

loc_1408A56E7:                          ; CODE XREF: sub_1408A54A0+AA↑j
                                        ; sub_1408A54A0+D9↑j ...
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag
                test    rdi, rdi
                jz      short loc_1408A5700
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408A5700:                          ; CODE XREF: sub_1408A54A0+8E↑j
                                        ; sub_1408A54A0+254↑j
                lea     r11, [rsp+60h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+30h]
                mov     rsi, [r11+40h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A54A0   endp

byte_1408A571C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D414↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A5724   proc near               ; CODE XREF: sub_1408A0DB0+DC↑p
                                        ; DATA XREF: .pdata:000000014011D420↑o

var_40          = qword ptr -40h
var_38          = byte ptr -38h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  30h
arg_8           = dword ptr  38h
arg_10          = qword ptr  40h

                mov     [rsp-28h+arg_0], rbx
                mov     [rsp-28h+arg_10], rsi
                push    rbp
                push    rdi
                push    r12
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                mov     r12, rcx
                xorps   xmm0, xmm0
                mov     rcx, cs:SeExports
                xor     eax, eax
                movups  [rbp+var_30], xmm0
                mov     [rbp+var_10], rax
                xor     edi, edi
                movups  [rbp+var_20], xmm0
                mov     rcx, [rcx+210h]
                call    RtlLengthSid
                mov     rcx, cs:qword_140D2E688
                mov     ebx, eax
                call    RtlLengthSid
                mov     rcx, cs:qword_140C54340
                add     ebx, eax
                call    RtlLengthSid
                add     eax, 30h ; '0'
                lea     ecx, [rdi+1]
                mov     r8d, 20207050h
                lea     ebx, [rax+rbx*2]
                mov     edx, ebx
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408A57AA
                mov     ebx, 0C000009Ah
                jmp     loc_1408A59AE
; ---------------------------------------------------------------------------

loc_1408A57AA:                          ; CODE XREF: sub_1408A5724+7A↑j
                mov     r15d, 2
                mov     edx, ebx
                mov     r8d, r15d
                mov     rcx, rsi
                call    RtlCreateAcl
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                mov     r14, cs:qword_140C54340
                lea     r8d, [r15+1]
                mov     [rsp+60h+var_38], dil
                mov     r9d, 10000000h
                mov     edx, r15d
                mov     [rsp+60h+var_40], r14
                mov     rcx, rsi
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                mov     r15, cs:qword_140D2E688
                mov     edx, 2
                mov     [rsp+60h+var_38], dil
                mov     r9d, 80000000h
                mov     rcx, rsi
                mov     [rsp+60h+var_40], r15
                lea     r8d, [rdx+1]
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                mov     r9d, 20h ; ' '
                mov     [rsp+60h+var_38], dil
                mov     [rsp+60h+var_40], r15
                mov     rcx, rsi
                lea     r15d, [r9-1Eh]
                mov     r8d, r15d
                mov     edx, r15d
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                mov     rax, cs:SeExports
                lea     r8d, [r15+1]
                mov     [rsp+60h+var_38], dil
                mov     r9d, 80000000h
                mov     edx, r15d
                mov     rcx, [rax+210h]
                mov     [rsp+60h+var_40], rcx
                mov     rcx, rsi
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                mov     rax, cs:SeExports
                lea     r9d, [r15+1Eh]
                mov     [rsp+60h+var_38], dil
                mov     r8d, r15d
                mov     edx, r15d
                mov     rcx, [rax+210h]
                mov     [rsp+60h+var_40], rcx
                mov     rcx, rsi
                call    sub_140622B20
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                mov     r15d, 1
                lea     rcx, [rbp+var_30]
                mov     edx, r15d
                call    RtlCreateSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                xor     r9d, r9d
                lea     rcx, [rbp+var_30]
                mov     r8, rsi
                mov     dl, r15b
                call    RtlSetDaclSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                xor     r8d, r8d
                lea     rcx, [rbp+var_30]
                mov     rdx, r14
                call    RtlSetOwnerSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5995
                xor     r8d, r8d
                lea     rcx, [rbp+var_30]
                mov     rdx, r14
                call    RtlSetGroupSecurityDescriptor
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A5995
                lea     rcx, [rbp+var_30]
                call    RtlValidSecurityDescriptor
                test    al, al
                jnz     short loc_1408A593A

loc_1408A5933:                          ; CODE XREF: sub_1408A5724+225↓j
                mov     ebx, 0C00000E5h
                jmp     short loc_1408A5995
; ---------------------------------------------------------------------------

loc_1408A593A:                          ; CODE XREF: sub_1408A5724+20D↑j
                lea     rcx, [rbp+var_30]
                call    RtlLengthSecurityDescriptor
                mov     [rbp+arg_8], eax
                cmp     eax, 28h ; '('
                jb      short loc_1408A5933
                mov     r8d, 20207050h
                mov     edx, eax
                mov     ecx, r15d
                mov     ebx, eax
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A596C
                mov     ebx, 0C000009Ah
                jmp     short loc_1408A5995
; ---------------------------------------------------------------------------

loc_1408A596C:                          ; CODE XREF: sub_1408A5724+23F↑j
                mov     r8, rbx
                xor     edx, edx
                mov     rcx, rdi
                call    memset
                lea     r8, [rbp+arg_8]
                mov     rdx, rdi
                lea     rcx, [rbp+var_30]
                call    RtlAbsoluteToSelfRelativeSD
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A5995
                mov     [r12], rdi
                xor     edi, edi

loc_1408A5995:                          ; CODE XREF: sub_1408A5724+9D↑j
                                        ; sub_1408A5724+CD↑j ...
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag
                test    rdi, rdi
                jz      short loc_1408A59AE
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408A59AE:                          ; CODE XREF: sub_1408A5724+81↑j
                                        ; sub_1408A5724+27E↑j
                lea     r11, [rsp+60h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+30h]
                mov     rsi, [r11+40h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A5724   endp

algn_1408A59CA:                         ; DATA XREF: .pdata:000000014011D420↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A59D0   proc near               ; CODE XREF: sub_1406D283C+14BC97↑p
                                        ; sub_1406D283C+14BCC5↑p
                                        ; DATA XREF: ...

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_20          = dword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8
arg_0           = qword ptr  40h
arg_8           = dword ptr  48h
arg_10          = dword ptr  50h
arg_18          = qword ptr  58h
arg_20          = qword ptr  60h
arg_28          = qword ptr  68h
arg_30          = qword ptr  70h

                mov     r11, rsp
                mov     [r11+8], rbx
                mov     [r11+20h], r9
                mov     [rsp-38h+arg_8], edx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 70h
                xor     r13d, r13d
                mov     eax, edx
                cmp     edx, 1
                mov     [rbp+var_18], r13
                mov     rsi, r9
                mov     [rbp+var_8], r13
                lea     rdx, [rbp+var_18]
                mov     [rbp+var_10], r13
                mov     [r11-78h], rdx
                lea     r9d, [r13+1]
                mov     [r11-80h], rcx
                mov     r12d, r13d
                cmovnz  r12d, r8d
                mov     [rbp+arg_10], r13d
                mov     ecx, eax
                mov     [rbp+var_20], r12d
                mov     rdx, rsi
                mov     byte ptr [rsp+70h+var_50], r13b
                mov     r14d, r13d
                mov     edi, r13d
                call    sub_1406D3814
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5C0D
                mov     r8, [rbp+var_18]
                lea     rax, [rbp+arg_10]
                mov     [rsp+70h+var_48], rax
                mov     edx, r12d
                lea     rax, [rbp+var_8]
                mov     rcx, rsi
                mov     [rsp+70h+var_50], rax
                call    sub_1408A6098
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5C09
                xor     eax, eax
                cmp     [rbp+arg_10], eax
                jbe     loc_1408A5C09
                mov     r15, [rbp+arg_30]
                mov     rsi, [rbp+arg_28]
                mov     r14, [rbp+var_8]

loc_1408A5A88:                          ; CODE XREF: sub_1408A59D0+22B↓j
                mov     r8, [rbp+var_18]
                mov     edx, r12d
                mov     eax, r13d
                lea     rcx, [rax+rax*4]
                lea     rax, [r14+rcx*4]
                lea     rcx, [rbp+var_10]
                mov     [rbp+var_8], rax
                mov     [rsp+70h+var_50], rcx
                mov     r9, rax
                mov     rcx, [rbp+arg_18]
                call    sub_1408A61E4
                xor     ecx, ecx
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5C03
                cmp     [r15], ecx
                jnz     short loc_1408A5AE2
                mov     r8d, [rbp+arg_10]
                mov     edx, [rsi]
                mov     rcx, [rbp+arg_20]
                mov     [r15], r8d
                call    sub_140770024
                xor     ecx, ecx
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5C03

loc_1408A5AE2:                          ; CODE XREF: sub_1408A59D0+F2↑j
                mov     rdi, [rbp+var_10]
                mov     r12, rdi
                cmp     [rdi], cx
                jz      loc_1408A5B7C
                mov     edx, [rsi]

loc_1408A5AF4:                          ; CODE XREF: sub_1408A59D0+1A6↓j
                mov     r8d, [r15]
                cmp     edx, r8d
                jnz     short loc_1408A5B15
                mov     rcx, [rbp+arg_20]
                add     r8d, r8d
                mov     [r15], r8d
                call    sub_140770024
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5C0D

loc_1408A5B15:                          ; CODE XREF: sub_1408A59D0+12A↑j
                mov     eax, [rsi]
                mov     r9, [rbp+var_8]
                mov     r8, [rbp+var_18]
                mov     edx, [rbp+var_20]
                lea     rcx, [rax+rax*2]
                mov     rax, [rbp+arg_20]
                shl     rcx, 4
                add     rcx, [rax]
                mov     eax, [rbp+arg_8]
                mov     [rsp+70h+var_40], rcx
                mov     rcx, [rbp+arg_18]
                mov     [rsp+70h+var_48], r12
                mov     dword ptr [rsp+70h+var_50], eax
                call    sub_1406CCAD4
                xor     ecx, ecx
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A5C0D
                inc     dword ptr [rsi]
                mov     edx, [rsi]
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A5B5F:                          ; CODE XREF: sub_1408A59D0+197↓j
                inc     rax
                cmp     [r12+rax*2], cx
                jnz     short loc_1408A5B5F
                lea     r12, [r12+rax*2]
                add     r12, 2
                cmp     [r12], cx
                jnz     loc_1408A5AF4

loc_1408A5B7C:                          ; CODE XREF: sub_1408A59D0+11C↑j
                mov     edx, 58706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag
                mov     edx, [rsi]
                xor     r12d, r12d
                mov     r8d, [r15]
                mov     edi, r12d
                mov     [rbp+var_10], r12
                cmp     edx, r8d
                jnz     short loc_1408A5BB2
                mov     rcx, [rbp+arg_20]
                add     r8d, r8d
                mov     [r15], r8d
                call    sub_140770024
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A5C0D

loc_1408A5BB2:                          ; CODE XREF: sub_1408A59D0+1CB↑j
                mov     eax, [rsi]
                mov     r9, [rbp+var_8]
                mov     r8, [rbp+var_18]
                lea     rcx, [rax+rax*2]
                mov     rax, [rbp+arg_20]
                shl     rcx, 4
                add     rcx, [rax]
                mov     eax, [rbp+arg_8]
                mov     [rsp+70h+var_40], rcx
                mov     rcx, [rbp+arg_18]
                mov     [rsp+70h+var_48], r12
                mov     r12d, [rbp+var_20]
                mov     edx, r12d
                mov     dword ptr [rsp+70h+var_50], eax
                call    sub_1406CCAD4
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A5C0D
                inc     dword ptr [rsi]
                inc     r13d
                cmp     r13d, [rbp+arg_10]
                jb      loc_1408A5A88
                jmp     short loc_1408A5C0D
; ---------------------------------------------------------------------------

loc_1408A5C03:                          ; CODE XREF: sub_1408A59D0+E9↑j
                                        ; sub_1408A59D0+10C↑j
                mov     rdi, [rbp+var_10]
                jmp     short loc_1408A5C0D
; ---------------------------------------------------------------------------

loc_1408A5C09:                          ; CODE XREF: sub_1408A59D0+9B↑j
                                        ; sub_1408A59D0+A6↑j
                mov     r14, [rbp+var_8]

loc_1408A5C0D:                          ; CODE XREF: sub_1408A59D0+70↑j
                                        ; sub_1408A59D0+13F↑j ...
                mov     rcx, [rbp+var_18]
                test    rcx, rcx
                jz      short loc_1408A5C1B
                call    ZwClose

loc_1408A5C1B:                          ; CODE XREF: sub_1408A59D0+244↑j
                test    r14, r14
                jz      short loc_1408A5C2D
                mov     edx, 58706E50h
                mov     rcx, r14
                call    ExFreePoolWithTag

loc_1408A5C2D:                          ; CODE XREF: sub_1408A59D0+24E↑j
                test    rdi, rdi
                jz      short loc_1408A5C3F
                mov     edx, 58706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408A5C3F:                          ; CODE XREF: sub_1408A59D0+260↑j
                mov     eax, ebx
                mov     rbx, [rsp+70h+arg_0]
                add     rsp, 70h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A59D0   endp

algn_1408A5C5A:                         ; DATA XREF: .pdata:000000014011D42C↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A5C60   proc near               ; CODE XREF: sub_1406D283C+14BC46↑p
                                        ; sub_1406D283C+14BC81↑p
                                        ; DATA XREF: ...

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_10          = qword ptr -10h
var_8           = qword ptr -8
arg_0           = qword ptr  40h
arg_8           = dword ptr  48h
arg_10          = dword ptr  50h
arg_20          = qword ptr  60h
arg_28          = qword ptr  68h
arg_30          = qword ptr  70h
arg_38          = qword ptr  78h

                mov     r11, rsp
                mov     [r11+8], rbx
                mov     [rsp-38h+arg_8], edx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                xor     r14d, r14d
                mov     eax, edx
                cmp     edx, 1
                mov     [rbp+var_10], r14
                mov     r13, r9
                mov     [rbp+arg_10], r14d
                lea     rdx, [rbp+var_10]
                mov     ebx, r14d
                mov     [r11-68h], rdx
                lea     r9d, [r14+1]
                mov     [r11-70h], rcx
                mov     r15d, r14d
                mov     ecx, eax
                mov     [rbp+var_8], rbx
                mov     rdx, r13
                mov     [r11-78h], r14b
                cmovnz  r15d, r8d
                call    sub_1406D3814
                mov     edi, eax
                test    eax, eax
                js      loc_1408A5D7D
                mov     r8, [rbp+var_10]
                lea     rax, [rbp+arg_10]
                mov     [rsp+60h+var_38], rax
                mov     edx, r15d
                lea     rax, [rbp+var_8]
                mov     rcx, r13
                mov     [rsp+60h+var_40], rax
                call    sub_1408A6098
                mov     edi, eax
                test    eax, eax
                js      loc_1408A5D79
                mov     rsi, [rbp+arg_30]
                mov     eax, [rbp+arg_10]
                mov     rcx, [rbp+arg_38]
                mov     r12, [rbp+arg_28]
                mov     edx, [rsi]
                lea     r8d, [rdx+rax]
                cmp     [rcx], r8d
                jnb     short loc_1408A5D1F
                mov     [rcx], r8d
                mov     rcx, r12
                call    sub_140770024
                mov     edi, eax
                test    eax, eax
                js      short loc_1408A5D79
                mov     eax, [rbp+arg_10]

loc_1408A5D1F:                          ; CODE XREF: sub_1408A5C60+A9↑j
                test    eax, eax
                jz      short loc_1408A5D79
                mov     eax, [rsi]
                mov     rbx, [rbp+var_8]

loc_1408A5D29:                          ; CODE XREF: sub_1408A5C60+115↓j
                mov     r8, [rbp+var_10]
                lea     rdx, [rax+rax*2]
                shl     rdx, 4
                add     rdx, [r12]
                mov     [rsp+60h+var_30], rdx
                mov     edx, r15d
                mov     eax, r14d
                lea     rcx, [rax+rax*4]
                mov     rax, [rbp+arg_20]
                mov     [rsp+60h+var_38], rax
                lea     r9, [rbx+rcx*4]
                mov     eax, [rbp+arg_8]
                mov     rcx, r13
                mov     dword ptr [rsp+60h+var_40], eax
                call    sub_1406D1EAC
                mov     edi, eax
                test    eax, eax
                js      short loc_1408A5D7D
                inc     dword ptr [rsi]
                inc     r14d
                mov     eax, [rsi]
                cmp     r14d, [rbp+arg_10]
                jb      short loc_1408A5D29
                jmp     short loc_1408A5D7D
; ---------------------------------------------------------------------------

loc_1408A5D79:                          ; CODE XREF: sub_1408A5C60+8B↑j
                                        ; sub_1408A5C60+BA↑j ...
                mov     rbx, [rbp+var_8]

loc_1408A5D7D:                          ; CODE XREF: sub_1408A5C60+60↑j
                                        ; sub_1408A5C60+108↑j ...
                mov     rcx, [rbp+var_10]
                test    rcx, rcx
                jz      short loc_1408A5D8B
                call    ZwClose

loc_1408A5D8B:                          ; CODE XREF: sub_1408A5C60+124↑j
                test    rbx, rbx
                jz      short loc_1408A5D9D
                mov     edx, 58706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408A5D9D:                          ; CODE XREF: sub_1408A5C60+12E↑j
                mov     rbx, [rsp+60h+arg_0]
                mov     eax, edi
                add     rsp, 60h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A5C60   endp

algn_1408A5DB8:                         ; DATA XREF: .pdata:000000014011D438↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A5DC0   proc near               ; CODE XREF: sub_1406D2A38+14BBA7↑p
                                        ; DATA XREF: .pdata:000000014011D444↑o
                xor     r8d, r8d
                mov     [rdx], r8
                cmp     ecx, 6
                jg      short loc_1408A5E2C
                jz      short loc_1408A5E23
                test    ecx, ecx
                jz      short loc_1408A5E1A
                sub     ecx, 1
                jz      short loc_1408A5E11
                sub     ecx, 1
                jz      short loc_1408A5E08
                sub     ecx, 1
                jz      short loc_1408A5DFF
                sub     ecx, 1
                jz      short loc_1408A5DF6
                cmp     ecx, 1
                jnz     short loc_1408A5E45
                lea     rax, aAep       ; "AEP"
                jmp     loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5DF6:                          ; CODE XREF: sub_1408A5DC0+23↑j
                lea     rax, aDeviceinterfac ; "DeviceInterfaceClass"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5DFF:                          ; CODE XREF: sub_1408A5DC0+1E↑j
                lea     rax, aDevice_1  ; "Device"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E08:                          ; CODE XREF: sub_1408A5DC0+19↑j
                lea     rax, aDevicecontaine ; "DeviceContainer"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E11:                          ; CODE XREF: sub_1408A5DC0+14↑j
                lea     rax, aDeviceinterfac_0 ; "DeviceInterface"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E1A:                          ; CODE XREF: sub_1408A5DC0+F↑j
                lea     rax, aUnknown_1 ; "Unknown"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E23:                          ; CODE XREF: sub_1408A5DC0+B↑j
                lea     rax, aAepcontainer ; "AEPContainer"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E2C:                          ; CODE XREF: sub_1408A5DC0+9↑j
                sub     ecx, 7
                jz      short loc_1408A5E71
                sub     ecx, 1
                jz      short loc_1408A5E68
                sub     ecx, 1
                jz      short loc_1408A5E5F
                sub     ecx, 1
                jz      short loc_1408A5E56
                cmp     ecx, 1
                jz      short loc_1408A5E4D

loc_1408A5E45:                          ; CODE XREF: sub_1408A5DC0+28↑j
                mov     r8d, 0C000000Dh
                jmp     short loc_1408A5E7B
; ---------------------------------------------------------------------------

loc_1408A5E4D:                          ; CODE XREF: sub_1408A5DC0+83↑j
                lea     rax, aDevicepanel ; "DevicePanel"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E56:                          ; CODE XREF: sub_1408A5DC0+7E↑j
                lea     rax, aAepservice ; "AEPService"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E5F:                          ; CODE XREF: sub_1408A5DC0+79↑j
                lea     rax, aDevicecontaine_0 ; "DeviceContainerDisplay"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E68:                          ; CODE XREF: sub_1408A5DC0+74↑j
                lea     rax, aDeviceinterfac_1 ; "DeviceInterfaceDisplay"
                jmp     short loc_1408A5E78
; ---------------------------------------------------------------------------

loc_1408A5E71:                          ; CODE XREF: sub_1408A5DC0+6F↑j
                lea     rax, aDeviceinstalle ; "DeviceInstallerClass"

loc_1408A5E78:                          ; CODE XREF: sub_1408A5DC0+31↑j
                                        ; sub_1408A5DC0+3D↑j ...
                mov     [rdx], rax

loc_1408A5E7B:                          ; CODE XREF: sub_1408A5DC0+8B↑j
                mov     eax, r8d
                retn
sub_1408A5DC0   endp

; ---------------------------------------------------------------------------
                align 20h
byte_1408A5E80  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D444↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A5E88   proc near               ; CODE XREF: sub_1406D2A38+14BC5E↑p
                                        ; sub_1406D2A38+14BCAB↑p
                                        ; DATA XREF: ...

var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8
arg_0           = qword ptr  20h
arg_8           = qword ptr  28h
arg_10          = qword ptr  30h

                mov     [rsp-18h+arg_0], rbx
                mov     [rsp-18h+arg_8], rsi
                mov     [rsp-18h+arg_10], rdi
                push    rbp
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 40h
                xor     r15d, r15d
                mov     esi, r8d
                mov     r14, r9
                mov     r10, rdx
                mov     edi, ecx
                mov     eax, r15d
                test    ecx, 0FFFFFFF8h
                jz      short loc_1408A5EC6
                mov     eax, 0C000000Dh
                jmp     loc_1408A5FED
; ---------------------------------------------------------------------------

loc_1408A5EC6:                          ; CODE XREF: sub_1408A5E88+32↑j
                mov     ebx, 2
                cmp     esi, ebx
                jb      short loc_1408A5ED3
                mov     [rdx], r15w

loc_1408A5ED3:                          ; CODE XREF: sub_1408A5E88+45↑j
                mov     [rbp+var_8], r10
                mov     rdx, rsi
                mov     [rbp+var_10], rdx
                test    dil, 1
                jz      short loc_1408A5F24
                and     edi, 0FFFFFFFEh
                mov     ebx, 36h ; '6'
                cmp     esi, ebx
                jb      short loc_1408A5F24
                lea     rax, [rbp+var_10]
                mov     [rsp+40h+var_18], 400h
                lea     r9, [rbp+var_8]
                mov     [rsp+40h+var_20], rax
                lea     r8, aDevqueryflagup ; "DevQueryFlagUpdateResults "
                mov     rcx, r10
                call    sub_140355B20
                test    eax, eax
                js      loc_1408A5FED
                mov     r10, [rbp+var_8]
                mov     rdx, [rbp+var_10]

loc_1408A5F24:                          ; CODE XREF: sub_1408A5E88+5A↑j
                                        ; sub_1408A5E88+66↑j
                test    dil, 2
                jz      short loc_1408A5F68
                and     edi, 0FFFFFFFDh
                add     ebx, 34h ; '4'
                cmp     ebx, esi
                ja      short loc_1408A5F68
                lea     rax, [rbp+var_10]
                mov     [rsp+40h+var_18], 400h
                lea     r9, [rbp+var_8]
                mov     [rsp+40h+var_20], rax
                lea     r8, aDevqueryflagal ; "DevQueryFlagAllProperties "
                mov     rcx, r10
                call    sub_140355B20
                test    eax, eax
                js      loc_1408A5FED
                mov     r10, [rbp+var_8]
                mov     rdx, [rbp+var_10]

loc_1408A5F68:                          ; CODE XREF: sub_1408A5E88+A0↑j
                                        ; sub_1408A5E88+AA↑j
                test    dil, 4
                jz      short loc_1408A5FA8
                and     edi, 0FFFFFFFBh
                add     ebx, 2Ah ; '*'
                cmp     ebx, esi
                ja      short loc_1408A5FA8
                lea     rax, [rbp+var_10]
                mov     [rsp+40h+var_18], 400h
                lea     r9, [rbp+var_8]
                mov     [rsp+40h+var_20], rax
                lea     r8, aDevqueryflaglo ; "DevQueryFlagLocalize "
                mov     rcx, r10
                call    sub_140355B20
                test    eax, eax
                js      short loc_1408A5FED
                mov     r10, [rbp+var_8]
                mov     rdx, [rbp+var_10]

loc_1408A5FA8:                          ; CODE XREF: sub_1408A5E88+E4↑j
                                        ; sub_1408A5E88+EE↑j
                test    edi, edi
                jz      short loc_1408A5FDB
                add     ebx, 18h
                cmp     ebx, esi
                ja      short loc_1408A5FDB
                lea     rax, [rbp+var_10]
                mov     [rsp+40h+var_18], 400h
                lea     r9, [rbp+var_8]
                mov     [rsp+40h+var_20], rax
                lea     r8, aMoreFlags  ; "<more flags>"
                mov     rcx, r10
                call    sub_140355B20
                test    eax, eax
                js      short loc_1408A5FED

loc_1408A5FDB:                          ; CODE XREF: sub_1408A5E88+122↑j
                                        ; sub_1408A5E88+129↑j
                test    r14, r14
                jz      short loc_1408A5FE3
                mov     [r14], ebx

loc_1408A5FE3:                          ; CODE XREF: sub_1408A5E88+156↑j
                cmp     ebx, esi
                mov     ecx, 0C0000023h
                cmovb   eax, ecx

loc_1408A5FED:                          ; CODE XREF: sub_1408A5E88+39↑j
                                        ; sub_1408A5E88+8E↑j ...
                mov     rbx, [rsp+40h+arg_0]
                mov     rsi, [rsp+40h+arg_8]
                mov     rdi, [rsp+40h+arg_10]
                add     rsp, 40h
                pop     r15
                pop     r14
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A5E88   endp

algn_1408A6007:                         ; DATA XREF: .pdata:000000014011D450↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A6010   proc near               ; CODE XREF: sub_140742680+F35F9↑p
                                        ; DATA XREF: .pdata:000000014011D45C↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rbx, rcx
                xor     dil, dil
                add     rcx, 68h ; 'h'
                call    ExAcquireFastMutex
                mov     edx, [rbx+0E4h]
                test    dl, 2
                jnz     short loc_1408A605F
                lea     rax, [rbx+0C0h]
                cmp     [rax], rax
                jz      short loc_1408A605F
                or      edx, 2
                mov     [rbx+0E4h], edx
                test    dl, 1
                jnz     short loc_1408A605F
                or      edx, 1
                mov     dil, 1
                mov     [rbx+0E4h], edx

loc_1408A605F:                          ; CODE XREF: sub_1408A6010+27↑j
                                        ; sub_1408A6010+33↑j ...
                lea     rcx, [rbx+68h]
                call    KeReleaseGuardedMutex
                test    dil, dil
                jz      short loc_1408A607E
                lea     rcx, [rbx+0A0h]
                mov     edx, 3
                call    ExQueueWorkItem

loc_1408A607E:                          ; CODE XREF: sub_1408A6010+5B↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A6010   endp

byte_1408A608F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D45C↑o

; =============== S U B R O U T I N E =======================================


sub_1408A6098   proc near               ; CODE XREF: sub_1408A59D0+92↑p
                                        ; sub_1408A5C60+82↑p
                                        ; DATA XREF: ...

var_48          = qword ptr -48h
var_40          = dword ptr -40h
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_28          = qword ptr -28h
var_18          = byte ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_20          = qword ptr  28h
arg_28          = qword ptr  30h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 50h
                mov     rsi, [rsp+68h+arg_20]
                mov     r14, r8
                mov     rdi, [rsp+68h+arg_28]
                mov     ebp, edx
                mov     r15, rcx
                mov     ebx, 1770h
                and     qword ptr [rsi], 0

loc_1408A60D1:                          ; CODE XREF: sub_1408A6098+F5↓j
                mov     rcx, [rsi]
                test    rcx, rcx
                jz      short loc_1408A60E3
                mov     edx, 58706E50h
                call    ExFreePoolWithTag

loc_1408A60E3:                          ; CODE XREF: sub_1408A6098+3F↑j
                mov     r8d, 58706E50h
                mov     rdx, rbx
                mov     ecx, 1
                call    ExAllocatePoolWithTag
                mov     [rsi], rax
                mov     rcx, rax
                test    rax, rax
                jz      loc_1408A6199
                and     dword ptr [rdi], 0
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rbx
                shr     rdx, 4
                test    ebp, ebp
                jz      short loc_1408A6147
                mov     [rsp+68h+var_28], rdi
                mov     r9, r14
                mov     [rsp+68h+var_30], edx
                mov     r8d, ebp
                mov     [rsp+68h+var_38], rcx
                mov     rdx, r15
                mov     rcx, cs:qword_140CF4378
                mov     byte ptr [rsp+68h+var_40], 1
                call    sub_140978098
                jmp     short loc_1408A616A
; ---------------------------------------------------------------------------

loc_1408A6147:                          ; CODE XREF: sub_1408A6098+83↑j
                mov     [rsp+68h+var_38], rdi
                mov     r9b, 1
                mov     [rsp+68h+var_40], edx
                xor     r8d, r8d
                mov     [rsp+68h+var_48], rcx
                mov     rdx, r14
                mov     rcx, cs:qword_140CF4378
                call    sub_140766950

loc_1408A616A:                          ; CODE XREF: sub_1408A6098+AD↑j
                mov     ebx, eax
                cmp     eax, 0C0000023h
                jnz     short loc_1408A619E
                mov     ecx, [rdi]
                mov     edx, 0FFFFFFFFh
                lea     rax, [rcx+rcx*4]
                shl     rax, 2
                cmp     rax, rdx
                ja      short loc_1408A6192
                lea     ebx, [rcx+rcx*4]
                shl     ebx, 2
                jmp     loc_1408A60D1
; ---------------------------------------------------------------------------

loc_1408A6192:                          ; CODE XREF: sub_1408A6098+ED↑j
                mov     ebx, 0C0000095h
                jmp     short loc_1408A61A2
; ---------------------------------------------------------------------------

loc_1408A6199:                          ; CODE XREF: sub_1408A6098+67↑j
                mov     ebx, 0C000009Ah

loc_1408A619E:                          ; CODE XREF: sub_1408A6098+D9↑j
                test    ebx, ebx
                jns     short loc_1408A61A5

loc_1408A61A2:                          ; CODE XREF: sub_1408A6098+FF↑j
                and     dword ptr [rdi], 0

loc_1408A61A5:                          ; CODE XREF: sub_1408A6098+108↑j
                cmp     dword ptr [rdi], 0
                jnz     short loc_1408A61C0
                mov     rcx, [rsi]
                test    rcx, rcx
                jz      short loc_1408A61C0
                mov     edx, 58706E50h
                call    ExFreePoolWithTag
                and     qword ptr [rsi], 0

loc_1408A61C0:                          ; CODE XREF: sub_1408A6098+110↑j
                                        ; sub_1408A6098+118↑j
                lea     r11, [rsp+68h+var_18]
                mov     eax, ebx
                mov     rbx, [r11+20h]
                mov     rbp, [r11+28h]
                mov     rsi, [r11+30h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A6098   endp

byte_1408A61DD  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D468↑o

; =============== S U B R O U T I N E =======================================


sub_1408A61E4   proc near               ; CODE XREF: sub_1408A59D0+DE↑p
                                        ; DATA XREF: .pdata:000000014011D474↑o

var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = dword ptr -48h
var_40          = qword ptr -40h
var_28          = dword ptr -28h
var_18          = byte ptr -18h
arg_20          = qword ptr  28h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 60h
                mov     rdi, [rsp+78h+arg_20]
                mov     rbp, r9
                mov     r14, r8
                mov     dword ptr [rax-28h], 28h ; '('
                mov     esi, edx
                mov     r15, rcx
                and     qword ptr [rdi], 0

loc_1408A621A:                          ; CODE XREF: sub_1408A61E4+C0↓j
                mov     rcx, [rdi]
                test    rcx, rcx
                jz      short loc_1408A622C
                mov     edx, 58706E50h
                call    ExFreePoolWithTag

loc_1408A622C:                          ; CODE XREF: sub_1408A61E4+3C↑j
                mov     edx, [rsp+78h+var_28]
                mov     ecx, 1
                add     rdx, rdx
                mov     r8d, 58706E50h
                call    ExAllocatePoolWithTag
                mov     [rdi], rax
                mov     r9, rax
                test    rax, rax
                jz      short loc_1408A62AC
                lea     rax, [rsp+78h+var_28]
                test    esi, esi
                jz      short loc_1408A627E
                mov     ecx, [rsp+78h+var_28]
                mov     r8d, esi
                mov     [rsp+78h+var_40], rax
                mov     rdx, r15
                mov     [rsp+78h+var_48], ecx
                mov     [rsp+78h+var_50], r9
                mov     r9, r14
                mov     [rsp+78h+var_58], rbp
                call    sub_140978378
                jmp     short loc_1408A629D
; ---------------------------------------------------------------------------

loc_1408A627E:                          ; CODE XREF: sub_1408A61E4+71↑j
                mov     rcx, cs:qword_140CF4378
                mov     r8, rbp
                mov     [rsp+78h+var_50], rax
                mov     rdx, r14
                mov     eax, [rsp+78h+var_28]
                mov     dword ptr [rsp+78h+var_58], eax
                call    sub_14097A9B4

loc_1408A629D:                          ; CODE XREF: sub_1408A61E4+98↑j
                mov     ebx, eax
                cmp     eax, 0C0000023h
                jz      loc_1408A621A
                jmp     short loc_1408A62B1
; ---------------------------------------------------------------------------

loc_1408A62AC:                          ; CODE XREF: sub_1408A61E4+68↑j
                mov     ebx, 0C000009Ah

loc_1408A62B1:                          ; CODE XREF: sub_1408A61E4+C6↑j
                test    ebx, ebx
                jns     short loc_1408A62CB
                mov     rcx, [rdi]
                test    rcx, rcx
                jz      short loc_1408A62CB
                mov     edx, 58706E50h
                call    ExFreePoolWithTag
                and     qword ptr [rdi], 0

loc_1408A62CB:                          ; CODE XREF: sub_1408A61E4+CF↑j
                                        ; sub_1408A61E4+D7↑j
                lea     r11, [rsp+78h+var_18]
                mov     eax, ebx
                mov     rbx, [r11+20h]
                mov     rbp, [r11+28h]
                mov     rsi, [r11+30h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A61E4   endp

algn_1408A62E8:                         ; DATA XREF: .pdata:000000014011D474↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A62F0   proc near               ; CODE XREF: sub_14050E020+34↑p
                                        ; DATA XREF: .pdata:000000014011D480↑o
                sub     rsp, 28h
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                add     rcx, 40h ; '@'
                xor     edx, edx
                call    ExAcquirePushLockExclusiveEx
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A62F0   endp

byte_1408A6315  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D480↑o

; =============== S U B R O U T I N E =======================================


sub_1408A631C   proc near               ; CODE XREF: sub_14050E020+58↑p
                                        ; DATA XREF: .pdata:000000014011D48C↑o
                sub     rsp, 28h
                add     rcx, 40h ; '@'
                xor     edx, edx
                call    ExReleasePushLockEx
                mov     rcx, gs:188h
                call    sub_14021E1F0
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A631C   endp

byte_1408A633F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D48C↑o

; =============== S U B R O U T I N E =======================================


sub_1408A6348   proc near               ; CODE XREF: sub_140761F34+E10D8↑p
                                        ; DATA XREF: .pdata:000000014011D498↑o

var_C8          = byte ptr -0C8h
var_78          = byte ptr -78h
var_28          = qword ptr -28h
arg_18          = qword ptr  20h

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                sub     rsp, 0D0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+0E8h+var_28], rax
                mov     rsi, r8
                mov     rbx, rdx
                mov     rdi, rcx
                mov     ebp, 44h ; 'D'
                mov     r8d, ebp
                lea     rcx, [rsp+0E8h+var_78]
                xor     edx, edx
                call    memset
                mov     r8d, ebp
                lea     rcx, [rsp+0E8h+var_C8]
                xor     edx, edx
                call    memset
                mov     rcx, [rdi]
                test    rcx, rcx
                jnz     short loc_1408A63A1
                mov     rcx, [rdi+10h]

loc_1408A63A1:                          ; CODE XREF: sub_1408A6348+53↑j
                xor     r9d, r9d
                lea     rdx, [rsp+0E8h+var_78]
                mov     r8d, ebp
                call    sub_14061C364
                mov     rcx, [rbx]
                test    rcx, rcx
                jnz     short loc_1408A63BD
                mov     rcx, [rbx+10h]

loc_1408A63BD:                          ; CODE XREF: sub_1408A6348+6F↑j
                xor     r9d, r9d
                lea     rdx, [rsp+0E8h+var_C8]
                mov     r8d, ebp
                call    sub_14061C364
                lea     rdx, [rsp+0E8h+var_C8]
                lea     rcx, [rsp+0E8h+var_78]
                call    RtlEqualSid
                mov     [rsi], al
                xor     eax, eax
                mov     rcx, [rsp+0E8h+var_28]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0E8h+arg_18]
                add     rsp, 0D0h
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A6348
sub_1408A6348   endp

byte_1408A6404  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D498↑o

; =============== S U B R O U T I N E =======================================


sub_1408A640C   proc near               ; CODE XREF: sub_1407346D8+B8AC2↑p
                                        ; sub_1407346D8+B8AEE↑p ...

var_38          = xmmword ptr -38h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 30h
                xor     ebx, ebx
                mov     r13b, r9b
                mov     r15, r8
                mov     r14, rdx
                mov     rdi, rcx
                mov     [rax-38h], rbx
                mov     [rax-30h], rbx
                cmp     [rcx+8], rbx
                jnz     loc_1408A64F2
                test    rdx, rdx
                jz      loc_1408A64D7
                movzx   eax, word ptr [rdx]
                add     eax, 4
                cmp     eax, 0FFFEh
                jbe     short loc_1408A6468

loc_1408A645E:                          ; CODE XREF: sub_1408A640C+123↓j
                mov     ebx, 80000005h
                jmp     loc_1408A666B
; ---------------------------------------------------------------------------

loc_1408A6468:                          ; CODE XREF: sub_1408A640C+50↑j
                mov     ecx, eax
                call    sub_140704930
                mov     [rdi+8], rax
                mov     rcx, rax
                test    rax, rax
                jnz     short loc_1408A6485

loc_1408A647B:                          ; CODE XREF: sub_1408A640C+E4↓j
                                        ; sub_1408A640C+139↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408A666B
; ---------------------------------------------------------------------------

loc_1408A6485:                          ; CODE XREF: sub_1408A640C+6D↑j
                movzx   eax, word ptr [r14]
                mov     ebp, 2
                mov     [rdi], ax
                movzx   edx, word ptr [r14]
                test    dx, dx
                jz      short loc_1408A64BE
                mov     r8d, edx
                mov     rdx, [r14+8]
                call    memmove
                movzx   ecx, word ptr [rdi]
                mov     rax, [rdi+8]
                shr     rcx, 1
                mov     [rax+rcx*2], bx
                add     [rdi], bp
                movzx   eax, word ptr [rdi]
                mov     rcx, [rdi+8]

loc_1408A64BE:                          ; CODE XREF: sub_1408A640C+8C↑j
                movzx   eax, ax
                shr     rax, 1
                mov     [rcx+rax*2], bx
                add     [rdi], bp
                movzx   eax, word ptr [rdi]
                mov     [rdi+2], ax
                jmp     loc_1408A666B
; ---------------------------------------------------------------------------

loc_1408A64D7:                          ; CODE XREF: sub_1408A640C+3F↑j
                test    r15, r15
                jz      loc_1408A6666
                mov     rdx, r15
                call    sub_14036E4C8
                test    al, al
                jnz     loc_1408A666B
                jmp     short loc_1408A647B
; ---------------------------------------------------------------------------

loc_1408A64F2:                          ; CODE XREF: sub_1408A640C+36↑j
                movzx   edx, word ptr [rcx]
                mov     ebp, 2
                mov     ecx, edx
                cmp     dx, bp
                ja      short loc_1408A6503
                mov     ecx, ebp

loc_1408A6503:                          ; CODE XREF: sub_1408A640C+F3↑j
                test    r14, r14
                jz      short loc_1408A6512
                movzx   eax, word ptr [r14]
                add     eax, ebp
                add     ecx, eax
                jmp     short loc_1408A6529
; ---------------------------------------------------------------------------

loc_1408A6512:                          ; CODE XREF: sub_1408A640C+FA↑j
                test    r15, r15
                jz      loc_1408A6666
                movzx   eax, word ptr [r8]
                add     ecx, eax
                test    dx, dx
                jz      short loc_1408A6529
                add     ecx, 0FFFFFFFEh

loc_1408A6529:                          ; CODE XREF: sub_1408A640C+104↑j
                                        ; sub_1408A640C+118↑j
                cmp     ecx, 0FFFEh
                ja      loc_1408A645E
                call    sub_140704930
                mov     qword ptr [rsp+58h+var_38+8], rax
                mov     r12, rax
                test    rax, rax
                jz      loc_1408A647B
                movzx   eax, word ptr [rdi]
                cmp     ax, bp
                jbe     short loc_1408A656A
                mov     rdx, [rdi+8]
                mov     r8d, eax
                mov     rcx, r12
                call    memmove
                movzx   esi, word ptr [rdi]
                sub     si, bp
                jmp     short loc_1408A656C
; ---------------------------------------------------------------------------

loc_1408A656A:                          ; CODE XREF: sub_1408A640C+145↑j
                mov     esi, ebx

loc_1408A656C:                          ; CODE XREF: sub_1408A640C+15C↑j
                test    r14, r14
                jz      short loc_1408A65B8
                test    r13b, r13b
                jnz     short loc_1408A658C
                mov     rdx, [r14+8]
                mov     rcx, [rdi+8]
                call    sub_140392DE0
                test    rax, rax
                jnz     loc_1408A6633

loc_1408A658C:                          ; CODE XREF: sub_1408A640C+168↑j
                movzx   r8d, word ptr [r14]
                mov     rdx, [r14+8]
                movzx   ecx, si
                add     rcx, r12
                call    memmove
                movzx   eax, word ptr [r14]
                add     ax, si
                movzx   ecx, ax
                mov     eax, ecx
                shr     rax, 1
                lea     esi, [rcx+rbp]
                mov     [r12+rax*2], bx
                jmp     short loc_1408A6633
; ---------------------------------------------------------------------------

loc_1408A65B8:                          ; CODE XREF: sub_1408A640C+163↑j
                test    r15, r15
                jz      short loc_1408A6633
                test    r13b, r13b
                jz      short loc_1408A65E1
                movzx   r8d, word ptr [r15]
                mov     rdx, [r15+8]
                movzx   ecx, si
                add     rcx, r12
                call    memmove
                movzx   eax, word ptr [r15]
                sub     ax, bp
                add     si, ax
                jmp     short loc_1408A6633
; ---------------------------------------------------------------------------

loc_1408A65E1:                          ; CODE XREF: sub_1408A640C+1B4↑j
                mov     r14, [r15+8]
                jmp     short loc_1408A662D
; ---------------------------------------------------------------------------

loc_1408A65E7:                          ; CODE XREF: sub_1408A640C+225↓j
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A65EB:                          ; CODE XREF: sub_1408A640C+1E7↓j
                inc     rax
                cmp     [r14+rax*2], bx
                jnz     short loc_1408A65EB
                mov     rcx, [rdi+8]
                lea     r13d, ds:2[rax*2]
                mov     rdx, r14
                mov     r15d, r13d
                call    sub_140392DE0
                test    rax, rax
                jnz     short loc_1408A6626
                movzx   ecx, si
                mov     r8d, r15d
                add     rcx, r12
                mov     rdx, r14
                call    memmove
                add     si, r13w

loc_1408A6626:                          ; CODE XREF: sub_1408A640C+203↑j
                shr     r15, 1
                lea     r14, [r14+r15*2]

loc_1408A662D:                          ; CODE XREF: sub_1408A640C+1D9↑j
                cmp     [r14], bx
                jnz     short loc_1408A65E7

loc_1408A6633:                          ; CODE XREF: sub_1408A640C+17A↑j
                                        ; sub_1408A640C+1AA↑j ...
                movzx   eax, si
                mov     rcx, rdi
                add     si, bp
                shr     rax, 1
                mov     word ptr [rsp+58h+var_38], si
                mov     word ptr [rsp+58h+var_38+2], si
                mov     [r12+rax*2], bx
                call    RtlFreeUnicodeString
                movups  xmm0, [rsp+58h+var_38]
                xorps   xmm1, xmm1
                movdqu  xmmword ptr [rdi], xmm0
                movups  [rsp+58h+var_38], xmm1
                jmp     short loc_1408A666B
; ---------------------------------------------------------------------------

loc_1408A6666:                          ; CODE XREF: sub_1408A640C+CE↑j
                                        ; sub_1408A640C+109↑j
                mov     ebx, 0C000000Dh

loc_1408A666B:                          ; CODE XREF: sub_1408A640C+57↑j
                                        ; sub_1408A640C+74↑j ...
                lea     rcx, [rsp+58h+var_38]
                call    RtlFreeUnicodeString
                mov     rbp, [rsp+58h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+58h+arg_0]
                mov     rsi, [rsp+58h+arg_10]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A640C   endp

byte_1408A6695  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D4A4↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0C0h

sub_1408A669C   proc near               ; CODE XREF: sub_1407BD860+9F5D8↑p
                                        ; sub_1408A80C0+E6↓p ...

var_1A0         = qword ptr -1A0h
var_198         = qword ptr -198h
var_190         = qword ptr -190h
var_188         = dword ptr -188h
var_180         = qword ptr -180h
var_178         = qword ptr -178h
var_170         = xmmword ptr -170h
var_160         = dword ptr -160h
var_15C         = dword ptr -15Ch
var_158         = qword ptr -158h
var_150         = dword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E0          = qword ptr -0E0h
var_D8          = dword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C4          = dword ptr -0C4h
var_C0          = dword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = dword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = dword ptr -0A0h
var_98          = dword ptr -98h
var_90          = qword ptr -90h
var_88          = dword ptr -88h
var_80          = qword ptr -80h
var_74          = dword ptr -74h
var_70          = dword ptr -70h
var_68          = qword ptr -68h
var_60          = dword ptr -60h
var_58          = qword ptr -58h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_40          = qword ptr -40h
arg_10          = qword ptr  20h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_10], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-90h]
                sub     rsp, 190h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+0C0h+var_40], rax
                xor     r13d, r13d
                mov     [rbp+0C0h+var_F0], rdx
                mov     r12, rdx
                mov     [rdx], r13d
                xorps   xmm0, xmm0
                mov     [rsp+1C0h+var_15C], r13d
                lea     r8, [rsp+1C0h+var_180]
                mov     [rsp+1C0h+var_148], r13
                lea     r15d, [r13+1]
                mov     [rbp+0C0h+var_140], r13
                xor     edx, edx
                mov     [rsp+1C0h+var_150], r15d
                mov     rdi, rcx
                mov     [rsp+1C0h+var_158], r13
                mov     ebx, r13d
                mov     [rbp+0C0h+var_138], r13
                mov     [rbp+0C0h+var_130], r13
                mov     [rsp+1C0h+var_178], r13
                mov     [rbp+0C0h+var_128], r13
                mov     [rbp+0C0h+var_120], r13
                movups  [rsp+1C0h+var_170], xmm0
                mov     [rbp+0C0h+var_118], r13
                mov     [rbp+0C0h+var_110], r13
                mov     [rbp+0C0h+var_108], r13
                mov     [rsp+1C0h+var_180], r13
                mov     [rsp+1C0h+var_160], r13d
                mov     [rbp+0C0h+var_100], r13
                mov     [rbp+0C0h+var_F8], r13
                call    sub_14073F2A8
                mov     r14d, eax
                mov     eax, 80000000h
                lea     ecx, [r14+rax]
                test    eax, ecx
                jnz     short loc_1408A675F
                cmp     r14d, 0C0000490h
                jnz     loc_1408A6D0A

loc_1408A675F:                          ; CODE XREF: sub_1408A669C+B4↑j
                mov     r8, [rdi+10h]
                lea     rax, [rsp+1C0h+var_160]
                mov     rdx, [rdi+8]
                mov     esi, 4
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+1C0h+var_188], r13d
                mov     [rsp+1C0h+var_190], rax
                lea     rax, [rsp+1C0h+var_15C]
                mov     [rsp+1C0h+var_198], rax
                lea     r9d, [rsi+7]
                lea     rax, [rsp+1C0h+var_150]
                mov     [rsp+1C0h+var_160], esi
                mov     [rsp+1C0h+var_1A0], rax
                call    sub_14062BA8C
                test    eax, eax
                js      short loc_1408A67B3
                cmp     [rsp+1C0h+var_150], esi
                jnz     short loc_1408A67B3
                cmp     [rsp+1C0h+var_160], esi
                jz      short loc_1408A67B8

loc_1408A67B3:                          ; CODE XREF: sub_1408A669C+109↑j
                                        ; sub_1408A669C+10F↑j
                mov     [rsp+1C0h+var_15C], r13d

loc_1408A67B8:                          ; CODE XREF: sub_1408A669C+115↑j
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_E0]
                mov     r8d, 0A0h
                call    memset
                mov     r9, [rdi+10h]
                lea     rax, qword_14000B480
                mov     [rbp+0C0h+var_E0], rax
                mov     ecx, 12h
                lea     rax, [rsp+1C0h+var_148]
                mov     dword ptr [rsp+1C0h+var_198], esi
                mov     [rbp+0C0h+var_D0], rax
                mov     r8d, r15d
                lea     rax, qword_14000B4F0
                mov     [rbp+0C0h+var_D8], ecx
                mov     [rbp+0C0h+var_B8], rax
                lea     edx, [rcx-0Ch]
                lea     rax, [rsp+1C0h+var_158]
                mov     [rbp+0C0h+var_C4], edx
                mov     [rbp+0C0h+var_A8], rax
                lea     rax, qword_140009F20
                mov     [rbp+0C0h+var_90], rax
                lea     rax, [rbp+0C0h+var_138]
                mov     [rbp+0C0h+var_80], rax
                lea     rax, qword_140034160
                mov     [rbp+0C0h+var_68], rax
                lea     rax, [rbp+0C0h+var_128]
                mov     [rbp+0C0h+var_58], rax
                lea     rax, [rbp+0C0h+var_E0]
                mov     [rbp+0C0h+var_74], edx
                mov     [rbp+0C0h+var_4C], edx
                mov     rdx, [rdi+8]
                mov     [rsp+1C0h+var_1A0], rax
                mov     [rbp+0C0h+var_B0], 10h
                mov     [rbp+0C0h+var_A0], 8
                mov     [rbp+0C0h+var_88], ecx
                mov     [rbp+0C0h+var_60], 2012h
                call    sub_14073EE68
                mov     r14d, eax
                test    eax, eax
                js      loc_1408A6D0A
                cmp     [rbp+0C0h+var_C0], r13d
                jge     short loc_1408A687D
                xor     edx, edx
                lea     rcx, [rsp+1C0h+var_148]
                call    RtlInitUnicodeString

loc_1408A687D:                          ; CODE XREF: sub_1408A669C+1D3↑j
                cmp     [rbp+0C0h+var_98], r13d
                mov     rax, [rsp+1C0h+var_158]
                cmovl   rax, r13
                mov     [rsp+1C0h+var_158], rax
                cmp     [rbp+0C0h+var_70], r13d
                jge     short loc_1408A68A0
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_138]
                call    RtlInitUnicodeString

loc_1408A68A0:                          ; CODE XREF: sub_1408A669C+1F7↑j
                cmp     [rbp+0C0h+var_48], r13d
                jge     short loc_1408A68B1
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_128]
                call    RtlInitUnicodeString

loc_1408A68B1:                          ; CODE XREF: sub_1408A669C+208↑j
                mov     rcx, [rbp+0C0h+var_130]
                test    rcx, rcx
                jz      short loc_1408A68E8
                lea     rax, [rsp+1C0h+var_178]
                mov     [rsp+1C0h+var_198], rax
                lea     r9, [rsp+1C0h+var_178+4]
                lea     rax, [rsp+1C0h+var_178+2]
                lea     r8, [rsp+1C0h+var_178+6]
                mov     [rsp+1C0h+var_1A0], rax
                lea     rdx, aHuHuHuHu  ; "%hu.%hu.%hu.%hu"
                call    swscanf_s
                cmp     eax, esi
                jz      short loc_1408A68ED

loc_1408A68E8:                          ; CODE XREF: sub_1408A669C+21C↑j
                mov     [rsp+1C0h+var_178], r13

loc_1408A68ED:                          ; CODE XREF: sub_1408A669C+24A↑j
                mov     rcx, [rdi+8]
                call    sub_1406794C0
                mov     r15d, 2
                test    al, al
                jz      loc_1408A6A0C
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_E0]
                mov     r8d, 0A0h
                call    memset
                mov     r9, [rdi+10h]
                lea     ecx, [r15-1]
                mov     rdx, [rdi+8]
                lea     rax, qword_14002E5D0
                mov     [rbp+0C0h+var_E0], rax
                mov     r8d, ecx
                lea     rax, [rbp+0C0h+var_118]
                mov     dword ptr [rsp+1C0h+var_198], ecx
                mov     [rbp+0C0h+var_D0], rax
                lea     rax, [rbp+0C0h+var_E0]
                mov     [rsp+1C0h+var_1A0], rax
                mov     [rbp+0C0h+var_D8], 2012h
                mov     [rbp+0C0h+var_C4], 6
                call    sub_14073EE68
                mov     r14d, eax
                test    eax, eax
                js      loc_1408A6D0A
                cmp     [rbp+0C0h+var_C0], r13d
                jl      loc_1408A6A0C
                mov     rdi, [rbp+0C0h+var_110]
                test    rdi, rdi
                jz      loc_1408A6A0C
                cmp     word ptr [rbp+0C0h+var_118], r15w
                jbe     loc_1408A6A0C
                movzx   eax, word ptr [rdi]
                test    ax, ax
                jz      short loc_1408A69ED

loc_1408A698C:                          ; CODE XREF: sub_1408A669C+33C↓j
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+0C0h+var_108]
                mov     [rsp+1C0h+var_198], rax
                mov     r9d, 20019h
                mov     r8d, 9
                mov     byte ptr [rsp+1C0h+var_1A0], r13b
                mov     rdx, rdi
                call    sub_1406CC3A4
                mov     r14d, eax
                test    eax, eax
                jns     short loc_1408A69DC
                mov     r14d, r13d
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A69C3:                          ; CODE XREF: sub_1408A669C+32F↓j
                inc     rax
                cmp     [rdi+rax*2], r13w
                jnz     short loc_1408A69C3
                lea     rdi, [rdi+rax*2]
                add     rdi, r15
                cmp     [rdi], r13w
                jnz     short loc_1408A698C
                jmp     short loc_1408A69ED
; ---------------------------------------------------------------------------

loc_1408A69DC:                          ; CODE XREF: sub_1408A669C+31E↑j
                mov     rcx, [rbp+0C0h+var_108]
                call    ZwClose
                movzx   eax, word ptr [rdi]
                test    ax, ax
                jnz     short loc_1408A6A0C

loc_1408A69ED:                          ; CODE XREF: sub_1408A669C+2EE↑j
                                        ; sub_1408A669C+33E↑j
                mov     rdi, [rsp+1C0h+var_180]
                test    rdi, rdi
                jnz     short loc_1408A6A11
                mov     al, cs:byte_140C0F3E8
                neg     al
                sbb     ebx, ebx
                and     ebx, 3FFFEh
                add     ebx, r15d
                jmp     short loc_1408A6A11
; ---------------------------------------------------------------------------

loc_1408A6A0C:                          ; CODE XREF: sub_1408A669C+262↑j
                                        ; sub_1408A669C+2CA↑j ...
                mov     rdi, [rsp+1C0h+var_180]

loc_1408A6A11:                          ; CODE XREF: sub_1408A669C+359↑j
                                        ; sub_1408A669C+36E↑j
                test    byte ptr [rsp+1C0h+var_15C], 40h
                jnz     short loc_1408A6A21
                mov     rsi, [rbp+0C0h+var_140]
                test    rsi, rsi
                jnz     short loc_1408A6A2F

loc_1408A6A21:                          ; CODE XREF: sub_1408A669C+37A↑j
                test    rdi, rdi
                jz      loc_1408A6C99
                jmp     loc_1408A6C90
; ---------------------------------------------------------------------------

loc_1408A6A2F:                          ; CODE XREF: sub_1408A669C+383↑j
                test    rdi, rdi
                jz      loc_1408A6C5E
                lea     rcx, [rdi+28h]
                mov     r8b, 1
                lea     rdx, [rsp+1C0h+var_148]
                call    RtlEqualUnicodeString
                test    al, al
                jz      loc_1408A6C5E
                mov     rax, [rsp+1C0h+var_158]
                cmp     [rdi+70h], rax
                jnz     loc_1408A6C90
                mov     rax, [rsp+1C0h+var_178]
                cmp     [rdi+78h], rax
                jnz     loc_1408A6C90
                mov     r15, [rbp+0C0h+var_120]
                lea     rax, [rdi+0D0h]
                test    r15, r15
                jz      loc_1408A6C46
                cmp     [rax], rax
                jz      loc_1408A6C90
                lea     rax, [rsp+1C0h+var_170]
                lea     rcx, [rsp+1C0h+var_170]
                mov     qword ptr [rsp+1C0h+var_170+8], rax
                mov     qword ptr [rsp+1C0h+var_170], rcx
                cmp     [r15], r13w
                jz      loc_1408A6BD2

loc_1408A6AAA:                          ; CODE XREF: sub_1408A669C+51B↓j
                lea     rax, [rdi+0D0h]
                cmp     [rax], rax
                jz      loc_1408A6BC7
                lea     rcx, [rsp+1C0h+var_148]
                call    RtlFreeUnicodeString
                lea     rax, [rsp+1C0h+var_178]
                mov     rcx, r15
                mov     [rsp+1C0h+var_198], rax
                lea     rdx, [rsp+1C0h+var_148]
                lea     rax, [rsp+1C0h+var_158]
                mov     [rsp+1C0h+var_1A0], rax
                call    sub_1408ABDAC
                mov     rdi, [rsp+1C0h+var_180]
                test    eax, eax
                js      loc_1408A6BC7
                lea     r13, [rdi+0D0h]
                mov     r12, [r13+0]
                cmp     r12, r13
                jz      loc_1408A6BC4

loc_1408A6B06:                          ; CODE XREF: sub_1408A669C+48C↓j
                lea     rcx, [r12+28h]
                mov     r8b, 1
                lea     rdx, [rsp+1C0h+var_148]
                mov     rsi, r12
                call    RtlEqualUnicodeString
                test    al, al
                jnz     short loc_1408A6B2A
                mov     r12, [r12]
                xor     esi, esi
                cmp     r12, r13
                jnz     short loc_1408A6B06

loc_1408A6B2A:                          ; CODE XREF: sub_1408A669C+481↑j
                xor     r13d, r13d
                test    rsi, rsi
                jz      loc_1408A6BC7
                mov     rax, [rsp+1C0h+var_158]
                cmp     [rsi+70h], rax
                jnz     loc_1408A6BC7
                mov     rax, [rsp+1C0h+var_178]
                cmp     [rsi+78h], rax
                jnz     short loc_1408A6BC7
                mov     rax, [rsi]
                cmp     [rax+8], rsi
                jnz     loc_1408A6C3F
                mov     rcx, [rsi+8]
                cmp     [rcx], rsi
                jnz     loc_1408A6C3F
                mov     [rcx], rax
                mov     [rax+8], rcx
                lea     rcx, [rsp+1C0h+var_170]
                mov     rax, qword ptr [rsp+1C0h+var_170+8]
                cmp     [rax], rcx
                jnz     loc_1408A6C3F
                mov     [rsi+8], rax
                lea     rcx, [rsp+1C0h+var_170]
                mov     [rsi], rcx
                mov     [rax], rsi
                or      rax, 0FFFFFFFFFFFFFFFFh
                mov     qword ptr [rsp+1C0h+var_170+8], rsi

loc_1408A6B9C:                          ; CODE XREF: sub_1408A669C+508↓j
                inc     rax
                cmp     [r15+rax*2], r13w
                jnz     short loc_1408A6B9C
                mov     rdi, [rsp+1C0h+var_180]
                lea     r15, [r15+rax*2]
                add     r15, 2
                cmp     [r15], r13w
                jnz     loc_1408A6AAA
                mov     rcx, qword ptr [rsp+1C0h+var_170]
                jmp     short loc_1408A6BD2
; ---------------------------------------------------------------------------

loc_1408A6BC4:                          ; CODE XREF: sub_1408A669C+464↑j
                xor     r13d, r13d

loc_1408A6BC7:                          ; CODE XREF: sub_1408A669C+418↑j
                                        ; sub_1408A669C+450↑j ...
                mov     rcx, qword ptr [rsp+1C0h+var_170]
                cmp     [r15], r13w
                jnz     short loc_1408A6BDE

loc_1408A6BD2:                          ; CODE XREF: sub_1408A669C+408↑j
                                        ; sub_1408A669C+526↑j
                lea     rax, [rdi+0D0h]
                cmp     [rax], rax
                jz      short loc_1408A6BE1

loc_1408A6BDE:                          ; CODE XREF: sub_1408A669C+534↑j
                or      ebx, 20h

loc_1408A6BE1:                          ; CODE XREF: sub_1408A669C+540↑j
                                        ; sub_1408A669C+5A1↓j
                lea     rax, [rsp+1C0h+var_170]
                cmp     rcx, rax
                jz      loc_1408A6C95
                lea     rax, [rsp+1C0h+var_170]
                cmp     [rcx+8], rax
                jnz     short loc_1408A6C3F
                mov     rax, [rcx]
                cmp     [rax+8], rcx
                jnz     short loc_1408A6C3F
                mov     qword ptr [rsp+1C0h+var_170], rax
                lea     rdx, [rsp+1C0h+var_170]
                mov     [rax+8], rdx
                mov     rax, [rsp+1C0h+var_180]
                add     rax, 0D0h
                mov     rdx, [rax+8]
                cmp     [rdx], rax
                jnz     short loc_1408A6C3F
                mov     [rcx], rax
                mov     [rcx+8], rdx
                mov     [rdx], rcx
                mov     [rax+8], rcx
                mov     rcx, qword ptr [rsp+1C0h+var_170]
                mov     rdi, [rsp+1C0h+var_180]
                jmp     short loc_1408A6BE1
; ---------------------------------------------------------------------------

loc_1408A6C3F:                          ; CODE XREF: sub_1408A669C+4BB↑j
                                        ; sub_1408A669C+4C8↑j ...
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408A6C46:                          ; CODE XREF: sub_1408A669C+3E1↑j
                cmp     [rax], rax
                jnz     short loc_1408A6C90
                cmp     cs:byte_140C0F3E8, r13b
                jz      loc_1408A6D06
                bts     ebx, 12h
                jmp     short loc_1408A6C99
; ---------------------------------------------------------------------------

loc_1408A6C5E:                          ; CODE XREF: sub_1408A669C+396↑j
                                        ; sub_1408A669C+3AF↑j
                cmp     cs:byte_140C0F3E8, r13b
                jz      short loc_1408A6C90
                mov     eax, cs:dword_140D2D03C
                test    r15b, al
                jz      short loc_1408A6C90
                bts     ebx, 12h
                test    rdi, rdi
                jz      short loc_1408A6C99
                lea     rdx, [rbp+0C0h+var_100]
                mov     rcx, rsi
                call    sub_14073F1D0
                mov     rdi, [rsp+1C0h+var_180]
                test    eax, eax
                jns     short loc_1408A6C99

loc_1408A6C90:                          ; CODE XREF: sub_1408A669C+38E↑j
                                        ; sub_1408A669C+3BE↑j ...
                or      ebx, 20h
                jmp     short loc_1408A6C99
; ---------------------------------------------------------------------------

loc_1408A6C95:                          ; CODE XREF: sub_1408A669C+54D↑j
                mov     r12, [rbp+0C0h+var_F0]

loc_1408A6C99:                          ; CODE XREF: sub_1408A669C+388↑j
                                        ; sub_1408A669C+5C0↑j ...
                cmp     cs:byte_140C0F3E8, r13b
                jz      short loc_1408A6D06
                test    rdi, rdi
                jz      short loc_1408A6D06
                test    bl, 20h
                jz      short loc_1408A6D06
                mov     rcx, rdi
                call    sub_14076A5CC
                mov     r14d, eax
                test    eax, eax
                js      short loc_1408A6CEC
                mov     rcx, [rsp+1C0h+var_180]
                lea     rax, [rcx+0D0h]
                mov     rdi, [rax]
                jmp     short loc_1408A6CE7
; ---------------------------------------------------------------------------

loc_1408A6CCC:                          ; CODE XREF: sub_1408A669C+64E↓j
                call    sub_14076A5CC
                mov     r14d, eax
                test    eax, eax
                js      short loc_1408A6CEC
                mov     rcx, [rsp+1C0h+var_180]
                mov     rdi, [rdi]
                lea     rax, [rcx+0D0h]

loc_1408A6CE7:                          ; CODE XREF: sub_1408A669C+62E↑j
                cmp     rdi, rax
                jnz     short loc_1408A6CCC

loc_1408A6CEC:                          ; CODE XREF: sub_1408A669C+61D↑j
                                        ; sub_1408A669C+63A↑j
                cmp     r14d, 0C0000493h
                jnz     short loc_1408A6D01
                and     ebx, 0FFFFFFDFh
                mov     r14d, r13d
                bts     ebx, 12h
                jmp     short loc_1408A6D06
; ---------------------------------------------------------------------------

loc_1408A6D01:                          ; CODE XREF: sub_1408A669C+657↑j
                test    r14d, r14d
                js      short loc_1408A6D0A

loc_1408A6D06:                          ; CODE XREF: sub_1408A669C+5B6↑j
                                        ; sub_1408A669C+604↑j ...
                mov     [r12], ebx

loc_1408A6D0A:                          ; CODE XREF: sub_1408A669C+BD↑j
                                        ; sub_1408A669C+1C9↑j ...
                lea     rcx, [rsp+1C0h+var_148]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0C0h+var_138]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0C0h+var_128]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0C0h+var_100]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0C0h+var_118]
                call    RtlFreeUnicodeString
                mov     rcx, [rsp+1C0h+var_180]
                test    rcx, rcx
                jz      short loc_1408A6D47
                call    sub_140749584

loc_1408A6D47:                          ; CODE XREF: sub_1408A669C+6A4↑j
                mov     eax, r14d
                mov     rcx, [rbp+0C0h+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+1C0h+arg_10]
                add     rsp, 190h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A669C
sub_1408A669C   endp

byte_1408A6D75  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D4B0↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=90h

sub_1408A6D7C   proc near               ; CODE XREF: sub_14076D1AC+DA8C9↑p
                                        ; sub_14076D1AC+DA8F4↑p ...

var_170         = dword ptr -170h
var_168         = qword ptr -168h
var_160         = qword ptr -160h
var_158         = qword ptr -158h
var_150         = dword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = xmmword ptr -130h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = byte ptr -110h
var_108         = dword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = dword ptr -0F0h
var_D0          = dword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = dword ptr -0B8h
var_98          = dword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = dword ptr -80h
var_30          = qword ptr -30h
var_20          = byte ptr -20h
arg_10          = qword ptr  20h
arg_18          = qword ptr  28h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_10], rbx
                mov     [rsp-8+arg_18], rsi
                push    rbp
                push    rdi
                push    r12
                push    r14
                push    r15
                lea     rbp, [rsp-70h]
                sub     rsp, 170h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+90h+var_30], rax
                xor     r12d, r12d
                mov     r15, rdx
                mov     rdx, [rcx+8]
                mov     rsi, rcx
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+190h+var_148], r12
                mov     [rsp+190h+var_120], r12
                mov     [rsp+190h+var_118], r12
                mov     [rsp+190h+var_160], r12
                mov     [rsp+190h+var_158], r12
                mov     [rsp+190h+var_140], r12
                mov     [rsp+190h+var_138], r12
                mov     [rsp+190h+var_150], r12d
                test    rcx, rcx
                jnz     short loc_1408A6DEE
                mov     ecx, r12d
                jmp     short loc_1408A6DF5
; ---------------------------------------------------------------------------

loc_1408A6DEE:                          ; CODE XREF: sub_1408A6D7C+6B↑j
                mov     rcx, [rcx+0E0h]

loc_1408A6DF5:                          ; CODE XREF: sub_1408A6D7C+70↑j
                lea     rax, [rsp+190h+var_148]
                xor     r9d, r9d
                mov     [rsp+190h+var_168], rax
                mov     r8, r15
                mov     [rsp+190h+var_170], 20019h
                call    sub_14062CECC
                mov     r14d, eax
                cmp     eax, 0C0000034h
                jnz     short loc_1408A6E24

loc_1408A6E1C:                          ; CODE XREF: sub_1408A6D7C+18A↓j
                mov     r14d, r12d
                jmp     loc_1408A7161
; ---------------------------------------------------------------------------

loc_1408A6E24:                          ; CODE XREF: sub_1408A6D7C+9E↑j
                test    eax, eax
                js      loc_1408A7161
                xor     edx, edx
                lea     rcx, [rbp+90h+var_110]
                mov     r8d, 0E0h
                call    memset
                mov     rdx, [rsp+190h+var_148]
                lea     rax, aClassguid_0 ; "ClassGuid"
                mov     [rbp+90h+var_100], rax
                lea     r8, [rbp+90h+var_110]
                mov     ecx, 120h
                mov     [rbp+90h+var_F0], 1000000h
                lea     rax, [rsp+190h+var_160]
                mov     [rbp+90h+var_108], ecx
                mov     [rbp+90h+var_F8], rax
                xor     r9d, r9d
                lea     rax, aLocationpaths ; "LocationPaths"
                mov     [rbp+90h+var_98], ecx
                mov     [rbp+90h+var_C8], rax
                mov     ecx, 0C0000000h
                lea     rax, [rsp+190h+var_140]
                mov     [rbp+90h+var_B8], 7000000h
                mov     [rbp+90h+var_C0], rax
                lea     rax, aPersist   ; "Persist"
                mov     [rbp+90h+var_90], rax
                lea     rax, [rsp+190h+var_150]
                mov     [rbp+90h+var_88], rax
                mov     [rbp+90h+var_D0], 130h
                mov     [rbp+90h+var_80], 4000000h
                mov     byte ptr [rsp+190h+var_168], 1
                call    sub_14062B088
                mov     r14d, eax
                test    eax, eax
                js      loc_1408A7161
                cmp     word ptr [rsp+190h+var_160], r12w
                jnz     short loc_1408A6EDF
                cmp     [rsp+190h+var_158], r12
                jz      short loc_1408A6EDF
                lea     rcx, [rsp+190h+var_160]
                call    RtlFreeUnicodeString

loc_1408A6EDF:                          ; CODE XREF: sub_1408A6D7C+150↑j
                                        ; sub_1408A6D7C+157↑j
                mov     rcx, [rsp+190h+var_138]
                test    rcx, rcx
                jz      short loc_1408A6F01
                movzx   edx, word ptr [rsp+190h+var_140]
                call    sub_14036E494
                test    al, al
                jnz     short loc_1408A6F01
                lea     rcx, [rsp+190h+var_140]
                call    RtlFreeUnicodeString

loc_1408A6F01:                          ; CODE XREF: sub_1408A6D7C+16B↑j
                                        ; sub_1408A6D7C+179↑j
                cmp     [rsp+190h+var_150], r12d
                jnz     loc_1408A6E1C
                mov     rcx, [rsp+190h+var_148]
                call    ZwClose
                mov     rax, cs:qword_140CF4378
                mov     rcx, [rsi+8]
                mov     [rsp+190h+var_148], r12
                test    rax, rax
                jz      short loc_1408A6F3D
                mov     rax, [rax+0E0h]
                test    rax, rax
                jz      short loc_1408A6F3D
                mov     r9, [rax+8]
                jmp     short loc_1408A6F40
; ---------------------------------------------------------------------------

loc_1408A6F3D:                          ; CODE XREF: sub_1408A6D7C+1AD↑j
                                        ; sub_1408A6D7C+1B9↑j
                xor     r9d, r9d

loc_1408A6F40:                          ; CODE XREF: sub_1408A6D7C+1BF↑j
                mov     rdx, r15
                mov     r8b, 1
                call    sub_14097E10C
                mov     rbx, [rsi+18h]
                test    rbx, rbx
                jz      short loc_1408A6F7A
                xorps   xmm0, xmm0
                lea     rcx, [rsp+190h+var_130]
                mov     rdx, r15
                movups  [rsp+190h+var_130], xmm0
                call    RtlInitUnicodeStringEx
                test    eax, eax
                js      short loc_1408A6F7A
                lea     rdx, [rsp+190h+var_130]
                mov     rcx, rbx
                call    ZwDeleteValueKey

loc_1408A6F7A:                          ; CODE XREF: sub_1408A6D7C+1D6↑j
                                        ; sub_1408A6D7C+1EF↑j
                mov     rdx, [rsi+10h]
                test    rdx, rdx
                jz      loc_1408A702D
                mov     r8, [rsp+190h+var_158]
                test    r8, r8
                jz      loc_1408A702D
                mov     rax, cs:qword_140CF4378
                mov     rcx, r12
                test    rax, rax
                jz      short loc_1408A6FAB
                mov     rcx, [rax+0E0h]

loc_1408A6FAB:                          ; CODE XREF: sub_1408A6D7C+226↑j
                lea     rax, [rsp+190h+var_120]
                xor     r9d, r9d
                mov     [rsp+190h+var_168], rax
                mov     [rsp+190h+var_170], 0F003Fh
                call    sub_14062CECC
                test    eax, eax
                js      short loc_1408A6FFB
                xorps   xmm0, xmm0
                lea     rcx, [rsp+190h+var_130]
                mov     rdx, r15
                movups  [rsp+190h+var_130], xmm0
                call    RtlInitUnicodeStringEx
                test    eax, eax
                js      short loc_1408A6FF1
                mov     rcx, [rsp+190h+var_120]
                lea     rdx, [rsp+190h+var_130]
                call    ZwDeleteValueKey

loc_1408A6FF1:                          ; CODE XREF: sub_1408A6D7C+264↑j
                mov     rcx, [rsp+190h+var_120]
                call    ZwClose

loc_1408A6FFB:                          ; CODE XREF: sub_1408A6D7C+24B↑j
                mov     rax, cs:qword_140CF4378
                mov     rcx, [rsi+10h]
                test    rax, rax
                jz      short loc_1408A701D
                mov     rax, [rax+0E0h]
                test    rax, rax
                jz      short loc_1408A701D
                mov     r9, [rax+8]
                jmp     short loc_1408A7020
; ---------------------------------------------------------------------------

loc_1408A701D:                          ; CODE XREF: sub_1408A6D7C+28D↑j
                                        ; sub_1408A6D7C+299↑j
                xor     r9d, r9d

loc_1408A7020:                          ; CODE XREF: sub_1408A6D7C+29F↑j
                mov     rdx, [rsp+190h+var_158]
                xor     r8d, r8d
                call    sub_14097E10C

loc_1408A702D:                          ; CODE XREF: sub_1408A6D7C+205↑j
                                        ; sub_1408A6D7C+213↑j
                mov     rbx, [rsp+190h+var_138]
                test    rbx, rbx
                jz      loc_1408A7161
                lea     rdi, [rsi+20h]
                cmp     [rdi], r12
                jnz     loc_1408A7157
                mov     rax, cs:qword_140CF4378
                mov     rcx, r12
                mov     rdx, [rsi]
                test    rax, rax
                jz      short loc_1408A7061
                mov     rcx, [rax+0E0h]

loc_1408A7061:                          ; CODE XREF: sub_1408A6D7C+2DC↑j
                mov     [rsp+190h+var_168], rdi
                lea     r8, aLocations  ; "Locations"
                xor     r9d, r9d
                mov     [rsp+190h+var_170], 0F003Fh
                call    sub_14062CECC
                cmp     eax, 0C0000034h
                jnz     short loc_1408A709A
                mov     [rdi], r12

loc_1408A7087:                          ; CODE XREF: sub_1408A6D7C+320↓j
                mov     rbx, [rsp+190h+var_138]
                cmp     [rdi], r12
                jz      loc_1408A7161
                jmp     loc_1408A7157
; ---------------------------------------------------------------------------

loc_1408A709A:                          ; CODE XREF: sub_1408A6D7C+306↑j
                test    eax, eax
                jns     short loc_1408A7087
                mov     r14d, eax
                jmp     loc_1408A7161
; ---------------------------------------------------------------------------

loc_1408A70A6:                          ; CODE XREF: sub_1408A6D7C+3DF↓j
                mov     rax, cs:qword_140CF4378
                mov     rcx, r12
                mov     rdx, [rdi]
                test    rax, rax
                jz      short loc_1408A70BF
                mov     rcx, [rax+0E0h]

loc_1408A70BF:                          ; CODE XREF: sub_1408A6D7C+33A↑j
                lea     rax, [rsp+190h+var_118]
                xor     r9d, r9d
                mov     [rsp+190h+var_168], rax
                mov     r8, rbx
                mov     [rsp+190h+var_170], 0F003Fh
                call    sub_14062CECC
                test    eax, eax
                js      short loc_1408A7112
                xorps   xmm0, xmm0
                lea     rcx, [rsp+190h+var_130]
                mov     rdx, r15
                movups  [rsp+190h+var_130], xmm0
                call    RtlInitUnicodeStringEx
                test    eax, eax
                js      short loc_1408A7108
                mov     rcx, [rsp+190h+var_118]
                lea     rdx, [rsp+190h+var_130]
                call    ZwDeleteValueKey

loc_1408A7108:                          ; CODE XREF: sub_1408A6D7C+37B↑j
                mov     rcx, [rsp+190h+var_118]
                call    ZwClose

loc_1408A7112:                          ; CODE XREF: sub_1408A6D7C+362↑j
                mov     rax, cs:qword_140CF4378
                mov     rcx, [rdi]
                test    rax, rax
                jz      short loc_1408A7133
                mov     rax, [rax+0E0h]
                test    rax, rax
                jz      short loc_1408A7133
                mov     r9, [rax+8]
                jmp     short loc_1408A7136
; ---------------------------------------------------------------------------

loc_1408A7133:                          ; CODE XREF: sub_1408A6D7C+3A3↑j
                                        ; sub_1408A6D7C+3AF↑j
                xor     r9d, r9d

loc_1408A7136:                          ; CODE XREF: sub_1408A6D7C+3B5↑j
                mov     rdx, rbx
                xor     r8d, r8d
                call    sub_14097E10C
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A7145:                          ; CODE XREF: sub_1408A6D7C+3D1↓j
                inc     rax
                cmp     [rbx+rax*2], r12w
                jnz     short loc_1408A7145
                lea     rbx, [rbx+rax*2]
                add     rbx, 2

loc_1408A7157:                          ; CODE XREF: sub_1408A6D7C+2C6↑j
                                        ; sub_1408A6D7C+319↑j
                cmp     [rbx], r12w
                jnz     loc_1408A70A6

loc_1408A7161:                          ; CODE XREF: sub_1408A6D7C+A3↑j
                                        ; sub_1408A6D7C+AA↑j ...
                lea     rcx, [rsp+190h+var_160]
                call    RtlFreeUnicodeString
                lea     rcx, [rsp+190h+var_140]
                call    RtlFreeUnicodeString
                mov     rcx, [rsp+190h+var_148]
                test    rcx, rcx
                jz      short loc_1408A7184
                call    ZwClose

loc_1408A7184:                          ; CODE XREF: sub_1408A6D7C+401↑j
                mov     eax, r14d
                mov     rcx, [rbp+90h+var_30]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+190h+var_20]
                mov     rbx, [r11+40h]
                mov     rsi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A6D7C
sub_1408A6D7C   endp

byte_1408A71B0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D4BC↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A71B8   proc near               ; CODE XREF: sub_14050E200+1D↑p
                                        ; sub_140766374+DE8D1↑p ...

var_A0          = dword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = dword ptr -70h
var_60          = xmmword ptr -60h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = xmmword ptr -30h
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_18          = qword ptr  28h

                mov     [rsp-8+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                lea     rbp, [rsp-37h]
                sub     rsp, 0A0h
                mov     r14, rdx
                mov     rdi, rcx
                xorps   xmm0, xmm0
                lea     rdx, aDevice_1  ; "Device"
                xor     r15d, r15d
                lea     rcx, [rbp+57h+var_60]
                mov     [rbp+57h+arg_18], r15
                mov     rsi, r8
                movups  [rbp+57h+var_60], xmm0
                call    RtlInitUnicodeString
                lea     rax, [rbp+57h+var_60]
                mov     [rbp+57h+var_50], 30h ; '0'
                xorps   xmm0, xmm0
                mov     [rbp+57h+var_40], rax
                lea     r8, [rbp+57h+var_50]
                mov     [rbp+57h+var_38], 240h
                mov     edx, 20019h
                mov     [rbp+57h+arg_8], r15
                lea     rcx, [rbp+57h+arg_8]
                mov     [rbp+57h+var_48], r14
                movdqu  [rbp+57h+var_30], xmm0
                call    ZwOpenKey
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jz      short loc_1408A72AE
                test    eax, eax
                js      loc_1408A73B0
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+57h+arg_18]
                mov     [rsp+0C0h+var_88], r15
                lea     r8d, [r15+32h]
                mov     [rsp+0C0h+var_90], rax
                mov     rdx, rdi
                mov     byte ptr [rsp+0C0h+var_98], 1
                mov     [rsp+0C0h+var_A0], 0F003Fh
                call    sub_1405E0494
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A73B0
                mov     rdx, [rbp+57h+arg_18]
                mov     r9, rsi
                mov     rcx, [rbp+57h+arg_8]
                call    sub_14075C41C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A73B0
                mov     rcx, [rbp+57h+arg_8]
                call    ZwClose
                mov     rcx, [rbp+57h+arg_18]
                mov     [rbp+57h+arg_8], r15
                call    ZwClose
                mov     [rbp+57h+arg_18], r15

loc_1408A72AE:                          ; CODE XREF: sub_1408A71B8+80↑j
                lea     rdx, aProperties ; "Properties"
                lea     rcx, [rbp+57h+var_60]
                call    RtlInitUnicodeString
                lea     rax, [rbp+57h+var_60]
                mov     [rbp+57h+var_50], 30h ; '0'
                xorps   xmm0, xmm0
                mov     [rbp+57h+var_40], rax
                lea     r8, [rbp+57h+var_50]
                mov     [rbp+57h+var_38], 240h
                mov     edx, 20019h
                mov     [rbp+57h+arg_8], r15
                lea     rcx, [rbp+57h+arg_8]
                mov     [rbp+57h+var_48], r14
                movdqu  [rbp+57h+var_30], xmm0
                call    ZwOpenKey
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jnz     short loc_1408A7309
                mov     ebx, r15d
                jmp     loc_1408A73B0
; ---------------------------------------------------------------------------

loc_1408A7309:                          ; CODE XREF: sub_1408A71B8+147↑j
                test    eax, eax
                js      loc_1408A73B0
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+57h+arg_18]
                mov     [rsp+0C0h+var_88], r15
                mov     r8d, 30h ; '0'
                mov     [rsp+0C0h+var_90], rax
                mov     rdx, rdi
                mov     byte ptr [rsp+0C0h+var_98], r15b
                mov     [rsp+0C0h+var_A0], 0F003Fh
                call    sub_1405E0494
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A73B0
                mov     rax, [rbp+57h+arg_18]
                mov     r9, r14
                mov     rcx, cs:qword_140CF4378
                xor     r8d, r8d
                mov     [rsp+0C0h+var_70], r15d
                xor     edx, edx
                mov     [rsp+0C0h+var_78], r15
                mov     [rsp+0C0h+var_80], r15
                mov     [rsp+0C0h+var_88], rax
                mov     dword ptr [rsp+0C0h+var_90], 3
                mov     [rsp+0C0h+var_98], rdi
                call    sub_140766848
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A73B0
                mov     rdx, [rbp+57h+arg_18]
                mov     r9d, 3
                mov     rcx, [rbp+57h+arg_8]
                mov     r8, rdi
                mov     [rsp+0C0h+var_90], rsi
                mov     [rsp+0C0h+var_98], r15
                mov     [rsp+0C0h+var_A0], 1
                call    sub_14075C52C
                mov     ebx, eax

loc_1408A73B0:                          ; CODE XREF: sub_1408A71B8+84↑j
                                        ; sub_1408A71B8+BC↑j ...
                mov     rcx, [rbp+57h+arg_8]
                test    rcx, rcx
                jz      short loc_1408A73BE
                call    ZwClose

loc_1408A73BE:                          ; CODE XREF: sub_1408A71B8+1FF↑j
                mov     rcx, [rbp+57h+arg_18]
                test    rcx, rcx
                jz      short loc_1408A73CC
                call    ZwClose

loc_1408A73CC:                          ; CODE XREF: sub_1408A71B8+20D↑j
                mov     eax, ebx
                mov     rbx, [rsp+0C0h+arg_0]
                add     rsp, 0A0h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A71B8   endp

algn_1408A73E6:                         ; DATA XREF: .pdata:000000014011D4C8↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408A73F0   proc near               ; DATA XREF: .pdata:000000014011D4D4↑o
                                        ; sub_140765E60+DE811↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                mov     eax, [rdx+68h]
                mov     r8d, 1
                test    al, 2
                jnz     short loc_1408A7456
                mov     r9, cs:off_140D2D770
                mov     rdx, [rcx]
                sub     rdx, [r9]
                jnz     short loc_1408A7419
                mov     rdx, [rcx+8]
                sub     rdx, [r9+8]

loc_1408A7419:                          ; CODE XREF: sub_1408A73F0+1F↑j
                test    rdx, rdx
                jnz     short loc_1408A7456
                mov     ebx, [rcx+10h]
                lea     r9, off_140D2D770
                xor     r10d, r10d

loc_1408A742B:                          ; CODE XREF: sub_1408A73F0+64↓j
                mov     r11, [r9]
                cmp     [r11+10h], ebx
                jnz     short loc_1408A7449
                mov     rdx, [r11]
                sub     rdx, [rcx]
                jnz     short loc_1408A7444
                mov     rdx, [r11+8]
                sub     rdx, [rcx+8]

loc_1408A7444:                          ; CODE XREF: sub_1408A73F0+4A↑j
                test    rdx, rdx
                jz      short loc_1408A748F

loc_1408A7449:                          ; CODE XREF: sub_1408A73F0+42↑j
                add     r10d, r8d
                add     r9, 8
                cmp     r10d, 0Ah
                jb      short loc_1408A742B

loc_1408A7456:                          ; CODE XREF: sub_1408A73F0+10↑j
                                        ; sub_1408A73F0+2C↑j
                mov     ebx, [rcx+10h]
                lea     r9, off_140D2D318
                xor     r10d, r10d

loc_1408A7463:                          ; CODE XREF: sub_1408A73F0+9B↓j
                mov     r11, [r9]
                cmp     [r11+10h], ebx
                jnz     short loc_1408A7481
                mov     rdx, [r11]
                sub     rdx, [rcx]
                jnz     short loc_1408A747C
                mov     rdx, [r11+8]
                sub     rdx, [rcx+8]

loc_1408A747C:                          ; CODE XREF: sub_1408A73F0+82↑j
                test    rdx, rdx
                jz      short loc_1408A748F

loc_1408A7481:                          ; CODE XREF: sub_1408A73F0+7A↑j
                add     r10d, r8d
                add     r9, 8
                cmp     r10d, r8d
                jb      short loc_1408A7463
                jmp     short loc_1408A7492
; ---------------------------------------------------------------------------

loc_1408A748F:                          ; CODE XREF: sub_1408A73F0+57↑j
                                        ; sub_1408A73F0+8F↑j
                xor     r8b, r8b

loc_1408A7492:                          ; CODE XREF: sub_1408A73F0+9D↑j
                mov     rbx, [rsp+arg_0]
                mov     al, r8b
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A73F0   endp

byte_1408A749C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D4D4↑o

; =============== S U B R O U T I N E =======================================


sub_1408A74A4   proc near               ; CODE XREF: sub_1408A9890+1213↓p
                                        ; sub_1408ABBC0+1D7↓p
                                        ; DATA XREF: ...

var_18          = dword ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+18h], rbp
                mov     [rax+20h], rsi
                push    rdi
                sub     rsp, 30h
                xor     esi, esi
                mov     rbx, rdx
                and     [rax+10h], rsi
                xor     edi, edi
                mov     rdx, [rdx+28h]
                mov     rbp, rcx
                test    rdx, rdx
                jz      loc_1408A7555
                mov     eax, [rbx+20h]
                cmp     ax, 8000h
                jnz     short loc_1408A751D
                mov     rax, cs:qword_140CF4378
                test    rax, rax
                jnz     short loc_1408A74EC
                xor     ecx, ecx
                jmp     short loc_1408A74F3
; ---------------------------------------------------------------------------

loc_1408A74EC:                          ; CODE XREF: sub_1408A74A4+42↑j
                mov     rcx, [rax+0E0h]

loc_1408A74F3:                          ; CODE XREF: sub_1408A74A4+46↑j
                lea     rax, [rsp+38h+arg_8]
                xor     r9d, r9d
                mov     [rsp+38h+var_10], rax
                xor     r8d, r8d
                mov     [rsp+38h+var_18], 20019h
                call    sub_14062CECC
                mov     esi, eax
                test    eax, eax
                js      short loc_1408A7565
                mov     rdi, [rsp+38h+arg_8]
                jmp     short loc_1408A7555
; ---------------------------------------------------------------------------

loc_1408A751D:                          ; CODE XREF: sub_1408A74A4+36↑j
                mov     eax, [rbx+24h]
                test    eax, eax
                jz      short loc_1408A7555
                mov     edx, eax
                mov     ecx, 1
                mov     r8d, 63647050h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A7545
                mov     esi, 0C000009Ah
                jmp     short loc_1408A7565
; ---------------------------------------------------------------------------

loc_1408A7545:                          ; CODE XREF: sub_1408A74A4+98↑j
                mov     r8d, [rbx+24h]
                mov     rcx, rax
                mov     rdx, [rbx+28h]
                call    memmove

loc_1408A7555:                          ; CODE XREF: sub_1408A74A4+29↑j
                                        ; sub_1408A74A4+77↑j ...
                mov     eax, [rbx+20h]
                mov     [rbp+20h], eax
                mov     eax, [rbx+24h]
                mov     [rbp+24h], eax
                mov     [rbp+28h], rdi

loc_1408A7565:                          ; CODE XREF: sub_1408A74A4+70↑j
                                        ; sub_1408A74A4+9F↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     eax, esi
                mov     rsi, [rsp+38h+arg_18]
                mov     rbp, [rsp+38h+arg_10]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A74A4   endp

byte_1408A757D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D4E0↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0C0h

sub_1408A7584   proc near               ; CODE XREF: sub_14076D1AC+DA604↑p
                                        ; sub_14076D1AC+DA685↑p
                                        ; DATA XREF: ...

var_1A0         = qword ptr -1A0h
var_198         = qword ptr -198h
var_190         = dword ptr -190h
var_18C         = dword ptr -18Ch
var_188         = dword ptr -188h
var_184         = dword ptr -184h
var_180         = qword ptr -180h
var_178         = qword ptr -178h
var_170         = qword ptr -170h
var_168         = dword ptr -168h
var_164         = dword ptr -164h
var_160         = dword ptr -160h
var_15C         = dword ptr -15Ch
var_158         = dword ptr -158h
var_150         = qword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = xmmword ptr -108h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = xmmword ptr -0E0h
var_D0          = qword ptr -0D0h
var_C8          = dword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = dword ptr -0B8h
var_B4          = dword ptr -0B4h
var_B0          = dword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = dword ptr -0A0h
var_98          = qword ptr -98h
var_8C          = dword ptr -8Ch
var_88          = dword ptr -88h
var_80          = qword ptr -80h
var_78          = xmmword ptr -78h
var_68          = xmmword ptr -68h
var_58          = xmmword ptr -58h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
arg_18          = qword ptr  28h
arg_20          = qword ptr  30h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-90h]
                sub     rsp, 190h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+0C0h+var_40], rax
                xor     r13d, r13d
                mov     [rsp+1C0h+var_150], rcx
                mov     rdi, rcx
                mov     [rsp+1C0h+var_188], r9d
                mov     rcx, [rbp+0C0h+arg_20]
                xorps   xmm0, xmm0
                mov     [rbp+0C0h+var_80], rcx
                mov     rax, r8
                xor     ecx, ecx
                mov     [rbp+0C0h+var_110], rdx
                mov     [rbp+0C0h+var_48], rcx
                lea     r8, [rbp+0C0h+var_68]
                lea     rcx, [rsp+1C0h+var_180]
                mov     [rbp+0C0h+var_E8], rax
                mov     [rsp+1C0h+var_178], rcx
                lea     edx, [r13+4]
                lea     rcx, [rsp+1C0h+var_180]
                mov     [rsp+1C0h+var_148], r13
                mov     [rsp+1C0h+var_180], rcx
                mov     r14d, r9d
                lea     rcx, [rsp+1C0h+var_184]
                mov     [rsp+1C0h+var_18C], r13d
                mov     [rsp+1C0h+var_1A0], rcx
                lea     r9d, [r13+28h]
                mov     rcx, rax
                mov     [rsp+1C0h+var_164], r13d
                mov     esi, r13d
                mov     [rsp+1C0h+var_168], r13d
                movups  [rbp+0C0h+var_68], xmm0
                mov     [rbp+0C0h+var_140], r13
                movups  [rbp+0C0h+var_58], xmm0
                mov     [rbp+0C0h+var_138], r13
                movups  [rbp+0C0h+var_78], xmm0
                mov     [rbp+0C0h+var_130], r13
                mov     [rbp+0C0h+var_128], r13
                mov     [rbp+0C0h+var_F8], r13
                mov     [rbp+0C0h+var_F0], r13
                mov     qword ptr [rbp+0C0h+var_108], r13
                mov     qword ptr [rbp+0C0h+var_108+8], r13
                mov     [rbp+0C0h+var_120], r13
                mov     [rbp+0C0h+var_118], r13
                movups  [rbp+0C0h+var_E0], xmm0
                mov     [rsp+1C0h+var_158], r13d
                mov     [rsp+1C0h+var_184], r13d
                call    sub_14064CA00
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A7EC2
                cmp     dword ptr [rbp+0C0h+var_58+4], r13d
                jz      loc_1408A7EBD
                mov     ecx, dword ptr [rbp+0C0h+var_58+8]
                mov     r8d, 63647050h
                mov     eax, dword ptr [rbp+0C0h+var_58+0Ch]
                add     ecx, 0Dh
                lea     r12d, [rax+rcx*2]
                mov     edx, r12d
                lea     ecx, [r13+1]
                mov     [rsp+1C0h+var_160], r12d
                call    ExAllocatePoolWithTag
                mov     [rsp+1C0h+var_170], rax
                mov     r15, rax
                test    rax, rax
                jnz     short loc_1408A76C0

loc_1408A76B6:                          ; CODE XREF: sub_1408A7584+19D↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408A7EC2
; ---------------------------------------------------------------------------

loc_1408A76C0:                          ; CODE XREF: sub_1408A7584+130↑j
                mov     rcx, [rdi+28h]
                test    rcx, rcx
                jz      short loc_1408A76DC
                lea     rdx, [rbp+0C0h+var_78]
                call    RtlGUIDFromString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A7EC2

loc_1408A76DC:                          ; CODE XREF: sub_1408A7584+143↑j
                xor     edx, edx
                jmp     loc_1408A77A1
; ---------------------------------------------------------------------------

loc_1408A76E3:                          ; CODE XREF: sub_1408A7584+24E↓j
                cmp     ebx, 80000005h
                jnz     short loc_1408A7728
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag
                mov     r12d, [rsp+1C0h+var_184]
                mov     ecx, 1
                add     r12d, 2
                mov     r8d, 63647050h
                mov     edx, r12d
                mov     [rsp+1C0h+var_160], r12d
                call    ExAllocatePoolWithTag
                mov     [rsp+1C0h+var_170], rax
                mov     r15, rax
                test    rax, rax
                jz      short loc_1408A76B6
                dec     r13d
                jmp     short loc_1408A779B
; ---------------------------------------------------------------------------

loc_1408A7728:                          ; CODE XREF: sub_1408A7584+165↑j
                xor     edx, edx
                test    ebx, ebx
                js      loc_1408A7D54
                mov     rcx, r15
                call    sub_14039A9A8
                test    al, al
                jz      short loc_1408A7746
                mov     eax, [r15+8]
                mov     r14d, [rax+r15]

loc_1408A7746:                          ; CODE XREF: sub_1408A7584+1B8↑j
                mov     eax, [r15+10h]
                lea     rdi, [r15+14h]
                shr     rax, 1
                mov     rcx, rdi
                mov     [r15+rax*2+14h], dx
                call    sub_1406794C0
                test    al, al
                jnz     short loc_1408A7796
                mov     rcx, [rsp+1C0h+var_150]
                lea     r8, [rsp+1C0h+var_148]
                mov     rdx, rdi
                call    sub_1408A89B4
                mov     [rsp+1C0h+var_190], eax
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jnz     short loc_1408A77E7
                mov     rcx, [rsp+1C0h+var_150]
                xor     eax, eax
                mov     rdx, rdi
                mov     [rsp+1C0h+var_148], rax
                call    sub_1408A6D7C

loc_1408A7796:                          ; CODE XREF: sub_1408A7584+1DD↑j
                mov     r14d, [rsp+1C0h+var_188]

loc_1408A779B:                          ; CODE XREF: sub_1408A7584+1A2↑j
                                        ; sub_1408A7584+7B3↓j ...
                inc     r13d
                mov     edx, r13d

loc_1408A77A1:                          ; CODE XREF: sub_1408A7584+15A↑j
                mov     rcx, [rbp+0C0h+var_E8]
                lea     rax, [rsp+1C0h+var_184]
                mov     [rsp+1C0h+var_198], rax
                mov     r9, r15
                mov     r8d, 1
                mov     dword ptr [rsp+1C0h+var_1A0], r12d
                mov     [rsp+1C0h+var_15C], r13d
                call    ZwEnumerateValueKey
                mov     [rsp+1C0h+var_190], eax
                mov     ebx, eax
                cmp     eax, 8000001Ah
                jnz     loc_1408A76E3
                xor     r13d, r13d
                mov     ebx, r13d
                mov     [rsp+1C0h+var_190], ebx
                jmp     loc_1408A7D57
; ---------------------------------------------------------------------------

loc_1408A77E7:                          ; CODE XREF: sub_1408A7584+1FC↑j
                xor     r13d, r13d
                test    eax, eax
                js      loc_1408A7D57
                mov     rdi, [rsp+1C0h+var_148]
                lea     rcx, [rsp+1C0h+var_180]
                mov     [rdi+0B4h], r14d
                mov     rax, [rsp+1C0h+var_178]
                cmp     [rax], rcx
                jnz     loc_1408A7EFA
                mov     r13, [rbp+0C0h+var_110]
                lea     rcx, [rsp+1C0h+var_180]
                mov     [rdi], rcx
                mov     [rdi+8], rax
                mov     [rax], rdi
                mov     rdx, [r13+8]
                mov     [rsp+1C0h+var_178], rdi
                mov     rcx, [rdi+20h]
                call    _wcsicmp
                xor     ecx, ecx
                test    eax, eax
                mov     r14d, ecx
                mov     eax, 10000000h
                cmovz   r14d, eax
                test    [rdi+0B4h], eax
                setnz   cl
                bt      r14d, 1Ch
                setnb   al
                test    al, cl
                jz      short loc_1408A785F
                or      dword ptr [rdi+10h], 1

loc_1408A785F:                          ; CODE XREF: sub_1408A7584+2D5↑j
                lea     rbx, [rdi+38h]
                sub     r13, rdi
                mov     edi, 2
                lea     r15, qword_140984F28
                lea     r12, [rsp+1C0h+var_164]

loc_1408A7877:                          ; CODE XREF: sub_1408A7584+322↓j
                mov     rdx, [rbx+r13-18h]
                mov     rcx, [rbx]
                call    sub_14050E2AC
                mov     ecx, 0FFFFh
                mov     [r12], ax
                cmp     ax, cx
                jz      short loc_1408A7896
                or      r14d, [r15]

loc_1408A7896:                          ; CODE XREF: sub_1408A7584+30D↑j
                add     rbx, 10h
                add     r12, 2
                add     r15, 4
                sub     rdi, 1
                jnz     short loc_1408A7877
                mov     rdi, [rsp+1C0h+var_148]
                mov     ecx, 10000h
                mov     eax, [rdi+0B4h]
                test    ecx, eax
                jz      short loc_1408A78D4
                test    ecx, r14d
                jz      short loc_1408A78E7
                test    r14d, 11000h
                setz    cl
                bt      eax, 0Ch
                setb    al
                jmp     short loc_1408A78E3
; ---------------------------------------------------------------------------

loc_1408A78D4:                          ; CODE XREF: sub_1408A7584+336↑j
                bt      eax, 0Ch
                setb    cl
                bt      r14d, 0Ch
                setnb   al

loc_1408A78E3:                          ; CODE XREF: sub_1408A7584+34E↑j
                test    al, cl
                jz      short loc_1408A78EB

loc_1408A78E7:                          ; CODE XREF: sub_1408A7584+33B↑j
                or      dword ptr [rdi+10h], 1

loc_1408A78EB:                          ; CODE XREF: sub_1408A7584+361↑j
                mov     rbx, [rdi+90h]
                xor     r13d, r13d
                mov     r15, [rbp+0C0h+var_110]
                test    rbx, rbx
                jz      short loc_1408A7941
                cmp     [r15+40h], r13
                jz      short loc_1408A7941
                jmp     short loc_1408A792D
; ---------------------------------------------------------------------------

loc_1408A7906:                          ; CODE XREF: sub_1408A7584+3AD↓j
                mov     rcx, [r15+40h]
                mov     rdx, rbx
                call    sub_140392DE0
                test    rax, rax
                jnz     short loc_1408A7935
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A791B:                          ; CODE XREF: sub_1408A7584+39F↓j
                inc     rax
                cmp     [rbx+rax*2], r13w
                jnz     short loc_1408A791B
                lea     rbx, [rbx+rax*2]
                add     rbx, 2

loc_1408A792D:                          ; CODE XREF: sub_1408A7584+380↑j
                cmp     [rbx], r13w
                jnz     short loc_1408A7906
                jmp     short loc_1408A7941
; ---------------------------------------------------------------------------

loc_1408A7935:                          ; CODE XREF: sub_1408A7584+391↑j
                bts     r14d, 9
                mov     [rdi+98h], rbx

loc_1408A7941:                          ; CODE XREF: sub_1408A7584+378↑j
                                        ; sub_1408A7584+37E↑j ...
                test    dword ptr [rdi+0B4h], 200h
                setnz   cl
                bt      r14d, 9
                setnb   al
                test    al, cl
                jz      short loc_1408A795E
                or      dword ptr [rdi+10h], 1

loc_1408A795E:                          ; CODE XREF: sub_1408A7584+3D4↑j
                mov     r12d, [rsp+1C0h+var_18C]
                cmp     [rdi+80h], r13
                jz      loc_1408A7A13
                bt      r12d, 8
                jb      short loc_1408A79F4
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_D0]
                lea     r8d, [rdx+50h]
                call    memset
                mov     r9, [r15+10h]
                lea     rax, qword_14001D248
                mov     rdx, [r15+8]
                mov     r8d, 1
                mov     [rbp+0C0h+var_D0], rax
                lea     rax, [rbp+0C0h+var_130]
                mov     [rbp+0C0h+var_C0], rax
                lea     rax, [rbp+0C0h+var_D0]
                mov     dword ptr [rsp+1C0h+var_198], 1
                mov     [rsp+1C0h+var_1A0], rax
                mov     [rbp+0C0h+var_C8], 12h
                mov     [rbp+0C0h+var_B4], 6
                call    sub_14073EE68
                mov     [rsp+1C0h+var_190], eax
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A7D4D
                cmp     [rbp+0C0h+var_B0], r13d
                jge     short loc_1408A79EA
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_130]
                call    RtlInitUnicodeString

loc_1408A79EA:                          ; CODE XREF: sub_1408A7584+459↑j
                bts     r12d, 8
                mov     [rsp+1C0h+var_18C], r12d

loc_1408A79F4:                          ; CODE XREF: sub_1408A7584+3F1↑j
                cmp     [rbp+0C0h+var_128], r13
                jz      short loc_1408A7A13
                lea     rcx, [rdi+78h]
                mov     r8b, 1
                lea     rdx, [rbp+0C0h+var_130]
                call    RtlCompareUnicodeString
                test    eax, eax
                jnz     short loc_1408A7A13
                bts     r14d, 8

loc_1408A7A13:                          ; CODE XREF: sub_1408A7584+3E6↑j
                                        ; sub_1408A7584+474↑j ...
                test    r14d, 300h
                setz    cl
                test    dword ptr [rdi+0B4h], 100h
                setnz   al
                test    al, cl
                jz      short loc_1408A7A32
                or      dword ptr [rdi+10h], 1

loc_1408A7A32:                          ; CODE XREF: sub_1408A7584+4A8↑j
                test    r12b, 30h
                jnz     loc_1408A7ADA
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_D0]
                lea     r8d, [rdx+50h]
                call    memset
                mov     r9, [r15+10h]
                lea     rax, qword_140009CF8
                mov     rdx, [r15+8]
                mov     r8d, 1
                mov     [rbp+0C0h+var_D0], rax
                lea     rax, [rsp+1C0h+var_168]
                mov     [rbp+0C0h+var_C0], rax
                lea     rax, qword_140009DC0
                mov     [rbp+0C0h+var_A8], rax
                lea     rax, [rbp+0C0h+var_140]
                mov     [rbp+0C0h+var_98], rax
                lea     rax, [rbp+0C0h+var_D0]
                mov     dword ptr [rsp+1C0h+var_198], 2
                mov     [rsp+1C0h+var_1A0], rax
                mov     [rbp+0C0h+var_C8], 7
                mov     [rbp+0C0h+var_B8], 4
                mov     [rbp+0C0h+var_A0], 12h
                mov     [rbp+0C0h+var_8C], 6
                call    sub_14073EE68
                mov     [rsp+1C0h+var_190], eax
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A7D4D
                cmp     [rbp+0C0h+var_88], r13d
                jge     short loc_1408A7AD1
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_140]
                call    RtlInitUnicodeString

loc_1408A7AD1:                          ; CODE XREF: sub_1408A7584+540↑j
                or      r12d, 30h
                mov     [rsp+1C0h+var_18C], r12d

loc_1408A7ADA:                          ; CODE XREF: sub_1408A7584+4B2↑j
                mov     eax, [rdi+60h]
                xor     eax, [rsp+1C0h+var_168]
                test    al, 10h
                jnz     short loc_1408A7AEB
                or      r14d, 10h
                jmp     short loc_1408A7B00
; ---------------------------------------------------------------------------

loc_1408A7AEB:                          ; CODE XREF: sub_1408A7584+55F↑j
                mov     eax, [rdi+0B4h]
                test    al, 10h
                jnz     short loc_1408A7AFC
                test    byte ptr [rsp+1C0h+var_168], 10h
                jz      short loc_1408A7B00

loc_1408A7AFC:                          ; CODE XREF: sub_1408A7584+56F↑j
                or      dword ptr [rdi+10h], 1

loc_1408A7B00:                          ; CODE XREF: sub_1408A7584+565↑j
                                        ; sub_1408A7584+576↑j
                mov     r15, [rdi+70h]
                mov     rbx, [rbp+0C0h+var_138]
                test    r15, r15
                jz      short loc_1408A7B2B
                test    rbx, rbx
                jz      short loc_1408A7B26
                lea     rcx, [rdi+68h]
                mov     r8b, 1
                lea     rdx, [rbp+0C0h+var_140]
                call    RtlCompareUnicodeString
                test    eax, eax
                jz      short loc_1408A7B30

loc_1408A7B26:                          ; CODE XREF: sub_1408A7584+58C↑j
                test    r15, r15
                jnz     short loc_1408A7B34

loc_1408A7B2B:                          ; CODE XREF: sub_1408A7584+587↑j
                test    rbx, rbx
                jnz     short loc_1408A7B34

loc_1408A7B30:                          ; CODE XREF: sub_1408A7584+5A0↑j
                or      r14d, 20h

loc_1408A7B34:                          ; CODE XREF: sub_1408A7584+5A5↑j
                                        ; sub_1408A7584+5AA↑j
                test    byte ptr [rdi+0B4h], 20h
                setnz   cl
                test    r14b, 20h
                setz    al
                test    al, cl
                jz      short loc_1408A7B4D
                or      dword ptr [rdi+10h], 1

loc_1408A7B4D:                          ; CODE XREF: sub_1408A7584+5C3↑j
                cmp     [rdi+0A8h], r13
                jz      loc_1408A7C45
                test    r12b, 2
                jnz     loc_1408A7C24
                mov     rbx, [rsp+1C0h+var_150]
                mov     rax, [rbx+30h]
                test    rax, rax
                jz      loc_1408A7C1B
                mov     rcx, [rax+8]
                test    rcx, rcx
                jz      loc_1408A7C1B
                lea     rdx, [rbp+0C0h+var_F8]
                call    sub_14073F1D0
                test    eax, eax
                js      short loc_1408A7C05
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_D0]
                lea     r8d, [rdx+50h]
                call    memset
                mov     rdx, [rbp+0C0h+var_F0]
                lea     rax, qword_14000B4D8
                mov     [rbp+0C0h+var_D0], rax
                xor     r9d, r9d
                lea     rax, [rbp+0C0h+var_120]
                mov     dword ptr [rsp+1C0h+var_198], 1
                mov     [rbp+0C0h+var_C0], rax
                lea     rax, [rbp+0C0h+var_D0]
                mov     [rsp+1C0h+var_1A0], rax
                lea     r8d, [r9+8]
                mov     [rbp+0C0h+var_C8], 12h
                mov     [rbp+0C0h+var_B4], 6
                call    sub_14073EE68
                mov     [rsp+1C0h+var_190], eax
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A7D4D
                cmp     [rbp+0C0h+var_B0], r13d
                jge     short loc_1408A7C00
                xor     edx, edx
                lea     rcx, [rbp+0C0h+var_120]
                call    RtlInitUnicodeString

loc_1408A7C00:                          ; CODE XREF: sub_1408A7584+66F↑j
                mov     rbx, [rsp+1C0h+var_150]

loc_1408A7C05:                          ; CODE XREF: sub_1408A7584+60A↑j
                lea     rax, [rbp+0C0h+var_120]
                cmp     [rbp+0C0h+var_118], r13
                jnz     short loc_1408A7C13
                mov     rax, [rbx+30h]

loc_1408A7C13:                          ; CODE XREF: sub_1408A7584+689↑j
                movups  xmm0, xmmword ptr [rax]
                movdqu  [rbp+0C0h+var_108], xmm0

loc_1408A7C1B:                          ; CODE XREF: sub_1408A7584+5EC↑j
                                        ; sub_1408A7584+5F9↑j
                or      r12d, 2
                mov     [rsp+1C0h+var_18C], r12d

loc_1408A7C24:                          ; CODE XREF: sub_1408A7584+5DA↑j
                cmp     qword ptr [rbp+0C0h+var_108+8], r13
                jz      short loc_1408A7C45
                lea     rcx, [rdi+0A0h]
                mov     r8b, 1
                lea     rdx, [rbp+0C0h+var_108]
                call    RtlCompareUnicodeString
                test    eax, eax
                jnz     short loc_1408A7C45
                or      r14d, 2

loc_1408A7C45:                          ; CODE XREF: sub_1408A7584+5D0↑j
                                        ; sub_1408A7584+6A4↑j ...
                test    byte ptr [rdi+0B4h], 2
                setnz   cl
                test    r14b, 2
                setz    al
                test    al, cl
                jz      short loc_1408A7C5E
                or      dword ptr [rdi+10h], 1

loc_1408A7C5E:                          ; CODE XREF: sub_1408A7584+6D4↑j
                mov     rax, [rdi+50h]
                sub     rax, qword ptr [rbp+0C0h+var_78]
                jnz     short loc_1408A7C70
                mov     rax, [rdi+58h]
                sub     rax, qword ptr [rbp+0C0h+var_78+8]

loc_1408A7C70:                          ; CODE XREF: sub_1408A7584+6E2↑j
                test    rax, rax
                jnz     short loc_1408A7C7B
                or      r14d, 1
                jmp     short loc_1408A7C89
; ---------------------------------------------------------------------------

loc_1408A7C7B:                          ; CODE XREF: sub_1408A7584+6EF↑j
                mov     eax, [rdi+0B4h]
                test    al, 1
                jz      short loc_1408A7C89
                or      dword ptr [rdi+10h], 1

loc_1408A7C89:                          ; CODE XREF: sub_1408A7584+6F5↑j
                                        ; sub_1408A7584+6FF↑j
                movzx   eax, word ptr [rsp+1C0h+var_164+2]
                movzx   ecx, word ptr [rsp+1C0h+var_164]
                shl     rcx, 10h
                or      rcx, rax
                mov     eax, 10000000h
                shl     rcx, 10h
                mov     [rdi+0B8h], rcx
                test    eax, r14d
                jnz     short loc_1408A7CC3
                mov     rax, 0F000000000000000h
                or      rcx, rax
                mov     [rdi+0B8h], rcx

loc_1408A7CC3:                          ; CODE XREF: sub_1408A7584+729↑j
                bt      r14d, 9
                jb      short loc_1408A7CD8
                or      rcx, 0F000h
                mov     [rdi+0B8h], rcx

loc_1408A7CD8:                          ; CODE XREF: sub_1408A7584+744↑j
                mov     eax, 100h
                test    eax, r14d
                jnz     short loc_1408A7CEC
                or      rcx, rax
                mov     [rdi+0B8h], rcx

loc_1408A7CEC:                          ; CODE XREF: sub_1408A7584+75C↑j
                test    r14b, 20h
                jnz     short loc_1408A7CFD
                or      rcx, 20h
                mov     [rdi+0B8h], rcx

loc_1408A7CFD:                          ; CODE XREF: sub_1408A7584+76C↑j
                test    r14b, 10h
                jnz     short loc_1408A7D0E
                or      rcx, 10h
                mov     [rdi+0B8h], rcx

loc_1408A7D0E:                          ; CODE XREF: sub_1408A7584+77D↑j
                test    r14b, 2
                jnz     short loc_1408A7D1F
                or      rcx, 2
                mov     [rdi+0B8h], rcx

loc_1408A7D1F:                          ; CODE XREF: sub_1408A7584+78E↑j
                mov     r15, [rsp+1C0h+var_170]
                test    r14b, 1
                mov     r14d, [rsp+1C0h+var_188]
                mov     r12d, [rsp+1C0h+var_160]
                mov     r13d, [rsp+1C0h+var_15C]
                jnz     loc_1408A779B
                or      rcx, 1
                mov     [rdi+0B8h], rcx
                jmp     loc_1408A779B
; ---------------------------------------------------------------------------

loc_1408A7D4D:                          ; CODE XREF: sub_1408A7584+44F↑j
                                        ; sub_1408A7584+536↑j ...
                mov     r15, [rsp+1C0h+var_170]
                jmp     short loc_1408A7D57
; ---------------------------------------------------------------------------

loc_1408A7D54:                          ; CODE XREF: sub_1408A7584+1A8↑j
                xor     r13d, r13d

loc_1408A7D57:                          ; CODE XREF: sub_1408A7584+25E↑j
                                        ; sub_1408A7584+268↑j ...
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag
                test    ebx, ebx
                js      loc_1408A7EC2
                mov     rax, [rsp+1C0h+var_180]
                lea     rcx, [rsp+1C0h+var_180]
                cmp     rax, rcx
                jz      loc_1408A7EBD

loc_1408A7D7C:                          ; CODE XREF: sub_1408A7584+848↓j
                mov     rcx, [rax+0B8h]
                cmp     rcx, 0FFFFFFFFFFFFFFFFh
                jz      short loc_1408A7DC1
                test    rsi, rsi
                jz      short loc_1408A7DBE
                cmp     [rsi+0B8h], rcx
                ja      short loc_1408A7DBE
                jnz     short loc_1408A7DC1
                cmp     cs:byte_140C50B7F, r13b
                jz      short loc_1408A7DB4
                cmp     [rax+0B0h], r13d
                jz      short loc_1408A7DB4
                cmp     [rsi+0B0h], r13d
                jz      short loc_1408A7DBE

loc_1408A7DB4:                          ; CODE XREF: sub_1408A7584+81C↑j
                                        ; sub_1408A7584+825↑j
                or      dword ptr [rsi+10h], 2
                or      dword ptr [rax+10h], 2
                jmp     short loc_1408A7DC1
; ---------------------------------------------------------------------------

loc_1408A7DBE:                          ; CODE XREF: sub_1408A7584+808↑j
                                        ; sub_1408A7584+811↑j ...
                mov     rsi, rax

loc_1408A7DC1:                          ; CODE XREF: sub_1408A7584+803↑j
                                        ; sub_1408A7584+813↑j ...
                mov     rax, [rax]
                lea     rcx, [rsp+1C0h+var_180]
                cmp     rax, rcx
                jnz     short loc_1408A7D7C
                test    rsi, rsi
                jz      loc_1408A7EBD
                mov     eax, [rsi+10h]
                test    al, 2
                jz      short loc_1408A7E5D
                mov     rdi, [rsp+1C0h+var_180]
                lea     rax, [rsp+1C0h+var_180]
                mov     [rsp+1C0h+var_158], 1
                cmp     rdi, rax
                jz      loc_1408A7E9B
                lea     r14, aDuplicate ; "Duplicate"

loc_1408A7E00:                          ; CODE XREF: sub_1408A7584+8D1↓j
                mov     eax, [rdi+10h]
                test    al, 2
                jz      short loc_1408A7E4A
                mov     rax, [rsi+0B8h]
                cmp     [rdi+0B8h], rax
                jnz     short loc_1408A7E4A
                mov     dword ptr [rbp+0C0h+var_E0], 140012h
                lea     rax, [rsp+1C0h+var_158]
                mov     qword ptr [rbp+0C0h+var_E0+8], r14
                lea     rdx, [rbp+0C0h+var_E0]
                mov     rcx, [rdi+28h]
                mov     r9d, 4
                mov     dword ptr [rsp+1C0h+var_198], 4
                xor     r8d, r8d
                mov     [rsp+1C0h+var_1A0], rax
                call    ZwSetValueKey

loc_1408A7E4A:                          ; CODE XREF: sub_1408A7584+881↑j
                                        ; sub_1408A7584+891↑j
                mov     rdi, [rdi]
                lea     rax, [rsp+1C0h+var_180]
                cmp     rdi, rax
                jnz     short loc_1408A7E00
                mov     ebx, [rsp+1C0h+var_190]
                jmp     short loc_1408A7E9B
; ---------------------------------------------------------------------------

loc_1408A7E5D:                          ; CODE XREF: sub_1408A7584+858↑j
                mov     rcx, [rsi+28h]
                lea     r9, [rsp+1C0h+var_170]
                xor     r8d, r8d
                lea     rdx, aDuplicate ; "Duplicate"
                call    sub_140739D08
                test    eax, eax
                js      short loc_1408A7E9B
                mov     rcx, [rsp+1C0h+var_170]
                call    sub_14039A9A8
                test    al, al
                jz      short loc_1408A7E94
                mov     eax, [rcx+8]
                cmp     [rax+rcx], r13d
                jz      short loc_1408A7E94
                or      dword ptr [rsi+10h], 2

loc_1408A7E94:                          ; CODE XREF: sub_1408A7584+901↑j
                                        ; sub_1408A7584+90A↑j
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408A7E9B:                          ; CODE XREF: sub_1408A7584+86F↑j
                                        ; sub_1408A7584+8D7↑j ...
                mov     rax, [rsi]
                cmp     [rax+8], rsi
                jnz     short loc_1408A7EFA
                mov     rcx, [rsi+8]
                cmp     [rcx], rsi
                jnz     short loc_1408A7EFA
                mov     [rcx], rax
                mov     [rax+8], rcx
                mov     rax, [rbp+0C0h+var_80]
                mov     [rax], rsi
                jmp     short loc_1408A7EC2
; ---------------------------------------------------------------------------

loc_1408A7EBD:                          ; CODE XREF: sub_1408A7584+FB↑j
                                        ; sub_1408A7584+7F2↑j ...
                mov     ebx, 0C0000225h

loc_1408A7EC2:                          ; CODE XREF: sub_1408A7584+F1↑j
                                        ; sub_1408A7584+137↑j ...
                mov     rcx, [rsp+1C0h+var_180]
                lea     rax, [rsp+1C0h+var_180]
                cmp     rcx, rax
                jz      short loc_1408A7F01
                lea     rax, [rsp+1C0h+var_180]
                cmp     [rcx+8], rax
                jnz     short loc_1408A7EFA
                mov     rax, [rcx]
                cmp     [rax+8], rcx
                jnz     short loc_1408A7EFA
                lea     rdx, [rsp+1C0h+var_180]
                mov     [rsp+1C0h+var_180], rax
                mov     [rax+8], rdx
                call    sub_1408A7F58
                jmp     short loc_1408A7EC2
; ---------------------------------------------------------------------------

loc_1408A7EFA:                          ; CODE XREF: sub_1408A7584+287↑j
                                        ; sub_1408A7584+91E↑j ...
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408A7F01:                          ; CODE XREF: sub_1408A7584+94B↑j
                lea     rcx, [rbp+0C0h+var_140]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0C0h+var_130]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0C0h+var_F8]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0C0h+var_120]
                call    RtlFreeUnicodeString
                mov     eax, ebx
                mov     rcx, [rbp+0C0h+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+1C0h+arg_18]
                add     rsp, 190h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A7584
sub_1408A7584   endp

algn_1408A7F52:                         ; DATA XREF: .pdata:000000014011D4EC↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408A7F58   proc near               ; CODE XREF: sub_14076D1AC:loc_14076D27A↑p
                                        ; sub_1408A7584+96F↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rbx, rcx
                mov     rcx, [rcx+28h]
                test    rcx, rcx
                jz      short loc_1408A7F78
                call    ZwClose

loc_1408A7F78:                          ; CODE XREF: sub_1408A7F58+19↑j
                lea     rcx, [rbx+18h]
                call    RtlFreeUnicodeString
                lea     rdi, [rbx+30h]
                mov     esi, 2

loc_1408A7F8A:                          ; CODE XREF: sub_1408A7F58+42↓j
                mov     rcx, rdi
                call    RtlFreeUnicodeString
                add     rdi, 10h
                sub     rsi, 1
                jnz     short loc_1408A7F8A
                lea     rcx, [rbx+68h]
                call    RtlFreeUnicodeString
                lea     rcx, [rbx+78h]
                call    RtlFreeUnicodeString
                lea     rcx, [rbx+88h]
                call    RtlFreeUnicodeString
                lea     rcx, [rbx+0A0h]
                call    RtlFreeUnicodeString
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A7F58   endp

algn_1408A7FE1:                         ; DATA XREF: .pdata:000000014011D4F8↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408A7FE8   proc near               ; CODE XREF: sub_140735D48+B8CFF↑p
                                        ; sub_14074B288+EDF85↑p ...

var_38          = dword ptr -38h
var_28          = dword ptr -28h
var_18          = dword ptr -18h
arg_10          = dword ptr  18h
arg_18          = dword ptr  20h

                mov     r11, rsp
                push    rbx
                sub     rsp, 70h
                xor     ebx, ebx
                lea     rax, [r11+20h]
                mov     [rsp+78h+var_28], ebx
                mov     r9, rdx
                mov     [r11-30h], rax
                mov     rdx, rcx
                mov     rcx, cs:qword_140CF4378
                lea     rax, [r11-18h]
                mov     [rsp+78h+var_38], 4
                lea     r8d, [rbx+1]
                mov     [r11-40h], rax
                lea     rax, [r11+18h]
                mov     [r11-48h], rax
                lea     rax, qword_140009CC8
                mov     [r11-50h], rax
                mov     [r11-58h], rbx
                mov     [rsp+78h+var_18], ebx
                mov     [r11+18h], r8d
                mov     [r11+20h], ebx
                call    sub_1406CC6BC
                test    eax, eax
                js      short loc_1408A80A7
                cmp     [rsp+78h+arg_10], 17h
                jnz     short loc_1408A80A7
                cmp     [rsp+78h+arg_18], 4
                jnz     short loc_1408A80A7
                mov     eax, [rsp+78h+var_18]
                cmp     eax, 0E0000219h
                jz      short loc_1408A80A2
                cmp     eax, 0E0000228h
                jz      short loc_1408A809B
                cmp     eax, 0E0000250h
                jz      short loc_1408A8094
                cmp     eax, 0E0000251h
                jz      short loc_1408A808D
                cmp     eax, 0E0000252h
                jnz     short loc_1408A80A7
                mov     ebx, 0C0000493h
                jmp     short loc_1408A80A7
; ---------------------------------------------------------------------------

loc_1408A808D:                          ; CODE XREF: sub_1408A7FE8+95↑j
                mov     ebx, 0C0000492h
                jmp     short loc_1408A80A7
; ---------------------------------------------------------------------------

loc_1408A8094:                          ; CODE XREF: sub_1408A7FE8+8E↑j
                mov     ebx, 0C0000491h
                jmp     short loc_1408A80A7
; ---------------------------------------------------------------------------

loc_1408A809B:                          ; CODE XREF: sub_1408A7FE8+87↑j
                mov     ebx, 0C0000490h
                jmp     short loc_1408A80A7
; ---------------------------------------------------------------------------

loc_1408A80A2:                          ; CODE XREF: sub_1408A7FE8+80↑j
                mov     ebx, 0C0000494h

loc_1408A80A7:                          ; CODE XREF: sub_1408A7FE8+61↑j
                                        ; sub_1408A7FE8+6B↑j ...
                mov     eax, ebx
                add     rsp, 70h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A7FE8   endp

algn_1408A80B0:                         ; DATA XREF: .pdata:000000014011D504↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A80C0   proc near               ; DATA XREF: .pdata:000000014011D510↑o
                                        ; sub_140A54218+2F7E1↓o

var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = dword ptr -68h
var_60          = dword ptr -60h
var_5C          = dword ptr -5Ch
var_58          = qword ptr -58h
var_50          = byte ptr -50h
var_s0          = byte ptr  0
arg_0           = dword ptr  10h
arg_8           = qword ptr  18h
arg_10          = qword ptr  20h
arg_18          = dword ptr  28h

                mov     [rsp-8+arg_8], rbx
                mov     [rsp-8+arg_10], rdi
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0A0h
                xor     edx, edx
                mov     rdi, r8
                mov     rbx, rcx
                lea     rcx, [rbp+57h+var_50]
                lea     r8d, [rdx+48h]
                call    memset
                mov     r8d, [rbx+1Ch]
                lea     rax, [rbp+57h+var_58]
                mov     rdx, [rbx+10h]
                mov     r9d, 0F003Fh
                mov     rcx, cs:qword_140CF4378
                and     [rbp+57h+var_58], 0
                and     [rbp+57h+arg_0], 0
                and     [rbp+57h+var_5C], 0
                and     [rbp+57h+arg_18], 0
                mov     [rsp+0A0h+var_78], rax
                mov     byte ptr [rsp+0A0h+var_80], 0
                mov     [rbp+57h+var_60], 1
                call    sub_1406CC3A4
                test    eax, eax
                js      loc_1408A81E0
                and     [rsp+0A0h+var_68], 0
                lea     rax, [rbp+57h+arg_18]
                mov     r8, [rbp+57h+var_58]
                mov     r9d, 0Bh
                mov     rdx, [rbx+10h]
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+0A0h+var_70], rax
                lea     rax, [rbp+57h+arg_0]
                mov     [rsp+0A0h+var_78], rax
                lea     rax, [rbp+57h+var_60]
                mov     [rsp+0A0h+var_80], rax
                mov     [rbp+57h+arg_18], 4
                call    sub_14062BA8C
                test    eax, eax
                js      short loc_1408A8185
                cmp     [rbp+57h+var_60], 4
                jnz     short loc_1408A8185
                cmp     [rbp+57h+arg_18], 4
                jz      short loc_1408A8189

loc_1408A8185:                          ; CODE XREF: sub_1408A80C0+B7↑j
                                        ; sub_1408A80C0+BD↑j
                and     [rbp+57h+arg_0], 0

loc_1408A8189:                          ; CODE XREF: sub_1408A80C0+C3↑j
                mov     rdx, [rbp+57h+var_58]
                lea     r8, [rbp+57h+var_50]
                mov     rcx, [rbx+10h]
                call    sub_14074AAA0
                test    eax, eax
                js      short loc_1408A81E0
                lea     rdx, [rbp+57h+var_5C]
                lea     rcx, [rbp+57h+var_50]
                call    sub_1408A669C
                test    eax, eax
                js      short loc_1408A81DD
                mov     eax, [rbp+57h+var_5C]
                test    eax, eax
                jz      short loc_1408A81DD
                or      [rbp+57h+arg_0], eax
                lea     rdx, [rbp+57h+var_50]
                mov     r9d, 4
                mov     dword ptr [rsp+0A0h+var_78], 4
                lea     rax, [rbp+57h+arg_0]
                mov     [rsp+0A0h+var_80], rax
                lea     r8d, [r9+7]
                call    sub_14074A960

loc_1408A81DD:                          ; CODE XREF: sub_1408A80C0+ED↑j
                                        ; sub_1408A80C0+F4↑j
                mov     byte ptr [rdi], 0

loc_1408A81E0:                          ; CODE XREF: sub_1408A80C0+6E↑j
                                        ; sub_1408A80C0+DC↑j
                lea     rcx, [rbp+57h+var_50]
                call    sub_140749534
                mov     rcx, [rbp+57h+var_58]
                test    rcx, rcx
                jz      short loc_1408A81F7
                call    ZwClose

loc_1408A81F7:                          ; CODE XREF: sub_1408A80C0+130↑j
                lea     r11, [rsp+0A0h+var_s0]
                xor     eax, eax
                mov     rbx, [r11+18h]
                mov     rdi, [r11+20h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A80C0   endp

byte_1408A820F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D510↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A8218   proc near               ; CODE XREF: sub_1408B7638+24↓p
                                        ; DATA XREF: .pdata:000000014011D51C↑o

var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_50          = dword ptr -50h
var_40          = dword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_10          = byte ptr -10h
arg_18          = byte ptr  28h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rdi
                mov     [rax+18h], r12
                push    rbp
                push    r14
                push    r15
                lea     rbp, [rax-5Fh]
                sub     rsp, 90h
                mov     rax, cs:qword_140CF4378
                xor     r12d, r12d
                mov     [rbp+57h+var_28], r12
                mov     r8, rcx
                mov     [rbp+57h+var_38], r12
                mov     ebx, r12d
                mov     [rbp+57h+var_40], r12d
                mov     edi, r12d
                mov     [rbp+57h+var_30], r12
                mov     ecx, r12d
                mov     [rbp+57h+var_20], r12
                mov     [rbp+57h+arg_18], r12b
                test    rax, rax
                jz      short loc_1408A8271
                mov     rcx, [rax+0E0h]

loc_1408A8271:                          ; CODE XREF: sub_1408A8218+50↑j
                lea     rax, [rbp+57h+var_28]
                xor     r9d, r9d
                mov     [rsp+0A0h+var_78], rax
                mov     edx, 80000002h
                mov     dword ptr [rsp+0A0h+var_80], 2000000h
                call    sub_14062CECC
                test    eax, eax
                js      loc_1408A8460
                mov     rdx, [rbp+57h+var_28]
                lea     rax, [rbp+57h+var_38]
                xor     r9d, r9d
                mov     [rsp+0A0h+var_70], rax
                call    sub_1407A400C
                test    eax, eax
                js      loc_1408A8451
                mov     eax, 800h
                mov     [rbp+57h+var_40], eax

loc_1408A82BC:                          ; CODE XREF: sub_1408A8218+113↓j
                cmp     eax, edi
                jbe     loc_1408A8442
                mov     edi, eax
                test    rbx, rbx
                jz      short loc_1408A82D5
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408A82D5:                          ; CODE XREF: sub_1408A8218+B1↑j
                mov     rdx, rdi
                mov     ecx, 1
                add     rdx, rdx
                mov     r8d, 63647050h
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408A832D
                mov     rcx, [rbp+57h+var_38]
                lea     rax, [rbp+57h+var_40]
                mov     [rsp+0A0h+var_68], rax
                lea     rdx, aRoot      ; "Root"
                xor     r9d, r9d
                mov     dword ptr [rsp+0A0h+var_70], edi
                mov     [rsp+0A0h+var_78], rbx
                mov     [rsp+0A0h+var_80], r12
                lea     r8d, [r9+1]
                call    sub_140708288
                cmp     eax, 0C0000023h
                jnz     short loc_1408A8332
                mov     eax, [rbp+57h+var_40]
                jmp     short loc_1408A82BC
; ---------------------------------------------------------------------------

loc_1408A832D:                          ; CODE XREF: sub_1408A8218+D9↑j
                mov     eax, 0C000009Ah

loc_1408A8332:                          ; CODE XREF: sub_1408A8218+10E↑j
                test    eax, eax
                js      loc_1408A8442
                test    edi, edi
                jz      loc_1408A8442
                mov     rdi, rbx
                cmp     [rbx], r12w
                jz      loc_1408A8442

loc_1408A834F:                          ; CODE XREF: sub_1408A8218+224↓j
                mov     rcx, [rbp+57h+var_38]
                lea     rax, [rbp+57h+var_30]
                mov     [rsp+0A0h+var_68], r12
                xor     r9d, r9d
                mov     [rsp+0A0h+var_70], rax
                mov     rdx, rdi
                mov     byte ptr [rsp+0A0h+var_78], r12b
                mov     dword ptr [rsp+0A0h+var_80], 2000000h
                lea     r8d, [r9+10h]
                call    sub_14062C9F8
                test    eax, eax
                js      loc_1408A8422
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+57h+arg_18]
                mov     dword ptr [rsp+0A0h+var_78], r12d
                lea     r9, [rbp+57h+var_20]
                mov     r8d, 2001Fh
                mov     [rsp+0A0h+var_80], rax
                mov     rdx, rdi
                call    sub_14073FF18
                mov     r15d, eax
                test    eax, eax
                js      short loc_1408A8419
                mov     r14, [rbp+57h+var_20]
                cmp     [rbp+57h+arg_18], r12b
                jz      short loc_1408A83FA
                mov     r9, [rbp+57h+var_30]
                mov     r8d, 1
                mov     rcx, [rbp+57h+var_38]
                mov     rdx, rdi
                mov     [rsp+0A0h+var_50], 20000h
                mov     qword ptr [rsp+0A0h+var_58], r12
                mov     [rsp+0A0h+var_60], r12
                mov     [rsp+0A0h+var_68], r14
                mov     dword ptr [rsp+0A0h+var_70], 1
                mov     [rsp+0A0h+var_78], rdi
                call    sub_140766848
                mov     r15d, eax

loc_1408A83FA:                          ; CODE XREF: sub_1408A8218+1A3↑j
                mov     rcx, r14
                call    ZwClose
                test    r15d, r15d
                jns     short loc_1408A8419
                mov     rcx, cs:qword_140CF4378
                xor     r8d, r8d
                mov     rdx, rdi
                call    sub_14072AF0C

loc_1408A8419:                          ; CODE XREF: sub_1408A8218+199↑j
                                        ; sub_1408A8218+1ED↑j
                mov     rcx, [rbp+57h+var_30]
                call    ZwClose

loc_1408A8422:                          ; CODE XREF: sub_1408A8218+167↑j
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A8426:                          ; CODE XREF: sub_1408A8218+216↓j
                inc     rax
                cmp     [rdi+rax*2], r12w
                jnz     short loc_1408A8426
                lea     rdi, [rdi+rax*2]
                add     rdi, 2
                cmp     [rdi], r12w
                jnz     loc_1408A834F

loc_1408A8442:                          ; CODE XREF: sub_1408A8218+A6↑j
                                        ; sub_1408A8218+11C↑j ...
                test    rbx, rbx
                jz      short loc_1408A8451
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408A8451:                          ; CODE XREF: sub_1408A8218+96↑j
                                        ; sub_1408A8218+22D↑j
                cmp     [rbp+57h+var_38], r12
                jz      short loc_1408A8460
                mov     rcx, [rbp+57h+var_38]
                call    sub_140975CAC

loc_1408A8460:                          ; CODE XREF: sub_1408A8218+79↑j
                                        ; sub_1408A8218+23D↑j
                mov     rcx, [rbp+57h+var_28]
                test    rcx, rcx
                jz      short loc_1408A846E
                call    ZwClose

loc_1408A846E:                          ; CODE XREF: sub_1408A8218+24F↑j
                lea     r11, [rsp+0A0h+var_10]
                mov     al, 1
                mov     rbx, [r11+20h]
                mov     rdi, [r11+28h]
                mov     r12, [r11+30h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A8218   endp

byte_1408A848E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D51C↑o

; =============== S U B R O U T I N E =======================================


sub_1408A8494   proc near               ; CODE XREF: sub_14076D1AC+DA8B1↑p
                                        ; DATA XREF: .pdata:000000014011D528↑o

var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_10          = dword ptr -10h

                sub     rsp, 58h
                mov     al, cs:byte_140C1313A
                mov     r9d, r8d
                mov     r10, rcx
                test    al, 8
                jz      loc_1408A8568
                test    al, 20h
                jz      loc_1408A8568
                test    al, 10h
                jz      loc_1408A8568
                mov     [rsp+58h+var_10], r9d
                lea     r8, dword_14098D654
                test    r9d, r9d
                js      short loc_1408A8502
                mov     rax, [rdx+98h]
                lea     rcx, [rdx+50h]
                test    rax, rax
                cmovnz  r8, rax
                mov     eax, [rdx+0B0h]
                mov     [rsp+58h+var_18], eax
                mov     rax, [rdx+0B8h]
                mov     [rsp+58h+var_20], rax
                mov     rax, [rdx+20h]
                lea     rdx, qword_140033F10
                jmp     short loc_1408A8550
; ---------------------------------------------------------------------------

loc_1408A8502:                          ; CODE XREF: sub_1408A8494+37↑j
                mov     eax, [rdx+10h]
                test    al, 3
                mov     eax, [rdx+0B0h]
                mov     rcx, [rdx+98h]
                mov     [rsp+58h+var_18], eax
                mov     rax, [rdx+0B8h]
                mov     [rsp+58h+var_20], rax
                mov     rax, [rdx+20h]
                jz      short loc_1408A853E
                test    rcx, rcx
                cmovnz  r8, rcx
                lea     rcx, [rdx+50h]
                lea     rdx, qword_140033D60
                jmp     short loc_1408A8550
; ---------------------------------------------------------------------------

loc_1408A853E:                          ; CODE XREF: sub_1408A8494+94↑j
                test    rcx, rcx
                cmovnz  r8, rcx
                lea     rcx, [rdx+50h]
                lea     rdx, qword_140033D90

loc_1408A8550:                          ; CODE XREF: sub_1408A8494+6C↑j
                                        ; sub_1408A8494+A8↑j
                mov     r9, [r10+8]
                mov     [rsp+58h+var_28], r8
                mov     [rsp+58h+var_30], rcx
                mov     [rsp+58h+var_38], rax
                call    sub_14050E0B0

loc_1408A8568:                          ; CODE XREF: sub_1408A8494+12↑j
                                        ; sub_1408A8494+1A↑j ...
                add     rsp, 58h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A8494   endp

byte_1408A856E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D528↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A8574   proc near               ; CODE XREF: sub_1407346D8+B9CE7↑p
                                        ; sub_1407346D8+B9D2C↑p
                                        ; DATA XREF: ...

var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_30          = xmmword ptr -30h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = word ptr -10h
var_E           = word ptr -0Eh
var_C           = dword ptr -0Ch
var_8           = qword ptr -8
arg_0           = qword ptr  30h
arg_8           = dword ptr  38h
arg_10          = qword ptr  40h
arg_18          = qword ptr  48h

                mov     [rsp-28h+arg_0], rbx
                push    rbp
                push    rdi
                push    r12
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                xor     r14d, r14d
                mov     [rbp+arg_8], 4
                xorps   xmm0, xmm0
                mov     [rbp+arg_18], r14
                xor     eax, eax
                mov     [rbp+arg_10], r14
                mov     rdx, rcx
                mov     [rbp+var_C], eax
                lea     rcx, [rbp+var_30]
                mov     [rbp+var_20], r14
                movups  [rbp+var_30], xmm0
                mov     [rbp+var_18], r14
                call    RtlInitUnicodeString
                xor     r9d, r9d
                mov     byte ptr [rsp+60h+var_40], r14b
                lea     r8, [rbp+arg_18]
                mov     edx, 2001Fh
                lea     rcx, [rbp+var_30]
                call    sub_140739E5C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A876F
                mov     rcx, [rbp+arg_18]
                lea     r12, aStart     ; "Start"
                mov     rdx, r12
                lea     r9, [rbp+arg_10]
                xor     r8d, r8d
                call    sub_140739D08
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A875C
                mov     rdi, [rbp+arg_10]
                mov     rcx, rdi
                call    sub_14039A9A8
                test    al, al
                jnz     short loc_1408A861C

loc_1408A8612:                          ; CODE XREF: sub_1408A8574+F9↓j
                                        ; sub_1408A8574+10B↓j ...
                mov     ebx, 0C0000001h
                jmp     loc_1408A8760
; ---------------------------------------------------------------------------

loc_1408A861C:                          ; CODE XREF: sub_1408A8574+9C↑j
                mov     eax, [rdi+8]
                mov     edx, [rax+rdi]
                mov     [rbp+arg_8], edx
                xor     edx, edx
                call    ExFreePoolWithTag
                test    [rbp+arg_8], 0FFFFFFFBh
                mov     [rbp+arg_10], r14
                jz      loc_1408A876F
                mov     rcx, [rbp+arg_18]
                lea     r15, aImagepath ; "ImagePath"
                mov     rdx, r15
                lea     r9, [rbp+arg_10]
                xor     r8d, r8d
                call    sub_140739D08
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A875C
                mov     rdi, [rbp+arg_10]
                mov     eax, [rdi+4]
                dec     eax
                cmp     eax, 1
                ja      short loc_1408A8612
                mov     ecx, [rdi+8]
                mov     edx, [rdi+0Ch]
                add     rcx, rdi
                call    sub_14036E470
                test    al, al
                jz      short loc_1408A8612
                lea     r8, [rbp+arg_10]
                mov     dword ptr [rbp+arg_10], r14d
                call    sub_14073B974
                movzx   ecx, word ptr [rbp+arg_10]
                lea     rdx, [rbp+var_10]
                movzx   eax, word ptr [rdi+0Ch]
                mov     r8b, 1
                mov     ebx, [rdi+8]
                mov     [rbp+var_10], cx
                add     rbx, rdi
                lea     rcx, qword_140985450
                mov     [rbp+var_8], rbx
                mov     [rbp+var_E], ax
                call    RtlPrefixUnicodeString
                test    al, al
                jz      short loc_1408A8707
                lea     rdx, [rbx+18h]
                lea     rcx, [rbp+var_20]
                call    RtlInitUnicodeString
                movzx   eax, word ptr [rbp+var_20]
                lea     rdx, [rbp+var_30]
                mov     rcx, [rbp+arg_18]
                add     eax, 2
                mov     [rsp+60h+var_38], eax
                xor     r8d, r8d
                mov     rax, [rbp+var_18]
                mov     dword ptr [rbp+var_30], 140012h
                mov     qword ptr [rbp+var_30+8], r15
                mov     r9d, [rdi+4]
                mov     [rsp+60h+var_40], rax
                call    ZwSetValueKey
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A8760
                jmp     short loc_1408A8722
; ---------------------------------------------------------------------------

loc_1408A8707:                          ; CODE XREF: sub_1408A8574+149↑j
                mov     r8b, 1
                lea     rdx, [rbp+var_10]
                lea     rcx, qword_140985A68
                call    RtlPrefixUnicodeString
                test    al, al
                jz      loc_1408A8612

loc_1408A8722:                          ; CODE XREF: sub_1408A8574+191↑j
                mov     rcx, [rbp+arg_18]
                lea     rax, [rbp+arg_8]
                mov     [rsp+60h+var_38], 4
                lea     rdx, [rbp+var_30]
                mov     r9d, 4
                mov     [rsp+60h+var_40], rax
                xor     r8d, r8d
                mov     dword ptr [rbp+var_30], 0C000Ah
                mov     qword ptr [rbp+var_30+8], r12
                mov     [rbp+arg_8], r14d
                call    ZwSetValueKey
                mov     ebx, eax
                jmp     short loc_1408A8760
; ---------------------------------------------------------------------------

loc_1408A875C:                          ; CODE XREF: sub_1408A8574+88↑j
                                        ; sub_1408A8574+E7↑j
                mov     rdi, [rbp+arg_10]

loc_1408A8760:                          ; CODE XREF: sub_1408A8574+A3↑j
                                        ; sub_1408A8574+18F↑j ...
                test    rdi, rdi
                jz      short loc_1408A876F
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408A876F:                          ; CODE XREF: sub_1408A8574+64↑j
                                        ; sub_1408A8574+C3↑j ...
                cmp     [rbp+arg_18], r14
                jz      short loc_1408A877E
                mov     rcx, [rbp+arg_18]
                call    ZwClose

loc_1408A877E:                          ; CODE XREF: sub_1408A8574+1FF↑j
                mov     eax, ebx
                mov     rbx, [rsp+60h+arg_0]
                add     rsp, 60h
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A8574   endp

byte_1408A8796  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D534↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A879C   proc near               ; CODE XREF: sub_140748F30+EF15B↑p
                                        ; DATA XREF: .pdata:000000014011D540↑o

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  30h
arg_8           = qword ptr  38h
arg_18          = qword ptr  48h

                mov     [rsp-28h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 40h
                and     [rbp+arg_8], 0
                mov     r14, r8
                and     [rbp+arg_18], 0
                lea     r8, [rbp+arg_8]
                mov     r15, rcx
                xorps   xmm0, xmm0
                mov     rcx, [rdx+8]
                mov     rsi, rdx
                movups  [rbp+var_10], xmm0
                xor     edi, edi
                call    sub_1408A8890
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A8865
                mov     rcx, [rbp+arg_8]
                lea     r9, [rbp+arg_18]
                xor     r8d, r8d
                lea     rdx, aConfigflags_0 ; "ConfigFlags"
                call    sub_140739D08
                test    eax, eax
                js      short loc_1408A8817
                mov     rcx, [rbp+arg_18]
                call    sub_14039A9A8
                test    al, al
                jz      short loc_1408A8810
                mov     eax, [rcx+8]
                mov     edi, [rax+rcx]

loc_1408A8810:                          ; CODE XREF: sub_1408A879C+6C↑j
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408A8817:                          ; CODE XREF: sub_1408A879C+5F↑j
                test    dil, 1
                jnz     short loc_1408A8824

loc_1408A881D:                          ; CODE XREF: sub_1408A879C+A9↓j
                mov     ebx, 0C0000001h
                jmp     short loc_1408A8865
; ---------------------------------------------------------------------------

loc_1408A8824:                          ; CODE XREF: sub_1408A879C+7F↑j
                mov     rcx, [rbp+arg_8]
                lea     rax, aDriverinfname ; "DriverInfName"
                lea     rdx, [rbp+var_10]
                mov     qword ptr [rbp+var_10+8], rax
                mov     dword ptr [rbp+var_10], 1C001Ah
                call    sub_140394DF8
                test    al, al
                jnz     short loc_1408A881D
                and     [rsp+40h+var_18], 0
                xor     r9d, r9d
                xor     r8d, r8d
                mov     [rsp+40h+var_20], r14
                mov     rdx, rsi
                mov     rcx, r15
                call    sub_14076D1AC
                mov     ebx, eax

loc_1408A8865:                          ; CODE XREF: sub_1408A879C+40↑j
                                        ; sub_1408A879C+86↑j
                mov     rcx, [rbp+arg_8]
                test    rcx, rcx
                jz      short loc_1408A8873
                call    ZwClose

loc_1408A8873:                          ; CODE XREF: sub_1408A879C+D0↑j
                mov     eax, ebx
                mov     rbx, [rsp+40h+arg_0]
                add     rsp, 40h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A879C   endp

algn_1408A8887:                         ; DATA XREF: .pdata:000000014011D540↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A8890   proc near               ; CODE XREF: sub_1408A879C+37↑p
                                        ; DATA XREF: .pdata:000000014011D54C↑o

var_50          = qword ptr -50h
var_48          = xmmword ptr -48h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = xmmword ptr -18h
var_s0          = byte ptr  0
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = qword ptr  20h
arg_18          = qword ptr  28h

                mov     [rsp-8+arg_0], rbx
                mov     [rsp-8+arg_8], rsi
                mov     [rsp-8+arg_10], rdi
                push    rbp
                mov     rbp, rsp
                sub     rsp, 70h
                and     [rbp+var_50], 0
                mov     rdi, r8
                and     [rbp+arg_18], 0
                lea     r8, [rbp+var_50]
                mov     rsi, rcx
                xorps   xmm0, xmm0
                mov     rcx, cs:qword_140CF4378
                mov     edx, 4
                movups  [rbp+var_48], xmm0
                call    sub_14062C5C0
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A8986
                and     [rbp+var_34], 0
                lea     rax, aControlDevicem_0 ; "Control\\DeviceMigration\\Devices"
                and     [rbp+var_1C], 0
                lea     r8, [rbp+var_38]
                mov     qword ptr [rbp+var_48+8], rax
                lea     rcx, [rbp+arg_18]
                mov     rax, [rbp+var_50]
                xorps   xmm0, xmm0
                mov     [rbp+var_30], rax
                mov     edx, 20019h
                lea     rax, [rbp+var_48]
                mov     dword ptr [rbp+var_48], 40003Eh
                mov     [rbp+var_28], rax
                mov     [rbp+var_38], 30h ; '0'
                mov     [rbp+var_20], 240h
                movdqu  [rbp+var_18], xmm0
                call    ZwOpenKey
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A8986
                mov     rdx, rsi
                lea     rcx, [rbp+var_48]
                call    RtlInitUnicodeString
                mov     rax, [rbp+arg_18]
                lea     r8, [rbp+var_38]
                and     [rbp+var_34], 0
                xorps   xmm0, xmm0
                and     [rbp+var_1C], 0
                mov     edx, 20019h
                and     qword ptr [rdi], 0
                mov     rcx, rdi
                mov     [rbp+var_30], rax
                lea     rax, [rbp+var_48]
                mov     [rbp+var_28], rax
                mov     [rbp+var_38], 30h ; '0'
                mov     [rbp+var_20], 240h
                movdqu  [rbp+var_18], xmm0
                call    ZwOpenKey
                mov     ebx, eax

loc_1408A8986:                          ; CODE XREF: sub_1408A8890+47↑j
                                        ; sub_1408A8890+A3↑j
                mov     rcx, [rbp+arg_18]
                test    rcx, rcx
                jz      short loc_1408A8994
                call    ZwClose

loc_1408A8994:                          ; CODE XREF: sub_1408A8890+FD↑j
                lea     r11, [rsp+70h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     rdi, [r11+20h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A8890   endp

byte_1408A89AD  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D54C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=1D0h

sub_1408A89B4   proc near               ; CODE XREF: sub_14076D1AC+DA4E0↑p
                                        ; sub_1408A7584+1EC↑p
                                        ; DATA XREF: ...

var_2B0         = qword ptr -2B0h
var_2A8         = qword ptr -2A8h
var_2A0         = qword ptr -2A0h
var_298         = qword ptr -298h
var_290         = qword ptr -290h
var_288         = byte ptr -288h
var_280         = dword ptr -280h
var_278         = qword ptr -278h
var_270         = qword ptr -270h
var_268         = dword ptr -268h
var_260         = dword ptr -260h
var_240         = dword ptr -240h
var_238         = qword ptr -238h
var_230         = qword ptr -230h
var_228         = dword ptr -228h
var_208         = dword ptr -208h
var_200         = qword ptr -200h
var_1F8         = qword ptr -1F8h
var_1F0         = dword ptr -1F0h
var_1D0         = dword ptr -1D0h
var_1C8         = qword ptr -1C8h
var_1C0         = qword ptr -1C0h
var_1B8         = dword ptr -1B8h
var_198         = dword ptr -198h
var_190         = qword ptr -190h
var_188         = qword ptr -188h
var_180         = dword ptr -180h
var_160         = dword ptr -160h
var_158         = qword ptr -158h
var_150         = qword ptr -150h
var_148         = dword ptr -148h
var_128         = dword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = dword ptr -110h
var_F0          = dword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = dword ptr -0D8h
var_B8          = dword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = dword ptr -0A0h
var_50          = qword ptr -50h
var_30          = byte ptr -30h

; __unwind { // __GSHandlerCheck
                mov     rax, rsp
                mov     [rax+20h], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-1D8h]
                sub     rsp, 2A0h
                movaps  xmmword ptr [rax-48h], xmm6
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+1D0h+var_50], rax
                xor     r14d, r14d
                mov     qword ptr [rsp+2D0h+var_288], r8
                mov     rsi, rdx
                mov     [rsp+2D0h+var_2A0], r14
                mov     rdx, [rcx+8]
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+2D0h+var_298], r14
                mov     [rsp+2D0h+var_290], r14
                test    rcx, rcx
                jnz     short loc_1408A8A18
                mov     ecx, r14d
                jmp     short loc_1408A8A1F
; ---------------------------------------------------------------------------

loc_1408A8A18:                          ; CODE XREF: sub_1408A89B4+5D↑j
                mov     rcx, [rcx+0E0h]

loc_1408A8A1F:                          ; CODE XREF: sub_1408A89B4+62↑j
                lea     rax, [rsp+2D0h+var_2A0]
                xor     r9d, r9d
                mov     [rsp+2D0h+var_2A8], rax
                mov     r8, rsi
                mov     dword ptr [rsp+2D0h+var_2B0], 20019h
                call    sub_14062CECC
                mov     edi, eax
                test    eax, eax
                js      loc_1408A8D4E
                mov     edx, 0C0h
                mov     ecx, 1
                mov     r8d, 63647050h
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                movq    xmm6, rax
                punpcklqdq xmm6, xmm6
                test    rax, rax
                jnz     short loc_1408A8A76
                mov     edi, 0C000009Ah
                jmp     loc_1408A8D4E
; ---------------------------------------------------------------------------

loc_1408A8A76:                          ; CODE XREF: sub_1408A89B4+B6↑j
                xor     edx, edx
                mov     r8d, 0B8h
                mov     rcx, rbx
                call    memset
                or      qword ptr [rbx+0B8h], 0FFFFFFFFFFFFFFFFh
                lea     rcx, [rbx+18h]
                mov     rdx, rsi
                call    RtlCreateUnicodeString
                test    al, al
                jnz     short loc_1408A8AA8
                mov     edi, 0C000009Ah
                jmp     loc_1408A8D46
; ---------------------------------------------------------------------------

loc_1408A8AA8:                          ; CODE XREF: sub_1408A89B4+E8↑j
                mov     rax, [rsp+2D0h+var_2A0]
                lea     rcx, [rsp+2D0h+var_280]
                mov     [rbx+28h], rax
                xor     edx, edx
                mov     r8d, 230h
                mov     [rsp+2D0h+var_2A0], r14
                call    memset
                movdqu  xmm0, xmmword ptr cs:off_140985460 ; "HardwareIds"
                lea     r15, [rbx+68h]
                mov     r8d, 120h
                movdqa  xmm1, cs:xmmword_140040980
                lea     r12, [rbx+78h]
                movdqa  xmm3, cs:xmmword_140040970
                lea     r13, [rbx+0A0h]
                movdqa  xmm2, cs:xmmword_140011780
                mov     edx, 1000000h
                movq    [rsp+2D0h+var_270], xmm0
                mov     ecx, 4000000h
                psrldq  xmm0, 8
                mov     eax, 4
                movq    [rbp+1D0h+var_238], xmm0
                xor     r9d, r9d
                xorps   xmm0, xmm0
                movd    [rsp+2D0h+var_260], xmm1
                punpckldq xmm2, xmm0
                paddq   xmm2, cs:xmmword_140040950
                movd    xmm0, eax
                lea     rax, aClassguid_0 ; "ClassGuid"
                mov     [rbp+1D0h+var_200], rax
                lea     rax, [rsp+2D0h+var_298]
                mov     [rbp+1D0h+var_1F8], rax
                lea     rax, aCapabilities_0 ; "Capabilities"
                mov     [rbp+1D0h+var_1C8], rax
                lea     rax, [rbx+60h]
                mov     [rbp+1D0h+var_1C0], rax
                lea     rax, aBusdevicedesc ; "BusDeviceDesc"
                mov     [rbp+1D0h+var_190], rax
                lea     rax, aLocationinfo ; "LocationInfo"
                mov     [rbp+1D0h+var_158], rax
                lea     rax, aLocationpaths ; "LocationPaths"
                mov     [rbp+1D0h+var_120], rax
                lea     rax, [rbx+88h]
                mov     [rbp+1D0h+var_118], rax
                lea     rax, aDriverinfname ; "DriverInfName"
                psllq   xmm2, xmm0
                mov     [rbp+1D0h+var_E8], rax
                lea     rax, aPresent   ; "Present"
                paddq   xmm2, xmm6
                mov     [rbp+1D0h+var_B0], rax
                movq    qword ptr [rsp+2D0h+var_268], xmm2
                lea     rax, [rbx+0B0h]
                movd    dword ptr [rsp+2D0h+var_278], xmm3
                psrldq  xmm1, 4
                psrldq  xmm2, 8
                psrldq  xmm3, 4
                mov     [rbp+1D0h+var_1F0], edx
                mov     [rbp+1D0h+var_208], r8d
                mov     [rbp+1D0h+var_1B8], ecx
                mov     [rbp+1D0h+var_1D0], r8d
                mov     [rbp+1D0h+var_180], edx
                mov     [rbp+1D0h+var_198], r8d
                mov     [rbp+1D0h+var_148], edx
                mov     [rbp+1D0h+var_160], r8d
                mov     [rbp+1D0h+var_D8], edx
                mov     rdx, [rbx+28h]
                mov     [rbp+1D0h+var_F0], r8d
                mov     [rbp+1D0h+var_A0], ecx
                mov     ecx, 0C0000000h
                mov     [rbp+1D0h+var_B8], r8d
                lea     r8, [rsp+2D0h+var_280]
                mov     [rbp+1D0h+var_A8], rax
                movd    [rbp+1D0h+var_228], xmm1
                movq    [rbp+1D0h+var_230], xmm2
                movd    [rbp+1D0h+var_240], xmm3
                mov     [rbp+1D0h+var_188], r15
                mov     [rbp+1D0h+var_150], r12
                mov     [rbp+1D0h+var_110], 7000000h
                mov     [rbp+1D0h+var_128], 130h
                mov     [rbp+1D0h+var_E0], r13
                mov     byte ptr [rsp+2D0h+var_2A8], 1
                call    sub_14062B088
                mov     edi, eax
                test    eax, eax
                js      loc_1408A8D46
                cmp     [rsp+2D0h+var_290], r14
                jz      loc_1408A8D41
                lea     rdx, [rbx+50h]
                lea     rcx, [rsp+2D0h+var_298]
                call    RtlGUIDFromString
                test    eax, eax
                js      loc_1408A8D41
                lea     rsi, [rbx+38h]
                mov     eax, 2

loc_1408A8C98:                          ; CODE XREF: sub_1408A89B4+312↓j
                cmp     [rsi-8], ax
                ja      short loc_1408A8CBC
                cmp     qword ptr [rsi], 0
                jz      short loc_1408A8CBC
                mov     ecx, r14d
                add     rcx, 3
                shl     rcx, 4
                add     rcx, rbx
                call    RtlFreeUnicodeString
                mov     eax, 2

loc_1408A8CBC:                          ; CODE XREF: sub_1408A89B4+2E8↑j
                                        ; sub_1408A89B4+2EE↑j
                inc     r14d
                add     rsi, 10h
                cmp     r14d, eax
                jb      short loc_1408A8C98
                xor     r14d, r14d
                cmp     [r15], r14w
                jnz     short loc_1408A8CDF
                cmp     [rbx+70h], r14
                jz      short loc_1408A8CDF
                mov     rcx, r15
                call    RtlFreeUnicodeString

loc_1408A8CDF:                          ; CODE XREF: sub_1408A89B4+31B↑j
                                        ; sub_1408A89B4+321↑j
                cmp     [r12], r14w
                jnz     short loc_1408A8CF7
                cmp     [rbx+80h], r14
                jz      short loc_1408A8CF7
                mov     rcx, r12
                call    RtlFreeUnicodeString

loc_1408A8CF7:                          ; CODE XREF: sub_1408A89B4+330↑j
                                        ; sub_1408A89B4+339↑j
                mov     rcx, [rbx+90h]
                test    rcx, rcx
                jz      short loc_1408A8D1F
                lea     r9, [rbx+88h]
                movzx   edx, word ptr [r9]
                call    sub_14036E494
                test    al, al
                jnz     short loc_1408A8D1F
                mov     rcx, r9
                call    RtlFreeUnicodeString

loc_1408A8D1F:                          ; CODE XREF: sub_1408A89B4+34D↑j
                                        ; sub_1408A89B4+361↑j
                cmp     [r13+0], r14w
                jnz     short loc_1408A8D37
                cmp     [rbx+0A8h], r14
                jz      short loc_1408A8D37
                mov     rcx, r13
                call    RtlFreeUnicodeString

loc_1408A8D37:                          ; CODE XREF: sub_1408A89B4+370↑j
                                        ; sub_1408A89B4+379↑j
                mov     rax, qword ptr [rsp+2D0h+var_288]
                mov     [rax], rbx
                jmp     short loc_1408A8D4E
; ---------------------------------------------------------------------------

loc_1408A8D41:                          ; CODE XREF: sub_1408A89B4+2BF↑j
                                        ; sub_1408A89B4+2D5↑j
                mov     edi, 0C0000034h

loc_1408A8D46:                          ; CODE XREF: sub_1408A89B4+EF↑j
                                        ; sub_1408A89B4+2B4↑j
                mov     rcx, rbx
                call    sub_1408A7F58

loc_1408A8D4E:                          ; CODE XREF: sub_1408A89B4+8C↑j
                                        ; sub_1408A89B4+BD↑j ...
                mov     rcx, [rsp+2D0h+var_2A0]
                test    rcx, rcx
                jz      short loc_1408A8D5D
                call    ZwClose

loc_1408A8D5D:                          ; CODE XREF: sub_1408A89B4+3A2↑j
                lea     rcx, [rsp+2D0h+var_298]
                call    RtlFreeUnicodeString
                mov     eax, edi
                mov     rcx, [rbp+1D0h+var_50]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+2D0h+var_30]
                mov     rbx, [r11+58h]
                movaps  xmm6, xmmword ptr [r11-10h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A89B4
sub_1408A89B4   endp

algn_1408A8D99:                         ; DATA XREF: .pdata:000000014011D558↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A8DA0   proc near               ; DATA XREF: .pdata:000000014011D564↑o
                                        ; sub_14073E818+4EF↑o

arg_28          = qword ptr  30h

                mov     rcx, [rsp+arg_28]
                cmp     edx, 3
                jnz     short loc_1408A8DBB
                cmp     r9d, 8
                jnz     short loc_1408A8DBB
                test    r8, r8
                jz      short loc_1408A8DBB
                mov     rax, [r8]
                mov     [rcx], rax

loc_1408A8DBB:                          ; CODE XREF: sub_1408A8DA0+8↑j
                                        ; sub_1408A8DA0+E↑j ...
                xor     eax, eax
                retn
sub_1408A8DA0   endp

; ---------------------------------------------------------------------------
                db 0CCh
byte_1408A8DBF  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D564↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408A8DC8   proc near               ; CODE XREF: sub_14076A9F4+DC2D0↑p
                                        ; DATA XREF: .pdata:000000014011D570↑o

var_40          = dword ptr -40h
var_38          = qword ptr -38h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8
var_s0          = byte ptr  0
arg_0           = qword ptr  30h
arg_8           = qword ptr  38h
arg_10          = qword ptr  40h
arg_18          = qword ptr  48h
arg_20          = qword ptr  50h

                mov     [rsp-28h+arg_0], rbx
                mov     [rsp-28h+arg_10], rsi
                mov     [rsp-28h+arg_18], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                xor     ebx, ebx
                mov     r13d, r9d
                mov     [rbp+var_10], rbx
                mov     r12, r8
                mov     [rbp+var_8], rbx
                mov     rsi, rdx
                mov     [rbp+arg_8], rbx
                mov     rdi, rcx
                mov     [rbp+var_20], rbx
                mov     r15d, ebx
                mov     [rbp+var_18], rbx
                test    rdx, rdx
                jz      loc_1408A8ED9
                mov     rdx, [rcx+30h]
                mov     rcx, rsi
                call    _wcsicmp
                test    eax, eax
                jnz     short loc_1408A8E53
                mov     rcx, [rdi+10h]
                lea     r8, [rbp+var_20]
                mov     rdx, r12
                call    sub_14076EDB0
                mov     r14d, 0C0000034h
                mov     ebx, eax
                cmp     eax, r14d
                jz      loc_1408A8ECF
                test    eax, eax
                js      loc_1408A9205
                jmp     loc_1408A8F0E
; ---------------------------------------------------------------------------

loc_1408A8E53:                          ; CODE XREF: sub_1408A8DC8+5B↑j
                lea     rdx, [rbp+var_10]
                mov     rcx, rsi
                call    sub_14073F1D0
                mov     r14d, 0C0000034h
                mov     ebx, eax
                cmp     eax, r14d
                jz      loc_1408A9074
                xor     ecx, ecx
                test    eax, eax
                js      loc_1408A9205
                mov     rdx, [rbp+var_8]
                lea     rax, [rbp+arg_8]
                mov     [rsp+60h+var_38], rax
                lea     r8d, [rcx+8]
                mov     byte ptr [rsp+60h+var_40], cl
                mov     r9d, 20019h
                mov     rcx, cs:qword_140CF4378
                call    sub_1406CC3A4
                mov     ebx, eax
                cmp     eax, r14d
                jz      loc_1408A9074
                test    eax, eax
                js      loc_1408A9205
                mov     rcx, [rbp+arg_8]
                lea     r8, [rbp+var_20]
                mov     rdx, r12
                call    sub_14076EDB0
                mov     ebx, eax
                cmp     eax, r14d
                jnz     loc_1408A8F5A

loc_1408A8ECF:                          ; CODE XREF: sub_1408A8DC8+78↑j
                mov     ebx, 0C0000492h
                jmp     loc_1408A9205
; ---------------------------------------------------------------------------

loc_1408A8ED9:                          ; CODE XREF: sub_1408A8DC8+47↑j
                mov     rcx, [rcx+10h]
                lea     r8, [rbp+var_20]
                mov     rdx, r12
                call    sub_14076EDB0
                xor     ecx, ecx
                mov     r14d, 0C0000034h
                mov     ebx, eax
                cmp     eax, r14d
                jnz     short loc_1408A8EFC
                mov     ebx, ecx
                jmp     short loc_1408A8F04
; ---------------------------------------------------------------------------

loc_1408A8EFC:                          ; CODE XREF: sub_1408A8DC8+12E↑j
                test    eax, eax
                js      loc_1408A9205

loc_1408A8F04:                          ; CODE XREF: sub_1408A8DC8+132↑j
                cmp     [rbp+var_20], rcx
                jz      short loc_1408A8F67
                mov     rsi, [rdi+30h]

loc_1408A8F0E:                          ; CODE XREF: sub_1408A8DC8+86↑j
                lea     rdx, [rdi+38h]
                lea     rcx, [rbp+var_10]
                call    sub_14036E4C8
                xor     ecx, ecx
                test    al, al
                jz      loc_1408A906A
                mov     rax, cs:qword_140CF4378
                mov     rdx, [rdi+10h]
                test    rax, rax
                jz      short loc_1408A8F3C
                mov     rcx, [rax+0E0h]

loc_1408A8F3C:                          ; CODE XREF: sub_1408A8DC8+16B↑j
                lea     rax, [rbp+arg_8]
                xor     r9d, r9d
                mov     [rsp+60h+var_38], rax
                xor     r8d, r8d
                mov     [rsp+60h+var_40], 20019h
                call    sub_14062CECC
                mov     ebx, eax

loc_1408A8F5A:                          ; CODE XREF: sub_1408A8DC8+101↑j
                test    eax, eax
                js      loc_1408A9205
                jmp     loc_1408A904D
; ---------------------------------------------------------------------------

loc_1408A8F67:                          ; CODE XREF: sub_1408A8DC8+140↑j
                mov     rsi, [rdi+158h]
                test    rsi, rsi
                jnz     short loc_1408A8F7D

loc_1408A8F73:                          ; CODE XREF: sub_1408A8DC8+27F↓j
                mov     ebx, 0C0000492h
                jmp     loc_1408A9213
; ---------------------------------------------------------------------------

loc_1408A8F7D:                          ; CODE XREF: sub_1408A8DC8+1A9↑j
                cmp     [rsi], cx
                jz      loc_1408A903B

loc_1408A8F86:                          ; CODE XREF: sub_1408A8DC8+264↓j
                lea     rdx, [rbp+var_10]
                mov     rcx, rsi
                call    sub_14073F1D0
                mov     ebx, eax
                cmp     eax, r14d
                jz      loc_1408A9074
                xor     ecx, ecx
                test    eax, eax
                js      loc_1408A9205
                mov     rdx, [rbp+var_8]
                lea     rax, [rbp+arg_8]
                mov     [rsp+60h+var_38], rax
                lea     r8d, [rcx+8]
                mov     byte ptr [rsp+60h+var_40], cl
                mov     r9d, 20019h
                mov     rcx, cs:qword_140CF4378
                call    sub_1406CC3A4
                mov     ebx, eax
                cmp     eax, r14d
                jz      short loc_1408A9034
                test    eax, eax
                js      loc_1408A9205
                mov     rcx, [rbp+arg_8]
                lea     r8, [rbp+var_20]
                mov     rdx, r12
                call    sub_14076EDB0
                xor     ecx, ecx
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408A9043
                cmp     eax, r14d
                jnz     short loc_1408A903B
                mov     rcx, [rbp+arg_8]
                call    ZwClose
                xor     eax, eax
                lea     rcx, [rbp+var_10]
                mov     [rbp+arg_8], rax
                call    RtlFreeUnicodeString
                or      rax, 0FFFFFFFFFFFFFFFFh
                xor     ecx, ecx

loc_1408A9018:                          ; CODE XREF: sub_1408A8DC8+257↓j
                inc     rax
                cmp     [rsi+rax*2], cx
                jnz     short loc_1408A9018
                lea     rsi, [rsi+rax*2]
                add     rsi, 2
                cmp     [rsi], cx
                jnz     loc_1408A8F86
                jmp     short loc_1408A9043
; ---------------------------------------------------------------------------

loc_1408A9034:                          ; CODE XREF: sub_1408A8DC8+20B↑j
                mov     ebx, 0C0000491h
                xor     ecx, ecx

loc_1408A903B:                          ; CODE XREF: sub_1408A8DC8+1B8↑j
                                        ; sub_1408A8DC8+230↑j
                test    ebx, ebx
                js      loc_1408A9205

loc_1408A9043:                          ; CODE XREF: sub_1408A8DC8+22B↑j
                                        ; sub_1408A8DC8+26A↑j
                cmp     [rbp+var_20], rcx
                jz      loc_1408A8F73

loc_1408A904D:                          ; CODE XREF: sub_1408A8DC8+19A↑j
                mov     edx, 1A0h
                mov     ecx, 1
                mov     r8d, 63647050h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408A907E

loc_1408A906A:                          ; CODE XREF: sub_1408A8DC8+157↑j
                mov     ebx, 0C000009Ah
                jmp     loc_1408A9205
; ---------------------------------------------------------------------------

loc_1408A9074:                          ; CODE XREF: sub_1408A8DC8+A2↑j
                                        ; sub_1408A8DC8+DE↑j ...
                mov     ebx, 0C0000491h
                jmp     loc_1408A9205
; ---------------------------------------------------------------------------

loc_1408A907E:                          ; CODE XREF: sub_1408A8DC8+2A0↑j
                xor     edx, edx
                mov     r8d, 1A0h
                mov     rcx, rdi
                call    memset
                lea     rax, [rdi+0E0h]
                mov     dword ptr [rdi+0B8h], 20h ; ' '
                mov     [rax+8], rax
                lea     rcx, [rdi+28h]
                mov     [rax], rax
                mov     rdx, rsi
                lea     rax, [rdi+0D0h]
                mov     [rax+8], rax
                mov     [rax], rax
                lea     rax, [rdi+170h]
                mov     [rax+8], rax
                mov     [rax], rax
                call    RtlCreateUnicodeString
                test    al, al
                jnz     short loc_1408A90DC

loc_1408A90D2:                          ; CODE XREF: sub_1408A8DC8+323↓j
                                        ; sub_1408A8DC8+333↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408A91E9
; ---------------------------------------------------------------------------

loc_1408A90DC:                          ; CODE XREF: sub_1408A8DC8+308↑j
                lea     rcx, [rdi+38h]
                lea     rdx, [rbp+var_10]
                call    sub_14036E4C8
                test    al, al
                jz      short loc_1408A90D2
                lea     rcx, [rdi+58h]
                mov     rdx, r12
                call    RtlCreateUnicodeString
                test    al, al
                jz      short loc_1408A90D2
                mov     [rdi+68h], r13d
                lea     r9, [rbp+var_18]
                mov     rcx, [rbp+var_20]
                lea     rdx, aIncludescope ; "IncludeScope"
                xor     r8d, r8d
                call    sub_140739D08
                mov     r15, [rbp+var_18]
                mov     ebx, eax
                cmp     eax, r14d
                jnz     short loc_1408A912C
                xor     eax, eax
                mov     ebx, eax
                jmp     loc_1408A91C2
; ---------------------------------------------------------------------------

loc_1408A912C:                          ; CODE XREF: sub_1408A8DC8+359↑j
                test    eax, eax
                js      loc_1408A91E9
                mov     rcx, r15
                call    sub_140392E5C
                test    al, al
                jnz     short loc_1408A914A
                mov     ebx, 0C0000001h
                jmp     loc_1408A91E9
; ---------------------------------------------------------------------------

loc_1408A914A:                          ; CODE XREF: sub_1408A8DC8+376↑j
                mov     esi, [r15+8]
                add     rsi, r15
                jmp     short loc_1408A91B4
; ---------------------------------------------------------------------------

loc_1408A9153:                          ; CODE XREF: sub_1408A8DC8+3F2↓j
                movzx   ecx, word ptr [rsi]
                sub     ecx, 2Ah ; '*'
                jnz     short loc_1408A9166
                movzx   ecx, word ptr [rsi+2]
                xor     eax, eax
                movzx   eax, ax
                sub     ecx, eax

loc_1408A9166:                          ; CODE XREF: sub_1408A8DC8+391↑j
                xor     eax, eax
                test    ecx, ecx
                jz      short loc_1408A91BE
                mov     r14b, 1
                cmp     dx, 2Bh ; '+'
                jz      short loc_1408A917E
                cmp     dx, 2Dh ; '-'
                jnz     short loc_1408A9182
                mov     r14b, al

loc_1408A917E:                          ; CODE XREF: sub_1408A8DC8+3AB↑j
                add     rsi, 2

loc_1408A9182:                          ; CODE XREF: sub_1408A8DC8+3B1↑j
                mov     rcx, rsi
                call    sub_14050E238
                mov     ecx, [rdi+68h]
                test    r14b, r14b
                jz      short loc_1408A9196
                or      ecx, eax
                jmp     short loc_1408A919A
; ---------------------------------------------------------------------------

loc_1408A9196:                          ; CODE XREF: sub_1408A8DC8+3C8↑j
                not     eax
                and     ecx, eax

loc_1408A919A:                          ; CODE XREF: sub_1408A8DC8+3CC↑j
                or      rax, 0FFFFFFFFFFFFFFFFh
                mov     [rdi+68h], ecx
                xor     ecx, ecx

loc_1408A91A3:                          ; CODE XREF: sub_1408A8DC8+3E2↓j
                inc     rax
                cmp     [rsi+rax*2], cx
                jnz     short loc_1408A91A3
                lea     rsi, [rsi+rax*2]
                add     rsi, 2

loc_1408A91B4:                          ; CODE XREF: sub_1408A8DC8+389↑j
                movzx   edx, word ptr [rsi]
                test    dx, dx
                jnz     short loc_1408A9153
                jmp     short loc_1408A91C2
; ---------------------------------------------------------------------------

loc_1408A91BE:                          ; CODE XREF: sub_1408A8DC8+3A2↑j
                or      dword ptr [rdi+68h], 0FFFFFFFFh

loc_1408A91C2:                          ; CODE XREF: sub_1408A8DC8+35F↑j
                                        ; sub_1408A8DC8+3F4↑j
                mov     rax, [rbp+arg_8]
                mov     [rdi+10h], rax
                mov     rax, [rbp+var_20]
                mov     [rdi+20h], rax
                xor     eax, eax
                mov     [rbp+arg_8], rax
                xor     r12d, r12d
                mov     [rbp+var_20], rax
                mov     rax, [rbp+arg_20]
                mov     [rax], rdi
                mov     edi, r12d

loc_1408A91E9:                          ; CODE XREF: sub_1408A8DC8+30F↑j
                                        ; sub_1408A8DC8+366↑j ...
                test    rdi, rdi
                jz      short loc_1408A91F6
                mov     rcx, rdi
                call    sub_140749584

loc_1408A91F6:                          ; CODE XREF: sub_1408A8DC8+424↑j
                test    r15, r15
                jz      short loc_1408A9205
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag

loc_1408A9205:                          ; CODE XREF: sub_1408A8DC8+80↑j
                                        ; sub_1408A8DC8+AC↑j ...
                mov     rcx, [rbp+var_20]
                test    rcx, rcx
                jz      short loc_1408A9213
                call    ZwClose

loc_1408A9213:                          ; CODE XREF: sub_1408A8DC8+1B0↑j
                                        ; sub_1408A8DC8+444↑j
                mov     rcx, [rbp+arg_8]
                test    rcx, rcx
                jz      short loc_1408A9221
                call    ZwClose

loc_1408A9221:                          ; CODE XREF: sub_1408A8DC8+452↑j
                lea     rcx, [rbp+var_10]
                call    RtlFreeUnicodeString
                lea     r11, [rsp+60h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+30h]
                mov     rsi, [r11+40h]
                mov     rdi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A8DC8   endp

byte_1408A924B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D570↑o

; =============== S U B R O U T I N E =======================================


sub_1408A9254   proc near               ; CODE XREF: sub_14076DC88+181↑p
                                        ; sub_14076DC88+1AC↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                push    rdi
                sub     rsp, 20h
                and     qword ptr [rax+18h], 0
                lea     r9, [rax+18h]
                mov     rsi, r8
                xor     ebx, ebx
                mov     [r8], bl
                xor     r8d, r8d
                call    sub_140739D08
                mov     rcx, [rsp+28h+arg_10]
                mov     edi, eax
                test    eax, eax
                js      short loc_1408A929F
                call    sub_14039A9A8
                test    al, al
                jz      short loc_1408A9297
                mov     edx, [rcx+8]
                mov     ebx, [rdx+rcx]

loc_1408A9297:                          ; CODE XREF: sub_1408A9254+3B↑j
                cmp     ebx, 1
                setz    al
                mov     [rsi], al

loc_1408A929F:                          ; CODE XREF: sub_1408A9254+32↑j
                test    rcx, rcx
                jz      short loc_1408A92AB
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408A92AB:                          ; CODE XREF: sub_1408A9254+4E↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     eax, edi
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A9254   endp

byte_1408A92BE  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D57C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A92C4   proc near               ; CODE XREF: sub_14076DC88+1D5↑p
                                        ; sub_14076DC88+1F7↑p ...

var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = dword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = xmmword ptr -0A8h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
arg_18          = qword ptr  28h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-27h]
                sub     rsp, 0C0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_38], rax
                xor     r12d, r12d
                mov     [rbp+57h+var_98], r8
                xorps   xmm0, xmm0
                mov     [rbp+57h+var_B0], r12
                xor     eax, eax
                mov     [rbp+57h+var_B8], r12
                xor     r8d, r8d
                mov     [rbp+57h+var_40], rax
                lea     r9, [rbp+57h+var_B8]
                mov     [rbp+57h+var_C0], r12d
                movups  [rbp+57h+var_A8], xmm0
                mov     edi, r12d
                mov     esi, r12d
                movups  [rbp+57h+var_60], xmm0
                mov     r15, rdx
                mov     r14, rcx
                movups  [rbp+57h+var_50], xmm0
                call    sub_140739D08
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A9599
                mov     rcx, [rbp+57h+var_B8]
                call    sub_14039A9A8
                test    al, al
                jz      short loc_1408A934B
                mov     eax, [rcx+8]
                mov     edi, [rax+rcx]

loc_1408A934B:                          ; CODE XREF: sub_1408A92C4+7F↑j
                xor     edx, edx
                call    ExFreePoolWithTag
                cmp     edi, 1
                jz      short loc_1408A9361

loc_1408A9357:                          ; CODE XREF: sub_1408A92C4+117↓j
                mov     ebx, 0C0000225h
                jmp     loc_1408A95AC
; ---------------------------------------------------------------------------

loc_1408A9361:                          ; CODE XREF: sub_1408A92C4+91↑j
                mov     rdx, r15
                lea     rcx, [rbp+57h+var_A8]
                call    RtlInitUnicodeString
                lea     rax, [rbp+57h+var_A8]
                mov     [rbp+57h+var_90], 30h ; '0'
                xorps   xmm0, xmm0
                mov     [rbp+57h+var_80], rax
                lea     r8, [rbp+57h+var_90]
                mov     [rbp+57h+var_78], 240h
                mov     edx, 20019h
                mov     [rbp+57h+var_88], r14
                lea     rcx, [rbp+57h+var_B0]
                movdqu  [rbp+57h+var_70], xmm0
                call    ZwOpenKey
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A95AC
                mov     rcx, [rbp+57h+var_B0]
                lea     rax, [rbp+57h+var_C0]
                mov     r9d, 28h ; '('
                mov     [rsp+0F0h+var_D0], rax
                lea     r8, [rbp+57h+var_60]
                lea     edx, [r9-24h]
                call    sub_14064CA00
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A95AC
                cmp     dword ptr [rbp+57h+var_50+4], r12d
                jz      loc_1408A9357
                mov     ecx, dword ptr [rbp+57h+var_50+8]
                mov     r8d, 63647050h
                mov     eax, dword ptr [rbp+57h+var_50+0Ch]
                add     ecx, 0Ch
                lea     ebx, [rax+rcx*2]
                mov     ecx, 1
                mov     edx, ebx
                mov     dword ptr [rbp+57h+var_B8], ebx
                call    ExAllocatePoolWithTag
                mov     r14, rax
                test    rax, rax
                jnz     short loc_1408A9414
                mov     ebx, 0C000009Ah
                jmp     loc_1408A95AC
; ---------------------------------------------------------------------------

loc_1408A9414:                          ; CODE XREF: sub_1408A92C4+144↑j
                mov     edi, dword ptr [rbp+57h+var_50+0Ch]
                imul    edi, dword ptr [rbp+57h+var_50+4]
                add     edi, 2

loc_1408A941E:                          ; CODE XREF: sub_1408A92C4+298↓j
                test    rsi, rsi
                jz      short loc_1408A942D
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408A942D:                          ; CODE XREF: sub_1408A92C4+15D↑j
                mov     edx, edi
                mov     ecx, 1
                mov     r8d, 63647050h
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jz      loc_1408A9592
                lea     rax, [rbp+57h+var_C0]
                shr     edi, 1
                mov     [rsp+0F0h+var_C8], rax
                mov     r15d, r12d
                mov     dword ptr [rsp+0F0h+var_D0], ebx
                mov     r13d, r12d
                xor     edx, edx
                jmp     loc_1408A9523
; ---------------------------------------------------------------------------

loc_1408A9467:                          ; CODE XREF: sub_1408A92C4+278↓j
                cmp     ebx, 80000005h
                jnz     short loc_1408A94A2
                xor     edx, edx
                mov     rcx, r14
                call    ExFreePoolWithTag
                mov     eax, [rbp+57h+var_C0]
                mov     ecx, 1
                mov     edx, eax
                mov     dword ptr [rbp+57h+var_B8], eax
                mov     r8d, 63647050h
                call    ExAllocatePoolWithTag
                mov     r14, rax
                test    rax, rax
                jz      loc_1408A9561
                dec     r12d
                jmp     short loc_1408A950D
; ---------------------------------------------------------------------------

loc_1408A94A2:                          ; CODE XREF: sub_1408A92C4+1A9↑j
                test    ebx, ebx
                js      loc_1408A9581
                mov     rcx, r14
                call    sub_14036E434
                test    al, al
                jz      short loc_1408A950D
                mov     edx, [r14+8]
                lea     rcx, [rbp+57h+var_A8]
                add     rdx, r14
                call    RtlInitUnicodeStringEx
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A9581
                movzx   eax, word ptr [rbp+57h+var_A8+2]
                shr     eax, 1
                add     r15d, eax
                cmp     edi, r15d
                jbe     short loc_1408A950D
                mov     r8, qword ptr [rbp+57h+var_A8+8]
                mov     edx, edi
                mov     eax, r13d
                sub     edx, r13d
                mov     dword ptr [rsp+0F0h+var_C8], 900h
                xor     r9d, r9d
                and     [rsp+0F0h+var_D0], 0
                lea     rcx, [rsi+rax*2]
                call    sub_140203D40
                movzx   eax, word ptr [rbp+57h+var_A8+2]
                shr     eax, 1
                add     r13d, eax

loc_1408A950D:                          ; CODE XREF: sub_1408A92C4+1DC↑j
                                        ; sub_1408A92C4+1F0↑j ...
                lea     rax, [rbp+57h+var_C0]
                inc     r12d
                mov     [rsp+0F0h+var_C8], rax
                mov     edx, r12d
                mov     eax, dword ptr [rbp+57h+var_B8]
                mov     dword ptr [rsp+0F0h+var_D0], eax

loc_1408A9523:                          ; CODE XREF: sub_1408A92C4+19E↑j
                mov     rcx, [rbp+57h+var_B0]
                mov     r9, r14
                mov     r8d, 1
                call    ZwEnumerateValueKey
                mov     ebx, eax
                cmp     eax, 8000001Ah
                jnz     loc_1408A9467
                xor     r12d, r12d
                mov     ebx, r12d
                test    r15d, r15d
                jz      short loc_1408A957C
                inc     r15d
                cmp     edi, r15d
                jnb     short loc_1408A9568
                mov     ebx, dword ptr [rbp+57h+var_B8]
                lea     edi, [r15+r15]
                jmp     loc_1408A941E
; ---------------------------------------------------------------------------

loc_1408A9561:                          ; CODE XREF: sub_1408A92C4+1D3↑j
                mov     ebx, 0C000009Ah
                jmp     short loc_1408A9581
; ---------------------------------------------------------------------------

loc_1408A9568:                          ; CODE XREF: sub_1408A92C4+28F↑j
                mov     eax, r13d
                mov     [rsi+rax*2], r12w
                mov     rax, [rbp+57h+var_98]
                mov     [rax], rsi
                mov     rsi, r12
                jmp     short loc_1408A9581
; ---------------------------------------------------------------------------

loc_1408A957C:                          ; CODE XREF: sub_1408A92C4+287↑j
                mov     ebx, 0C0000225h

loc_1408A9581:                          ; CODE XREF: sub_1408A92C4+1E0↑j
                                        ; sub_1408A92C4+206↑j ...
                test    rsi, rsi
                jz      short loc_1408A959D
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag
                jmp     short loc_1408A959D
; ---------------------------------------------------------------------------

loc_1408A9592:                          ; CODE XREF: sub_1408A92C4+181↑j
                mov     ebx, 0C000009Ah
                jmp     short loc_1408A959D
; ---------------------------------------------------------------------------

loc_1408A9599:                          ; CODE XREF: sub_1408A92C4+6E↑j
                mov     r14, [rbp+57h+var_B8]

loc_1408A959D:                          ; CODE XREF: sub_1408A92C4+2C0↑j
                                        ; sub_1408A92C4+2CC↑j ...
                test    r14, r14
                jz      short loc_1408A95AC
                xor     edx, edx
                mov     rcx, r14
                call    ExFreePoolWithTag

loc_1408A95AC:                          ; CODE XREF: sub_1408A92C4+98↑j
                                        ; sub_1408A92C4+E3↑j ...
                mov     rcx, [rbp+57h+var_B0]
                test    rcx, rcx
                jz      short loc_1408A95BA
                call    ZwClose

loc_1408A95BA:                          ; CODE XREF: sub_1408A92C4+2EF↑j
                mov     eax, ebx
                mov     rcx, [rbp+57h+var_38]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0F0h+arg_18]
                add     rsp, 0C0h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A92C4
sub_1408A92C4   endp

byte_1408A95E4  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D588↑o

; =============== S U B R O U T I N E =======================================


sub_1408A95EC   proc near               ; CODE XREF: sub_140748F30+EF010↑p
                                        ; DATA XREF: .pdata:000000014011D594↑o

var_68          = qword ptr -68h
var_58          = qword ptr -58h
var_50          = dword ptr -50h
var_48          = qword ptr -48h
var_40          = dword ptr -40h
var_38          = dword ptr -38h
var_28          = word ptr -28h
var_20          = qword ptr -20h
var_18          = byte ptr -18h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                push    rdi
                push    r12
                push    r14
                sub     rsp, 70h
                mov     rbp, rcx
                xor     r14d, r14d
                mov     rcx, rdx
                mov     [rax-28h], r14
                mov     [rax-20h], r14
                mov     rsi, rdx
                call    sub_14076A5CC
                mov     r12d, 80000000h
                mov     ebx, eax
                lea     ecx, [rax+r12]
                test    r12d, ecx
                jnz     short loc_1408A9639
                cmp     eax, 0C0000493h
                jnz     loc_1408A9705

loc_1408A9639:                          ; CODE XREF: sub_1408A95EC+40↑j
                lea     rdx, [rsi+188h]
                mov     r9b, 1
                xor     r8d, r8d
                lea     rcx, [rsp+88h+var_28]
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408A9705
                add     rsi, 0D0h
                mov     rdi, [rsi]
                jmp     short loc_1408A96A4
; ---------------------------------------------------------------------------

loc_1408A9666:                          ; CODE XREF: sub_1408A95EC+BB↓j
                mov     rcx, rdi
                call    sub_14076A5CC
                mov     ebx, eax
                add     eax, r12d
                test    r12d, eax
                jnz     short loc_1408A9684
                cmp     ebx, 0C0000493h
                jnz     loc_1408A9705

loc_1408A9684:                          ; CODE XREF: sub_1408A95EC+8A↑j
                lea     rdx, [rdi+188h]
                mov     r9b, 1
                xor     r8d, r8d
                lea     rcx, [rsp+88h+var_28]
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408A9705
                mov     rdi, [rdi]

loc_1408A96A4:                          ; CODE XREF: sub_1408A95EC+78↑j
                cmp     rdi, rsi
                jnz     short loc_1408A9666
                mov     rcx, [rsp+88h+var_20]
                test    rcx, rcx
                jnz     short loc_1408A96BA
                mov     ebx, 0C0000493h
                jmp     short loc_1408A9705
; ---------------------------------------------------------------------------

loc_1408A96BA:                          ; CODE XREF: sub_1408A95EC+C5↑j
                movzx   eax, [rsp+88h+var_28]
                mov     r9d, 1
                mov     r8, [rbp+8]
                mov     rdx, rbp
                mov     [rsp+88h+var_38], r14d
                mov     [rsp+88h+var_40], eax
                lea     rax, qword_14002EF38
                mov     [rsp+88h+var_48], rcx
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+88h+var_50], 2012h
                mov     [rsp+88h+var_58], rax
                mov     rax, [rbp+10h]
                mov     [rsp+88h+var_68], rax
                call    sub_140736BA4
                mov     ebx, eax

loc_1408A9705:                          ; CODE XREF: sub_1408A95EC+47↑j
                                        ; sub_1408A95EC+68↑j ...
                lea     rcx, [rsp+88h+var_28]
                call    RtlFreeUnicodeString
                lea     r11, [rsp+88h+var_18]
                mov     eax, ebx
                mov     rbx, [r11+20h]
                mov     rbp, [r11+28h]
                mov     rsi, [r11+30h]
                mov     rsp, r11
                pop     r14
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A95EC   endp

algn_1408A972C:                         ; DATA XREF: .pdata:000000014011D594↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A9740   proc near               ; DATA XREF: .pdata:000000014011D5A0↑o
                                        ; sub_14072FDE4+1038E2↑o

var_28          = dword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_20          = qword ptr  28h

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 40h
                cmp     dword ptr [r8+10h], 10h
                mov     rbx, r9
                mov     rdi, rdx
                jnz     short loc_1408A9792
                mov     rcx, [r8]
                lea     rdx, aProperties ; "Properties"
                call    _wcsicmp
                test    eax, eax
                jnz     short loc_1408A9792
                mov     r8, [rdi+8]
                and     [rsp+48h+var_18], 0
                lea     r9d, [rax+1]
                and     [rsp+48h+var_20], 0
                mov     rcx, rbx
                mov     rdx, [rsp+48h+arg_20]
                mov     [rsp+48h+var_28], r9d
                call    sub_14075C52C
                jmp     short loc_1408A97A2
; ---------------------------------------------------------------------------

loc_1408A9792:                          ; CODE XREF: sub_1408A9740+15↑j
                                        ; sub_1408A9740+28↑j
                mov     rdx, [rsp+48h+arg_20]
                xor     r9d, r9d
                mov     rcx, rbx
                call    sub_14075C41C

loc_1408A97A2:                          ; CODE XREF: sub_1408A9740+50↑j
                mov     rbx, [rsp+48h+arg_0]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A9740   endp

algn_1408A97AE:                         ; DATA XREF: .pdata:000000014011D5A0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408A97C0   proc near               ; DATA XREF: .pdata:000000014011D5AC↑o
                                        ; PAGE:0000000140987138↓o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                push    rsi
                push    rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 20h
                and     qword ptr [rax+20h], 0
                lea     r9, [rax+20h]
                mov     r14, r8
                mov     rcx, rdx
                xor     r8d, r8d
                lea     rdx, aValue     ; "Value"
                call    sub_140739D08
                mov     rbx, [rsp+48h+arg_18]
                mov     edi, eax
                test    eax, eax
                js      short loc_1408A9860
                mov     rcx, rbx
                call    sub_14050E788
                test    al, al
                jnz     short loc_1408A9813
                mov     edi, 0C0000001h
                jmp     short loc_1408A9860
; ---------------------------------------------------------------------------

loc_1408A9813:                          ; CODE XREF: sub_1408A97C0+4A↑j
                mov     ebp, [rbx+0Ch]
                mov     r15d, [rbx+4]
                test    ebp, ebp
                jz      short loc_1408A9852
                mov     r8d, 63647050h
                mov     edx, ebp
                mov     ecx, 1
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408A983F
                mov     edi, 0C000009Ah
                jmp     short loc_1408A9860
; ---------------------------------------------------------------------------

loc_1408A983F:                          ; CODE XREF: sub_1408A97C0+76↑j
                mov     edx, [rbx+8]
                mov     r8, rbp
                add     rdx, rbx
                mov     rcx, rax
                call    memmove
                jmp     short loc_1408A9854
; ---------------------------------------------------------------------------

loc_1408A9852:                          ; CODE XREF: sub_1408A97C0+5C↑j
                xor     esi, esi

loc_1408A9854:                          ; CODE XREF: sub_1408A97C0+90↑j
                mov     [r14+20h], r15d
                mov     [r14+24h], ebp
                mov     [r14+28h], rsi

loc_1408A9860:                          ; CODE XREF: sub_1408A97C0+3E↑j
                                        ; sub_1408A97C0+51↑j ...
                test    rbx, rbx
                jz      short loc_1408A986F
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408A986F:                          ; CODE XREF: sub_1408A97C0+A3↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     eax, edi
                mov     rbp, [rsp+48h+arg_8]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rsi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408A97C0   endp

algn_1408A9889:                         ; DATA XREF: .pdata:000000014011D5AC↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408A9890   proc near               ; DATA XREF: .pdata:000000014011D5B8↑o
                                        ; PAGE:0000000140987148↓o

var_F0          = byte ptr -0F0h
var_E0          = qword ptr -0E0h
var_D8          = dword ptr -0D8h
var_D4          = dword ptr -0D4h
var_D0          = dword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = dword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = dword ptr -0A8h
var_A4          = dword ptr -0A4h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = xmmword ptr -88h
var_78          = xmmword ptr -78h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = xmmword ptr -58h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
arg_18          = qword ptr  28h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-27h]
                sub     rsp, 0E0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_40], rax
                mov     rax, rdx
                mov     [rbp+57h+var_A0], r8
                xor     edx, edx
                mov     [rbp+57h+var_60], rcx
                xor     r14d, r14d
                mov     [rbp+57h+var_68], rdx
                mov     [rbp+57h+var_48], rdx
                lea     r9, [rbp+57h+var_90]
                mov     r13, r8
                mov     [rbp+57h+var_90], r14
                xorps   xmm0, xmm0
                lea     rdx, aTokens    ; "Tokens"
                mov     ebx, r14d
                xor     r8d, r8d
                mov     rcx, rax
                mov     [rbp+57h+var_B8], ebx
                mov     r15d, r14d
                movups  [rbp+57h+var_58], xmm0
                call    sub_140739D08
                mov     r12, [rbp+57h+var_90]
                mov     edi, eax
                test    eax, eax
                js      loc_1408AAABA
                mov     rcx, r12
                call    sub_140392E5C
                test    al, al
                jz      loc_1408AAAB5
                mov     esi, [r12+8]
                add     rsi, r12
                mov     [rbp+57h+var_B0], rsi
                mov     rax, rsi
                cmp     [rsi], r14w
                jz      loc_1408AAAB5
                lea     r9d, [r14+1]

loc_1408A993A:                          ; CODE XREF: sub_1408A9890+C7↓j
                add     r15d, r9d
                or      rcx, 0FFFFFFFFFFFFFFFFh

loc_1408A9941:                          ; CODE XREF: sub_1408A9890+B9↓j
                inc     rcx
                cmp     [rax+rcx*2], r14w
                jnz     short loc_1408A9941
                lea     rax, [rax+rcx*2]
                add     rax, 2
                cmp     [rax], r14w
                jnz     short loc_1408A993A
                mov     [rbp+57h+var_A4], r15d
                test    r15d, r15d
                jz      loc_1408AAAB5
                mov     edx, r15d
                mov     r8d, 63647050h
                shl     rdx, 3
                mov     ecx, r9d
                call    ExAllocatePoolWithTag
                mov     [rbp+57h+var_98], rax
                mov     r14, rax
                test    rax, rax
                jnz     short loc_1408A9991
                mov     edi, 0C000009Ah
                jmp     loc_1408AAABA
; ---------------------------------------------------------------------------

loc_1408A9991:                          ; CODE XREF: sub_1408A9890+F5↑j
                movzx   eax, word ptr [rsi]
                test    ax, ax
                jz      loc_1408AAA33
                mov     r12, qword ptr [rbp+57h+var_58]
                xor     r13d, r13d

loc_1408A99A4:                          ; CODE XREF: sub_1408A9890+1111↓j
                mov     rdx, r13
                test    ax, ax
                jz      short loc_1408A9A2A
                cmp     [rsi+2], r13w
                jz      short loc_1408A99BA
                cmp     [rsi+4], r13w
                jnz     short loc_1408A99E1

loc_1408A99BA:                          ; CODE XREF: sub_1408A9890+121↑j
                mov     r8d, [rsi]
                lea     rdx, off_140989C10 ; "+"
                mov     r11d, 1
                mov     ecx, r11d

loc_1408A99CD:                          ; CODE XREF: sub_1408A9890+14F↓j
                mov     rax, [rdx]
                cmp     r8d, [rax]
                jz      short loc_1408A9A17
                add     ecx, r11d
                add     rdx, 18h
                cmp     ecx, 1Bh
                jb      short loc_1408A99CD

loc_1408A99E1:                          ; CODE XREF: sub_1408A9890+128↑j
                                        ; sub_1408A9890+1A3↓j
                cmp     ebx, r15d
                jnb     loc_1408AAA2A
                mov     rcx, [rbp+57h+var_60]
                lea     r8, [rbp+57h+var_B0]
                mov     rdx, rsi
                mov     [rbp+57h+var_B0], r13
                call    sub_14077A300
                mov     edi, eax
                test    eax, eax
                js      loc_1408AAA1E
                mov     rax, [rbp+57h+var_B0]
                mov     ecx, ebx
                mov     [r14+rcx*8], rax
                jmp     loc_1408AA97C
; ---------------------------------------------------------------------------

loc_1408A9A17:                          ; CODE XREF: sub_1408A9890+143↑j
                mov     eax, ecx
                lea     rcx, [rax+rax*2]
                lea     rax, qword_140989BF0
                lea     rdx, [rax+rcx*8]
                jmp     short loc_1408A9A30
; ---------------------------------------------------------------------------

loc_1408A9A2A:                          ; CODE XREF: sub_1408A9890+11A↑j
                mov     r11d, 1

loc_1408A9A30:                          ; CODE XREF: sub_1408A9890+198↑j
                test    rdx, rdx
                jz      short loc_1408A99E1
                mov     r8d, [rdx+10h]
                mov     r9d, r13d
                mov     [rbp+57h+var_D4], r13d
                test    r8d, r8d
                jz      short loc_1408A9A7C
                mov     [rbp+57h+var_D4], r13d

loc_1408A9A49:                          ; CODE XREF: sub_1408A9890+1D5↓j
                test    ebx, ebx
                jz      short loc_1408A9A75
                dec     ebx
                mov     [rbp+57h+var_B8], ebx
                mov     rax, [r14+rbx*8]
                mov     qword ptr [rbp+r9*8+57h+var_58], rax
                add     r9d, r11d
                mov     [rbp+57h+var_D4], r9d
                cmp     r9d, r8d
                jb      short loc_1408A9A49

loc_1408A9A67:                          ; CODE XREF: sub_1408A9890+1EA↓j
                mov     rcx, [rbp+57h+var_48]
                mov     r12, qword ptr [rbp+57h+var_58]
                mov     [rbp+57h+var_68], rcx
                jmp     short loc_1408A9A80
; ---------------------------------------------------------------------------

loc_1408A9A75:                          ; CODE XREF: sub_1408A9890+1BB↑j
                mov     edi, 0C0000001h
                jmp     short loc_1408A9A67
; ---------------------------------------------------------------------------

loc_1408A9A7C:                          ; CODE XREF: sub_1408A9890+1B3↑j
                mov     rcx, [rbp+57h+var_68]

loc_1408A9A80:                          ; CODE XREF: sub_1408A9890+1E3↑j
                test    edi, edi
                js      loc_1408AA9DC
                xor     r10d, r10d
                mov     [rbp+57h+var_A8], r13d
                mov     [rsp+110h+var_E0], r13
                mov     r14d, r13d
                mov     [rbp+57h+var_C0], r14
                movzx   esi, r13w
                mov     [rsp+110h+var_D8], esi
                movzx   ebx, r13w
                mov     [rbp+57h+var_D0], ebx
                mov     r15d, r10d
                mov     [rbp+57h+var_C8], r10
                cmp     r9d, r11d
                jnz     loc_1408A9D27
                mov     ecx, [rdx]
                lea     r9d, [r10+16h]
                mov     edx, ecx
                sub     edx, r9d
                jz      loc_1408A9D0F
                mov     r12, qword ptr [rbp+57h+var_58]
                cmp     edx, 1
                jz      loc_1408A9CFA
                mov     eax, [r12+20h]
                xor     r13d, r13d
                test    eax, eax
                jz      short loc_1408A9B11
                lea     edx, [r10+2]
                cmp     eax, edx
                jbe     loc_1408A9C7B
                cmp     eax, 4
                jz      loc_1408A9BB1
                cmp     eax, 7
                jnz     short loc_1408A9B11
                mov     rdx, [r12+28h]
                sub     ecx, 0Bh
                jz      loc_1408A9BA6
                sub     ecx, 1
                jz      short loc_1408A9B80

loc_1408A9B11:                          ; CODE XREF: sub_1408A9890+252↑j
                                        ; sub_1408A9890+26C↑j ...
                lea     r15, qword_140984E68

loc_1408A9B18:                          ; CODE XREF: sub_1408A9890+2FB↓j
                                        ; sub_1408A9890+31C↓j ...
                mov     r13, [rsp+110h+var_E0]

loc_1408A9B1D:                          ; CODE XREF: sub_1408A9890+3BA↓j
                                        ; sub_1408A9890+3CC↓j ...
                mov     r12, qword ptr [rbp+57h+var_58]

loc_1408A9B21:                          ; CODE XREF: sub_1408A9890+568↓j
                                        ; sub_1408A9890+646↓j ...
                mov     eax, 1

loc_1408A9B26:                          ; CODE XREF: sub_1408A9890+418↓j
                                        ; sub_1408A9890+443↓j ...
                test    edi, edi
                js      loc_1408AA9D9
                test    r15, r15
                jnz     loc_1408AA91C
                lea     edx, [r15+30h]
                mov     r8d, 63647050h
                mov     ecx, eax
                call    ExAllocatePoolWithTag
                mov     r15, rax
                xor     eax, eax
                test    r15, r15
                jz      loc_1408AA9D4
                mov     [r15+10h], eax
                mov     [r15+18h], rax
                test    r13, r13
                jz      loc_1408AA8E8
                lea     ebx, [rax+7]
                movzx   esi, si
                mov     eax, [rsp+110h+var_D8]
                cmp     word ptr [rbp+57h+var_D0], ax
                lea     eax, [rbx-6]
                cmovnz  ebx, eax
                jmp     loc_1408AA910
; ---------------------------------------------------------------------------

loc_1408A9B80:                          ; CODE XREF: sub_1408A9890+27F↑j
                cmp     [rdx], r13w

loc_1408A9B84:                          ; CODE XREF: sub_1408A9890+3DB↓j
                                        ; sub_1408A9890+452↓j
                mov     r14d, r13d
                setz    r14b
                jmp     short loc_1408A9B18
; ---------------------------------------------------------------------------

loc_1408A9B8D:                          ; CODE XREF: sub_1408A9890+31A↓j
                add     r14d, r11d
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A9B94:                          ; CODE XREF: sub_1408A9890+30C↓j
                inc     rax
                cmp     [rdx+rax*2], r13w
                jnz     short loc_1408A9B94
                lea     rdx, [rdx+rax*2]
                add     rdx, 2

loc_1408A9BA6:                          ; CODE XREF: sub_1408A9890+276↑j
                cmp     [rdx], r13w
                jnz     short loc_1408A9B8D
                jmp     loc_1408A9B18
; ---------------------------------------------------------------------------

loc_1408A9BB1:                          ; CODE XREF: sub_1408A9890+263↑j
                mov     rax, [r12+28h]
                mov     ebx, [rax]
                sub     ecx, 0Bh
                jz      loc_1408A9C70
                sub     ecx, 1
                jz      loc_1408A9C69
                sub     ecx, 0Dh
                jz      loc_1408A9C61
                cmp     ecx, 1
                jnz     loc_1408A9B11
                mov     r8d, 63647050h
                mov     [rbp+57h+var_D0], 14h
                mov     rdx, r9
                mov     [rsp+110h+var_D8], r9d
                mov     ecx, r11d
                mov     esi, r9d
                call    ExAllocatePoolWithTag
                xor     r12d, r12d
                mov     r13, rax
                test    rax, rax
                jz      loc_1408AA9AF
                mov     r9d, ebx
                lea     r8, aU_4        ; "%u"
                lea     edx, [r12+0Bh]
                mov     rcx, rax
                call    sub_140311280
                mov     edi, eax
                test    eax, eax
                js      short loc_1408A9C4F
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A9C2C:                          ; CODE XREF: sub_1408A9890+3A5↓j
                inc     rax
                cmp     [r13+rax*2+0], r12w
                jnz     short loc_1408A9C2C
                add     ax, ax
                mov     esi, 2
                add     si, ax
                mov     word ptr [rbp+57h+var_D0], ax
                mov     [rsp+110h+var_D8], esi
                jmp     loc_1408A9B1D
; ---------------------------------------------------------------------------

loc_1408A9C4F:                          ; CODE XREF: sub_1408A9890+396↑j
                xor     edx, edx
                mov     rcx, r13
                call    ExFreePoolWithTag
                mov     r13, r12
                jmp     loc_1408A9B1D
; ---------------------------------------------------------------------------

loc_1408A9C61:                          ; CODE XREF: sub_1408A9890+33D↑j
                mov     r14d, ebx
                jmp     loc_1408A9B18
; ---------------------------------------------------------------------------

loc_1408A9C69:                          ; CODE XREF: sub_1408A9890+334↑j
                test    ebx, ebx
                jmp     loc_1408A9B84
; ---------------------------------------------------------------------------

loc_1408A9C70:                          ; CODE XREF: sub_1408A9890+32B↑j
                mov     r14d, ebx
                not     r14d
                jmp     loc_1408A9B18
; ---------------------------------------------------------------------------

loc_1408A9C7B:                          ; CODE XREF: sub_1408A9890+25A↑j
                mov     r8, [r12+28h]
                sub     ecx, 0Bh
                jz      short loc_1408A9CE7
                sub     ecx, 1
                jz      short loc_1408A9CDE
                sub     ecx, 0Dh
                jz      short loc_1408A9CB2
                mov     r13, [rsp+110h+var_E0]
                mov     eax, 1
                cmp     ecx, eax
                jz      short loc_1408A9CAD
                lea     r15, qword_140984E68

loc_1408A9CA4:                          ; CODE XREF: sub_1408A9890+420↓j
                                        ; sub_1408A9890+98B↓j
                mov     r12, qword ptr [rbp+57h+var_58]
                jmp     loc_1408A9B26
; ---------------------------------------------------------------------------

loc_1408A9CAD:                          ; CODE XREF: sub_1408A9890+40B↑j
                                        ; sub_1408A9890+982↓j
                mov     r15, r12
                jmp     short loc_1408A9CA4
; ---------------------------------------------------------------------------

loc_1408A9CB2:                          ; CODE XREF: sub_1408A9890+3FD↑j
                lea     rdx, [rbp+57h+var_A8]
                mov     rcx, r8
                call    sub_14038167C
                mov     r12, qword ptr [rbp+57h+var_58]
                test    al, al
                mov     eax, 1
                jnz     short loc_1408A9CD8
                mov     r14d, r13d

loc_1408A9CCE:                          ; CODE XREF: sub_1408A9890+44C↓j
                mov     r13, [rsp+110h+var_E0]
                jmp     loc_1408A9B26
; ---------------------------------------------------------------------------

loc_1408A9CD8:                          ; CODE XREF: sub_1408A9890+439↑j
                mov     r14d, [rbp+57h+var_A8]
                jmp     short loc_1408A9CCE
; ---------------------------------------------------------------------------

loc_1408A9CDE:                          ; CODE XREF: sub_1408A9890+3F8↑j
                cmp     [r8], r13w
                jmp     loc_1408A9B84
; ---------------------------------------------------------------------------

loc_1408A9CE7:                          ; CODE XREF: sub_1408A9890+3F3↑j
                or      r14, 0FFFFFFFFFFFFFFFFh

loc_1408A9CEB:                          ; CODE XREF: sub_1408A9890+463↓j
                inc     r14
                cmp     [r8+r14*2], r13w
                jnz     short loc_1408A9CEB
                jmp     loc_1408A9B18
; ---------------------------------------------------------------------------

loc_1408A9CFA:                          ; CODE XREF: sub_1408A9890+242↑j
                mov     r8, qword ptr [rbp+57h+var_58]
                mov     eax, 1
                cmp     [r8+20h], r10d
                jnz     loc_1408A9B26
                jmp     short loc_1408A9D1F
; ---------------------------------------------------------------------------

loc_1408A9D0F:                          ; CODE XREF: sub_1408A9890+235↑j
                cmp     [r12+20h], r10d

loc_1408A9D14:                          ; CODE XREF: sub_1408A9890+C28↓j
                mov     eax, 1
                jz      loc_1408A9B26

loc_1408A9D1F:                          ; CODE XREF: sub_1408A9890+47D↑j
                mov     r14d, r11d
                jmp     loc_1408A9B26
; ---------------------------------------------------------------------------

loc_1408A9D27:                          ; CODE XREF: sub_1408A9890+224↑j
                mov     r8d, 2
                cmp     r9d, r8d
                jnz     loc_1408AA857
                mov     r9, qword ptr [rbp+57h+var_58+8]
                mov     eax, [r9+20h]
                test    eax, eax
                jz      loc_1408AA84B
                cmp     eax, r8d
                jbe     loc_1408AA544
                cmp     eax, 3
                jz      loc_1408AA4BD
                cmp     eax, 4
                jz      loc_1408AA341
                cmp     eax, 7
                jnz     loc_1408AA84B
                mov     r12, qword ptr [rbp+57h+var_58]
                mov     ecx, [r12+20h]
                cmp     ecx, eax
                jnz     loc_1408AA0BB
                mov     r8, qword ptr [rbp+57h+var_58]
                mov     r10d, 0FFFEh
                mov     r15d, [r9+24h]
                mov     r14, [r9+28h]
                mov     r12, [r12+28h]
                mov     esi, [r8+24h]
                cmp     r15d, r10d
                ja      loc_1408AA9C6
                cmp     esi, r10d
                ja      loc_1408AA9C6
                mov     ecx, [rdx]
                cmp     ecx, 0Fh
                jg      loc_1408A9FB5
                jz      loc_1408A9F85
                sub     ecx, 1
                jz      loc_1408A9EE4
                sub     ecx, eax
                jz      short loc_1408A9E17
                sub     ecx, 1
                jz      loc_1408A9EE4
                sub     ecx, 4
                jz      short loc_1408A9DFD
                cmp     ecx, 1
                jnz     loc_1408A9FD6
                lea     r10d, [rax-5]
                cmp     r15d, r10d
                jbe     short loc_1408A9E0C

loc_1408A9DE6:                          ; CODE XREF: sub_1408A9890+585↓j
                                        ; sub_1408A9890+EF8↓j ...
                mov     eax, r11d

loc_1408A9DE9:                          ; CODE XREF: sub_1408A9890+777↓j
                                        ; sub_1408A9890+F0A↓j
                mov     r14d, eax

loc_1408A9DEC:                          ; CODE XREF: sub_1408A9890+FB6↓j
                mov     r15, [rbp+57h+var_C8]

loc_1408A9DF0:                          ; CODE XREF: sub_1408A9890+720↓j
                                        ; sub_1408A9890+751↓j ...
                mov     r12, qword ptr [rbp+57h+var_58]

loc_1408A9DF4:                          ; CODE XREF: sub_1408A9890+1053↓j
                mov     esi, [rsp+110h+var_D8]
                jmp     loc_1408A9B21
; ---------------------------------------------------------------------------

loc_1408A9DFD:                          ; CODE XREF: sub_1408A9890+542↑j
                mov     r10d, 2
                cmp     r15d, r10d
                jbe     loc_1408AA798

loc_1408A9E0C:                          ; CODE XREF: sub_1408A9890+554↑j
                cmp     esi, r10d
                jbe     loc_1408AA798
                jmp     short loc_1408A9DE6
; ---------------------------------------------------------------------------

loc_1408A9E17:                          ; CODE XREF: sub_1408A9890+534↑j
                xor     esi, esi
                cmp     [r14], si
                jz      loc_1408AA8D1

loc_1408A9E23:                          ; CODE XREF: sub_1408A9890+60C↓j
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408A9E27:                          ; CODE XREF: sub_1408A9890+59F↓j
                inc     rax
                cmp     [r14+rax*2], si
                jnz     short loc_1408A9E27
                mov     rdx, r14
                lea     esi, ds:2[rax*2]
                mov     rcx, r12
                call    sub_140392DE0
                test    rax, rax
                jz      short loc_1408A9E8D
                xor     eax, eax
                test    r13, r13
                jnz     short loc_1408A9E73
                movzx   ebx, ax
                lea     ecx, [rax+1]
                mov     rdx, r15
                mov     [rbp+57h+var_D0], ebx
                mov     r8d, 63647050h
                call    ExAllocatePoolWithTag
                mov     [rsp+110h+var_E0], rax
                mov     r13, rax
                test    rax, rax
                jz      short loc_1408A9EDB

loc_1408A9E73:                          ; CODE XREF: sub_1408A9890+5BD↑j
                movzx   ecx, word ptr [rbp+57h+var_D0]
                mov     rdx, r14
                add     rcx, r13
                mov     r8d, esi
                mov     ebx, esi
                call    memmove
                add     word ptr [rbp+57h+var_D0], si
                jmp     short loc_1408A9E8F
; ---------------------------------------------------------------------------

loc_1408A9E8D:                          ; CODE XREF: sub_1408A9890+5B6↑j
                mov     ebx, esi

loc_1408A9E8F:                          ; CODE XREF: sub_1408A9890+5FB↑j
                shr     rbx, 1
                xor     esi, esi
                lea     r14, [r14+rbx*2]
                cmp     [r14], si
                jnz     short loc_1408A9E23
                mov     ebx, [rbp+57h+var_D0]

loc_1408A9EA1:                          ; CODE XREF: sub_1408A9890+652↓j
                mov     r14, [rbp+57h+var_C0]
                mov     r12, qword ptr [rbp+57h+var_58]
                test    r13, r13
                jz      loc_1408AA8DA
                add     bx, 2
                movzx   eax, bx
                movzx   esi, bx
                shr     rax, 1
                xor     ecx, ecx
                mov     [rbp+57h+var_D0], ebx
                mov     [rsp+110h+var_D8], esi
                mov     r15d, ecx
                mov     [r13+rax*2-2], cx
                mov     r13, [rsp+110h+var_E0]
                jmp     loc_1408A9B21
; ---------------------------------------------------------------------------

loc_1408A9EDB:                          ; CODE XREF: sub_1408A9890+5E1↑j
                mov     edi, 0C000009Ah
                xor     esi, esi
                jmp     short loc_1408A9EA1
; ---------------------------------------------------------------------------

loc_1408A9EE4:                          ; CODE XREF: sub_1408A9890+52C↑j
                                        ; sub_1408A9890+539↑j
                xor     r13d, r13d
                cmp     [r14], r13w
                jnz     short loc_1408A9EF5
                mov     r15, r8
                jmp     loc_1408A9F75
; ---------------------------------------------------------------------------

loc_1408A9EF5:                          ; CODE XREF: sub_1408A9890+65B↑j
                cmp     [r12], r13w
                jnz     short loc_1408A9F01
                mov     r15, r9
                jmp     short loc_1408A9F75
; ---------------------------------------------------------------------------

loc_1408A9F01:                          ; CODE XREF: sub_1408A9890+66A↑j
                lea     ecx, [rsi+r15]
                mov     edx, 2
                sub     rcx, rdx
                cmp     rcx, r10
                ja      loc_1408AA9BC
                lea     eax, [rsi+r15]
                mov     r8d, 63647050h
                sub     ax, dx
                mov     ecx, r11d
                movzx   edx, ax
                mov     word ptr [rbp+57h+var_D0], dx
                call    ExAllocatePoolWithTag
                mov     [rsp+110h+var_E0], rax
                mov     r13, rax
                test    rax, rax
                jz      loc_1408AA9AF
                lea     r8, [r15-2]
                mov     rdx, r14
                mov     rcx, rax
                mov     rbx, r15
                call    memmove
                shr     rbx, 1
                mov     r8, rsi
                mov     rdx, r12
                lea     rcx, ds:0FFFFFFFFFFFFFFFEh[rbx*2]
                add     rcx, r13
                call    memmove
                mov     r15, [rbp+57h+var_C8]
                mov     ebx, [rbp+57h+var_D0]

loc_1408A9F75:                          ; CODE XREF: sub_1408A9890+660↑j
                                        ; sub_1408A9890+66F↑j
                movzx   esi, bx

loc_1408A9F78:                          ; CODE XREF: sub_1408A9890+DBB↓j
                mov     r14, [rbp+57h+var_C0]
                mov     [rsp+110h+var_D8], esi
                jmp     loc_1408A9B18
; ---------------------------------------------------------------------------

loc_1408A9F85:                          ; CODE XREF: sub_1408A9890+523↑j
                mov     r9, rsi
                mov     [rsp+110h+var_F0], r11b
                mov     rdx, r15
                shr     r9, 1
                shr     rdx, 1
                mov     r8, r12
                mov     rcx, r14
                call    RtlCompareUnicodeStrings

loc_1408A9FA1:                          ; CODE XREF: sub_1408A9890+EEF↓j
                xor     esi, esi
                test    eax, eax
                mov     ecx, esi
                setz    cl

loc_1408A9FAA:                          ; CODE XREF: sub_1408A9890+7A1↓j
                                        ; sub_1408A9890+7CB↓j ...
                mov     r14d, ecx

loc_1408A9FAD:                          ; CODE XREF: sub_1408A9890+1045↓j
                mov     r15, rsi
                jmp     loc_1408A9DF0
; ---------------------------------------------------------------------------

loc_1408A9FB5:                          ; CODE XREF: sub_1408A9890+51D↑j
                sub     ecx, 10h
                jz      loc_1408AA07E
                sub     ecx, 1
                jz      loc_1408AA060
                sub     ecx, 1
                jz      short loc_1408AA036
                sub     ecx, 1
                jz      short loc_1408AA00C
                cmp     ecx, 1
                jz      short loc_1408A9FE6

loc_1408A9FD6:                          ; CODE XREF: sub_1408A9890+547↑j
                                        ; sub_1408A9890+E67↓j
                mov     r14, [rbp+57h+var_C0]
                lea     r15, qword_140984E68
                jmp     loc_1408A9DF0
; ---------------------------------------------------------------------------

loc_1408A9FE6:                          ; CODE XREF: sub_1408A9890+744↑j
                mov     r9, rsi
                mov     [rsp+110h+var_F0], r11b
                mov     rdx, r15
                shr     r9, 1
                shr     rdx, 1
                mov     r8, r12
                mov     rcx, r14
                call    RtlCompareUnicodeStrings

loc_1408AA002:                          ; CODE XREF: sub_1408A9890+E7D↓j
                not     eax

loc_1408AA004:                          ; CODE XREF: sub_1408A9890+7EC↓j
                                        ; sub_1408A9890+EBC↓j
                shr     eax, 1Fh
                jmp     loc_1408A9DE9
; ---------------------------------------------------------------------------

loc_1408AA00C:                          ; CODE XREF: sub_1408A9890+73F↑j
                mov     r9, rsi
                mov     [rsp+110h+var_F0], r11b
                mov     rdx, r15
                shr     r9, 1
                shr     rdx, 1
                mov     r8, r12
                mov     rcx, r14
                call    RtlCompareUnicodeStrings

loc_1408AA028:                          ; CODE XREF: sub_1408A9890+E92↓j
                xor     esi, esi
                test    eax, eax
                mov     ecx, esi
                setle   cl
                jmp     loc_1408A9FAA
; ---------------------------------------------------------------------------

loc_1408AA036:                          ; CODE XREF: sub_1408A9890+73A↑j
                mov     r9, rsi
                mov     [rsp+110h+var_F0], r11b
                mov     rdx, r15
                shr     r9, 1
                shr     rdx, 1
                mov     r8, r12
                mov     rcx, r14
                call    RtlCompareUnicodeStrings

loc_1408AA052:                          ; CODE XREF: sub_1408A9890+EA7↓j
                xor     esi, esi
                test    eax, eax
                mov     ecx, esi
                setnle  cl
                jmp     loc_1408A9FAA
; ---------------------------------------------------------------------------

loc_1408AA060:                          ; CODE XREF: sub_1408A9890+731↑j
                mov     r9, rsi
                mov     [rsp+110h+var_F0], r11b
                mov     rdx, r15
                shr     r9, 1
                shr     rdx, 1
                mov     r8, r12
                mov     rcx, r14
                call    RtlCompareUnicodeStrings
                jmp     short loc_1408AA004
; ---------------------------------------------------------------------------

loc_1408AA07E:                          ; CODE XREF: sub_1408A9890+728↑j
                mov     r9, rsi
                mov     [rsp+110h+var_F0], r11b
                mov     rdx, r15
                shr     r9, 1
                shr     rdx, 1
                mov     r8, r12
                mov     rcx, r14
                call    RtlCompareUnicodeStrings
                mov     r12, qword ptr [rbp+57h+var_58]
                xor     ecx, ecx
                mov     esi, [rsp+110h+var_D8]
                test    eax, eax
                mov     r15d, ecx
                lea     eax, [rcx+1]
                jnz     loc_1408AA53C
                mov     r14, [rbp+57h+var_C0]
                jmp     loc_1408A9B26
; ---------------------------------------------------------------------------

loc_1408AA0BB:                          ; CODE XREF: sub_1408A9890+4E5↑j
                lea     eax, [rcx-1]
                cmp     eax, r11d
                jbe     loc_1408AA17E
                cmp     ecx, 4
                jnz     short loc_1408AA0D9
                cmp     dword ptr [rdx], 18h
                mov     rax, [r12+28h]
                mov     r8d, [rax]
                jz      short loc_1408AA0E5

loc_1408AA0D9:                          ; CODE XREF: sub_1408A9890+83A↑j
                                        ; sub_1408A9890+ABB↓j ...
                lea     r15, qword_140984E68
                jmp     loc_1408A9B1D
; ---------------------------------------------------------------------------

loc_1408AA0E5:                          ; CODE XREF: sub_1408A9890+847↑j
                mov     rbx, [r9+28h]
                xor     r12d, r12d
                mov     esi, r12d
                mov     ecx, r12d
                jmp     short loc_1408AA11A
; ---------------------------------------------------------------------------

loc_1408AA0F4:                          ; CODE XREF: sub_1408A9890+88E↓j
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408AA0F8:                          ; CODE XREF: sub_1408A9890+870↓j
                inc     rax
                cmp     [rbx+rax*2], r12w
                jnz     short loc_1408AA0F8
                lea     esi, ds:2[rax*2]
                cmp     ecx, r8d
                jz      short loc_1408AA125
                mov     eax, esi
                shr     rax, 1
                add     ecx, r11d
                lea     rbx, [rbx+rax*2]

loc_1408AA11A:                          ; CODE XREF: sub_1408A9890+862↑j
                cmp     [rbx], r12w
                jnz     short loc_1408AA0F4
                cmp     ecx, r8d
                jnz     short loc_1408AA172

loc_1408AA125:                          ; CODE XREF: sub_1408A9890+87C↑j
                cmp     [rbx], r12w
                jz      short loc_1408AA172
                mov     eax, 2
                cmp     esi, eax
                jbe     short loc_1408AA172
                movzx   edx, si
                mov     r8d, 63647050h
                mov     ecx, r11d
                lea     eax, [rdx-10h]
                mov     word ptr [rbp+57h+var_D0], ax
                movzx   eax, dx
                mov     [rsp+110h+var_D8], eax
                call    ExAllocatePoolWithTag
                mov     r13, rax
                test    rax, rax
                jz      loc_1408AA9AF
                mov     r8d, esi
                mov     rdx, rbx
                mov     rcx, rax
                call    memmove
                jmp     loc_1408A9DF0
; ---------------------------------------------------------------------------

loc_1408AA172:                          ; CODE XREF: sub_1408A9890+893↑j
                                        ; sub_1408A9890+899↑j ...
                lea     r15, qword_140984E68
                jmp     loc_1408A9DF0
; ---------------------------------------------------------------------------

loc_1408AA17E:                          ; CODE XREF: sub_1408A9890+831↑j
                mov     esi, [r9+24h]
                mov     r15, [r9+28h]
                mov     r13, [r12+28h]
                mov     r14d, [r12+24h]
                cmp     esi, 0FFFEh
                ja      loc_1408AA9C6
                cmp     r14d, 0FFFEh
                ja      loc_1408AA9C6
                mov     ecx, [rdx]
                sub     ecx, 1
                jz      loc_1408AA2B7
                sub     ecx, 1
                jz      short loc_1408AA220
                sub     ecx, 6
                jz      short loc_1408AA1F2
                cmp     ecx, 1
                jz      short loc_1408AA1D8
                lea     r15, qword_140984E68

loc_1408AA1CA:                          ; CODE XREF: sub_1408A9890+960↓j
                                        ; sub_1408A9890+F2C↓j ...
                mov     r14, [rbp+57h+var_C0]
                mov     r13, [rsp+110h+var_E0]
                jmp     loc_1408A9DF0
; ---------------------------------------------------------------------------

loc_1408AA1D8:                          ; CODE XREF: sub_1408A9890+931↑j
                mov     rdx, r13
                mov     rcx, r15
                call    sub_140392DE0
                test    rax, rax
                jz      loc_1408AA2B1
                mov     r15, qword ptr [rbp+57h+var_58+8]
                jmp     short loc_1408AA1CA
; ---------------------------------------------------------------------------

loc_1408AA1F2:                          ; CODE XREF: sub_1408A9890+92C↑j
                mov     rdx, r13
                mov     rcx, r15
                call    sub_140392DE0
                mov     r14, [rbp+57h+var_C0]
                xor     ecx, ecx
                mov     r13, [rsp+110h+var_E0]
                test    rax, rax
                mov     esi, [rsp+110h+var_D8]
                lea     eax, [rcx+1]
                jnz     loc_1408A9CAD
                mov     r15d, ecx
                jmp     loc_1408A9CA4
; ---------------------------------------------------------------------------

loc_1408AA220:                          ; CODE XREF: sub_1408A9890+927↑j
                mov     rdx, r13
                mov     rcx, r15
                call    sub_140392DE0
                mov     r12, rax
                test    rax, rax
                jz      short loc_1408AA298
                movzx   ecx, si
                mov     r8d, 63647050h
                sub     cx, r14w
                movzx   edx, cx
                mov     ecx, 1
                mov     word ptr [rbp+57h+var_D0], dx
                call    ExAllocatePoolWithTag
                mov     r13, rax
                test    rax, rax
                jz      loc_1408AA9AF
                mov     rbx, r12
                sub     rbx, r15
                sar     rbx, 1
                test    rbx, rbx
                jle     short loc_1408AA279
                mov     r8, rbx
                mov     rdx, r15
                mov     rcx, rax
                call    memmove

loc_1408AA279:                          ; CODE XREF: sub_1408A9890+9D9↑j
                sub     esi, r14d
                lea     rdx, [r12+r14]
                mov     r8d, esi
                lea     rcx, [rbx+r13]
                sub     r8, rbx
                call    memmove
                mov     r15, [rbp+57h+var_C8]
                mov     ebx, [rbp+57h+var_D0]
                jmp     short loc_1408AA2A1
; ---------------------------------------------------------------------------

loc_1408AA298:                          ; CODE XREF: sub_1408A9890+9A1↑j
                mov     r15, qword ptr [rbp+57h+var_58+8]
                mov     r13, [rsp+110h+var_E0]

loc_1408AA2A1:                          ; CODE XREF: sub_1408A9890+A06↑j
                mov     r14, [rbp+57h+var_C0]
                movzx   esi, bx
                mov     [rsp+110h+var_D8], esi
                jmp     loc_1408A9B1D
; ---------------------------------------------------------------------------

loc_1408AA2B1:                          ; CODE XREF: sub_1408A9890+956↑j
                mov     r11d, 1

loc_1408AA2B7:                          ; CODE XREF: sub_1408A9890+91E↑j
                lea     eax, [r14+rsi]
                cmp     eax, 0FFFEh
                ja      loc_1408AA9C6
                lea     eax, [r14+rsi]
                mov     r8d, 63647050h
                movzx   r12d, ax
                mov     ecx, r11d
                movzx   eax, r12w
                mov     edx, r12d
                mov     [rbp+57h+var_D0], eax
                mov     [rsp+110h+var_D8], eax
                call    ExAllocatePoolWithTag
                mov     [rsp+110h+var_E0], rax
                test    rax, rax
                jz      loc_1408AA9AF
                lea     r8, [rsi-2]
                mov     rdx, r15
                mov     rcx, rax
                mov     rbx, rsi
                call    memmove
                mov     rcx, [rsp+110h+var_E0]
                mov     r8, r14
                add     rcx, 0FFFFFFFFFFFFFFFEh
                shr     rbx, 1
                mov     rdx, r13
                lea     rcx, [rcx+rbx*2]
                call    memmove
                mov     r13, [rsp+110h+var_E0]
                mov     r14, [rbp+57h+var_C0]
                shr     r12, 1
                xor     ecx, ecx
                mov     r15d, ecx
                mov     [r13+r12*2-2], cx
                jmp     loc_1408A9DF0
; ---------------------------------------------------------------------------

loc_1408AA341:                          ; CODE XREF: sub_1408A9890+4CB↑j
                mov     r12, qword ptr [rbp+57h+var_58]
                cmp     dword ptr [r12+20h], 4
                jnz     loc_1408AA0D9
                mov     rax, [r9+28h]
                mov     ecx, [rdx]
                mov     r9d, [rax]
                mov     rax, [r12+28h]
                mov     r8d, [rax]
                cmp     ecx, 0Ah
                jg      loc_1408AA429
                jz      loc_1408AA424
                sub     ecx, 1
                jz      loc_1408AA41B
                sub     ecx, 1
                jz      loc_1408AA416
                sub     ecx, 1
                jz      loc_1408AA410
                sub     ecx, 1
                jz      short loc_1408AA3F7
                sub     ecx, 1
                jz      short loc_1408AA3D4
                sub     ecx, 1
                jz      short loc_1408AA3CC
                sub     ecx, 1
                jz      short loc_1408AA3BE
                sub     ecx, 1
                jz      short loc_1408AA3B9
                cmp     ecx, 1
                jnz     loc_1408AA0D9
                or      r8d, r9d

loc_1408AA3B1:                          ; CODE XREF: sub_1408A9890+B2C↓j
                                        ; sub_1408A9890+B84↓j ...
                mov     r14d, r8d
                jmp     loc_1408A9B1D
; ---------------------------------------------------------------------------

loc_1408AA3B9:                          ; CODE XREF: sub_1408A9890+B13↑j
                and     r8d, r9d
                jmp     short loc_1408AA3B1
; ---------------------------------------------------------------------------

loc_1408AA3BE:                          ; CODE XREF: sub_1408A9890+B0E↑j
                mov     ecx, r8d
                shr     r9d, cl

loc_1408AA3C4:                          ; CODE XREF: sub_1408A9890+B42↓j
                                        ; sub_1408A9890+B89↓j
                mov     r14d, r9d
                jmp     loc_1408A9B1D
; ---------------------------------------------------------------------------

loc_1408AA3CC:                          ; CODE XREF: sub_1408A9890+B09↑j
                mov     ecx, r8d
                shl     r9d, cl
                jmp     short loc_1408AA3C4
; ---------------------------------------------------------------------------

loc_1408AA3D4:                          ; CODE XREF: sub_1408A9890+B04↑j
                mov     r12, qword ptr [rbp+57h+var_58]
                test    r8d, r8d
                jz      short loc_1408AA3ED
                xor     edx, edx
                mov     eax, r9d
                div     r8d
                mov     r14d, edx
                jmp     loc_1408A9B21
; ---------------------------------------------------------------------------

loc_1408AA3ED:                          ; CODE XREF: sub_1408A9890+B4B↑j
                                        ; sub_1408A9890+B6E↓j
                mov     edi, 0C0000094h
                jmp     loc_1408A9B21
; ---------------------------------------------------------------------------

loc_1408AA3F7:                          ; CODE XREF: sub_1408A9890+AFF↑j
                mov     r12, qword ptr [rbp+57h+var_58]
                test    r8d, r8d
                jz      short loc_1408AA3ED
                xor     edx, edx
                mov     eax, r9d
                div     r8d
                mov     r14d, eax
                jmp     loc_1408A9B21
; ---------------------------------------------------------------------------

loc_1408AA410:                          ; CODE XREF: sub_1408A9890+AF6↑j
                imul    r8d, r9d
                jmp     short loc_1408AA3B1
; ---------------------------------------------------------------------------

loc_1408AA416:                          ; CODE XREF: sub_1408A9890+AED↑j
                sub     r9d, r8d
                jmp     short loc_1408AA3C4
; ---------------------------------------------------------------------------

loc_1408AA41B:                          ; CODE XREF: sub_1408A9890+AE4↑j
                lea     r14d, [r8+r9]
                jmp     loc_1408A9B1D
; ---------------------------------------------------------------------------

loc_1408AA424:                          ; CODE XREF: sub_1408A9890+ADB↑j
                xor     r8d, r9d
                jmp     short loc_1408AA3B1
; ---------------------------------------------------------------------------

loc_1408AA429:                          ; CODE XREF: sub_1408A9890+AD5↑j
                sub     ecx, 0Dh
                jz      short loc_1408AA4A8
                sub     ecx, 1
                jz      short loc_1408AA497
                sub     ecx, 1
                jz      short loc_1408AA48D
                sub     ecx, 1
                jz      short loc_1408AA483
                sub     ecx, 1
                jz      short loc_1408AA479
                sub     ecx, 1
                jz      short loc_1408AA46F
                sub     ecx, 1
                jz      short loc_1408AA465
                cmp     ecx, 1
                jnz     loc_1408AA0D9
                xor     eax, eax
                cmp     r9d, r8d
                setnb   al

loc_1408AA45D:                          ; CODE XREF: sub_1408A9890+BDD↓j
                                        ; sub_1408A9890+BE7↓j ...
                mov     r14d, eax
                jmp     loc_1408A9B1D
; ---------------------------------------------------------------------------

loc_1408AA465:                          ; CODE XREF: sub_1408A9890+BBA↑j
                xor     eax, eax
                cmp     r9d, r8d
                setbe   al
                jmp     short loc_1408AA45D
; ---------------------------------------------------------------------------

loc_1408AA46F:                          ; CODE XREF: sub_1408A9890+BB5↑j
                xor     eax, eax
                cmp     r9d, r8d
                setnbe  al
                jmp     short loc_1408AA45D
; ---------------------------------------------------------------------------

loc_1408AA479:                          ; CODE XREF: sub_1408A9890+BB0↑j
                xor     eax, eax
                cmp     r9d, r8d
                setb    al
                jmp     short loc_1408AA45D
; ---------------------------------------------------------------------------

loc_1408AA483:                          ; CODE XREF: sub_1408A9890+BAB↑j
                xor     eax, eax
                cmp     r9d, r8d
                setnz   al
                jmp     short loc_1408AA45D
; ---------------------------------------------------------------------------

loc_1408AA48D:                          ; CODE XREF: sub_1408A9890+BA6↑j
                xor     eax, eax
                cmp     r9d, r8d
                setz    al
                jmp     short loc_1408AA45D
; ---------------------------------------------------------------------------

loc_1408AA497:                          ; CODE XREF: sub_1408A9890+BA1↑j
                xor     eax, eax
                test    r9d, r9d
                jnz     short loc_1408AA4A3
                test    r8d, r8d
                jz      short loc_1408AA45D

loc_1408AA4A3:                          ; CODE XREF: sub_1408A9890+C0C↑j
                mov     eax, r11d
                jmp     short loc_1408AA45D
; ---------------------------------------------------------------------------

loc_1408AA4A8:                          ; CODE XREF: sub_1408A9890+B9C↑j
                test    r9d, r9d
                jz      loc_1408A9B1D
                mov     r12, qword ptr [rbp+57h+var_58]
                test    r8d, r8d
                jmp     loc_1408A9D14
; ---------------------------------------------------------------------------

loc_1408AA4BD:                          ; CODE XREF: sub_1408A9890+4C2↑j
                mov     r12, qword ptr [rbp+57h+var_58]
                cmp     dword ptr [r12+20h], 3
                jnz     loc_1408AA0D9
                mov     ecx, [rdx]
                mov     r10, [r9+28h]
                mov     r8d, [r9+24h]
                mov     r11, [r12+28h]
                mov     r9d, [r12+24h]
                sub     ecx, 0Fh
                jz      short loc_1408AA517
                cmp     ecx, 1
                jnz     loc_1408AA0D9
                cmp     r8d, r9d
                jnz     short loc_1408AA50D
                mov     rdx, r11
                mov     rcx, r10
                call    memcmp
                xor     r14d, r14d
                test    eax, eax
                mov     eax, r14d
                jz      loc_1408AA45D

loc_1408AA50D:                          ; CODE XREF: sub_1408A9890+C62↑j
                mov     eax, 1
                jmp     loc_1408AA45D
; ---------------------------------------------------------------------------

loc_1408AA517:                          ; CODE XREF: sub_1408A9890+C54↑j
                cmp     r8d, r9d
                jnz     loc_1408A9B1D
                mov     rdx, r11
                mov     rcx, r10
                call    memcmp
                mov     r12, qword ptr [rbp+57h+var_58]
                test    eax, eax
                mov     eax, 1
                jnz     loc_1408A9B26

loc_1408AA53C:                          ; CODE XREF: sub_1408A9890+81C↑j
                mov     r14d, eax
                jmp     loc_1408A9B26
; ---------------------------------------------------------------------------

loc_1408AA544:                          ; CODE XREF: sub_1408A9890+4B9↑j
                mov     r12, qword ptr [rbp+57h+var_58]
                mov     ecx, [r12+20h]
                lea     eax, [rcx-1]
                cmp     eax, r11d
                jbe     loc_1408AA650
                cmp     ecx, 7
                jnz     loc_1408AA0D9
                mov     ebx, [r9+24h]
                mov     r14, [r9+28h]
                mov     r15, [r12+28h]
                mov     esi, [r12+24h]
                cmp     ebx, 0FFFEh
                ja      loc_1408AA9C6
                cmp     esi, 0FFFEh
                ja      loc_1408AA9C6
                mov     ecx, [rdx]
                sub     ecx, 1
                jz      short loc_1408AA5DC
                sub     ecx, 7
                jz      short loc_1408AA5C4
                cmp     ecx, 1
                jz      short loc_1408AA5A9
                lea     r15, qword_140984E68
                jmp     loc_1408AA647
; ---------------------------------------------------------------------------

loc_1408AA5A9:                          ; CODE XREF: sub_1408A9890+D0B↑j
                mov     rdx, r14
                mov     rcx, r15
                call    sub_140392DE0
                xor     r13d, r13d
                test    rax, rax
                jz      short loc_1408AA5E1
                mov     r15, r12
                jmp     loc_1408AA647
; ---------------------------------------------------------------------------

loc_1408AA5C4:                          ; CODE XREF: sub_1408A9890+D06↑j
                mov     rdx, r14
                mov     rcx, r15
                call    sub_140392DE0
                xor     ecx, ecx
                test    rax, rax
                jz      short loc_1408AA644
                mov     r15, qword ptr [rbp+57h+var_58+8]
                jmp     short loc_1408AA647
; ---------------------------------------------------------------------------

loc_1408AA5DC:                          ; CODE XREF: sub_1408A9890+D01↑j
                xor     r13d, r13d
                jmp     short loc_1408AA5E7
; ---------------------------------------------------------------------------

loc_1408AA5E1:                          ; CODE XREF: sub_1408A9890+D2A↑j
                mov     r11d, 1

loc_1408AA5E7:                          ; CODE XREF: sub_1408A9890+D4F↑j
                lea     eax, [rsi+rbx]
                cmp     eax, 0FFFEh
                ja      loc_1408AA9BC
                lea     eax, [rsi+rbx]
                mov     r8d, 63647050h
                movzx   edx, ax
                mov     ecx, r11d
                mov     word ptr [rbp+57h+var_D0], dx
                call    ExAllocatePoolWithTag
                mov     [rsp+110h+var_E0], rax
                mov     r12, rax
                test    rax, rax
                jz      loc_1408AA9CD
                mov     r8, rbx
                mov     rdx, r14
                mov     rcx, rax
                call    memmove
                shr     rbx, 1
                mov     r8, rsi
                mov     rdx, r15
                lea     rcx, [r12+rbx*2]
                call    memmove
                mov     r15, [rbp+57h+var_C8]
                jmp     short loc_1408AA647
; ---------------------------------------------------------------------------

loc_1408AA644:                          ; CODE XREF: sub_1408A9890+D44↑j
                mov     r15, rcx

loc_1408AA647:                          ; CODE XREF: sub_1408A9890+D14↑j
                                        ; sub_1408A9890+D2F↑j ...
                movzx   esi, word ptr [rbp+57h+var_D0]
                jmp     loc_1408A9F78
; ---------------------------------------------------------------------------

loc_1408AA650:                          ; CODE XREF: sub_1408A9890+CC3↑j
                cmp     dword ptr [r9+24h], 0FFFEh
                xorps   xmm0, xmm0
                xorps   xmm1, xmm1
                movups  [rbp+57h+var_78], xmm0
                movups  [rbp+57h+var_88], xmm1
                ja      loc_1408AA9C6
                cmp     dword ptr [r12+24h], 0FFFEh
                ja      loc_1408AA9C6
                movzx   r8d, word ptr [r9+24h]
                mov     r10d, 2
                movzx   esi, word ptr [r12+24h]
                movzx   ebx, r8w
                mov     ecx, [rdx]
                sub     bx, r10w
                mov     r15, [r9+28h]
                mov     r14, [r12+28h]
                mov     word ptr [rbp+57h+var_88+2], si
                sub     si, r10w
                mov     qword ptr [rbp+57h+var_78+8], r15
                mov     word ptr [rbp+57h+var_78+2], r8w
                mov     word ptr [rbp+57h+var_78], bx
                mov     qword ptr [rbp+57h+var_88+8], r14
                mov     word ptr [rbp+57h+var_88], si
                sub     ecx, 1
                jz      loc_1408AA7B0
                sub     ecx, 0Ch
                jz      loc_1408AA79F
                sub     ecx, 1
                jz      loc_1408AA784
                sub     ecx, 1
                jz      loc_1408AA76F
                sub     ecx, 1
                jz      short loc_1408AA751
                sub     ecx, 1
                jz      short loc_1408AA73C
                sub     ecx, 1
                jz      short loc_1408AA727
                sub     ecx, 1
                jz      short loc_1408AA712
                cmp     ecx, 1
                jnz     loc_1408A9FD6
                mov     r8b, r11b
                lea     rdx, [rbp+57h+var_88]
                lea     rcx, [rbp+57h+var_78]
                call    RtlCompareUnicodeString
                jmp     loc_1408AA002
; ---------------------------------------------------------------------------

loc_1408AA712:                          ; CODE XREF: sub_1408A9890+E62↑j
                mov     r8b, r11b
                lea     rdx, [rbp+57h+var_88]
                lea     rcx, [rbp+57h+var_78]
                call    RtlCompareUnicodeString
                jmp     loc_1408AA028
; ---------------------------------------------------------------------------

loc_1408AA727:                          ; CODE XREF: sub_1408A9890+E5D↑j
                mov     r8b, r11b
                lea     rdx, [rbp+57h+var_88]
                lea     rcx, [rbp+57h+var_78]
                call    RtlCompareUnicodeString
                jmp     loc_1408AA052
; ---------------------------------------------------------------------------

loc_1408AA73C:                          ; CODE XREF: sub_1408A9890+E58↑j
                mov     r8b, r11b
                lea     rdx, [rbp+57h+var_88]
                lea     rcx, [rbp+57h+var_78]
                call    RtlCompareUnicodeString
                jmp     loc_1408AA004
; ---------------------------------------------------------------------------

loc_1408AA751:                          ; CODE XREF: sub_1408A9890+E53↑j
                mov     r8b, r11b
                lea     rdx, [rbp+57h+var_88]
                lea     rcx, [rbp+57h+var_78]
                call    RtlCompareUnicodeString
                xor     esi, esi
                test    eax, eax
                mov     ecx, esi
                setnz   cl
                jmp     loc_1408A9FAA
; ---------------------------------------------------------------------------

loc_1408AA76F:                          ; CODE XREF: sub_1408A9890+E4A↑j
                mov     r8b, r11b
                lea     rdx, [rbp+57h+var_88]
                lea     rcx, [rbp+57h+var_78]
                call    RtlCompareUnicodeString
                jmp     loc_1408A9FA1
; ---------------------------------------------------------------------------

loc_1408AA784:                          ; CODE XREF: sub_1408A9890+E41↑j
                cmp     bx, r10w
                jnb     loc_1408A9DE6
                cmp     si, r10w
                jnb     loc_1408A9DE6

loc_1408AA798:                          ; CODE XREF: sub_1408A9890+576↑j
                                        ; sub_1408A9890+57F↑j ...
                xor     eax, eax
                jmp     loc_1408A9DE9
; ---------------------------------------------------------------------------

loc_1408AA79F:                          ; CODE XREF: sub_1408A9890+E38↑j
                cmp     bx, r10w
                jb      short loc_1408AA798
                cmp     si, r10w
                jb      short loc_1408AA798
                jmp     loc_1408A9DE6
; ---------------------------------------------------------------------------

loc_1408AA7B0:                          ; CODE XREF: sub_1408A9890+E2F↑j
                xor     r13d, r13d
                cmp     [r15], r13w
                jnz     short loc_1408AA7C1
                mov     r15, r12
                jmp     loc_1408AA1CA
; ---------------------------------------------------------------------------

loc_1408AA7C1:                          ; CODE XREF: sub_1408A9890+F27↑j
                cmp     [r14], r13w
                jnz     short loc_1408AA7CF
                mov     r15, r9
                jmp     loc_1408AA1CA
; ---------------------------------------------------------------------------

loc_1408AA7CF:                          ; CODE XREF: sub_1408A9890+F35↑j
                movzx   ecx, si
                movzx   eax, bx
                add     ecx, eax
                cmp     ecx, 0FFFEh
                jnb     loc_1408AA9BC
                lea     eax, [rbx+rsi]
                add     r8w, si
                movzx   edx, r8w
                mov     ecx, r11d
                mov     word ptr [rbp+57h+var_D0], ax
                mov     r8d, 63647050h
                movzx   eax, dx
                mov     [rsp+110h+var_D8], eax
                call    ExAllocatePoolWithTag
                mov     r13, rax
                test    rax, rax
                jz      loc_1408AA9AF
                movzx   ebx, bx
                mov     rdx, r15
                mov     r8d, ebx
                mov     rcx, rax
                call    memmove
                shr     rbx, 1
                mov     rdx, r14
                movzx   r8d, si
                add     r8, 2
                lea     rcx, ds:0[rbx*2]
                add     rcx, r13
                call    memmove
                mov     r14, [rbp+57h+var_C0]
                jmp     loc_1408A9DEC
; ---------------------------------------------------------------------------

loc_1408AA84B:                          ; CODE XREF: sub_1408A9890+4B0↑j
                                        ; sub_1408A9890+4D4↑j
                lea     r15, qword_140984E68
                jmp     loc_1408A9B21
; ---------------------------------------------------------------------------

loc_1408AA857:                          ; CODE XREF: sub_1408A9890+4A0↑j
                cmp     r9d, 3
                jnz     loc_1408A9B21
                mov     eax, [rcx+20h]
                test    eax, eax
                jz      short loc_1408AA8B9
                cmp     eax, r8d
                jbe     short loc_1408AA8AC
                cmp     eax, r9d
                jz      short loc_1408AA891
                cmp     eax, 4
                jz      short loc_1408AA885
                cmp     eax, 7
                jnz     short loc_1408AA8B5
                cmp     dword ptr [rcx+24h], 4
                setnbe  al
                jmp     short loc_1408AA8BC
; ---------------------------------------------------------------------------

loc_1408AA885:                          ; CODE XREF: sub_1408A9890+FE5↑j
                mov     rax, [rcx+28h]
                cmp     [rax], r15d
                setnz   al
                jmp     short loc_1408AA8BC
; ---------------------------------------------------------------------------

loc_1408AA891:                          ; CODE XREF: sub_1408A9890+FE0↑j
                mov     rdx, [rcx+28h]
                mov     ecx, [rcx+24h]
                test    ecx, ecx
                jz      short loc_1408AA8C0

loc_1408AA89C:                          ; CODE XREF: sub_1408A9890+1018↓j
                mov     al, [rdx]
                add     rdx, r11
                test    al, al
                jnz     short loc_1408AA8C8
                add     ecx, 0FFFFFFFFh
                jnz     short loc_1408AA89C
                jmp     short loc_1408AA8C0
; ---------------------------------------------------------------------------

loc_1408AA8AC:                          ; CODE XREF: sub_1408A9890+FDB↑j
                cmp     [rcx+24h], r8d
                setnb   al
                jmp     short loc_1408AA8BC
; ---------------------------------------------------------------------------

loc_1408AA8B5:                          ; CODE XREF: sub_1408A9890+FEA↑j
                test    eax, eax
                jnz     short loc_1408AA8C8

loc_1408AA8B9:                          ; CODE XREF: sub_1408A9890+FD6↑j
                mov     al, r15b

loc_1408AA8BC:                          ; CODE XREF: sub_1408A9890+FF3↑j
                                        ; sub_1408A9890+FFF↑j ...
                test    al, al
                jnz     short loc_1408AA8C8

loc_1408AA8C0:                          ; CODE XREF: sub_1408A9890+100A↑j
                                        ; sub_1408A9890+101A↑j
                mov     r15, r12
                jmp     loc_1408A9B21
; ---------------------------------------------------------------------------

loc_1408AA8C8:                          ; CODE XREF: sub_1408A9890+1013↑j
                                        ; sub_1408A9890+1027↑j ...
                mov     r15, qword ptr [rbp+57h+var_58+8]
                jmp     loc_1408A9B21
; ---------------------------------------------------------------------------

loc_1408AA8D1:                          ; CODE XREF: sub_1408A9890+58D↑j
                mov     r14, [rbp+57h+var_C0]
                jmp     loc_1408A9FAD
; ---------------------------------------------------------------------------

loc_1408AA8DA:                          ; CODE XREF: sub_1408A9890+61C↑j
                mov     r15, [rbp+57h+var_C8]
                mov     r13, [rsp+110h+var_E0]
                jmp     loc_1408A9DF4
; ---------------------------------------------------------------------------

loc_1408AA8E8:                          ; CODE XREF: sub_1408A9890+2D1↑j
                mov     eax, 4
                mov     r8d, 63647050h
                mov     edx, eax
                mov     ebx, eax
                mov     esi, eax
                lea     ecx, [rax-3]
                call    ExAllocatePoolWithTag
                mov     r13, rax
                test    rax, rax
                jz      loc_1408AA9D4
                mov     [rax], r14d

loc_1408AA910:                          ; CODE XREF: sub_1408A9890+2EB↑j
                mov     [r15+20h], ebx
                mov     [r15+24h], esi
                mov     [r15+28h], r13

loc_1408AA91C:                          ; CODE XREF: sub_1408A9890+2A1↑j
                mov     ebx, [rbp+57h+var_B8]
                xor     r13d, r13d
                mov     r14, [rbp+57h+var_98]
                mov     eax, [rbp+57h+var_D4]
                mov     [r14+rbx*8], r15
                test    eax, eax
                jz      short loc_1408AA974
                mov     r14d, eax
                lea     rsi, [rbp+57h+var_58]
                lea     eax, [r13+1]

loc_1408AA93C:                          ; CODE XREF: sub_1408A9890+10DB↓j
                mov     rbx, [rsi]
                cmp     [rbx+18h], r13
                jnz     short loc_1408AA964
                mov     rcx, [rbx+28h]
                test    rcx, rcx
                jz      short loc_1408AA955
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408AA955:                          ; CODE XREF: sub_1408A9890+10BC↑j
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag
                mov     eax, 1

loc_1408AA964:                          ; CODE XREF: sub_1408A9890+10B3↑j
                add     rsi, 8
                sub     r14, rax
                jnz     short loc_1408AA93C
                mov     ebx, [rbp+57h+var_B8]
                mov     r14, [rbp+57h+var_98]

loc_1408AA974:                          ; CODE XREF: sub_1408A9890+109F↑j
                mov     r15d, [rbp+57h+var_A4]
                mov     rsi, [rbp+57h+var_B0]

loc_1408AA97C:                          ; CODE XREF: sub_1408A9890+182↑j
                inc     ebx
                mov     [rbp+57h+var_B8], ebx
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408AA985:                          ; CODE XREF: sub_1408A9890+10FD↓j
                inc     rax
                cmp     [rsi+rax*2], r13w
                jnz     short loc_1408AA985
                lea     rsi, [rsi+rax*2]
                add     rsi, 2
                mov     [rbp+57h+var_B0], rsi
                movzx   eax, word ptr [rsi]
                test    ax, ax
                jnz     loc_1408A99A4
                mov     [rbp+57h+var_B8], ebx
                jmp     loc_1408AAA2F
; ---------------------------------------------------------------------------

loc_1408AA9AF:                          ; CODE XREF: sub_1408A9890+375↑j
                                        ; sub_1408A9890+6AD↑j ...
                mov     edi, 0C000009Ah

loc_1408AA9B4:                          ; CODE XREF: sub_1408A9890+113B↓j
                mov     eax, [rbp+57h+var_D4]
                xor     r13d, r13d
                jmp     short loc_1408AA9E3
; ---------------------------------------------------------------------------

loc_1408AA9BC:                          ; CODE XREF: sub_1408A9890+680↑j
                                        ; sub_1408A9890+D5F↑j ...
                mov     edi, 80000005h

loc_1408AA9C1:                          ; CODE XREF: sub_1408A9890+1142↓j
                mov     eax, [rbp+57h+var_D4]
                jmp     short loc_1408AA9E3
; ---------------------------------------------------------------------------

loc_1408AA9C6:                          ; CODE XREF: sub_1408A9890+509↑j
                                        ; sub_1408A9890+512↑j ...
                mov     edi, 80000005h
                jmp     short loc_1408AA9B4
; ---------------------------------------------------------------------------

loc_1408AA9CD:                          ; CODE XREF: sub_1408A9890+D88↑j
                mov     edi, 0C000009Ah
                jmp     short loc_1408AA9C1
; ---------------------------------------------------------------------------

loc_1408AA9D4:                          ; CODE XREF: sub_1408A9890+2C0↑j
                                        ; sub_1408A9890+1077↑j
                mov     edi, 0C000009Ah

loc_1408AA9D9:                          ; CODE XREF: sub_1408A9890+298↑j
                xor     r13d, r13d

loc_1408AA9DC:                          ; CODE XREF: sub_1408A9890+1F2↑j
                mov     eax, [rbp+57h+var_D4]

loc_1408AA9DF:                          ; CODE XREF: sub_1408A9890+1220↓j
                test    eax, eax
                jz      short loc_1408AAA48

loc_1408AA9E3:                          ; CODE XREF: sub_1408A9890+112A↑j
                                        ; sub_1408A9890+1134↑j
                lea     rbx, [rbp+57h+var_58]
                mov     r14d, eax
                mov     r15d, 1

loc_1408AA9F0:                          ; CODE XREF: sub_1408A9890+118A↓j
                mov     rsi, [rbx]
                cmp     [rsi+18h], r13
                jnz     short loc_1408AAA13
                mov     rcx, [rsi+28h]
                test    rcx, rcx
                jz      short loc_1408AAA09
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408AAA09:                          ; CODE XREF: sub_1408A9890+1170↑j
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408AAA13:                          ; CODE XREF: sub_1408A9890+1167↑j
                add     rbx, 8
                sub     r14, r15
                jnz     short loc_1408AA9F0
                jmp     short loc_1408AAA4E
; ---------------------------------------------------------------------------

loc_1408AAA1E:                          ; CODE XREF: sub_1408A9890+172↑j
                cmp     eax, 0C0000034h
                jnz     short loc_1408AAA2F
                lea     edi, [rax-33h]
                jmp     short loc_1408AAA2F
; ---------------------------------------------------------------------------

loc_1408AAA2A:                          ; CODE XREF: sub_1408A9890+154↑j
                mov     edi, 0C00000FDh

loc_1408AAA2F:                          ; CODE XREF: sub_1408A9890+111A↑j
                                        ; sub_1408A9890+1193↑j ...
                mov     r13, [rbp+57h+var_A0]

loc_1408AAA33:                          ; CODE XREF: sub_1408A9890+107↑j
                test    edi, edi
                js      short loc_1408AAA45
                mov     eax, 1
                cmp     ebx, eax
                jz      short loc_1408AAA9D
                mov     edi, 0C0000001h

loc_1408AAA45:                          ; CODE XREF: sub_1408A9890+11A5↑j
                xor     r13d, r13d

loc_1408AAA48:                          ; CODE XREF: sub_1408A9890+1151↑j
                mov     r15d, 1

loc_1408AAA4E:                          ; CODE XREF: sub_1408A9890+118C↑j
                mov     eax, [rbp+57h+var_B8]
                mov     r14, [rbp+57h+var_98]
                test    eax, eax
                jz      short loc_1408AAA8D
                mov     rbx, r14
                mov     esi, eax

loc_1408AAA5E:                          ; CODE XREF: sub_1408A9890+11FB↓j
                mov     rcx, [rbx]
                cmp     [rcx+18h], r13
                jnz     short loc_1408AAA84
                mov     rax, [rcx+28h]
                test    rax, rax
                jz      short loc_1408AAA7D
                xor     edx, edx
                mov     rcx, rax
                call    ExFreePoolWithTag
                mov     rcx, [rbx]

loc_1408AAA7D:                          ; CODE XREF: sub_1408A9890+11DE↑j
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408AAA84:                          ; CODE XREF: sub_1408A9890+11D5↑j
                add     rbx, 8
                sub     rsi, r15
                jnz     short loc_1408AAA5E

loc_1408AAA8D:                          ; CODE XREF: sub_1408A9890+11C7↑j
                xor     edx, edx
                mov     rcx, r14
                call    ExFreePoolWithTag
                mov     r12, [rbp+57h+var_90]
                jmp     short loc_1408AAABA
; ---------------------------------------------------------------------------

loc_1408AAA9D:                          ; CODE XREF: sub_1408A9890+11AE↑j
                mov     rdx, [r14]
                mov     rcx, r13
                call    sub_1408A74A4
                xor     r13d, r13d
                mov     edi, eax
                mov     eax, r13d
                jmp     loc_1408AA9DF
; ---------------------------------------------------------------------------

loc_1408AAAB5:                          ; CODE XREF: sub_1408A9890+87↑j
                                        ; sub_1408A9890+A0↑j ...
                mov     edi, 0C0000001h

loc_1408AAABA:                          ; CODE XREF: sub_1408A9890+77↑j
                                        ; sub_1408A9890+FC↑j ...
                test    r12, r12
                jz      short loc_1408AAAC9
                xor     edx, edx
                mov     rcx, r12
                call    ExFreePoolWithTag

loc_1408AAAC9:                          ; CODE XREF: sub_1408A9890+122D↑j
                mov     eax, edi
                mov     rcx, [rbp+57h+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+110h+arg_18]
                add     rsp, 0E0h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408A9890
sub_1408A9890   endp

algn_1408AAAF3:                         ; DATA XREF: .pdata:000000014011D5B8↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408AAB00   proc near               ; DATA XREF: .pdata:000000014011D5C4↑o
                                        ; PAGE:0000000140987168↓o

var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = byte ptr -20h
var_8           = qword ptr -8
arg_18          = qword ptr  58h

; __unwind { // __GSHandlerCheck
                mov     [rsp-38h+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 70h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+var_8], rax
                xor     eax, eax
                mov     [rbp+var_28], r8
                mov     rbx, rdx
                mov     [rbp+var_30], rax
                mov     r15, rcx
                mov     [rbp+var_48], rax
                mov     rcx, rbx
                mov     [rbp+var_4C], eax
                lea     r9, [rbp+var_30]
                mov     [rbp+var_38], rax
                xor     r8d, r8d
                lea     rdx, aFormat    ; "Format"
                mov     r14d, eax
                call    sub_140739D08
                mov     edi, eax
                test    eax, eax
                js      loc_1408AAFF2
                mov     rcx, [rbp+var_30]
                call    sub_14036E434
                test    al, al
                jnz     short loc_1408AAB7A
                mov     edi, 0C0000001h
                jmp     loc_1408AAFF2
; ---------------------------------------------------------------------------

loc_1408AAB7A:                          ; CODE XREF: sub_1408AAB00+6E↑j
                mov     rcx, [rbp+var_30]
                lea     r9, [rbp+var_48]
                xor     r8d, r8d
                lea     rdx, aVariables ; "Variables"
                mov     r12d, [rcx+8]
                add     r12, rcx
                mov     rcx, rbx
                mov     [rbp+var_40], r12
                call    sub_140739D08
                mov     rbx, [rbp+var_48]
                xor     r10d, r10d
                mov     [rbp+var_50], eax
                mov     edi, eax
                test    eax, eax
                jns     loc_1408AAC3D
                cmp     eax, 0C0000034h
                jnz     loc_1408AAFE3
                mov     edi, r10d
                mov     [rbp+var_50], r10d

loc_1408AABC5:                          ; CODE XREF: sub_1408AAB00+147↓j
                mov     r13d, 0C0000001h
                test    rbx, rbx
                jz      loc_1408AACCA
                mov     esi, [rbx+8]
                add     rsi, rbx
                mov     rcx, rsi
                cmp     [rsi], r10w
                jz      loc_1408AACCA

loc_1408AABE7:                          ; CODE XREF: sub_1408AAB00+104↓j
                inc     r14d
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408AABEE:                          ; CODE XREF: sub_1408AAB00+F6↓j
                inc     rax
                cmp     [rcx+rax*2], r10w
                jnz     short loc_1408AABEE
                lea     rcx, [rcx+rax*2]
                add     rcx, 2
                cmp     [rcx], r10w
                jnz     short loc_1408AABE7
                mov     [rbp+var_4C], r14d
                test    r14d, r14d
                jz      loc_1408AACCA
                shl     r14, 3
                mov     r8d, 63647050h
                mov     rdx, r14
                mov     ecx, 1
                call    ExAllocatePoolWithTag
                mov     [rbp+var_38], rax
                test    rax, rax
                jnz     short loc_1408AAC57
                mov     edi, 0C000009Ah
                jmp     loc_1408AAFE3
; ---------------------------------------------------------------------------

loc_1408AAC3D:                          ; CODE XREF: sub_1408AAB00+AD↑j
                mov     rcx, rbx
                call    sub_140392E5C
                test    al, al
                jnz     loc_1408AABC5
                mov     edi, 0C0000001h
                jmp     loc_1408AAFE3
; ---------------------------------------------------------------------------

loc_1408AAC57:                          ; CODE XREF: sub_1408AAB00+131↑j
                mov     r8, r14
                xor     edx, edx
                mov     rcx, rax
                call    memset
                xor     r10d, r10d
                mov     r14d, r10d
                jmp     short loc_1408AACAD
; ---------------------------------------------------------------------------

loc_1408AAC6C:                          ; CODE XREF: sub_1408AAB00+1B1↓j
                cmp     r14d, [rbp+var_4C]
                jnb     short loc_1408AACC2
                mov     rcx, [rbp+var_38]
                mov     rdx, rsi
                mov     eax, r14d
                lea     r8, [rcx+rax*8]
                mov     rcx, r15
                call    sub_14077A300
                xor     r10d, r10d
                mov     [rbp+var_50], eax
                mov     edi, eax
                test    eax, eax
                js      short loc_1408AACB5
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408AAC98:                          ; CODE XREF: sub_1408AAB00+1A0↓j
                inc     rax
                cmp     [rsi+rax*2], r10w
                jnz     short loc_1408AAC98
                lea     rsi, [rsi+rax*2]
                add     rsi, 2
                inc     r14d

loc_1408AACAD:                          ; CODE XREF: sub_1408AAB00+16A↑j
                cmp     [rsi], r10w
                jnz     short loc_1408AAC6C
                jmp     short loc_1408AACC2
; ---------------------------------------------------------------------------

loc_1408AACB5:                          ; CODE XREF: sub_1408AAB00+192↑j
                cmp     edi, 0C0000034h
                cmovz   edi, r13d
                mov     [rbp+var_50], edi

loc_1408AACC2:                          ; CODE XREF: sub_1408AAB00+170↑j
                                        ; sub_1408AAB00+1B3↑j
                test    edi, edi
                js      loc_1408AAFD0

loc_1408AACCA:                          ; CODE XREF: sub_1408AAB00+CE↑j
                                        ; sub_1408AAB00+E1↑j ...
                movzx   eax, word ptr [r12]
                mov     r14d, r10d
                mov     rsi, r12
                mov     ecx, 25h ; '%'
                test    ax, ax
                jz      loc_1408AADD9
                mov     r13, [rbp+var_38]
                mov     edi, [rbp+var_4C]

loc_1408AACEA:                          ; CODE XREF: sub_1408AAB00+2C6↓j
                add     rsi, 2
                cmp     ax, cx
                jnz     short loc_1408AACFF
                movzx   edx, word ptr [rsi]
                cmp     dx, cx
                jnz     short loc_1408AAD08
                add     rsi, 2

loc_1408AACFF:                          ; CODE XREF: sub_1408AAB00+1F1↑j
                add     r14d, 2
                jmp     loc_1408AADC0
; ---------------------------------------------------------------------------

loc_1408AAD08:                          ; CODE XREF: sub_1408AAB00+1F9↑j
                lea     eax, [rdx-30h]
                cmp     ax, 9
                ja      loc_1408AADC0
                mov     ecx, r10d
                jmp     short loc_1408AAD36
; ---------------------------------------------------------------------------

loc_1408AAD1A:                          ; CODE XREF: sub_1408AAB00+239↓j
                lea     eax, [rdx-30h]
                cmp     ax, 9
                ja      short loc_1408AAD3B
                movzx   eax, dx
                lea     ecx, [rcx+rcx*4]
                add     rsi, 2
                lea     ecx, [rcx-18h]
                lea     ecx, [rax+rcx*2]
                movzx   edx, word ptr [rsi]

loc_1408AAD36:                          ; CODE XREF: sub_1408AAB00+218↑j
                test    dx, dx
                jnz     short loc_1408AAD1A

loc_1408AAD3B:                          ; CODE XREF: sub_1408AAB00+221↑j
                cmp     ecx, edi
                jnb     short loc_1408AADBB
                lfence
                mov     eax, ecx
                mov     rcx, [r13+rax*8+0]
                test    rcx, rcx
                jz      short loc_1408AADBB
                mov     eax, [rcx+20h]
                test    eax, eax
                jz      short loc_1408AADBB
                cmp     eax, 2
                jbe     short loc_1408AADB3
                cmp     eax, 4
                jz      short loc_1408AAD7C
                cmp     eax, 7
                jnz     short loc_1408AADBB
                mov     rdx, [rcx+28h]
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408AAD6C:                          ; CODE XREF: sub_1408AAB00+274↓j
                inc     rax
                cmp     [rdx+rax*2], r10w
                jnz     short loc_1408AAD6C

loc_1408AAD76:                          ; CODE XREF: sub_1408AAB00+2B1↓j
                lea     r14d, [r14+rax*2]
                jmp     short loc_1408AADBB
; ---------------------------------------------------------------------------

loc_1408AAD7C:                          ; CODE XREF: sub_1408AAB00+25D↑j
                mov     rax, [rcx+28h]
                lea     r8, aU_4        ; "%u"
                mov     edx, 0Bh
                lea     rcx, [rbp+var_20]
                mov     r9d, [rax]
                call    sub_140311280
                xor     r10d, r10d
                test    eax, eax
                js      short loc_1408AADBB
                lea     rcx, [rbp+var_20]
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408AADA7:                          ; CODE XREF: sub_1408AAB00+2AF↓j
                inc     rax
                cmp     [rcx+rax*2], r10w
                jnz     short loc_1408AADA7
                jmp     short loc_1408AAD76
; ---------------------------------------------------------------------------

loc_1408AADB3:                          ; CODE XREF: sub_1408AAB00+258↑j
                add     r14d, 0FFFFFFFEh
                add     r14d, [rcx+24h]

loc_1408AADBB:                          ; CODE XREF: sub_1408AAB00+23D↑j
                                        ; sub_1408AAB00+24C↑j ...
                mov     ecx, 25h ; '%'

loc_1408AADC0:                          ; CODE XREF: sub_1408AAB00+203↑j
                                        ; sub_1408AAB00+20F↑j
                movzx   eax, word ptr [rsi]
                test    ax, ax
                jnz     loc_1408AACEA
                mov     rbx, [rbp+var_48]
                mov     r13d, 0C0000001h
                mov     edi, [rbp+var_50]

loc_1408AADD9:                          ; CODE XREF: sub_1408AAB00+1DD↑j
                add     r14d, 2
                mov     ecx, 1
                mov     edx, r14d
                mov     r8d, 63647050h
                mov     [rbp+var_50], r14d
                call    ExAllocatePoolWithTag
                xor     r10d, r10d
                mov     r15, rax
                test    rax, rax
                jnz     short loc_1408AAE09
                mov     edi, 0C000009Ah
                jmp     loc_1408AAFD0
; ---------------------------------------------------------------------------

loc_1408AAE09:                          ; CODE XREF: sub_1408AAB00+2FD↑j
                mov     r8, [rbp+var_40]
                mov     r12, r15
                movzx   eax, word ptr [r8]
                test    ax, ax
                jz      loc_1408AAF95
                mov     ecx, 25h ; '%'

loc_1408AAE22:                          ; CODE XREF: sub_1408AAB00+46D↓j
                cmp     ax, cx
                jnz     loc_1408AAF75
                add     r8, 2
                mov     [rbp+var_40], r8
                movzx   edx, word ptr [r8]
                cmp     dx, cx
                jnz     short loc_1408AAE5C
                cmp     r14d, 2
                jbe     loc_1408AAF85
                mov     [r12], cx

loc_1408AAE4B:                          ; CODE XREF: sub_1408AAB00+480↓j
                add     r12, 2
                add     r8, 2
                add     r14d, 0FFFFFFFEh
                jmp     loc_1408AAF66
; ---------------------------------------------------------------------------

loc_1408AAE5C:                          ; CODE XREF: sub_1408AAB00+33A↑j
                lea     eax, [rdx-30h]
                cmp     ax, 9
                ja      loc_1408AAF66
                mov     ecx, r10d
                test    dx, dx
                jz      short loc_1408AAE97

loc_1408AAE71:                          ; CODE XREF: sub_1408AAB00+391↓j
                lea     eax, [rdx-30h]
                cmp     ax, 9
                ja      short loc_1408AAE93
                add     r8, 2
                movzx   eax, dx
                lea     ecx, [rcx+rcx*4]
                lea     ecx, [rcx-18h]
                movzx   edx, word ptr [r8]
                lea     ecx, [rax+rcx*2]
                test    dx, dx
                jnz     short loc_1408AAE71

loc_1408AAE93:                          ; CODE XREF: sub_1408AAB00+378↑j
                mov     [rbp+var_40], r8

loc_1408AAE97:                          ; CODE XREF: sub_1408AAB00+36F↑j
                cmp     ecx, [rbp+var_4C]
                jnb     loc_1408AAF61
                lfence
                mov     eax, ecx
                mov     rcx, [rbp+var_38]
                mov     rcx, [rcx+rax*8]
                test    rcx, rcx
                jz      loc_1408AAF61
                mov     eax, [rcx+20h]
                test    eax, eax
                jz      short loc_1408AAF2F
                cmp     eax, 2
                jbe     short loc_1408AAF23
                cmp     eax, 4
                jz      short loc_1408AAEE2
                cmp     eax, 7
                jnz     short loc_1408AAF2F
                mov     rdx, [rcx+28h]
                or      rsi, 0FFFFFFFFFFFFFFFFh

loc_1408AAED4:                          ; CODE XREF: sub_1408AAB00+3DC↓j
                inc     rsi
                cmp     [rdx+rsi*2], r10w
                jnz     short loc_1408AAED4
                add     esi, esi
                jmp     short loc_1408AAF35
; ---------------------------------------------------------------------------

loc_1408AAEE2:                          ; CODE XREF: sub_1408AAB00+3C5↑j
                mov     rax, [rcx+28h]
                lea     r8, aU_4        ; "%u"
                mov     edx, 0Bh
                lea     rcx, [rbp+var_20]
                mov     r9d, [rax]
                call    sub_140311280
                xor     r10d, r10d
                test    eax, eax
                js      short loc_1408AAF5D
                lea     rdx, [rbp+var_20]
                or      rsi, 0FFFFFFFFFFFFFFFFh
                lea     rax, [rbp+var_20]

loc_1408AAF11:                          ; CODE XREF: sub_1408AAB00+419↓j
                inc     rsi
                cmp     [rax+rsi*2], r10w
                jnz     short loc_1408AAF11
                mov     r8, [rbp+var_40]
                add     esi, esi
                jmp     short loc_1408AAF3A
; ---------------------------------------------------------------------------

loc_1408AAF23:                          ; CODE XREF: sub_1408AAB00+3C0↑j
                mov     esi, [rcx+24h]
                mov     rdx, [rcx+28h]
                sub     esi, 2
                jmp     short loc_1408AAF35
; ---------------------------------------------------------------------------

loc_1408AAF2F:                          ; CODE XREF: sub_1408AAB00+3BB↑j
                                        ; sub_1408AAB00+3CA↑j
                mov     rdx, r10
                mov     esi, r10d

loc_1408AAF35:                          ; CODE XREF: sub_1408AAB00+3E0↑j
                                        ; sub_1408AAB00+42D↑j
                test    rdx, rdx
                jz      short loc_1408AAF61

loc_1408AAF3A:                          ; CODE XREF: sub_1408AAB00+421↑j
                test    esi, esi
                jz      short loc_1408AAF61
                cmp     r14d, esi
                jbe     short loc_1408AAF85
                mov     r8d, esi
                mov     rcx, r12
                mov     ebx, esi
                call    memmove
                shr     rbx, 1
                sub     r14d, esi
                xor     r10d, r10d
                lea     r12, [r12+rbx*2]

loc_1408AAF5D:                          ; CODE XREF: sub_1408AAB00+403↑j
                mov     r8, [rbp+var_40]

loc_1408AAF61:                          ; CODE XREF: sub_1408AAB00+39A↑j
                                        ; sub_1408AAB00+3B0↑j ...
                mov     ecx, 25h ; '%'

loc_1408AAF66:                          ; CODE XREF: sub_1408AAB00+357↑j
                                        ; sub_1408AAB00+363↑j
                movzx   eax, word ptr [r8]
                test    ax, ax
                jnz     loc_1408AAE22
                jmp     short loc_1408AAF91
; ---------------------------------------------------------------------------

loc_1408AAF75:                          ; CODE XREF: sub_1408AAB00+325↑j
                cmp     r14d, 2
                jbe     short loc_1408AAF8E
                mov     [r12], ax
                jmp     loc_1408AAE4B
; ---------------------------------------------------------------------------

loc_1408AAF85:                          ; CODE XREF: sub_1408AAB00+340↑j
                                        ; sub_1408AAB00+441↑j
                mov     rbx, [rbp+var_48]
                mov     edi, r13d
                jmp     short loc_1408AAFC1
; ---------------------------------------------------------------------------

loc_1408AAF8E:                          ; CODE XREF: sub_1408AAB00+479↑j
                mov     edi, r13d

loc_1408AAF91:                          ; CODE XREF: sub_1408AAB00+473↑j
                mov     rbx, [rbp+var_48]

loc_1408AAF95:                          ; CODE XREF: sub_1408AAB00+317↑j
                test    edi, edi
                js      short loc_1408AAFC1
                cmp     r14d, 2
                jz      short loc_1408AAFA4
                mov     edi, r13d
                jmp     short loc_1408AAFC1
; ---------------------------------------------------------------------------

loc_1408AAFA4:                          ; CODE XREF: sub_1408AAB00+49D↑j
                mov     rcx, [rbp+var_28]
                mov     eax, [rbp+var_50]
                mov     [r12], r10w
                mov     [rcx+28h], r15
                mov     r15, r10
                mov     dword ptr [rcx+20h], 1
                mov     [rcx+24h], eax

loc_1408AAFC1:                          ; CODE XREF: sub_1408AAB00+48C↑j
                                        ; sub_1408AAB00+497↑j ...
                test    r15, r15
                jz      short loc_1408AAFD0
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag

loc_1408AAFD0:                          ; CODE XREF: sub_1408AAB00+1C4↑j
                                        ; sub_1408AAB00+304↑j ...
                mov     rax, [rbp+var_38]
                test    rax, rax
                jz      short loc_1408AAFE3
                xor     edx, edx
                mov     rcx, rax
                call    ExFreePoolWithTag

loc_1408AAFE3:                          ; CODE XREF: sub_1408AAB00+B8↑j
                                        ; sub_1408AAB00+138↑j ...
                test    rbx, rbx
                jz      short loc_1408AAFF2
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408AAFF2:                          ; CODE XREF: sub_1408AAB00+5D↑j
                                        ; sub_1408AAB00+75↑j ...
                mov     rcx, [rbp+var_30]
                test    rcx, rcx
                jz      short loc_1408AB002
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408AB002:                          ; CODE XREF: sub_1408AAB00+4F9↑j
                mov     eax, edi
                mov     rcx, [rbp+var_8]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+70h+arg_18]
                add     rsp, 70h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408AAB00
sub_1408AAB00   endp

algn_1408AB029:                         ; DATA XREF: .pdata:000000014011D5C4↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408AB030   proc near               ; DATA XREF: .pdata:000000014011D5D0↑o
                                        ; PAGE:00000001409871A8↓o

var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  30h
arg_8           = qword ptr  38h

; __unwind { // __GSHandlerCheck
                mov     [rsp-28h+arg_0], rbx
                mov     [rsp-28h+arg_8], rsi
                push    rbp
                push    rdi
                push    r12
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 50h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+var_10], rax
                xorps   xmm0, xmm0
                lea     rcx, [rbp+var_20]
                xor     r12d, r12d
                mov     r14, r8
                movups  [rbp+var_20], xmm0
                mov     [rbp+var_30], r12
                mov     [rbp+var_28], r12
                call    ExUuidCreate
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408AB0F1
                mov     r8b, 1
                lea     rdx, [rbp+var_30]
                lea     rcx, [rbp+var_20]
                call    sub_140677A28
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408AB0F1
                xor     r8d, r8d
                lea     rdx, [rbp+var_30]
                lea     rcx, [rbp+var_30]
                call    RtlUpcaseUnicodeString
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408AB0F1
                movzx   edi, word ptr [rbp+var_30]
                lea     ecx, [r12+1]
                add     edi, 2
                mov     r8d, 63647050h
                mov     edx, edi
                mov     r15d, edi
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408AB0D2
                mov     ebx, 0C000009Ah
                jmp     short loc_1408AB0F1
; ---------------------------------------------------------------------------

loc_1408AB0D2:                          ; CODE XREF: sub_1408AB030+99↑j
                mov     rdx, [rbp+var_28]
                mov     r8, r15
                mov     rcx, rsi
                call    memmove
                mov     dword ptr [r14+20h], 1
                mov     [r14+24h], edi
                mov     [r14+28h], rsi

loc_1408AB0F1:                          ; CODE XREF: sub_1408AB030+49↑j
                                        ; sub_1408AB030+5F↑j ...
                lea     rcx, [rbp+var_30]
                call    RtlFreeUnicodeString
                mov     eax, ebx
                mov     rcx, [rbp+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+50h+var_s0]
                mov     rbx, [r11+30h]
                mov     rsi, [r11+38h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408AB030
sub_1408AB030   endp

algn_1408AB122:                         ; DATA XREF: .pdata:000000014011D5D0↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408AB130   proc near               ; DATA XREF: .pdata:000000014011D5DC↑o
                                        ; PAGE:0000000140987198↓o

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                push    rdi
                sub     rsp, 30h
                and     qword ptr [rax+20h], 0
                mov     rsi, r8
                and     qword ptr [rax-18h], 0
                lea     r8, [rax+20h]
                mov     rbp, rdx
                xor     edi, edi
                call    sub_1408AB20C
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408AB1DE
                lea     r9, [rsp+38h+var_18]
                xor     r8d, r8d
                lea     rdx, aDelete    ; "Delete"
                mov     rcx, rbp
                call    sub_140739D08
                mov     r9, [rsp+38h+var_18]
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AB192
                cmp     eax, 0C0000034h
                jnz     short loc_1408AB1CF
                xor     ebx, ebx
                jmp     short loc_1408AB1B5
; ---------------------------------------------------------------------------

loc_1408AB192:                          ; CODE XREF: sub_1408AB130+55↑j
                mov     rcx, r9
                call    sub_14050E788
                test    al, al
                jnz     short loc_1408AB1A5
                mov     ebx, 0C0000001h
                jmp     short loc_1408AB1CF
; ---------------------------------------------------------------------------

loc_1408AB1A5:                          ; CODE XREF: sub_1408AB130+6C↑j
                mov     eax, [r9+8]
                mov     ecx, 100000h
                cmp     [rax+r9], edi
                cmovnz  edi, ecx

loc_1408AB1B5:                          ; CODE XREF: sub_1408AB130+60↑j
                mov     rax, [rsp+38h+arg_18]
                bts     edi, 0Fh
                and     dword ptr [rsi+24h], 0
                and     [rsp+38h+arg_18], 0
                mov     [rsi+20h], edi
                mov     [rsi+28h], rax

loc_1408AB1CF:                          ; CODE XREF: sub_1408AB130+5C↑j
                                        ; sub_1408AB130+73↑j
                test    r9, r9
                jz      short loc_1408AB1DE
                xor     edx, edx
                mov     rcx, r9
                call    ExFreePoolWithTag

loc_1408AB1DE:                          ; CODE XREF: sub_1408AB130+33↑j
                                        ; sub_1408AB130+A2↑j
                mov     rcx, [rsp+38h+arg_18]
                test    rcx, rcx
                jz      short loc_1408AB1ED
                call    ZwClose

loc_1408AB1ED:                          ; CODE XREF: sub_1408AB130+B6↑j
                mov     rbp, [rsp+38h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+38h+arg_0]
                mov     rsi, [rsp+38h+arg_10]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AB130   endp

byte_1408AB205  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D5DC↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=70h

sub_1408AB20C   proc near               ; CODE XREF: sub_1408AB130+2A↑p
                                        ; sub_1408AB9E0+38↓p
                                        ; DATA XREF: ...

var_150         = qword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = xmmword ptr -120h
var_110         = dword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = xmmword ptr -0E8h
var_D8          = qword ptr -0D8h
var_D0          = dword ptr -0D0h
var_CC          = dword ptr -0CCh
var_C8          = qword ptr -0C8h
var_C0          = xmmword ptr -0C0h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = byte ptr -90h
var_44          = word ptr -44h
var_40          = qword ptr -40h
arg_18          = qword ptr  28h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-40h]
                sub     rsp, 140h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+70h+var_40], rax
                xor     esi, esi
                mov     [rbp+70h+var_98], r8
                mov     r14, rdx
                mov     [r8], rsi
                mov     r12, rcx
                mov     [rbp+70h+var_D8], rcx
                xorps   xmm0, xmm0
                mov     [rsp+170h+var_130], rsi
                xor     r8d, r8d
                mov     [rsp+170h+var_128], rsi
                lea     r9, [rsp+170h+var_130]
                mov     [rbp+70h+var_A0], rsi
                lea     rdx, aKeyroot   ; "KeyRoot"
                mov     [rbp+70h+var_A8], rsi
                mov     rcx, r14
                mov     [rbp+70h+var_D0], esi
                movups  [rsp+170h+var_120], xmm0
                mov     [rbp+70h+var_CC], esi
                mov     r13d, esi
                mov     [rbp+70h+var_B0], rsi
                mov     qword ptr [rbp+70h+var_C0], rsi
                mov     qword ptr [rbp+70h+var_C0+8], rsi
                call    sub_140739D08
                mov     r15, [rsp+170h+var_130]
                mov     edi, eax
                test    eax, eax
                js      loc_1408AB968
                mov     rcx, r15
                call    sub_14036E434
                test    al, al
                jnz     short loc_1408AB2B4

loc_1408AB2AA:                          ; CODE XREF: sub_1408AB20C+1B5↓j
                                        ; sub_1408AB20C+337↓j ...
                mov     edi, 0C0000001h
                jmp     loc_1408AB968
; ---------------------------------------------------------------------------

loc_1408AB2B4:                          ; CODE XREF: sub_1408AB20C+9C↑j
                mov     edi, [r15+8]
                mov     ebx, esi
                add     rdi, r15
                lea     rsi, off_140987250 ; "Device"

loc_1408AB2C4:                          ; CODE XREF: sub_1408AB20C+D0↓j
                mov     rcx, [rsi]
                mov     rdx, rdi
                call    _wcsicmp
                test    eax, eax
                jz      short loc_1408AB30B
                inc     ebx
                add     rsi, 20h ; ' '
                cmp     ebx, 7
                jb      short loc_1408AB2C4

loc_1408AB2DE:                          ; CODE XREF: sub_1408AB20C+10D↓j
                lea     rdx, aSystem_1  ; "SYSTEM"
                mov     rcx, rdi
                call    _wcsicmp
                xor     esi, esi
                test    eax, eax
                jnz     loc_1408AB475
                mov     dword ptr [rsp+170h+var_120], 320030h
                lea     rax, aRegistryMachin_105 ; "\\Registry\\Machine\\SYSTEM"
                jmp     loc_1408AB497
; ---------------------------------------------------------------------------

loc_1408AB30B:                          ; CODE XREF: sub_1408AB20C+C5↑j
                shl     rbx, 5
                lea     rax, off_140987250 ; "Device"
                add     rbx, rax
                jz      short loc_1408AB2DE
                mov     r8d, [rbx+10h]
                xor     esi, esi
                mov     rax, [r12]
                test    r8d, r8d
                jz      short loc_1408AB35E
                mov     rdx, [rax+30h]
                lea     rcx, [rsp+170h+var_128]
                mov     [rsp+170h+var_138], rsi
                xor     r9d, r9d
                mov     [rsp+170h+var_140], rcx
                mov     rcx, cs:qword_140CF4378
                mov     byte ptr [rsp+170h+var_148], sil
                mov     dword ptr [rsp+170h+var_150], 20019h
                call    sub_14062C9F8
                jmp     loc_1408AB4D8
; ---------------------------------------------------------------------------

loc_1408AB35E:                          ; CODE XREF: sub_1408AB20C+11C↑j
                mov     edx, [rbx+0Ch]
                test    edx, edx
                jz      loc_1408AB46B
                cmp     edx, 7
                jz      short loc_1408AB374
                mov     rsi, [rbx+18h]
                jmp     short loc_1408AB3D2
; ---------------------------------------------------------------------------

loc_1408AB374:                          ; CODE XREF: sub_1408AB20C+160↑j
                mov     dword ptr [rsp+170h+var_138], esi
                lea     rcx, [rbp+70h+var_D0]
                mov     [rsp+170h+var_140], rcx
                mov     r9d, 9
                lea     rcx, [rbp+70h+var_90]
                mov     [rbp+70h+var_D0], 4Eh ; 'N'
                mov     rdx, [rax+30h]
                xor     r8d, r8d
                mov     [rsp+170h+var_148], rcx
                lea     rcx, [rbp+70h+var_CC]
                mov     [rsp+170h+var_150], rcx
                mov     rcx, cs:qword_140CF4378
                call    sub_14062BA8C
                mov     edi, eax
                test    eax, eax
                js      loc_1408AB968
                cmp     [rbp+70h+var_CC], 1
                jnz     loc_1408AB2AA
                mov     edx, [rbx+0Ch]
                mov     [rbp+70h+var_44], si
                lea     rsi, [rbp+70h+var_90]

loc_1408AB3D2:                          ; CODE XREF: sub_1408AB20C+166↑j
                lea     rax, [rsp+170h+var_128]
                mov     r9d, 20019h
                mov     [rsp+170h+var_150], rax
                call    sub_14077B698
                mov     edi, eax
                test    eax, eax
                js      loc_1408AB968
                test    rsi, rsi
                jz      loc_1408AB504
                mov     rdx, rsi
                lea     rcx, [rsp+170h+var_120]
                call    RtlInitUnicodeString
                mov     rax, [rsp+170h+var_128]
                lea     r8, [rsp+170h+var_108]
                mov     [rsp+170h+var_100], rax
                lea     rcx, [rbp+70h+var_A0]
                lea     rax, [rsp+170h+var_120]
                mov     [rsp+170h+var_108], 30h ; '0'
                xorps   xmm0, xmm0
                mov     [rsp+170h+var_F8], rax
                mov     edx, 20019h
                mov     [rbp+70h+var_F0], 240h
                xor     esi, esi
                movdqu  [rbp+70h+var_E8], xmm0
                call    ZwOpenKey
                mov     edi, eax
                test    eax, eax
                js      loc_1408AB968
                mov     rcx, [rsp+170h+var_128]
                call    ZwClose
                mov     rax, [rbp+70h+var_A0]
                mov     [rsp+170h+var_128], rax
                jmp     loc_1408AB504
; ---------------------------------------------------------------------------

loc_1408AB46B:                          ; CODE XREF: sub_1408AB20C+157↑j
                mov     edi, 0C00000E5h
                jmp     loc_1408AB968
; ---------------------------------------------------------------------------

loc_1408AB475:                          ; CODE XREF: sub_1408AB20C+E5↑j
                lea     rdx, aSoftware  ; "SOFTWARE"
                mov     rcx, rdi
                call    _wcsicmp
                test    eax, eax
                jnz     short loc_1408AB4E4
                lea     rax, aRegistryMachin_106 ; "\\Registry\\Machine\\SOFTWARE"

loc_1408AB48F:                          ; CODE XREF: sub_1408AB20C+2F6↓j
                mov     dword ptr [rsp+170h+var_120], 360034h

loc_1408AB497:                          ; CODE XREF: sub_1408AB20C+FA↑j
                mov     qword ptr [rsp+170h+var_120+8], rax
                lea     r8, [rsp+170h+var_108]
                lea     rax, [rsp+170h+var_120]
                mov     [rsp+170h+var_108], 30h ; '0'
                xorps   xmm0, xmm0
                mov     [rsp+170h+var_F8], rax
                mov     edx, 20019h
                mov     [rbp+70h+var_F0], 240h
                lea     rcx, [rsp+170h+var_128]
                mov     [rsp+170h+var_100], rsi
                movdqu  [rbp+70h+var_E8], xmm0
                call    ZwOpenKey

loc_1408AB4D8:                          ; CODE XREF: sub_1408AB20C+14D↑j
                mov     edi, eax
                test    eax, eax
                js      loc_1408AB968
                jmp     short loc_1408AB504
; ---------------------------------------------------------------------------

loc_1408AB4E4:                          ; CODE XREF: sub_1408AB20C+27A↑j
                lea     rdx, aHardware  ; "HARDWARE"
                mov     rcx, rdi
                call    _wcsicmp
                test    eax, eax
                jnz     loc_1408AB963
                lea     rax, aRegistryMachin_107 ; "\\Registry\\Machine\\HARDWARE"
                jmp     short loc_1408AB48F
; ---------------------------------------------------------------------------

loc_1408AB504:                          ; CODE XREF: sub_1408AB20C+1E8↑j
                                        ; sub_1408AB20C+25A↑j ...
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag
                lea     r9, [rsp+170h+var_130]
                mov     [rsp+170h+var_130], rsi
                xor     r8d, r8d
                lea     rdx, aKeypath   ; "KeyPath"
                mov     rcx, r14
                call    sub_140739D08
                mov     r15, [rsp+170h+var_130]
                mov     edi, eax
                test    eax, eax
                js      loc_1408AB943
                mov     rcx, r15
                call    sub_14036E434
                test    al, al
                jz      loc_1408AB2AA
                mov     esi, [r15+8]
                mov     ebx, 24h ; '$'
                add     rsi, r15
                mov     edx, ebx
                mov     rcx, rsi
                mov     [rbp+70h+var_C8], rsi
                call    wcschr
                xor     r14d, r14d
                test    rax, rax
                jz      loc_1408AB8BC

loc_1408AB56F:                          ; CODE XREF: sub_1408AB20C+374↓j
                mov     edx, ebx
                lea     rcx, [rax+2]
                inc     r13d
                call    wcschr
                test    rax, rax
                jnz     short loc_1408AB56F
                mov     dword ptr [rsp+170h+var_130], r13d
                test    r13d, r13d
                jz      loc_1408AB8BC
                mov     ebx, r13d
                lea     ecx, [rax+1]
                shl     rbx, 3
                mov     r8d, 63647050h
                mov     rdx, rbx
                call    ExAllocatePoolWithTag
                mov     [rbp+70h+var_B0], rax
                test    rax, rax
                jnz     short loc_1408AB5BB

loc_1408AB5B1:                          ; CODE XREF: sub_1408AB20C+537↓j
                mov     edi, 0C000009Ah
                jmp     loc_1408AB968
; ---------------------------------------------------------------------------

loc_1408AB5BB:                          ; CODE XREF: sub_1408AB20C+3A3↑j
                mov     r8, rbx
                xor     edx, edx
                mov     rcx, rax
                call    memset
                mov     eax, 5Ch ; '\'
                mov     r12, rsi
                mov     r13d, r14d
                lea     r9d, [rax-5Ah]
                cmp     [rsi], r14w
                jz      loc_1408AB70E

loc_1408AB5E1:                          ; CODE XREF: sub_1408AB20C+4E9↓j
                cmp     r13d, dword ptr [rsp+170h+var_130]
                jnb     loc_1408AB70A
                mov     edx, eax
                mov     rcx, r12
                call    wcschr
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408AB60D
                mov     rcx, rax
                mov     [rax], r14w
                sub     rcx, r12
                sar     rcx, 1
                jmp     short loc_1408AB61B
; ---------------------------------------------------------------------------

loc_1408AB60D:                          ; CODE XREF: sub_1408AB20C+3F0↑j
                or      rcx, 0FFFFFFFFFFFFFFFFh

loc_1408AB611:                          ; CODE XREF: sub_1408AB20C+40D↓j
                inc     rcx
                cmp     [r12+rcx*2], r14w
                jnz     short loc_1408AB611

loc_1408AB61B:                          ; CODE XREF: sub_1408AB20C+3FF↑j
                mov     eax, 24h ; '$'
                lea     esi, [rcx+rcx]
                mov     edx, esi
                cmp     [r12], ax
                jnz     short loc_1408AB69E
                mov     rcx, [rbp+70h+var_B0]
                lea     rdx, [r12+2]
                mov     eax, r13d
                lea     r14, [rcx+rax*8]
                mov     rcx, [rbp+70h+var_D8]
                mov     r8, r14
                call    sub_14077A300
                mov     edi, eax
                test    eax, eax
                js      short loc_1408AB68B
                mov     rcx, [r14]
                mov     edx, esi
                xor     r14d, r14d
                mov     eax, [rcx+20h]
                test    eax, eax
                jz      short loc_1408AB69B
                lea     edx, [r14+2]
                cmp     eax, edx
                jbe     short loc_1408AB682
                mov     edx, esi
                cmp     eax, 7
                jnz     short loc_1408AB69B
                mov     rax, [rcx+28h]
                or      rdx, 0FFFFFFFFFFFFFFFFh

loc_1408AB674:                          ; CODE XREF: sub_1408AB20C+470↓j
                inc     rdx
                cmp     [rax+rdx*2], r14w
                jnz     short loc_1408AB674
                add     edx, edx
                jmp     short loc_1408AB69B
; ---------------------------------------------------------------------------

loc_1408AB682:                          ; CODE XREF: sub_1408AB20C+457↑j
                mov     eax, [rcx+24h]
                sub     eax, edx
                mov     edx, eax
                jmp     short loc_1408AB69B
; ---------------------------------------------------------------------------

loc_1408AB68B:                          ; CODE XREF: sub_1408AB20C+440↑j
                cmp     edi, 0C0000034h
                jnz     short loc_1408AB704
                xor     r14d, r14d
                mov     edx, esi
                mov     edi, r14d

loc_1408AB69B:                          ; CODE XREF: sub_1408AB20C+44F↑j
                                        ; sub_1408AB20C+45E↑j ...
                inc     r13d

loc_1408AB69E:                          ; CODE XREF: sub_1408AB20C+41E↑j
                movzx   r8d, word ptr [rbp+70h+var_C0+2]
                mov     r9d, 2
                lea     ecx, [rdx+r8]
                add     rcx, r9
                cmp     rcx, 0FFFEh
                jnb     short loc_1408AB6FD
                add     dx, r9w
                add     r8w, dx
                mov     word ptr [rbp+70h+var_C0+2], r8w
                test    rbx, rbx
                jz      short loc_1408AB6D7
                lea     eax, [r9+5Ah]
                mov     [rbx], ax
                add     rbx, r9
                jmp     short loc_1408AB6EE
; ---------------------------------------------------------------------------

loc_1408AB6D7:                          ; CODE XREF: sub_1408AB20C+4BD↑j
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408AB6DB:                          ; CODE XREF: sub_1408AB20C+4D7↓j
                inc     rax
                cmp     [r12+rax*2], r14w
                jnz     short loc_1408AB6DB
                lea     rbx, [r12+rax*2]
                mov     eax, 5Ch ; '\'

loc_1408AB6EE:                          ; CODE XREF: sub_1408AB20C+4C9↑j
                mov     r12, rbx
                cmp     [rbx], r14w
                jnz     loc_1408AB5E1
                jmp     short loc_1408AB70A
; ---------------------------------------------------------------------------

loc_1408AB6FD:                          ; CODE XREF: sub_1408AB20C+4AB↑j
                mov     edi, 80000005h
                jmp     short loc_1408AB70A
; ---------------------------------------------------------------------------

loc_1408AB704:                          ; CODE XREF: sub_1408AB20C+485↑j
                mov     r9d, 2

loc_1408AB70A:                          ; CODE XREF: sub_1408AB20C+3DA↑j
                                        ; sub_1408AB20C+4EF↑j ...
                mov     rsi, [rbp+70h+var_C8]

loc_1408AB70E:                          ; CODE XREF: sub_1408AB20C+3CF↑j
                xor     r14d, r14d
                test    edi, edi
                js      loc_1408AB968
                movzx   ebx, word ptr [rbp+70h+var_C0+2]
                lea     ecx, [r14+1]
                movzx   eax, bx
                mov     edx, ebx
                sub     ax, r9w
                mov     r8d, 63647050h
                mov     word ptr [rbp+70h+var_C0], ax
                call    ExAllocatePoolWithTag
                mov     qword ptr [rbp+70h+var_C0+8], rax
                mov     r13, rax
                test    rax, rax
                jz      loc_1408AB5B1
                lea     edx, [r14+2]
                mov     eax, r14d
                mov     r12, rsi
                mov     dword ptr [rbp+70h+var_D8], eax
                mov     [rsp+170h+var_110], ebx
                cmp     [rsi], r14w
                jz      loc_1408AB899

loc_1408AB764:                          ; CODE XREF: sub_1408AB20C+67E↓j
                cmp     eax, dword ptr [rsp+170h+var_130]
                jnb     loc_1408AB899
                mov     edx, 5Ch ; '\'
                mov     rcx, r12
                call    wcschr
                xor     r10d, r10d
                mov     r14, rax
                test    rax, rax
                jz      short loc_1408AB795
                mov     rcx, rax
                mov     [rax], r10w
                sub     rcx, r12
                sar     rcx, 1
                jmp     short loc_1408AB7A3
; ---------------------------------------------------------------------------

loc_1408AB795:                          ; CODE XREF: sub_1408AB20C+578↑j
                or      rcx, 0FFFFFFFFFFFFFFFFh

loc_1408AB799:                          ; CODE XREF: sub_1408AB20C+595↓j
                inc     rcx
                cmp     [r12+rcx*2], r10w
                jnz     short loc_1408AB799

loc_1408AB7A3:                          ; CODE XREF: sub_1408AB20C+587↑j
                lea     edx, [rcx+rcx]
                mov     r9, r12
                mov     r11d, 2
                cmp     r12, rsi
                jz      short loc_1408AB7D0
                cmp     ebx, r11d
                jbe     loc_1408AB2AA
                lea     eax, [r11+5Ah]
                mov     [r13+0], ax
                add     r13, r11
                add     ebx, 0FFFFFFFEh
                mov     [rsp+170h+var_110], ebx

loc_1408AB7D0:                          ; CODE XREF: sub_1408AB20C+5A6↑j
                mov     eax, 24h ; '$'
                mov     esi, edx
                cmp     [r12], ax
                jnz     short loc_1408AB827
                mov     r8d, dword ptr [rbp+70h+var_D8]
                mov     rcx, [rbp+70h+var_B0]
                mov     rcx, [rcx+r8*8]
                inc     r8d
                mov     dword ptr [rbp+70h+var_D8], r8d
                test    rcx, rcx
                jz      short loc_1408AB827
                mov     eax, [rcx+20h]
                test    eax, eax
                jz      short loc_1408AB827
                cmp     eax, r11d
                jbe     short loc_1408AB81D
                cmp     eax, 7
                jnz     short loc_1408AB827
                mov     r9, [rcx+28h]
                or      rsi, 0FFFFFFFFFFFFFFFFh

loc_1408AB80F:                          ; CODE XREF: sub_1408AB20C+60B↓j
                inc     rsi
                cmp     [r9+rsi*2], r10w
                jnz     short loc_1408AB80F
                add     esi, esi
                jmp     short loc_1408AB827
; ---------------------------------------------------------------------------

loc_1408AB81D:                          ; CODE XREF: sub_1408AB20C+5F4↑j
                mov     esi, [rcx+24h]
                mov     r9, [rcx+28h]
                sub     esi, r11d

loc_1408AB827:                          ; CODE XREF: sub_1408AB20C+5D0↑j
                                        ; sub_1408AB20C+5E8↑j ...
                cmp     ebx, esi
                jbe     short loc_1408AB88F
                mov     r8d, esi
                mov     rdx, r9
                mov     rcx, r13
                mov     ebx, esi
                call    memmove
                shr     rbx, 1
                lea     r13, [r13+rbx*2+0]
                mov     ebx, [rsp+170h+var_110]
                sub     ebx, esi
                xor     esi, esi
                mov     [rsp+170h+var_110], ebx
                test    r14, r14
                jz      short loc_1408AB863
                lea     eax, [rsi+5Ch]
                lea     edx, [rsi+2]
                mov     [r14], ax
                add     r14, rdx
                jmp     short loc_1408AB87A
; ---------------------------------------------------------------------------

loc_1408AB863:                          ; CODE XREF: sub_1408AB20C+646↑j
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408AB867:                          ; CODE XREF: sub_1408AB20C+663↓j
                inc     rax
                cmp     [r12+rax*2], si
                jnz     short loc_1408AB867
                lea     r14, [r12+rax*2]
                mov     edx, 2

loc_1408AB87A:                          ; CODE XREF: sub_1408AB20C+655↑j
                mov     r12, r14
                cmp     [r14], si
                jz      short loc_1408AB89B
                mov     eax, dword ptr [rbp+70h+var_D8]
                mov     rsi, [rbp+70h+var_C8]
                jmp     loc_1408AB764
; ---------------------------------------------------------------------------

loc_1408AB88F:                          ; CODE XREF: sub_1408AB20C+61D↑j
                mov     edi, 0C0000001h
                mov     edx, 2

loc_1408AB899:                          ; CODE XREF: sub_1408AB20C+552↑j
                                        ; sub_1408AB20C+55C↑j
                xor     esi, esi

loc_1408AB89B:                          ; CODE XREF: sub_1408AB20C+675↑j
                test    edi, edi
                js      loc_1408AB968
                cmp     ebx, edx
                jnz     loc_1408AB2AA
                movaps  xmm0, [rbp+70h+var_C0]
                mov     [r13+0], si
                movdqa  [rsp+170h+var_120], xmm0
                jmp     short loc_1408AB8F7
; ---------------------------------------------------------------------------

loc_1408AB8BC:                          ; CODE XREF: sub_1408AB20C+35D↑j
                                        ; sub_1408AB20C+37E↑j
                mov     ecx, [r15+8]
                lea     r8, [rsp+170h+var_130]
                mov     edx, [r15+0Ch]
                xor     esi, esi
                add     rcx, r15
                mov     dword ptr [rsp+170h+var_130], esi
                call    sub_14073B974
                movzx   ecx, word ptr [rsp+170h+var_130]
                mov     word ptr [rsp+170h+var_120], cx
                movzx   eax, word ptr [r15+0Ch]
                mov     word ptr [rsp+170h+var_120+2], ax
                mov     eax, [r15+8]
                add     rax, r15
                mov     qword ptr [rsp+170h+var_120+8], rax

loc_1408AB8F7:                          ; CODE XREF: sub_1408AB20C+6AE↑j
                mov     rax, [rsp+170h+var_128]
                lea     r8, [rsp+170h+var_108]
                mov     [rsp+170h+var_100], rax
                lea     rcx, [rbp+70h+var_A8]
                lea     rax, [rsp+170h+var_120]
                mov     [rsp+170h+var_108], 30h ; '0'
                xorps   xmm0, xmm0
                mov     [rsp+170h+var_F8], rax
                mov     edx, 20019h
                mov     [rbp+70h+var_F0], 240h
                movdqu  [rbp+70h+var_E8], xmm0
                call    ZwOpenKey
                mov     edi, eax
                test    eax, eax
                js      short loc_1408AB968
                mov     rax, [rbp+70h+var_A8]
                jmp     short loc_1408AB95A
; ---------------------------------------------------------------------------

loc_1408AB943:                          ; CODE XREF: sub_1408AB20C+327↑j
                cmp     eax, 0C0000034h
                jnz     short loc_1408AB968
                mov     rax, [rsp+170h+var_128]
                mov     edi, esi
                mov     [rbp+70h+var_A8], rax
                mov     [rsp+170h+var_128], rsi

loc_1408AB95A:                          ; CODE XREF: sub_1408AB20C+735↑j
                mov     rcx, [rbp+70h+var_98]
                mov     [rcx], rax
                jmp     short loc_1408AB968
; ---------------------------------------------------------------------------

loc_1408AB963:                          ; CODE XREF: sub_1408AB20C+2E9↑j
                mov     edi, 0C0000034h

loc_1408AB968:                          ; CODE XREF: sub_1408AB20C+8C↑j
                                        ; sub_1408AB20C+A3↑j ...
                lea     rcx, [rbp+70h+var_C0]
                call    RtlFreeUnicodeString
                mov     rax, [rbp+70h+var_B0]
                test    rax, rax
                jz      short loc_1408AB984
                xor     edx, edx
                mov     rcx, rax
                call    ExFreePoolWithTag

loc_1408AB984:                          ; CODE XREF: sub_1408AB20C+76C↑j
                test    r15, r15
                jz      short loc_1408AB993
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag

loc_1408AB993:                          ; CODE XREF: sub_1408AB20C+77B↑j
                mov     rcx, [rsp+170h+var_128]
                test    rcx, rcx
                jz      short loc_1408AB9A2
                call    ZwClose

loc_1408AB9A2:                          ; CODE XREF: sub_1408AB20C+78F↑j
                mov     eax, edi
                mov     rcx, [rbp+70h+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+170h+arg_18]
                add     rsp, 140h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408AB20C
sub_1408AB20C   endp

algn_1408AB9CC:                         ; DATA XREF: .pdata:000000014011D5E8↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408AB9E0   proc near               ; DATA XREF: .pdata:000000014011D5F4↑o
                                        ; PAGE:0000000140987188↓o

var_10          = qword ptr -10h
var_8           = qword ptr -8
arg_0           = qword ptr  40h
arg_10          = qword ptr  50h
arg_18          = qword ptr  58h

                mov     [rsp-38h+arg_0], rbx
                mov     [rsp-38h+arg_10], r8
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 30h
                and     [rbp+var_8], 0
                mov     r13, r8
                and     [rbp+arg_18], 0
                lea     r8, [rbp+var_10]
                and     [rbp+var_10], 0
                mov     r15, rdx
                mov     r14, rcx
                call    sub_1408AB20C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408ABB8D
                lea     r9, [rbp+var_8]
                xor     r8d, r8d
                lea     rdx, aValuename ; "ValueName"
                mov     rcx, r15
                call    sub_140739D08
                mov     rsi, [rbp+var_8]
                mov     ebx, eax
                test    eax, eax
                js      loc_1408ABB7E
                mov     rcx, rsi
                call    sub_14036E434
                test    al, al
                jnz     short loc_1408ABA61
                mov     ebx, 0C0000001h
                jmp     loc_1408ABB7E
; ---------------------------------------------------------------------------

loc_1408ABA61:                          ; CODE XREF: sub_1408AB9E0+75↑j
                mov     edi, [rsi+8]
                mov     r12d, 0C0000034h
                add     rdi, rsi
                cmp     word ptr [rdi], 24h ; '$'
                jnz     short loc_1408ABAB2
                and     [rbp+var_8], 0
                lea     rdx, [rdi+2]
                lea     r8, [rbp+var_8]
                mov     rcx, r14
                call    sub_14077A300
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408ABAA9
                mov     rax, [rbp+var_8]
                mov     ecx, [rax+20h]
                test    ecx, ecx
                jz      short loc_1408ABAB2
                cmp     ecx, 2
                jbe     short loc_1408ABAA3
                cmp     ecx, 7
                jnz     short loc_1408ABAB2

loc_1408ABAA3:                          ; CODE XREF: sub_1408AB9E0+BC↑j
                mov     rdi, [rax+28h]
                jmp     short loc_1408ABAB2
; ---------------------------------------------------------------------------

loc_1408ABAA9:                          ; CODE XREF: sub_1408AB9E0+AC↑j
                cmp     eax, r12d
                jnz     loc_1408ABB7E

loc_1408ABAB2:                          ; CODE XREF: sub_1408AB9E0+91↑j
                                        ; sub_1408AB9E0+B7↑j ...
                mov     rcx, [rbp+var_10]
                lea     r9, [rbp+arg_18]
                xor     r8d, r8d
                mov     rdx, rdi
                call    sub_140739D08
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408ABAFD
                cmp     eax, r12d
                jnz     short loc_1408ABAF7
                lea     r9, [rbp+arg_18]
                xor     r8d, r8d
                lea     rdx, aDefaultvalue ; "DefaultValue"
                mov     rcx, r15
                call    sub_140739D08
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408ABAFD
                cmp     eax, r12d
                jnz     short loc_1408ABAF7
                xor     ebx, ebx
                xor     edi, edi
                jmp     short loc_1408ABB01
; ---------------------------------------------------------------------------

loc_1408ABAF7:                          ; CODE XREF: sub_1408AB9E0+EE↑j
                                        ; sub_1408AB9E0+10F↑j
                mov     rdi, [rbp+arg_18]
                jmp     short loc_1408ABB6F
; ---------------------------------------------------------------------------

loc_1408ABAFD:                          ; CODE XREF: sub_1408AB9E0+E9↑j
                                        ; sub_1408AB9E0+10A↑j
                mov     rdi, [rbp+arg_18]

loc_1408ABB01:                          ; CODE XREF: sub_1408AB9E0+115↑j
                test    rdi, rdi
                jz      short loc_1408ABB5A
                mov     rcx, rdi
                call    sub_14050E788
                test    al, al
                jnz     short loc_1408ABB19
                mov     ebx, 0C0000001h
                jmp     short loc_1408ABB6F
; ---------------------------------------------------------------------------

loc_1408ABB19:                          ; CODE XREF: sub_1408AB9E0+130↑j
                mov     r15d, [rdi+0Ch]
                mov     r8d, 63647050h
                mov     r12d, [rdi+4]
                mov     edx, r15d
                mov     ecx, 1
                call    ExAllocatePoolWithTag
                mov     r14, rax
                test    rax, rax
                jnz     short loc_1408ABB43
                mov     ebx, 0C000009Ah
                jmp     short loc_1408ABB6F
; ---------------------------------------------------------------------------

loc_1408ABB43:                          ; CODE XREF: sub_1408AB9E0+15A↑j
                mov     edx, [rdi+8]
                mov     r8, r15
                add     rdx, rdi
                mov     rcx, rax
                call    memmove
                mov     r13, [rbp+arg_10]
                jmp     short loc_1408ABB63
; ---------------------------------------------------------------------------

loc_1408ABB5A:                          ; CODE XREF: sub_1408AB9E0+124↑j
                xor     r12d, r12d
                xor     r15d, r15d
                xor     r14d, r14d

loc_1408ABB63:                          ; CODE XREF: sub_1408AB9E0+178↑j
                mov     [r13+20h], r12d
                mov     [r13+24h], r15d
                mov     [r13+28h], r14

loc_1408ABB6F:                          ; CODE XREF: sub_1408AB9E0+11B↑j
                                        ; sub_1408AB9E0+137↑j ...
                test    rdi, rdi
                jz      short loc_1408ABB7E
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408ABB7E:                          ; CODE XREF: sub_1408AB9E0+65↑j
                                        ; sub_1408AB9E0+7C↑j ...
                test    rsi, rsi
                jz      short loc_1408ABB8D
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408ABB8D:                          ; CODE XREF: sub_1408AB9E0+41↑j
                                        ; sub_1408AB9E0+1A1↑j
                mov     rcx, [rbp+var_10]
                test    rcx, rcx
                jz      short loc_1408ABB9B
                call    ZwClose

loc_1408ABB9B:                          ; CODE XREF: sub_1408AB9E0+1B4↑j
                mov     eax, ebx
                mov     rbx, [rsp+30h+arg_0]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AB9E0   endp

algn_1408ABBB3:                         ; DATA XREF: .pdata:000000014011D5F4↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408ABBC0   proc near               ; DATA XREF: .pdata:000000014011D600↑o
                                        ; PAGE:0000000140987158↓o

var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = byte ptr -28h
var_10          = qword ptr -10h
arg_18          = qword ptr  48h

; __unwind { // __GSHandlerCheck
                mov     [rsp-28h+arg_18], rbx
                push    rbp
                push    rdi
                push    r12
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+var_10], rax
                and     [rbp+var_40], 0
                lea     r9, [rbp+var_40]
                and     [rbp+var_38], 0
                mov     r14, rdx
                and     [rbp+var_30], 0
                lea     rdx, aSwitch    ; "Switch"
                mov     r12, r8
                mov     r15, rcx
                mov     rcx, r14
                xor     r8d, r8d
                call    sub_140739D08
                mov     ebx, eax
                test    eax, eax
                js      loc_1408ABCF7
                mov     rdi, [rbp+var_40]
                mov     rcx, rdi
                call    sub_14036E434
                test    al, al
                jnz     short loc_1408ABC34

loc_1408ABC2A:                          ; CODE XREF: sub_1408ABBC0+97↓j
                                        ; sub_1408ABBC0+FF↓j ...
                mov     ebx, 0C0000001h
                jmp     loc_1408ABCFB
; ---------------------------------------------------------------------------

loc_1408ABC34:                          ; CODE XREF: sub_1408ABBC0+68↑j
                mov     edx, [rdi+8]
                lea     r8, [rbp+var_38]
                add     rdx, rdi
                mov     rcx, r15
                call    sub_14077A300
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408ABC59

loc_1408ABC4C:                          ; CODE XREF: sub_1408ABBC0+1CA↓j
                cmp     eax, 0C0000034h
                jnz     loc_1408ABCFB
                jmp     short loc_1408ABC2A
; ---------------------------------------------------------------------------

loc_1408ABC59:                          ; CODE XREF: sub_1408ABBC0+8A↑j
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag
                mov     rdx, [rbp+var_38]
                and     [rbp+var_40], 0
                mov     eax, [rdx+20h]
                test    eax, eax
                jz      short loc_1408ABC8E
                cmp     eax, 2
                jbe     loc_1408ABD57
                cmp     eax, 4
                jz      loc_1408ABD2E
                cmp     eax, 7
                jz      loc_1408ABD57

loc_1408ABC8E:                          ; CODE XREF: sub_1408ABBC0+B1↑j
                xor     edx, edx

loc_1408ABC90:                          ; CODE XREF: sub_1408ABBC0+19B↓j
                test    rdx, rdx
                jz      short loc_1408ABCD1

loc_1408ABC95:                          ; CODE XREF: sub_1408ABBC0+192↓j
                lea     r9, [rbp+var_40]
                xor     r8d, r8d
                mov     rcx, r14
                call    sub_140739D08
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jz      short loc_1408ABCD1
                test    eax, eax
                js      short loc_1408ABCF7
                mov     rdi, [rbp+var_40]
                mov     rcx, rdi
                call    sub_14036E434
                test    al, al
                jz      loc_1408ABC2A
                mov     edx, [rdi+8]
                add     rdx, rdi
                jnz     loc_1408ABD7A

loc_1408ABCD1:                          ; CODE XREF: sub_1408ABBC0+D3↑j
                                        ; sub_1408ABBC0+EB↑j ...
                lea     r9, [rbp+var_40]
                xor     r8d, r8d
                lea     rdx, aDefault   ; "Default"
                mov     rcx, r14
                call    sub_140739D08
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408ABD60
                cmp     eax, 0C0000034h
                jnz     short loc_1408ABCF7
                lea     ebx, [rax-33h]

loc_1408ABCF7:                          ; CODE XREF: sub_1408ABBC0+54↑j
                                        ; sub_1408ABBC0+EF↑j ...
                mov     rdi, [rbp+var_40]

loc_1408ABCFB:                          ; CODE XREF: sub_1408ABBC0+6F↑j
                                        ; sub_1408ABBC0+91↑j ...
                test    rdi, rdi
                jz      short loc_1408ABD0A
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408ABD0A:                          ; CODE XREF: sub_1408ABBC0+13E↑j
                mov     eax, ebx
                mov     rcx, [rbp+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+60h+arg_18]
                add     rsp, 60h
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 2

loc_1408ABD2E:                          ; CODE XREF: sub_1408ABBC0+BF↑j
                mov     rax, [rdx+28h]
                lea     r8, aU_4        ; "%u"
                mov     edx, 0Bh
                lea     rcx, [rbp+var_28]
                mov     r9d, [rax]
                call    sub_140311280
                test    eax, eax
                js      short loc_1408ABCD1
                lea     rdx, [rbp+var_28]
                jmp     loc_1408ABC95
; ---------------------------------------------------------------------------

loc_1408ABD57:                          ; CODE XREF: sub_1408ABBC0+B6↑j
                                        ; sub_1408ABBC0+C8↑j
                mov     rdx, [rdx+28h]
                jmp     loc_1408ABC90
; ---------------------------------------------------------------------------

loc_1408ABD60:                          ; CODE XREF: sub_1408ABBC0+12B↑j
                mov     rdi, [rbp+var_40]
                mov     rcx, rdi
                call    sub_14036E434
                test    al, al
                jz      loc_1408ABC2A
                mov     edx, [rdi+8]
                add     rdx, rdi

loc_1408ABD7A:                          ; CODE XREF: sub_1408ABBC0+10B↑j
                lea     r8, [rbp+var_30]
                mov     rcx, r15
                call    sub_14077A300
                mov     ebx, eax
                test    eax, eax
                js      loc_1408ABC4C
                mov     rdx, [rbp+var_30]
                mov     rcx, r12
                call    sub_1408A74A4
                mov     ebx, eax
                jmp     loc_1408ABCFB
; } // starts at 1408ABBC0
sub_1408ABBC0   endp

; ---------------------------------------------------------------------------
byte_1408ABDA3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D600↑o

; =============== S U B R O U T I N E =======================================


sub_1408ABDAC   proc near               ; CODE XREF: sub_1408A669C+444↑p
                                        ; DATA XREF: .pdata:000000014011D60C↑o

var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = xmmword ptr -58h
var_48          = word ptr -48h
var_30          = qword ptr -30h
var_28          = byte ptr -28h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = qword ptr  28h
arg_28          = qword ptr  30h

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_10], rbx
                mov     [rsp+arg_18], rbp
                push    rsi
                push    rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 60h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+88h+var_30], rax
                mov     r15, [rsp+88h+arg_20]
                mov     r14, rdx
                mov     rdi, [rsp+88h+arg_28]
                xorps   xmm0, xmm0
                xor     ebx, ebx
                mov     r12, rcx
                movups  [rsp+88h+var_58], xmm0
                lea     edx, [rbx+3Ah]
                call    wcschr
                mov     rbp, rax
                test    rax, rax
                jnz     short loc_1408ABE0B

loc_1408ABE01:                          ; CODE XREF: sub_1408ABDAC+DD↓j
                                        ; sub_1408ABDAC+161↓j ...
                mov     ebx, 0C0000001h
                jmp     loc_1408ABFC9
; ---------------------------------------------------------------------------

loc_1408ABE0B:                          ; CODE XREF: sub_1408ABDAC+53↑j
                test    r14, r14
                jz      short loc_1408ABE74
                mov     rcx, rbp
                sub     rcx, r12
                sar     rcx, 1
                add     ecx, ecx
                mov     esi, ecx
                lea     rax, [rcx+2]
                cmp     rax, 0FFFEh
                jbe     short loc_1408ABE33
                mov     ebx, 0C0000106h
                jmp     loc_1408ABFC9
; ---------------------------------------------------------------------------

loc_1408ABE33:                          ; CODE XREF: sub_1408ABDAC+7B↑j
                mov     [r14], cx
                add     cx, 2
                movzx   ecx, cx
                mov     [r14+2], cx
                call    sub_140704930
                mov     [r14+8], rax
                test    rax, rax
                jnz     short loc_1408ABE5B
                mov     ebx, 0C000009Ah
                jmp     loc_1408ABFC9
; ---------------------------------------------------------------------------

loc_1408ABE5B:                          ; CODE XREF: sub_1408ABDAC+A3↑j
                mov     r8, rsi
                mov     rdx, r12
                mov     rcx, rax
                call    memmove
                mov     rax, [r14+8]
                shr     rsi, 1
                mov     [rax+rsi*2], bx

loc_1408ABE74:                          ; CODE XREF: sub_1408ABDAC+62↑j
                mov     r12d, 2Ch ; ','
                lea     rcx, [rbp+2]
                mov     edx, r12d
                call    wcschr
                test    rax, rax
                jz      loc_1408ABE01
                lea     rsi, [rax+2]
                mov     edx, r12d
                mov     rcx, rsi
                call    wcschr
                or      rbp, 0FFFFFFFFFFFFFFFFh
                test    rax, rax
                jnz     short loc_1408ABEB7
                mov     rax, rbp

loc_1408ABEAA:                          ; CODE XREF: sub_1408ABDAC+105↓j
                inc     rax
                cmp     [rsi+rax*2], bx
                jnz     short loc_1408ABEAA
                lea     rax, [rsi+rax*2]

loc_1408ABEB7:                          ; CODE XREF: sub_1408ABDAC+F9↑j
                cmp     [rax], bx
                jz      loc_1408ABFB5
                test    r15, r15
                jnz     short loc_1408ABECE
                test    rdi, rdi
                jz      loc_1408ABFC9

loc_1408ABECE:                          ; CODE XREF: sub_1408ABDAC+117↑j
                lea     r14, [rax+2]
                mov     edx, r12d
                mov     rcx, r14
                call    wcschr
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408ABEF3

loc_1408ABEE5:                          ; CODE XREF: sub_1408ABDAC+141↓j
                inc     rbp
                cmp     [r14+rbp*2], bx
                jnz     short loc_1408ABEE5
                lea     rsi, [r14+rbp*2]

loc_1408ABEF3:                          ; CODE XREF: sub_1408ABDAC+137↑j
                test    r15, r15
                jz      short loc_1408ABF75
                mov     rax, rsi
                sub     rax, r14
                sar     rax, 1
                add     eax, eax
                mov     ebp, eax
                add     rax, 2
                cmp     rax, 16h
                ja      loc_1408ABE01
                mov     r8d, ebp
                lea     rcx, [rsp+88h+var_48]
                mov     rdx, r14
                call    memmove
                cmp     rbp, 16h
                jnb     loc_1408ABFAF
                lea     rax, [rsp+88h+var_58]
                mov     [rsp+rbp+88h+var_48], bx
                lea     r9, [rsp+88h+var_58+4]
                mov     [rsp+88h+var_68], rax
                lea     r8, [rsp+88h+var_58+2]
                lea     rdx, aHuHuHu    ; "%hu/%hu/%hu"
                lea     rcx, [rsp+88h+var_48]
                call    swscanf_s
                cmp     eax, 3
                jnz     loc_1408ABE01
                mov     rdx, r15
                lea     rcx, [rsp+88h+var_58]
                call    RtlTimeFieldsToTime
                test    al, al
                jz      loc_1408ABE01

loc_1408ABF75:                          ; CODE XREF: sub_1408ABDAC+14A↑j
                test    rdi, rdi
                jz      short loc_1408ABFC9
                cmp     [rsi], bx
                jz      short loc_1408ABFC4
                lea     rax, [rdi+2]
                mov     [rsp+88h+var_60], rdi
                lea     r9, [rdi+4]
                mov     [rsp+88h+var_68], rax
                lea     r8, [rdi+6]
                lea     rcx, [rsi+2]
                lea     rdx, aHuHuHuHu  ; "%hu.%hu.%hu.%hu"
                call    swscanf_s
                cmp     eax, 4
                jz      short loc_1408ABFC9
                jmp     loc_1408ABE01
; ---------------------------------------------------------------------------

loc_1408ABFAF:                          ; CODE XREF: sub_1408ABDAC+17B↑j
                call    sub_1404B63DC
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408ABFB5:                          ; CODE XREF: sub_1408ABDAC+10E↑j
                test    r15, r15
                jz      short loc_1408ABFBF
                xor     eax, eax
                mov     [r15], rax

loc_1408ABFBF:                          ; CODE XREF: sub_1408ABDAC+20C↑j
                test    rdi, rdi
                jz      short loc_1408ABFC9

loc_1408ABFC4:                          ; CODE XREF: sub_1408ABDAC+1D1↑j
                xor     eax, eax
                mov     [rdi], rax

loc_1408ABFC9:                          ; CODE XREF: sub_1408ABDAC+5A↑j
                                        ; sub_1408ABDAC+82↑j ...
                mov     eax, ebx
                mov     rcx, [rsp+88h+var_30]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+88h+var_28]
                mov     rbx, [r11+40h]
                mov     rbp, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rsi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408ABDAC
sub_1408ABDAC   endp

algn_1408ABFF2:                         ; DATA XREF: .pdata:000000014011D60C↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408ABFF8   proc near               ; CODE XREF: sub_140735D48+B8D5E↑p
                                        ; DATA XREF: .pdata:000000014011D618↑o

var_58          = byte ptr -58h
var_8           = byte ptr -8
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 70h
                mov     rbx, rdx
                mov     rsi, r8
                xor     edx, edx
                mov     rdi, rcx
                lea     rcx, [rsp+78h+var_58]
                lea     r8d, [rdx+48h]
                call    memset
                lea     r8, [rsp+78h+var_58]
                mov     rdx, rbx
                mov     rcx, rdi
                call    sub_14074AAA0
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408AC045
                mov     rdx, rsi
                lea     rcx, [rsp+78h+var_58]
                call    sub_1408A669C
                mov     ebx, eax

loc_1408AC045:                          ; CODE XREF: sub_1408ABFF8+3C↑j
                lea     rcx, [rsp+78h+var_58]
                call    sub_140749534
                lea     r11, [rsp+78h+var_8]
                mov     eax, ebx
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     rsp, r11
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ABFF8   endp

byte_1408AC064  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D618↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0D0h

sub_1408AC06C   proc near               ; CODE XREF: sub_14072F4A8+104004↑p
                                        ; DATA XREF: .pdata:000000014011D624↑o

var_1B0         = qword ptr -1B0h
var_1A8         = qword ptr -1A8h
var_1A0         = dword ptr -1A0h
var_198         = qword ptr -198h
var_190         = dword ptr -190h
var_188         = dword ptr -188h
var_180         = dword ptr -180h
var_170         = qword ptr -170h
var_168         = dword ptr -168h
var_160         = qword ptr -160h
var_158         = qword ptr -158h
var_150         = qword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = dword ptr -0F0h
var_EC          = dword ptr -0ECh
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = byte ptr -0A0h
var_90          = qword ptr -90h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = qword ptr -30h
var_20          = byte ptr -20h

; __unwind { // __GSHandlerCheck
                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-0D8h]
                sub     rsp, 1B0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+0D0h+var_30], rax
                xor     edx, edx
                mov     r15, rcx
                lea     rcx, [rbp+0D0h+var_A0]
                lea     r8d, [rdx+48h]
                call    memset
                xor     edi, edi
                mov     dword ptr [rsp+1D0h+var_160], 1
                cmp     cs:dword_140D2D060, edi
                xorps   xmm0, xmm0
                movups  [rbp+0D0h+var_50], xmm0
                mov     [rbp+0D0h+var_148], rdi
                mov     r12d, edi
                movups  [rbp+0D0h+var_40], xmm0
                mov     [rbp+0D0h+var_140], rdi
                mov     r13d, edi
                mov     qword ptr [rsp+1D0h+var_168], rdi
                mov     esi, edi
                mov     [rbp+0D0h+var_118], rdi
                mov     [rbp+0D0h+var_110], rdi
                mov     [rbp+0D0h+var_E0], rdi
                mov     [rbp+0D0h+var_D8], rdi
                mov     [rbp+0D0h+var_D0], rdi
                mov     [rbp+0D0h+var_C8], rdi
                mov     [rbp+0D0h+var_C0], rdi
                mov     [rbp+0D0h+var_B8], rdi
                mov     [rbp+0D0h+var_B0], rdi
                mov     [rbp+0D0h+var_A8], rdi
                mov     [rbp+0D0h+var_138], rdi
                mov     [rbp+0D0h+var_130], rdi
                mov     [rbp+0D0h+var_128], rdi
                mov     [rbp+0D0h+var_120], rdi
                mov     [rsp+1D0h+var_158], rdi
                mov     [rbp+0D0h+var_150], rdi
                mov     dword ptr [rsp+1D0h+var_170], edi
                mov     dword ptr [rsp+1D0h+var_170+4], edi
                jnz     short loc_1408AC13D
                mov     ebx, edi
                jmp     loc_1408AC71C
; ---------------------------------------------------------------------------

loc_1408AC13D:                          ; CODE XREF: sub_1408AC06C+C8↑j
                mov     rcx, [r15+30h]
                test    rcx, rcx
                jnz     short loc_1408AC150
                mov     ebx, 0C0000010h
                jmp     loc_1408AC71C
; ---------------------------------------------------------------------------

loc_1408AC150:                          ; CODE XREF: sub_1408AC06C+D8↑j
                lea     r8, [rbp+0D0h+var_A0]
                xor     edx, edx
                call    sub_14074AAA0
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                mov     r14, [rbp+0D0h+var_90]
                lea     rax, qword_14002F280
                mov     rdx, [r15+30h]
                mov     ecx, 1
                mov     [rbp+0D0h+var_108], rax
                mov     r9, r14
                lea     rax, [rbp+0D0h+var_148]
                mov     dword ptr [rsp+1D0h+var_1A8], ecx
                mov     [rbp+0D0h+var_F8], rax
                mov     r8d, ecx
                lea     rax, [rbp+0D0h+var_108]
                mov     [rbp+0D0h+var_100], 2012h
                mov     [rsp+1D0h+var_1B0], rax
                mov     [rbp+0D0h+var_F0], edi
                mov     [rbp+0D0h+var_E8], rdi
                mov     [rbp+0D0h+var_EC], 6
                call    sub_14073EE68
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                cmp     dword ptr [rbp+0D0h+var_E8], edi
                jge     short loc_1408AC1CD
                xor     edx, edx
                lea     rcx, [rbp+0D0h+var_148]
                call    RtlInitUnicodeString

loc_1408AC1CD:                          ; CODE XREF: sub_1408AC06C+154↑j
                mov     rdx, [rbp+0D0h+var_140]
                lea     r8, [rsp+1D0h+var_168]
                lea     rcx, [rbp+0D0h+var_A0]
                call    sub_14073F2A8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                mov     rax, qword ptr [rsp+1D0h+var_168]
                add     rax, 0D0h
                mov     rdi, [rax]
                cmp     rdi, rax
                jz      loc_1408AC546

loc_1408AC200:                          ; CODE XREF: sub_1408AC06C+2C8↓j
                mov     rcx, rdi
                call    sub_14076A5CC
                mov     ebx, eax
                cmp     eax, 0C0000493h
                jnz     short loc_1408AC21D
                mov     r9b, 1
                lea     rcx, [rbp+0D0h+var_118]
                jmp     loc_1408AC307
; ---------------------------------------------------------------------------

loc_1408AC21D:                          ; CODE XREF: sub_1408AC06C+1A3↑j
                xor     r12d, r12d
                test    eax, eax
                js      loc_1408AC70D
                cmp     [rdi+128h], r12
                jz      short loc_1408AC23D
                and     dword ptr [rdi+0B8h], 0FFFFFFFEh
                jmp     loc_1408AC320
; ---------------------------------------------------------------------------

loc_1408AC23D:                          ; CODE XREF: sub_1408AC06C+1C3↑j
                cmp     [rdi+138h], r12
                jz      short loc_1408AC265
                lea     r8, [rdi+130h]
                xor     r9d, r9d
                xor     edx, edx
                lea     rcx, [rbp+0D0h+var_E0]
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D

loc_1408AC265:                          ; CODE XREF: sub_1408AC06C+1D8↑j
                cmp     [rdi+148h], r12
                jz      short loc_1408AC28D
                lea     r8, [rdi+140h]
                xor     r9d, r9d
                xor     edx, edx
                lea     rcx, [rbp+0D0h+var_D0]
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D

loc_1408AC28D:                          ; CODE XREF: sub_1408AC06C+200↑j
                cmp     [rdi+158h], r12
                jz      short loc_1408AC2B5
                lea     r8, [rdi+150h]
                xor     r9d, r9d
                xor     edx, edx
                lea     rcx, [rbp+0D0h+var_C0]
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D

loc_1408AC2B5:                          ; CODE XREF: sub_1408AC06C+228↑j
                cmp     [rdi+168h], r12
                jz      short loc_1408AC2DD
                lea     r8, [rdi+160h]
                xor     r9d, r9d
                xor     edx, edx
                lea     rcx, [rbp+0D0h+var_B0]
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D

loc_1408AC2DD:                          ; CODE XREF: sub_1408AC06C+250↑j
                or      esi, [rdi+180h]
                lea     rdx, [rdi+28h]
                xor     r9d, r9d
                lea     rcx, [rbp+0D0h+var_138]
                xor     r8d, r8d
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                xor     r9d, r9d
                lea     rcx, [rbp+0D0h+var_128]

loc_1408AC307:                          ; CODE XREF: sub_1408AC06C+1AC↑j
                xor     r8d, r8d
                lea     rdx, [rdi+188h]
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D

loc_1408AC320:                          ; CODE XREF: sub_1408AC06C+1CC↑j
                mov     rax, qword ptr [rsp+1D0h+var_168]
                mov     r13d, esi
                mov     rdi, [rdi]
                add     rax, 0D0h
                cmp     rdi, rax
                jnz     loc_1408AC200
                xor     edi, edi
                test    ebx, ebx
                js      loc_1408AC70D
                mov     rcx, [rbp+0D0h+var_110]
                test    rcx, rcx
                jz      short loc_1408AC3A3
                movzx   eax, word ptr [rbp+0D0h+var_118]
                lea     r9d, [rdi+1]
                mov     r8, [r15+30h]
                lea     rdx, [rbp+0D0h+var_A0]
                mov     [rsp+1D0h+var_180], edi
                mov     [rsp+1D0h+var_188], eax
                lea     rax, qword_14002EF38
                mov     qword ptr [rsp+1D0h+var_190], rcx
                mov     rcx, cs:qword_140CF4378
                mov     dword ptr [rsp+1D0h+var_198], 2012h
                mov     qword ptr [rsp+1D0h+var_1A0], rax
                mov     [rsp+1D0h+var_1B0], r14
                call    sub_140736BA4
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                mov     ebx, 0C0000493h
                jmp     loc_1408AC70D
; ---------------------------------------------------------------------------

loc_1408AC3A3:                          ; CODE XREF: sub_1408AC06C+2DF↑j
                lea     rax, [rbp+0D0h+var_E0]
                mov     esi, edi
                mov     qword ptr [rbp+0D0h+var_50], rax
                lea     rax, [rbp+0D0h+var_D0]
                mov     qword ptr [rbp+0D0h+var_50+8], rax
                lea     rax, [rbp+0D0h+var_C0]
                mov     qword ptr [rbp+0D0h+var_40], rax
                lea     rax, [rbp+0D0h+var_B0]
                mov     qword ptr [rbp+0D0h+var_40+8], rax

loc_1408AC3D1:                          ; CODE XREF: sub_1408AC06C+472↓j
                mov     r12, qword ptr [rbp+rdi+0D0h+var_50]
                cmp     qword ptr [r12+8], 0
                jz      loc_1408AC4D5
                mov     rdx, [r15+30h]
                lea     rax, off_140D2D6A0
                mov     rax, [rdi+rax]
                mov     r9, r14
                and     dword ptr [rbp+0D0h+var_100+4], 0
                mov     r8d, 1
                and     [rbp+0D0h+var_F0], 0
                and     [rbp+0D0h+var_E8], 0
                mov     [rbp+0D0h+var_108], rax
                lea     rax, [rsp+1D0h+var_158]
                mov     [rbp+0D0h+var_F8], rax
                lea     rax, [rbp+0D0h+var_108]
                mov     dword ptr [rsp+1D0h+var_1A8], 1
                mov     [rsp+1D0h+var_1B0], rax
                mov     dword ptr [rbp+0D0h+var_100], 2012h
                mov     [rbp+0D0h+var_EC], 6
                call    sub_14073EE68
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                cmp     dword ptr [rbp+0D0h+var_E8], 0
                jge     short loc_1408AC457
                xor     edx, edx
                lea     rcx, [rsp+1D0h+var_158]
                call    RtlInitUnicodeString

loc_1408AC457:                          ; CODE XREF: sub_1408AC06C+3DD↑j
                xor     r9d, r9d
                lea     rcx, [rsp+1D0h+var_158]
                mov     r8, r12
                xor     edx, edx
                call    sub_1408A640C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                and     [rsp+1D0h+var_180], 0
                lea     rdx, [rbp+0D0h+var_A0]
                movzx   eax, word ptr [rsp+1D0h+var_158]
                mov     r9d, 1
                mov     r8, [r15+30h]
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+1D0h+var_188], eax
                mov     rax, [rbp+0D0h+var_150]
                mov     qword ptr [rsp+1D0h+var_190], rax
                lea     rax, off_140D2D6A0
                mov     rax, [rdi+rax]
                mov     dword ptr [rsp+1D0h+var_198], 2012h
                mov     qword ptr [rsp+1D0h+var_1A0], rax
                mov     [rsp+1D0h+var_1B0], r14
                call    sub_140736BA4
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                lea     rcx, [rsp+1D0h+var_158]
                call    RtlFreeUnicodeString

loc_1408AC4D5:                          ; CODE XREF: sub_1408AC06C+373↑j
                inc     esi
                add     rdi, 8
                cmp     esi, 4
                jb      loc_1408AC3D1
                mov     rcx, qword ptr [rsp+1D0h+var_168]
                mov     esi, r13d
                lea     rax, [rcx+0D0h]
                mov     rdi, [rax]
                jmp     short loc_1408AC539
; ---------------------------------------------------------------------------

loc_1408AC4F8:                          ; CODE XREF: sub_1408AC06C+4D0↓j
                mov     eax, [rdi+0B8h]
                test    al, 1
                jz      short loc_1408AC52F
                and     [rsp+1D0h+var_1B0], 0
                lea     r9, [rsp+1D0h+var_170]
                mov     r8, rdi
                lea     rdx, [rbp+0D0h+var_A0]
                mov     rcx, r15
                call    sub_140765E60
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                or      esi, dword ptr [rsp+1D0h+var_170]
                mov     rcx, qword ptr [rsp+1D0h+var_168]

loc_1408AC52F:                          ; CODE XREF: sub_1408AC06C+494↑j
                mov     rdi, [rdi]
                lea     rax, [rcx+0D0h]

loc_1408AC539:                          ; CODE XREF: sub_1408AC06C+48A↑j
                cmp     rdi, rax
                jnz     short loc_1408AC4F8
                mov     r12, [rbp+0D0h+var_130]
                mov     r13, [rbp+0D0h+var_120]

loc_1408AC546:                          ; CODE XREF: sub_1408AC06C+18E↑j
                xor     edi, edi
                cmp     [rbp+0D0h+var_140], rdi
                jz      short loc_1408AC588
                mov     r8, [r15+30h]
                lea     rax, qword_14002F280
                mov     rcx, cs:qword_140CF4378
                lea     r9d, [rdi+1]
                mov     [rsp+1D0h+var_180], edi
                lea     rdx, [rbp+0D0h+var_A0]
                mov     [rsp+1D0h+var_188], edi
                mov     qword ptr [rsp+1D0h+var_190], rdi
                mov     dword ptr [rsp+1D0h+var_198], edi
                mov     qword ptr [rsp+1D0h+var_1A0], rax
                mov     [rsp+1D0h+var_1B0], r14
                call    sub_140736BA4

loc_1408AC588:                          ; CODE XREF: sub_1408AC06C+4E0↑j
                mov     r8, [r15+30h]
                lea     rdx, [rbp+0D0h+var_A0]
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+1D0h+var_180], edi
                test    r12, r12
                jz      short loc_1408AC5E0
                movzx   eax, word ptr [rbp+0D0h+var_138]
                mov     [rsp+1D0h+var_188], eax
                lea     rax, qword_14002EC90
                mov     qword ptr [rsp+1D0h+var_190], r12
                mov     r12d, 1
                mov     dword ptr [rsp+1D0h+var_198], 2012h
                mov     r9d, r12d
                mov     qword ptr [rsp+1D0h+var_1A0], rax
                mov     [rsp+1D0h+var_1B0], r14
                call    sub_140736BA4
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                jmp     short loc_1408AC60C
; ---------------------------------------------------------------------------

loc_1408AC5E0:                          ; CODE XREF: sub_1408AC06C+532↑j
                mov     [rsp+1D0h+var_188], edi
                lea     rax, qword_14002EC90
                mov     qword ptr [rsp+1D0h+var_190], rdi
                mov     r12d, 1
                mov     dword ptr [rsp+1D0h+var_198], edi
                mov     r9d, r12d
                mov     qword ptr [rsp+1D0h+var_1A0], rax
                mov     [rsp+1D0h+var_1B0], r14
                call    sub_140736BA4

loc_1408AC60C:                          ; CODE XREF: sub_1408AC06C+572↑j
                mov     r8, [r15+30h]
                mov     r9d, r12d
                mov     rcx, cs:qword_140CF4378
                lea     rdx, [rbp+0D0h+var_A0]
                mov     [rsp+1D0h+var_180], edi
                test    r13, r13
                jz      short loc_1408AC65E
                movzx   eax, word ptr [rbp+0D0h+var_128]
                mov     [rsp+1D0h+var_188], eax
                lea     rax, qword_140034160
                mov     qword ptr [rsp+1D0h+var_190], r13
                mov     dword ptr [rsp+1D0h+var_198], 2012h
                mov     qword ptr [rsp+1D0h+var_1A0], rax
                mov     [rsp+1D0h+var_1B0], r14
                call    sub_140736BA4
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AC70D
                jmp     short loc_1408AC681
; ---------------------------------------------------------------------------

loc_1408AC65E:                          ; CODE XREF: sub_1408AC06C+5B9↑j
                mov     [rsp+1D0h+var_188], edi
                lea     rax, qword_140034160
                mov     qword ptr [rsp+1D0h+var_190], rdi
                mov     dword ptr [rsp+1D0h+var_198], edi
                mov     qword ptr [rsp+1D0h+var_1A0], rax
                mov     [rsp+1D0h+var_1B0], r14
                call    sub_140736BA4

loc_1408AC681:                          ; CODE XREF: sub_1408AC06C+5F0↑j
                test    esi, esi
                jz      loc_1408AC70D
                mov     rdx, [r15+30h]
                lea     rax, [rsp+1D0h+var_170+4]
                mov     rcx, cs:qword_140CF4378
                mov     r12d, 4
                mov     dword ptr [rsp+1D0h+var_198], edi
                mov     r8, r14
                mov     qword ptr [rsp+1D0h+var_1A0], rax
                lea     rax, [rsp+1D0h+var_170]
                mov     [rsp+1D0h+var_1A8], rax
                lea     rax, [rsp+1D0h+var_160]
                lea     r13d, [r12+7]
                mov     [rsp+1D0h+var_1B0], rax
                mov     r9d, r13d
                mov     dword ptr [rsp+1D0h+var_170+4], r12d
                call    sub_14062BA8C
                test    eax, eax
                js      short loc_1408AC6E7
                cmp     dword ptr [rsp+1D0h+var_160], r12d
                jnz     short loc_1408AC6E7
                mov     eax, dword ptr [rsp+1D0h+var_170]
                cmp     dword ptr [rsp+1D0h+var_170+4], r12d
                jz      short loc_1408AC6E9

loc_1408AC6E7:                          ; CODE XREF: sub_1408AC06C+667↑j
                                        ; sub_1408AC06C+66E↑j
                mov     eax, edi

loc_1408AC6E9:                          ; CODE XREF: sub_1408AC06C+679↑j
                or      eax, esi
                mov     dword ptr [rsp+1D0h+var_1A8], r12d
                mov     dword ptr [rsp+1D0h+var_170], eax
                lea     rdx, [rbp+0D0h+var_A0]
                lea     rax, [rsp+1D0h+var_170]
                mov     r9d, r12d
                mov     r8d, r13d
                mov     [rsp+1D0h+var_1B0], rax
                call    sub_14074A960

loc_1408AC70D:                          ; CODE XREF: sub_1408AC06C+F3↑j
                                        ; sub_1408AC06C+14B↑j ...
                mov     rcx, qword ptr [rsp+1D0h+var_168]
                test    rcx, rcx
                jz      short loc_1408AC71C
                call    sub_140749584

loc_1408AC71C:                          ; CODE XREF: sub_1408AC06C+CC↑j
                                        ; sub_1408AC06C+DF↑j ...
                lea     rcx, [rbp+0D0h+var_148]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0D0h+var_E0]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0D0h+var_D0]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0D0h+var_C0]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0D0h+var_B0]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0D0h+var_138]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0D0h+var_128]
                call    RtlFreeUnicodeString
                lea     rcx, [rsp+1D0h+var_158]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0D0h+var_118]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+0D0h+var_A0]
                call    sub_140749534
                mov     eax, ebx
                mov     rcx, [rbp+0D0h+var_30]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+1D0h+var_20]
                mov     rbx, [r11+38h]
                mov     rsi, [r11+40h]
                mov     rdi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408AC06C
sub_1408AC06C   endp

algn_1408AC7AA:                         ; DATA XREF: .pdata:000000014011D624↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408AC7B0   proc near               ; CODE XREF: sub_1408ACBB0+6D↓p
                                        ; sub_1408ACC5C+101↓p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                mov     edx, 20h ; ' '
                mov     ecx, 200h
                mov     r8d, 20207050h
                call    ExAllocatePoolWithTag
                test    rax, rax
                jz      short loc_1408AC7EF
                and     qword ptr [rax], 0
                lea     rcx, sub_1408AC8B0
                mov     [rax+10h], rcx
                xor     edx, edx
                mov     rcx, rax
                mov     [rax+18h], rax
                call    ExQueueWorkItem
                xor     eax, eax
                jmp     short loc_1408AC7F4
; ---------------------------------------------------------------------------

loc_1408AC7EF:                          ; CODE XREF: sub_1408AC7B0+1C↑j
                mov     eax, 0C000009Ah

loc_1408AC7F4:                          ; CODE XREF: sub_1408AC7B0+3D↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AC7B0   endp

algn_1408AC7FA:                         ; DATA XREF: .pdata:000000014011D630↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408AC800   proc near               ; DATA XREF: .pdata:000000014011D63C↑o
                                        ; sub_1408AC8B0+1A↓o
                push    rbx
                sub     rsp, 20h
                mov     eax, [rcx+12Ch]
                mov     rbx, rcx
                cmp     eax, 308h
                jnz     short loc_1408AC83B
                lea     rdx, [rcx+28h]
                xor     r8d, r8d
                xor     ecx, ecx
                call    sub_14074F15C
                test    eax, eax
                jnz     short loc_1408AC898
                xor     r9d, r9d
                lea     r8d, [rax+16h]
                xor     edx, edx
                mov     rcx, rbx
                call    sub_140745DFC
                jmp     short loc_1408AC898
; ---------------------------------------------------------------------------

loc_1408AC83B:                          ; CODE XREF: sub_1408AC800+14↑j
                add     eax, 0FFFFFCFEh
                test    eax, 0FFFFFFEFh
                jnz     short loc_1408AC898
                test    dword ptr [rcx+18Ch], 2000h
                jz      short loc_1408AC898
                cmp     dword ptr [rcx+194h], 16h
                jnz     short loc_1408AC898
                call    sub_14074AC04
                lea     rdx, [rbx+28h]
                xor     r8d, r8d
                xor     ecx, ecx
                call    sub_14074F15C
                mov     rcx, rbx
                test    eax, eax
                jz      short loc_1408AC88C
                call    sub_140730BF8
                mov     rcx, [rbx+10h]
                xor     edx, edx
                mov     rcx, [rcx+20h]
                call    IoInvalidateDeviceRelations
                jmp     short loc_1408AC898
; ---------------------------------------------------------------------------

loc_1408AC88C:                          ; CODE XREF: sub_1408AC800+74↑j
                xor     r8d, r8d
                lea     edx, [r8+16h]
                call    sub_140748CA0

loc_1408AC898:                          ; CODE XREF: sub_1408AC800+26↑j
                                        ; sub_1408AC800+39↑j ...
                xor     eax, eax
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AC800   endp

algn_1408AC8A1:                         ; DATA XREF: .pdata:000000014011D63C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408AC8B0   proc near               ; DATA XREF: .pdata:000000014011D648↑o
                                        ; sub_1408AC7B0+22↑o
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     ecx, 1
                call    sub_14067926C
                mov     rcx, cs:qword_140C44D00
                lea     rdx, sub_1408AC800
                xor     r8d, r8d
                call    sub_140719A30
                mov     ecx, 1
                call    sub_140679140
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AC8B0   endp

byte_1408AC8F4  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D648↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408AC8FC   proc near               ; CODE XREF: sub_1408ACBB0+48↓p
                                        ; sub_1408ACC5C+DB↓p
                                        ; DATA XREF: ...

var_50          = qword ptr -50h
var_48          = dword ptr -48h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  20h
arg_8           = qword ptr  28h
arg_10          = qword ptr  30h
arg_18          = qword ptr  38h

                mov     [rsp-18h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                mov     rbp, rsp
                sub     rsp, 70h
                and     [rbp+arg_18], 0
                mov     rsi, rcx
                and     [rbp+arg_8], 0
                lea     rcx, dword_140C43420
                and     [rbp+var_3C], 0
                call    ExAcquireFastMutex
                and     [rbp+var_2C], 0
                lea     rax, aRegistryMachin_108 ; "\\Registry\\Machine\\System\\CurrentCon"...
                and     [rbp+var_14], 0
                lea     r8, [rbp+var_30]
                and     [rbp+arg_10], 0
                lea     rcx, [rbp+arg_10]
                and     [rbp+var_28], 0
                xorps   xmm0, xmm0
                mov     [rbp+var_38], rax
                mov     edi, 30h ; '0'
                lea     rax, [rbp+var_40]
                mov     [rbp+var_40], 7C007Ah
                mov     edx, 20019h
                mov     [rbp+var_20], rax
                mov     [rbp+var_30], edi
                mov     [rbp+var_18], 240h
                movdqu  [rbp+var_10], xmm0
                call    ZwOpenKey
                test    eax, eax
                js      loc_1408ACA20
                and     [rbp+var_2C], 0
                lea     rax, aCurrentdockinf ; "CurrentDockInfo"
                and     [rbp+var_14], 0
                lea     r8, [rbp+var_30]
                mov     [rbp+var_38], rax
                lea     rcx, [rbp+arg_8]
                mov     rax, [rbp+arg_10]
                xorps   xmm0, xmm0
                mov     [rbp+var_28], rax
                mov     edx, 2001Fh
                lea     rax, [rbp+var_40]
                mov     [rbp+var_40], 20001Eh
                mov     [rbp+var_20], rax
                mov     [rbp+var_30], edi
                mov     [rbp+var_18], 240h
                movdqu  [rbp+var_10], xmm0
                call    ZwOpenKey
                test    eax, eax
                js      short loc_1408ACA17
                mov     rcx, [rbp+arg_8]
                lea     rax, aEjectabledocks ; "EjectableDocks"
                mov     [rbp+var_38], rax
                lea     r9d, [rdi-2Ch]
                lea     rax, dword_140C433C4
                mov     [rsp+70h+var_48], r9d
                xor     r8d, r8d
                mov     [rsp+70h+var_50], rax
                lea     rdx, [rbp+var_40]
                mov     [rbp+var_40], 1E001Ch
                call    ZwSetValueKey
                mov     rcx, [rbp+arg_8]
                call    ZwClose

loc_1408ACA17:                          ; CODE XREF: sub_1408AC8FC+D9↑j
                mov     rcx, [rbp+arg_10]
                call    ZwClose

loc_1408ACA20:                          ; CODE XREF: sub_1408AC8FC+83↑j
                mov     eax, cs:dword_140C433C4
                mov     ecx, 1
                test    eax, eax
                mov     r8d, 20207050h
                cmovz   eax, ecx
                mov     ecx, 200h
                lea     edx, ds:8[rax*8]
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jz      short loc_1408ACACE
                mov     rbx, rax
                lea     r8, qword_140C433D0
                mov     rax, cs:qword_140C433D0
                jmp     short loc_1408ACA75
; ---------------------------------------------------------------------------

loc_1408ACA62:                          ; CODE XREF: sub_1408AC8FC+17C↓j
                mov     rdx, [rax+10h]
                test    rdx, rdx
                jz      short loc_1408ACA72
                mov     [rbx], rdx
                add     rbx, 8

loc_1408ACA72:                          ; CODE XREF: sub_1408AC8FC+16D↑j
                mov     rax, [rax]

loc_1408ACA75:                          ; CODE XREF: sub_1408AC8FC+164↑j
                cmp     rax, r8
                jnz     short loc_1408ACA62
                lea     rcx, dword_140C43420
                call    KeReleaseGuardedMutex
                cmp     rbx, rdi
                jnz     short loc_1408ACA93
                and     qword ptr [rbx], 0
                add     rbx, 8

loc_1408ACA93:                          ; CODE XREF: sub_1408AC8FC+18D↑j
                and     qword ptr [rbx], 0
                lea     r9, [rbp+arg_18]
                sub     rbx, rdi
                mov     [rsp+70h+var_50], rsi
                sar     rbx, 3
                mov     rdx, rdi
                mov     r8d, ebx
                call    sub_1408BA3E4
                mov     rcx, [rbp+arg_18]
                mov     ebx, eax
                test    rcx, rcx
                jz      short loc_1408ACAC2
                call    ZwClose

loc_1408ACAC2:                          ; CODE XREF: sub_1408AC8FC+1BF↑j
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag
                jmp     short loc_1408ACADF
; ---------------------------------------------------------------------------

loc_1408ACACE:                          ; CODE XREF: sub_1408AC8FC+151↑j
                lea     rcx, dword_140C43420
                call    KeReleaseGuardedMutex
                mov     ebx, 0C000009Ah

loc_1408ACADF:                          ; CODE XREF: sub_1408AC8FC+1D0↑j
                mov     eax, ebx
                mov     rbx, [rsp+70h+arg_0]
                add     rsp, 70h
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AC8FC   endp

algn_1408ACAF2:                         ; DATA XREF: .pdata:000000014011D654↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408ACAF8   proc near               ; CODE XREF: sub_14073DDA8+B4601↑p
                                        ; sub_140745F30+F0B98↑p
                                        ; DATA XREF: ...

var_18          = qword ptr -18h

                sub     rsp, 38h
                test    cl, cl
                jnz     short loc_1408ACB1A
                and     [rsp+38h+var_18], 0
                lea     rcx, byte_140C43400
                xor     r9d, r9d
                xor     r8d, r8d
                xor     edx, edx
                call    KeWaitForSingleObject

loc_1408ACB1A:                          ; CODE XREF: sub_1408ACAF8+6↑j
                add     rsp, 38h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACAF8   endp

byte_1408ACB20  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D660↑o

; =============== S U B R O U T I N E =======================================


sub_1408ACB28   proc near               ; CODE XREF: sub_1407408F4:loc_140835794↑p
                                        ; sub_140745F30:loc_140836A3D↑p ...
                sub     rsp, 28h
                lea     rcx, dword_140C43420
                call    ExAcquireFastMutex
                mov     rax, cs:qword_140C433D0
                lea     rcx, qword_140C433D0
                jmp     short loc_1408ACB5F
; ---------------------------------------------------------------------------

loc_1408ACB48:                          ; CODE XREF: sub_1408ACB28+3A↓j
                cmp     dword ptr [rax-8], 1
                jz      short loc_1408ACB5C
                lock dec cs:dword_140C433E0
                mov     dword ptr [rax-8], 1

loc_1408ACB5C:                          ; CODE XREF: sub_1408ACB28+24↑j
                mov     rax, [rax]

loc_1408ACB5F:                          ; CODE XREF: sub_1408ACB28+1E↑j
                cmp     rax, rcx
                jnz     short loc_1408ACB48
                lea     rcx, dword_140C43420
                call    KeReleaseGuardedMutex
                cmp     cs:byte_140C433E4, 0
                jz      short loc_1408ACB8F
                xor     r9d, r9d
                lea     rcx, xmmword_14000F7C8
                xor     r8d, r8d
                lea     edx, [r9+2]
                call    sub_1408A1518

loc_1408ACB8F:                          ; CODE XREF: sub_1408ACB28+4F↑j
                xor     r9d, r9d
                lea     rcx, byte_140C43400
                xor     edx, edx
                lea     r8d, [r9+1]
                call    KeReleaseSemaphore
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACB28   endp

algn_1408ACBAA:                         ; DATA XREF: .pdata:000000014011D66C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408ACBB0   proc near               ; CODE XREF: sub_140735D48+B8802↑p
                                        ; sub_140736E14+B7EEF↑p
                                        ; DATA XREF: ...

arg_8           = dword ptr  10h

                mov     [rsp+arg_8], edx
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     byte ptr [rsp+28h+arg_8], 0
                lea     rcx, dword_140C43420
                call    ExAcquireFastMutex
                mov     dword ptr [rbx+238h], 1
                or      ebx, 0FFFFFFFFh
                lock xadd cs:dword_140C433E0, ebx
                lea     rcx, dword_140C43420
                call    KeReleaseGuardedMutex
                cmp     ebx, 1
                jnz     short loc_1408ACC4F
                lea     rcx, [rsp+28h+arg_8]
                call    sub_1408AC8FC
                test    eax, eax
                js      short loc_1408ACC24
                cmp     byte ptr [rsp+28h+arg_8], 0
                jz      short loc_1408ACC24
                xor     r9d, r9d
                lea     edx, [rbx+1]
                xor     r8d, r8d
                lea     rcx, loc_14000F7D8
                call    sub_1408A1518
                call    sub_1408AC7B0
                jmp     short loc_1408ACC3A
; ---------------------------------------------------------------------------

loc_1408ACC24:                          ; CODE XREF: sub_1408ACBB0+4F↑j
                                        ; sub_1408ACBB0+56↑j
                xor     r9d, r9d
                lea     rcx, xmmword_14000F7C8
                xor     r8d, r8d
                lea     edx, [r9+2]
                call    sub_1408A1518

loc_1408ACC3A:                          ; CODE XREF: sub_1408ACBB0+72↑j
                xor     r9d, r9d
                lea     rcx, byte_140C43400
                xor     edx, edx
                lea     r8d, [r9+1]
                call    KeReleaseSemaphore

loc_1408ACC4F:                          ; CODE XREF: sub_1408ACBB0+41↑j
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACBB0   endp

byte_1408ACC56  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D678↑o

; =============== S U B R O U T I N E =======================================


sub_1408ACC5C   proc near               ; CODE XREF: sub_14036F89C+11F797↑p
                                        ; sub_1407408F4+F4E95↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = byte ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                and     [rsp+28h+arg_10], 0
                mov     edi, edx
                mov     rax, [rcx+250h]
                mov     rbx, rcx
                cmp     edx, 3
                jnz     short loc_1408ACCE2
                test    rax, rax
                jz      short loc_1408ACC94
                xor     edx, edx
                mov     rcx, rax
                call    ExFreePoolWithTag
                and     qword ptr [rbx+250h], 0

loc_1408ACC94:                          ; CODE XREF: sub_1408ACC5C+24↑j
                lea     rcx, dword_140C43420
                call    ExAcquireFastMutex
                lea     rax, [rbx+240h]
                mov     r8, [rax]
                cmp     [r8+8], rax
                jnz     short loc_1408ACCDB
                mov     rdx, [rax+8]
                cmp     [rdx], rax
                jnz     short loc_1408ACCDB
                mov     [rdx], r8
                lea     rcx, dword_140C43420
                mov     [r8+8], rdx
                mov     [rax+8], rax
                mov     [rax], rax
                dec     cs:dword_140C433C4
                call    KeReleaseGuardedMutex
                jmp     short loc_1408ACD04
; ---------------------------------------------------------------------------

loc_1408ACCDB:                          ; CODE XREF: sub_1408ACC5C+52↑j
                                        ; sub_1408ACC5C+5B↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408ACCE2:                          ; CODE XREF: sub_1408ACC5C+1F↑j
                test    rax, rax
                jnz     short loc_1408ACD04
                mov     rcx, [rcx+20h]
                lea     r8, [rsp+28h+arg_10]
                lea     edx, [rax+4]
                call    sub_140762A70
                mov     rax, [rsp+28h+arg_10]
                mov     [rbx+250h], rax

loc_1408ACD04:                          ; CODE XREF: sub_1408ACC5C+7D↑j
                                        ; sub_1408ACC5C+89↑j
                mov     dword ptr [rbx+238h], 1
                or      eax, 0FFFFFFFFh
                lock xadd cs:dword_140C433E0, eax
                cmp     eax, 1
                jnz     short loc_1408ACD98
                mov     [rsp+28h+arg_8], 0
                cmp     edi, 2
                jnz     short loc_1408ACD32
                cmp     qword ptr [rbx+250h], 0
                jz      short loc_1408ACD64

loc_1408ACD32:                          ; CODE XREF: sub_1408ACC5C+CA↑j
                lea     rcx, [rsp+28h+arg_8]
                call    sub_1408AC8FC
                test    eax, eax
                js      short loc_1408ACD64
                cmp     [rsp+28h+arg_8], 0
                jz      short loc_1408ACD64
                xor     r9d, r9d
                lea     rcx, loc_14000F7D8
                xor     r8d, r8d
                lea     edx, [r9+2]
                call    sub_1408A1518
                call    sub_1408AC7B0
                jmp     short loc_1408ACD83
; ---------------------------------------------------------------------------

loc_1408ACD64:                          ; CODE XREF: sub_1408ACC5C+D4↑j
                                        ; sub_1408ACC5C+E2↑j ...
                cmp     cs:byte_140C433E4, 0
                jz      short loc_1408ACD83
                xor     r9d, r9d
                lea     rcx, xmmword_14000F7C8
                xor     r8d, r8d
                lea     edx, [r9+2]
                call    sub_1408A1518

loc_1408ACD83:                          ; CODE XREF: sub_1408ACC5C+106↑j
                                        ; sub_1408ACC5C+10F↑j
                xor     r9d, r9d
                lea     rcx, byte_140C43400
                xor     edx, edx
                lea     r8d, [r9+1]
                call    KeReleaseSemaphore

loc_1408ACD98:                          ; CODE XREF: sub_1408ACC5C+C0↑j
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACC5C   endp

byte_1408ACDA4  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D684↑o

; =============== S U B R O U T I N E =======================================


sub_1408ACDAC   proc near               ; CODE XREF: sub_14073DDA8+B460C↑p
                                        ; sub_140745F30+F0BD2↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                and     [rsp+28h+arg_10], 0
                mov     esi, edx
                mov     rdi, rcx
                cmp     edx, 2
                jnz     short loc_1408ACE48
                lea     rbx, [rcx+240h]
                cmp     [rbx], rbx
                jnz     short loc_1408ACE20
                lea     rcx, dword_140C43420
                call    ExAcquireFastMutex
                mov     rax, cs:qword_140C433D0
                lea     rcx, qword_140C433D0
                cmp     [rax+8], rcx
                jz      short loc_1408ACDFC
                lea     ecx, [rsi+1]
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408ACDFC:                          ; CODE XREF: sub_1408ACDAC+49↑j
                mov     [rbx+8], rcx
                lea     rcx, dword_140C43420
                mov     [rbx], rax
                mov     [rax+8], rbx
                inc     cs:dword_140C433C4
                mov     cs:qword_140C433D0, rbx
                call    KeReleaseGuardedMutex

loc_1408ACE20:                          ; CODE XREF: sub_1408ACDAC+29↑j
                mov     rcx, [rdi+20h]
                lea     r8, [rsp+28h+arg_10]
                mov     edx, 4
                call    sub_140762A70
                test    eax, eax
                js      short loc_1408ACE48
                mov     rcx, [rsp+28h+arg_10]
                test    rcx, rcx
                jz      short loc_1408ACE48
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408ACE48:                          ; CODE XREF: sub_1408ACDAC+1D↑j
                                        ; sub_1408ACDAC+89↑j ...
                lock inc cs:dword_140C433E0
                mov     rbx, [rsp+28h+arg_0]
                mov     [rdi+238h], esi
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACDAC   endp

byte_1408ACE66  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D690↑o

; =============== S U B R O U T I N E =======================================


sub_1408ACE6C   proc near               ; CODE XREF: sub_1408A3C30+A9↑p
                                        ; DATA XREF: .pdata:000000014011D69C↑o
                sub     rsp, 28h
                lea     rcx, dword_140C43420
                call    ExAcquireFastMutex
                mov     rax, cs:qword_140C433D0
                lea     rcx, qword_140C433D0
                jmp     short loc_1408ACE9C
; ---------------------------------------------------------------------------

loc_1408ACE8C:                          ; CODE XREF: sub_1408ACE6C+33↓j
                cmp     dword ptr [rax-8], 1
                jz      short loc_1408ACE99
                mov     dword ptr [rax-8], 4

loc_1408ACE99:                          ; CODE XREF: sub_1408ACE6C+24↑j
                mov     rax, [rax]

loc_1408ACE9C:                          ; CODE XREF: sub_1408ACE6C+1E↑j
                cmp     rax, rcx
                jnz     short loc_1408ACE8C
                lea     rcx, dword_140C43420
                call    KeReleaseGuardedMutex
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACE6C   endp

byte_1408ACEB3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D69C↑o

; =============== S U B R O U T I N E =======================================


sub_1408ACEBC   proc near               ; CODE XREF: sub_14073DDA8+B461E↑p
                                        ; sub_140745F30+F0C5A↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r14
                sub     rsp, 20h
                mov     dil, cl
                mov     rsi, r9
                lea     rcx, dword_140C43420
                mov     rbp, r8
                mov     r14d, edx
                call    ExAcquireFastMutex
                mov     rax, cs:qword_140C433D0
                lea     rcx, qword_140C433D0
                xor     bl, bl
                jmp     short loc_1408ACF11
; ---------------------------------------------------------------------------

loc_1408ACEFF:                          ; CODE XREF: sub_1408ACEBC+58↓j
                cmp     dword ptr [rax-8], 2
                mov     edx, 1
                mov     rax, [rax]
                movzx   ebx, bl
                cmovz   ebx, edx

loc_1408ACF11:                          ; CODE XREF: sub_1408ACEBC+41↑j
                cmp     rax, rcx
                jnz     short loc_1408ACEFF
                lea     rcx, dword_140C43420
                call    KeReleaseGuardedMutex
                test    dil, dil
                jz      short loc_1408ACF2B

loc_1408ACF27:                          ; CODE XREF: sub_1408ACEBC+7A↓j
                xor     eax, eax
                jmp     short loc_1408ACF56
; ---------------------------------------------------------------------------

loc_1408ACF2B:                          ; CODE XREF: sub_1408ACEBC+69↑j
                test    bl, bl
                jz      short loc_1408ACF38
                mov     cs:byte_140C433E4, 0
                jmp     short loc_1408ACF27
; ---------------------------------------------------------------------------

loc_1408ACF38:                          ; CODE XREF: sub_1408ACEBC+71↑j
                mov     r9, rsi
                lea     rcx, loc_1400306E0
                mov     r8, rbp
                mov     edx, r14d
                call    sub_1408A1518
                test    eax, eax
                setns   cs:byte_140C433E4

loc_1408ACF56:                          ; CODE XREF: sub_1408ACEBC+6D↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                mov     rdi, [rsp+28h+arg_18]
                add     rsp, 20h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACEBC   endp

algn_1408ACF72:                         ; DATA XREF: .pdata:000000014011D6A8↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408ACF80   proc near               ; DATA XREF: .pdata:000000014011D6B4↑o
                                        ; sub_140A3B160+32↓o ...
                push    rbx
                sub     rsp, 20h
                mov     ebx, [rdx+30h]
                mov     rcx, rdx
                xor     edx, edx
                call    IofCompleteRequest
                mov     eax, ebx
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACF80   endp

byte_1408ACF9C  db 14h dup(0CCh)        ; DATA XREF: .pdata:000000014011D6B4↑o

; =============== S U B R O U T I N E =======================================


sub_1408ACFB0   proc near               ; DATA XREF: .pdata:000000014011D6C0↑o
                                        ; sub_14074BC90+228↑o

arg_0           = qword ptr  8
arg_20          = qword ptr  28h

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, rdx
                mov     r8d, 64647050h
                mov     edx, 20h ; ' '
                mov     rdi, r9
                lea     ecx, [rdx-1Fh]
                call    ExAllocatePoolWithTag
                mov     rcx, rax
                test    rax, rax
                jnz     short loc_1408ACFE2
                mov     eax, 0C000009Ah
                jmp     short loc_1408AD000
; ---------------------------------------------------------------------------

loc_1408ACFE2:                          ; CODE XREF: sub_1408ACFB0+29↑j
                mov     dword ptr [rdi], 1
                movups  xmm0, xmmword ptr [rbx]
                movups  xmmword ptr [rax], xmm0
                movups  xmm1, xmmword ptr [rbx+10h]
                movups  xmmword ptr [rax+10h], xmm1
                mov     rax, [rsp+28h+arg_20]
                mov     [rax], rcx
                xor     eax, eax

loc_1408AD000:                          ; CODE XREF: sub_1408ACFB0+30↑j
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408ACFB0   endp

byte_1408AD00C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D6C0↑o

; =============== S U B R O U T I N E =======================================


sub_1408AD014   proc near               ; CODE XREF: sub_14067BFD0+1950C2↑p
                                        ; sub_14076EF7C+D9538↑p ...

var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_38          = qword ptr -38h
arg_0           = qword ptr  8
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 50h
                xor     r15d, r15d
                mov     r14b, dl
                mov     [rax+18h], r15
                mov     rbp, rcx
                mov     [rax+20h], r15
                mov     [rax-38h], r15
                call    sub_14050F188
                mov     esi, eax
                lea     r8, [rsp+78h+var_38]
                lea     rax, [rsp+78h+arg_18]
                xor     r9d, r9d
                lea     rdx, [rsp+78h+arg_10]
                mov     [rsp+78h+var_58], rax
                mov     edi, r15d
                mov     ebx, r15d
                call    sub_14050F0A0
                mov     rdx, [rsp+78h+arg_10]
                test    rdx, rdx
                jz      short loc_1408AD07B
                mov     rdi, [rdx+30h]

loc_1408AD07B:                          ; CODE XREF: sub_1408AD014+61↑j
                mov     rax, [rsp+78h+arg_18]
                test    rax, rax
                jz      short loc_1408AD099
                mov     rcx, [rax+30h]
                cmp     [rcx+18h], r15w
                jbe     short loc_1408AD099
                mov     rbx, [rcx+20h]
                jmp     short loc_1408AD0A9
; ---------------------------------------------------------------------------

loc_1408AD099:                          ; CODE XREF: sub_1408AD014+72↑j
                                        ; sub_1408AD014+7D↑j
                test    rdx, rdx
                jz      short loc_1408AD0A9
                cmp     [rdx+38h], r15w
                jbe     short loc_1408AD0A9
                mov     rbx, [rdx+40h]

loc_1408AD0A9:                          ; CODE XREF: sub_1408AD014+83↑j
                                        ; sub_1408AD014+88↑j ...
                mov     r9, [rsp+78h+var_38]
                test    r9, r9
                jz      short loc_1408AD0BC
                mov     r9, [r9+480h]
                jmp     short loc_1408AD0C4
; ---------------------------------------------------------------------------

loc_1408AD0BC:                          ; CODE XREF: sub_1408AD014+9D↑j
                call    PsGetCurrentThreadId
                mov     r9, rax

loc_1408AD0C4:                          ; CODE XREF: sub_1408AD014+A6↑j
                mov     edx, [rbp+10h]
                test    r14b, r14b
                jz      loc_1408AD162
                sub     edx, 1
                jz      short loc_1408AD135
                sub     edx, 1
                jz      short loc_1408AD123
                sub     edx, 1
                jz      short loc_1408AD111
                sub     edx, 1
                jz      short loc_1408AD0FF
                cmp     edx, 1
                jnz     loc_1408AD17B
                test    cs:byte_140C1313B, 20h
                jz      short loc_1408AD159
                lea     rdx, qword_140033FF0
                jmp     short loc_1408AD145
; ---------------------------------------------------------------------------

loc_1408AD0FF:                          ; CODE XREF: sub_1408AD014+CE↑j
                test    cs:byte_140C1313B, 20h
                jz      short loc_1408AD159
                lea     rdx, qword_140033DC0
                jmp     short loc_1408AD145
; ---------------------------------------------------------------------------

loc_1408AD111:                          ; CODE XREF: sub_1408AD014+C9↑j
                test    cs:byte_140C1313B, 20h
                jz      short loc_1408AD159
                lea     rdx, qword_140033CE0
                jmp     short loc_1408AD145
; ---------------------------------------------------------------------------

loc_1408AD123:                          ; CODE XREF: sub_1408AD014+C4↑j
                test    cs:byte_140C1313B, 20h
                jz      short loc_1408AD159
                lea     rdx, qword_140033D50
                jmp     short loc_1408AD145
; ---------------------------------------------------------------------------

loc_1408AD135:                          ; CODE XREF: sub_1408AD014+BF↑j
                test    cs:byte_140C1313B, 20h
                jz      short loc_1408AD159
                lea     rdx, qword_140033EC0

loc_1408AD145:                          ; CODE XREF: sub_1408AD014+E9↑j
                                        ; sub_1408AD014+FB↑j ...
                mov     [rsp+78h+var_48], rsi
                mov     [rsp+78h+var_50], rbx
                mov     [rsp+78h+var_58], rdi
                call    sub_14050EBD8

loc_1408AD159:                          ; CODE XREF: sub_1408AD014+E0↑j
                                        ; sub_1408AD014+F2↑j ...
                mov     byte ptr [rbp+20h], 1
                jmp     loc_1408AD1EE
; ---------------------------------------------------------------------------

loc_1408AD162:                          ; CODE XREF: sub_1408AD014+B6↑j
                sub     edx, 1
                jz      short loc_1408AD1CA
                sub     edx, 1
                jz      short loc_1408AD1B8
                sub     edx, 1
                jz      short loc_1408AD1A6
                sub     edx, 1
                jz      short loc_1408AD194
                cmp     edx, 1
                jz      short loc_1408AD182

loc_1408AD17B:                          ; CODE XREF: sub_1408AD014+D3↑j
                mov     ecx, 5
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408AD182:                          ; CODE XREF: sub_1408AD014+165↑j
                test    cs:byte_140C1313B, 40h
                jz      short loc_1408AD1EE
                lea     rdx, qword_140033EB0
                jmp     short loc_1408AD1DA
; ---------------------------------------------------------------------------

loc_1408AD194:                          ; CODE XREF: sub_1408AD014+160↑j
                test    cs:byte_140C1313B, 40h
                jz      short loc_1408AD1EE
                lea     rdx, qword_140033DF0
                jmp     short loc_1408AD1DA
; ---------------------------------------------------------------------------

loc_1408AD1A6:                          ; CODE XREF: sub_1408AD014+15B↑j
                test    cs:byte_140C1313B, 40h
                jz      short loc_1408AD1EE
                lea     rdx, qword_140033BF0
                jmp     short loc_1408AD1DA
; ---------------------------------------------------------------------------

loc_1408AD1B8:                          ; CODE XREF: sub_1408AD014+156↑j
                test    cs:byte_140C1313B, 40h
                jz      short loc_1408AD1EE
                lea     rdx, qword_140033FA0
                jmp     short loc_1408AD1DA
; ---------------------------------------------------------------------------

loc_1408AD1CA:                          ; CODE XREF: sub_1408AD014+151↑j
                test    cs:byte_140C1313B, 40h
                jz      short loc_1408AD1EE
                lea     rdx, qword_140033F00

loc_1408AD1DA:                          ; CODE XREF: sub_1408AD014+17E↑j
                                        ; sub_1408AD014+190↑j ...
                mov     [rsp+78h+var_48], rsi
                mov     [rsp+78h+var_50], rbx
                mov     [rsp+78h+var_58], rdi
                call    sub_14050EBD8

loc_1408AD1EE:                          ; CODE XREF: sub_1408AD014+149↑j
                                        ; sub_1408AD014+175↑j ...
                mov     rbx, [rsp+78h+arg_0]
                add     rsp, 50h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD014   endp

algn_1408AD203:                         ; DATA XREF: .pdata:000000014011D6CC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408AD210   proc near               ; DATA XREF: .pdata:000000014011D6D8↑o
                                        ; sub_1402B4FC0+40↑o
                push    rbx
                sub     rsp, 20h
                mov     edx, [rcx+10h]
                mov     rbx, rcx
                mov     rcx, [rcx+18h]
                call    sub_14067C1A4
                mov     dl, 1
                mov     rcx, rbx
                call    sub_1408AD014
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD210   endp

byte_1408AD236  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D6D8↑o

; =============== S U B R O U T I N E =======================================


sub_1408AD23C   proc near               ; CODE XREF: sub_1408AD420+51↓p
                                        ; DATA XREF: .pdata:000000014011D6E4↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r14
                sub     rsp, 20h
                mov     rax, [rdx]
                mov     rsi, rdx
                xor     ebx, ebx
                xor     edi, edi
                mov     r14d, r8d
                mov     rbp, rcx
                mov     r8b, 1
                lea     rdx, [rax-18h]
                cmp     rsi, rax
                jz      short loc_1408AD2BC

loc_1408AD271:                          ; CODE XREF: sub_1408AD23C+73↓j
                cmp     [rdx+10h], r14d
                jnz     short loc_1408AD2A2
                mov     rax, [rdx]
                mov     rdi, rdx
                xor     r8b, r8b
                jmp     short loc_1408AD291
; ---------------------------------------------------------------------------

loc_1408AD282:                          ; CODE XREF: sub_1408AD23C+5C↓j
                cmp     [rcx], rbp
                jz      loc_1408AD331
                ja      short loc_1408AD29C
                mov     rax, [rcx+8]

loc_1408AD291:                          ; CODE XREF: sub_1408AD23C+44↑j
                lea     rcx, [rax-8]
                cmp     rdx, rax
                jnz     short loc_1408AD282
                jmp     short loc_1408AD2A4
; ---------------------------------------------------------------------------

loc_1408AD29C:                          ; CODE XREF: sub_1408AD23C+4F↑j
                lea     rdi, [rcx+8]
                jmp     short loc_1408AD2A4
; ---------------------------------------------------------------------------

loc_1408AD2A2:                          ; CODE XREF: sub_1408AD23C+39↑j
                ja      short loc_1408AD2B3

loc_1408AD2A4:                          ; CODE XREF: sub_1408AD23C+5E↑j
                                        ; sub_1408AD23C+64↑j
                mov     rax, [rdx+18h]
                lea     rdx, [rax-18h]
                cmp     rsi, rax
                jnz     short loc_1408AD271
                jmp     short loc_1408AD2B7
; ---------------------------------------------------------------------------

loc_1408AD2B3:                          ; CODE XREF: sub_1408AD23C:loc_1408AD2A2↑j
                lea     rsi, [rdx+18h]

loc_1408AD2B7:                          ; CODE XREF: sub_1408AD23C+75↑j
                test    r8b, r8b
                jz      short loc_1408AD304

loc_1408AD2BC:                          ; CODE XREF: sub_1408AD23C+33↑j
                mov     edx, 28h ; '('
                mov     r8d, 4F706E50h
                lea     ecx, [rdx-27h]
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408AD331
                mov     [rax+10h], r14d
                add     rax, 18h
                mov     rdx, [rsi+8]
                cmp     [rdx], rsi
                jnz     loc_1408AD375
                mov     [rax], rsi
                mov     rdi, rbx
                mov     [rax+8], rdx
                mov     [rdx], rax
                mov     [rsi+8], rax
                mov     [rbx+8], rbx
                mov     [rbx], rbx

loc_1408AD304:                          ; CODE XREF: sub_1408AD23C+7E↑j
                mov     edx, 18h
                mov     r8d, 50706E50h
                lea     ecx, [rdx-17h]
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408AD34D
                test    rbx, rbx
                jz      short loc_1408AD331
                mov     edx, 4F706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408AD331:                          ; CODE XREF: sub_1408AD23C+49↑j
                                        ; sub_1408AD23C+99↑j ...
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                mov     rdi, [rsp+28h+arg_18]
                add     rsp, 20h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408AD34D:                          ; CODE XREF: sub_1408AD23C+E1↑j
                mov     rcx, rbp
                call    ObfReferenceObject
                mov     [rsi], rbp
                lea     rax, [rsi+8]
                mov     rcx, [rdi+8]
                cmp     [rcx], rdi
                jnz     short loc_1408AD375
                mov     [rax], rdi
                mov     [rax+8], rcx
                mov     [rcx], rax
                mov     [rdi+8], rax
                jmp     short loc_1408AD331
; ---------------------------------------------------------------------------

loc_1408AD375:                          ; CODE XREF: sub_1408AD23C+AA↑j
                                        ; sub_1408AD23C+127↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
sub_1408AD23C   endp

; ---------------------------------------------------------------------------
byte_1408AD37C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D6E4↑o

; =============== S U B R O U T I N E =======================================


sub_1408AD384   proc near               ; CODE XREF: sub_140731A20+1026B7↑p
                                        ; sub_1408BA96C+28↓p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                cmp     byte ptr [r8+24h], 0
                mov     rbx, r8
                mov     esi, edx
                mov     rdi, rcx
                jz      short loc_1408AD3B3
                lea     rdx, aBeginningHandl ; "Beginning handle dump:\n"
                mov     ecx, 14h
                call    sub_14050D8F4

loc_1408AD3B3:                          ; CODE XREF: sub_1408AD384+1C↑j
                and     dword ptr [rbx+20h], 0
                lea     rax, [rbx+10h]
                mov     [rax+8], rax
                mov     [rax], rax
                mov     al, [rbx+24h]
                test    al, al
                jnz     short loc_1408AD3CE
                cmp     [rbx+25h], al
                jz      short loc_1408AD409

loc_1408AD3CE:                          ; CODE XREF: sub_1408AD384+43↑j
                test    esi, esi
                jz      short loc_1408AD3F0

loc_1408AD3D2:                          ; CODE XREF: sub_1408AD384+67↓j
                mov     rax, [rdi]
                mov     r8, rbx
                mov     [rbx], rax
                mov     rcx, [rdi]
                call    sub_14050D080
                lea     rdi, [rdi+8]
                sub     rsi, 1
                jnz     short loc_1408AD3D2
                mov     al, [rbx+24h]

loc_1408AD3F0:                          ; CODE XREF: sub_1408AD384+4C↑j
                test    al, al
                jz      short loc_1408AD409
                mov     r8d, [rbx+20h]
                lea     rdx, aDumpCompleteDT ; "Dump complete - %d total handles found."...
                mov     ecx, 14h
                call    sub_14050D8F4

loc_1408AD409:                          ; CODE XREF: sub_1408AD384+48↑j
                                        ; sub_1408AD384+6E↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD384   endp

algn_1408AD41A:                         ; DATA XREF: .pdata:000000014011D6F0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408AD420   proc near               ; DATA XREF: .pdata:000000014011D6FC↑o
                                        ; sub_14050D080+2F↑o ...

var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  8
arg_20          = qword ptr  28h

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 30h
                mov     rbx, [rsp+38h+arg_20]
                mov     rdi, rdx
                cmp     byte ptr [rbx+24h], 0
                jz      short loc_1408AD45D
                mov     [rsp+38h+var_10], r9
                mov     r9, [rdx+440h]
                lea     rdx, aDeviceobjectPP ; "  DeviceObject:%p ProcessID:%dT FileObj"...
                mov     [rsp+38h+var_18], r8
                mov     r8, rcx
                mov     ecx, 14h
                call    sub_14050D8F4

loc_1408AD45D:                          ; CODE XREF: sub_1408AD420+16↑j
                cmp     byte ptr [rbx+25h], 0
                jz      short loc_1408AD476
                mov     r8d, [rdi+440h]
                lea     rdx, [rbx+10h]
                mov     rcx, [rbx]
                call    sub_1408AD23C

loc_1408AD476:                          ; CODE XREF: sub_1408AD420+41↑j
                inc     dword ptr [rbx+20h]
                mov     rbx, [rsp+38h+arg_0]
                xor     eax, eax
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD420   endp

algn_1408AD487:                         ; DATA XREF: .pdata:000000014011D6FC↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408AD490   proc near               ; CODE XREF: sub_1407318AC+1026AA↑p
                                        ; sub_1407318AC+102755↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 20h
                mov     rax, [rcx+30h]
                xor     ebx, ebx
                mov     rdi, r8
                mov     ebp, edx
                mov     rsi, rcx
                test    rax, rax
                jz      short loc_1408AD4B9
                mov     [rax], edx

loc_1408AD4B9:                          ; CODE XREF: sub_1408AD490+25↑j
                mov     rcx, [rcx+38h]
                test    rcx, rcx
                jz      short loc_1408AD4CF
                test    rdi, rdi
                jz      short loc_1408AD4CF
                mov     rdx, rdi
                call    RtlCopyUnicodeString

loc_1408AD4CF:                          ; CODE XREF: sub_1408AD490+30↑j
                                        ; sub_1408AD490+35↑j
                mov     eax, [rsi+90h]
                test    al, 8
                jz      short loc_1408AD50F
                cmp     ebp, 6
                jnz     short loc_1408AD50F
                mov     rax, [rdi+8]
                movzx   ecx, word ptr [rdi]
                add     rcx, rax
                cmp     rax, rcx
                jnb     short loc_1408AD50F

loc_1408AD4ED:                          ; CODE XREF: sub_1408AD490+71↓j
                cmp     word ptr [rax], 5Ch ; '\'
                jnz     short loc_1408AD4FA
                inc     ebx
                cmp     ebx, 3
                jz      short loc_1408AD508

loc_1408AD4FA:                          ; CODE XREF: sub_1408AD490+61↑j
                add     rax, 2
                cmp     rax, rcx
                jb      short loc_1408AD4ED
                cmp     ebx, 3
                jnz     short loc_1408AD50F

loc_1408AD508:                          ; CODE XREF: sub_1408AD490+68↑j
                sub     ax, [rdi+8]
                mov     [rdi], ax

loc_1408AD50F:                          ; CODE XREF: sub_1408AD490+47↑j
                                        ; sub_1408AD490+4C↑j ...
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD490   endp

byte_1408AD525  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D708↑o

; =============== S U B R O U T I N E =======================================


sub_1408AD52C   proc near               ; CODE XREF: sub_14072EAB8+1044DD↑p
                                        ; DATA XREF: .pdata:000000014011D714↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, rcx
                xor     edi, edi
                mov     rcx, cs:qword_140D2D050
                add     rcx, 40h ; '@'
                call    ExAcquireFastMutex
                mov     rax, [rbx]
                cmp     rax, rbx
                jz      short loc_1408AD587
                cmp     [rax+8], rbx
                jnz     short loc_1408AD5A5
                mov     rcx, [rbx+8]
                cmp     [rcx], rbx
                jnz     short loc_1408AD5A5
                mov     [rcx], rax
                mov     edi, 1
                mov     [rax+8], rcx
                or      eax, 0FFFFFFFFh
                lock xadd [rbx+40h], eax
                cmp     eax, edi
                jnz     short loc_1408AD587
                mov     edx, 4B706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408AD587:                          ; CODE XREF: sub_1408AD52C+25↑j
                                        ; sub_1408AD52C+4C↑j
                mov     rcx, cs:qword_140D2D050
                add     rcx, 40h ; '@'
                call    KeReleaseGuardedMutex
                mov     rbx, [rsp+28h+arg_0]
                mov     eax, edi
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408AD5A5:                          ; CODE XREF: sub_1408AD52C+2B↑j
                                        ; sub_1408AD52C+34↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
sub_1408AD52C   endp

; ---------------------------------------------------------------------------
byte_1408AD5AC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D714↑o

; =============== S U B R O U T I N E =======================================


sub_1408AD5B4   proc near               ; CODE XREF: sub_14073E18C+B4431↑p
                                        ; DATA XREF: .pdata:000000014011D720↑o
                push    rbx
                sub     rsp, 20h
                cmp     cs:dword_140C44D24, 0
                mov     rbx, rcx
                jz      short loc_1408AD5CD
                mov     eax, 0C0000189h
                jmp     short loc_1408AD616
; ---------------------------------------------------------------------------

loc_1408AD5CD:                          ; CODE XREF: sub_1408AD5B4+10↑j
                mov     ecx, 0C0h
                call    sub_14069ECE4
                test    rax, rax
                jnz     short loc_1408AD5E3
                mov     eax, 0C000009Ah
                jmp     short loc_1408AD616
; ---------------------------------------------------------------------------

loc_1408AD5E3:                          ; CODE XREF: sub_1408AD5B4+26↑j
                movups  xmm0, cs:xmmword_140033B50
                mov     dword ptr [rax+80h], 7
                mov     rcx, rax
                mov     dword ptr [rax+94h], 50h ; 'P'
                movdqu  xmmword ptr [rax+70h], xmm0
                movups  xmm0, xmmword ptr [rbx]
                movdqu  xmmword ptr [rax+0A0h], xmm0
                call    sub_1406A03AC

loc_1408AD616:                          ; CODE XREF: sub_1408AD5B4+17↑j
                                        ; sub_1408AD5B4+2D↑j
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD5B4   endp

byte_1408AD61D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D720↑o

; =============== S U B R O U T I N E =======================================


sub_1408AD624   proc near               ; CODE XREF: sub_1408A3C30+11D↑p
                                        ; DATA XREF: .pdata:000000014011D72C↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r14
                sub     rsp, 20h
                xor     r14d, r14d
                mov     rsi, rcx
                cmp     cs:dword_140C44D24, r14d
                jz      short loc_1408AD656
                mov     eax, 0C0000189h
                jmp     loc_1408AD70C
; ---------------------------------------------------------------------------

loc_1408AD656:                          ; CODE XREF: sub_1408AD624+26↑j
                test    rsi, rsi
                jz      short loc_1408AD668
                mov     rax, [rcx+138h]
                mov     rdi, [rax+28h]
                jmp     short loc_1408AD66B
; ---------------------------------------------------------------------------

loc_1408AD668:                          ; CODE XREF: sub_1408AD624+35↑j
                mov     rdi, r14

loc_1408AD66B:                          ; CODE XREF: sub_1408AD624+42↑j
                movzx   ebp, word ptr [rdi+28h]
                add     ebp, 52h ; 'R'
                lea     ecx, [rbp+70h]
                call    sub_14069ECE4
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1408AD68C
                mov     eax, 0C000009Ah
                jmp     loc_1408AD70C
; ---------------------------------------------------------------------------

loc_1408AD68C:                          ; CODE XREF: sub_1408AD624+5C↑j
                mov     edx, 56706E50h
                mov     rcx, rsi
                call    ObfReferenceObjectWithTag
                mov     [rbx+18h], r14
                mov     [rbx+10h], r14
                mov     [rbx+30h], r14
                mov     [rbx+38h], r14
                movups  xmm0, cs:xmmword_140033BA0
                mov     dword ptr [rbx+80h], 1
                mov     [rbx+88h], r14
                movdqu  xmmword ptr [rbx+70h], xmm0
                mov     [rbx+90h], r14d
                mov     [rbx+94h], ebp
                mov     [rbx+98h], rsi
                mov     rdx, [rdi+30h]
                test    rdx, rdx
                jz      short loc_1408AD6F4
                movzx   r8d, word ptr [rdi+28h]
                lea     rcx, [rbx+0A0h]
                call    memmove

loc_1408AD6F4:                          ; CODE XREF: sub_1408AD624+BD↑j
                movzx   eax, word ptr [rdi+28h]
                mov     rcx, rbx
                shr     rax, 1
                mov     [rbx+rax*2+0A0h], r14w
                call    sub_1406A03AC

loc_1408AD70C:                          ; CODE XREF: sub_1408AD624+2D↑j
                                        ; sub_1408AD624+63↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                mov     rdi, [rsp+28h+arg_18]
                add     rsp, 20h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD624   endp

algn_1408AD728:                         ; DATA XREF: .pdata:000000014011D72C↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408AD730   proc near               ; CODE XREF: sub_1408A1518+C1↑p
                                        ; sub_1408A1518+F1↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_20          = qword ptr  28h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 20h
                cmp     cs:dword_140C44D24, 0
                mov     rbx, r9
                mov     rdi, r8
                mov     rsi, rdx
                mov     rbp, rcx
                jz      short loc_1408AD760
                mov     eax, 0C0000189h
                jmp     short loc_1408AD7B0
; ---------------------------------------------------------------------------

loc_1408AD760:                          ; CODE XREF: sub_1408AD730+27↑j
                mov     ecx, 0C0h
                call    sub_14069ECE4
                mov     rcx, rax
                test    rax, rax
                jnz     short loc_1408AD779
                mov     eax, 0C000009Ah
                jmp     short loc_1408AD7B0
; ---------------------------------------------------------------------------

loc_1408AD779:                          ; CODE XREF: sub_1408AD730+40↑j
                and     dword ptr [rcx+80h], 0
                mov     [rax+18h], rsi
                mov     [rax+30h], rbx
                mov     rax, [rsp+28h+arg_20]
                mov     [rcx+38h], rax
                movups  xmm0, xmmword ptr [rbp+0]
                mov     dword ptr [rcx+94h], 50h ; 'P'
                mov     [rcx+88h], rdi
                movdqu  xmmword ptr [rcx+70h], xmm0
                call    sub_1406A03AC

loc_1408AD7B0:                          ; CODE XREF: sub_1408AD730+2E↑j
                                        ; sub_1408AD730+47↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD730   endp

byte_1408AD7C6  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D738↑o

; =============== S U B R O U T I N E =======================================


sub_1408AD7CC   proc near               ; CODE XREF: sub_140735D48+B8883↑p
                                        ; sub_140762970+E0C02↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 20h
                xor     ebp, ebp
                mov     rsi, rcx
                cmp     cs:dword_140C44D24, ebp
                jz      short loc_1408AD7F4
                mov     eax, 0C0000189h
                jmp     short loc_1408AD865
; ---------------------------------------------------------------------------

loc_1408AD7F4:                          ; CODE XREF: sub_1408AD7CC+1F↑j
                movzx   ebx, word ptr [rcx]
                add     ebx, 52h ; 'R'
                lea     ecx, [rbx+70h]
                call    sub_14069ECE4
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408AD811
                mov     eax, 0C000009Ah
                jmp     short loc_1408AD865
; ---------------------------------------------------------------------------

loc_1408AD811:                          ; CODE XREF: sub_1408AD7CC+3C↑j
                movups  xmm0, cs:xmmword_140033B60
                mov     dword ptr [rax+80h], 8
                lea     rcx, [rax+0A0h]
                mov     [rax+94h], ebx
                movdqu  xmmword ptr [rax+70h], xmm0
                movzx   r8d, word ptr [rsi]
                mov     rdx, [rsi+8]
                call    memmove
                movzx   eax, word ptr [rsi]
                mov     rcx, rdi
                shr     rax, 1
                mov     [rdi+rax*2+0A0h], bp
                movzx   eax, word ptr [rsi]
                shr     rax, 1
                mov     [rdi+rax*2+0A2h], bp
                call    sub_1406A03AC

loc_1408AD865:                          ; CODE XREF: sub_1408AD7CC+26↑j
                                        ; sub_1408AD7CC+43↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD7CC   endp

byte_1408AD87B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D744↑o

; =============== S U B R O U T I N E =======================================


sub_1408AD884   proc near               ; CODE XREF: sub_1408A11E0+54↑p
                                        ; sub_1408B5EAC+75↓p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = dword ptr  28h
arg_28          = qword ptr  30h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 20h
                xor     r12d, r12d
                mov     r14, r9
                cmp     cs:dword_140C44D24, r12d
                mov     ebp, ecx
                jz      short loc_1408AD8BC
                mov     eax, 0C0000189h
                jmp     loc_1408AD9CA
; ---------------------------------------------------------------------------

loc_1408AD8BC:                          ; CODE XREF: sub_1408AD884+2C↑j
                mov     rax, [r9+138h]
                mov     rbx, [rax+28h]
                test    rbx, rbx
                jnz     short loc_1408AD8D6
                mov     eax, 0C00000F0h
                jmp     loc_1408AD9CA
; ---------------------------------------------------------------------------

loc_1408AD8D6:                          ; CODE XREF: sub_1408AD884+46↑j
                mov     rsi, [rsp+38h+arg_28]
                test    rsi, rsi
                jz      short loc_1408AD8E5
                movzx   ecx, word ptr [rsi]
                jmp     short loc_1408AD8E8
; ---------------------------------------------------------------------------

loc_1408AD8E5:                          ; CODE XREF: sub_1408AD884+5A↑j
                mov     ecx, r12d

loc_1408AD8E8:                          ; CODE XREF: sub_1408AD884+5F↑j
                movzx   r15d, word ptr [rbx+28h]
                add     r15d, 54h ; 'T'
                add     r15d, ecx
                lea     ecx, [r15+70h]
                call    sub_14069ECE4
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408AD90F
                mov     eax, 0C000009Ah
                jmp     loc_1408AD9CA
; ---------------------------------------------------------------------------

loc_1408AD90F:                          ; CODE XREF: sub_1408AD884+7F↑j
                mov     edx, 56706E50h
                mov     rcx, r14
                call    ObfReferenceObjectWithTag
                mov     eax, [rsp+38h+arg_20]
                lea     rcx, [rdi+0A4h]
                mov     [rdi+0A0h], eax
                mov     [rdi+18h], r12
                mov     [rdi+94h], r15d
                mov     [rdi+98h], r14
                mov     [rdi+88h], r12
                movzx   r8d, word ptr [rbx+28h]
                mov     rdx, [rbx+30h]
                call    memmove
                movzx   eax, word ptr [rbx+28h]
                shr     rax, 1
                mov     [rdi+rax*2+0A4h], r12w
                test    rsi, rsi
                jz      short loc_1408AD990
                movzx   r8d, word ptr [rsi]
                lea     rbx, [rdi+rax*2]
                mov     rdx, [rsi+8]
                lea     rcx, [rbx+0A6h]
                call    memmove
                movzx   eax, word ptr [rsi]
                shr     rax, 1
                mov     [rbx+rax*2+0A6h], r12w

loc_1408AD990:                          ; CODE XREF: sub_1408AD884+E3↑j
                cmp     ebp, 7
                jnz     short loc_1408AD99E
                movups  xmm0, cs:xmmword_140033B80
                jmp     short loc_1408AD9B3
; ---------------------------------------------------------------------------

loc_1408AD99E:                          ; CODE XREF: sub_1408AD884+10F↑j
                cmp     ebp, 3
                jnz     short loc_1408AD9AC
                movups  xmm0, cs:xmmword_140033B70
                jmp     short loc_1408AD9B3
; ---------------------------------------------------------------------------

loc_1408AD9AC:                          ; CODE XREF: sub_1408AD884+11D↑j
                movups  xmm0, cs:xmmword_140033B90

loc_1408AD9B3:                          ; CODE XREF: sub_1408AD884+118↑j
                                        ; sub_1408AD884+126↑j
                mov     rcx, rdi
                mov     dword ptr [rdi+80h], 6
                movdqu  xmmword ptr [rdi+70h], xmm0
                call    sub_1406A03AC

loc_1408AD9CA:                          ; CODE XREF: sub_1408AD884+33↑j
                                        ; sub_1408AD884+4D↑j ...
                mov     rbx, [rsp+38h+arg_0]
                mov     rbp, [rsp+38h+arg_8]
                mov     rsi, [rsp+38h+arg_10]
                mov     rdi, [rsp+38h+arg_18]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r12
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AD884   endp

algn_1408AD9EA:                         ; DATA XREF: .pdata:000000014011D750↑o
                align 10h
; [00000B61 BYTES: COLLAPSED FUNCTION NaptrDnsRecordConvert_1. PRESS CTRL-NUMPAD+ TO EXPAND]
algn_1408AE551:                         ; DATA XREF: .pdata:000000014011D75C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408AE560   proc near               ; DATA XREF: .pdata:000000014011D768↑o
                                        ; sub_1408AEAB4+19E↓o

arg_0           = dword ptr  8
arg_8           = dword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+18h], rbx
                mov     [rax+20h], rsi
                push    rdi
                sub     rsp, 20h
                mov     rbx, [rcx+20h]
                mov     rsi, rdx
                mov     rdi, [rdx+8]
                mov     rcx, rbx
                mov     dl, [rdx]
                and     dword ptr [rax+8], 0
                and     dword ptr [rax+10h], 0
                call    sub_1408AF3A0
                mov     rcx, rbx
                test    al, al
                jz      short loc_1408AE59F
                lea     rdx, [rdi+18h]
                call    sub_1408AE5E4
                jmp     short loc_1408AE5CA
; ---------------------------------------------------------------------------

loc_1408AE59F:                          ; CODE XREF: sub_1408AE560+32↑j
                mov     dl, [rsi]
                lea     r9, [rsp+28h+arg_0]
                lea     r8, [rsp+28h+arg_8]
                call    sub_1408AF458
                test    al, al
                jz      short loc_1408AE5C8
                mov     r8d, [rsp+28h+arg_0]
                lea     r9, [rdi+10h]
                mov     edx, [rsp+28h+arg_8]
                call    sub_1408AE7E4
                jmp     short loc_1408AE5CA
; ---------------------------------------------------------------------------

loc_1408AE5C8:                          ; CODE XREF: sub_1408AE560+52↑j
                xor     eax, eax

loc_1408AE5CA:                          ; CODE XREF: sub_1408AE560+3D↑j
                                        ; sub_1408AE560+66↑j
                mov     rbx, [rsp+28h+arg_10]
                mov     rsi, [rsp+28h+arg_18]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AE560   endp

byte_1408AE5DB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D768↑o

; =============== S U B R O U T I N E =======================================


sub_1408AE5E4   proc near               ; CODE XREF: sub_1408AE560+38↑p
                                        ; DATA XREF: .pdata:000000014011D774↑o

arg_0           = dword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                push    rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 28h
                and     [rsp+68h+arg_8], 0
                mov     r12, rdx
                mov     rbx, [rdx]
                mov     r14, rbx
                test    rcx, rcx
                jz      short loc_1408AE616
                mov     rax, [rcx+138h]
                mov     rbp, [rax+28h]
                jmp     short loc_1408AE618
; ---------------------------------------------------------------------------

loc_1408AE616:                          ; CODE XREF: sub_1408AE5E4+23↑j
                xor     ebp, ebp

loc_1408AE618:                          ; CODE XREF: sub_1408AE5E4+30↑j
                mov     rbp, [rbp+1A0h]
                test    rbp, rbp
                jnz     short loc_1408AE681
                mov     rcx, cs:qword_140C43328
                mov     edx, 278h
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                lea     edx, [rbp+6]
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51FCh], eax

loc_1408AE655:                          ; CODE XREF: sub_1408AE5E4+A8↓j
                                        ; sub_1408AE5E4+199↓j
                mov     [r12], rbx
                cmp     rbx, r14
                jz      short loc_1408AE66B
                mov     edx, 51706E50h
                mov     rcx, r14
                call    ExFreePoolWithTag

loc_1408AE66B:                          ; CODE XREF: sub_1408AE5E4+78↑j
                xor     edi, edi

loc_1408AE66D:                          ; CODE XREF: sub_1408AE5E4+1DF↓j
                                        ; sub_1408AE5E4+1F2↓j
                mov     eax, edi
                add     rsp, 28h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408AE681:                          ; CODE XREF: sub_1408AE5E4+3E↑j
                xor     r15d, r15d
                lea     rsi, [rbp+4]
                cmp     [rbp+0], r15d
                jbe     short loc_1408AE655

loc_1408AE68E:                          ; CODE XREF: sub_1408AE5E4+193↓j
                xor     edi, edi
                cmp     [rsi+0Ch], edi
                jbe     loc_1408AE76A

loc_1408AE699:                          ; CODE XREF: sub_1408AE5E4+180↓j
                lea     rax, [rdi+1]
                lea     rax, [rdi+rax*4]
                lea     rax, [rsi+rax*4]
                mov     [rsp+68h+arg_18], rax
                mov     al, [rax]
                sub     al, 3
                test    al, 0FBh
                jnz     loc_1408AE75F
                mov     r13d, [rbx+4]
                cmp     r13d, [rbx]
                jnz     short loc_1408AE729
                lea     eax, [r13+4]
                mov     ecx, 200h
                lea     edx, [rax+1]
                mov     [rsp+68h+arg_0], eax
                shl     edx, 4
                mov     r8d, 51706E50h
                call    ExAllocatePoolWithTag
                mov     [rsp+68h+arg_10], rax
                test    rax, rax
                jz      loc_1408AE782
                lea     r8d, [r13+1]
                mov     rdx, rbx
                shl     r8d, 4
                mov     rcx, rax
                call    memmove
                mov     r13, [rsp+68h+arg_10]
                mov     eax, [rsp+68h+arg_0]
                mov     [r13+0], eax
                cmp     rbx, r14
                jz      short loc_1408AE726
                mov     edx, 51706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408AE726:                          ; CODE XREF: sub_1408AE5E4+133↑j
                mov     rbx, r13

loc_1408AE729:                          ; CODE XREF: sub_1408AE5E4+DC↑j
                mov     rcx, [rsp+68h+arg_18]
                lea     rdx, [rsp+68h+arg_8]
                call    RtlCmDecodeMemIoResource
                mov     edx, [rbx+4]
                mov     rcx, [rsp+68h+arg_8]
                inc     rdx
                add     rdx, rdx
                mov     [rbx+rdx*8], rcx
                mov     ecx, [rbx+4]
                add     rcx, rcx
                mov     [rbx+rcx*8+18h], rax
                add     [rbx+8], rax
                inc     dword ptr [rbx+4]

loc_1408AE75F:                          ; CODE XREF: sub_1408AE5E4+CF↑j
                inc     edi
                cmp     edi, [rsi+0Ch]
                jb      loc_1408AE699

loc_1408AE76A:                          ; CODE XREF: sub_1408AE5E4+AF↑j
                lea     ecx, [rdi+24h]
                inc     r15d
                add     rsi, rcx
                cmp     r15d, [rbp+0]
                jb      loc_1408AE68E
                jmp     loc_1408AE655
; ---------------------------------------------------------------------------

loc_1408AE782:                          ; CODE XREF: sub_1408AE5E4+107↑j
                mov     rcx, cs:qword_140C43328
                mov     edx, 2A0h
                mov     r8d, 0Ah
                mov     edi, 0C000009Ah
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, r8d
                mov     [rcx+51FCh], eax
                mov     [r12], r14
                cmp     rbx, r14
                jz      loc_1408AE66D
                mov     edx, 51706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag
                jmp     loc_1408AE66D
sub_1408AE5E4   endp

; ---------------------------------------------------------------------------
byte_1408AE7DB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D774↑o

; =============== S U B R O U T I N E =======================================


sub_1408AE7E4   proc near               ; CODE XREF: sub_1408AE560+61↑p
                                        ; DATA XREF: .pdata:000000014011D780↑o

arg_0           = word ptr  8
arg_2           = byte ptr  0Ah
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rbp
                mov     [rax+8], rcx
                push    rsi
                push    rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 20h
                mov     rbx, [r9]
                mov     rsi, r9
                and     dword ptr [rax+8], 0
                mov     r14d, r8d
                mov     edi, edx
                mov     eax, [rbx+10h]
                cmp     eax, [rbx+0Ch]
                jnz     loc_1408AE8A0
                lea     r15d, [rax+4]
                mov     ecx, 200h
                lea     edx, ds:14h[r15*4]
                mov     r8d, 51706E50h
                lea     r12d, ds:14h[rax*4]
                call    ExAllocatePoolWithTag
                mov     rbp, rax
                test    rax, rax
                jnz     short loc_1408AE87E
                mov     rcx, cs:qword_140C43328
                mov     edx, 330h
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                lea     edx, [rbp+0Ah]
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51FCh], eax
                mov     eax, 0C000009Ah
                jmp     short loc_1408AE8DB
; ---------------------------------------------------------------------------

loc_1408AE87E:                          ; CODE XREF: sub_1408AE7E4+60↑j
                mov     r8d, r12d
                mov     rdx, rbx
                mov     rcx, rbp
                call    memmove
                mov     edx, 51706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag
                mov     rbx, rbp
                mov     [rbp+0Ch], r15d

loc_1408AE8A0:                          ; CODE XREF: sub_1408AE7E4+30↑j
                cmp     edi, 0FFFFFFFFh
                jz      short loc_1408AE8CB
                lea     rdx, [rsp+48h+arg_0]
                mov     ecx, edi
                call    KeGetProcessorNumberFromIndex
                movzx   r8d, [rsp+48h+arg_0]
                mov     rdx, [rbx]
                movzx   eax, [rsp+48h+arg_2]
                mov     rcx, [rdx+r8*8]
                bts     rcx, rax
                mov     [rdx+r8*8], rcx

loc_1408AE8CB:                          ; CODE XREF: sub_1408AE7E4+BF↑j
                mov     eax, [rbx+10h]
                mov     [rbx+rax*4+14h], r14d
                inc     dword ptr [rbx+10h]
                xor     eax, eax
                mov     [rsi], rbx

loc_1408AE8DB:                          ; CODE XREF: sub_1408AE7E4+98↑j
                mov     rbx, [rsp+48h+arg_8]
                mov     rbp, [rsp+48h+arg_10]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rsi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AE7E4   endp

byte_1408AE8F3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D780↑o

; =============== S U B R O U T I N E =======================================


sub_1408AE8FC   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+818↑p
                                        ; DATA XREF: .pdata:000000014011D78C↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rbp
                mov     [rax+20h], rsi
                mov     [rax+8], rcx
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 20h
                lea     eax, [r8+r8*2]
                mov     r14d, r8d
                shl     eax, 3
                mov     r13, rdx
                mov     edi, 200h
                mov     edx, eax
                mov     r8d, 51706E50h
                mov     ebx, eax
                mov     ecx, edi
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408AE951
                mov     ebx, 0C000009Ah
                jmp     loc_1408AEA5F
; ---------------------------------------------------------------------------

loc_1408AE951:                          ; CODE XREF: sub_1408AE8FC+49↑j
                mov     r8d, 51706E50h
                mov     rdx, rbx
                mov     ecx, edi
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408AE970
                mov     ebx, 0C000009Ah
                jmp     short loc_1408AE9D8
; ---------------------------------------------------------------------------

loc_1408AE970:                          ; CODE XREF: sub_1408AE8FC+6B↑j
                mov     r8, rbx
                xor     edx, edx
                mov     rcx, rsi
                call    memset
                mov     r8, rbx
                xor     edx, edx
                mov     rcx, rdi
                call    memset
                xor     ebp, ebp
                test    r14d, r14d
                jz      short loc_1408AE9D2

loc_1408AE991:                          ; CODE XREF: sub_1408AE8FC+D4↓j
                lea     r12, ds:0[rbp*2]
                mov     ecx, 2
                add     r12, rbp
                lea     r15, [rsi+r12*8]
                mov     rdx, r15
                call    sub_1408AF2D4
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408AE9D8
                lea     rdx, [rdi+r12*8]
                mov     ecx, 802h
                call    sub_1408AF2D4
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AEA7F
                inc     ebp
                cmp     ebp, r14d
                jb      short loc_1408AE991

loc_1408AE9D2:                          ; CODE XREF: sub_1408AE8FC+93↑j
                xor     ebx, ebx

loc_1408AE9D4:                          ; CODE XREF: sub_1408AE8FC+18B↓j
                test    ebx, ebx
                jns     short loc_1408AEA53

loc_1408AE9D8:                          ; CODE XREF: sub_1408AE8FC+72↑j
                                        ; sub_1408AE8FC+B5↑j
                test    rdi, rdi
                jz      loc_1408AEA8C
                cmp     qword ptr [rsi], 0
                jz      loc_1408AEA8C
                cmp     qword ptr [rdi], 0
                jz      loc_1408AEA8C
                mov     rdx, cs:qword_140C43328
                mov     eax, [rdx+0B4h]
                lea     rcx, [rax+rax*2]
                cmp     qword ptr [rsi+rcx*8], 0
                jnz     short loc_1408AEA51
                movups  xmm0, xmmword ptr [rsi]
                movups  xmmword ptr [rsi+rcx*8], xmm0
                movsd   xmm1, qword ptr [rsi+10h]
                movsd   qword ptr [rsi+rcx*8+10h], xmm1
                mov     eax, [rdx+0B4h]
                movups  xmm0, xmmword ptr [rdi]
                lea     rcx, [rax+rax*2]
                xor     eax, eax
                movups  xmmword ptr [rdi+rcx*8], xmm0
                movsd   xmm1, qword ptr [rdi+10h]
                xorps   xmm0, xmm0
                movsd   qword ptr [rdi+rcx*8+10h], xmm1
                xorps   xmm1, xmm1
                movups  xmmword ptr [rsi], xmm0
                mov     [rsi+10h], rax
                movups  xmmword ptr [rdi], xmm1
                mov     [rdi+10h], rax

loc_1408AEA51:                          ; CODE XREF: sub_1408AE8FC+10F↑j
                xor     ebx, ebx

loc_1408AEA53:                          ; CODE XREF: sub_1408AE8FC+DA↑j
                mov     rax, [rsp+48h+arg_0]
                mov     [rax], rsi
                mov     [r13+0], rdi

loc_1408AEA5F:                          ; CODE XREF: sub_1408AE8FC+50↑j
                                        ; sub_1408AE8FC+1A0↓j ...
                mov     rbp, [rsp+48h+arg_10]
                mov     eax, ebx
                mov     rbx, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_18]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408AEA7F:                          ; CODE XREF: sub_1408AE8FC+C9↑j
                mov     rcx, r15
                call    sub_1408AEE50
                jmp     loc_1408AE9D4
; ---------------------------------------------------------------------------

loc_1408AEA8C:                          ; CODE XREF: sub_1408AE8FC+DF↑j
                                        ; sub_1408AE8FC+E9↑j ...
                mov     edx, 51706E50h
                mov     rcx, rsi
                call    ExFreePoolWithTag
                test    rdi, rdi
                jz      short loc_1408AEA5F
                mov     edx, 51706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag
                jmp     short loc_1408AEA5F
sub_1408AE8FC   endp

; ---------------------------------------------------------------------------
byte_1408AEAAD  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D78C↑o

; =============== S U B R O U T I N E =======================================


sub_1408AEAB4   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+6BF↑p
                                        ; DATA XREF: .pdata:000000014011D798↑o

var_38          = byte ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 40h
                mov     rsi, rdx
                mov     rdi, rcx
                xorps   xmm0, xmm0
                xorps   xmm1, xmm1
                mov     r14d, 51706E50h
                mov     r15d, 24h ; '$'
                mov     ebx, 200h
                mov     r8d, r14d
                mov     edx, r15d
                mov     ecx, ebx
                movups  xmmword ptr [rax-28h], xmm0
                movups  xmmword ptr [rax-38h], xmm1
                call    ExAllocatePoolWithTag
                mov     [rdi+10h], rax
                test    rax, rax
                jnz     short loc_1408AEB45
                mov     edx, 400h

loc_1408AEB0D:                          ; CODE XREF: sub_1408AEAB4+C7↓j
                                        ; sub_1408AEAB4+10E↓j ...
                mov     rcx, cs:qword_140C43328
                mov     ebx, 0C000009Ah
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 0Ah

loc_1408AEB29:                          ; CODE XREF: sub_1408AEAB4+2AD↓j
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51FCh], eax
                jmp     loc_1408AEDBE
; ---------------------------------------------------------------------------

loc_1408AEB45:                          ; CODE XREF: sub_1408AEAB4+52↑j
                xor     ecx, ecx
                xorps   xmm0, xmm0
                movups  xmmword ptr [rax], xmm0
                mov     r8d, r14d
                mov     rdx, r15
                movups  xmmword ptr [rax+10h], xmm0
                mov     [rax+20h], ecx
                lea     r12d, [rcx+4]
                mov     rax, [rdi+10h]
                mov     ecx, ebx
                mov     [rax+0Ch], r12d
                call    ExAllocatePoolWithTag
                mov     [rsi+10h], rax
                test    rax, rax
                jnz     short loc_1408AEB7D
                mov     edx, 40Dh
                jmp     short loc_1408AEB0D
; ---------------------------------------------------------------------------

loc_1408AEB7D:                          ; CODE XREF: sub_1408AEAB4+C0↑j
                xorps   xmm0, xmm0
                xor     ecx, ecx
                movups  xmmword ptr [rax], xmm0
                mov     r15d, 0A0h
                mov     r8d, r14d
                movups  xmmword ptr [rax+10h], xmm0
                mov     [rax+20h], ecx
                mov     edx, r15d
                mov     rax, [rsi+10h]
                mov     ecx, ebx
                mov     [rax+0Ch], r12d
                call    ExAllocatePoolWithTag
                mov     rcx, rax
                mov     rax, [rdi+10h]
                mov     [rax], rcx
                mov     rax, [rdi+10h]
                mov     rcx, [rax]
                test    rcx, rcx
                jnz     short loc_1408AEBC7
                mov     edx, 421h
                jmp     loc_1408AEB0D
; ---------------------------------------------------------------------------

loc_1408AEBC7:                          ; CODE XREF: sub_1408AEAB4+107↑j
                mov     r8, r15
                xor     edx, edx
                call    memset
                mov     rax, [rdi+10h]
                mov     r15d, 50h ; 'P'
                mov     r8d, r14d
                mov     edx, r15d
                mov     ecx, ebx
                mov     dword ptr [rax+8], 14h
                call    ExAllocatePoolWithTag
                mov     [rdi+18h], rax
                test    rax, rax
                jnz     short loc_1408AEC02
                mov     edx, 434h
                jmp     loc_1408AEB0D
; ---------------------------------------------------------------------------

loc_1408AEC02:                          ; CODE XREF: sub_1408AEAB4+142↑j
                mov     r8d, r14d
                mov     rdx, r15
                mov     ecx, ebx
                call    ExAllocatePoolWithTag
                mov     [rsi+18h], rax
                test    rax, rax
                jnz     short loc_1408AEC22
                mov     edx, 43Fh
                jmp     loc_1408AEB0D
; ---------------------------------------------------------------------------

loc_1408AEC22:                          ; CODE XREF: sub_1408AEAB4+162↑j
                mov     rcx, [rdi+18h]
                mov     r8, r15
                xor     edx, edx
                call    memset
                mov     rcx, [rsi+18h]
                mov     r8, r15
                xor     edx, edx
                call    memset
                mov     rax, [rdi+18h]
                mov     r15d, 1
                mov     [rax], r12d
                mov     rax, [rsi+18h]
                mov     [rax], r12d
                lea     rax, sub_1408AE560
                mov     [rsp+58h+var_28], rax
                lea     rax, [rsp+58h+var_38]
                mov     [rsp+58h+var_20], rax
                mov     rax, [rdi]
                mov     [rsp+58h+var_30], rdi
                mov     [rsp+58h+var_38], r15b
                test    rax, rax
                jz      short loc_1408AEC87
                mov     rax, [rax+138h]
                mov     rcx, [rax+28h]
                jmp     short loc_1408AEC89
; ---------------------------------------------------------------------------

loc_1408AEC87:                          ; CODE XREF: sub_1408AEAB4+1C4↑j
                xor     ecx, ecx

loc_1408AEC89:                          ; CODE XREF: sub_1408AEAB4+1D1↑j
                lea     r8, [rsp+58h+var_28]
                call    sub_140719AB8
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AECCD
                mov     rdx, cs:qword_140C43328
                mov     eax, 456h
                mov     ecx, [rdx+51F8h]
                test    ecx, ecx
                cmovz   ecx, eax
                mov     [rdx+51F8h], ecx
                mov     ecx, [rdx+51FCh]
                test    ecx, ecx
                cmovz   ecx, r15d
                mov     [rdx+51FCh], ecx
                jmp     loc_1408AEDBA
; ---------------------------------------------------------------------------

loc_1408AECCD:                          ; CODE XREF: sub_1408AEAB4+1E3↑j
                mov     rax, [rsi]
                mov     [rsp+58h+var_30], rsi
                mov     [rsp+58h+var_38], 0
                test    rax, rax
                jz      short loc_1408AECEC
                mov     rax, [rax+138h]
                mov     rcx, [rax+28h]
                jmp     short loc_1408AECEE
; ---------------------------------------------------------------------------

loc_1408AECEC:                          ; CODE XREF: sub_1408AEAB4+229↑j
                xor     ecx, ecx

loc_1408AECEE:                          ; CODE XREF: sub_1408AEAB4+236↑j
                lea     r8, [rsp+58h+var_28]
                call    sub_140719AB8
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AED2C
                mov     rcx, cs:qword_140C43328
                mov     edx, 461h
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, r15d
                jmp     loc_1408AEDB4
; ---------------------------------------------------------------------------

loc_1408AED2C:                          ; CODE XREF: sub_1408AEAB4+248↑j
                mov     rax, [rdi+10h]
                mov     edx, [rax+10h]
                test    edx, edx
                jnz     short loc_1408AED66
                mov     rax, [rdi+18h]
                cmp     [rax+4], edx
                jnz     short loc_1408AED66
                mov     rcx, cs:qword_140C43328
                mov     edx, 46Dh
                mov     ebx, 0C000000Dh
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 5
                jmp     loc_1408AEB29
; ---------------------------------------------------------------------------

loc_1408AED66:                          ; CODE XREF: sub_1408AEAB4+281↑j
                                        ; sub_1408AEAB4+28A↑j
                mov     rax, [rsi+18h]
                mov     rcx, [rax+8]
                test    rcx, rcx
                jz      short loc_1408AED7D
                mov     rax, [rdi+18h]
                cmp     [rax+8], rcx
                ja      short loc_1408AED86

loc_1408AED7D:                          ; CODE XREF: sub_1408AEAB4+2BD↑j
                mov     rax, [rsi+10h]
                cmp     edx, [rax+10h]
                jbe     short loc_1408AEDBA

loc_1408AED86:                          ; CODE XREF: sub_1408AEAB4+2C7↑j
                mov     rcx, cs:qword_140C43328
                mov     edx, 476h
                mov     ebx, 0C000000Dh
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, r12d

loc_1408AEDB4:                          ; CODE XREF: sub_1408AEAB4+273↑j
                mov     [rcx+51FCh], eax

loc_1408AEDBA:                          ; CODE XREF: sub_1408AEAB4+214↑j
                                        ; sub_1408AEAB4+2D0↑j
                test    ebx, ebx
                jns     short loc_1408AEE2D

loc_1408AEDBE:                          ; CODE XREF: sub_1408AEAB4+8C↑j
                mov     rcx, [rdi+10h]
                test    rcx, rcx
                jz      short loc_1408AEDEB
                mov     rax, [rcx]
                test    rax, rax
                jz      short loc_1408AEDDE
                mov     edx, r14d
                mov     rcx, rax
                call    ExFreePoolWithTag
                mov     rcx, [rdi+10h]

loc_1408AEDDE:                          ; CODE XREF: sub_1408AEAB4+319↑j
                mov     edx, r14d
                call    ExFreePoolWithTag
                and     qword ptr [rdi+10h], 0

loc_1408AEDEB:                          ; CODE XREF: sub_1408AEAB4+311↑j
                mov     rcx, [rdi+18h]
                test    rcx, rcx
                jz      short loc_1408AEE01
                mov     edx, r14d
                call    ExFreePoolWithTag
                and     qword ptr [rdi+18h], 0

loc_1408AEE01:                          ; CODE XREF: sub_1408AEAB4+33E↑j
                mov     rcx, [rsi+10h]
                test    rcx, rcx
                jz      short loc_1408AEE17
                mov     edx, r14d
                call    ExFreePoolWithTag
                and     qword ptr [rsi+10h], 0

loc_1408AEE17:                          ; CODE XREF: sub_1408AEAB4+354↑j
                mov     rcx, [rsi+18h]
                test    rcx, rcx
                jz      short loc_1408AEE2D
                mov     edx, r14d
                call    ExFreePoolWithTag
                and     qword ptr [rsi+18h], 0

loc_1408AEE2D:                          ; CODE XREF: sub_1408AEAB4+308↑j
                                        ; sub_1408AEAB4+36A↑j
                mov     rsi, [rsp+58h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+58h+arg_0]
                mov     rdi, [rsp+58h+arg_10]
                add     rsp, 40h
                pop     r15
                pop     r14
                pop     r12
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AEAB4   endp

algn_1408AEE4A:                         ; DATA XREF: .pdata:000000014011D798↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408AEE50   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+A5D↑p
                                        ; NaptrDnsRecordConvert_1+A6C↑p ...

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, rcx
                xor     edi, edi
                mov     rcx, [rcx]
                test    rcx, rcx
                jz      short loc_1408AEE6F
                call    IoFreeMdl
                mov     [rbx], rdi

loc_1408AEE6F:                          ; CODE XREF: sub_1408AEE50+15↑j
                mov     rcx, [rbx+8]
                test    rcx, rcx
                jz      short loc_1408AEE86
                mov     edx, 51706E50h
                call    MmFreeMappingAddress
                mov     [rbx+8], rdi

loc_1408AEE86:                          ; CODE XREF: sub_1408AEE50+26↑j
                mov     [rbx+10h], di
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AEE50   endp

byte_1408AEE96  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D7A4↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408AEE9C   proc near               ; CODE XREF: sub_1408AF5C8+35↓p
                                        ; DATA XREF: .pdata:000000014011D7B0↑o

var_60          = dword ptr -60h
var_58          = qword ptr -58h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  30h
arg_8           = dword ptr  38h
arg_10          = qword ptr  40h
arg_18          = qword ptr  48h

                mov     [rsp-28h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 80h
                and     [rbp+arg_18], 0
                lea     r8, [rbp+arg_18]
                and     [rbp+arg_8], 0
                xorps   xmm0, xmm0
                and     [rbp+arg_10], 0
                mov     r15, rcx
                mov     rcx, cs:qword_140CF4378
                xor     edi, edi
                movups  [rbp+var_40], xmm0
                movups  [rbp+var_30], xmm0
                lea     edx, [rdi+4]
                movups  [rbp+var_20], xmm0
                movups  [rbp+var_10], xmm0
                movups  [rbp+var_50], xmm0
                call    sub_14062C5C0
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AF079
                lea     rdx, aControlPnp ; "Control\\Pnp"
                lea     rcx, [rbp+var_40]
                call    RtlInitUnicodeString
                mov     rax, [rbp+arg_18]
                lea     r8, [rbp+var_30]
                mov     qword ptr [rbp+var_30+8], rax
                lea     rcx, [rbp+arg_10]
                lea     rax, [rbp+var_40]
                mov     dword ptr [rbp+var_30], 30h ; '0'
                xorps   xmm0, xmm0
                mov     qword ptr [rbp+var_20], rax
                mov     edx, 20019h
                mov     dword ptr [rbp+var_20+8], 240h
                movdqu  [rbp+var_10], xmm0
                call    ZwOpenKey
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AF079
                lea     rdx, aReplacedriver ; "ReplaceDriver"
                lea     rcx, [rbp+var_50]
                call    RtlInitUnicodeString
                mov     rcx, [rbp+arg_10]
                lea     rax, [rbp+arg_8]
                mov     [rsp+80h+var_58], rax
                lea     r14d, [rdi+2]
                and     [rsp+80h+var_60], edi
                lea     rdx, [rbp+var_50]
                xor     r9d, r9d
                mov     r8d, r14d
                call    ZwQueryValueKey
                mov     ebx, eax
                cmp     eax, 80000005h
                jz      short loc_1408AEFA1
                cmp     eax, 0C0000023h
                jz      short loc_1408AEFA1
                test    eax, eax
                js      loc_1408AF079
                mov     ebx, 0C0000001h
                jmp     loc_1408AF079
; ---------------------------------------------------------------------------

loc_1408AEFA1:                          ; CODE XREF: sub_1408AEE9C+EA↑j
                                        ; sub_1408AEE9C+F1↑j
                mov     edx, [rbp+arg_8]
                mov     esi, 1
                mov     ecx, esi
                mov     r8d, 51706E50h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408AEFC8
                mov     ebx, 0C000009Ah
                jmp     loc_1408AF079
; ---------------------------------------------------------------------------

loc_1408AEFC8:                          ; CODE XREF: sub_1408AEE9C+120↑j
                mov     rcx, [rbp+arg_10]
                lea     rax, [rbp+arg_8]
                mov     [rsp+80h+var_58], rax
                lea     rdx, [rbp+var_50]
                mov     eax, [rbp+arg_8]
                mov     r9, rdi
                mov     r8d, r14d
                mov     [rsp+80h+var_60], eax
                call    ZwQueryValueKey
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AF079
                mov     eax, [rdi+4]
                sub     eax, esi
                cmp     eax, esi
                ja      short loc_1408AF074
                mov     eax, [rdi+8]
                test    sil, al
                jnz     short loc_1408AF074
                lea     r14, [rax+1Ah]
                mov     r8d, 51706E50h
                shr     r14, 1
                mov     ecx, esi
                lea     rdx, [r14+r14]
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    r15, r15
                jnz     short loc_1408AF03F
                mov     ebx, 0C000009Ah
                test    rax, rax
                jz      short loc_1408AF079
                mov     edx, 51706E50h
                mov     rcx, rax
                call    ExFreePoolWithTag
                jmp     short loc_1408AF079
; ---------------------------------------------------------------------------

loc_1408AF03F:                          ; CODE XREF: sub_1408AEE9C+188↑j
                lea     r8, aSystemroot_4 ; "\\systemroot\\"
                mov     rdx, r14
                mov     rcx, rsi
                call    wcscpy_s
                mov     r9d, [rdi+8]
                lea     r8, [rdi+0Ch]
                shr     r9, 1
                mov     rdx, r14
                mov     rcx, rsi
                call    wcsncat_s
                mov     rdx, rsi
                mov     rcx, r15
                call    RtlInitUnicodeString
                jmp     short loc_1408AF079
; ---------------------------------------------------------------------------

loc_1408AF074:                          ; CODE XREF: sub_1408AEE9C+160↑j
                                        ; sub_1408AEE9C+168↑j
                mov     ebx, 0C000000Dh

loc_1408AF079:                          ; CODE XREF: sub_1408AEE9C+57↑j
                                        ; sub_1408AEE9C+A9↑j ...
                mov     rcx, [rbp+arg_10]
                test    rcx, rcx
                jz      short loc_1408AF087
                call    ZwClose

loc_1408AF087:                          ; CODE XREF: sub_1408AEE9C+1E4↑j
                test    rdi, rdi
                jz      short loc_1408AF099
                mov     edx, 51706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408AF099:                          ; CODE XREF: sub_1408AEE9C+1EE↑j
                mov     eax, ebx
                mov     rbx, [rsp+80h+arg_0]
                add     rsp, 80h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AEE9C   endp

byte_1408AF0B3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D7B0↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408AF0BC   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+676↑p
                                        ; DATA XREF: .pdata:000000014011D7BC↑o

var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = qword ptr -40h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = xmmword ptr -18h
var_8           = qword ptr -8
var_s0          = byte ptr  0

                mov     r11, rsp
                mov     [r11+8], rbx
                mov     [r11+10h], rsi
                mov     [r11+18h], rdi
                mov     [r11+20h], r14
                push    rbp
                lea     rbp, [r11-5Fh]
                sub     rsp, 0A0h
                mov     rsi, rcx
                xorps   xmm0, xmm0
                xor     ecx, ecx
                xorps   xmm1, xmm1
                mov     [rbp+57h+var_40], rcx
                mov     rax, rdx
                mov     [rbp+57h+var_8], rcx
                lea     rdx, byte_140030740
                mov     r14, r9
                mov     rdi, r8
                lea     r9d, [rcx+38h]
                lea     r8d, [rcx+1]
                lea     rcx, [rbp+57h+var_70]
                mov     [r11-80h], rcx
                mov     rcx, rax
                and     [rsp+0A0h+var_80], 0
                movups  [rbp+57h+var_70], xmm0
                movups  [rbp+57h+var_60], xmm0
                movups  [rbp+57h+var_50], xmm0
                movups  [rbp+57h+var_38], xmm1
                movups  [rbp+57h+var_28], xmm1
                movups  [rbp+57h+var_18], xmm1
                call    sub_140764A64
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AF174
                mov     rdx, cs:qword_140C43328
                mov     eax, 514h
                mov     r8d, 3
                mov     ecx, [rdx+51F8h]
                test    ecx, ecx
                cmovz   ecx, eax
                mov     [rdx+51F8h], ecx
                mov     ecx, [rdx+51FCh]
                test    ecx, ecx
                cmovz   ecx, r8d
                mov     [rdx+51FCh], ecx
                jmp     loc_1408AF284
; ---------------------------------------------------------------------------

loc_1408AF174:                          ; CODE XREF: sub_1408AF0BC+7C↑j
                mov     r9d, 38h ; '8'
                lea     rax, [rbp+57h+var_38]
                mov     [rsp+0A0h+var_78], rax
                lea     rdx, byte_140030740
                and     [rsp+0A0h+var_80], 0
                mov     rcx, rsi
                lea     r8d, [r9-37h]
                call    sub_140764A64
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AF1DC
                mov     edx, 520h

loc_1408AF1A7:                          ; CODE XREF: sub_1408AF0BC+15A↓j
                                        ; sub_1408AF0BC+177↓j
                mov     rcx, cs:qword_140C43328
                mov     r8d, 3
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, r8d
                mov     [rcx+51FCh], eax
                jmp     loc_1408AF284
; ---------------------------------------------------------------------------

loc_1408AF1DC:                          ; CODE XREF: sub_1408AF0BC+E4↑j
                mov     rax, qword ptr [rbp+57h+var_18]
                test    rax, rax
                jz      loc_1408AF27F
                cmp     qword ptr [rbp+57h+var_50], 0
                jz      loc_1408AF27F
                cmp     [rbp+57h+var_40], 0
                jz      loc_1408AF27F
                mov     rcx, qword ptr [rbp+57h+var_38+8]
                mov     rdx, rdi
                call    sub_1404079D0
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AF218
                mov     edx, 534h
                jmp     short loc_1408AF1A7
; ---------------------------------------------------------------------------

loc_1408AF218:                          ; CODE XREF: sub_1408AF0BC+153↑j
                mov     rcx, qword ptr [rbp+57h+var_70+8]
                mov     rdx, r14
                mov     rax, qword ptr [rbp+57h+var_50]
                call    sub_1404079D0
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AF238
                mov     edx, 53Ch
                jmp     loc_1408AF1A7
; ---------------------------------------------------------------------------

loc_1408AF238:                          ; CODE XREF: sub_1408AF0BC+170↑j
                mov     rdx, [rdi]
                mov     rcx, qword ptr [rbp+57h+var_70+8]
                mov     rax, [rbp+57h+var_40]
                call    sub_1404079D0
                test    al, al
                jnz     short loc_1408AF2C8
                mov     rcx, cs:qword_140C43328
                mov     edx, 549h
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 4
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51FCh], eax

loc_1408AF27F:                          ; CODE XREF: sub_1408AF0BC+127↑j
                                        ; sub_1408AF0BC+132↑j ...
                mov     ebx, 0C000000Dh

loc_1408AF284:                          ; CODE XREF: sub_1408AF0BC+B3↑j
                                        ; sub_1408AF0BC+11B↑j ...
                mov     rcx, qword ptr [rbp+57h+var_70+8]
                test    rcx, rcx
                jz      short loc_1408AF296
                mov     rax, qword ptr [rbp+57h+var_60+8]
                call    sub_1404079D0

loc_1408AF296:                          ; CODE XREF: sub_1408AF0BC+1CF↑j
                mov     rcx, qword ptr [rbp+57h+var_38+8]
                test    rcx, rcx
                jz      short loc_1408AF2A8
                mov     rax, qword ptr [rbp+57h+var_28+8]
                call    sub_1404079D0

loc_1408AF2A8:                          ; CODE XREF: sub_1408AF0BC+1E1↑j
                lea     r11, [rsp+0A0h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     rdi, [r11+20h]
                mov     r14, [r11+28h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 8

loc_1408AF2C8:                          ; CODE XREF: sub_1408AF0BC+18E↑j
                xor     ebx, ebx
                jmp     short loc_1408AF284
sub_1408AF0BC   endp

; ---------------------------------------------------------------------------
byte_1408AF2CC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D7BC↑o

; =============== S U B R O U T I N E =======================================


sub_1408AF2D4   proc near               ; CODE XREF: sub_1408AE8FC+AC↑p
                                        ; sub_1408AE8FC+C0↑p
                                        ; DATA XREF: ...

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 30h
                mov     rbx, rdx
                movzx   ebp, cx
                mov     edx, 51706E50h
                mov     ecx, 10000h
                xor     r8d, r8d
                xor     esi, esi
                call    MmAllocateMappingAddressEx
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408AF344
                mov     edx, 0F4Bh

loc_1408AF30F:                          ; CODE XREF: sub_1408AF2D4+9F↓j
                mov     rcx, cs:qword_140C43328
                mov     esi, 0C000009Ah
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 0Ah
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51FCh], eax
                jmp     short loc_1408AF380
; ---------------------------------------------------------------------------

loc_1408AF344:                          ; CODE XREF: sub_1408AF2D4+34↑j
                and     [rsp+38h+var_18], rsi
                xor     r9d, r9d
                xor     r8d, r8d
                mov     edx, 10000h
                mov     rcx, rdi
                call    IoAllocateMdl
                test    rax, rax
                jnz     short loc_1408AF375
                mov     edx, 51706E50h
                mov     rcx, rdi
                call    MmFreeMappingAddress
                mov     edx, 0F5Ah
                jmp     short loc_1408AF30F
; ---------------------------------------------------------------------------

loc_1408AF375:                          ; CODE XREF: sub_1408AF2D4+8B↑j
                mov     [rbx], rax
                mov     [rbx+8], rdi
                mov     [rbx+10h], bp

loc_1408AF380:                          ; CODE XREF: sub_1408AF2D4+6E↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     eax, esi
                mov     rsi, [rsp+38h+arg_10]
                mov     rbp, [rsp+38h+arg_8]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AF2D4   endp

algn_1408AF398:                         ; DATA XREF: .pdata:000000014011D7C8↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408AF3A0   proc near               ; CODE XREF: sub_1408AE560+28↑p
                                        ; DATA XREF: .pdata:000000014011D7D4↑o

var_30          = dword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  20h
arg_8           = byte ptr  28h
arg_10          = dword ptr  30h
arg_18          = dword ptr  38h

                mov     [rsp-18h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                mov     rbp, rsp
                sub     rsp, 50h
                xor     esi, esi
                xor     r8d, r8d
                mov     [rbp+arg_18], esi
                mov     ebx, esi
                mov     [rbp+var_10], rbx
                mov     dil, sil
                mov     [rbp+arg_8], sil
                mov     [rbp+arg_10], esi
                test    dl, dl
                jz      short loc_1408AF3ED
                mov     rdx, rcx
                lea     r9, [rbp+var_10]
                lea     rcx, qword_14000E650
                call    IoGetDeviceInterfaces
                mov     rbx, [rbp+var_10]
                test    eax, eax
                js      short loc_1408AF432
                cmp     [rbx], si
                jz      short loc_1408AF432
                jmp     short loc_1408AF42F
; ---------------------------------------------------------------------------

loc_1408AF3ED:                          ; CODE XREF: sub_1408AF3A0+29↑j
                lea     rax, [rbp+arg_10]
                xor     r9d, r9d
                mov     [rsp+50h+var_18], rax
                lea     rdx, qword_140030240
                lea     rax, [rbp+arg_18]
                mov     [rsp+50h+var_20], rax
                lea     rax, [rbp+arg_8]
                mov     [rsp+50h+var_28], rax
                mov     [rsp+50h+var_30], 1
                call    IoGetDevicePropertyData
                test    eax, eax
                js      short loc_1408AF441
                cmp     [rbp+arg_10], 11h
                jnz     short loc_1408AF441
                cmp     [rbp+arg_8], sil
                jz      short loc_1408AF441

loc_1408AF42F:                          ; CODE XREF: sub_1408AF3A0+4B↑j
                mov     dil, 1

loc_1408AF432:                          ; CODE XREF: sub_1408AF3A0+44↑j
                                        ; sub_1408AF3A0+49↑j
                test    rbx, rbx
                jz      short loc_1408AF441
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408AF441:                          ; CODE XREF: sub_1408AF3A0+81↑j
                                        ; sub_1408AF3A0+87↑j ...
                mov     rbx, [rsp+50h+arg_0]
                mov     al, dil
                add     rsp, 50h
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AF3A0   endp

algn_1408AF452:                         ; DATA XREF: .pdata:000000014011D7D4↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408AF458   proc near               ; CODE XREF: sub_1408AE560+4B↑p
                                        ; DATA XREF: .pdata:000000014011D7E0↑o

var_30          = dword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = qword ptr -8
var_s0          = byte ptr  0
arg_0           = qword ptr  20h
arg_8           = dword ptr  28h
arg_10          = qword ptr  30h

                mov     [rsp-18h+arg_0], rbx
                mov     [rsp-18h+arg_10], rsi
                push    rbp
                push    rdi
                push    r14
                mov     rbp, rsp
                sub     rsp, 50h
                xor     ebx, ebx
                mov     rsi, r8
                xor     r8d, r8d
                mov     [rbp+var_10], ebx
                mov     [rbp+var_C], ebx
                mov     r14, r9
                mov     [rbp+var_8], rbx
                mov     rdi, rcx
                mov     [rbp+arg_8], ebx
                test    dl, dl
                jz      loc_1408AF516
                mov     rdx, rcx
                lea     r9, [rbp+var_8]
                lea     rcx, qword_140030000
                call    IoGetDeviceInterfaces
                test    eax, eax
                js      loc_1408AF553
                mov     rcx, [rbp+var_8]
                cmp     [rcx], bx
                jz      loc_1408AF553
                xor     edx, edx
                call    ExFreePoolWithTag
                lea     rax, [rbp+arg_8]
                xor     r9d, r9d
                mov     [rsp+50h+var_18], rax
                lea     rdx, qword_140030010
                lea     rax, [rbp+var_C]
                xor     r8d, r8d
                mov     [rsp+50h+var_20], rax
                mov     rcx, rdi
                lea     rax, [rbp+var_10]
                mov     [rsp+50h+var_28], rax
                mov     [rsp+50h+var_30], 4
                call    IoGetDevicePropertyData
                test    eax, eax
                js      short loc_1408AF553
                cmp     [rbp+arg_8], 7
                jnz     short loc_1408AF553
                mov     edi, [rbp+var_10]
                mov     rdx, r14
                mov     ecx, edi
                call    HalGetProcessorIdByNtNumber
                test    eax, eax
                js      short loc_1408AF553
                mov     [rsi], edi
                jmp     short loc_1408AF551
; ---------------------------------------------------------------------------

loc_1408AF516:                          ; CODE XREF: sub_1408AF458+32↑j
                lea     rax, [rbp+arg_8]
                xor     r9d, r9d
                mov     [rsp+50h+var_18], rax
                lea     rdx, qword_140030258
                lea     rax, [rbp+var_C]
                mov     [rsp+50h+var_20], rax
                mov     [rsp+50h+var_28], r14
                mov     [rsp+50h+var_30], 4
                call    IoGetDevicePropertyData
                test    eax, eax
                js      short loc_1408AF553
                cmp     [rbp+arg_8], 7
                jnz     short loc_1408AF553
                or      dword ptr [rsi], 0FFFFFFFFh

loc_1408AF551:                          ; CODE XREF: sub_1408AF458+BC↑j
                mov     bl, 1

loc_1408AF553:                          ; CODE XREF: sub_1408AF458+4D↑j
                                        ; sub_1408AF458+5A↑j ...
                lea     r11, [rsp+50h+var_s0]
                mov     al, bl
                mov     rbx, [r11+20h]
                mov     rsi, [r11+30h]
                mov     rsp, r11
                pop     r14
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AF458   endp

byte_1408AF56B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D7E0↑o

; =============== S U B R O U T I N E =======================================


sub_1408AF574   proc near               ; CODE XREF: NaptrDnsRecordConvert_1:loc_1408ADFDF↑p
                                        ; DATA XREF: .pdata:000000014011D7EC↑o

arg_0           = dword ptr  8
arg_8           = qword ptr  10h

                mov     rax, rsp
                push    rbx
                sub     rsp, 20h
                and     dword ptr [rax+8], 0
                lea     rdx, [rax+8]
                and     qword ptr [rax+10h], 0
                lea     rcx, [rax+10h]
                xor     bl, bl
                call    sub_140678900
                test    eax, eax
                js      short loc_1408AF5A8
                cmp     [rsp+28h+arg_0], 0
                mov     eax, 1
                movzx   ebx, bl
                cmovnz  ebx, eax

loc_1408AF5A8:                          ; CODE XREF: sub_1408AF574+22↑j
                mov     rcx, [rsp+28h+arg_8]
                test    rcx, rcx
                jz      short loc_1408AF5B9
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408AF5B9:                          ; CODE XREF: sub_1408AF574+3C↑j
                mov     al, bl
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AF574   endp

algn_1408AF5C2:                         ; DATA XREF: .pdata:000000014011D7EC↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408AF5C8   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+715↑p
                                        ; DATA XREF: .pdata:000000014011D7F8↑o

var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  20h
arg_10          = qword ptr  30h
arg_18          = qword ptr  38h

                mov     [rsp-18h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                mov     rbp, rsp
                sub     rsp, 40h
                and     [rbp+arg_18], 0
                mov     rdi, rdx
                and     [rbp+arg_10], 0
                mov     rsi, rcx
                xorps   xmm0, xmm0
                lea     rcx, [rbp+var_10]
                xor     edx, edx
                movups  [rbp+var_10], xmm0
                call    RtlInitUnicodeString
                lea     rcx, [rbp+var_10]
                call    sub_1408AEE9C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408AF70C
                lea     rax, [rbp+arg_18]
                mov     r9d, 2
                mov     [rsp+40h+var_18], rax
                lea     rcx, [rbp+var_10]
                lea     rax, [rbp+arg_10]
                xor     r8d, r8d
                xor     edx, edx
                mov     [rsp+40h+var_20], rax
                call    sub_140757D1C
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AF659
                mov     rcx, cs:qword_140C43328
                mov     edx, 12F9h
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 0Ah
                jmp     loc_1408AF6F1
; ---------------------------------------------------------------------------

loc_1408AF659:                          ; CODE XREF: sub_1408AF5C8+6E↑j
                xor     edx, edx
                lea     rcx, [rdi+8]
                lea     r8d, [rdx+58h]
                call    memset
                mov     rax, [rbp+arg_10]
                xor     edx, edx
                mov     dword ptr [rdi+4], 1
                mov     rcx, rdi
                mov     dword ptr [rdi], 60h ; '`'
                mov     rax, [rax+38h]
                call    sub_1404079D0
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408AF6AB
                mov     rcx, cs:qword_140C43328
                mov     edx, 1307h
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 8
                jmp     short loc_1408AF6F1
; ---------------------------------------------------------------------------

loc_1408AF6AB:                          ; CODE XREF: sub_1408AF5C8+C3↑j
                cmp     dword ptr [rdi], 40h ; '@'
                jb      short loc_1408AF6D0
                cmp     qword ptr [rdi+38h], 0
                jz      short loc_1408AF6D0
                cmp     qword ptr [rdi+18h], 0
                jz      short loc_1408AF6D0
                cmp     qword ptr [rdi+20h], 0
                jz      short loc_1408AF6D0
                mov     rax, [rbp+arg_10]
                xor     ebx, ebx
                mov     [rsi], rax
                jmp     short loc_1408AF71A
; ---------------------------------------------------------------------------

loc_1408AF6D0:                          ; CODE XREF: sub_1408AF5C8+E6↑j
                                        ; sub_1408AF5C8+ED↑j ...
                mov     rcx, cs:qword_140C43328
                mov     edx, 1317h
                mov     ebx, 0C00000BBh
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 9

loc_1408AF6F1:                          ; CODE XREF: sub_1408AF5C8+8C↑j
                                        ; sub_1408AF5C8+E1↑j
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51FCh], eax
                test    ebx, ebx
                jns     short loc_1408AF71A

loc_1408AF70C:                          ; CODE XREF: sub_1408AF5C8+3E↑j
                mov     rcx, [rbp+arg_10]
                test    rcx, rcx
                jz      short loc_1408AF71A
                call    MmUnloadSystemImage

loc_1408AF71A:                          ; CODE XREF: sub_1408AF5C8+106↑j
                                        ; sub_1408AF5C8+142↑j ...
                mov     rcx, qword ptr [rbp+var_10+8]
                test    rcx, rcx
                jz      short loc_1408AF72D
                mov     edx, 51706E50h
                call    ExFreePoolWithTag

loc_1408AF72D:                          ; CODE XREF: sub_1408AF5C8+159↑j
                mov     eax, ebx
                mov     rbx, [rsp+40h+arg_0]
                add     rsp, 40h
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AF5C8   endp

byte_1408AF73D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D7F8↑o

; =============== S U B R O U T I N E =======================================


sub_1408AF744   proc near               ; CODE XREF: sub_14050F878:loc_14050F900↑p
                                        ; NaptrDnsRecordConvert_1+642↑p ...
                sub     rsp, 28h
                mov     rcx, cs:qword_140CFC530
                mov     edx, 1
                call    sub_140261960
                mov     rcx, cs:qword_140C192C0
                xor     r8d, r8d
                lea     edx, [r8+3]
                call    ExNotifyCallback
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AF744   endp

algn_1408AF772:                         ; DATA XREF: .pdata:000000014011D804↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408AF778   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+A03↑p
                                        ; DATA XREF: .pdata:000000014011D810↑o

var_A0          = qword ptr -0A0h
var_90          = word ptr -90h
var_8C          = dword ptr -8Ch
var_88          = dword ptr -88h
var_80          = qword ptr -80h
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_10          = dword ptr  20h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_10], r8d
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0C0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                xor     r8d, r8d
                mov     [rbp+57h+var_90], r8w
                test    rcx, rcx
                jz      short loc_1408AF7B2
                mov     rax, [rcx+138h]
                mov     rax, [rax+28h]
                jmp     short loc_1408AF7B5
; ---------------------------------------------------------------------------

loc_1408AF7B2:                          ; CODE XREF: sub_1408AF778+2B↑j
                mov     rax, r8

loc_1408AF7B5:                          ; CODE XREF: sub_1408AF778+38↑j
                movzx   ecx, word ptr [rax+28h]
                mov     rax, [rax+30h]
                mov     [rbp+57h+var_80], rax
                lea     rax, [rbp+57h+var_90]
                mov     [rbp+57h+var_70], rax
                mov     [rbp+57h+var_78], ecx
                mov     [rbp+57h+var_74], r8d
                mov     [rbp+57h+var_68], 2
                test    rdx, rdx
                jz      short loc_1408AF7EA
                mov     rax, [rdx+138h]
                mov     rax, [rax+28h]
                jmp     short loc_1408AF7ED
; ---------------------------------------------------------------------------

loc_1408AF7EA:                          ; CODE XREF: sub_1408AF778+63↑j
                mov     rax, r8

loc_1408AF7ED:                          ; CODE XREF: sub_1408AF778+70↑j
                movzx   ecx, word ptr [rax+28h]
                mov     rax, [rax+30h]
                mov     [rbp+57h+var_60], rax
                lea     rax, [rbp+57h+var_90]
                mov     [rbp+57h+var_50], rax
                mov     rax, cs:qword_140C43328
                mov     [rbp+57h+var_58], ecx
                mov     [rbp+57h+var_54], r8d
                mov     [rbp+57h+var_48], 2
                test    rax, rax
                jnz     short loc_1408AF824
                lea     ecx, [rax+1]
                mov     eax, r8d
                jmp     short loc_1408AF830
; ---------------------------------------------------------------------------

loc_1408AF824:                          ; CODE XREF: sub_1408AF778+A2↑j
                mov     ecx, [rax+51FCh]
                mov     eax, [rax+51F8h]

loc_1408AF830:                          ; CODE XREF: sub_1408AF778+AA↑j
                mov     [rbp+57h+var_8C], eax
                lea     rdx, qword_140033CC0
                lea     rax, [rbp+57h+arg_10]
                mov     [rbp+57h+var_88], ecx
                mov     rcx, cs:qword_140C50B90
                mov     r9d, 7
                mov     [rbp+57h+var_40], rax
                lea     rax, [rbp+57h+var_8C]
                mov     [rbp+57h+var_30], rax
                lea     rax, [rbp+57h+var_88]
                mov     [rbp+57h+var_20], rax
                lea     rax, [rbp+57h+var_80]
                mov     [rsp+0C0h+var_A0], rax
                mov     [rbp+57h+var_38], 4
                mov     [rbp+57h+var_28], 4
                mov     [rbp+57h+var_18], 4
                call    EtwWrite
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0C0h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408AF778
sub_1408AF778   endp

byte_1408AF89E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D810↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408AF8A4   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+100↑p
                                        ; DATA XREF: .pdata:000000014011D81C↑o

var_70          = qword ptr -70h
var_60          = word ptr -60h
var_50          = qword ptr -50h
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind { // __GSHandlerCheck
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 90h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                xor     r8d, r8d
                mov     [rbp+57h+var_60], r8w
                test    rcx, rcx
                jz      short loc_1408AF8DA
                mov     rax, [rcx+138h]
                mov     rax, [rax+28h]
                jmp     short loc_1408AF8DD
; ---------------------------------------------------------------------------

loc_1408AF8DA:                          ; CODE XREF: sub_1408AF8A4+27↑j
                mov     rax, r8

loc_1408AF8DD:                          ; CODE XREF: sub_1408AF8A4+34↑j
                movzx   ecx, word ptr [rax+28h]
                mov     rax, [rax+30h]
                mov     [rbp+57h+var_50], rax
                lea     rax, [rbp+57h+var_60]
                mov     [rbp+57h+var_40], rax
                mov     [rbp+57h+var_48], ecx
                mov     [rbp+57h+var_44], r8d
                mov     [rbp+57h+var_38], 2
                test    rdx, rdx
                jz      short loc_1408AF912
                mov     rax, [rdx+138h]
                mov     rax, [rax+28h]
                jmp     short loc_1408AF915
; ---------------------------------------------------------------------------

loc_1408AF912:                          ; CODE XREF: sub_1408AF8A4+5F↑j
                mov     rax, r8

loc_1408AF915:                          ; CODE XREF: sub_1408AF8A4+6C↑j
                movzx   ecx, word ptr [rax+28h]
                lea     rdx, qword_140033CA0
                mov     rax, [rax+30h]
                mov     r9d, 4
                mov     [rbp+57h+var_30], rax
                lea     rax, [rbp+57h+var_60]
                mov     [rbp+57h+var_20], rax
                lea     rax, [rbp+57h+var_50]
                mov     [rbp+57h+var_28], ecx
                mov     rcx, cs:qword_140C50B90
                mov     [rsp+90h+var_70], rax
                mov     [rbp+57h+var_24], r8d
                mov     [rbp+57h+var_18], 2
                call    EtwWrite
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 90h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408AF8A4
sub_1408AF8A4   endp

byte_1408AF970  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D81C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0A0h

sub_1408AF978   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+9F2↑p
                                        ; DATA XREF: .pdata:000000014011D828↑o

var_180         = qword ptr -180h
var_170         = dword ptr -170h
var_16C         = dword ptr -16Ch
var_168         = dword ptr -168h
var_164         = dword ptr -164h
var_160         = qword ptr -160h
var_158         = qword ptr -158h
var_150         = dword ptr -150h
var_148         = qword ptr -148h
var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = qword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = qword ptr -118h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = dword ptr -0E8h
var_E4          = dword ptr -0E4h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_20          = qword ptr -20h
var_10          = byte ptr -10h

; __unwind { // __GSHandlerCheck
                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], rdi
                push    rbp
                push    r14
                push    r15
                lea     rbp, [rax-0A8h]
                sub     rsp, 190h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+0A0h+var_20], rax
                mov     r8, cs:qword_140C43328
                xor     r15d, r15d
                mov     word ptr [rsp+1A0h+var_170], r15w
                mov     eax, [r8+5230h]
                mov     edx, [r8+5224h]
                mov     ecx, [r8+5228h]
                mov     [rsp+1A0h+var_16C], eax
                mov     eax, edx
                sub     eax, [r8+5220h]
                mov     [rsp+1A0h+var_168], eax
                mov     eax, ecx
                sub     eax, edx
                mov     rdx, [r8+10h]
                mov     [rsp+1A0h+var_164], eax
                mov     eax, [r8+522Ch]
                sub     eax, ecx
                mov     dword ptr [rsp+1A0h+var_160], eax
                mov     rax, [rdx]
                mov     rcx, [rax]
                mov     rax, [r8]
                mov     [rsp+1A0h+var_158], rcx
                test    rax, rax
                jz      short loc_1408AFA1A
                mov     rax, [rax+138h]
                mov     rax, [rax+28h]
                jmp     short loc_1408AFA1D
; ---------------------------------------------------------------------------

loc_1408AFA1A:                          ; CODE XREF: sub_1408AF978+93↑j
                mov     rax, r15

loc_1408AFA1D:                          ; CODE XREF: sub_1408AF978+A0↑j
                movzx   ecx, word ptr [rax+28h]
                lea     rbx, [rdx+10h]
                mov     rax, [rax+30h]
                mov     r10, [r8+18h]
                mov     qword ptr [rsp+1A0h+var_150], rax
                lea     rax, [rsp+1A0h+var_170]
                mov     [rsp+1A0h+var_140], rax
                lea     rax, [rsp+1A0h+var_158]
                mov     [rsp+1A0h+var_130], rax
                lea     rax, [r10+8]
                mov     dword ptr [rsp+1A0h+var_148], ecx
                mov     [rbp+0A0h+var_100], rax
                lea     r11, [r10+4]
                mov     rax, [r8+20h]
                mov     dword ptr [rsp+1A0h+var_148+4], r15d
                mov     [rsp+1A0h+var_138], 2
                mov     [rsp+1A0h+var_128], 8
                mov     [rbp+0A0h+var_120], rbx
                mov     [rbp+0A0h+var_118], 4
                mov     [rbp+0A0h+var_110], r11
                mov     [rbp+0A0h+var_108], 4
                mov     [rbp+0A0h+var_F8], 8
                test    rax, rax
                jz      short loc_1408AFAA3
                mov     rax, [rax+138h]
                mov     rax, [rax+28h]
                jmp     short loc_1408AFAA6
; ---------------------------------------------------------------------------

loc_1408AFAA3:                          ; CODE XREF: sub_1408AF978+11C↑j
                mov     rax, r15

loc_1408AFAA6:                          ; CODE XREF: sub_1408AF978+129↑j
                movzx   ecx, word ptr [rax+28h]
                mov     r9d, 0Fh
                mov     rax, [rax+30h]
                mov     r14, [r8+30h]
                mov     r8, [r8+38h]
                mov     [rbp+0A0h+var_F0], rax
                lea     rax, [rsp+1A0h+var_170]
                mov     [rbp+0A0h+var_E0], rax
                lea     rdi, [r14+10h]
                mov     [rbp+0A0h+var_E8], ecx
                lea     rax, [r8+8]
                mov     [rbp+0A0h+var_E4], r15d
                mov     [rbp+0A0h+var_B0], rax
                lea     rsi, [r8+4]
                lea     rax, [rsp+1A0h+var_16C]
                mov     [rbp+0A0h+var_D8], 2
                mov     [rbp+0A0h+var_A0], rax
                lea     rax, [rsp+1A0h+var_168]
                mov     [rbp+0A0h+var_90], rax
                lea     rax, [rsp+1A0h+var_164]
                mov     [rbp+0A0h+var_80], rax
                lea     rax, [rsp+1A0h+var_160]
                mov     [rbp+0A0h+var_70], rax
                mov     [rbp+0A0h+var_D0], rdi
                mov     [rbp+0A0h+var_C8], 4
                mov     [rbp+0A0h+var_C0], rsi
                mov     [rbp+0A0h+var_B8], 4
                mov     [rbp+0A0h+var_A8], 8
                mov     [rbp+0A0h+var_98], 4
                mov     [rbp+0A0h+var_88], 4
                mov     [rbp+0A0h+var_78], 4
                mov     [rbp+0A0h+var_68], 4
                mov     ecx, [rbx]
                test    ecx, ecx
                jz      short loc_1408AFB6C
                lea     rax, [rdx+14h]
                mov     [rbp+0A0h+var_54], r15d
                mov     [rbp+0A0h+var_60], rax
                mov     r9d, 10h
                mov     eax, ecx
                shl     eax, 2
                mov     [rbp+0A0h+var_58], eax

loc_1408AFB6C:                          ; CODE XREF: sub_1408AF978+1D8↑j
                mov     edx, [r11]
                test    edx, edx
                jz      short loc_1408AFB91
                mov     ecx, r9d
                lea     rax, [r10+10h]
                add     rcx, rcx
                shl     edx, 4
                inc     r9d
                mov     qword ptr [rsp+rcx*8+1A0h+var_150], rax
                mov     dword ptr [rsp+rcx*8+1A0h+var_148], edx
                mov     dword ptr [rsp+rcx*8+1A0h+var_148+4], r15d

loc_1408AFB91:                          ; CODE XREF: sub_1408AF978+1F9↑j
                mov     edx, [rdi]
                test    edx, edx
                jz      short loc_1408AFBB7
                mov     ecx, r9d
                lea     rax, [r14+14h]
                add     rcx, rcx
                mov     qword ptr [rsp+rcx*8+1A0h+var_150], rax
                mov     eax, edx
                shl     eax, 2
                mov     dword ptr [rsp+rcx*8+1A0h+var_148], eax
                inc     r9d
                mov     dword ptr [rsp+rcx*8+1A0h+var_148+4], r15d

loc_1408AFBB7:                          ; CODE XREF: sub_1408AF978+21D↑j
                mov     edx, [rsi]
                test    edx, edx
                jz      short loc_1408AFBDB
                mov     ecx, r9d
                lea     rax, [r8+10h]
                add     rcx, rcx
                shl     edx, 4
                inc     r9d
                mov     qword ptr [rsp+rcx*8+1A0h+var_150], rax
                mov     dword ptr [rsp+rcx*8+1A0h+var_148], edx
                mov     dword ptr [rsp+rcx*8+1A0h+var_148+4], r15d

loc_1408AFBDB:                          ; CODE XREF: sub_1408AF978+243↑j
                mov     rcx, cs:qword_140C50B90
                lea     rax, [rsp+1A0h+var_150]
                xor     r8d, r8d
                mov     [rsp+1A0h+var_180], rax
                lea     rdx, qword_140034000
                call    EtwWrite
                mov     rcx, [rbp+0A0h+var_20]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+1A0h+var_10]
                mov     rbx, [r11+20h]
                mov     rsi, [r11+28h]
                mov     rdi, [r11+30h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408AF978
sub_1408AF978   endp

algn_1408AFC28:                         ; DATA XREF: .pdata:000000014011D828↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408AFC30   proc near               ; CODE XREF: sub_1408AFD68+3F↓p
                                        ; DATA XREF: .pdata:000000014011D834↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 20h
                mov     rdi, r8
                mov     rsi, rdx
                shr     rsi, 0Ch
                xor     r15d, r15d
                shr     rdi, 0Ch
                mov     r14, rcx
                test    rdi, rdi
                jz      loc_1408AFD3F
                mov     r13d, 80000000h

loc_1408AFC6F:                          ; CODE XREF: sub_1408AFC30+C7↓j
                cmp     rdi, r13
                mov     rbp, rdi
                mov     ecx, 200h
                mov     r8d, 52706E50h
                cmova   rbp, r13
                lea     r12d, [rbp+20h]
                and     r12d, 0FFFFFFE0h
                mov     edx, r12d
                shr     edx, 3
                add     edx, 30h ; '0'
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408AFD06
                mov     [rax+10h], rsi
                lea     rcx, [rax+20h]
                mov     [rax+18h], rbp
                add     rax, 30h ; '0'
                mov     [rcx+8], rax
                mov     [rcx], r12d
                call    RtlSetAllBits
                mov     rax, [r14+8]
                cmp     rax, r14
                jz      short loc_1408AFCDA
                mov     rcx, [rbx+10h]

loc_1408AFCCB:                          ; CODE XREF: sub_1408AFC30+A8↓j
                cmp     [rax+10h], rcx
                jb      short loc_1408AFCDA
                mov     rax, [rax+8]
                cmp     rax, r14
                jnz     short loc_1408AFCCB

loc_1408AFCDA:                          ; CODE XREF: sub_1408AFC30+95↑j
                                        ; sub_1408AFC30+9F↑j
                mov     rcx, [rax]
                cmp     [rcx+8], rax
                jnz     short loc_1408AFCFF
                mov     [rbx], rcx
                add     rsi, rbp
                mov     [rbx+8], rax
                mov     [rcx+8], rbx
                mov     [rax], rbx
                sub     rdi, rbp
                jnz     loc_1408AFC6F
                jmp     short loc_1408AFD3F
; ---------------------------------------------------------------------------

loc_1408AFCFF:                          ; CODE XREF: sub_1408AFC30+B1↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408AFD06:                          ; CODE XREF: sub_1408AFC30+70↑j
                mov     rdx, cs:qword_140C43328
                mov     eax, 110Eh
                mov     r15d, 0C000009Ah
                mov     ecx, [rdx+51F8h]
                test    ecx, ecx
                cmovz   ecx, eax
                mov     eax, 0Ah
                mov     [rdx+51F8h], ecx
                mov     ecx, [rdx+51FCh]
                test    ecx, ecx
                cmovz   ecx, eax
                mov     [rdx+51FCh], ecx

loc_1408AFD3F:                          ; CODE XREF: sub_1408AFC30+33↑j
                                        ; sub_1408AFC30+CD↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     eax, r15d
                mov     rbp, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AFC30   endp

byte_1408AFD60  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D834↑o

; =============== S U B R O U T I N E =======================================


sub_1408AFD68   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+7D0↑p
                                        ; DATA XREF: .pdata:000000014011D840↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r14
                sub     rsp, 20h
                xor     edi, edi
                xor     esi, esi
                mov     rbx, rdx
                mov     rbp, rcx
                cmp     [rcx+4], esi
                jbe     short loc_1408AFDBA
                lea     r14d, [rdi+1]

loc_1408AFD94:                          ; CODE XREF: sub_1408AFD68+50↓j
                mov     r8d, esi
                mov     rcx, rbx
                add     r8, r8
                mov     rdx, [rbp+r8*8+10h]
                mov     r8, [rbp+r8*8+18h]
                call    sub_1408AFC30
                mov     edi, eax
                test    eax, eax
                js      short loc_1408AFDC1
                add     esi, r14d
                cmp     esi, [rbp+4]
                jb      short loc_1408AFD94

loc_1408AFDBA:                          ; CODE XREF: sub_1408AFD68+26↑j
                mov     rax, [rbx]
                xor     edx, edx
                jmp     short loc_1408AFE05
; ---------------------------------------------------------------------------

loc_1408AFDC1:                          ; CODE XREF: sub_1408AFD68+48↑j
                mov     rcx, cs:qword_140C43328
                mov     edx, 1190h
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, r14d
                jmp     short loc_1408AFE3E
; ---------------------------------------------------------------------------

loc_1408AFDEC:                          ; CODE XREF: sub_1408AFD68+A0↓j
                mov     rcx, [rax+18h]
                test    rcx, rcx
                jz      short loc_1408AFE0C
                mov     r8, [rax+10h]
                cmp     r8, rdx
                jb      short loc_1408AFE0C
                mov     rax, [rax]
                lea     rdx, [r8+rcx]

loc_1408AFE05:                          ; CODE XREF: sub_1408AFD68+57↑j
                cmp     rax, rbx
                jnz     short loc_1408AFDEC
                jmp     short loc_1408AFE44
; ---------------------------------------------------------------------------

loc_1408AFE0C:                          ; CODE XREF: sub_1408AFD68+8B↑j
                                        ; sub_1408AFD68+94↑j
                mov     rcx, cs:qword_140C43328
                mov     edx, 11A5h
                mov     edi, 0C000000Dh
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 6
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, edx

loc_1408AFE3E:                          ; CODE XREF: sub_1408AFD68+82↑j
                mov     [rcx+51FCh], eax

loc_1408AFE44:                          ; CODE XREF: sub_1408AFD68+A2↑j
                test    edi, edi
                jns     short loc_1408AFE50
                mov     rcx, rbx
                call    sub_1408AFE74

loc_1408AFE50:                          ; CODE XREF: sub_1408AFD68+DE↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     eax, edi
                mov     rdi, [rsp+28h+arg_18]
                mov     rbp, [rsp+28h+arg_8]
                mov     rsi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AFD68   endp

byte_1408AFE6E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D840↑o

; =============== S U B R O U T I N E =======================================


sub_1408AFE74   proc near               ; CODE XREF: NaptrDnsRecordConvert_1+AA3↑p
                                        ; sub_1408AFD68+E3↑p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx

loc_1408AFE7D:                          ; CODE XREF: sub_1408AFE74+31↓j
                mov     rcx, [rbx]
                cmp     rcx, rbx
                jz      short loc_1408AFEAE
                cmp     [rcx+8], rbx
                jnz     short loc_1408AFEA7
                mov     rax, [rcx]
                cmp     [rax+8], rcx
                jnz     short loc_1408AFEA7
                mov     [rbx], rax
                mov     edx, 52706E50h
                mov     [rax+8], rbx
                call    ExFreePoolWithTag
                jmp     short loc_1408AFE7D
; ---------------------------------------------------------------------------

loc_1408AFEA7:                          ; CODE XREF: sub_1408AFE74+15↑j
                                        ; sub_1408AFE74+1E↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408AFEAE:                          ; CODE XREF: sub_1408AFE74+F↑j
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AFE74   endp

byte_1408AFEB5  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D84C↑o

; =============== S U B R O U T I N E =======================================


sub_1408AFEBC   proc near               ; CODE XREF: sub_1409AF9BC:loc_1409AFAD1↓p
                                        ; DATA XREF: .pdata:000000014011D858↑o

var_28          = dword ptr -28h
arg_0           = qword ptr  8

                mov     r11, rsp
                mov     [r11+8], rbx
                push    rdi
                sub     rsp, 40h
                mov     rdx, cs:qword_140C43328
                and     qword ptr [r11-28h], 0
                mov     rax, [rdx+10h]
                lea     rdi, [rdx+48h]
                mov     [r11-20h], rax
                mov     rax, [rdx+30h]
                mov     [r11-18h], rax
                mov     eax, [rdx+51A0h]
                mov     ecx, [rsp+48h+var_28]
                test    al, 2
                jz      short loc_1408AFEFD
                or      ecx, 1
                mov     [rsp+48h+var_28], ecx

loc_1408AFEFD:                          ; CODE XREF: sub_1408AFEBC+38↑j
                mov     eax, [rdx+40h]
                test    al, 20h
                jz      short loc_1408AFF0B
                or      ecx, 2
                mov     [rsp+48h+var_28], ecx

loc_1408AFF0B:                          ; CODE XREF: sub_1408AFEBC+46↑j
                mov     rax, cs:off_140C00678
                lea     rcx, [rsp+48h+var_28]
                add     rdx, 5188h
                call    sub_1404079D0
                mov     r8d, eax
                test    eax, eax
                jns     short loc_1408AFF62
                mov     rdx, cs:qword_140C43328
                mov     eax, 0AA8h
                mov     ecx, [rdx+51F8h]
                test    ecx, ecx
                cmovz   ecx, eax
                mov     eax, 6
                mov     [rdx+51F8h], ecx
                mov     ecx, [rdx+51FCh]
                test    ecx, ecx
                cmovz   ecx, eax
                mov     [rdx+51FCh], ecx
                jmp     loc_1408B001D
; ---------------------------------------------------------------------------

loc_1408AFF62:                          ; CODE XREF: sub_1408AFEBC+6C↑j
                mov     rbx, cs:qword_140C43328
                mov     rax, [rbx+18h]
                cmp     dword ptr [rax+4], 0
                jz      loc_1408B001D
                xor     edx, edx
                mov     rcx, rdi
                lea     r8d, [rdx+40h]
                call    memset
                mov     dword ptr [rdi], 40h ; '@'
                lea     rdx, [rbx+5190h]
                mov     dword ptr [rdi+4], 2
                mov     rcx, rdi
                mov     rax, [rbx+8]
                mov     [rdi+8], rax
                mov     rax, [rbx+28h]
                mov     [rdi+10h], rax
                mov     rax, [rbx+10h]
                mov     [rdi+18h], rax
                mov     rax, [rbx+30h]
                mov     [rdi+20h], rax
                mov     rax, [rbx+18h]
                mov     [rdi+28h], rax
                mov     rax, [rbx+38h]
                mov     [rdi+30h], rax
                lea     rax, sub_1409AFF70
                mov     [rdi+38h], rax
                mov     rax, [rbx+51B0h]
                call    sub_1404079D0
                mov     r8d, eax
                test    eax, eax
                jns     short loc_1408B001D
                mov     rcx, cs:qword_140C43328
                mov     edx, 0AC2h
                mov     eax, [rcx+51F8h]
                test    eax, eax
                cmovz   eax, edx
                mov     edx, 8
                mov     [rcx+51F8h], eax
                mov     eax, [rcx+51FCh]
                test    eax, eax
                cmovz   eax, edx
                mov     [rcx+51FCh], eax

loc_1408B001D:                          ; CODE XREF: sub_1408AFEBC+A1↑j
                                        ; sub_1408AFEBC+B5↑j ...
                mov     rbx, [rsp+48h+arg_0]
                mov     eax, r8d
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408AFEBC   endp

byte_1408B002C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D858↑o

; =============== S U B R O U T I N E =======================================


sub_1408B0034   proc near               ; CODE XREF: sub_14050F288+4↑p
                                        ; NaptrDnsRecordConvert_1+65B↑p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                mov     rcx, cs:qword_140CFC530
                call    MmUnlockPagableImageSection
                mov     rcx, cs:qword_140C192C0
                mov     edx, 3
                lea     r8d, [rdx-2]
                call    ExNotifyCallback
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B0034   endp

byte_1408B005F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D864↑o

; =============== S U B R O U T I N E =======================================


sub_1408B0068   proc near               ; CODE XREF: sub_1407441FC+244↑p
                                        ; sub_1407441FC+F1FDD↑p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                mov     rdx, rcx
                mov     r8d, 57706E50h
                mov     ecx, 1
                call    ExAllocatePoolWithTag
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B0068   endp

byte_1408B0085  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D870↑o

; =============== S U B R O U T I N E =======================================


sub_1408B008C   proc near               ; CODE XREF: sub_1407441FC+F1E0D↑p
                                        ; DATA XREF: .pdata:000000014011D87C↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     eax, [rdx+40h]
                mov     rdi, rdx
                mov     rsi, rcx
                cmp     [rcx+40h], eax
                jnz     loc_1408B01B8
                mov     rdx, [rcx+28h]
                xor     ebx, ebx
                mov     r8, [rdi+38h]
                cmp     rdx, r8
                jz      short loc_1408B00E7
                test    rdx, rdx
                jz      loc_1408B01B8
                test    r8, r8
                jz      loc_1408B01B8
                mov     rcx, [rdx]
                sub     rcx, [r8]
                jnz     short loc_1408B00DE
                mov     rcx, [rdx+8]
                sub     rcx, [r8+8]

loc_1408B00DE:                          ; CODE XREF: sub_1408B008C+48↑j
                test    rcx, rcx
                jnz     loc_1408B01B8

loc_1408B00E7:                          ; CODE XREF: sub_1408B008C+2E↑j
                mov     rcx, [rsi+70h]
                mov     rdx, [rdi+8]
                mov     rcx, [rcx+8]
                call    _wcsicmp
                test    eax, eax
                jnz     loc_1408B01B8
                mov     rcx, [rsi+30h]
                mov     rdx, [rdi+48h]
                cmp     rcx, rdx
                jz      short loc_1408B012C
                test    rcx, rcx
                jz      loc_1408B01B8
                test    rdx, rdx
                jz      loc_1408B01B8
                call    _wcsicmp
                test    eax, eax
                jnz     loc_1408B01B8

loc_1408B012C:                          ; CODE XREF: sub_1408B008C+7F↑j
                mov     rcx, [rsi+38h]
                mov     rdx, [rdi+50h]
                cmp     rcx, rdx
                jz      short loc_1408B014C
                test    rcx, rcx
                jz      short loc_1408B01B8
                test    rdx, rdx
                jz      short loc_1408B01B8
                call    _wcsicmp
                test    eax, eax
                jnz     short loc_1408B01B8

loc_1408B014C:                          ; CODE XREF: sub_1408B008C+AB↑j
                mov     eax, [rsi+0A0h]
                cmp     eax, [rdi+58h]
                jnz     short loc_1408B01B8
                test    eax, eax
                jz      short loc_1408B0172
                mov     rdx, [rdi+60h]
                mov     r8d, eax
                mov     rcx, [rsi+98h]
                call    memcmp
                test    eax, eax
                jnz     short loc_1408B01B8

loc_1408B0172:                          ; CODE XREF: sub_1408B008C+CD↑j
                mov     rcx, [rsi+18h]
                mov     rdx, [rdi+20h]
                cmp     rcx, rdx
                jz      short loc_1408B0195
                test    rcx, rcx
                jz      short loc_1408B01B8
                test    rdx, rdx
                jz      short loc_1408B01B8
                mov     r8b, 1
                call    sub_1408B3A04
                test    al, al
                jz      short loc_1408B01B8

loc_1408B0195:                          ; CODE XREF: sub_1408B008C+F1↑j
                mov     rcx, [rsi+20h]
                mov     rdx, [rdi+30h]
                cmp     rcx, rdx
                jz      short loc_1408B01BA
                test    rcx, rcx
                jz      short loc_1408B01B8
                test    rdx, rdx
                jz      short loc_1408B01B8
                mov     r8b, 1
                call    sub_1408B3A04
                test    al, al
                jnz     short loc_1408B01BA

loc_1408B01B8:                          ; CODE XREF: sub_1408B008C+1B↑j
                                        ; sub_1408B008C+33↑j ...
                mov     bl, 1

loc_1408B01BA:                          ; CODE XREF: sub_1408B008C+114↑j
                                        ; sub_1408B008C+12A↑j
                mov     rsi, [rsp+28h+arg_8]
                mov     al, bl
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B008C   endp

byte_1408B01CD  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D87C↑o

; =============== S U B R O U T I N E =======================================


sub_1408B01D4   proc near               ; CODE XREF: sub_1407441FC+F1F4B↑p
                                        ; DATA XREF: .pdata:000000014011D888↑o
                sub     rsp, 28h
                mov     edx, 57706E50h
                call    ExFreePoolWithTag
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B01D4   endp

algn_1408B01E8:                         ; DATA XREF: .pdata:000000014011D888↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408B01F0   proc near               ; CODE XREF: sub_140743C40:loc_140835F3A↑p
                                        ; DATA XREF: .pdata:000000014011D894↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                mov     [rsp+arg_10], rdi
                push    r14
                sub     rsp, 20h
                mov     rdx, [rcx+0B8h]
                xor     ebx, ebx
                mov     r14, [rcx+18h]
                mov     rdi, rcx
                cmp     dword ptr [rdx+8], 4
                mov     rax, [rdx+30h]
                mov     rsi, [rax+20h]
                jnb     short loc_1408B022A
                mov     ebx, 0C000000Dh
                jmp     short loc_1408B0286
; ---------------------------------------------------------------------------

loc_1408B022A:                          ; CODE XREF: sub_1408B01F0+31↑j
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C432A0
                call    ExAcquireResourceExclusiveLite
                mov     rcx, rsi
                call    sub_140770658
                test    al, al
                jnz     short loc_1408B025B
                mov     ebx, 0C00000BBh
                jmp     short loc_1408B026C
; ---------------------------------------------------------------------------

loc_1408B025B:                          ; CODE XREF: sub_1408B01F0+62↑j
                mov     edx, [rsi+0B4h]
                mov     [r14], edx
                mov     qword ptr [rdi+38h], 4

loc_1408B026C:                          ; CODE XREF: sub_1408B01F0+69↑j
                lea     rcx, unk_140C432A0
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0

loc_1408B0286:                          ; CODE XREF: sub_1408B01F0+38↑j
                xor     edx, edx
                mov     [rdi+30h], ebx
                mov     rcx, rdi
                call    IofCompleteRequest
                mov     rsi, [rsp+28h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                mov     rdi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B01F0   endp

byte_1408B02AC  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D894↑o

; =============== S U B R O U T I N E =======================================


sub_1408B02B4   proc near               ; CODE XREF: sub_1407441FC+F1EAB↑p
                                        ; sub_1407441FC+F1F0A↑p
                                        ; DATA XREF: ...

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 30h
                mov     ebx, 58h ; 'X'
                mov     rdi, rdx
                mov     rsi, rcx
                mov     r8d, 57706E50h
                mov     edx, ebx
                lea     ecx, [rbx-57h]
                call    ExAllocatePoolWithTag
                mov     [rsi], rax
                test    rax, rax
                jz      loc_1408B0395
                mov     r8d, ebx
                xor     edx, edx
                mov     rcx, rax
                call    memset
                mov     r9, [rsi]
                lea     edx, [rbx+70h]
                mov     rcx, [rdi+8]
                mov     r8d, 57706E50h
                call    sub_1406CCC68
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B039E
                mov     rcx, [rsi]
                mov     rdx, rdi
                add     rcx, 8
                call    sub_1407452E4
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B039E
                cmp     qword ptr [rdi+60h], 0
                jz      short loc_1408B0375
                mov     rdx, [rsi]
                mov     ecx, 1
                mov     eax, [rdi+58h]
                mov     r8d, 57706E50h
                mov     [rdx+40h], eax
                mov     edx, [rdi+58h]
                call    ExAllocatePoolWithTag
                mov     rcx, [rsi]
                mov     [rcx+38h], rax
                mov     rax, [rsi]
                mov     rcx, [rax+38h]
                test    rcx, rcx
                jnz     short loc_1408B0368
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B039E
; ---------------------------------------------------------------------------

loc_1408B0368:                          ; CODE XREF: sub_1408B02B4+AB↑j
                mov     r8d, [rdi+58h]
                mov     rdx, [rdi+60h]
                call    memmove

loc_1408B0375:                          ; CODE XREF: sub_1408B02B4+7C↑j
                mov     r9, [rsi]
                mov     rdx, [rdi+70h]
                mov     ecx, [rdi+68h]
                lea     rax, [r9+48h]
                add     r9, 50h ; 'P'
                mov     [rsp+38h+var_18], rax
                call    sub_140745174
                mov     ebx, eax
                jmp     short loc_1408B039A
; ---------------------------------------------------------------------------

loc_1408B0395:                          ; CODE XREF: sub_1408B02B4+30↑j
                mov     ebx, 0C000009Ah

loc_1408B039A:                          ; CODE XREF: sub_1408B02B4+DF↑j
                test    ebx, ebx
                jns     short loc_1408B03AF

loc_1408B039E:                          ; CODE XREF: sub_1408B02B4+5C↑j
                                        ; sub_1408B02B4+75↑j ...
                mov     rcx, [rsi]
                test    rcx, rcx
                jz      short loc_1408B03AF
                call    sub_1408B03C8
                and     qword ptr [rsi], 0

loc_1408B03AF:                          ; CODE XREF: sub_1408B02B4+E8↑j
                                        ; sub_1408B02B4+F0↑j
                mov     rsi, [rsp+38h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+38h+arg_0]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B02B4   endp

algn_1408B03C2:                         ; DATA XREF: .pdata:000000014011D8A0↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408B03C8   proc near               ; CODE XREF: sub_140731E98+1026A8↑p
                                        ; sub_140733250:loc_140834B98↑p ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     rcx, [rcx]
                test    rcx, rcx
                jz      short loc_1408B03E7
                mov     edx, 57706E50h
                call    ExFreePoolWithTag
                and     qword ptr [rbx], 0

loc_1408B03E7:                          ; CODE XREF: sub_1408B03C8+F↑j
                lea     rcx, [rbx+8]
                call    sub_140733310
                mov     rcx, [rbx+38h]
                test    rcx, rcx
                jz      short loc_1408B0408
                mov     edx, 57706E50h
                call    ExFreePoolWithTag
                and     qword ptr [rbx+38h], 0

loc_1408B0408:                          ; CODE XREF: sub_1408B03C8+2F↑j
                mov     rdx, [rbx+48h]
                test    rdx, rdx
                jz      short loc_1408B041F
                mov     ecx, [rbx+50h]
                mov     r8d, 57706E50h
                call    sub_1406CE4F0

loc_1408B041F:                          ; CODE XREF: sub_1408B03C8+47↑j
                mov     edx, 57706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B03C8   endp

byte_1408B0433  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D8AC↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=0Fh

sub_1408B043C   proc near               ; CODE XREF: sub_1408B5F80+9D7↓p
                                        ; DATA XREF: .pdata:000000014011D8B8↑o

var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = qword ptr -70h
var_68          = dword ptr -68h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = dword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  10h
arg_20          = qword ptr  30h
arg_28          = qword ptr  38h
arg_30          = dword ptr  40h
arg_38          = qword ptr  48h
arg_40          = qword ptr  50h
arg_48          = qword ptr  58h
arg_50          = dword ptr  60h
arg_58          = qword ptr  68h
arg_60          = dword ptr  70h

                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                mov     [rax+8], rcx
                push    rbp
                lea     rbp, [rax-17h]
                sub     rsp, 0A0h
                mov     rbx, rdx
                lea     rcx, [rbp+0Fh+var_80]
                xor     edx, edx
                mov     rdi, r8
                mov     rsi, r9
                lea     r8d, [rdx+78h]
                call    memset
                and     [rbp+0Fh+arg_0], 0
                lea     rax, aDriverenum ; "DRIVERENUM"
                mov     [rbp+0Fh+var_80], rax
                mov     rax, [rbp+0Fh+arg_28]
                mov     [rbp+0Fh+var_48], rax
                mov     eax, [rbp+0Fh+arg_30]
                mov     [rbp+0Fh+var_40], eax
                mov     rax, [rbp+0Fh+arg_38]
                mov     [rbp+0Fh+var_38], rax
                mov     rax, [rbp+0Fh+arg_40]
                mov     [rbp+0Fh+var_30], rax
                mov     eax, [rbp+0Fh+arg_50]
                mov     [rbp+0Fh+var_28], eax
                mov     rax, [rbp+0Fh+arg_48]
                mov     [rbp+0Fh+var_20], rax
                mov     eax, [rbp+0Fh+arg_60]
                mov     [rbp+0Fh+var_18], eax
                mov     rax, [rbp+0Fh+arg_58]
                mov     [rbp+0Fh+var_78], rbx
                mov     rbx, [rbp+0Fh+arg_20]
                mov     [rbp+0Fh+var_70], rdi
                mov     edi, 400h
                mov     [rbp+0Fh+var_10], rax
                mov     [rbp+0Fh+var_60], rsi
                mov     [rbp+0Fh+var_50], rbx
                test    rsi, rsi
                jz      short loc_1408B04F3
                lea     r8, [rbp+0Fh+arg_0]
                mov     edx, edi
                mov     rcx, rsi
                call    sub_140745478
                test    eax, eax
                js      short loc_1408B051C
                mov     eax, dword ptr [rbp+0Fh+arg_0]
                mov     [rbp+0Fh+var_68], eax

loc_1408B04F3:                          ; CODE XREF: sub_1408B043C+9D↑j
                test    rbx, rbx
                jz      short loc_1408B0511
                lea     r8, [rbp+0Fh+arg_0]
                mov     rdx, rdi
                mov     rcx, rbx
                call    sub_140745478
                test    eax, eax
                js      short loc_1408B051C
                mov     eax, dword ptr [rbp+0Fh+arg_0]
                mov     [rbp+0Fh+var_58], eax

loc_1408B0511:                          ; CODE XREF: sub_1408B043C+BA↑j
                xor     edx, edx
                lea     rcx, [rbp+0Fh+var_80]
                call    sub_1407441FC

loc_1408B051C:                          ; CODE XREF: sub_1408B043C+AF↑j
                                        ; sub_1408B043C+CD↑j
                lea     r11, [rsp+0A0h+var_s0]
                mov     rbx, [r11+18h]
                mov     rsi, [r11+20h]
                mov     rdi, [r11+28h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B043C   endp

byte_1408B0536  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D8B8↑o

; =============== S U B R O U T I N E =======================================


sub_1408B053C   proc near               ; CODE XREF: sub_1408B0BC0+96↓p
                                        ; DATA XREF: .pdata:000000014011D8C4↑o

var_58          = byte ptr -58h
var_50          = dword ptr -50h
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
arg_0           = byte ptr  8
arg_8           = qword ptr  10h
arg_18          = qword ptr  20h

; __unwind { // __C_specific_handler
                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_18], r9
                push    rsi
                push    rdi
                push    r13
                push    r14
                push    r15
                sub     rsp, 50h
                mov     rdi, r9
                xor     ebx, ebx
                mov     [rsp+78h+var_44], ebx
                mov     [rsp+78h+var_40], ebx
                mov     rax, gs:188h
                mov     r13b, [rax+232h]
                mov     [rsp+78h+arg_0], r13b
                mov     esi, ebx
                mov     [rsp+78h+var_48], ebx
                test    rcx, rcx
                jz      loc_1408B07CA
                test    edx, edx
                jz      loc_1408B07CA
                test    r8d, r8d
                jz      loc_1408B063E

loc_1408B0597:                          ; DATA XREF: .rdata:00000001400B8924↑o
;   __try { // __except at loc_1408B0613
                test    cl, 3
                jz      short loc_1408B05A1
                call    ExRaiseDatatypeMisalignment
; ---------------------------------------------------------------------------

loc_1408B05A1:                          ; CODE XREF: sub_1408B053C+5E↑j
                mov     r8d, edx
                add     r8, rcx
                mov     rax, 7FFFFFFF0000h
                cmp     r8, rax
                ja      short loc_1408B05BB
                cmp     r8, rcx
                jnb     short loc_1408B05C6

loc_1408B05BB:                          ; CODE XREF: sub_1408B053C+78↑j
                xor     eax, eax
                mov     ds:7FFFFFFF0000h, al

loc_1408B05C6:                          ; CODE XREF: sub_1408B053C+7D↑j
                mov     r14d, 0C000000Dh
                cmp     edx, 1Ch
                jnb     short loc_1408B05DB

loc_1408B05D1:                          ; CODE XREF: sub_1408B053C+A2↓j
                mov     esi, r14d
                mov     [rsp+78h+var_48], r14d
                jmp     short loc_1408B0611
; ---------------------------------------------------------------------------

loc_1408B05DB:                          ; CODE XREF: sub_1408B053C+93↑j
                cmp     dword ptr [rcx], 1Ch
                jnz     short loc_1408B05D1
                mov     dword ptr [r9], 28h ; '('
                mov     eax, [rcx+4]
                mov     [r9+4], eax
                mov     eax, [rcx+8]
                mov     [r9+8], rax
                mov     eax, [rcx+0Ch]
                mov     [r9+10h], eax
                mov     eax, [rcx+10h]
                mov     [r9+18h], rax
                mov     eax, [rcx+14h]
                mov     [r9+20h], eax
                mov     eax, [rcx+18h]
                mov     [r9+24h], eax

loc_1408B0611:                          ; CODE XREF: sub_1408B053C+9D↑j
                jmp     short loc_1408B0639
;   } // starts at 1408B0597
; ---------------------------------------------------------------------------

loc_1408B0613:                          ; DATA XREF: .rdata:00000001400B8924↑o
;   __except(1) // owned by 1408B0597
                mov     esi, eax
                mov     [rsp+78h+var_48], eax
                xor     ebx, ebx
                mov     r14d, 0C000000Dh
                mov     rdi, [rsp+78h+arg_18]
                mov     [rsp+78h+var_44], ebx
                mov     [rsp+78h+var_40], ebx
                mov     r13b, [rsp+78h+arg_0]

loc_1408B0639:                          ; CODE XREF: sub_1408B053C:loc_1408B0611↑j
                jmp     loc_1408B06D1
; ---------------------------------------------------------------------------

loc_1408B063E:                          ; CODE XREF: sub_1408B053C+55↑j
                                        ; DATA XREF: .rdata:00000001400B8934↑o
;   __try { // __except at loc_1408B06AB
                test    cl, 7
                jz      short loc_1408B0648
                call    ExRaiseDatatypeMisalignment
; ---------------------------------------------------------------------------

loc_1408B0648:                          ; CODE XREF: sub_1408B053C+105↑j
                mov     r8d, edx
                add     r8, rcx
                mov     rax, 7FFFFFFF0000h
                cmp     r8, rax
                ja      short loc_1408B0662
                cmp     r8, rcx
                jnb     short loc_1408B066D

loc_1408B0662:                          ; CODE XREF: sub_1408B053C+11F↑j
                xor     eax, eax
                mov     ds:7FFFFFFF0000h, al

loc_1408B066D:                          ; CODE XREF: sub_1408B053C+124↑j
                mov     r14d, 0C000000Dh
                cmp     edx, 28h ; '('
                jnb     short loc_1408B0682
                mov     esi, r14d
                mov     [rsp+78h+var_48], r14d
                jmp     short loc_1408B06A9
; ---------------------------------------------------------------------------

loc_1408B0682:                          ; CODE XREF: sub_1408B053C+13A↑j
                movups  xmm0, xmmword ptr [rcx]
                movups  xmmword ptr [r9], xmm0
                movups  xmm1, xmmword ptr [rcx+10h]
                movups  xmmword ptr [r9+10h], xmm1
                movsd   xmm0, qword ptr [rcx+20h]
                movsd   qword ptr [r9+20h], xmm0
                cmp     dword ptr [r9], 28h ; '('
                cmovnz  esi, r14d
                mov     [rsp+78h+var_48], esi

loc_1408B06A9:                          ; CODE XREF: sub_1408B053C+144↑j
                jmp     short loc_1408B06D1
;   } // starts at 1408B063E
; ---------------------------------------------------------------------------

loc_1408B06AB:                          ; DATA XREF: .rdata:00000001400B8934↑o
;   __except(1) // owned by 1408B063E
                mov     esi, eax
                mov     [rsp+78h+var_48], eax
                xor     ebx, ebx
                mov     r14d, 0C000000Dh
                mov     rdi, [rsp+78h+arg_18]
                mov     [rsp+78h+var_44], ebx
                mov     [rsp+78h+var_40], ebx
                mov     r13b, [rsp+78h+arg_0]

loc_1408B06D1:                          ; CODE XREF: sub_1408B053C:loc_1408B0639↑j
                                        ; sub_1408B053C:loc_1408B06A9↑j
                test    esi, esi
                js      loc_1408B07D3
                lea     r15, [rdi+8]
                mov     rax, [r15]
                mov     [r15], rbx
                test    rax, rax
                jz      loc_1408B0796
                mov     r8d, [rdi+10h]
                cmp     r8d, 2
                jb      loc_1408B0791
                mov     [rsp+78h+var_50], 1
                mov     [rsp+78h+var_58], r13b
                mov     r9d, 2
                mov     rdx, rax
                mov     rcx, r15
                call    sub_1406CA210
                mov     esi, eax
                test    eax, eax
                js      short loc_1408B0789
                mov     [rsp+78h+var_44], 1
                mov     edx, [rdi+10h]
                shr     rdx, 1
                mov     rcx, [r15]
                mov     [rcx+rdx*2-2], bx

loc_1408B0734:                          ; CODE XREF: sub_1408B053C+253↓j
                                        ; sub_1408B053C+262↓j ...
                lea     r15, [rdi+18h]
                mov     rax, [r15]
                mov     [r15], rbx
                test    rax, rax
                jz      short loc_1408B07B8
                mov     r8d, [rdi+20h]
                cmp     r8d, 2
                jb      short loc_1408B07B3
                mov     [rsp+78h+var_50], 1
                mov     [rsp+78h+var_58], r13b
                mov     r9d, 2
                mov     rdx, rax
                mov     rcx, r15
                call    sub_1406CA210
                mov     esi, eax
                test    eax, eax
                js      short loc_1408B07AB
                mov     [rsp+78h+var_40], 1
                mov     ecx, [rdi+20h]
                shr     rcx, 1
                mov     rax, [r15]
                mov     [rax+rcx*2-2], bx
                jmp     short loc_1408B07CF
; ---------------------------------------------------------------------------

loc_1408B0789:                          ; CODE XREF: sub_1408B053C+1E0↑j
                mov     [r15], rbx
                mov     [rdi+10h], ebx
                jmp     short loc_1408B0734
; ---------------------------------------------------------------------------

loc_1408B0791:                          ; CODE XREF: sub_1408B053C+1B8↑j
                test    rax, rax
                jnz     short loc_1408B07A0

loc_1408B0796:                          ; CODE XREF: sub_1408B053C+1AA↑j
                cmp     [rdi+10h], ebx
                ja      short loc_1408B07A6
                test    rax, rax
                jz      short loc_1408B0734

loc_1408B07A0:                          ; CODE XREF: sub_1408B053C+258↑j
                cmp     dword ptr [rdi+10h], 2
                jnb     short loc_1408B0734

loc_1408B07A6:                          ; CODE XREF: sub_1408B053C+25D↑j
                                        ; sub_1408B053C+27F↓j ...
                mov     esi, r14d
                jmp     short loc_1408B07D3
; ---------------------------------------------------------------------------

loc_1408B07AB:                          ; CODE XREF: sub_1408B053C+233↑j
                mov     [r15], rbx
                mov     [rdi+20h], ebx
                jmp     short loc_1408B07CF
; ---------------------------------------------------------------------------

loc_1408B07B3:                          ; CODE XREF: sub_1408B053C+20F↑j
                test    rax, rax
                jnz     short loc_1408B07C2

loc_1408B07B8:                          ; CODE XREF: sub_1408B053C+205↑j
                cmp     [rdi+20h], ebx
                ja      short loc_1408B07A6
                test    rax, rax
                jz      short loc_1408B07CF

loc_1408B07C2:                          ; CODE XREF: sub_1408B053C+27A↑j
                cmp     dword ptr [rdi+20h], 2
                jnb     short loc_1408B07CF
                jmp     short loc_1408B07A6
; ---------------------------------------------------------------------------

loc_1408B07CA:                          ; CODE XREF: sub_1408B053C+44↑j
                                        ; sub_1408B053C+4C↑j
                mov     esi, 0C000000Dh

loc_1408B07CF:                          ; CODE XREF: sub_1408B053C+24B↑j
                                        ; sub_1408B053C+275↑j ...
                test    esi, esi
                jns     short loc_1408B0807

loc_1408B07D3:                          ; CODE XREF: sub_1408B053C+197↑j
                                        ; sub_1408B053C+26D↑j
                cmp     [rsp+78h+var_44], ebx
                jz      short loc_1408B07E5
                mov     rdx, [rdi+8]
                mov     cl, r13b
                call    sub_1403109F0

loc_1408B07E5:                          ; CODE XREF: sub_1408B053C+29B↑j
                cmp     [rsp+78h+var_40], ebx
                jz      short loc_1408B07F7
                mov     rdx, [rdi+18h]
                mov     cl, r13b
                call    sub_1403109F0

loc_1408B07F7:                          ; CODE XREF: sub_1408B053C+2AD↑j
                xorps   xmm0, xmm0
                xor     eax, eax
                movups  xmmword ptr [rdi], xmm0
                movups  xmmword ptr [rdi+10h], xmm0
                mov     [rdi+20h], rax

loc_1408B0807:                          ; CODE XREF: sub_1408B053C+295↑j
                mov     eax, esi
                mov     rbx, [rsp+78h+arg_8]
                add     rsp, 50h
                pop     r15
                pop     r14
                pop     r13
                pop     rdi
                pop     rsi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B053C
sub_1408B053C   endp

byte_1408B081F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D8C4↑o

; =============== S U B R O U T I N E =======================================


sub_1408B0828   proc near               ; CODE XREF: sub_1408B1AEC+45↓p
                                        ; DATA XREF: .pdata:000000014011D8D0↑o

var_18          = dword ptr -18h
arg_18          = qword ptr  20h

; __unwind { // __C_specific_handler
                mov     [rsp+arg_18], r9
                sub     rsp, 38h
                and     [rsp+38h+var_18], 0
                test    rcx, rcx
                jz      short loc_1408B089B
                cmp     edx, 14h
                jb      short loc_1408B089B

loc_1408B0840:                          ; DATA XREF: .rdata:00000001400B8958↑o
;   __try { // __except at loc_1408B0890
                test    cl, 3
                jz      short loc_1408B084A
                call    ExRaiseDatatypeMisalignment
; ---------------------------------------------------------------------------

loc_1408B084A:                          ; CODE XREF: sub_1408B0828+1B↑j
                mov     edx, edx
                add     rdx, rcx
                mov     rax, 7FFFFFFF0000h
                cmp     rdx, rax
                ja      short loc_1408B0863
                cmp     rdx, rcx
                jnb     short loc_1408B086E

loc_1408B0863:                          ; CODE XREF: sub_1408B0828+34↑j
                xor     eax, eax
                mov     ds:7FFFFFFF0000h, al

loc_1408B086E:                          ; CODE XREF: sub_1408B0828+39↑j
                movups  xmm0, xmmword ptr [rcx]
                movups  xmmword ptr [r9], xmm0
                mov     eax, [rcx+10h]
                mov     [r9+10h], eax
                xor     eax, eax
                mov     ecx, 0C000000Dh
                cmp     dword ptr [r9], 14h
                cmovnz  eax, ecx
                mov     [rsp+38h+var_18], eax
                jmp     short loc_1408B08A0
;   } // starts at 1408B0840
; ---------------------------------------------------------------------------

loc_1408B0890:                          ; DATA XREF: .rdata:00000001400B8958↑o
;   __except(1) // owned by 1408B0840
                mov     [rsp+38h+var_18], eax
                mov     r9, [rsp+38h+arg_18]
                jmp     short loc_1408B08A0
; ---------------------------------------------------------------------------

loc_1408B089B:                          ; CODE XREF: sub_1408B0828+11↑j
                                        ; sub_1408B0828+16↑j
                mov     eax, 0C000000Dh

loc_1408B08A0:                          ; CODE XREF: sub_1408B0828+66↑j
                                        ; sub_1408B0828+71↑j
                test    eax, eax
                jns     short loc_1408B08B1
                xorps   xmm0, xmm0
                xor     ecx, ecx
                movups  xmmword ptr [r9], xmm0
                mov     [r9+10h], ecx

loc_1408B08B1:                          ; CODE XREF: sub_1408B0828+7A↑j
                add     rsp, 38h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B0828
sub_1408B0828   endp

algn_1408B08B7:                         ; DATA XREF: .pdata:000000014011D8D0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B08C0   proc near               ; CODE XREF: sub_1408B249C+65↓p
                                        ; DATA XREF: .pdata:000000014011D8DC↑o

var_58          = byte ptr -58h
var_50          = dword ptr -50h
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
arg_0           = byte ptr  8
arg_8           = qword ptr  10h
arg_18          = qword ptr  20h

; __unwind { // __C_specific_handler
                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_18], r9
                push    rsi
                push    rdi
                push    r13
                push    r14
                push    r15
                sub     rsp, 50h
                mov     rdi, r9
                xor     ebx, ebx
                mov     [rsp+78h+var_44], ebx
                mov     [rsp+78h+var_40], ebx
                mov     rax, gs:188h
                mov     r13b, [rax+232h]
                mov     [rsp+78h+arg_0], r13b
                mov     esi, ebx
                mov     [rsp+78h+var_48], ebx
                test    rcx, rcx
                jz      loc_1408B0B61
                test    edx, edx
                jz      loc_1408B0B61
                test    r8d, r8d
                jz      loc_1408B09CC

loc_1408B091B:                          ; DATA XREF: .rdata:00000001400B88E4↑o
;   __try { // __except at loc_1408B09A1
                test    cl, 3
                jz      short loc_1408B0925
                call    ExRaiseDatatypeMisalignment
; ---------------------------------------------------------------------------

loc_1408B0925:                          ; CODE XREF: sub_1408B08C0+5E↑j
                mov     r8d, edx
                add     r8, rcx
                mov     rax, 7FFFFFFF0000h
                cmp     r8, rax
                ja      short loc_1408B093F
                cmp     r8, rcx
                jnb     short loc_1408B094A

loc_1408B093F:                          ; CODE XREF: sub_1408B08C0+78↑j
                xor     eax, eax
                mov     ds:7FFFFFFF0000h, al

loc_1408B094A:                          ; CODE XREF: sub_1408B08C0+7D↑j
                mov     r14d, 0C000000Dh
                cmp     edx, 2Ch ; ','
                jnb     short loc_1408B095F

loc_1408B0955:                          ; CODE XREF: sub_1408B08C0+A2↓j
                mov     esi, r14d
                mov     [rsp+78h+var_48], r14d
                jmp     short loc_1408B099F
; ---------------------------------------------------------------------------

loc_1408B095F:                          ; CODE XREF: sub_1408B08C0+93↑j
                cmp     dword ptr [rcx], 2Ch ; ','
                jnz     short loc_1408B0955
                mov     dword ptr [r9], 38h ; '8'
                mov     eax, [rcx+4]
                mov     [r9+4], eax
                movups  xmm0, xmmword ptr [rcx+8]
                movdqu  xmmword ptr [r9+8], xmm0
                mov     eax, [rcx+18h]
                mov     [r9+18h], rax
                mov     eax, [rcx+1Ch]
                mov     [r9+20h], eax
                mov     eax, [rcx+20h]
                mov     [r9+28h], rax
                mov     eax, [rcx+24h]
                mov     [r9+30h], eax
                mov     eax, [rcx+28h]
                mov     [r9+34h], eax

loc_1408B099F:                          ; CODE XREF: sub_1408B08C0+9D↑j
                jmp     short loc_1408B09C7
;   } // starts at 1408B091B
; ---------------------------------------------------------------------------

loc_1408B09A1:                          ; DATA XREF: .rdata:00000001400B88E4↑o
;   __except(1) // owned by 1408B091B
                mov     esi, eax
                mov     [rsp+78h+var_48], eax
                xor     ebx, ebx
                mov     r14d, 0C000000Dh
                mov     rdi, [rsp+78h+arg_18]
                mov     [rsp+78h+var_44], ebx
                mov     [rsp+78h+var_40], ebx
                mov     r13b, [rsp+78h+arg_0]

loc_1408B09C7:                          ; CODE XREF: sub_1408B08C0:loc_1408B099F↑j
                jmp     loc_1408B0A68
; ---------------------------------------------------------------------------

loc_1408B09CC:                          ; CODE XREF: sub_1408B08C0+55↑j
                                        ; DATA XREF: .rdata:00000001400B88F4↑o
;   __try { // __except at loc_1408B0A42
                test    cl, 7
                jz      short loc_1408B09D6
                call    ExRaiseDatatypeMisalignment
; ---------------------------------------------------------------------------

loc_1408B09D6:                          ; CODE XREF: sub_1408B08C0+10F↑j
                mov     r8d, edx
                add     r8, rcx
                mov     rax, 7FFFFFFF0000h
                cmp     r8, rax
                ja      short loc_1408B09F0
                cmp     r8, rcx
                jnb     short loc_1408B09FB

loc_1408B09F0:                          ; CODE XREF: sub_1408B08C0+129↑j
                xor     eax, eax
                mov     ds:7FFFFFFF0000h, al

loc_1408B09FB:                          ; CODE XREF: sub_1408B08C0+12E↑j
                mov     r14d, 0C000000Dh
                cmp     edx, 38h ; '8'
                jnb     short loc_1408B0A10
                mov     esi, r14d
                mov     [rsp+78h+var_48], r14d
                jmp     short loc_1408B0A40
; ---------------------------------------------------------------------------

loc_1408B0A10:                          ; CODE XREF: sub_1408B08C0+144↑j
                movups  xmm0, xmmword ptr [rcx]
                movups  xmmword ptr [r9], xmm0
                movups  xmm1, xmmword ptr [rcx+10h]
                movups  xmmword ptr [r9+10h], xmm1
                movups  xmm0, xmmword ptr [rcx+20h]
                movups  xmmword ptr [r9+20h], xmm0
                movsd   xmm1, qword ptr [rcx+30h]
                movsd   qword ptr [r9+30h], xmm1
                cmp     dword ptr [r9], 38h ; '8'
                cmovnz  esi, r14d
                mov     [rsp+78h+var_48], esi

loc_1408B0A40:                          ; CODE XREF: sub_1408B08C0+14E↑j
                jmp     short loc_1408B0A68
;   } // starts at 1408B09CC
; ---------------------------------------------------------------------------

loc_1408B0A42:                          ; DATA XREF: .rdata:00000001400B88F4↑o
;   __except(1) // owned by 1408B09CC
                mov     esi, eax
                mov     [rsp+78h+var_48], eax
                xor     ebx, ebx
                mov     r14d, 0C000000Dh
                mov     rdi, [rsp+78h+arg_18]
                mov     [rsp+78h+var_44], ebx
                mov     [rsp+78h+var_40], ebx
                mov     r13b, [rsp+78h+arg_0]

loc_1408B0A68:                          ; CODE XREF: sub_1408B08C0:loc_1408B09C7↑j
                                        ; sub_1408B08C0:loc_1408B0A40↑j
                test    esi, esi
                js      loc_1408B0B6A
                lea     r15, [rdi+18h]
                mov     rax, [r15]
                mov     [r15], rbx
                test    rax, rax
                jz      loc_1408B0B2D
                mov     r8d, [rdi+20h]
                cmp     r8d, 2
                jb      loc_1408B0B28
                mov     [rsp+78h+var_50], 1
                mov     [rsp+78h+var_58], r13b
                mov     r9d, 2
                mov     rdx, rax
                mov     rcx, r15
                call    sub_1406CA210
                mov     esi, eax
                test    eax, eax
                js      short loc_1408B0B20
                mov     [rsp+78h+var_44], 1
                mov     edx, [rdi+20h]
                shr     rdx, 1
                mov     rcx, [r15]
                mov     [rcx+rdx*2-2], bx

loc_1408B0ACB:                          ; CODE XREF: sub_1408B08C0+266↓j
                                        ; sub_1408B08C0+275↓j ...
                lea     r15, [rdi+28h]
                mov     rax, [r15]
                mov     [r15], rbx
                test    rax, rax
                jz      short loc_1408B0B4F
                mov     r8d, [rdi+30h]
                cmp     r8d, 2
                jb      short loc_1408B0B4A
                mov     [rsp+78h+var_50], 1
                mov     [rsp+78h+var_58], r13b
                mov     r9d, 2
                mov     rdx, rax
                mov     rcx, r15
                call    sub_1406CA210
                mov     esi, eax
                test    eax, eax
                js      short loc_1408B0B42
                mov     [rsp+78h+var_40], 1
                mov     ecx, [rdi+30h]
                shr     rcx, 1
                mov     rax, [r15]
                mov     [rax+rcx*2-2], bx
                jmp     short loc_1408B0B66
; ---------------------------------------------------------------------------

loc_1408B0B20:                          ; CODE XREF: sub_1408B08C0+1F3↑j
                mov     [r15], rbx
                mov     [rdi+20h], ebx
                jmp     short loc_1408B0ACB
; ---------------------------------------------------------------------------

loc_1408B0B28:                          ; CODE XREF: sub_1408B08C0+1CB↑j
                test    rax, rax
                jnz     short loc_1408B0B37

loc_1408B0B2D:                          ; CODE XREF: sub_1408B08C0+1BD↑j
                cmp     [rdi+20h], ebx
                ja      short loc_1408B0B3D
                test    rax, rax
                jz      short loc_1408B0ACB

loc_1408B0B37:                          ; CODE XREF: sub_1408B08C0+26B↑j
                cmp     dword ptr [rdi+20h], 2
                jnb     short loc_1408B0ACB

loc_1408B0B3D:                          ; CODE XREF: sub_1408B08C0+270↑j
                                        ; sub_1408B08C0+292↓j ...
                mov     esi, r14d
                jmp     short loc_1408B0B6A
; ---------------------------------------------------------------------------

loc_1408B0B42:                          ; CODE XREF: sub_1408B08C0+246↑j
                mov     [r15], rbx
                mov     [rdi+30h], ebx
                jmp     short loc_1408B0B66
; ---------------------------------------------------------------------------

loc_1408B0B4A:                          ; CODE XREF: sub_1408B08C0+222↑j
                test    rax, rax
                jnz     short loc_1408B0B59

loc_1408B0B4F:                          ; CODE XREF: sub_1408B08C0+218↑j
                cmp     [rdi+30h], ebx
                ja      short loc_1408B0B3D
                test    rax, rax
                jz      short loc_1408B0B66

loc_1408B0B59:                          ; CODE XREF: sub_1408B08C0+28D↑j
                cmp     dword ptr [rdi+30h], 2
                jnb     short loc_1408B0B66
                jmp     short loc_1408B0B3D
; ---------------------------------------------------------------------------

loc_1408B0B61:                          ; CODE XREF: sub_1408B08C0+44↑j
                                        ; sub_1408B08C0+4C↑j
                mov     esi, 0C000000Dh

loc_1408B0B66:                          ; CODE XREF: sub_1408B08C0+25E↑j
                                        ; sub_1408B08C0+288↑j ...
                test    esi, esi
                jns     short loc_1408B0BA2

loc_1408B0B6A:                          ; CODE XREF: sub_1408B08C0+1AA↑j
                                        ; sub_1408B08C0+280↑j
                cmp     [rsp+78h+var_44], ebx
                jz      short loc_1408B0B7C
                mov     rdx, [rdi+18h]
                mov     cl, r13b
                call    sub_1403109F0

loc_1408B0B7C:                          ; CODE XREF: sub_1408B08C0+2AE↑j
                cmp     [rsp+78h+var_40], ebx
                jz      short loc_1408B0B8E
                mov     rdx, [rdi+28h]
                mov     cl, r13b
                call    sub_1403109F0

loc_1408B0B8E:                          ; CODE XREF: sub_1408B08C0+2C0↑j
                xorps   xmm0, xmm0
                xor     eax, eax
                movups  xmmword ptr [rdi], xmm0
                movups  xmmword ptr [rdi+10h], xmm0
                movups  xmmword ptr [rdi+20h], xmm0
                mov     [rdi+30h], rax

loc_1408B0BA2:                          ; CODE XREF: sub_1408B08C0+2A8↑j
                mov     eax, esi
                mov     rbx, [rsp+78h+arg_8]
                add     rsp, 50h
                pop     r15
                pop     r14
                pop     r13
                pop     rdi
                pop     rsi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B08C0
sub_1408B08C0   endp

algn_1408B0BBA:                         ; DATA XREF: .pdata:000000014011D8DC↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=47h

sub_1408B0BC0   proc near               ; CODE XREF: sub_1406C9390+153EFB↑p
                                        ; DATA XREF: .pdata:000000014011D8E8↑o

var_108         = qword ptr -108h
var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_D8          = byte ptr -0D8h
var_D0          = qword ptr -0D0h
var_C0          = dword ptr -0C0h
var_BC          = dword ptr -0BCh
var_B8          = dword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = dword ptr -0A0h
var_9C          = dword ptr -9Ch
var_98          = dword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = xmmword ptr -78h
var_68          = xmmword ptr -68h
var_58          = xmmword ptr -58h
var_48          = qword ptr -48h
var_40          = xmmword ptr -40h
arg_0           = qword ptr  10h
arg_10          = qword ptr  20h
arg_18          = dword ptr  28h
arg_20          = dword ptr  30h
arg_28          = qword ptr  38h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+20h], r9d
                mov     [rax+18h], r8
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-4Fh]
                sub     rsp, 0F0h
                xor     eax, eax
                mov     rbx, r8
                xor     r8d, r8d
                mov     [rbp+47h+var_48], rax
                mov     rax, [rbp+47h+arg_28]
                xorps   xmm0, xmm0
                xorps   xmm1, xmm1
                mov     [rbp+47h+var_C0], r8d
                mov     r12d, r9d
                mov     [rbp+47h+var_BC], r8d
                mov     [rbp+47h+var_90], r8
                lea     r9, [rbp+47h+var_68]
                mov     [rax], r8d
                mov     edi, r8d
                mov     [rbp+47h+var_98], r8d
                mov     r14b, r8b
                mov     [rbp+47h+var_A0], r8d
                mov     esi, r8d
                mov     [rbp+47h+var_B8], r8d
                mov     r13d, r8d
                mov     [rbp+47h+var_9C], r8d
                mov     [rbp+47h+var_88], r8
                mov     [rbp+47h+var_B0], r8
                mov     [rbp+47h+var_80], r8
                mov     [rbp+47h+var_A8], r8
                mov     [rsp+58h], r8
                mov     r8d, [rbp+47h+arg_20]
                movups  [rbp+47h+var_78], xmm0
                movups  [rbp+47h+var_68], xmm1
                movups  [rbp+47h+var_58], xmm1
                movups  [rbp+47h+var_40], xmm0
                call    sub_1408B053C
                mov     r15d, eax
                test    eax, eax
                js      loc_1408B0EFF
                lea     ecx, [r13+2]
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B0C7D
                mov     ebx, 0C0000022h
                jmp     loc_1408B0E6D
; ---------------------------------------------------------------------------

loc_1408B0C7D:                          ; CODE XREF: sub_1408B0BC0+B1↑j
                mov     r13, qword ptr [rbp+47h+var_68+8]
                test    r13, r13
                jz      loc_1408B12CC
                cmp     dword ptr [rbp+47h+var_58], 2
                jb      loc_1408B12CC
                mov     rcx, qword ptr [rbp+47h+var_58+8]
                xor     eax, eax
                test    rcx, rcx
                jz      loc_1408B12CC
                cmp     dword ptr [rbp+47h+var_48], 2
                jb      loc_1408B12CC
                test    rbx, rbx
                jz      short loc_1408B0CC5
                cmp     r12d, 14h
                jb      short loc_1408B0CC5
                mov     r12d, dword ptr [rbp+47h+var_68+4]
                test    r12d, 0FFFFFFF0h
                jz      short loc_1408B0CD2

loc_1408B0CC5:                          ; CODE XREF: sub_1408B0BC0+F0↑j
                                        ; sub_1408B0BC0+F6↑j
                mov     ebx, 0C000000Dh

loc_1408B0CCA:                          ; CODE XREF: sub_1408B0BC0+162↓j
                mov     r13, rax
                jmp     loc_1408B0E6D
; ---------------------------------------------------------------------------

loc_1408B0CD2:                          ; CODE XREF: sub_1408B0BC0+103↑j
                mov     r15d, r12d
                and     r15d, 2
                call    sub_140711704
                test    al, al
                jnz     short loc_1408B0CEF
                mov     ebx, 0C000000Dh

loc_1408B0CE7:                          ; CODE XREF: sub_1408B0BC0+13C↓j
                                        ; sub_1408B0BC0+196↓j ...
                mov     r13, rsi
                jmp     loc_1408B0E6D
; ---------------------------------------------------------------------------

loc_1408B0CEF:                          ; CODE XREF: sub_1408B0BC0+120↑j
                lea     rcx, [rbp+47h+var_80]
                call    sub_1406C91CC
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B0CE7
                mov     edx, 190h
                mov     ecx, 1
                mov     r8d, 34706E50h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                xor     eax, eax
                test    rdi, rdi
                jnz     short loc_1408B0D24
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B0CCA
; ---------------------------------------------------------------------------

loc_1408B0D24:                          ; CODE XREF: sub_1408B0BC0+15B↑j
                and     r12d, 4
                jz      short loc_1408B0D4A
                test    r15d, r15d
                mov     r8, rdi
                mov     rcx, r13
                setnz   dl
                call    sub_1408B1D10
                mov     ebx, eax
                test    r15d, r15d
                jz      short loc_1408B0D54

loc_1408B0D42:                          ; CODE XREF: sub_1408B0BC0+218↓j
                mov     r13, rsi
                jmp     loc_1408B0FAF
; ---------------------------------------------------------------------------

loc_1408B0D4A:                          ; CODE XREF: sub_1408B0BC0+168↑j
                mov     rdx, r13
                call    sub_14062D1B0
                mov     ebx, eax

loc_1408B0D54:                          ; CODE XREF: sub_1408B0BC0+180↑j
                test    ebx, ebx
                js      short loc_1408B0CE7
                xor     ebx, ebx
                test    r12d, r12d
                jnz     short loc_1408B0D8E
                mov     dword ptr [rsp+120h+var_F8], 800h
                xor     r9d, r9d
                mov     r8, r13
                mov     [rsp+120h+var_100], rbx
                mov     edx, 0C8h
                mov     rcx, rdi
                call    sub_140203D40
                xor     r13d, r13d
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B0CE7
                jmp     short loc_1408B0D91
; ---------------------------------------------------------------------------

loc_1408B0D8E:                          ; CODE XREF: sub_1408B0BC0+19D↑j
                xor     r13d, r13d

loc_1408B0D91:                          ; CODE XREF: sub_1408B0BC0+1CC↑j
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+47h+var_B0]
                mov     [rsp+120h+var_E8], r13
                xor     r9d, r9d
                mov     [rsp+120h+var_F0], rax
                mov     r12d, 2001Fh
                mov     byte ptr [rsp+120h+var_F8], r13b
                mov     rdx, rdi
                mov     dword ptr [rsp+120h+var_100], r12d
                lea     r8d, [r9+10h]
                call    sub_14062C9F8
                mov     ecx, 80000000h
                mov     ebx, eax
                add     eax, ecx
                test    ecx, eax
                jnz     short loc_1408B0DDE
                cmp     ebx, 0C000000Eh
                jnz     loc_1408B0D42

loc_1408B0DDE:                          ; CODE XREF: sub_1408B0BC0+210↑j
                test    r15d, r15d
                jz      loc_1408B1003
                cmp     [rbp+47h+var_B0], r13
                jz      short loc_1408B0DF7

loc_1408B0DED:                          ; CODE XREF: sub_1408B0BC0+4A8↓j
                mov     ebx, 0C0000035h
                jmp     loc_1408B0CE7
; ---------------------------------------------------------------------------

loc_1408B0DF7:                          ; CODE XREF: sub_1408B0BC0+22B↑j
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C44D40
                call    ExAcquireResourceExclusiveLite
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rsp+120h+var_D0]
                mov     dword ptr [rsp+120h+var_F8], r13d
                lea     r9, [rbp+47h+var_90]
                mov     r8d, 20006h
                mov     [rsp+120h+var_100], rax
                mov     rdx, rdi
                mov     byte ptr [rsp+120h+var_D0], r13b
                mov     r14b, 1
                call    sub_14073FF18
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B0E64
                mov     rdx, [rbp+47h+var_90]
                cmp     byte ptr [rsp+120h+var_D0], r13b
                jnz     loc_1408B0F5B
                mov     ebx, 0C0000035h
                call    sub_1405E736C

loc_1408B0E64:                          ; CODE XREF: sub_1408B0BC0+289↑j
                                        ; sub_1408B0BC0+3CF↓j ...
                mov     rsi, [rbp+47h+var_A8]

loc_1408B0E68:                          ; CODE XREF: sub_1408B0BC0+4C1↓j
                                        ; sub_1408B0BC0+54C↓j ...
                mov     r13, [rsp+58h]

loc_1408B0E6D:                          ; CODE XREF: sub_1408B0BC0+B8↑j
                                        ; sub_1408B0BC0+10D↑j ...
                mov     rax, [rbp+47h+arg_28]
                lea     edx, [rsi+rsi]
                mov     [rsp+40h], rax
                xor     esi, esi
                mov     eax, [rbp+47h+arg_18]
                xor     r9d, r9d
                mov     dword ptr [rsp+120h+var_E8], eax
                xor     r8d, r8d
                mov     rax, [rbp+47h+arg_10]
                mov     ecx, ebx
                mov     [rsp+120h+var_F0], rax
                mov     eax, dword ptr [rbp+47h+var_48+4]
                mov     dword ptr [rsp+120h+var_F8], eax
                mov     dword ptr [rsp+120h+var_100], esi
                call    sub_1406CC2C4

loc_1408B0EA3:                          ; CODE XREF: sub_1408B0BC0+758↓j
                mov     rdx, [rbp+47h+var_B0]
                mov     r15d, eax
                test    rdx, rdx
                jz      short loc_1408B0EB4
                call    sub_1405E736C

loc_1408B0EB4:                          ; CODE XREF: sub_1408B0BC0+2ED↑j
                test    rdi, rdi
                jz      short loc_1408B0EC6
                mov     edx, 34706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B0EC6:                          ; CODE XREF: sub_1408B0BC0+2F7↑j
                test    r13, r13
                jz      short loc_1408B0ED8
                mov     edx, 34706E50h
                mov     rcx, r13
                call    ExFreePoolWithTag

loc_1408B0ED8:                          ; CODE XREF: sub_1408B0BC0+309↑j
                mov     rax, [rbp+47h+var_88]
                test    rax, rax
                jz      short loc_1408B0EE9
                mov     rcx, rax
                call    PsDereferenceSiloContext

loc_1408B0EE9:                          ; CODE XREF: sub_1408B0BC0+31F↑j
                test    r14b, r14b
                jz      short loc_1408B0EFF
                lea     rcx, unk_140C44D40
                call    ExReleaseResourceLite
                call    KeLeaveCriticalRegion

loc_1408B0EFF:                          ; CODE XREF: sub_1408B0BC0+A0↑j
                                        ; sub_1408B0BC0+32C↑j
                mov     rax, gs:188h
                mov     rdx, qword ptr [rbp+47h+var_68+8]
                mov     bl, [rax+232h]
                test    rdx, rdx
                jz      short loc_1408B0F1E
                mov     cl, bl
                call    sub_1403109F0

loc_1408B0F1E:                          ; CODE XREF: sub_1408B0BC0+355↑j
                mov     rdx, qword ptr [rbp+47h+var_58+8]
                test    rdx, rdx
                jz      short loc_1408B0F2E
                mov     cl, bl
                call    sub_1403109F0

loc_1408B0F2E:                          ; CODE XREF: sub_1408B0BC0+365↑j
                mov     rcx, [rbp+47h+var_80]
                test    rcx, rcx
                jz      short loc_1408B0F3C
                call    sub_1406CDB1C

loc_1408B0F3C:                          ; CODE XREF: sub_1408B0BC0+375↑j
                mov     rbx, [rsp+120h+arg_0]
                mov     eax, r15d
                add     rsp, 0F0h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408B0F5B:                          ; CODE XREF: sub_1408B0BC0+294↑j
                mov     r9d, 4
                mov     [rbp+47h+var_A0], 1
                lea     rax, [rbp+47h+var_A0]
                mov     dword ptr [rsp+120h+var_F8], r9d
                lea     r8, aPhantom    ; "Phantom"
                mov     [rsp+120h+var_100], rax
                call    sub_1409760BC
                mov     rdx, [rbp+47h+var_90]
                mov     ebx, eax
                call    sub_1405E736C
                test    ebx, ebx
                js      loc_1408B0E64
                lea     rcx, unk_140C44D40
                call    ExReleaseResourceLite
                call    KeLeaveCriticalRegion
                mov     rsi, [rbp+47h+var_A8]

loc_1408B0FAA:                          ; CODE XREF: sub_1408B0BC0+5AA↓j
                mov     r13, [rsp+58h]

loc_1408B0FAF:                          ; CODE XREF: sub_1408B0BC0+185↑j
                                        ; sub_1408B0BC0+6AF↓j ...
                mov     r12d, [rbp+47h+arg_18]

loc_1408B0FB3:                          ; CODE XREF: sub_1408B0BC0+714↓j
                xor     r15d, r15d
                mov     r14b, r15b
                test    ebx, ebx
                js      loc_1408B0E6D
                lea     r8, [rbp+47h+var_A8]
                mov     edx, 0C8h
                mov     rcx, rdi
                call    sub_1402F1E60
                xor     edx, edx
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B12D9
                mov     rsi, [rbp+47h+var_A8]
                inc     rsi
                mov     ecx, r12d
                sub     rcx, 14h
                lea     rax, [rsi+rsi]
                cmp     rcx, rax
                jnb     loc_1408B12DC
                mov     ebx, 0C0000023h
                jmp     loc_1408B12DC
; ---------------------------------------------------------------------------

loc_1408B1003:                          ; CODE XREF: sub_1408B0BC0+221↑j
                cmp     [rbp+47h+var_B0], r13
                jz      loc_1408B11B6
                mov     rdx, rdi
                lea     rcx, [rbp+47h+var_40]
                call    RtlInitUnicodeStringEx
                test    eax, eax
                js      short loc_1408B106E
                xor     ecx, ecx
                call    sub_14067926C
                mov     edx, 746C6644h
                lea     rcx, [rbp+47h+var_40]
                call    sub_14067919C
                mov     [rbp+47h+var_88], rax
                mov     r12, rax
                test    rax, rax
                jz      short loc_1408B104B
                mov     rcx, [rax+138h]
                mov     rbx, [rcx+28h]
                jmp     short loc_1408B104E
; ---------------------------------------------------------------------------

loc_1408B104B:                          ; CODE XREF: sub_1408B0BC0+47C↑j
                mov     rbx, r13

loc_1408B104E:                          ; CODE XREF: sub_1408B0BC0+489↑j
                xor     ecx, ecx
                call    sub_140679140
                test    rbx, rbx
                jz      loc_1408B11A9
                mov     rcx, r12
                call    sub_14074B5B8
                test    al, al
                jnz     loc_1408B0DED

loc_1408B106E:                          ; CODE XREF: sub_1408B0BC0+45B↑j
                                        ; sub_1408B0BC0+5F1↓j ...
                mov     rdx, rdi
                lea     rcx, [rbp+47h+var_78]
                call    RtlInitUnicodeStringEx
                mov     ebx, eax
                mov     r14b, r13b
                test    eax, eax
                js      loc_1408B0E68
                mov     r8, [rbp+47h+var_B0]
                lea     rax, [rbp+47h+var_C0]
                mov     rcx, cs:qword_140CF4378
                mov     r15d, 4
                mov     dword ptr [rsp+120h+var_E8], r13d
                mov     rdx, rdi
                mov     [rsp+120h+var_F0], rax
                lea     rax, [rbp+47h+var_B8]
                mov     [rsp+120h+var_F8], rax
                lea     rax, [rbp+47h+var_BC]
                lea     r9d, [r15+7]
                mov     [rsp+120h+var_100], rax
                mov     [rbp+47h+var_C0], r15d
                call    sub_14062BA8C
                mov     ecx, [rbp+47h+var_B8]
                lea     r8, [rbp+47h+var_9C]
                test    eax, eax
                cmovs   ecx, r13d
                mov     [rbp+47h+var_B8], ecx
                lea     rcx, [rbp+47h+var_78]
                call    sub_14074F2BC
                mov     edx, [rbp+47h+var_9C]
                test    eax, eax
                cmovs   edx, r13d
                test    byte ptr [rbp+47h+var_B8], 12h
                setz    cl
                test    dl, 2
                setz    al
                test    al, cl
                jz      loc_1408B12C2
                lea     rcx, [rbp+47h+var_78]
                call    sub_1408B53EC
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B0E68
                mov     rdx, [rbp+47h+var_B0]
                lea     rax, [rbp+47h+var_C0]
                mov     [rsp+120h+var_F8], rax
                lea     r9, [rbp+47h+var_BC]
                lea     rax, [rbp+47h+var_98]
                mov     [rbp+47h+var_C0], r15d
                lea     r8, aPhantom    ; "Phantom"
                mov     [rsp+120h+var_100], rax
                call    sub_14071B494
                test    eax, eax
                js      short loc_1408B114F
                cmp     [rbp+47h+var_BC], r15d
                jnz     short loc_1408B114F
                mov     eax, [rbp+47h+var_98]
                cmp     [rbp+47h+var_C0], r15d
                jz      short loc_1408B1152

loc_1408B114F:                          ; CODE XREF: sub_1408B0BC0+57E↑j
                                        ; sub_1408B0BC0+584↑j
                mov     eax, r13d

loc_1408B1152:                          ; CODE XREF: sub_1408B0BC0+58D↑j
                test    eax, eax
                jz      short loc_1408B1166
                mov     rdx, [rbp+47h+var_B0]
                lea     r8, aPhantom    ; "Phantom"
                call    sub_140976080

loc_1408B1166:                          ; CODE XREF: sub_1408B0BC0+594↑j
                test    byte ptr [rbp+47h+var_68+4], 8
                jz      loc_1408B0FAA
                mov     r14d, 200h
                mov     r8d, 34706E50h
                mov     edx, r14d
                mov     [rbp+47h+var_C0], r14d
                mov     ecx, 1
                call    ExAllocatePoolWithTag
                xor     r12d, r12d
                mov     r13, rax
                test    rax, rax
                jnz     loc_1408B1238
                mov     ebx, 0C000009Ah
                mov     r14b, r12b
                jmp     loc_1408B0E6D
; ---------------------------------------------------------------------------

loc_1408B11A9:                          ; CODE XREF: sub_1408B0BC0+498↑j
                mov     rdx, rdi
                call    sub_1408A48FC
                jmp     loc_1408B106E
; ---------------------------------------------------------------------------

loc_1408B11B6:                          ; CODE XREF: sub_1408B0BC0+447↑j
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C44D40
                call    ExAcquireResourceExclusiveLite
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rsp+120h+var_D0]
                mov     dword ptr [rsp+120h+var_F8], r13d
                lea     r9, [rbp+47h+var_B0]
                mov     r8d, r12d
                mov     [rsp+120h+var_100], rax
                mov     rdx, rdi
                mov     byte ptr [rsp+120h+var_D0], r13b
                mov     r14b, 1
                call    sub_14073FF18
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B0E64
                lea     rcx, unk_140C44D40
                call    ExReleaseResourceLite
                call    KeLeaveCriticalRegion
                mov     r14b, r13b
                mov     rsi, [rbp+47h+var_A8]
                cmp     byte ptr [rsp+120h+var_D0], r13b
                jnz     loc_1408B106E
                mov     ebx, 0C0000035h
                jmp     loc_1408B0E68
; ---------------------------------------------------------------------------

loc_1408B1238:                          ; CODE XREF: sub_1408B0BC0+5D6↑j
                mov     r8, [rbp+47h+var_B0]
                lea     rax, [rbp+47h+var_C0]
                mov     rcx, cs:qword_140CF4378
                mov     r9d, 5
                mov     dword ptr [rsp+120h+var_E8], r12d
                mov     rdx, rdi
                mov     [rsp+120h+var_F0], rax
                lea     rax, [rbp+47h+var_BC]
                mov     [rsp+120h+var_F8], r13
                mov     [rsp+120h+var_100], rax
                call    sub_14062BA8C
                test    eax, eax
                js      loc_1408B0FAF
                cmp     [rbp+47h+var_BC], 1
                jnz     loc_1408B0FAF
                cmp     [rbp+47h+var_C0], r14d
                ja      loc_1408B0FAF
                cmp     [r13+0], r12w
                jz      loc_1408B0FAF
                mov     rdx, rdi
                lea     rcx, [rbp+47h+var_78]
                call    RtlInitUnicodeStringEx
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B0FAF
                xor     r9d, r9d
                lea     rcx, [rbp+47h+var_78]
                xor     r8d, r8d
                mov     dl, 1
                call    sub_140740328
                mov     ebx, eax
                jmp     loc_1408B0FAF
; ---------------------------------------------------------------------------

loc_1408B12C2:                          ; CODE XREF: sub_1408B0BC0+539↑j
                mov     ebx, 0C0000010h
                jmp     loc_1408B0E68
; ---------------------------------------------------------------------------

loc_1408B12CC:                          ; CODE XREF: sub_1408B0BC0+C4↑j
                                        ; sub_1408B0BC0+CE↑j ...
                mov     ebx, 0C000000Dh
                mov     r13, rsi
                jmp     loc_1408B0FB3
; ---------------------------------------------------------------------------

loc_1408B12D9:                          ; CODE XREF: sub_1408B0BC0+418↑j
                mov     rsi, rdx

loc_1408B12DC:                          ; CODE XREF: sub_1408B0BC0+433↑j
                                        ; sub_1408B0BC0+43E↑j
                test    ebx, ebx
                js      loc_1408B0E6D
                mov     rax, [rbp+47h+arg_28]
                lea     edx, [rsi+rsi]
                mov     [rsp+40h], rax
                mov     r9, rdi
                mov     rax, [rbp+47h+arg_10]
                xor     r8d, r8d
                mov     dword ptr [rsp+120h+var_E8], r12d
                mov     ecx, ebx
                mov     [rsp+120h+var_F0], rax
                mov     eax, dword ptr [rbp+47h+var_48+4]
                mov     dword ptr [rsp+120h+var_F8], eax
                mov     dword ptr [rsp+120h+var_100], edx
                call    sub_1406CC2C4
                xor     esi, esi
                jmp     loc_1408B0EA3
sub_1408B0BC0   endp

; ---------------------------------------------------------------------------
byte_1408B131D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D8E8↑o

; =============== S U B R O U T I N E =======================================


sub_1408B1324   proc near               ; CODE XREF: sub_1406C9390+153F56↑p
                                        ; DATA XREF: .pdata:000000014011D8F4↑o

var_58          = qword ptr -58h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = dword ptr -18h
var_8           = byte ptr -8
arg_20          = dword ptr  28h
arg_28          = qword ptr  30h

                mov     r11, rsp
                mov     [r11+8], rbx
                mov     [r11+10h], rsi
                mov     [r11+18h], rdi
                push    r14
                sub     rsp, 70h
                mov     r14, [rsp+78h+arg_28]
                xorps   xmm0, xmm0
                xor     eax, eax
                mov     esi, r9d
                mov     rdi, r8
                lea     r9, [r11-38h]
                mov     r8d, [rsp+78h+arg_20]
                and     [r14], eax
                movups  [rsp+78h+var_38], xmm0
                movups  [rsp+78h+var_28], xmm0
                mov     [r11-18h], rax
                call    sub_1405E20E8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B14AF
                mov     ecx, 2
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B1390
                mov     ebx, 0C0000022h
                jmp     loc_1408B1497
; ---------------------------------------------------------------------------

loc_1408B1390:                          ; CODE XREF: sub_1408B1324+60↑j
                mov     r10, qword ptr [rsp+78h+var_28]
                test    r10, r10
                jz      loc_1408B1492
                cmp     dword ptr [rsp+78h+var_38+4], 0
                jnz     loc_1408B1492
                cmp     dword ptr [rsp+78h+var_28+0Ch], 0
                jnz     loc_1408B1492
                test    rdi, rdi
                jz      loc_1408B1492
                mov     edx, 8
                cmp     esi, edx
                jb      loc_1408B1492
                mov     ecx, dword ptr [rsp+78h+var_38+8]
                lea     r9d, [rdx-2]
                xor     r8d, r8d
                cmp     ecx, r9d
                jg      short loc_1408B1420
                jz      short loc_1408B141B
                sub     ecx, 1
                jz      short loc_1408B1413
                sub     ecx, 1
                jz      short loc_1408B140B
                sub     ecx, 1
                jz      short loc_1408B1403
                sub     ecx, 1
                jz      short loc_1408B13FB
                cmp     ecx, 1
                jnz     short loc_1408B1464
                lea     r8d, [rdx-3]
                jmp     short loc_1408B1474
; ---------------------------------------------------------------------------

loc_1408B13FB:                          ; CODE XREF: sub_1408B1324+CA↑j
                mov     r8d, 3
                jmp     short loc_1408B1474
; ---------------------------------------------------------------------------

loc_1408B1403:                          ; CODE XREF: sub_1408B1324+C5↑j
                mov     r8d, 4
                jmp     short loc_1408B1479
; ---------------------------------------------------------------------------

loc_1408B140B:                          ; CODE XREF: sub_1408B1324+C0↑j
                mov     r8d, 2
                jmp     short loc_1408B1479
; ---------------------------------------------------------------------------

loc_1408B1413:                          ; CODE XREF: sub_1408B1324+BB↑j
                mov     r8d, 1
                jmp     short loc_1408B1474
; ---------------------------------------------------------------------------

loc_1408B141B:                          ; CODE XREF: sub_1408B1324+B6↑j
                mov     r8d, r9d
                jmp     short loc_1408B1474
; ---------------------------------------------------------------------------

loc_1408B1420:                          ; CODE XREF: sub_1408B1324+B4↑j
                sub     ecx, 10001h
                jz      short loc_1408B144F
                sub     ecx, 1
                jz      short loc_1408B1454
                sub     ecx, 1
                jz      short loc_1408B1448
                sub     ecx, 1
                jz      short loc_1408B1441
                cmp     ecx, 1
                jnz     short loc_1408B1464
                lea     edx, [rcx+0Ah]
                jmp     short loc_1408B1454
; ---------------------------------------------------------------------------

loc_1408B1441:                          ; CODE XREF: sub_1408B1324+111↑j
                mov     edx, 0Ah
                jmp     short loc_1408B1454
; ---------------------------------------------------------------------------

loc_1408B1448:                          ; CODE XREF: sub_1408B1324+10C↑j
                mov     edx, 9
                jmp     short loc_1408B1454
; ---------------------------------------------------------------------------

loc_1408B144F:                          ; CODE XREF: sub_1408B1324+102↑j
                mov     edx, 7

loc_1408B1454:                          ; CODE XREF: sub_1408B1324+107↑j
                                        ; sub_1408B1324+11B↑j ...
                mov     rax, cs:qword_140CF4380
                neg     rax
                sbb     r8d, r8d
                and     r8d, edx

loc_1408B1464:                          ; CODE XREF: sub_1408B1324+CF↑j
                                        ; sub_1408B1324+116↑j
                test    r8d, r8d
                jz      short loc_1408B1492
                cmp     r8d, 4
                jbe     short loc_1408B1479
                cmp     r8d, r9d
                ja      short loc_1408B1479

loc_1408B1474:                          ; CODE XREF: sub_1408B1324+D5↑j
                                        ; sub_1408B1324+DD↑j ...
                mov     ebx, 0C00000BBh

loc_1408B1479:                          ; CODE XREF: sub_1408B1324+E5↑j
                                        ; sub_1408B1324+ED↑j ...
                test    ebx, ebx
                js      short loc_1408B1497
                and     [rsp+78h+var_58], 0
                xor     r9d, r9d
                mov     rdx, r10
                call    sub_14073169C
                mov     ebx, eax
                jmp     short loc_1408B1497
; ---------------------------------------------------------------------------

loc_1408B1492:                          ; CODE XREF: sub_1408B1324+74↑j
                                        ; sub_1408B1324+7F↑j ...
                mov     ebx, 0C000000Dh

loc_1408B1497:                          ; CODE XREF: sub_1408B1324+67↑j
                                        ; sub_1408B1324+157↑j ...
                mov     edx, [rsp+78h+var_18]
                mov     r9d, esi
                mov     r8, rdi
                mov     [rsp+78h+var_58], r14
                mov     ecx, ebx
                call    sub_1405E2308
                mov     ebx, eax

loc_1408B14AF:                          ; CODE XREF: sub_1408B1324+4E↑j
                lea     rcx, [rsp+78h+var_38]
                call    sub_1405E1EAC
                lea     r11, [rsp+78h+var_8]
                mov     eax, ebx
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     rdi, [r11+20h]
                mov     rsp, r11
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B1324   endp

byte_1408B14D3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D8F4↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B14DC   proc near               ; CODE XREF: sub_1406C9390+153F71↑p
                                        ; DATA XREF: .pdata:000000014011D900↑o

var_40          = qword ptr -40h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  20h
arg_8           = qword ptr  28h
arg_10          = qword ptr  30h
arg_20          = dword ptr  40h
arg_28          = qword ptr  48h

                mov     [rsp-18h+arg_0], rbx
                mov     [rsp-18h+arg_8], rsi
                mov     [rsp-18h+arg_10], rdi
                push    rbp
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                mov     r15, [rbp+arg_28]
                xor     eax, eax
                and     [rbp+arg_28], rax
                xorps   xmm0, xmm0
                mov     esi, r9d
                mov     [rbp+var_10], rax
                mov     r14, r8
                lea     r9, [rbp+var_30]
                mov     r8d, [rbp+arg_20]
                and     [r15], eax
                movups  [rbp+var_30], xmm0
                movups  [rbp+var_20], xmm0
                call    sub_1405E20E8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B15BC
                mov     ecx, 2
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B1545
                mov     eax, 0C0000022h
                jmp     short loc_1408B15A5
; ---------------------------------------------------------------------------

loc_1408B1545:                          ; CODE XREF: sub_1408B14DC+60↑j
                mov     rbx, qword ptr [rbp+var_20]
                test    rbx, rbx
                jz      short loc_1408B15A0
                cmp     dword ptr [rbp+var_20+0Ch], 0
                jnz     short loc_1408B15A0
                test    r14, r14
                jz      short loc_1408B15A0
                cmp     esi, 8
                jb      short loc_1408B15A0
                mov     edi, dword ptr [rbp+var_30+8]
                lea     eax, [rdi-2]
                cmp     eax, 1
                ja      short loc_1408B15A0
                mov     eax, dword ptr [rbp+var_30+4]
                dec     eax
                cmp     eax, 1
                ja      short loc_1408B15A0
                lea     rcx, [rbp+arg_28]
                call    sub_1406C91CC
                test    eax, eax
                js      short loc_1408B15A5
                mov     rcx, cs:qword_140CF4378
                xor     r8d, r8d
                mov     rdx, rbx
                cmp     edi, 3
                jnz     short loc_1408B1599
                call    sub_140976CD0
                jmp     short loc_1408B15A5
; ---------------------------------------------------------------------------

loc_1408B1599:                          ; CODE XREF: sub_1408B14DC+B4↑j
                call    sub_140976910
                jmp     short loc_1408B15A5
; ---------------------------------------------------------------------------

loc_1408B15A0:                          ; CODE XREF: sub_1408B14DC+70↑j
                                        ; sub_1408B14DC+76↑j ...
                mov     eax, 0C000000Dh

loc_1408B15A5:                          ; CODE XREF: sub_1408B14DC+67↑j
                                        ; sub_1408B14DC+A2↑j ...
                mov     edx, dword ptr [rbp+var_10]
                mov     r9d, esi
                mov     r8, r14
                mov     [rsp+60h+var_40], r15
                mov     ecx, eax
                call    sub_1405E2308
                mov     ebx, eax

loc_1408B15BC:                          ; CODE XREF: sub_1408B14DC+4E↑j
                lea     rcx, [rbp+var_30]
                call    sub_1405E1EAC
                mov     rcx, [rbp+arg_28]
                test    rcx, rcx
                jz      short loc_1408B15D3
                call    sub_1406CDB1C

loc_1408B15D3:                          ; CODE XREF: sub_1408B14DC+F0↑j
                lea     r11, [rsp+60h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+20h]
                mov     rsi, [r11+28h]
                mov     rdi, [r11+30h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B14DC   endp

byte_1408B15F0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D900↑o

; =============== S U B R O U T I N E =======================================


sub_1408B15F8   proc near               ; CODE XREF: sub_1406C9390+153EC5↑p
                                        ; DATA XREF: .pdata:000000014011D90C↑o

var_48          = qword ptr -48h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = dword ptr -18h
var_8           = byte ptr -8
arg_20          = dword ptr  28h
arg_28          = qword ptr  30h

                mov     r11, rsp
                mov     [r11+8], rbx
                mov     [r11+10h], rsi
                mov     [r11+18h], rdi
                push    r14
                sub     rsp, 60h
                mov     r14, [rsp+68h+arg_28]
                xorps   xmm0, xmm0
                xor     eax, eax
                mov     edi, r9d
                mov     rsi, r8
                lea     r9, [r11-38h]
                mov     r8d, [rsp+68h+arg_20]
                and     [r14], eax
                movups  [rsp+68h+var_38], xmm0
                movups  [rsp+68h+var_28], xmm0
                mov     [r11-18h], rax
                call    sub_1405E20E8
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B16BC
                mov     ecx, 2
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B165D
                mov     eax, 0C0000022h
                jmp     short loc_1408B16A4
; ---------------------------------------------------------------------------

loc_1408B165D:                          ; CODE XREF: sub_1408B15F8+5C↑j
                mov     rdx, qword ptr [rsp+68h+var_28]
                test    rdx, rdx
                jz      short loc_1408B169F
                cmp     dword ptr [rsp+68h+var_38+4], 0
                jnz     short loc_1408B169F
                cmp     dword ptr [rsp+68h+var_38+8], 4
                jnz     short loc_1408B169F
                cmp     dword ptr [rsp+68h+var_28+0Ch], 0
                jnz     short loc_1408B169F
                test    rsi, rsi
                jz      short loc_1408B169F
                cmp     edi, 8
                jb      short loc_1408B169F
                mov     rcx, cs:qword_140CF4378
                mov     r8d, 32h ; '2'
                mov     byte ptr [rsp+68h+var_48], 1
                call    sub_14072BD50
                jmp     short loc_1408B16A4
; ---------------------------------------------------------------------------

loc_1408B169F:                          ; CODE XREF: sub_1408B15F8+6D↑j
                                        ; sub_1408B15F8+74↑j ...
                mov     eax, 0C000000Dh

loc_1408B16A4:                          ; CODE XREF: sub_1408B15F8+63↑j
                                        ; sub_1408B15F8+A5↑j
                mov     edx, [rsp+68h+var_18]
                mov     r9d, edi
                mov     r8, rsi
                mov     [rsp+68h+var_48], r14
                mov     ecx, eax
                call    sub_1405E2308
                mov     ebx, eax

loc_1408B16BC:                          ; CODE XREF: sub_1408B15F8+4E↑j
                lea     rcx, [rsp+68h+var_38]
                call    sub_1405E1EAC
                lea     r11, [rsp+68h+var_8]
                mov     eax, ebx
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     rdi, [r11+20h]
                mov     rsp, r11
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B15F8   endp

byte_1408B16E0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D90C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=47h

sub_1408B16E8   proc near               ; CODE XREF: sub_1406C9390+153F16↑p
                                        ; DATA XREF: .pdata:000000014011D918↑o

var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = dword ptr -0A0h
var_9C          = dword ptr -9Ch
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = xmmword ptr -88h
var_78          = xmmword ptr -78h
var_68          = qword ptr -68h
var_60          = xmmword ptr -60h
var_50          = byte ptr -50h
var_40          = qword ptr -40h
arg_20          = dword ptr  30h
arg_28          = qword ptr  38h

; __unwind { // __GSHandlerCheck
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r15
                lea     rbp, [rsp-17h]
                sub     rsp, 0A0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+47h+var_40], rax
                mov     r13, [rbp+47h+arg_28]
                xor     edi, edi
                xorps   xmm0, xmm0
                mov     [rbp+47h+var_98], rdi
                mov     r12d, r9d
                mov     [rbp+47h+var_90], rdi
                mov     r15, r8
                mov     [rbp+47h+var_9C], edi
                mov     r8d, [rbp+47h+arg_20]
                lea     r9, [rbp+47h+var_88]
                xor     eax, eax
                mov     [r13+0], edi
                movups  [rbp+47h+var_88], xmm0
                mov     [rbp+47h+var_68], rax
                movups  [rbp+47h+var_78], xmm0
                mov     [rbp+47h+var_A0], edi
                movups  [rbp+47h+var_60], xmm0
                call    sub_1405E20E8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B18F2
                lea     ecx, [rdi+2]
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B176D
                mov     ebx, 0C0000022h
                jmp     loc_1408B18CD
; ---------------------------------------------------------------------------

loc_1408B176D:                          ; CODE XREF: sub_1408B16E8+79↑j
                cmp     qword ptr [rbp+47h+var_78], rdi
                jz      loc_1408B18C8
                cmp     dword ptr [rbp+47h+var_88+8], 1
                jnz     loc_1408B18C8
                test    r15, r15
                jz      loc_1408B18C8
                cmp     r12d, 8
                jb      loc_1408B18C8
                mov     r11d, dword ptr [rbp+47h+var_88+4]
                lea     rdx, [rbp+47h+var_A0]
                mov     ecx, r11d
                call    sub_1406D230C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B18CD
                mov     r9d, dword ptr [rbp+47h+var_78+0Ch]
                and     r11d, 0FF00h
                cmp     r11d, 200h
                jnz     loc_1408B18B0
                cmp     r9d, 0FFFFFFFFh
                jnz     loc_1408B18B0
                mov     rcx, cs:qword_140CF4378
                lea     r8, [rbp+47h+var_98]
                mov     edx, 4
                call    sub_14062C5C0
                test    eax, eax
                js      loc_1408B18CD
                mov     rax, cs:qword_140CF4378
                mov     rcx, rdi
                test    rax, rax
                jz      short loc_1408B1803
                mov     rcx, [rax+0E0h]

loc_1408B1803:                          ; CODE XREF: sub_1408B16E8+112↑j
                mov     rdx, [rbp+47h+var_98]
                lea     rax, [rbp+47h+var_90]
                mov     [rsp+0D0h+var_A8], rax
                lea     r8, aControlIdconfi ; "Control\\IDConfigDB\\Hardware Profiles"
                xor     r9d, r9d
                mov     dword ptr [rsp+0D0h+var_B0], 8
                mov     esi, edi
                call    sub_14062CECC
                test    eax, eax
                js      loc_1408B18CD

loc_1408B1831:                          ; CODE XREF: sub_1408B16E8+1C4↓j
                test    ebx, ebx
                js      loc_1408B18CD
                mov     rcx, [rbp+47h+var_90]
                lea     r9, [rbp+47h+var_98]
                lea     r8, [rbp+47h+var_50]
                mov     dword ptr [rbp+47h+var_98], 5
                mov     edx, esi
                call    sub_14076554C
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B18A8
                lea     rdx, [rbp+47h+var_50]
                lea     rcx, [rbp+47h+var_60]
                call    RtlInitUnicodeStringEx
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B18A8
                lea     r8, [rbp+47h+var_9C]
                xor     edx, edx
                lea     rcx, [rbp+47h+var_60]
                call    RtlUnicodeStringToInteger
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B18A8
                mov     r9d, [rbp+47h+var_9C]
                mov     r8d, [rbp+47h+var_A0]
                mov     rdx, qword ptr [rbp+47h+var_78]
                mov     rcx, cs:qword_140CF4378
                call    sub_14072C5DC
                mov     ebx, eax
                cmp     eax, 0C0000034h
                mov     eax, 0
                cmovz   ebx, eax

loc_1408B18A8:                          ; CODE XREF: sub_1408B16E8+16F↑j
                                        ; sub_1408B16E8+182↑j ...
                inc     esi
                test    edi, edi
                jns     short loc_1408B1831
                jmp     short loc_1408B18CD
; ---------------------------------------------------------------------------

loc_1408B18B0:                          ; CODE XREF: sub_1408B16E8+D8↑j
                                        ; sub_1408B16E8+E2↑j
                mov     r8d, [rbp+47h+var_A0]
                mov     rdx, qword ptr [rbp+47h+var_78]
                mov     rcx, cs:qword_140CF4378
                call    sub_14072C5DC
                mov     ebx, eax
                jmp     short loc_1408B18CD
; ---------------------------------------------------------------------------

loc_1408B18C8:                          ; CODE XREF: sub_1408B16E8+89↑j
                                        ; sub_1408B16E8+93↑j ...
                mov     ebx, 0C000000Dh

loc_1408B18CD:                          ; CODE XREF: sub_1408B16E8+80↑j
                                        ; sub_1408B16E8+C0↑j ...
                mov     rcx, [rbp+47h+var_90]
                test    rcx, rcx
                jz      short loc_1408B18DB
                call    ZwClose

loc_1408B18DB:                          ; CODE XREF: sub_1408B16E8+1EC↑j
                mov     edx, dword ptr [rbp+47h+var_68]
                mov     r9d, r12d
                mov     r8, r15
                mov     [rsp+0D0h+var_B0], r13
                mov     ecx, ebx
                call    sub_1405E2308
                mov     ebx, eax

loc_1408B18F2:                          ; CODE XREF: sub_1408B16E8+69↑j
                lea     rcx, [rbp+47h+var_88]
                call    sub_1405E1EAC
                mov     eax, ebx
                mov     rcx, [rbp+47h+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0A0h
                pop     r15
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B16E8
sub_1408B16E8   endp

byte_1408B191C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D918↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B1924   proc near               ; CODE XREF: sub_1406C9390+153F3B↑p
                                        ; DATA XREF: .pdata:000000014011D924↑o

var_40          = qword ptr -40h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_20          = dword ptr  40h
arg_28          = qword ptr  48h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], rdi
                mov     [rax+20h], r12
                push    rbp
                push    r13
                push    r15
                mov     rbp, rsp
                sub     rsp, 60h
                mov     r13, [rbp+arg_28]
                xorps   xmm0, xmm0
                xor     eax, eax
                mov     r12d, r9d
                mov     r15, r8
                mov     [rbp+var_10], rax
                mov     r8d, [rbp+arg_20]
                lea     r9, [rbp+var_30]
                and     [r13+0], eax
                xor     esi, esi
                movups  [rbp+var_30], xmm0
                mov     [rbp+arg_28], rsi
                movups  [rbp+var_20], xmm0
                call    sub_1405E20E8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B1AAF
                lea     ecx, [rsi+2]
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B1995
                mov     ebx, 0C0000022h
                jmp     loc_1408B1A98
; ---------------------------------------------------------------------------

loc_1408B1995:                          ; CODE XREF: sub_1408B1924+65↑j
                cmp     qword ptr [rbp+var_20], rsi
                jz      loc_1408B1A93
                cmp     dword ptr [rbp+var_30+4], esi
                jnz     loc_1408B1A93
                cmp     dword ptr [rbp+var_20+0Ch], esi
                jnz     loc_1408B1A93
                test    r15, r15
                jz      loc_1408B1A93
                mov     edx, 8
                cmp     r12d, edx
                jb      loc_1408B1A93
                mov     ecx, dword ptr [rbp+var_30+8]
                lea     r8d, [rdx-2]
                xor     edi, edi
                cmp     ecx, r8d
                jg      short loc_1408B1A17
                jz      short loc_1408B1A12
                sub     ecx, 1
                jz      short loc_1408B1A0B
                sub     ecx, 1
                jz      short loc_1408B1A04
                sub     ecx, 1
                jz      short loc_1408B19FD
                sub     ecx, 1
                jz      short loc_1408B19F6
                cmp     ecx, 1
                jnz     short loc_1408B1A59
                lea     edi, [rdx-3]
                jmp     short loc_1408B1A67
; ---------------------------------------------------------------------------

loc_1408B19F6:                          ; CODE XREF: sub_1408B1924+C6↑j
                mov     edi, 3
                jmp     short loc_1408B1A67
; ---------------------------------------------------------------------------

loc_1408B19FD:                          ; CODE XREF: sub_1408B1924+C1↑j
                mov     edi, 4
                jmp     short loc_1408B1A6C
; ---------------------------------------------------------------------------

loc_1408B1A04:                          ; CODE XREF: sub_1408B1924+BC↑j
                mov     edi, 2
                jmp     short loc_1408B1A6C
; ---------------------------------------------------------------------------

loc_1408B1A0B:                          ; CODE XREF: sub_1408B1924+B7↑j
                mov     edi, 1
                jmp     short loc_1408B1A67
; ---------------------------------------------------------------------------

loc_1408B1A12:                          ; CODE XREF: sub_1408B1924+B2↑j
                mov     edi, r8d
                jmp     short loc_1408B1A67
; ---------------------------------------------------------------------------

loc_1408B1A17:                          ; CODE XREF: sub_1408B1924+B0↑j
                sub     ecx, 10001h
                jz      short loc_1408B1A46
                sub     ecx, 1
                jz      short loc_1408B1A4B
                sub     ecx, 1
                jz      short loc_1408B1A3F
                sub     ecx, 1
                jz      short loc_1408B1A38
                cmp     ecx, 1
                jnz     short loc_1408B1A59
                lea     edx, [rcx+0Ah]
                jmp     short loc_1408B1A4B
; ---------------------------------------------------------------------------

loc_1408B1A38:                          ; CODE XREF: sub_1408B1924+108↑j
                mov     edx, 0Ah
                jmp     short loc_1408B1A4B
; ---------------------------------------------------------------------------

loc_1408B1A3F:                          ; CODE XREF: sub_1408B1924+103↑j
                mov     edx, 9
                jmp     short loc_1408B1A4B
; ---------------------------------------------------------------------------

loc_1408B1A46:                          ; CODE XREF: sub_1408B1924+F9↑j
                mov     edx, 7

loc_1408B1A4B:                          ; CODE XREF: sub_1408B1924+FE↑j
                                        ; sub_1408B1924+112↑j ...
                mov     rax, cs:qword_140CF4380
                neg     rax
                sbb     edi, edi
                and     edi, edx

loc_1408B1A59:                          ; CODE XREF: sub_1408B1924+CB↑j
                                        ; sub_1408B1924+10D↑j
                test    edi, edi
                jz      short loc_1408B1A93
                cmp     edi, 4
                jbe     short loc_1408B1A6C
                cmp     edi, r8d
                ja      short loc_1408B1A6C

loc_1408B1A67:                          ; CODE XREF: sub_1408B1924+D0↑j
                                        ; sub_1408B1924+D7↑j ...
                mov     ebx, 0C00000BBh

loc_1408B1A6C:                          ; CODE XREF: sub_1408B1924+DE↑j
                                        ; sub_1408B1924+E5↑j ...
                test    ebx, ebx
                js      short loc_1408B1A98
                lea     rcx, [rbp+arg_28]
                call    sub_1406C91CC
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B1A8D
                mov     rdx, qword ptr [rbp+var_20]
                mov     r8d, edi
                call    sub_140977D08
                mov     ebx, eax

loc_1408B1A8D:                          ; CODE XREF: sub_1408B1924+159↑j
                mov     rsi, [rbp+arg_28]
                jmp     short loc_1408B1A98
; ---------------------------------------------------------------------------

loc_1408B1A93:                          ; CODE XREF: sub_1408B1924+75↑j
                                        ; sub_1408B1924+7E↑j ...
                mov     ebx, 0C000000Dh

loc_1408B1A98:                          ; CODE XREF: sub_1408B1924+6C↑j
                                        ; sub_1408B1924+14A↑j ...
                mov     edx, dword ptr [rbp+var_10]
                mov     r9d, r12d
                mov     r8, r15
                mov     [rsp+60h+var_40], r13
                mov     ecx, ebx
                call    sub_1405E2308
                mov     ebx, eax

loc_1408B1AAF:                          ; CODE XREF: sub_1408B1924+55↑j
                lea     rcx, [rbp+var_30]
                call    sub_1405E1EAC
                test    rsi, rsi
                jz      short loc_1408B1AC5
                mov     rcx, rsi
                call    sub_1406CDB1C

loc_1408B1AC5:                          ; CODE XREF: sub_1408B1924+197↑j
                lea     r11, [rsp+60h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+20h]
                mov     rsi, [r11+28h]
                mov     rdi, [r11+30h]
                mov     r12, [r11+38h]
                mov     rsp, r11
                pop     r15
                pop     r13
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B1924   endp

byte_1408B1AE6  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D924↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B1AEC   proc near               ; CODE XREF: sub_1406C9390+153E4D↑p
                                        ; DATA XREF: .pdata:000000014011D930↑o

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_30          = qword ptr -30h
var_20          = qword ptr -20h
var_18          = xmmword ptr -18h
var_8           = dword ptr -8
var_s0          = byte ptr  0
arg_0           = qword ptr  20h
arg_8           = qword ptr  28h
arg_10          = qword ptr  30h
arg_20          = dword ptr  40h
arg_28          = qword ptr  48h

                mov     [rsp-18h+arg_0], rbx
                mov     [rsp-18h+arg_8], rdi
                mov     [rsp-18h+arg_10], r12
                push    rbp
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 70h
                mov     r12, [rbp+arg_28]
                xor     eax, eax
                and     [rbp+var_20], rax
                mov     r14d, r9d
                and     [rbp+arg_20], eax
                lea     r9, [rbp+var_18]
                and     dword ptr [rbp+arg_28], eax
                xorps   xmm0, xmm0
                and     [r12], eax
                mov     r15, r8
                movups  [rbp+var_18], xmm0
                mov     [rbp+var_8], eax
                xor     edi, edi
                call    sub_1408B0828
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B1B85
                cmp     dword ptr [rbp+var_18+4], edi
                jz      short loc_1408B1BA2

loc_1408B1B41:                          ; CODE XREF: sub_1408B1AEC+D0↓j
                                        ; sub_1408B1AEC+10B↓j
                mov     ecx, 0C000000Dh

loc_1408B1B46:                          ; CODE XREF: sub_1408B1AEC+F1↓j
                                        ; sub_1408B1AEC+136↓j ...
                mov     edx, [rbp+arg_20]
                mov     eax, [rbp+var_8]
                add     edx, edx
                mov     [rsp+70h+var_30], r12
                mov     [rsp+70h+var_38], r14d
                mov     [rsp+70h+var_40], r15
                mov     dword ptr [rsp+70h+var_48], eax
                and     dword ptr [rsp+70h+var_50], 0
                xor     r9d, r9d

loc_1408B1B69:                          ; CODE XREF: sub_1408B1AEC+218↓j
                xor     r8d, r8d
                call    sub_1406CC2C4
                mov     ebx, eax
                test    rdi, rdi
                jz      short loc_1408B1B85
                mov     edx, 34706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B1B85:                          ; CODE XREF: sub_1408B1AEC+4E↑j
                                        ; sub_1408B1AEC+8A↑j
                lea     r11, [rsp+70h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+20h]
                mov     rdi, [r11+28h]
                mov     r12, [r11+30h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 2

loc_1408B1BA2:                          ; CODE XREF: sub_1408B1AEC+53↑j
                test    r15, r15
                jz      loc_1408B1CD4
                cmp     r14d, 14h
                jb      loc_1408B1CD4
                lea     ebx, [r14-14h]
                cmp     ebx, 2
                jb      short loc_1408B1B41
                mov     edx, ebx
                mov     ecx, 1
                mov     r8d, 34706E50h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408B1BE2
                mov     ecx, 0C000009Ah
                jmp     loc_1408B1B46
; ---------------------------------------------------------------------------

loc_1408B1BE2:                          ; CODE XREF: sub_1408B1AEC+EA↑j
                mov     ecx, dword ptr [rbp+var_18+8]
                shr     ebx, 1
                mov     [rbp+arg_20], ebx
                sub     ecx, 1
                jz      short loc_1408B1C09
                sub     ecx, 1
                jz      short loc_1408B1C02
                cmp     ecx, 1
                jnz     loc_1408B1B41
                lea     edx, [rcx+7]
                jmp     short loc_1408B1C0E
; ---------------------------------------------------------------------------

loc_1408B1C02:                          ; CODE XREF: sub_1408B1AEC+106↑j
                mov     edx, 7
                jmp     short loc_1408B1C0E
; ---------------------------------------------------------------------------

loc_1408B1C09:                          ; CODE XREF: sub_1408B1AEC+101↑j
                mov     edx, 5

loc_1408B1C0E:                          ; CODE XREF: sub_1408B1AEC+114↑j
                                        ; sub_1408B1AEC+11B↑j
                mov     rcx, cs:qword_140CF4378
                lea     r8, [rbp+var_20]
                call    sub_14062C5C0
                mov     ecx, eax
                test    eax, eax
                js      loc_1408B1B46
                mov     ebx, dword ptr [rbp+var_18+0Ch]
                lea     r9, [rbp+arg_20]
                mov     rcx, [rbp+var_20]
                mov     edx, ebx
                mov     r8, rdi
                call    sub_14076554C
                mov     ecx, eax
                cmp     eax, 8000001Ah
                jnz     loc_1408B1CD9
                cmp     dword ptr [rbp+var_18+8], 3
                jnz     loc_1408B1B46
                call    sub_14035C718
                test    al, al
                jz      loc_1408B1B46
                and     [rsp+70h+var_40], 0
                lea     r8, [rbp+arg_28]
                and     [rsp+70h+var_48], 0
                xor     r9d, r9d
                mov     rdx, [rbp+var_20]
                and     [rsp+70h+var_50], 0
                call    sub_1405E2F04
                mov     ecx, eax
                test    eax, eax
                js      loc_1408B1B46
                cmp     ebx, dword ptr [rbp+arg_28]
                jnb     short loc_1408B1C9C
                mov     ecx, 0C00000E5h
                jmp     loc_1408B1B46
; ---------------------------------------------------------------------------

loc_1408B1C9C:                          ; CODE XREF: sub_1408B1AEC+1A4↑j
                mov     rcx, cs:qword_140CF4378
                lea     r8, [rbp+var_20]
                mov     edx, 9
                call    sub_14062C5C0
                mov     ecx, eax
                test    eax, eax
                js      loc_1408B1B46
                sub     ebx, dword ptr [rbp+arg_28]
                lea     r9, [rbp+arg_20]
                mov     rcx, [rbp+var_20]
                mov     edx, ebx
                mov     r8, rdi
                call    sub_14076554C
                mov     ecx, eax
                jmp     short loc_1408B1CD9
; ---------------------------------------------------------------------------

loc_1408B1CD4:                          ; CODE XREF: sub_1408B1AEC+B9↑j
                                        ; sub_1408B1AEC+C3↑j
                mov     ecx, 0C000000Dh

loc_1408B1CD9:                          ; CODE XREF: sub_1408B1AEC+158↑j
                                        ; sub_1408B1AEC+1E6↑j
                test    ecx, ecx
                js      loc_1408B1B46
                mov     eax, [rbp+arg_20]
                mov     r9, rdi
                mov     [rsp+70h+var_30], r12
                mov     [rsp+70h+var_38], r14d
                mov     [rsp+70h+var_40], r15
                lea     edx, [rax+rax]
                mov     eax, [rbp+var_8]
                mov     dword ptr [rsp+70h+var_48], eax
                mov     dword ptr [rsp+70h+var_50], edx
                jmp     loc_1408B1B69
sub_1408B1AEC   endp

; ---------------------------------------------------------------------------
algn_1408B1D09:                         ; DATA XREF: .pdata:000000014011D930↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B1D10   proc near               ; CODE XREF: sub_1408B0BC0+176↑p
                                        ; DATA XREF: .pdata:000000014011D93C↑o

var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_20          = qword ptr -20h
var_18          = byte ptr -18h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  40h
arg_10          = dword ptr  50h
arg_18          = dword ptr  58h

                mov     [rsp-38h+arg_0], rbx
                mov     [rsp-38h+arg_18], r9d
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 70h
                xor     r12d, r12d
                mov     r13b, dl
                mov     [r8], r12w
                mov     r14d, 0C8h
                mov     r15, r8
                mov     [rbp+var_28], r12d
                xorps   xmm0, xmm0
                mov     [rbp+var_2C], r12d
                lea     r8, [rbp+var_18]
                mov     [rbp+var_30], r12d
                mov     edx, r14d
                mov     [rbp+arg_10], r12d
                mov     rsi, rcx
                mov     [rbp+var_20], r12
                movups  [rbp+var_10], xmm0
                mov     edi, r12d
                call    sub_1402F1E60
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B203B
                movzx   ecx, word ptr [rsi]
                mov     rdx, rsi
                jmp     short loc_1408B1D9A
; ---------------------------------------------------------------------------

loc_1408B1D7E:                          ; CODE XREF: sub_1408B1D10+8D↓j
                lea     eax, [rcx-21h]
                cmp     ax, 5Eh ; '^'
                ja      short loc_1408B1DA1
                cmp     cx, 2Ch ; ','
                jz      short loc_1408B1DA1
                cmp     cx, 5Ch ; '\'
                jz      short loc_1408B1DA1
                add     rdx, 2
                movzx   ecx, word ptr [rdx]

loc_1408B1D9A:                          ; CODE XREF: sub_1408B1D10+6C↑j
                test    cx, cx
                jnz     short loc_1408B1D7E
                jmp     short loc_1408B1DA6
; ---------------------------------------------------------------------------

loc_1408B1DA1:                          ; CODE XREF: sub_1408B1D10+75↑j
                                        ; sub_1408B1D10+7B↑j ...
                mov     ebx, 0C0000033h

loc_1408B1DA6:                          ; CODE XREF: sub_1408B1D10+8F↑j
                test    ebx, ebx
                js      loc_1408B203B
                mov     dword ptr [rsp+70h+var_48], 800h
                lea     r8, aRoot       ; "Root"
                xor     r9d, r9d
                mov     [rsp+70h+var_50], r12
                mov     rdx, r14
                mov     rcx, r15
                call    sub_140203D40
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B203B
                mov     rdx, r15
                lea     rcx, [rbp+var_10]
                call    RtlInitUnicodeStringEx
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B203B
                xor     r8d, r8d
                lea     rdx, [rbp+var_10]
                lea     rcx, [rbp+var_10]
                call    RtlUpcaseUnicodeString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B203B
                lea     r8, qword_1407D4A10
                mov     rdx, r14
                mov     rcx, r15
                call    sub_1403C3730
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B203B
                mov     r8, rsi
                mov     rdx, r14
                mov     rcx, r15
                call    sub_1403C3730
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B203B
                mov     edx, 190h
                mov     ecx, 1
                mov     r8d, 34706E50h
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408B1E65
                mov     ebx, 0C000009Ah
                jmp     loc_1408B2049
; ---------------------------------------------------------------------------

loc_1408B1E65:                          ; CODE XREF: sub_1408B1D10+149↑j
                mov     r14d, r12d

loc_1408B1E68:                          ; CODE XREF: sub_1408B1D10+260↓j
                test    rdi, rdi
                jz      short loc_1408B1E7C
                mov     rcx, rdi
                call    ZwClose
                mov     rdi, r12
                mov     [rbp+var_20], r12

loc_1408B1E7C:                          ; CODE XREF: sub_1408B1D10+15B↑j
                mov     [rsp+70h+var_38], r14d
                lea     rax, aS04u      ; "%s\\%04u"
                mov     [rsp+70h+var_40], r15
                xor     r9d, r9d
                mov     [rsp+70h+var_48], rax
                xor     r8d, r8d
                mov     edx, 0C8h
                mov     dword ptr [rsp+70h+var_50], 800h
                mov     rcx, rsi
                call    sub_14021D28C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B2021
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+var_30]
                mov     [rsp+70h+var_48], rax
                lea     r9, [rbp+var_28]
                lea     rax, [rbp+var_2C]
                xor     r8d, r8d
                mov     rdx, rsi
                mov     [rsp+70h+var_50], rax
                call    sub_1405E170C
                test    eax, eax
                jns     short loc_1408B1F61
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C44D40
                call    ExAcquireResourceExclusiveLite
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+arg_18]
                xor     edi, edi
                lea     r9, [rbp+var_20]
                mov     dword ptr [rsp+70h+var_48], edi
                mov     r8d, 20006h
                mov     rdx, rsi
                mov     [rsp+70h+var_50], rax
                mov     r12b, 1
                mov     byte ptr [rbp+arg_18], dil
                call    sub_14073FF18
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B2003
                cmp     byte ptr [rbp+arg_18], dil
                jnz     short loc_1408B1F75
                lea     rcx, unk_140C44D40
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                mov     rdi, [rbp+var_20]
                xor     r12d, r12d

loc_1408B1F61:                          ; CODE XREF: sub_1408B1D10+1D1↑j
                inc     r14d
                cmp     r14d, 270Fh
                ja      short loc_1408B1F82
                xor     r12d, r12d
                jmp     loc_1408B1E68
; ---------------------------------------------------------------------------

loc_1408B1F75:                          ; CODE XREF: sub_1408B1D10+22E↑j
                mov     rdi, [rbp+var_20]
                cmp     r14d, 270Fh
                jbe     short loc_1408B1F89

loc_1408B1F82:                          ; CODE XREF: sub_1408B1D10+25B↑j
                mov     ebx, 8000001Ah
                jmp     short loc_1408B1FFE
; ---------------------------------------------------------------------------

loc_1408B1F89:                          ; CODE XREF: sub_1408B1D10+270↑j
                mov     rdx, rsi
                call    sub_14062D1B0
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B1FEC
                mov     dword ptr [rsp+70h+var_48], 800h
                xor     r9d, r9d
                and     [rsp+70h+var_50], 0
                mov     r8, rsi
                mov     edx, 0C8h
                mov     rcx, r15
                call    sub_140203D40
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B1FEC
                test    r13b, r13b
                jz      short loc_1408B1FFE
                mov     r8d, 4
                mov     [rbp+arg_10], 1
                lea     r9, [rbp+arg_10]
                mov     dword ptr [rsp+70h+var_50], r8d
                lea     rdx, aPhantom   ; "Phantom"
                mov     rcx, rdi
                call    sub_140767814
                mov     ebx, eax
                jmp     short loc_1408B1FFE
; ---------------------------------------------------------------------------

loc_1408B1FEC:                          ; CODE XREF: sub_1408B1D10+285↑j
                                        ; sub_1408B1D10+2AC↑j
                mov     rcx, cs:qword_140CF4378
                xor     r8d, r8d
                mov     rdx, rsi
                call    sub_14072AF0C

loc_1408B1FFE:                          ; CODE XREF: sub_1408B1D10+277↑j
                                        ; sub_1408B1D10+2B1↑j ...
                test    r12b, r12b
                jz      short loc_1408B2021

loc_1408B2003:                          ; CODE XREF: sub_1408B1D10+224↑j
                lea     rcx, unk_140C44D40
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                mov     rdi, [rbp+var_20]

loc_1408B2021:                          ; CODE XREF: sub_1408B1D10+1A1↑j
                                        ; sub_1408B1D10+2F1↑j
                test    rdi, rdi
                jz      short loc_1408B202E
                mov     rcx, rdi
                call    ZwClose

loc_1408B202E:                          ; CODE XREF: sub_1408B1D10+314↑j
                mov     edx, 34706E50h
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408B203B:                          ; CODE XREF: sub_1408B1D10+60↑j
                                        ; sub_1408B1D10+98↑j ...
                cmp     ebx, 80000005h
                mov     eax, 0C0000023h
                cmovz   ebx, eax

loc_1408B2049:                          ; CODE XREF: sub_1408B1D10+150↑j
                mov     eax, ebx
                mov     rbx, [rsp+70h+arg_0]
                add     rsp, 70h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B1D10   endp

byte_1408B2064  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D93C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B206C   proc near               ; CODE XREF: sub_1406C9390+153E3A↑p
                                        ; DATA XREF: .pdata:000000014011D948↑o

var_60          = dword ptr -60h
var_58          = dword ptr -58h
var_50          = qword ptr -50h
var_48          = dword ptr -48h
var_40          = qword ptr -40h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_20          = dword ptr  40h
arg_28          = qword ptr  48h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], rdi
                mov     [rax+20h], r12
                push    rbp
                push    r13
                push    r14
                mov     rbp, rsp
                sub     rsp, 80h
                mov     r13, [rbp+arg_28]
                xor     eax, eax
                and     dword ptr [rbp+arg_28], eax
                xorps   xmm0, xmm0
                mov     r14d, r9d
                mov     [rbp+var_10], rax
                mov     r12, r8
                lea     r9, [rbp+var_30]
                mov     r8d, [rbp+arg_20]
                xor     esi, esi
                and     [r13+0], eax
                movups  [rbp+var_30], xmm0
                movups  [rbp+var_20], xmm0
                call    sub_1405E20E8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B2216
                cmp     qword ptr [rbp+var_20], rsi
                jz      loc_1408B2296
                cmp     dword ptr [rbp+var_30+4], esi
                jnz     loc_1408B2296
                cmp     dword ptr [rbp+var_20+0Ch], esi
                jnz     loc_1408B2296
                test    r12, r12
                jz      loc_1408B228C
                cmp     r14d, 14h
                jb      loc_1408B228C
                mov     ecx, dword ptr [rbp+var_30+8]
                lea     r9d, [rsi+1]
                xor     edi, edi
                cmp     ecx, 6
                jg      short loc_1408B2147
                jz      short loc_1408B2140
                sub     ecx, r9d
                jz      short loc_1408B213B
                sub     ecx, r9d
                jz      short loc_1408B2134
                sub     ecx, r9d
                jz      short loc_1408B212D
                sub     ecx, r9d
                jz      short loc_1408B2126
                cmp     ecx, r9d
                jnz     short loc_1408B2192
                lea     edi, [rsi+5]
                jmp     short loc_1408B219C
; ---------------------------------------------------------------------------

loc_1408B2126:                          ; CODE XREF: sub_1408B206C+AE↑j
                mov     edi, 3
                jmp     short loc_1408B219C
; ---------------------------------------------------------------------------

loc_1408B212D:                          ; CODE XREF: sub_1408B206C+A9↑j
                mov     edi, 4
                jmp     short loc_1408B219C
; ---------------------------------------------------------------------------

loc_1408B2134:                          ; CODE XREF: sub_1408B206C+A4↑j
                mov     edi, 2
                jmp     short loc_1408B219C
; ---------------------------------------------------------------------------

loc_1408B213B:                          ; CODE XREF: sub_1408B206C+9F↑j
                mov     edi, r9d
                jmp     short loc_1408B219C
; ---------------------------------------------------------------------------

loc_1408B2140:                          ; CODE XREF: sub_1408B206C+9A↑j
                mov     edi, 6
                jmp     short loc_1408B219C
; ---------------------------------------------------------------------------

loc_1408B2147:                          ; CODE XREF: sub_1408B206C+98↑j
                sub     ecx, 10001h
                jz      short loc_1408B217F
                sub     ecx, r9d
                jz      short loc_1408B2178
                sub     ecx, r9d
                jz      short loc_1408B2171
                sub     ecx, r9d
                jz      short loc_1408B216A
                cmp     ecx, r9d
                jnz     short loc_1408B2192
                mov     ecx, 0Bh
                jmp     short loc_1408B2184
; ---------------------------------------------------------------------------

loc_1408B216A:                          ; CODE XREF: sub_1408B206C+F0↑j
                mov     ecx, 0Ah
                jmp     short loc_1408B2184
; ---------------------------------------------------------------------------

loc_1408B2171:                          ; CODE XREF: sub_1408B206C+EB↑j
                mov     ecx, 9
                jmp     short loc_1408B2184
; ---------------------------------------------------------------------------

loc_1408B2178:                          ; CODE XREF: sub_1408B206C+E6↑j
                mov     ecx, 8
                jmp     short loc_1408B2184
; ---------------------------------------------------------------------------

loc_1408B217F:                          ; CODE XREF: sub_1408B206C+E1↑j
                mov     ecx, 7

loc_1408B2184:                          ; CODE XREF: sub_1408B206C+FC↑j
                                        ; sub_1408B206C+103↑j ...
                mov     rax, cs:qword_140CF4380
                neg     rax
                sbb     edi, edi
                and     edi, ecx

loc_1408B2192:                          ; CODE XREF: sub_1408B206C+B3↑j
                                        ; sub_1408B206C+F5↑j
                test    edi, edi
                mov     eax, 0C000000Dh
                cmovz   ebx, eax

loc_1408B219C:                          ; CODE XREF: sub_1408B206C+B8↑j
                                        ; sub_1408B206C+BF↑j ...
                test    ebx, ebx
                js      short loc_1408B21D1
                xor     edx, edx
                lea     eax, [r14-14h]
                cmp     eax, 14h
                cmovnb  edx, eax
                test    edx, edx
                jz      loc_1408B2256
                mov     r8d, 34706E50h
                mov     ebx, edx
                mov     ecx, r9d
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408B2243
                mov     ebx, 0C000009Ah

loc_1408B21D1:                          ; CODE XREF: sub_1408B206C+132↑j
                                        ; sub_1408B206C+225↓j ...
                mov     eax, dword ptr [rbp+arg_28]
                mov     [rsp+80h+var_40], r13
                mov     [rsp+80h+var_48], r14d
                mov     [rsp+80h+var_50], r12
                lea     edx, [rax+rax*4]
                mov     eax, dword ptr [rbp+var_10]
                mov     [rsp+80h+var_58], eax
                and     [rsp+80h+var_60], 0
                shl     edx, 2
                xor     r9d, r9d

loc_1408B21F8:                          ; CODE XREF: sub_1408B206C+25D↓j
                xor     r8d, r8d
                mov     ecx, ebx
                call    sub_1406CC2C4
                mov     ebx, eax
                test    rsi, rsi
                jz      short loc_1408B2216
                mov     edx, 34706E50h
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408B2216:                          ; CODE XREF: sub_1408B206C+57↑j
                                        ; sub_1408B206C+19B↑j
                lea     rcx, [rbp+var_30]
                call    sub_1405E1EAC
                lea     r11, [rsp+80h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+20h]
                mov     rsi, [r11+28h]
                mov     rdi, [r11+30h]
                mov     r12, [r11+38h]
                mov     rsp, r11
                pop     r14
                pop     r13
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408B2243:                          ; CODE XREF: sub_1408B206C+15E↑j
                mov     rax, 0CCCCCCCCCCCCCCCDh
                mul     rbx
                shr     rdx, 4
                jmp     short loc_1408B2258
; ---------------------------------------------------------------------------

loc_1408B2256:                          ; CODE XREF: sub_1408B206C+142↑j
                xor     edx, edx

loc_1408B2258:                          ; CODE XREF: sub_1408B206C+1E8↑j
                mov     rcx, cs:qword_140CF4378
                lea     rax, [rbp+arg_28]
                mov     [rsp+80h+var_40], rax
                xor     r9d, r9d
                mov     [rsp+80h+var_48], edx
                mov     r8d, edi
                mov     dword ptr [rbp+arg_28], edx
                mov     rdx, qword ptr [rbp+var_20]
                mov     [rsp+80h+var_50], rsi
                mov     byte ptr [rsp+80h+var_58], 0
                call    sub_140978098
                mov     ebx, eax
                jmp     short loc_1408B229B
; ---------------------------------------------------------------------------

loc_1408B228C:                          ; CODE XREF: sub_1408B206C+7C↑j
                                        ; sub_1408B206C+86↑j
                mov     ebx, 0C000000Dh
                jmp     loc_1408B21D1
; ---------------------------------------------------------------------------

loc_1408B2296:                          ; CODE XREF: sub_1408B206C+61↑j
                                        ; sub_1408B206C+6A↑j ...
                mov     ebx, 0C000000Dh

loc_1408B229B:                          ; CODE XREF: sub_1408B206C+21E↑j
                test    ebx, ebx
                js      loc_1408B21D1
                mov     eax, dword ptr [rbp+arg_28]
                mov     r9, rsi
                mov     [rsp+80h+var_40], r13
                mov     [rsp+80h+var_48], r14d
                mov     [rsp+80h+var_50], r12
                lea     edx, [rax+rax*4]
                mov     eax, dword ptr [rbp+var_10]
                shl     edx, 2
                mov     [rsp+80h+var_58], eax
                mov     [rsp+80h+var_60], edx
                jmp     loc_1408B21F8
sub_1408B206C   endp

; ---------------------------------------------------------------------------
byte_1408B22CE  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D948↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B22D4   proc near               ; CODE XREF: sub_1406C9390+153EE0↑p
                                        ; DATA XREF: .pdata:000000014011D954↑o

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = xmmword ptr -18h
var_s0          = byte ptr  0
arg_0           = qword ptr  30h
arg_8           = qword ptr  38h
arg_10          = qword ptr  40h
arg_20          = dword ptr  50h
arg_28          = qword ptr  58h

                mov     [rsp-28h+arg_0], rbx
                mov     [rsp-28h+arg_8], rsi
                mov     [rsp-28h+arg_10], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 80h
                mov     r13, [rbp+arg_28]
                xorps   xmm0, xmm0
                xor     ebx, ebx
                mov     r14d, r9d
                mov     [rbp+var_40], rbx
                lea     r9, [rbp+var_38]
                mov     [rbp+arg_28], rbx
                mov     r15, r8
                mov     r8d, [rbp+arg_20]
                mov     [r13+0], ebx
                mov     rax, gs:188h
                movups  [rbp+var_38], xmm0
                movups  [rbp+var_28], xmm0
                mov     r12b, [rax+232h]
                movups  [rbp+var_18], xmm0
                call    sub_1406CE1B8
                mov     edi, eax
                test    eax, eax
                js      loc_1408B2469
                mov     rdi, qword ptr [rbp+var_28]
                test    rdi, rdi
                jz      loc_1408B241F
                cmp     dword ptr [rbp+var_38+4], ebx
                jnz     loc_1408B241F
                cmp     dword ptr [rbp+var_38+8], 4
                jnz     loc_1408B241F
                cmp     dword ptr [rbp+var_18+4], ebx
                jnz     loc_1408B241F
                test    r15, r15
                jz      loc_1408B241F
                cmp     r14d, 10h
                jb      loc_1408B241F
                mov     esi, dword ptr [rbp+var_28+0Ch]
                lea     rax, [rbp+arg_28]
                mov     rcx, cs:qword_140CF4378
                lea     r8d, [rbx+32h]
                mov     [rsp+80h+var_48], rbx
                mov     rdx, rdi
                mov     [rsp+80h+var_50], rax
                mov     byte ptr [rsp+80h+var_58], bl
                mov     dword ptr [rsp+80h+var_60], esi
                call    sub_1405E0494
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jnz     short loc_1408B23FF
                cmp     dword ptr [rbp+var_18], 1
                jnz     short loc_1408B2424
                mov     ecx, 2
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B23D0
                mov     ebx, 0C0000022h
                jmp     short loc_1408B2424
; ---------------------------------------------------------------------------

loc_1408B23D0:                          ; CODE XREF: sub_1408B22D4+F3↑j
                and     [rsp+80h+var_48], 0
                lea     rax, [rbp+arg_28]
                mov     rcx, cs:qword_140CF4378
                mov     r8d, 32h ; '2'
                mov     [rsp+80h+var_50], rax
                mov     rdx, rdi
                mov     byte ptr [rsp+80h+var_58], 1
                mov     dword ptr [rsp+80h+var_60], esi
                call    sub_1405E0494
                mov     ebx, eax

loc_1408B23FF:                          ; CODE XREF: sub_1408B22D4+DF↑j
                test    ebx, ebx
                js      short loc_1408B2424
                mov     rcx, [rbp+arg_28]
                lea     rax, [rbp+var_40]
                mov     r9b, r12b
                mov     [rsp+80h+var_60], rax
                mov     r8d, esi
                call    sub_1406D1E0C
                mov     ebx, eax
                jmp     short loc_1408B2424
; ---------------------------------------------------------------------------

loc_1408B241F:                          ; CODE XREF: sub_1408B22D4+77↑j
                                        ; sub_1408B22D4+80↑j ...
                mov     ebx, 0C000000Dh

loc_1408B2424:                          ; CODE XREF: sub_1408B22D4+E5↑j
                                        ; sub_1408B22D4+FA↑j ...
                mov     r8d, dword ptr [rbp+var_18+8]
                mov     r9, r15
                mov     rdx, [rbp+var_40]
                mov     ecx, ebx
                mov     [rsp+80h+var_58], r13
                mov     dword ptr [rsp+80h+var_60], r14d
                call    sub_1406CE120
                mov     rcx, [rbp+arg_28]
                mov     edi, eax
                test    rcx, rcx
                jz      short loc_1408B2450
                call    ZwClose

loc_1408B2450:                          ; CODE XREF: sub_1408B22D4+175↑j
                test    edi, edi
                js      short loc_1408B2458
                test    ebx, ebx
                jns     short loc_1408B2469

loc_1408B2458:                          ; CODE XREF: sub_1408B22D4+17E↑j
                mov     rcx, [rbp+var_40]
                test    rcx, rcx
                jz      short loc_1408B2469
                mov     dl, r12b
                call    ObCloseHandle

loc_1408B2469:                          ; CODE XREF: sub_1408B22D4+6A↑j
                                        ; sub_1408B22D4+182↑j ...
                lea     rcx, [rbp+var_38]
                call    sub_1406CE0F0
                lea     r11, [rsp+80h+var_s0]
                mov     eax, edi
                mov     rbx, [r11+30h]
                mov     rsi, [r11+38h]
                mov     rdi, [r11+40h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B22D4   endp

byte_1408B2496  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D954↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=47h

sub_1408B249C   proc near               ; CODE XREF: sub_1406C9390+153EAA↑p
                                        ; DATA XREF: .pdata:000000014011D960↑o

var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = dword ptr -98h
var_90          = qword ptr -90h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
arg_18          = qword ptr  28h
arg_20          = dword ptr  30h
arg_28          = qword ptr  38h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_18], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-17h]
                sub     rsp, 0A0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+47h+var_38], rax
                mov     r14, [rbp+47h+arg_28]
                xorps   xmm0, xmm0
                xor     r12d, r12d
                mov     [rbp+47h+var_80], r14
                mov     r15d, r9d
                mov     [rbp+47h+var_78], r12
                mov     r13, r8
                lea     r9, [rbp+47h+var_70]
                mov     r8d, [rbp+47h+arg_20]
                xor     eax, eax
                mov     [r14], r12d
                mov     ebx, r12d
                movups  [rbp+47h+var_70], xmm0
                mov     [rbp+47h+var_40], rax
                mov     edi, r12d
                movups  [rbp+47h+var_60], xmm0
                movups  [rbp+47h+var_50], xmm0
                call    sub_1408B08C0
                mov     esi, eax
                test    eax, eax
                js      short loc_1408B2565
                lea     ecx, [r12+2]
                call    sub_1407090BC
                test    al, al
                jnz     loc_1408B25BE
                mov     r10d, 0C0000022h

loc_1408B2524:                          ; CODE XREF: sub_1408B249C+14E↓j
                                        ; sub_1408B249C+171↓j
                mov     edx, r12d

loc_1408B2527:                          ; CODE XREF: sub_1408B249C+1DB↓j
                                        ; sub_1408B249C+1F5↓j
                mov     rax, [rbp+47h+var_80]
                xor     r9d, r9d
                mov     [rsp+0D0h+var_90], rax
                mov     eax, dword ptr [rbp+47h+var_40+4]
                mov     [rsp+0D0h+var_98], r15d
                mov     [rsp+0D0h+var_A0], r13
                mov     dword ptr [rsp+0D0h+var_A8], eax
                mov     dword ptr [rsp+0D0h+var_B0], r12d

loc_1408B2549:                          ; CODE XREF: sub_1408B249C+218↓j
                xor     r8d, r8d
                mov     ecx, r10d
                call    sub_1406CC2C4
                mov     esi, eax
                test    rdi, rdi
                jz      short loc_1408B2565
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B2565:                          ; CODE XREF: sub_1408B249C+6E↑j
                                        ; sub_1408B249C+BD↑j
                mov     rax, gs:188h
                mov     rdx, qword ptr [rbp+47h+var_60+8]
                mov     bl, [rax+232h]
                test    rdx, rdx
                jz      short loc_1408B2584
                mov     cl, bl
                call    sub_1403109F0

loc_1408B2584:                          ; CODE XREF: sub_1408B249C+DF↑j
                mov     rdx, qword ptr [rbp+47h+var_50+8]
                test    rdx, rdx
                jz      short loc_1408B2594
                mov     cl, bl
                call    sub_1403109F0

loc_1408B2594:                          ; CODE XREF: sub_1408B249C+EF↑j
                mov     eax, esi
                mov     rcx, [rbp+47h+var_38]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0D0h+arg_18]
                add     rsp, 0A0h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 2

loc_1408B25BE:                          ; CODE XREF: sub_1408B249C+7C↑j
                mov     rsi, qword ptr [rbp+47h+var_60+8]
                test    rsi, rsi
                jz      loc_1408B267C
                cmp     dword ptr [rbp+47h+var_70+4], r12d
                jnz     loc_1408B267C
                mov     r14, qword ptr [rbp+47h+var_50+8]
                test    r14, r14
                jz      short loc_1408B25EF
                cmp     dword ptr [rbp+47h+var_40], 2
                jnb     short loc_1408B25EF

loc_1408B25E4:                          ; CODE XREF: sub_1408B249C+156↓j
                                        ; sub_1408B249C+15C↓j
                mov     r10d, 0C000000Dh
                jmp     loc_1408B2524
; ---------------------------------------------------------------------------

loc_1408B25EF:                          ; CODE XREF: sub_1408B249C+140↑j
                                        ; sub_1408B249C+146↑j
                test    r13, r13
                jz      short loc_1408B25E4
                cmp     r15d, 14h
                jb      short loc_1408B25E4
                lea     r12d, [r15-14h]
                cmp     r12d, 2
                jnb     short loc_1408B2612
                mov     r10d, 0C000000Dh
                xor     r12d, r12d
                jmp     loc_1408B2524
; ---------------------------------------------------------------------------

loc_1408B2612:                          ; CODE XREF: sub_1408B249C+166↑j
                mov     rdx, rsi
                call    sub_14062D1B0
                mov     r10d, eax
                test    eax, eax
                js      short loc_1408B2684
                and     [rsp+0D0h+var_A8], rbx
                lea     rax, [rbp+47h+var_78]
                mov     r9b, 1
                mov     [rsp+0D0h+var_B0], rax
                mov     r8, r14
                lea     rdx, [rbp+47h+var_70+8]
                mov     rcx, rsi
                call    sub_140741684
                mov     rdi, [rbp+47h+var_78]
                mov     r10d, eax
                xor     eax, eax
                test    r10d, r10d
                js      short loc_1408B2684
                or      rbx, 0FFFFFFFFFFFFFFFFh

loc_1408B2653:                          ; CODE XREF: sub_1408B249C+1BE↓j
                inc     rbx
                cmp     [rdi+rbx*2], ax
                jnz     short loc_1408B2653
                inc     ebx
                mov     eax, r12d
                mov     ecx, ebx
                xor     r12d, r12d
                add     rcx, rcx
                cmp     rcx, rax
                jbe     short loc_1408B2687
                mov     r10d, 0C0000023h
                lea     edx, [rbx+rbx]
                jmp     loc_1408B2527
; ---------------------------------------------------------------------------

loc_1408B267C:                          ; CODE XREF: sub_1408B249C+129↑j
                                        ; sub_1408B249C+133↑j
                mov     r10d, 0C000000Dh
                jmp     short loc_1408B268B
; ---------------------------------------------------------------------------

loc_1408B2684:                          ; CODE XREF: sub_1408B249C+183↑j
                                        ; sub_1408B249C+1B1↑j
                xor     r12d, r12d

loc_1408B2687:                          ; CODE XREF: sub_1408B249C+1D0↑j
                mov     r14, [rbp+47h+var_80]

loc_1408B268B:                          ; CODE XREF: sub_1408B249C+1E6↑j
                lea     edx, [rbx+rbx]
                test    r10d, r10d
                js      loc_1408B2527
                mov     eax, dword ptr [rbp+47h+var_40+4]
                mov     r9, rdi
                mov     [rsp+0D0h+var_90], r14
                mov     [rsp+0D0h+var_98], r15d
                mov     [rsp+0D0h+var_A0], r13
                mov     dword ptr [rsp+0D0h+var_A8], eax
                mov     dword ptr [rsp+0D0h+var_B0], edx
                jmp     loc_1408B2549
; } // starts at 1408B249C
sub_1408B249C   endp

; ---------------------------------------------------------------------------
algn_1408B26B9:                         ; DATA XREF: .pdata:000000014011D960↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=47h

sub_1408B26C0   proc near               ; CODE XREF: sub_1406C9390+153E68↑p
                                        ; DATA XREF: .pdata:000000014011D96C↑o

var_70          = qword ptr -70h
var_68          = dword ptr -68h
var_60          = dword ptr -60h
var_58          = dword ptr -58h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_20          = dword ptr  30h
arg_28          = qword ptr  38h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], r14
                mov     [rax+20h], r15
                push    rbp
                lea     rbp, [rax-4Fh]
                sub     rsp, 90h
                mov     r15, [rbp+47h+arg_28]
                xorps   xmm0, xmm0
                xor     eax, eax
                mov     esi, r9d
                and     dword ptr [rbp+47h+arg_28], eax
                lea     r9, [rbp+47h+var_40]
                mov     r14, r8
                mov     [rbp+47h+var_10], rax
                mov     r8d, [rbp+47h+arg_20]
                and     [r15], eax
                movups  [rbp+47h+var_40], xmm0
                movups  [rbp+47h+var_30], xmm0
                movups  [rbp+47h+var_20], xmm0
                call    sub_14070B3D8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B2848
                xor     eax, eax
                cmp     dword ptr [rbp+47h+var_30+0Ch], 0Dh
                setz    al
                neg     eax
                sbb     ecx, ecx
                and     ecx, 3Eh
                add     ecx, 2
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B2741
                mov     ebx, 0C0000022h
                jmp     loc_1408B2831
; ---------------------------------------------------------------------------

loc_1408B2741:                          ; CODE XREF: sub_1408B26C0+75↑j
                cmp     qword ptr [rbp+47h+var_30], 0
                jz      loc_1408B282C
                cmp     dword ptr [rbp+47h+var_40+4], 0
                jnz     loc_1408B282C
                test    r14, r14
                jz      loc_1408B282C
                cmp     esi, 8
                jb      loc_1408B282C
                mov     ecx, dword ptr [rbp+47h+var_30+0Ch]
                lea     rdx, [rbp+47h+arg_28]
                call    sub_14070B2A0
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B2831
                cmp     dword ptr [rbp+47h+var_40+8], 1
                jnz     short loc_1408B27E0
                and     [rsp+90h+var_58], 0
                xor     r8d, r8d
                mov     eax, dword ptr [rbp+47h+var_10]
                mov     r9d, dword ptr [rbp+47h+arg_28]
                mov     rdx, qword ptr [rbp+47h+var_30]
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+90h+var_60], eax
                mov     rax, qword ptr [rbp+47h+var_20+8]
                mov     qword ptr [rsp+90h+var_68], rax
                mov     eax, dword ptr [rbp+47h+var_20]
                mov     dword ptr [rsp+90h+var_70], eax
                call    sub_14074A9AC
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B281D
                mov     rdx, qword ptr [rbp+47h+var_30]
                lea     rcx, [rbp+47h+var_50]
                xorps   xmm0, xmm0
                movups  [rbp+47h+var_50], xmm0
                call    RtlInitUnicodeStringEx
                test    eax, eax
                js      short loc_1408B281D
                lea     rcx, [rbp+47h+var_50]
                call    sub_14037C2A0
                jmp     short loc_1408B281D
; ---------------------------------------------------------------------------

loc_1408B27E0:                          ; CODE XREF: sub_1408B26C0+C2↑j
                cmp     dword ptr [rbp+47h+var_40+8], 2
                jnz     short loc_1408B2818
                mov     eax, dword ptr [rbp+47h+var_10]
                xor     r8d, r8d
                mov     r9d, dword ptr [rbp+47h+arg_28]
                mov     rdx, qword ptr [rbp+47h+var_30]
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+90h+var_60], eax
                mov     rax, qword ptr [rbp+47h+var_20+8]
                mov     qword ptr [rsp+90h+var_68], rax
                mov     eax, dword ptr [rbp+47h+var_20]
                mov     dword ptr [rsp+90h+var_70], eax
                call    sub_140977064
                mov     ebx, eax
                jmp     short loc_1408B281D
; ---------------------------------------------------------------------------

loc_1408B2818:                          ; CODE XREF: sub_1408B26C0+124↑j
                mov     ebx, 0C000000Dh

loc_1408B281D:                          ; CODE XREF: sub_1408B26C0+FB↑j
                                        ; sub_1408B26C0+113↑j ...
                cmp     ebx, 0C0000022h
                jnz     short loc_1408B2831
                mov     ebx, 0C0000230h
                jmp     short loc_1408B2831
; ---------------------------------------------------------------------------

loc_1408B282C:                          ; CODE XREF: sub_1408B26C0+86↑j
                                        ; sub_1408B26C0+90↑j ...
                mov     ebx, 0C000000Dh

loc_1408B2831:                          ; CODE XREF: sub_1408B26C0+7C↑j
                                        ; sub_1408B26C0+B8↑j ...
                mov     edx, dword ptr [rbp+47h+var_10+4]
                mov     r9d, esi
                mov     r8, r14
                mov     [rsp+90h+var_70], r15
                mov     ecx, ebx
                call    sub_1405E2308
                mov     ebx, eax

loc_1408B2848:                          ; CODE XREF: sub_1408B26C0+55↑j
                lea     rcx, [rbp+47h+var_40]
                call    sub_14070B24C
                lea     r11, [rsp+90h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     r14, [r11+20h]
                mov     r15, [r11+28h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B26C0   endp

algn_1408B2871:                         ; DATA XREF: .pdata:000000014011D96C↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=47h

sub_1408B2878   proc near               ; CODE XREF: sub_1406C9390+153E8F↑p
                                        ; DATA XREF: .pdata:000000014011D978↑o

var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_50          = qword ptr -50h
var_48          = dword ptr -48h
var_40          = dword ptr -40h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = xmmword ptr -28h
var_18          = xmmword ptr -18h
var_8           = qword ptr -8
var_s0          = byte ptr  0
arg_20          = dword ptr  30h
arg_28          = qword ptr  38h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+18h], rdi
                mov     [rax+20h], r14
                push    rbp
                lea     rbp, [rax-4Fh]
                sub     rsp, 90h
                mov     r14, [rbp+47h+arg_28]
                xor     eax, eax
                and     [rbp+47h+var_30], eax
                xorps   xmm0, xmm0
                and     [rbp+47h+var_2C], eax
                mov     edi, r9d
                mov     rsi, r8
                mov     [rbp+47h+var_8], rax
                mov     r8d, [rbp+47h+arg_20]
                lea     r9, [rbp+47h+var_28]
                and     [r14], eax
                movups  [rbp+47h+var_28], xmm0
                mov     byte ptr [rbp+47h+arg_28], al
                movups  [rbp+47h+var_18], xmm0
                call    sub_1405E20E8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B2A0C
                mov     ecx, 2
                call    sub_1407090BC
                test    al, al
                jnz     short loc_1408B28ED
                mov     ebx, 0C0000022h
                jmp     loc_1408B29F5
; ---------------------------------------------------------------------------

loc_1408B28ED:                          ; CODE XREF: sub_1408B2878+69↑j
                mov     rdx, qword ptr [rbp+47h+var_18]
                test    rdx, rdx
                jz      loc_1408B29F0
                cmp     dword ptr [rbp+47h+var_28+4], 0
                jnz     loc_1408B29F0
                cmp     dword ptr [rbp+47h+var_28+8], 4
                jnz     loc_1408B29F0
                cmp     dword ptr [rbp+47h+var_18+0Ch], 0
                jnz     loc_1408B29F0
                test    rsi, rsi
                jz      loc_1408B29F0
                cmp     edi, 8
                jb      loc_1408B29F0
                and     [rsp+90h+var_40], 0
                lea     rax, [rbp+47h+var_2C]
                mov     rcx, cs:qword_140CF4378
                xor     r9d, r9d
                mov     qword ptr [rsp+90h+var_48], rax
                lea     rax, [rbp+47h+arg_28]
                mov     dword ptr [rsp+90h+var_50], 1
                mov     qword ptr [rsp+90h+var_58], rax
                lea     rax, [rbp+47h+var_30]
                mov     [rsp+90h+var_60], rax
                lea     r8d, [r9+3]
                lea     rax, qword_14000A4D8
                mov     [rsp+90h+var_68], rax
                and     [rsp+90h+var_70], 0
                call    sub_1406CC6BC
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B29F5
                cmp     [rbp+47h+var_30], 11h
                jnz     short loc_1408B298E
                cmp     [rbp+47h+var_2C], 1
                jnz     short loc_1408B298E
                mov     al, byte ptr [rbp+47h+arg_28]
                jmp     short loc_1408B2993
; ---------------------------------------------------------------------------

loc_1408B298E:                          ; CODE XREF: sub_1408B2878+109↑j
                                        ; sub_1408B2878+10F↑j
                xor     al, al
                mov     byte ptr [rbp+47h+arg_28], al

loc_1408B2993:                          ; CODE XREF: sub_1408B2878+114↑j
                cmp     al, 0FFh
                mov     ecx, 0C0000708h
                cmovz   ebx, ecx
                test    ebx, ebx
                js      short loc_1408B29F5
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C44D40
                call    ExAcquireResourceExclusiveLite
                mov     rdx, qword ptr [rbp+47h+var_18]
                xor     r8d, r8d
                mov     rcx, cs:qword_140CF4378
                call    sub_14072B034
                lea     rcx, unk_140C44D40
                mov     ebx, eax
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                jmp     short loc_1408B29F5
; ---------------------------------------------------------------------------

loc_1408B29F0:                          ; CODE XREF: sub_1408B2878+7C↑j
                                        ; sub_1408B2878+86↑j ...
                mov     ebx, 0C000000Dh

loc_1408B29F5:                          ; CODE XREF: sub_1408B2878+70↑j
                                        ; sub_1408B2878+103↑j ...
                mov     edx, dword ptr [rbp+47h+var_8]
                mov     r9d, edi
                mov     r8, rsi
                mov     [rsp+90h+var_70], r14
                mov     ecx, ebx
                call    sub_1405E2308
                mov     ebx, eax

loc_1408B2A0C:                          ; CODE XREF: sub_1408B2878+57↑j
                lea     rcx, [rbp+47h+var_28]
                call    sub_1405E1EAC
                lea     r11, [rsp+90h+var_s0]
                mov     eax, ebx
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     rdi, [r11+20h]
                mov     r14, [r11+28h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B2878   endp

byte_1408B2A35  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D978↑o

; =============== S U B R O U T I N E =======================================


sub_1408B2A3C   proc near               ; CODE XREF: sub_1408B2B64+62↓p
                                        ; DATA XREF: .pdata:000000014011D984↑o

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 30h
                cmp     cs:dword_140C430A4, 1
                mov     rbx, rcx
                jnz     loc_1408B2B00
                xor     esi, esi
                test    rcx, rcx
                jz      short loc_1408B2ADB
                mov     edx, 310h
                lea     rdi, [rcx+28h]
                call    sub_1403CC478
                cmp     [rdi], si
                jz      short loc_1408B2A8C
                lea     edx, [rsi+2]
                mov     rcx, rdi
                call    sub_1403CC478
                movzx   edx, word ptr [rdi]
                mov     rcx, [rdi+8]
                call    sub_1403CC478

loc_1408B2A8C:                          ; CODE XREF: sub_1408B2A3C+37↑j
                lea     rdi, [rbx+38h]
                cmp     [rdi], si
                jz      short loc_1408B2AAE
                mov     edx, 2
                mov     rcx, rdi
                call    sub_1403CC478
                movzx   edx, word ptr [rdi]
                mov     rcx, [rbx+40h]
                call    sub_1403CC478

loc_1408B2AAE:                          ; CODE XREF: sub_1408B2A3C+57↑j
                mov     rax, [rbx+10h]
                test    rax, rax
                jz      short loc_1408B2ADB
                lea     rcx, [rax+38h]
                cmp     [rcx], si
                jz      short loc_1408B2ADB
                mov     edx, 2
                call    sub_1403CC478
                mov     rcx, [rbx+10h]
                movzx   edx, word ptr [rcx+38h]
                mov     rcx, [rcx+40h]
                call    sub_1403CC478

loc_1408B2ADB:                          ; CODE XREF: sub_1408B2A3C+24↑j
                                        ; sub_1408B2A3C+79↑j ...
                mov     eax, [rbx+2C0h]
                mov     r8, rbx
                mov     r9, [rbx+2D0h]
                mov     edx, 11h
                mov     ecx, 0CAh
                mov     [rsp+38h+var_18], rax
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_1408B2B00:                          ; CODE XREF: sub_1408B2A3C+19↑j
                xor     edx, edx
                mov     r9d, 0C0000022h
                lea     r8d, [rdx+37h]
                call    sub_140745DFC
                mov     rbx, [rsp+38h+arg_0]
                mov     eax, 0C00002CEh
                mov     rsi, [rsp+38h+arg_8]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B2A3C   endp

algn_1408B2B27:                         ; DATA XREF: .pdata:000000014011D984↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408B2B30   proc near               ; DATA XREF: .pdata:000000014011D990↑o
                                        ; sub_1403B72A8:loc_1404ABAF2↑o
                sub     rsp, 28h
                mov     ecx, cs:dword_140C430A4
                sub     ecx, 1
                jz      short loc_1408B2B55
                sub     ecx, 1
                jz      short loc_1408B2B50
                cmp     ecx, 1
                jz      short loc_1408B2B55
                mov     ecx, 5
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408B2B50:                          ; CODE XREF: sub_1408B2B30+12↑j
                call    sub_1408B2BE8

loc_1408B2B55:                          ; CODE XREF: sub_1408B2B30+D↑j
                                        ; sub_1408B2B30+17↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B2B30   endp

byte_1408B2B5B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D990↑o

; =============== S U B R O U T I N E =======================================


sub_1408B2B64   proc near               ; CODE XREF: sub_140738BF8+B6B95↑p
                                        ; DATA XREF: .pdata:000000014011D99C↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     edx, cs:dword_140C430A4
                xor     ebx, ebx
                mov     rsi, [rcx+2D0h]
                mov     rdi, rcx
                sub     edx, 1
                jz      short loc_1408B2BCD
                sub     edx, 1
                jz      short loc_1408B2BA8
                cmp     edx, 1
                jz      short loc_1408B2B99
                lea     ecx, [rbx+5]
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408B2B99:                          ; CODE XREF: sub_1408B2B64+2E↑j
                mov     rcx, rsi
                call    sub_1408B5C3C
                test    al, al
                setz    al
                jmp     short loc_1408B2BBF
; ---------------------------------------------------------------------------

loc_1408B2BA8:                          ; CODE XREF: sub_1408B2B64+29↑j
                call    sub_1408B39B0
                test    al, al
                jz      short loc_1408B2BCD
                mov     rcx, rsi
                call    sub_1408B5C3C
                test    al, al
                jnz     short loc_1408B2BCD
                mov     al, 1

loc_1408B2BBF:                          ; CODE XREF: sub_1408B2B64+42↑j
                test    al, al
                jz      short loc_1408B2BCD
                mov     rcx, rdi
                call    sub_1408B2A3C
                mov     ebx, eax

loc_1408B2BCD:                          ; CODE XREF: sub_1408B2B64+24↑j
                                        ; sub_1408B2B64+4B↑j ...
                mov     rsi, [rsp+28h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B2B64   endp

byte_1408B2BE0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D99C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B2BE8   proc near               ; CODE XREF: sub_1408B2B30:loc_1408B2B50↑p
                                        ; sub_1408B2CAC:loc_1408B2CD5↓p
                                        ; DATA XREF: ...

var_20          = qword ptr -20h
var_10          = qword ptr -10h
var_8           = qword ptr -8
arg_0           = qword ptr  10h

                mov     [rsp-8+arg_0], rbx
                push    rbp
                mov     rbp, rsp
                sub     rsp, 40h
                mov     eax, cs:dword_140C430A4
                test    eax, eax
                jz      short loc_1408B2C7C
                cmp     eax, 3
                jz      short loc_1408B2C7C
                lea     rax, [rbp+var_10]
                mov     [rbp+var_8], rax
                lea     rcx, [rbp+var_10]
                lea     rax, [rbp+var_10]
                mov     [rbp+var_10], rax
                call    sub_1408BA9F4
                mov     rbx, [rbp+var_10]
                lea     rax, [rbp+var_10]
                cmp     rbx, rax
                jz      short loc_1408B2C43

loc_1408B2C2A:                          ; CODE XREF: sub_1408B2BE8+55↓j
                mov     rcx, [rbx+10h]
                mov     rbx, [rbx]
                call    sub_1408B2CE8
                lea     rax, [rbp+var_10]
                cmp     rbx, rax
                jnz     short loc_1408B2C2A

loc_1408B2C3F:                          ; CODE XREF: sub_1408B2BE8+8B↓j
                mov     rbx, [rbp+var_10]

loc_1408B2C43:                          ; CODE XREF: sub_1408B2BE8+40↑j
                lea     rax, [rbp+var_10]
                cmp     rbx, rax
                jz      short loc_1408B2C97
                lea     rax, [rbp+var_10]
                cmp     [rbx+8], rax
                jnz     short loc_1408B2C75
                mov     rax, [rbx]
                cmp     [rax+8], rbx
                jnz     short loc_1408B2C75
                lea     rcx, [rbp+var_10]
                mov     [rbp+var_10], rax
                mov     [rax+8], rcx
                mov     rcx, rbx
                call    sub_1408BAAF8
                jmp     short loc_1408B2C3F
; ---------------------------------------------------------------------------

loc_1408B2C75:                          ; CODE XREF: sub_1408B2BE8+6C↑j
                                        ; sub_1408B2BE8+75↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408B2C7C:                          ; CODE XREF: sub_1408B2BE8+15↑j
                                        ; sub_1408B2BE8+1A↑j
                and     [rsp+40h+var_20], 0
                xor     r9d, r9d
                xor     r8d, r8d
                mov     ecx, 0CAh
                lea     edx, [r9+11h]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_1408B2C97:                          ; CODE XREF: sub_1408B2BE8+62↑j
                mov     rbx, [rsp+40h+arg_0]
                add     rsp, 40h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B2BE8   endp

byte_1408B2CA3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D9A8↑o

; =============== S U B R O U T I N E =======================================


sub_1408B2CAC   proc near               ; CODE XREF: sub_140747D98+EFEF1↑p
                                        ; sub_1407A3A74+B23DF↑p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                mov     ecx, cs:dword_140C430A4
                sub     ecx, 1
                jz      short loc_1408B2CD5
                sub     ecx, 1
                jz      short loc_1408B2CCC
                cmp     ecx, 1
                jz      short loc_1408B2CDA
                mov     ecx, 5
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408B2CCC:                          ; CODE XREF: sub_1408B2CAC+12↑j
                call    sub_1408B39B0
                test    al, al
                jnz     short loc_1408B2CDA

loc_1408B2CD5:                          ; CODE XREF: sub_1408B2CAC+D↑j
                call    sub_1408B2BE8

loc_1408B2CDA:                          ; CODE XREF: sub_1408B2CAC+17↑j
                                        ; sub_1408B2CAC+27↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B2CAC   endp

byte_1408B2CE0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011D9B4↑o

; =============== S U B R O U T I N E =======================================


sub_1408B2CE8   proc near               ; CODE XREF: sub_1408B2BE8+49↑p
                                        ; DATA XREF: .pdata:000000014011D9C0↑o

var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                sub     rsp, 40h
                xor     ebx, ebx
                mov     rdi, rcx
                cmp     cs:dword_140C430A4, 3
                jnz     loc_1408B2E26
                test    rcx, rcx
                jz      loc_1408B2E0C
                movzx   edx, word ptr [rcx+2]
                call    sub_1403CC478
                mov     rcx, [rdi+8]
                lea     esi, [rbx+2]
                test    rcx, rcx
                jz      short loc_1408B2D5A
                movsx   edx, word ptr [rcx+2]
                call    sub_1403CC478
                mov     rcx, [rdi+8]
                add     rcx, 38h ; '8'
                cmp     [rcx], bx
                jz      short loc_1408B2D5A
                mov     edx, esi
                call    sub_1403CC478
                mov     rcx, [rdi+8]
                movzx   edx, word ptr [rcx+38h]
                mov     rcx, [rcx+40h]
                call    sub_1403CC478

loc_1408B2D5A:                          ; CODE XREF: sub_1408B2CE8+42↑j
                                        ; sub_1408B2CE8+58↑j
                mov     rax, [rdi+138h]
                mov     rcx, [rax+28h]
                test    rcx, rcx
                jz      loc_1408B2E0C
                mov     edx, 310h
                lea     rbp, [rcx+28h]
                call    sub_1403CC478
                cmp     [rbp+0], bx
                jz      short loc_1408B2D99
                mov     edx, esi
                mov     rcx, rbp
                call    sub_1403CC478
                movzx   edx, word ptr [rbp+0]
                mov     rcx, [rbp+8]
                call    sub_1403CC478

loc_1408B2D99:                          ; CODE XREF: sub_1408B2CE8+98↑j
                mov     rdx, [rdi+138h]
                mov     rcx, [rdx+28h]
                add     rcx, 38h ; '8'
                cmp     [rcx], bx
                jz      short loc_1408B2DD3
                mov     edx, esi
                call    sub_1403CC478
                mov     rax, [rdi+138h]
                mov     rcx, [rax+28h]
                movzx   edx, word ptr [rcx+38h]
                mov     rcx, [rcx+40h]
                call    sub_1403CC478
                mov     rdx, [rdi+138h]

loc_1408B2DD3:                          ; CODE XREF: sub_1408B2CE8+C3↑j
                mov     rax, [rdx+28h]
                mov     rcx, [rax+10h]
                test    rcx, rcx
                jz      short loc_1408B2E0C
                add     rcx, 38h ; '8'
                cmp     [rcx], bx
                jz      short loc_1408B2E0C
                mov     edx, esi
                call    sub_1403CC478
                mov     rax, [rdi+138h]
                mov     rcx, [rax+28h]
                mov     rcx, [rcx+10h]
                movzx   edx, word ptr [rcx+38h]
                mov     rcx, [rcx+40h]
                call    sub_1403CC478

loc_1408B2E0C:                          ; CODE XREF: sub_1408B2CE8+29↑j
                                        ; sub_1408B2CE8+80↑j ...
                xor     r9d, r9d
                mov     [rsp+48h+var_28], rbx
                mov     r8, rdi
                mov     ecx, 0CAh
                lea     edx, [r9+11h]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_1408B2E26:                          ; CODE XREF: sub_1408B2CE8+20↑j
                mov     esi, 2
                test    rdi, rdi
                jz      loc_1408B2F9F
                mov     rax, [rcx+138h]
                mov     rcx, [rax+28h]
                test    rcx, rcx
                jz      short loc_1408B2EAA
                test    dword ptr [rcx+18Ch], 20000h
                jnz     short loc_1408B2EAA
                mov     [rsp+48h+var_18], rbx
                lea     edx, [rsi+17h]
                mov     [rsp+48h+var_20], rbx
                xor     r9d, r9d
                mov     r8b, 1
                mov     [rsp+48h+var_28], rbx
                mov     rcx, rdi
                call    sub_14036E8F4
                test    eax, eax
                js      short loc_1408B2E94
                mov     [rsp+48h+var_18], rbx
                lea     edx, [rsi+0Eh]
                mov     [rsp+48h+var_20], rbx
                xor     r9d, r9d
                xor     r8d, r8d
                mov     [rsp+48h+var_28], rbx
                mov     rcx, rdi
                call    sub_14036E8F4

loc_1408B2E94:                          ; CODE XREF: sub_1408B2CE8+18A↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     rbp, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                align 2

loc_1408B2EAA:                          ; CODE XREF: sub_1408B2CE8+15A↑j
                                        ; sub_1408B2CE8+166↑j
                movzx   edx, word ptr [rdi+2]
                mov     rcx, rdi
                call    sub_1403CC478
                mov     rcx, [rdi+8]
                test    rcx, rcx
                jz      short loc_1408B2EED
                movsx   edx, word ptr [rcx+2]
                call    sub_1403CC478
                mov     rcx, [rdi+8]
                add     rcx, 38h ; '8'
                cmp     [rcx], bx
                jz      short loc_1408B2EED
                mov     edx, esi
                call    sub_1403CC478
                mov     rcx, [rdi+8]
                movzx   edx, word ptr [rcx+38h]
                mov     rcx, [rcx+40h]
                call    sub_1403CC478

loc_1408B2EED:                          ; CODE XREF: sub_1408B2CE8+1D5↑j
                                        ; sub_1408B2CE8+1EB↑j
                mov     rax, [rdi+138h]
                mov     rcx, [rax+28h]
                test    rcx, rcx
                jz      loc_1408B2F9F
                mov     edx, 310h
                lea     rbp, [rcx+28h]
                call    sub_1403CC478
                cmp     [rbp+0], bx
                jz      short loc_1408B2F2C
                mov     edx, esi
                mov     rcx, rbp
                call    sub_1403CC478
                movzx   edx, word ptr [rbp+0]
                mov     rcx, [rbp+8]
                call    sub_1403CC478

loc_1408B2F2C:                          ; CODE XREF: sub_1408B2CE8+22B↑j
                mov     rdx, [rdi+138h]
                mov     rcx, [rdx+28h]
                add     rcx, 38h ; '8'
                cmp     [rcx], bx
                jz      short loc_1408B2F66
                mov     edx, esi
                call    sub_1403CC478
                mov     rax, [rdi+138h]
                mov     rcx, [rax+28h]
                movzx   edx, word ptr [rcx+38h]
                mov     rcx, [rcx+40h]
                call    sub_1403CC478
                mov     rdx, [rdi+138h]

loc_1408B2F66:                          ; CODE XREF: sub_1408B2CE8+256↑j
                mov     rax, [rdx+28h]
                mov     rcx, [rax+10h]
                test    rcx, rcx
                jz      short loc_1408B2F9F
                add     rcx, 38h ; '8'
                cmp     [rcx], bx
                jz      short loc_1408B2F9F
                mov     edx, esi
                call    sub_1403CC478
                mov     rax, [rdi+138h]
                mov     rcx, [rax+28h]
                mov     rcx, [rcx+10h]
                movzx   edx, word ptr [rcx+38h]
                mov     rcx, [rcx+40h]
                call    sub_1403CC478

loc_1408B2F9F:                          ; CODE XREF: sub_1408B2CE8+146↑j
                                        ; sub_1408B2CE8+213↑j ...
                xor     r9d, r9d
                mov     [rsp+48h+var_28], rbx
                mov     r8, rdi
                mov     rdx, rsi
                mov     ecx, 0CAh
                call    KeBugCheckEx
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B2CE8   endp

algn_1408B2FB8:                         ; DATA XREF: .pdata:000000014011D9C0↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=30h

sub_1408B2FC0   proc near               ; CODE XREF: sub_1408A1E90+19B↑p
                                        ; DATA XREF: .pdata:000000014011D9CC↑o

var_110         = dword ptr -110h
var_108         = qword ptr -108h
var_100         = dword ptr -100h
var_FC          = dword ptr -0FCh
var_F8          = dword ptr -0F8h
var_F4          = dword ptr -0F4h
var_F0          = qword ptr -0F0h
var_E0          = byte ptr -0E0h
var_C0          = qword ptr -0C0h
var_B8          = dword ptr -0B8h
var_B4          = dword ptr -0B4h
var_B0          = qword ptr -0B0h
var_A8          = dword ptr -0A8h
var_A4          = dword ptr -0A4h
var_A0          = qword ptr -0A0h
var_98          = dword ptr -98h
var_94          = dword ptr -94h
var_90          = qword ptr -90h
var_88          = dword ptr -88h
var_84          = dword ptr -84h
var_80          = qword ptr -80h
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_70          = qword ptr -70h
var_68          = dword ptr -68h
var_64          = dword ptr -64h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = qword ptr -50h
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h

; __unwind { // __GSHandlerCheck
                push    rbp
                lea     rbp, [rsp-30h]
                sub     rsp, 130h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+30h+var_10], rax
                mov     r9d, cs:dword_140C02E00
                mov     r11, rcx
                test    r9d, r9d
                jz      loc_1408B3178
                mov     rdx, 400000000000h
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                test    al, al
                jz      loc_1408B3178
                mov     rax, [r11+0B8h]
                test    rax, rax
                jz      short loc_1408B3026
                mov     rax, [rax+138h]
                mov     r10, [rax+28h]
                jmp     short loc_1408B3029
; ---------------------------------------------------------------------------

loc_1408B3026:                          ; CODE XREF: sub_1408B2FC0+57↑j
                xor     r10d, r10d

loc_1408B3029:                          ; CODE XREF: sub_1408B2FC0+64↑j
                cmp     r9d, 5
                jbe     loc_1408B3178
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                test    al, al
                jz      loc_1408B3178
                and     [rsp+130h+var_B4], 0
                lea     rax, [rbp+30h+var_A8]
                and     [rbp+30h+var_A4], 0
                mov     edx, 2
                and     [rbp+30h+var_94], 0
                xor     r9d, r9d
                and     [rbp+30h+var_84], 0
                xor     r8d, r8d
                and     [rbp+30h+var_74], 0
                and     [rbp+30h+var_64], 0
                lea     ecx, [rdx+2]
                and     [rbp+30h+var_54], 0
                and     [rbp+30h+var_44], 0
                and     [rbp+30h+var_34], 0
                and     [rbp+30h+var_24], 0
                and     [rbp+30h+var_14], 0
                mov     [rsp+130h+var_C0], rax
                mov     rax, [r10+30h]
                mov     [rbp+30h+var_B0], rax
                movzx   eax, word ptr [r10+28h]
                mov     [rbp+30h+var_A8], eax
                lea     rax, [rbp+30h+var_88]
                mov     [rbp+30h+var_A0], rax
                mov     rax, [r10+40h]
                mov     [rbp+30h+var_90], rax
                movzx   eax, word ptr [r10+38h]
                mov     [rbp+30h+var_88], eax
                mov     eax, [r10+12Ch]
                mov     [rsp+130h+var_100], eax
                lea     rax, [rsp+130h+var_100]
                mov     [rbp+30h+var_80], rax
                mov     eax, [r11+0A4h]
                mov     [rsp+130h+var_FC], eax
                lea     rax, [rsp+130h+var_FC]
                mov     [rbp+30h+var_70], rax
                mov     eax, [r11+0B0h]
                mov     [rsp+130h+var_F8], eax
                lea     rax, [rsp+130h+var_F8]
                mov     [rbp+30h+var_60], rax
                mov     rax, cs:qword_140C45498
                mov     [rsp+130h+var_F0], rax
                lea     rax, [rsp+130h+var_F0]
                mov     [rbp+30h+var_50], rax
                mov     eax, [r11+0C0h]
                mov     [rsp+130h+var_F4], eax
                lea     rax, [rsp+130h+var_F4]
                mov     [rbp+30h+var_40], rax
                lea     rax, [rbp+30h+var_18]
                mov     [rbp+30h+var_30], rax
                mov     rax, [r11+0D0h]
                mov     [rbp+30h+var_20], rax
                movzx   eax, word ptr [r11+0C8h]
                mov     [rbp+30h+var_18], eax
                lea     rax, [rsp+130h+var_E0]
                mov     [rsp+130h+var_B8], edx
                mov     [rbp+30h+var_98], edx
                mov     [rbp+30h+var_78], ecx
                mov     [rbp+30h+var_68], ecx
                mov     [rbp+30h+var_58], ecx
                mov     [rbp+30h+var_38], ecx
                lea     rcx, dword_140C02E00
                mov     [rbp+30h+var_28], edx
                lea     rdx, byte_1400247D1
                mov     [rsp+130h+var_108], rax
                mov     [rsp+130h+var_110], 0Dh
                mov     [rbp+30h+var_48], 8
                call    sub_140209DB8

loc_1408B3178:                          ; CODE XREF: sub_1408B2FC0+29↑j
                                        ; sub_1408B2FC0+47↑j ...
                mov     rcx, [rbp+30h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 130h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B2FC0
sub_1408B2FC0   endp

byte_1408B318E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D9CC↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B3194   proc near               ; CODE XREF: sub_140731B54+1026B7↑p
                                        ; DATA XREF: .pdata:000000014011D9D8↑o

var_A0          = dword ptr -0A0h
var_98          = qword ptr -98h
var_90          = byte ptr -90h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h

; __unwind { // __GSHandlerCheck
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0C0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                cmp     cs:dword_140C02E00, 5
                mov     r9, r8
                mov     r10, rdx
                mov     r11, rcx
                jbe     loc_1408B3277
                mov     rdx, 400000000000h
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                xor     r8d, r8d
                test    al, al
                jz      loc_1408B3277
                lea     rax, [rbp+57h+var_58]
                mov     [rbp+57h+var_68], 2
                mov     [rbp+57h+var_70], rax
                lea     rdx, word_140024AAA
                mov     rax, [r11+8]
                lea     rcx, dword_140C02E00
                mov     [rbp+57h+var_60], rax
                movzx   eax, word ptr [r11]
                mov     [rbp+57h+var_58], eax
                lea     rax, [rbp+57h+var_38]
                mov     [rbp+57h+var_50], rax
                mov     rax, [r10+8]
                mov     [rbp+57h+var_40], rax
                movzx   eax, word ptr [r10]
                mov     [rbp+57h+var_38], eax
                lea     rax, [rbp+57h+var_18]
                mov     [rbp+57h+var_30], rax
                mov     rax, [r9+8]
                mov     [rbp+57h+var_20], rax
                movzx   eax, word ptr [r9]
                xor     r9d, r9d
                mov     [rbp+57h+var_18], eax
                lea     rax, [rbp+57h+var_90]
                mov     [rsp+0C0h+var_98], rax
                mov     [rsp+0C0h+var_A0], 8
                mov     [rbp+57h+var_54], r8d
                mov     [rbp+57h+var_48], 2
                mov     [rbp+57h+var_34], r8d
                mov     [rbp+57h+var_28], 2
                mov     [rbp+57h+var_14], r8d
                call    sub_140209DB8

loc_1408B3277:                          ; CODE XREF: sub_1408B3194+2C↑j
                                        ; sub_1408B3194+4D↑j
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0C0h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B3194
sub_1408B3194   endp

byte_1408B328D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011D9D8↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B3294   proc near               ; CODE XREF: sub_140735D48+B8E8B↑p
                                        ; DATA XREF: .pdata:000000014011D9E4↑o

var_90          = dword ptr -90h
var_88          = qword ptr -88h
var_80          = dword ptr -80h
var_7C          = dword ptr -7Ch
var_70          = byte ptr -70h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind { // __GSHandlerCheck
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0B0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                cmp     cs:dword_140C02E00, 5
                mov     r10d, edx
                mov     r9, rcx
                jbe     loc_1408B3359
                mov     rdx, 400000000000h
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                xor     r8d, r8d
                test    al, al
                jz      short loc_1408B3359
                lea     rax, [rbp+57h+var_38]
                mov     [rbp+57h+var_48], 2
                mov     [rbp+57h+var_50], rax
                lea     rdx, byte_140024710
                mov     rax, [r9+30h]
                lea     rcx, dword_140C02E00
                mov     [rbp+57h+var_40], rax
                movzx   eax, word ptr [r9+28h]
                mov     [rbp+57h+var_38], eax
                mov     eax, [r9+238h]
                xor     r9d, r9d
                mov     [rbp+57h+var_80], eax
                lea     rax, [rbp+57h+var_80]
                mov     [rbp+57h+var_30], rax
                lea     rax, [rbp+57h+var_7C]
                mov     [rbp+57h+var_20], rax
                lea     rax, [rbp+57h+var_70]
                mov     [rsp+0B0h+var_88], rax
                mov     [rsp+0B0h+var_90], 6
                mov     [rbp+57h+var_34], r8d
                mov     [rbp+57h+var_28], 4
                mov     [rbp+57h+var_7C], r10d
                mov     [rbp+57h+var_18], 4
                call    sub_140209DB8

loc_1408B3359:                          ; CODE XREF: sub_1408B3294+29↑j
                                        ; sub_1408B3294+4A↑j
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0B0h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B3294
sub_1408B3294   endp

byte_1408B336F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011D9E4↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B3378   proc near               ; CODE XREF: sub_14077C8E4+D268F↑p
                                        ; DATA XREF: .pdata:000000014011D9F0↑o

var_A0          = dword ptr -0A0h
var_98          = qword ptr -98h
var_90          = dword ptr -90h
var_8C          = dword ptr -8Ch
var_88          = qword ptr -88h
var_80          = byte ptr -80h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = byte ptr -50h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
arg_8           = qword ptr  18h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_8], rbx
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0C0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                cmp     cs:dword_140C02E00, 5
                mov     r10d, r9d
                mov     r9, rcx
                mov     r11d, r8d
                mov     rbx, rdx
                jbe     loc_1408B345A
                mov     rdx, 400000000000h
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                test    al, al
                jz      loc_1408B345A
                and     [rbp+57h+var_54], 0
                lea     rax, [rbp+57h+var_88]
                mov     rdx, r9
                mov     [rbp+57h+var_60], rax
                lea     rcx, [rbp+57h+var_50]
                mov     [rbp+57h+var_88], 800h
                mov     [rbp+57h+var_58], 8
                call    sub_140209F78
                and     [rbp+57h+var_34], 0
                lea     rax, [rbp+57h+var_90]
                and     [rbp+57h+var_24], 0
                lea     rcx, dword_140C02E00
                and     [rbp+57h+var_14], 0
                mov     edx, 4
                mov     [rbp+57h+var_30], rax
                xor     r9d, r9d
                lea     rax, [rbp+57h+var_8C]
                mov     [rbp+57h+var_28], edx
                mov     [rbp+57h+var_20], rax
                xor     r8d, r8d
                lea     rax, [rbp+57h+var_80]
                mov     [rbp+57h+var_18], edx
                mov     [rsp+0C0h+var_98], rax
                lea     rdx, byte_1400244B1
                mov     [rsp+0C0h+var_A0], 7
                mov     [rbp+57h+var_40], rbx
                mov     [rbp+57h+var_38], 10h
                mov     [rbp+57h+var_90], r11d
                mov     [rbp+57h+var_8C], r10d
                call    sub_140209DB8

loc_1408B345A:                          ; CODE XREF: sub_1408B3378+33↑j
                                        ; sub_1408B3378+51↑j
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0C0h+arg_8]
                add     rsp, 0C0h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B3378
sub_1408B3378   endp

algn_1408B3478:                         ; DATA XREF: .pdata:000000014011D9F0↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B3480   proc near               ; CODE XREF: sub_140764BFC+10D↑p
                                        ; DATA XREF: .pdata:000000014011D9FC↑o

var_80          = dword ptr -80h
var_78          = qword ptr -78h
var_70          = dword ptr -70h
var_60          = byte ptr -60h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind { // __GSHandlerCheck
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0A0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                cmp     cs:dword_140C02E00, 5
                mov     r9d, edx
                mov     r10, rcx
                jbe     short loc_1408B3528
                mov     rdx, 400000000000h
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                xor     edx, edx
                test    al, al
                jz      short loc_1408B3528
                lea     rax, [rbp+57h+var_28]
                mov     [rbp+57h+var_24], edx
                mov     [rbp+57h+var_40], rax
                lea     rdx, byte_1400245FF
                mov     rax, [r10+30h]
                lea     rcx, dword_140C02E00
                mov     [rbp+57h+var_30], rax
                xor     r8d, r8d
                movzx   eax, word ptr [r10+28h]
                mov     [rbp+57h+var_28], eax
                lea     rax, [rbp+57h+var_70]
                mov     [rbp+57h+var_20], rax
                lea     rax, [rbp+57h+var_60]
                mov     [rbp+57h+var_70], r9d
                xor     r9d, r9d
                mov     [rsp+0A0h+var_78], rax
                mov     [rsp+0A0h+var_80], 5
                mov     [rbp+57h+var_38], 2
                mov     [rbp+57h+var_18], 4
                call    sub_140209DB8

loc_1408B3528:                          ; CODE XREF: sub_1408B3480+29↑j
                                        ; sub_1408B3480+45↑j
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0A0h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B3480
sub_1408B3480   endp

byte_1408B353E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011D9FC↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=50h

sub_1408B3544   proc near               ; CODE XREF: sub_1408BA044+1CC↓p
                                        ; DATA XREF: .pdata:000000014011DA08↑o

var_130         = dword ptr -130h
var_128         = qword ptr -128h
var_120         = byte ptr -120h
var_11F         = byte ptr -11Fh
var_11C         = dword ptr -11Ch
var_118         = dword ptr -118h
var_114         = dword ptr -114h
var_110         = qword ptr -110h
var_108         = qword ptr -108h
var_100         = byte ptr -100h
var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = dword ptr -0C8h
var_C4          = dword ptr -0C4h
var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = dword ptr -0A8h
var_A4          = dword ptr -0A4h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_70          = qword ptr -70h
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_0], rbx
                mov     [rsp-8+arg_8], rdi
                push    rbp
                lea     rbp, [rsp-50h]
                sub     rsp, 150h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+50h+var_10], rax
                xor     edi, edi
                mov     r9, rcx
                cmp     cs:dword_140C02E00, edi
                jbe     loc_1408B373F
                mov     rdx, 400000000000h
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                test    al, al
                jz      loc_1408B373F
                test    r9, r9
                jz      loc_1408B3761
                mov     r10, [r9+28h]
                test    r10, r10
                jz      loc_1408B3761
                mov     r11, [r9+18h]
                test    r11, r11
                jz      loc_1408B3761
                mov     rbx, 0FFFFF78000000008h
                mov     rbx, [rbx]
                cmp     cs:dword_140C02E00, 5
                jbe     loc_1408B373F
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                test    al, al
                jz      loc_1408B373F
                lea     rax, [rbp+50h+var_C8]
                mov     [rsp+150h+var_D8], 2
                mov     [rsp+150h+var_E0], rax
                mov     rcx, rbx
                mov     rax, [r10+30h]
                xor     r8d, r8d
                sub     rcx, [r9+38h]
                mov     [rbp+50h+var_D0], rax
                movzx   eax, word ptr [r10+28h]
                mov     [rbp+50h+var_C8], eax
                lea     rax, [rbp+50h+var_A8]
                mov     [rbp+50h+var_C0], rax
                mov     rax, [r10+40h]
                mov     [rbp+50h+var_B0], rax
                movzx   eax, word ptr [r10+38h]
                mov     [rbp+50h+var_A8], eax
                mov     eax, [r9]
                mov     [rsp+150h+var_11C], eax
                lea     rax, [rsp+150h+var_11C]
                mov     [rbp+50h+var_A0], rax
                lea     rax, [rbp+50h+var_78]
                mov     [rbp+50h+var_90], rax
                mov     rax, [r11+30h]
                mov     [rbp+50h+var_80], rax
                movzx   eax, word ptr [r11+28h]
                mov     [rbp+50h+var_78], eax
                mov     al, [r9+20h]
                mov     [rsp+150h+var_120], al
                lea     rax, [rsp+150h+var_120]
                mov     [rbp+50h+var_70], rax
                mov     al, [r9+30h]
                mov     [rsp+150h+var_11F], al
                lea     rax, [rsp+150h+var_11F]
                mov     [rbp+50h+var_60], rax
                mov     eax, [r9+0Ch]
                mov     [rsp+150h+var_118], eax
                lea     rax, [rsp+150h+var_118]
                mov     [rbp+50h+var_50], rax
                mov     eax, [r9+14h]
                xor     r9d, r9d
                mov     [rsp+150h+var_114], eax
                lea     rax, [rsp+150h+var_114]
                mov     [rbp+50h+var_40], rax
                mov     rax, 346DC5D63886594Bh
                mul     rcx
                lea     rax, [rsp+150h+var_110]
                mov     [rbp+50h+var_C4], edi
                mov     [rbp+50h+var_30], rax
                lea     rcx, dword_140C02E00
                shr     rdx, 0Bh
                lea     rax, [rsp+150h+var_108]
                mov     [rbp+50h+var_20], rax
                lea     rax, [rsp+150h+var_100]
                mov     [rsp+150h+var_110], rdx
                lea     rdx, byte_14002464B
                mov     [rsp+150h+var_128], rax
                mov     [rbp+50h+var_B8], 2
                mov     [rbp+50h+var_A4], edi
                mov     [rbp+50h+var_98], 4
                mov     [rbp+50h+var_88], 2
                mov     [rbp+50h+var_74], edi
                mov     [rbp+50h+var_68], 1
                mov     [rbp+50h+var_58], 1
                mov     [rbp+50h+var_48], 4
                mov     [rbp+50h+var_38], 4
                mov     [rbp+50h+var_28], 8
                mov     [rsp+150h+var_108], rbx
                mov     [rbp+50h+var_18], 8
                mov     [rsp+150h+var_130], 0Fh
                call    sub_140209DB8

loc_1408B373F:                          ; CODE XREF: sub_1408B3544+30↑j
                                        ; sub_1408B3544+4E↑j ...
                mov     rcx, [rbp+50h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+150h+var_s0]
                mov     rbx, [r11+10h]
                mov     rdi, [r11+18h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408B3761:                          ; CODE XREF: sub_1408B3544+57↑j
                                        ; sub_1408B3544+64↑j ...
                mov     ecx, 5
                int     29h             ; Win8: RtlFailFast(ecx)
; } // starts at 1408B3544
sub_1408B3544   endp

; ---------------------------------------------------------------------------
algn_1408B3768:                         ; DATA XREF: .pdata:000000014011DA08↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B3770   proc near               ; CODE XREF: IoRequestDeviceRemovalForReset+EA↑p
                                        ; DATA XREF: .pdata:000000014011DA14↑o

var_C0          = dword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = dword ptr -0B0h
var_AC          = dword ptr -0ACh
var_A8          = dword ptr -0A8h
var_A0          = byte ptr -0A0h
var_80          = qword ptr -80h
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_70          = qword ptr -70h
var_68          = dword ptr -68h
var_64          = dword ptr -64h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = qword ptr -50h
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_0], rbx
                mov     [rsp-8+arg_8], rdi
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0E0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                mov     ebx, r8d
                mov     edi, edx
                test    rcx, rcx
                jz      short loc_1408B37AA
                mov     rax, [rcx+138h]
                mov     rcx, [rax+28h]

loc_1408B37AA:                          ; CODE XREF: sub_1408B3770+2D↑j
                test    rcx, rcx
                jz      short loc_1408B37C0
                mov     r11d, [rcx+12Ch]
                lea     r9, [rcx+28h]
                lea     r10, [rcx+38h]
                jmp     short loc_1408B37D0
; ---------------------------------------------------------------------------

loc_1408B37C0:                          ; CODE XREF: sub_1408B3770+3D↑j
                lea     r9, unk_140C0ECE8
                mov     r11d, 300h
                mov     r10, r9

loc_1408B37D0:                          ; CODE XREF: sub_1408B3770+4E↑j
                cmp     cs:dword_140C02E00, 5
                jbe     loc_1408B38A8
                mov     rdx, 400000000000h
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                test    al, al
                jz      loc_1408B38A8
                and     [rbp+57h+var_74], 0
                lea     rax, [rbp+57h+var_68]
                and     [rbp+57h+var_64], 0
                mov     ecx, 2
                and     [rbp+57h+var_54], 0
                xor     r8d, r8d
                and     [rbp+57h+var_44], 0
                and     [rbp+57h+var_34], 0
                and     [rbp+57h+var_24], 0
                lea     edx, [rcx+2]
                and     [rbp+57h+var_14], 0
                mov     [rbp+57h+var_80], rax
                mov     rax, [r9+8]
                mov     [rbp+57h+var_70], rax
                movzx   eax, word ptr [r9]
                xor     r9d, r9d
                mov     [rbp+57h+var_68], eax
                lea     rax, [rbp+57h+var_48]
                mov     [rbp+57h+var_60], rax
                mov     rax, [r10+8]
                mov     [rbp+57h+var_50], rax
                movzx   eax, word ptr [r10]
                mov     [rbp+57h+var_48], eax
                lea     rax, [rbp+57h+var_B0]
                mov     [rbp+57h+var_40], rax
                lea     rax, [rbp+57h+var_AC]
                mov     [rbp+57h+var_30], rax
                lea     rax, [rbp+57h+var_A8]
                mov     [rbp+57h+var_20], rax
                lea     rax, [rbp+57h+var_A0]
                mov     [rbp+57h+var_78], ecx
                mov     [rbp+57h+var_58], ecx
                lea     rcx, dword_140C02E00
                mov     [rbp+57h+var_38], edx
                mov     [rbp+57h+var_28], edx
                mov     [rbp+57h+var_18], edx
                lea     rdx, byte_140024767
                mov     [rsp+0E0h+var_B8], rax
                mov     [rsp+0E0h+var_C0], 9
                mov     [rbp+57h+var_B0], r11d
                mov     [rbp+57h+var_AC], edi
                mov     [rbp+57h+var_A8], ebx
                call    sub_140209DB8

loc_1408B38A8:                          ; CODE XREF: sub_1408B3770+67↑j
                                        ; sub_1408B3770+85↑j
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+0E0h+var_s0]
                mov     rbx, [r11+10h]
                mov     rdi, [r11+18h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B3770
sub_1408B3770   endp

algn_1408B38CA:                         ; DATA XREF: .pdata:000000014011DA14↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B38D0   proc near               ; CODE XREF: sub_1408B6CC4+AB↓p
                                        ; DATA XREF: .pdata:000000014011DA20↑o

var_90          = dword ptr -90h
var_88          = qword ptr -88h
var_80          = dword ptr -80h
var_7C          = dword ptr -7Ch
var_70          = byte ptr -70h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h

; __unwind { // __GSHandlerCheck
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0B0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                cmp     cs:dword_140C02E00, 5
                mov     r10d, r8d
                mov     r11d, edx
                mov     r9, rcx
                jbe     loc_1408B3992
                mov     rdx, 400000000000h
                lea     rcx, dword_140C02E00
                call    sub_140209F38
                xor     r8d, r8d
                test    al, al
                jz      short loc_1408B3992
                lea     rax, [rbp+57h+var_38]
                mov     [rbp+57h+var_48], 2
                mov     [rbp+57h+var_50], rax
                lea     rdx, byte_140024510
                mov     rax, [r9+30h]
                lea     rcx, dword_140C02E00
                mov     [rbp+57h+var_40], rax
                movzx   eax, word ptr [r9+28h]
                xor     r9d, r9d
                mov     [rbp+57h+var_38], eax
                lea     rax, [rbp+57h+var_80]
                mov     [rbp+57h+var_30], rax
                lea     rax, [rbp+57h+var_7C]
                mov     [rbp+57h+var_20], rax
                lea     rax, [rbp+57h+var_70]
                mov     [rsp+0B0h+var_88], rax
                mov     [rsp+0B0h+var_90], 6
                mov     [rbp+57h+var_34], r8d
                mov     [rbp+57h+var_80], r11d
                mov     [rbp+57h+var_28], 4
                mov     [rbp+57h+var_7C], r10d
                mov     [rbp+57h+var_18], 4
                call    sub_140209DB8

loc_1408B3992:                          ; CODE XREF: sub_1408B38D0+2C↑j
                                        ; sub_1408B38D0+4D↑j
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0B0h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B38D0
sub_1408B38D0   endp

algn_1408B39A8:                         ; DATA XREF: .pdata:000000014011DA20↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408B39B0   proc near               ; CODE XREF: sub_1408B2B64:loc_1408B2BA8↑p
                                        ; sub_1408B2CAC:loc_1408B2CCC↑p
                                        ; DATA XREF: ...

var_18          = qword ptr -18h

                sub     rsp, 38h
                xor     edx, edx
                cmp     cs:byte_140C43090, dl
                jnz     short loc_1408B39D8
                xor     r9d, r9d
                mov     [rsp+38h+var_18], rdx
                xor     r8d, r8d
                mov     ecx, 0CAh
                lea     edx, [r9+10h]
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_1408B39D8:                          ; CODE XREF: sub_1408B39B0+C↑j
                mov     ecx, cs:dword_140C43094
                test    ecx, ecx
                jz      short loc_1408B39F3
                sub     ecx, 1
                jz      short loc_1408B39F5
                cmp     ecx, 1
                jz      short loc_1408B39F3
                mov     ecx, 5
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408B39F3:                          ; CODE XREF: sub_1408B39B0+30↑j
                                        ; sub_1408B39B0+3A↑j
                mov     dl, 1

loc_1408B39F5:                          ; CODE XREF: sub_1408B39B0+35↑j
                mov     al, dl
                add     rsp, 38h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B39B0   endp

byte_1408B39FD  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DA2C↑o

; =============== S U B R O U T I N E =======================================


sub_1408B3A04   proc near               ; CODE XREF: sub_14089E0D8+516↑p
                                        ; sub_1408B008C+100↑p ...

var_28          = byte ptr -28h
var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                push    rdi
                sub     rsp, 40h
                mov     bpl, r8b
                mov     rdi, rdx
                xor     ebx, ebx
                lea     r8, [rax+20h]
                mov     edx, 7FFFFFFFh
                mov     [rax+20h], rbx
                mov     [rax-18h], rbx
                mov     rsi, rcx
                call    sub_140745478
                test    eax, eax
                js      short loc_1408B3A77
                lea     r8, [rsp+48h+var_18]
                mov     edx, 7FFFFFFFh
                mov     rcx, rdi
                call    sub_140745478
                test    eax, eax
                js      short loc_1408B3A77
                mov     rdx, [rsp+48h+arg_18]
                mov     r9, [rsp+48h+var_18]
                cmp     rdx, r9
                jnz     short loc_1408B3A77
                mov     r8, rdi
                mov     [rsp+48h+var_28], bpl
                mov     rcx, rsi
                call    RtlCompareUnicodeStrings
                test    eax, eax
                setz    bl

loc_1408B3A77:                          ; CODE XREF: sub_1408B3A04+37↑j
                                        ; sub_1408B3A04+4D↑j ...
                mov     rbp, [rsp+48h+arg_8]
                mov     al, bl
                mov     rbx, [rsp+48h+arg_0]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B3A04   endp

byte_1408B3A8F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DA38↑o

; =============== S U B R O U T I N E =======================================


sub_1408B3A98   proc near               ; CODE XREF: sub_140626480+1DA212↑p
                                        ; sub_140678900+1969EB↑p ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 20h
                movzx   r8d, word ptr [rdx]
                mov     r14, rdx
                mov     r15d, [rcx+8]
                add     r8d, 2
                add     r15d, r8d
                mov     rbx, rcx
                mov     edx, r15d
                mov     r8d, 6F697050h
                mov     ecx, 200h
                mov     ebp, r15d
                call    ExAllocatePoolWithTag
                xor     r12d, r12d
                mov     rsi, rax
                test    rax, rax
                jz      short loc_1408B3B3A
                mov     rdi, [rbx]
                mov     rdx, [rdi]
                test    rdx, rdx
                jz      short loc_1408B3B0F
                mov     r8d, [rbx+8]
                mov     rcx, rax
                call    memmove
                mov     rcx, [rdi]
                xor     edx, edx
                call    ExFreePoolWithTag
                mov     rdi, [rbx]

loc_1408B3B0F:                          ; CODE XREF: sub_1408B3A98+5C↑j
                mov     eax, [rbx+8]
                movzx   r8d, word ptr [r14]
                mov     rdx, [r14+8]
                shr     rax, 1
                lea     rcx, [rsi+rax*2]
                call    memmove
                shr     rbp, 1
                mov     al, 1
                mov     [rbx+8], r15d
                mov     [rsi+rbp*2-2], r12w
                mov     [rdi], rsi
                jmp     short loc_1408B3B46
; ---------------------------------------------------------------------------

loc_1408B3B3A:                          ; CODE XREF: sub_1408B3A98+51↑j
                mov     rax, [rbx+18h]
                mov     dword ptr [rax], 0C000009Ah
                xor     al, al

loc_1408B3B46:                          ; CODE XREF: sub_1408B3A98+A0↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     rbp, [rsp+38h+arg_8]
                mov     rsi, [rsp+38h+arg_10]
                mov     rdi, [rsp+38h+arg_18]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r12
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B3A98   endp

byte_1408B3B66  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DA44↑o

; =============== S U B R O U T I N E =======================================


sub_1408B3B6C   proc near               ; CODE XREF: IoReportDetectedDevice+AA86F↑p
                                        ; DATA XREF: .pdata:000000014011DA50↑o

var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+10h], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 50h
                xor     r12d, r12d
                mov     rbp, rdx
                mov     [rax+8], r12
                mov     edi, r12d
                mov     [rax+20h], r12
                test    rcx, rcx
                jz      short loc_1408B3BA5
                mov     rax, [rcx+138h]
                mov     rsi, [rax+28h]
                jmp     short loc_1408B3BA8
; ---------------------------------------------------------------------------

loc_1408B3BA5:                          ; CODE XREF: sub_1408B3B6C+2A↑j
                mov     rsi, r12

loc_1408B3BA8:                          ; CODE XREF: sub_1408B3B6C+37↑j
                test    rsi, rsi
                jz      loc_1408B3CEA
                cmp     [rsi+30h], r12
                jz      loc_1408B3CEA
                test    r8, r8
                jz      short loc_1408B3BD3
                mov     ecx, [r8+4]
                lea     eax, [rcx+1]
                cmp     eax, 13h
                jbe     short loc_1408B3BD6
                mov     ecx, 12h
                jmp     short loc_1408B3BD6
; ---------------------------------------------------------------------------

loc_1408B3BD3:                          ; CODE XREF: sub_1408B3B6C+52↑j
                mov     ecx, r12d

loc_1408B3BD6:                          ; CODE XREF: sub_1408B3B6C+5E↑j
                                        ; sub_1408B3B6C+65↑j
                movsxd  r14, ecx
                lea     r13, off_140009548 ; "Internal"
                or      rcx, 0FFFFFFFFFFFFFFFFh
                mov     rax, [r13+r14*8+0]

loc_1408B3BE9:                          ; CODE XREF: sub_1408B3B6C+85↓j
                inc     rcx
                cmp     [rax+rcx*2], r12w
                jnz     short loc_1408B3BE9
                movzx   eax, word ptr [rdx]
                mov     r8d, 6F697050h
                add     ecx, eax
                lea     r15d, ds:2Ah[rcx*2]
                mov     ecx, 1
                mov     edx, r15d
                mov     ebx, r15d
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408B3C28
                mov     ebx, 0C000009Ah
                jmp     loc_1408B3CFE
; ---------------------------------------------------------------------------

loc_1408B3C28:                          ; CODE XREF: sub_1408B3B6C+B0↑j
                mov     r8, rbx
                xor     edx, edx
                mov     rcx, rdi
                call    memset
                mov     rax, [r13+r14*8+0]
                lea     r9, [rsp+88h+arg_18]
                mov     [rsp+88h+var_48], rbp
                lea     r14, aDetected  ; "DETECTED"
                mov     [rsp+88h+var_50], rax
                lea     r8, [rsp+88h+arg_0]
                lea     rax, aWsWsWz    ; "%ws%ws\\%wZ"
                mov     [rsp+88h+var_58], r14
                mov     [rsp+88h+var_60], rax
                mov     rcx, rdi
                shr     rbx, 1
                mov     rdx, rbx
                mov     [rsp+88h+var_68], r12
                call    sub_14021D28C
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B3CEF
                mov     rcx, [rsp+88h+arg_0]
                lea     r8, aWsWz_0     ; "%ws\\%wZ"
                mov     rdx, [rsp+88h+arg_18]
                add     rcx, 2
                dec     rdx
                mov     [rsp+88h+var_68], rbp
                mov     r9, r14
                call    sub_140311280
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B3CEF
                mov     rdx, [rsi+30h]
                mov     r9d, 3
                mov     rcx, cs:qword_140CF4378
                xor     r8d, r8d
                mov     dword ptr [rsp+88h+var_50], r12d
                mov     dword ptr [rsp+88h+var_58], r15d
                mov     [rsp+88h+var_60], rdi
                mov     dword ptr [rsp+88h+var_68], 7
                call    sub_1407358C8
                mov     ebx, eax
                jmp     short loc_1408B3CEF
; ---------------------------------------------------------------------------

loc_1408B3CEA:                          ; CODE XREF: sub_1408B3B6C+3F↑j
                                        ; sub_1408B3B6C+49↑j
                mov     ebx, 0C000000Dh

loc_1408B3CEF:                          ; CODE XREF: sub_1408B3B6C+117↑j
                                        ; sub_1408B3B6C+148↑j ...
                test    rdi, rdi
                jz      short loc_1408B3CFE
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B3CFE:                          ; CODE XREF: sub_1408B3B6C+B7↑j
                                        ; sub_1408B3B6C+186↑j
                mov     eax, ebx
                mov     rbx, [rsp+88h+arg_8]
                add     rsp, 50h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B3B6C   endp

algn_1408B3D19:                         ; DATA XREF: .pdata:000000014011DA50↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B3D20   proc near               ; CODE XREF: sub_1408B69DC+6F↓p
                                        ; sub_1408B69DC+88↓p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rdi, rcx
                call    sub_14074CF5C
                test    eax, eax
                jz      short loc_1408B3D6A
                mov     r8d, 75737050h
                mov     edx, eax
                mov     ecx, 1
                mov     esi, eax
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408B3D6A
                mov     r8d, esi
                mov     rdx, rdi
                mov     rcx, rax
                call    memmove
                mov     rax, rbx
                jmp     short loc_1408B3D6C
; ---------------------------------------------------------------------------

loc_1408B3D6A:                          ; CODE XREF: sub_1408B3D20+19↑j
                                        ; sub_1408B3D20+35↑j
                xor     eax, eax

loc_1408B3D6C:                          ; CODE XREF: sub_1408B3D20+48↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B3D20   endp

byte_1408B3D7D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DA5C↑o

; =============== S U B R O U T I N E =======================================


sub_1408B3D84   proc near               ; CODE XREF: sub_1407471A4+F067E↑p
                                        ; DATA XREF: .pdata:000000014011DA68↑o

var_28          = qword ptr -28h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = byte ptr  18h
arg_18          = byte ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                push    rdi
                sub     rsp, 40h
                and     qword ptr [rax-18h], 0
                mov     rdi, rdx
                and     qword ptr [rax-10h], 0
                mov     rsi, rcx
                and     dword ptr [rax+20h], 0
                and     dword ptr [rax+24h], 0

loc_1408B3DAC:                          ; CODE XREF: sub_1408B3D84+AD↓j
                                        ; sub_1408B3D84+E6↓j
                and     [rsp+48h+var_28], 0
                lea     r8, [rsp+48h+var_18]
                xor     r9d, r9d
                lea     rdx, [rsp+48h+arg_18]
                mov     rcx, rsi
                call    sub_140747BB8
                test    al, al
                jz      loc_1408B3E73
                mov     rdx, [rsp+48h+var_18]
                test    rdx, rdx
                jz      short loc_1408B3DE6
                mov     rax, [rdx+138h]
                mov     r11, [rax+28h]
                jmp     short loc_1408B3DE9
; ---------------------------------------------------------------------------

loc_1408B3DE6:                          ; CODE XREF: sub_1408B3D84+53↑j
                xor     r11d, r11d

loc_1408B3DE9:                          ; CODE XREF: sub_1408B3D84+60↑j
                mov     rcx, [rdi]
                xor     r8d, r8d
                call    sub_140746FC4
                test    al, al
                jnz     short loc_1408B3E6F
                mov     rdx, [r11+10h]
                test    rdx, rdx
                jnz     short loc_1408B3E0C
                mov     rdx, [r11+288h]
                and     rdx, 0FFFFFFFFFFFFFFFEh

loc_1408B3E0C:                          ; CODE XREF: sub_1408B3D84+7B↑j
                mov     rdx, [rdx+20h]
                xor     r8d, r8d
                mov     rcx, [rdi]
                call    sub_140746FC4
                test    al, al
                jnz     short loc_1408B3E6F
                mov     rcx, [r11+20h]
                call    sub_140738BC8
                mov     rbx, rax
                mov     r11, [rax]
                cmp     r11, rax
                jz      loc_1408B3DAC

loc_1408B3E37:                          ; CODE XREF: sub_1408B3D84+E4↓j
                lea     r8, [rsp+48h+arg_10]
                mov     rcx, r11
                lea     rdx, [rsp+48h+var_10]
                call    sub_14089F0AC
                mov     rdx, [rsp+48h+var_10]
                mov     r11, [r11]
                test    rdx, rdx
                jz      short loc_1408B3E65
                mov     rcx, [rdi]
                xor     r8d, r8d
                call    sub_140746FC4
                test    al, al
                jnz     short loc_1408B3E6F

loc_1408B3E65:                          ; CODE XREF: sub_1408B3D84+D0↑j
                cmp     r11, rbx
                jnz     short loc_1408B3E37
                jmp     loc_1408B3DAC
; ---------------------------------------------------------------------------

loc_1408B3E6F:                          ; CODE XREF: sub_1408B3D84+72↑j
                                        ; sub_1408B3D84+99↑j ...
                mov     al, 1
                jmp     short loc_1408B3E75
; ---------------------------------------------------------------------------

loc_1408B3E73:                          ; CODE XREF: sub_1408B3D84+45↑j
                xor     al, al

loc_1408B3E75:                          ; CODE XREF: sub_1408B3D84+ED↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     rsi, [rsp+48h+arg_8]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B3D84   endp

byte_1408B3E86  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DA68↑o

; =============== S U B R O U T I N E =======================================


sub_1408B3E8C   proc near               ; CODE XREF: sub_140746B74+F06C5↑p
                                        ; DATA XREF: .pdata:000000014011DA74↑o
                sub     rsp, 28h
                mov     rcx, [rcx]
                xor     r8d, r8d
                call    sub_140746FC4
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B3E8C   endp

algn_1408B3EA1:                         ; DATA XREF: .pdata:000000014011DA74↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408B3EA8   proc near               ; CODE XREF: sub_140746B74+F06F5↑p
                                        ; sub_1407471A4+F06AE↑p ...

arg_0           = byte ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_10], rbp
                mov     [rsp+arg_18], rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 20h
                mov     r11, [rdx]
                xor     ebx, ebx
                mov     rax, [rcx]
                mov     r13b, r8b
                mov     r15, rdx
                mov     rdi, rcx
                mov     ebp, ebx
                mov     r14d, [rax]
                cmp     [r11], ebx
                jbe     short loc_1408B3F5D

loc_1408B3EDF:                          ; CODE XREF: sub_1408B3EA8+AD↓j
                mov     rcx, [rdi]
                lea     r9, [rsp+48h+arg_0]
                mov     eax, ebp
                mov     r8d, r14d
                lea     rsi, [rax+rax*2]
                mov     rdx, [r11+rsi*8+10h]
                call    sub_140746FE8
                test    eax, eax
                js      short loc_1408B3F1D
                mov     r12b, 1
                test    r13b, r13b
                jz      short loc_1408B3F18
                mov     eax, [r11+rsi*8+20h]
                test    r12b, al
                jz      short loc_1408B3F18
                mov     r9d, 1
                jmp     short loc_1408B3F2A
; ---------------------------------------------------------------------------

loc_1408B3F18:                          ; CODE XREF: sub_1408B3EA8+5C↑j
                                        ; sub_1408B3EA8+66↑j
                mov     r9d, ebx
                jmp     short loc_1408B3F2A
; ---------------------------------------------------------------------------

loc_1408B3F1D:                          ; CODE XREF: sub_1408B3EA8+54↑j
                movzx   r9d, byte ptr [r11+rsi*8+20h]
                mov     r12b, bl
                and     r9d, 1

loc_1408B3F2A:                          ; CODE XREF: sub_1408B3EA8+6E↑j
                                        ; sub_1408B3EA8+73↑j
                mov     r8d, [r11+rsi*8+18h]
                mov     rcx, rdi
                mov     rdx, [r11+rsi*8+10h]
                call    sub_140746F30
                test    r12b, r12b
                jz      short loc_1408B3F49
                cmp     eax, 0C0000035h
                cmovz   eax, ebx

loc_1408B3F49:                          ; CODE XREF: sub_1408B3EA8+97↑j
                test    eax, eax
                js      short loc_1408B3F89
                mov     r11, [r15]
                inc     ebp
                cmp     ebp, [r11]
                jb      short loc_1408B3EDF
                mov     rax, [rdi]
                mov     r14d, [rax]

loc_1408B3F5D:                          ; CODE XREF: sub_1408B3EA8+35↑j
                test    r14d, r14d
                jnz     short loc_1408B3F69
                mov     cl, [r15+8]
                mov     [rdi+8], cl

loc_1408B3F69:                          ; CODE XREF: sub_1408B3EA8+B8↑j
                                        ; sub_1408B3EA8+E3↓j
                mov     rbp, [rsp+48h+arg_10]
                mov     eax, ebx
                mov     rbx, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_18]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408B3F89:                          ; CODE XREF: sub_1408B3EA8+A3↑j
                mov     ebx, eax
                jmp     short loc_1408B3F69
sub_1408B3EA8   endp

; ---------------------------------------------------------------------------
byte_1408B3F8D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DA80↑o

; =============== S U B R O U T I N E =======================================


sub_1408B3F94   proc near               ; CODE XREF: sub_140747320+F0609↑p
                                        ; DATA XREF: .pdata:000000014011DA8C↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                push    rdi
                sub     rsp, 30h
                and     qword ptr [rax+18h], 0
                mov     rbx, r8
                cmp     dword ptr [r8], 1
                mov     rsi, rdx
                mov     r11, rcx
                ja      short loc_1408B3FF6
                mov     edi, [r8+4]
                xor     r9d, r9d
                mov     rcx, [rcx]
                lea     r8, [rax+18h]
                and     qword ptr [rax-18h], 0
                dec     edi
                mov     edx, edi
                call    sub_14076D5C4
                cmp     [rsp+38h+arg_10], rsi
                jz      short loc_1408B3FE2
                mov     eax, 0C000000Eh
                jmp     short loc_1408B3FFB
; ---------------------------------------------------------------------------

loc_1408B3FE2:                          ; CODE XREF: sub_1408B3F94+45↑j
                mov     rcx, [r11]
                mov     edx, edi
                call    sub_14077BD20
                cmp     dword ptr [rbx], 1
                ja      short loc_1408B3FF6
                mov     [rbx+4], edi
                jmp     short loc_1408B3FFB
; ---------------------------------------------------------------------------

loc_1408B3FF6:                          ; CODE XREF: sub_1408B3F94+22↑j
                                        ; sub_1408B3F94+5B↑j
                mov     eax, 0C00000BBh

loc_1408B3FFB:                          ; CODE XREF: sub_1408B3F94+4C↑j
                                        ; sub_1408B3F94+60↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     rsi, [rsp+38h+arg_8]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B3F94   endp

byte_1408B400C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011DA8C↑o

; =============== S U B R O U T I N E =======================================


sub_1408B4014   proc near               ; CODE XREF: sub_140746B74+F06DB↑p
                                        ; sub_140746B74+F0732↑p ...

arg_0           = byte ptr  8

                sub     rsp, 28h
                mov     r11, rcx
                lea     r9, [rsp+28h+arg_0]
                mov     rcx, [rcx]
                mov     r8d, [rcx]
                call    sub_140746FE8
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_1408B4037
                mov     eax, 0C000000Eh
                jmp     short loc_1408B4041
; ---------------------------------------------------------------------------

loc_1408B4037:                          ; CODE XREF: sub_1408B4014+1A↑j
                mov     rcx, [r11]
                mov     edx, eax
                call    sub_14077BD20

loc_1408B4041:                          ; CODE XREF: sub_1408B4014+21↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4014   endp

algn_1408B4047:                         ; DATA XREF: .pdata:000000014011DA98↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B4050   proc near               ; CODE XREF: sub_140747038+F07A9↑p
                                        ; DATA XREF: .pdata:000000014011DAA4↑o

var_10          = qword ptr -10h
arg_0           = dword ptr  30h
arg_8           = dword ptr  38h
arg_10          = qword ptr  40h
arg_18          = qword ptr  48h

                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r14
                mov     rbp, rsp
                sub     rsp, 30h
                mov     rdi, [rcx]
                xor     ebx, ebx
                mov     r14, rcx
                mov     [rbp+arg_10], rbx
                mov     [rbp+arg_8], ebx
                mov     [rbp+arg_0], ebx
                mov     edx, [rdi+4]
                mov     ecx, [rdi+0Ch]
                add     edx, edx
                call    sub_140748A9C
                mov     [rbp+arg_18], rax
                test    rax, rax
                jnz     short loc_1408B408D
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B40DF
; ---------------------------------------------------------------------------

loc_1408B408D:                          ; CODE XREF: sub_1408B4050+34↑j
                mov     esi, ebx
                cmp     [rdi], ebx
                jbe     short loc_1408B40C9

loc_1408B4093:                          ; CODE XREF: sub_1408B4050+77↓j
                lea     rax, [rbp+arg_0]
                mov     edx, esi
                lea     r9, [rbp+arg_8]
                mov     [rsp+30h+var_10], rax
                lea     r8, [rbp+arg_10]
                mov     rcx, rdi
                call    sub_14076D5C4
                mov     rdx, [rbp+arg_10]
                lea     rcx, [rbp+arg_18]
                mov     r9d, [rbp+arg_0]
                mov     r8d, [rbp+arg_8]
                call    sub_140747038
                inc     esi
                cmp     esi, [rdi]
                jb      short loc_1408B4093

loc_1408B40C9:                          ; CODE XREF: sub_1408B4050+41↑j
                mov     rcx, rdi
                call    sub_140748B54
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag
                mov     rax, [rbp+arg_18]

loc_1408B40DF:                          ; CODE XREF: sub_1408B4050+3B↑j
                mov     [r14], rax
                mov     eax, ebx
                add     rsp, 30h
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4050   endp

byte_1408B40F0  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011DAA4↑o

; =============== S U B R O U T I N E =======================================


sub_1408B40F8   proc near               ; CODE XREF: sub_140746B74+F06E6↑p
                                        ; DATA XREF: .pdata:000000014011DAB0↑o
                push    rbx
                sub     rsp, 20h
                cmp     qword ptr [rcx+48h], 0
                mov     rbx, rcx
                jz      short loc_1408B4133
                mov     eax, 1
                xchg    eax, [rcx+50h]
                test    eax, eax
                jnz     short loc_1408B4133
                mov     rcx, [rcx+48h]
                call    IoCancelIrp
                mov     eax, 2
                xchg    eax, [rbx+50h]
                cmp     eax, 3
                jnz     short loc_1408B4133
                mov     rcx, [rbx+48h]
                call    IoFreeIrp

loc_1408B4133:                          ; CODE XREF: sub_1408B40F8+E↑j
                                        ; sub_1408B40F8+1A↑j ...
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B40F8   endp

algn_1408B413A:                         ; DATA XREF: .pdata:000000014011DAB0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B4140   proc near               ; CODE XREF: sub_140745F30+F0EAE↑p
                                        ; DATA XREF: .pdata:000000014011DABC↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rdi
                push    r14
                sub     rsp, 20h
                cmp     dword ptr [rdx+5Ch], 1
                mov     rbx, rcx
                mov     rcx, [rdx+60h]
                mov     rdi, rdx
                jz      short loc_1408B41B8
                test    rcx, rcx
                jz      short loc_1408B417C
                mov     rax, [rcx+20h]
                mov     edx, 4
                mov     rcx, [rcx+8]
                call    sub_1404079D0

loc_1408B417C:                          ; CODE XREF: sub_1408B4140+28↑j
                and     qword ptr [rdi+48h], 0
                mov     rcx, rdi
                mov     [rdi+8], rdi
                mov     [rdi], rdi
                call    sub_1408A3D84
                lea     rcx, [rdi+10h]
                mov     edx, 1
                and     qword ptr [rcx], 0
                lea     rax, sub_1408A3C30
                mov     [rcx+10h], rax
                mov     [rcx+18h], rdi
                call    ExQueueWorkItem
                xor     eax, eax
                jmp     loc_1408B42E3
; ---------------------------------------------------------------------------

loc_1408B41B8:                          ; CODE XREF: sub_1408B4140+23↑j
                test    rcx, rcx
                jz      short loc_1408B41EA
                mov     rax, [rcx+20h]
                mov     edx, 3
                mov     rcx, [rcx+8]
                call    sub_1404079D0
                mov     rcx, [rdi+60h]
                mov     rax, [rcx+28h]
                mov     rcx, [rcx+8]
                call    sub_1404079D0
                cmp     byte ptr [rdi+59h], 0
                jz      short loc_1408B41EA
                mov     byte ptr [rdi+59h], 0

loc_1408B41EA:                          ; CODE XREF: sub_1408B4140+7B↑j
                                        ; sub_1408B4140+A4↑j
                mov     edx, 69706E50h
                mov     rcx, rbx
                call    sub_1402B0A60
                xor     edx, edx
                mov     r14, rax
                mov     cl, [rax+4Ch]
                call    IoAllocateIrp
                mov     rbp, rax
                test    rax, rax
                jnz     short loc_1408B4247
                and     [rdi+48h], rax
                mov     rcx, rdi
                mov     [rdi+8], rdi
                mov     [rdi], rdi
                call    sub_1408A3D84
                lea     rcx, [rdi+10h]
                and     [rcx], rbp
                lea     rax, sub_1408A3C30
                lea     edx, [rbp+1]
                mov     [rcx+10h], rax
                mov     [rcx+18h], rdi
                call    ExQueueWorkItem
                mov     ebx, 0C000009Ah
                jmp     loc_1408B42D4
; ---------------------------------------------------------------------------

loc_1408B4247:                          ; CODE XREF: sub_1408B4140+CA↑j
                mov     edx, 1
                mov     rcx, rbp
                call    sub_1402B0910
                mov     rbx, [rbp+0B8h]
                mov     r8d, 48h ; 'H'
                and     qword ptr [rbp+38h], 0
                sub     rbx, r8
                mov     rcx, rbx
                mov     dword ptr [rbp+30h], 0C00000BBh
                xor     edx, edx
                call    memset
                mov     word ptr [rbx], 111Bh
                mov     rcx, rdi
                mov     rax, gs:188h
                and     qword ptr [rbp+48h], 0
                and     qword ptr [rbp+50h], 0
                mov     [rbp+98h], rax
                mov     byte ptr [rbp+40h], 0
                and     dword ptr [rdi+50h], 0
                mov     [rdi+48h], rbp
                call    sub_1408A3D84
                mov     rax, [rbp+0B8h]
                lea     rcx, sub_140510280
                mov     rdx, rbp
                mov     [rax-10h], rcx
                mov     rcx, r14
                mov     [rax-8], rdi
                mov     byte ptr [rax-45h], 0E0h
                call    IofCallDriver
                mov     ebx, eax

loc_1408B42D4:                          ; CODE XREF: sub_1408B4140+102↑j
                mov     edx, 69706E50h
                mov     rcx, r14
                call    ObfDereferenceObjectWithTag
                mov     eax, ebx

loc_1408B42E3:                          ; CODE XREF: sub_1408B4140+73↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rbp, [rsp+28h+arg_8]
                mov     rdi, [rsp+28h+arg_10]
                add     rsp, 20h
                pop     r14
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4140   endp

algn_1408B42FA:                         ; DATA XREF: .pdata:000000014011DABC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B4300   proc near               ; CODE XREF: sub_1408B69DC+2B↓p
                                        ; DATA XREF: .pdata:000000014011DAC8↑o

var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 30h
                mov     rsi, rdx
                mov     rdi, rcx
                mov     edx, 28h ; '('
                mov     r8d, 20207050h
                lea     ecx, [rdx-27h]
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1408B4337
                mov     eax, 0C000009Ah
                jmp     short loc_1408B4380
; ---------------------------------------------------------------------------

loc_1408B4337:                          ; CODE XREF: sub_1408B4300+2E↑j
                xor     eax, eax
                mov     [rsp+38h+var_10], rbx
                and     [rsp+38h+var_18], rax
                lea     rdx, qword_140030710
                xorps   xmm0, xmm0
                xor     r8d, r8d
                movups  xmmword ptr [rbx], xmm0
                lea     r9d, [rax+28h]
                mov     rcx, rdi
                movups  xmmword ptr [rbx+10h], xmm0
                mov     [rbx+20h], rax
                call    sub_140764A64
                mov     edi, eax
                test    eax, eax
                jns     short loc_1408B437B
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag
                mov     eax, edi
                jmp     short loc_1408B4380
; ---------------------------------------------------------------------------

loc_1408B437B:                          ; CODE XREF: sub_1408B4300+6B↑j
                mov     [rsi], rbx
                xor     eax, eax

loc_1408B4380:                          ; CODE XREF: sub_1408B4300+35↑j
                                        ; sub_1408B4300+79↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     rsi, [rsp+38h+arg_8]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4300   endp

algn_1408B4391:                         ; DATA XREF: .pdata:000000014011DAC8↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408B4398   proc near               ; CODE XREF: sub_140745F30+F0CAE↑p
                                        ; DATA XREF: .pdata:000000014011DAD4↑o

var_88          = qword ptr -88h
var_78          = word ptr -78h
var_70          = qword ptr -70h
var_68          = dword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_30          = xmmword ptr -30h
var_20          = qword ptr -20h
var_18          = byte ptr -18h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_10], rbx
                mov     [rsp+arg_18], rbp
                push    rsi
                push    rdi
                push    r14
                sub     rsp, 90h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+0A8h+var_20], rax
                movups  xmm0, cs:xmmword_140033B40
                mov     r14d, 30h ; '0'
                mov     rsi, rdx
                mov     rdi, rcx
                mov     r8d, 20207050h
                mov     edx, r14d
                movdqu  [rsp+0A8h+var_30], xmm0
                lea     ecx, [r14-2Fh]
                call    ExAllocatePoolWithTag
                xor     ebp, ebp
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1408B43FB
                mov     eax, 0C000009Ah
                jmp     short loc_1408B446F
; ---------------------------------------------------------------------------

loc_1408B43FB:                          ; CODE XREF: sub_1408B4398+5A↑j
                xorps   xmm0, xmm0
                lea     rcx, [rsp+0A8h+var_78]
                movups  xmmword ptr [rax], xmm0
                xor     edx, edx
                movups  xmmword ptr [rax+10h], xmm0
                movups  xmmword ptr [rax+20h], xmm0
                lea     r8d, [rdx+48h]
                mov     [rax], r14w
                call    memset
                lea     rax, [rsp+0A8h+var_30]
                mov     [rsp+0A8h+var_78], 81Bh
                xor     r9d, r9d
                mov     [rsp+0A8h+var_70], rax
                mov     r8d, 0C00000BBh
                mov     [rsp+0A8h+var_68], r14d
                lea     rdx, [rsp+0A8h+var_78]
                mov     [rsp+0A8h+var_60], rbx
                mov     rcx, rdi
                mov     [rsp+0A8h+var_58], rbp
                mov     [rsp+0A8h+var_88], rbp
                call    sub_1406703BC
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B4463
                mov     [rsi], rbx
                jmp     short loc_1408B446D
; ---------------------------------------------------------------------------

loc_1408B4463:                          ; CODE XREF: sub_1408B4398+C4↑j
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408B446D:                          ; CODE XREF: sub_1408B4398+C9↑j
                mov     eax, edi

loc_1408B446F:                          ; CODE XREF: sub_1408B4398+61↑j
                mov     rcx, [rsp+0A8h+var_20]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+0A8h+var_18]
                mov     rbx, [r11+30h]
                mov     rbp, [r11+38h]
                mov     rsp, r11
                pop     r14
                pop     rdi
                pop     rsi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B4398
sub_1408B4398   endp

algn_1408B4498:                         ; DATA XREF: .pdata:000000014011DAD4↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B44A0   proc near               ; CODE XREF: sub_1408B9B84+54↓p
                                        ; sub_1408B9FB4+65↓p ...

var_68          = qword ptr -68h
var_58          = byte ptr -58h
var_57          = byte ptr -57h
arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 80h
                mov     rax, [rdx+138h]
                mov     rbx, rdx
                movzx   edi, cl
                mov     r8d, edi
                mov     r9, [rax+28h]
                sub     r8d, 4
                jz      short loc_1408B4539
                sub     r8d, 1
                jz      short loc_1408B452C
                cmp     r8d, 1
                jnz     short loc_1408B4546
                mov     eax, [r9+12Ch]
                sub     eax, 308h
                cmp     eax, r8d
                ja      short loc_1408B4546

loc_1408B44E4:                          ; CODE XREF: sub_1408B44A0:loc_1408B4544↓j
                xor     edx, edx
                lea     rcx, [rsp+88h+var_58]
                lea     r8d, [rdx+48h]
                call    memset
                and     [rsp+88h+var_68], 0
                lea     rdx, [rsp+88h+var_58]
                xor     r9d, r9d
                mov     [rsp+88h+var_58], 1Bh
                mov     r8d, 0C00000BBh
                mov     [rsp+88h+var_57], dil
                mov     rcx, rbx
                call    sub_1406703BC

loc_1408B451A:                          ; CODE XREF: sub_1408B44A0+AB↓j
                mov     rbx, [rsp+88h+arg_0]
                add     rsp, 80h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                align 4

loc_1408B452C:                          ; CODE XREF: sub_1408B44A0+2B↑j
                cmp     dword ptr [r9+12Ch], 308h
                jmp     short loc_1408B4544
; ---------------------------------------------------------------------------

loc_1408B4539:                          ; CODE XREF: sub_1408B44A0+25↑j
                cmp     dword ptr [r9+12Ch], 309h

loc_1408B4544:                          ; CODE XREF: sub_1408B44A0+97↑j
                jz      short loc_1408B44E4

loc_1408B4546:                          ; CODE XREF: sub_1408B44A0+31↑j
                                        ; sub_1408B44A0+42↑j
                mov     eax, 0C0000001h
                jmp     short loc_1408B451A
sub_1408B44A0   endp

; ---------------------------------------------------------------------------
byte_1408B454D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DAE0↑o

; =============== S U B R O U T I N E =======================================


sub_1408B4554   proc near               ; CODE XREF: IoRegisterPlugPlayNotification+1124B4↑p
                                        ; DATA XREF: .pdata:000000014011DAEC↑o

var_28          = qword ptr -28h
var_20          = qword ptr -20h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 30h
                cmp     cs:byte_140C43080, 0
                mov     rsi, r9
                mov     rdi, r8
                mov     rbp, rdx
                mov     r14, rcx
                jnz     short loc_1408B458B
                mov     edi, 0C00000BBh
                jmp     loc_1408B465A
; ---------------------------------------------------------------------------

loc_1408B458B:                          ; CODE XREF: sub_1408B4554+2B↑j
                cmp     cs:byte_140C43070, 0
                jz      short loc_1408B459E
                mov     edi, 0C00002FEh
                jmp     loc_1408B465A
; ---------------------------------------------------------------------------

loc_1408B459E:                          ; CODE XREF: sub_1408B4554+3E↑j
                mov     r15d, 58h ; 'X'
                mov     r8d, 61706E50h
                mov     edx, r15d
                lea     ecx, [r15-57h]
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1408B45C8
                mov     edi, 0C000009Ah
                jmp     loc_1408B465A
; ---------------------------------------------------------------------------

loc_1408B45C8:                          ; CODE XREF: sub_1408B4554+68↑j
                mov     r8, r15
                xor     edx, edx
                mov     rcx, rbx
                call    memset
                lea     r15, dword_140C43020
                mov     r9, rdi
                mov     [rsp+48h+var_20], r15
                mov     r8, rbp
                mov     edx, 4
                mov     [rsp+48h+var_28], r14
                mov     rcx, rbx
                call    sub_1407234E4
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B464D
                mov     rcx, rbx
                call    sub_1407233E4
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B464D
                mov     rcx, r15
                call    ExAcquireFastMutex
                mov     rax, cs:qword_140C43068
                lea     rcx, qword_140C43060
                cmp     [rax], rcx
                jz      short loc_1408B462F
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408B462F:                          ; CODE XREF: sub_1408B4554+D2↑j
                mov     [rbx], rcx
                mov     rcx, r15
                mov     [rbx+8], rax
                mov     [rax], rbx
                mov     cs:qword_140C43068, rbx
                call    KeReleaseGuardedMutex
                mov     [rsi], rbx
                jmp     short loc_1408B465A
; ---------------------------------------------------------------------------

loc_1408B464D:                          ; CODE XREF: sub_1408B4554+A9↑j
                                        ; sub_1408B4554+B7↑j
                mov     edx, 61706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408B465A:                          ; CODE XREF: sub_1408B4554+32↑j
                                        ; sub_1408B4554+45↑j ...
                mov     rbx, [rsp+48h+arg_0]
                mov     eax, edi
                mov     rbp, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_10]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4554   endp

algn_1408B4676:                         ; DATA XREF: .pdata:000000014011DAEC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B4680   proc near               ; DATA XREF: .pdata:000000014011DAF8↑o
                                        ; sub_140A93550+CC↓o
                cmp     rdx, 14h
                ja      short locret_1408B46F0
                push    rbx
                sub     rsp, 20h
                xor     eax, eax
                mov     rbx, r8
                test    edx, edx
                jz      short loc_1408B46D1
                sub     edx, 1
                jz      short loc_1408B46B5
                sub     edx, 0Eh
                jz      short loc_1408B46AC
                cmp     edx, 5
                jnz     short loc_1408B46EB
                lea     rcx, qword_1400306C0
                jmp     short loc_1408B46CA
; ---------------------------------------------------------------------------

loc_1408B46AC:                          ; CODE XREF: sub_1408B4680+1C↑j
                lea     rcx, qword_1400306D0
                jmp     short loc_1408B46CA
; ---------------------------------------------------------------------------

loc_1408B46B5:                          ; CODE XREF: sub_1408B4680+17↑j
                cmp     cs:byte_140C43070, al
                jz      short loc_1408B46EB
                mov     cs:byte_140C43070, al
                lea     rcx, qword_1400306B0

loc_1408B46CA:                          ; CODE XREF: sub_1408B4680+2A↑j
                                        ; sub_1408B4680+33↑j
                call    sub_1408B46F8
                jmp     short loc_1408B46EB
; ---------------------------------------------------------------------------

loc_1408B46D1:                          ; CODE XREF: sub_1408B4680+12↑j
                cmp     [r8], eax
                jl      short loc_1408B46EB
                lea     rcx, qword_140030750
                call    sub_1408B46F8
                mov     [rbx], eax
                mov     cs:byte_140C43070, 1

loc_1408B46EB:                          ; CODE XREF: sub_1408B4680+21↑j
                                        ; sub_1408B4680+3B↑j ...
                add     rsp, 20h
                pop     rbx

locret_1408B46F0:                       ; CODE XREF: sub_1408B4680+4↑j
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4680   endp

algn_1408B46F2:                         ; DATA XREF: .pdata:000000014011DAF8↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408B46F8   proc near               ; CODE XREF: sub_1408B4680:loc_1408B46CA↑p
                                        ; sub_1408B4680+5D↑p
                                        ; DATA XREF: ...

var_48          = dword ptr -48h
var_40          = xmmword ptr -40h
var_30          = dword ptr -30h
var_28          = qword ptr -28h
var_18          = byte ptr -18h
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r12
                push    r15
                sub     rsp, 50h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+68h+var_28], rax
                mov     rdi, rcx
                xorps   xmm0, xmm0
                xor     eax, eax
                lea     rcx, dword_140C43020
                xor     esi, esi
                mov     [rsp+68h+var_30], eax
                movups  [rsp+68h+var_40], xmm0
                mov     [rsp+68h+var_48], esi
                call    ExAcquireFastMutex
                mov     rbx, cs:qword_140C43060
                lea     r12, qword_140C43060
                cmp     rbx, r12
                jz      loc_1408B48A8
                lea     r15d, [rsi+1]

loc_1408B4758:                          ; CODE XREF: sub_1408B46F8+1AA↓j
                add     [rbx+38h], r15w
                lea     rcx, dword_140C43020
                mov     rsi, rbx
                call    KeReleaseGuardedMutex
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     rcx, [rbx+48h]
                mov     dl, r15b
                call    ExAcquireResourceExclusiveLite
                cmp     byte ptr [rbx+3Ah], 0
                jnz     loc_1408B4848
                mov     rax, [rdi]
                sub     rax, cs:qword_1400306B0
                jnz     short loc_1408B47A9
                mov     rax, [rdi+8]
                sub     rax, cs:qword_1400306B8

loc_1408B47A9:                          ; CODE XREF: sub_1408B46F8+A4↑j
                test    rax, rax
                jnz     short loc_1408B47B7
                cmp     [rbx+50h], al
                jz      loc_1408B4848

loc_1408B47B7:                          ; CODE XREF: sub_1408B46F8+B4↑j
                mov     rax, [rdi]
                sub     rax, cs:qword_140030750
                jnz     short loc_1408B47CE
                mov     rax, [rdi+8]
                sub     rax, cs:qword_140030758

loc_1408B47CE:                          ; CODE XREF: sub_1408B46F8+C9↑j
                test    rax, rax
                jnz     short loc_1408B47D8
                cmp     [rbx+50h], al
                jnz     short loc_1408B4848

loc_1408B47D8:                          ; CODE XREF: sub_1408B46F8+D9↑j
                movups  xmm0, xmmword ptr [rdi]
                lea     r8, [rsp+68h+var_48]
                mov     dword ptr [rsp+68h+var_40], 140001h
                lea     rdx, [rsp+68h+var_40]
                mov     rcx, rbx
                movdqu  [rsp+68h+var_40+4], xmm0
                call    sub_14069C80C
                test    eax, eax
                js      short loc_1408B4842
                mov     rax, [rdi]
                sub     rax, cs:qword_140030750
                jnz     short loc_1408B4816
                mov     rax, [rdi+8]
                sub     rax, cs:qword_140030758

loc_1408B4816:                          ; CODE XREF: sub_1408B46F8+111↑j
                test    rax, rax
                jnz     short loc_1408B4821
                mov     [rbx+50h], r15b
                jmp     short loc_1408B484D
; ---------------------------------------------------------------------------

loc_1408B4821:                          ; CODE XREF: sub_1408B46F8+121↑j
                mov     rax, [rdi]
                sub     rax, cs:qword_1400306B0
                jnz     short loc_1408B4838
                mov     rax, [rdi+8]
                sub     rax, cs:qword_1400306B8

loc_1408B4838:                          ; CODE XREF: sub_1408B46F8+133↑j
                test    rax, rax
                jnz     short loc_1408B484D
                mov     [rbx+50h], al
                jmp     short loc_1408B484D
; ---------------------------------------------------------------------------

loc_1408B4842:                          ; CODE XREF: sub_1408B46F8+105↑j
                mov     [rsp+68h+var_48], eax
                jmp     short loc_1408B484D
; ---------------------------------------------------------------------------

loc_1408B4848:                          ; CODE XREF: sub_1408B46F8+94↑j
                                        ; sub_1408B46F8+B9↑j ...
                and     [rsp+68h+var_48], 0

loc_1408B484D:                          ; CODE XREF: sub_1408B46F8+127↑j
                                        ; sub_1408B46F8+143↑j ...
                mov     rcx, [rbx+48h]
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                lea     rcx, dword_140C43020
                call    ExAcquireFastMutex
                mov     rbx, [rbx]
                mov     rcx, rsi
                call    sub_14069C948
                mov     esi, [rsp+68h+var_48]
                test    esi, esi
                jns     short loc_1408B489F
                mov     rax, [rdi]
                sub     rax, cs:qword_140030750
                jnz     short loc_1408B489A
                mov     rax, [rdi+8]
                sub     rax, cs:qword_140030758

loc_1408B489A:                          ; CODE XREF: sub_1408B46F8+195↑j
                test    rax, rax
                jz      short loc_1408B48A8

loc_1408B489F:                          ; CODE XREF: sub_1408B46F8+189↑j
                cmp     rbx, r12
                jnz     loc_1408B4758

loc_1408B48A8:                          ; CODE XREF: sub_1408B46F8+56↑j
                                        ; sub_1408B46F8+1A5↑j
                lea     rcx, dword_140C43020
                call    KeReleaseGuardedMutex
                mov     eax, esi
                mov     rcx, [rsp+68h+var_28]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+68h+var_18]
                mov     rbx, [r11+28h]
                mov     rsi, [r11+30h]
                mov     rsp, r11
                pop     r15
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B46F8
sub_1408B46F8   endp

algn_1408B48DA:                         ; DATA XREF: .pdata:000000014011DB04↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B48E0   proc near               ; CODE XREF: sub_1408A3E68+AA↑p
                                        ; DATA XREF: .pdata:000000014011DB10↑o

var_60          = qword ptr -60h
var_50          = xmmword ptr -50h
var_40          = qword ptr -40h
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_28          = qword ptr -28h
var_s0          = byte ptr  0
arg_0           = dword ptr  20h
arg_8           = qword ptr  28h
arg_10          = qword ptr  30h

                mov     [rsp-18h+arg_8], rbx
                mov     [rsp-18h+arg_10], rsi
                push    rbp
                push    rdi
                push    r14
                mov     rbp, rsp
                sub     rsp, 80h
                xor     edx, edx
                mov     rbx, rcx
                lea     rcx, [rbp+var_40]
                lea     r8d, [rdx+40h]
                call    memset
                and     [rbp+arg_0], 0
                xorps   xmm0, xmm0
                movups  [rbp+var_50], xmm0
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                and     [rsp+80h+var_60], 0
                lea     rcx, unk_140C44AA0
                xor     r9d, r9d
                xor     r8d, r8d
                lea     edi, [r9+4]
                mov     edx, edi
                call    KeWaitForSingleObject
                mov     r14d, [rbx+18Ch]
                bt      r14d, 0Ah
                jnb     loc_1408B4A8F
                mov     edx, 100h
                mov     rcx, rbx
                and     r14d, 100h
                call    sub_14073832C
                test    dword ptr [rbx+18Ch], 800h
                jz      loc_1408B4A61
                mov     rax, [rbx+20h]
                lea     r8, [rbp+arg_0]
                and     [rbp+var_28], 0
                lea     rdx, [rbp+var_s0]
                or      [rbp+var_38], 280h
                lea     rcx, [rbp+var_40]
                mov     [rbp+var_40], rax
                mov     [rbp+var_34], edi
                call    sub_14074C60C
                mov     esi, [rbp+arg_0]
                mov     edi, eax
                test    esi, esi
                jz      loc_1408B4A73
                cmp     qword ptr [rbx+1A0h], 0
                jz      short loc_1408B49C0
                mov     rcx, rbx
                call    sub_14074D4D4

loc_1408B49C0:                          ; CODE XREF: sub_1408B48E0+D6↑j
                lea     r8, [rbp+var_50]
                mov     edx, esi
                lea     rcx, [rbp+var_40]
                call    sub_14074EC24
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B4A22
                lea     rcx, [rbp+var_50]
                call    sub_14074EB80
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B4A22
                mov     edx, 0C00h
                mov     rcx, rbx
                call    sub_14073832C
                mov     r8b, 1
                lea     rdx, [rbp+var_s0]
                lea     rcx, [rbp+var_40]
                call    sub_14074BA8C
                mov     edx, 1
                mov     rcx, rbx
                mov     r8d, edx
                call    sub_14073D9C8
                mov     edi, eax
                test    eax, eax
                jns     short loc_1408B4A52
                mov     r9d, eax
                mov     r8d, 0Ch
                jmp     short loc_1408B4A48
; ---------------------------------------------------------------------------

loc_1408B4A22:                          ; CODE XREF: sub_1408B48E0+F3↑j
                                        ; sub_1408B48E0+102↑j
                mov     rcx, rbx
                call    sub_1408B4AC8
                mov     esi, eax
                test    eax, eax
                jns     short loc_1408B4A52
                mov     rcx, [rbx+30h]
                mov     r8d, 4000h
                call    sub_1408A3884
                mov     r9d, esi
                mov     r8d, 0Eh

loc_1408B4A48:                          ; CODE XREF: sub_1408B48E0+140↑j
                xor     edx, edx
                mov     rcx, rbx
                call    sub_140745DFC

loc_1408B4A52:                          ; CODE XREF: sub_1408B48E0+135↑j
                                        ; sub_1408B48E0+14E↑j
                lea     rdx, [rbp+var_s0]
                lea     rcx, [rbp+var_40]
                call    sub_14074F550
                jmp     short loc_1408B4A73
; ---------------------------------------------------------------------------

loc_1408B4A61:                          ; CODE XREF: sub_1408B48E0+93↑j
                xor     r9d, r9d
                xor     r8d, r8d
                xor     edx, edx
                mov     rcx, rbx
                call    sub_1408BA044
                mov     edi, eax

loc_1408B4A73:                          ; CODE XREF: sub_1408B48E0+C8↑j
                                        ; sub_1408B48E0+17F↑j
                test    edi, edi
                jns     short loc_1408B4A8F
                mov     edx, 100h
                mov     rcx, rbx
                call    sub_14073832C
                mov     edx, r14d
                mov     rcx, rbx
                call    sub_140736ED4

loc_1408B4A8F:                          ; CODE XREF: sub_1408B48E0+6F↑j
                                        ; sub_1408B48E0+195↑j
                xor     r9d, r9d
                lea     rcx, unk_140C44AA0
                xor     edx, edx
                lea     r8d, [r9+1]
                call    KeReleaseSemaphore
                call    KeLeaveCriticalRegion
                lea     r11, [rsp+80h+var_s0]
                mov     rbx, [r11+28h]
                mov     rsi, [r11+30h]
                mov     rsp, r11
                pop     r14
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B48E0   endp

algn_1408B4AC2:                         ; DATA XREF: .pdata:000000014011DB10↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B4AC8   proc near               ; CODE XREF: sub_1408B48E0+145↑p
                                        ; DATA XREF: .pdata:000000014011DB1C↑o

var_50          = xmmword ptr -50h
var_40          = qword ptr -40h
var_34          = dword ptr -34h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_s0          = byte ptr  0
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h
arg_10          = qword ptr  20h

                mov     [rsp-8+arg_0], rbx
                mov     [rsp-8+arg_8], rsi
                mov     [rsp-8+arg_10], rdi
                push    rbp
                mov     rbp, rsp
                sub     rsp, 70h
                mov     rdx, [rcx+1A0h]
                xorps   xmm0, xmm0
                mov     rdi, rcx
                movups  [rbp+var_50], xmm0
                test    rdx, rdx
                jnz     short loc_1408B4AFC
                xor     eax, eax
                jmp     loc_1408B4BF7
; ---------------------------------------------------------------------------

loc_1408B4AFC:                          ; CODE XREF: sub_1408B4AC8+2B↑j
                xor     r8d, r8d
                call    sub_1407B5920
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1408B4B16
                mov     eax, 0C000009Ah
                jmp     loc_1408B4BF7
; ---------------------------------------------------------------------------

loc_1408B4B16:                          ; CODE XREF: sub_1408B4AC8+42↑j
                xor     edx, edx
                lea     rcx, [rbp+var_40]
                lea     r8d, [rdx+40h]
                call    memset
                mov     rax, [rdi+20h]
                lea     rdx, [rbp+var_20]
                lea     rcx, [rbp+var_40]
                mov     [rbp+var_40], rax
                mov     [rbp+var_28], rbx
                mov     [rbp+var_34], 4
                call    sub_14074DD94
                mov     esi, eax
                test    eax, eax
                js      loc_1408B4BEA
                mov     rbx, [rbp+var_20]
                test    rbx, rbx
                jz      loc_1408B4BEA
                mov     rcx, rbx
                call    sub_14074D43C
                cmp     qword ptr [rbx+18h], 0
                lea     rcx, [rbp+var_40]
                jnz     short loc_1408B4B7F
                lea     rdx, [rbp+var_s0]
                call    sub_14074F550
                mov     eax, 0C0000182h
                jmp     short loc_1408B4BF7
; ---------------------------------------------------------------------------

loc_1408B4B7F:                          ; CODE XREF: sub_1408B4AC8+A5↑j
                lea     r8, [rbp+var_50]
                mov     edx, 1
                call    sub_14074EC24
                lea     rdx, [rbp+var_s0]
                mov     esi, eax
                lea     rcx, [rbp+var_40]
                call    sub_14074F550
                test    esi, esi
                js      short loc_1408B4BAB
                lea     rcx, [rbp+var_50]
                call    sub_14074EB80
                mov     esi, eax

loc_1408B4BAB:                          ; CODE XREF: sub_1408B4AC8+D6↑j
                mov     rcx, [rbp+var_18]
                test    rcx, rcx
                jz      short loc_1408B4BBB
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408B4BBB:                          ; CODE XREF: sub_1408B4AC8+EA↑j
                mov     rcx, [rbp+var_10]
                test    rcx, rcx
                jz      short loc_1408B4BCB
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408B4BCB:                          ; CODE XREF: sub_1408B4AC8+FA↑j
                mov     rbx, [rdi+1A0h]
                mov     rcx, rbx
                call    sub_14074CF5C
                mov     r8d, eax
                mov     rdx, rbx
                mov     rcx, rdi
                call    sub_14074BB8C
                jmp     short loc_1408B4BF5
; ---------------------------------------------------------------------------

loc_1408B4BEA:                          ; CODE XREF: sub_1408B4AC8+81↑j
                                        ; sub_1408B4AC8+8E↑j
                mov     rcx, [rbp+var_28]
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408B4BF5:                          ; CODE XREF: sub_1408B4AC8+120↑j
                mov     eax, esi

loc_1408B4BF7:                          ; CODE XREF: sub_1408B4AC8+2F↑j
                                        ; sub_1408B4AC8+49↑j ...
                lea     r11, [rsp+70h+var_s0]
                mov     rbx, [r11+10h]
                mov     rsi, [r11+18h]
                mov     rdi, [r11+20h]
                mov     rsp, r11
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4AC8   endp

byte_1408B4C0E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DB1C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=4Fh

sub_1408B4C14   proc near               ; CODE XREF: sub_1406FFFF0+127800↑p
                                        ; DATA XREF: .pdata:000000014011DB28↑o

var_C0          = xmmword ptr -0C0h
var_B0          = xmmword ptr -0B0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_80          = byte ptr -80h
var_7C          = dword ptr -7Ch
var_70          = xmmword ptr -70h
var_60          = qword ptr -60h
var_58          = dword ptr -58h
var_54          = dword ptr -54h
var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = qword ptr -40h
arg_20          = qword ptr  30h

; __unwind { // __GSHandlerCheck
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r14
                push    r15
                lea     rbp, [rsp-1Fh]
                sub     rsp, 0B0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+4Fh+var_40], rax
                mov     r14, [rbp+4Fh+arg_20]
                xor     edx, edx
                mov     r15d, r8d
                mov     rsi, rcx
                lea     rcx, [rbp+4Fh+var_80]
                mov     rdi, r9
                lea     r8d, [rdx+40h]
                call    memset
                xor     ebx, ebx
                mov     dword ptr [rbp+4Fh+var_C0+8], ebx
                mov     [r14], ebx
                lea     eax, [rbx+38h]
                mov     dword ptr [rbp+4Fh+var_C0], eax
                cmp     r15d, 4
                jnb     short loc_1408B4C76
                mov     [r14], eax
                mov     eax, 80000005h
                jmp     loc_1408B4E4A
; ---------------------------------------------------------------------------

loc_1408B4C76:                          ; CODE XREF: sub_1408B4C14+53↑j
                mov     rcx, [rsi+20h]
                lea     rdx, [rbp+4Fh+var_80]
                call    sub_14073D650
                test    eax, eax
                jns     short loc_1408B4C91
                mov     eax, 0C000000Eh
                jmp     loc_1408B4E4A
; ---------------------------------------------------------------------------

loc_1408B4C91:                          ; CODE XREF: sub_1408B4C14+71↑j
                mov     rcx, rsi
                call    sub_1402B4798
                mov     r12d, 1
                test    eax, eax
                jz      short loc_1408B4CBE
                mov     rax, [rsi+20h]
                mov     rcx, [rax+138h]
                call    sub_14056F7AC
                test    eax, eax
                cmovz   eax, r12d
                mov     dword ptr [rbp+4Fh+var_C0+4], eax
                jmp     short loc_1408B4CC5
; ---------------------------------------------------------------------------

loc_1408B4CBE:                          ; CODE XREF: sub_1408B4C14+8D↑j
                mov     dword ptr [rbp+4Fh+var_C0+4], 4

loc_1408B4CC5:                          ; CODE XREF: sub_1408B4C14+A8↑j
                mov     eax, [rbp+4Fh+var_7C]
                mov     ecx, 9
                test    r12b, al
                lea     edx, [rcx+2]
                cmovnz  ecx, edx
                lea     r9d, [rdx-9]
                mov     dword ptr [rbp+4Fh+var_C0+8], ecx
                test    r9b, al
                jz      short loc_1408B4CE8
                or      ecx, 4
                mov     dword ptr [rbp+4Fh+var_C0+8], ecx

loc_1408B4CE8:                          ; CODE XREF: sub_1408B4C14+CC↑j
                bt      eax, 0Ah
                jnb     short loc_1408B4CF4
                or      ecx, 10h
                mov     dword ptr [rbp+4Fh+var_C0+8], ecx

loc_1408B4CF4:                          ; CODE XREF: sub_1408B4C14+D8↑j
                bt      eax, 0Bh
                jnb     short loc_1408B4D00
                or      ecx, 20h
                mov     dword ptr [rbp+4Fh+var_C0+8], ecx

loc_1408B4D00:                          ; CODE XREF: sub_1408B4C14+E4↑j
                bt      eax, 0Ch
                jnb     short loc_1408B4D0C
                or      ecx, 40h
                mov     dword ptr [rbp+4Fh+var_C0+8], ecx

loc_1408B4D0C:                          ; CODE XREF: sub_1408B4C14+F0↑j
                mov     r11d, 80h
                bt      eax, 0Dh
                jnb     short loc_1408B4D1E
                or      ecx, r11d
                mov     dword ptr [rbp+4Fh+var_C0+8], ecx

loc_1408B4D1E:                          ; CODE XREF: sub_1408B4C14+102↑j
                bt      eax, 10h
                jnb     short loc_1408B4D2B
                bts     ecx, 8
                mov     dword ptr [rbp+4Fh+var_C0+8], ecx

loc_1408B4D2B:                          ; CODE XREF: sub_1408B4C14+10E↑j
                mov     eax, [rbp+4Fh+var_58]
                mov     r10, r9
                movaps  xmm0, [rbp+4Fh+var_70]
                movsd   xmm1, [rbp+4Fh+var_60]
                mov     edx, [rbp+4Fh+var_50]
                movsxd  r8, [rbp+4Fh+var_54]
                mov     dword ptr [rbp+4Fh+var_90], eax
                mov     eax, [rbp+4Fh+var_4C]
                mov     dword ptr [rbp+4Fh+var_C0+0Ch], eax
                mov     eax, [rbp+4Fh+var_48]
                mov     dword ptr [rbp+4Fh+var_B0], eax
                mov     eax, [rbp+4Fh+var_44]
                mov     dword ptr [rbp+4Fh+var_B0+4], eax
                movups  [rbp+4Fh+var_B0+8], xmm0
                movsd   [rbp+4Fh+var_98], xmm1

loc_1408B4D5F:                          ; CODE XREF: sub_1408B4C14+185↓j
                sub     edx, r12d
                jz      short loc_1408B4D82
                sub     edx, r12d
                jz      short loc_1408B4D7D
                sub     edx, r12d
                jz      short loc_1408B4D78
                cmp     edx, r12d
                jnz     short loc_1408B4D88
                or      ecx, r11d
                jmp     short loc_1408B4D85
; ---------------------------------------------------------------------------

loc_1408B4D78:                          ; CODE XREF: sub_1408B4C14+158↑j
                or      ecx, 44h
                jmp     short loc_1408B4D85
; ---------------------------------------------------------------------------

loc_1408B4D7D:                          ; CODE XREF: sub_1408B4C14+153↑j
                or      ecx, 22h
                jmp     short loc_1408B4D85
; ---------------------------------------------------------------------------

loc_1408B4D82:                          ; CODE XREF: sub_1408B4C14+14E↑j
                or      ecx, 10h

loc_1408B4D85:                          ; CODE XREF: sub_1408B4C14+162↑j
                                        ; sub_1408B4C14+167↑j ...
                mov     dword ptr [rbp+4Fh+var_C0+8], ecx

loc_1408B4D88:                          ; CODE XREF: sub_1408B4C14+15D↑j
                test    r8d, r8d
                jz      short loc_1408B4D94
                mov     edx, dword ptr [rbp+r8*4+4Fh+var_70]
                jmp     short loc_1408B4D96
; ---------------------------------------------------------------------------

loc_1408B4D94:                          ; CODE XREF: sub_1408B4C14+177↑j
                mov     edx, ebx

loc_1408B4D96:                          ; CODE XREF: sub_1408B4C14+17E↑j
                sub     r10, r12
                jnz     short loc_1408B4D5F
                test    r11b, cl
                jz      short loc_1408B4DA6
                lea     eax, [r10+4]
                jmp     short loc_1408B4DB0
; ---------------------------------------------------------------------------

loc_1408B4DA6:                          ; CODE XREF: sub_1408B4C14+18A↑j
                test    cl, 40h
                jz      short loc_1408B4DB5
                mov     eax, 3

loc_1408B4DB0:                          ; CODE XREF: sub_1408B4C14+190↑j
                mov     r9, rax
                jmp     short loc_1408B4DD1
; ---------------------------------------------------------------------------

loc_1408B4DB5:                          ; CODE XREF: sub_1408B4C14+195↑j
                test    cl, 20h
                jz      short loc_1408B4DBF
                mov     eax, r9d
                jmp     short loc_1408B4DD1
; ---------------------------------------------------------------------------

loc_1408B4DBF:                          ; CODE XREF: sub_1408B4C14+1A4↑j
                test    cl, 10h
                jz      short loc_1408B4DCC
                mov     eax, r12d
                mov     r9, r12
                jmp     short loc_1408B4DD1
; ---------------------------------------------------------------------------

loc_1408B4DCC:                          ; CODE XREF: sub_1408B4C14+1AE↑j
                mov     eax, ebx
                mov     r9, rbx

loc_1408B4DD1:                          ; CODE XREF: sub_1408B4C14+19F↑j
                                        ; sub_1408B4C14+1A9↑j ...
                test    r8d, r8d
                jnz     short loc_1408B4DF6
                test    eax, eax
                jz      short loc_1408B4DF6
                movsxd  rax, dword ptr [rbp+4Fh+var_70+8]
                mov     r8d, 4

loc_1408B4DE4:                          ; CODE XREF: sub_1408B4C14+1E0↓j
                cmp     dword ptr [rbp+4Fh+var_70+8], ebx
                jz      short loc_1408B4DEE
                cmp     rax, r9
                jle     short loc_1408B4DF6

loc_1408B4DEE:                          ; CODE XREF: sub_1408B4C14+1D3↑j
                sub     r8d, r12d
                cmp     r8d, r12d
                jge     short loc_1408B4DE4

loc_1408B4DF6:                          ; CODE XREF: sub_1408B4C14+1C0↑j
                                        ; sub_1408B4C14+1C4↑j ...
                mov     dword ptr [rbp+4Fh+var_90+4], r8d
                cmp     r15d, 38h ; '8'
                jnb     short loc_1408B4E1B
                test    rdi, rdi
                jz      short loc_1408B4E14
                mov     r8, r15
                lea     rdx, [rbp+4Fh+var_C0]
                mov     rcx, rdi
                call    memmove

loc_1408B4E14:                          ; CODE XREF: sub_1408B4C14+1EF↑j
                mov     ebx, 80000005h
                jmp     short loc_1408B4E41
; ---------------------------------------------------------------------------

loc_1408B4E1B:                          ; CODE XREF: sub_1408B4C14+1EA↑j
                test    rdi, rdi
                jz      short loc_1408B4E41
                movups  xmm0, [rbp+4Fh+var_C0]
                movups  xmm1, [rbp+4Fh+var_B0]
                movups  xmmword ptr [rdi], xmm0
                movups  xmm0, xmmword ptr [rbp-51h]
                movups  xmmword ptr [rdi+10h], xmm1
                movsd   xmm1, [rbp+4Fh+var_90]
                movups  xmmword ptr [rdi+20h], xmm0
                movsd   qword ptr [rdi+30h], xmm1

loc_1408B4E41:                          ; CODE XREF: sub_1408B4C14+205↑j
                                        ; sub_1408B4C14+20A↑j
                mov     dword ptr [r14], 38h ; '8'
                mov     eax, ebx

loc_1408B4E4A:                          ; CODE XREF: sub_1408B4C14+5D↑j
                                        ; sub_1408B4C14+78↑j
                mov     rcx, [rbp+4Fh+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0B0h
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B4C14
sub_1408B4C14   endp

algn_1408B4E69:                         ; DATA XREF: .pdata:000000014011DB28↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B4E70   proc near               ; DATA XREF: .rdata:0000000140001F28↑o
                                        ; .pdata:000000014011DB34↑o

var_30          = dword ptr -30h
var_28          = dword ptr -28h
var_20          = qword ptr -20h
var_18          = xmmword ptr -18h
var_s0          = byte ptr  0
arg_0           = qword ptr  20h
arg_8           = dword ptr  28h
arg_10          = qword ptr  30h
arg_18          = qword ptr  38h

                mov     [rsp-18h+arg_0], rbx
                mov     [rsp-18h+arg_10], rsi
                mov     [rsp-18h+arg_18], rdi
                push    rbp
                push    r13
                push    r14
                mov     rbp, rsp
                sub     rsp, 50h
                movzx   ecx, word ptr [rdx]
                mov     r13d, 1
                movzx   eax, cx
                mov     rbx, rdx
                sub     ax, r13w
                xorps   xmm0, xmm0
                movups  [rbp+var_18], xmm0
                mov     edx, 18Fh
                mov     word ptr [rbp+var_18+2], cx
                mov     word ptr [rbp+var_18], cx
                mov     sil, r9b
                cmp     ax, dx
                ja      loc_1408B4FA6
                test    r13b, cl
                jnz     loc_1408B4FA6
                and     [rbp+var_20], 0
                lea     r14, [rbx+18h]
                and     qword ptr [rbp+var_18+8], 0
                mov     eax, [rbx+20h]
                mov     r9, [r14]
                test    eax, eax
                jz      short loc_1408B4EE9
                test    r9, r9
                jz      short loc_1408B4EE9
                lea     edx, [rax+rax]
                jmp     short loc_1408B4EEF
; ---------------------------------------------------------------------------

loc_1408B4EE9:                          ; CODE XREF: sub_1408B4E70+6D↑j
                                        ; sub_1408B4E70+72↑j
                and     dword ptr [rbx+20h], 0
                xor     edx, edx

loc_1408B4EEF:                          ; CODE XREF: sub_1408B4E70+77↑j
                mov     r8b, sil
                mov     [rbp+arg_8], edx
                lea     rcx, [rbp+var_20]
                call    sub_1402B4844
                mov     edi, eax
                test    eax, eax
                js      loc_1408B4F8A
                movzx   r8d, word ptr [rbp+var_18]
                lea     rcx, [rbp+var_18+8]
                mov     rdx, [rbx+8]
                mov     [rsp+50h+var_28], r13d
                mov     r13d, 2
                mov     r9d, r13d
                mov     byte ptr [rsp+50h+var_30], sil
                call    sub_1406CA210
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B4F8A
                mov     eax, [rbx+10h]
                lea     rdx, [rbx+14h]
                and     [rsp+50h+var_28], 0
                lea     r9, [rbp+arg_8]
                mov     r8, [rbp+var_20]
                lea     rcx, [rbp+var_18]
                mov     [rsp+50h+var_30], eax
                call    sub_14072EAB8
                cmp     [rbp+var_20], 0
                mov     edi, eax
                jz      short loc_1408B4F82
                mov     r8d, [rbx+20h]
                mov     r9d, r13d
                and     [rsp+50h+var_28], 0
                add     r8d, r8d
                mov     rdx, [rbp+var_20]
                mov     rcx, r14
                mov     byte ptr [rsp+50h+var_30], sil
                call    sub_1406CA210
                test    eax, eax
                cmovs   edi, eax

loc_1408B4F82:                          ; CODE XREF: sub_1408B4E70+EB↑j
                mov     eax, [rbp+arg_8]
                shr     eax, 1
                mov     [rbx+20h], eax

loc_1408B4F8A:                          ; CODE XREF: sub_1408B4E70+92↑j
                                        ; sub_1408B4E70+C1↑j
                mov     rdx, qword ptr [rbp+var_18+8]
                mov     cl, sil
                call    sub_1403109F0
                mov     rdx, [rbp+var_20]
                mov     cl, sil
                call    sub_1403109F0
                mov     eax, edi
                jmp     short loc_1408B4FAB
; ---------------------------------------------------------------------------

loc_1408B4FA6:                          ; CODE XREF: sub_1408B4E70+48↑j
                                        ; sub_1408B4E70+51↑j
                mov     eax, 0C000000Dh

loc_1408B4FAB:                          ; CODE XREF: sub_1408B4E70+134↑j
                lea     r11, [rsp+50h+var_s0]
                mov     rbx, [r11+20h]
                mov     rsi, [r11+30h]
                mov     rdi, [r11+38h]
                mov     rsp, r11
                pop     r14
                pop     r13
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4E70   endp

algn_1408B4FC6:                         ; DATA XREF: .pdata:000000014011DB34↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B4FD0   proc near               ; DATA XREF: .rdata:0000000140002048↑o
                                        ; .pdata:000000014011DB40↑o

var_30          = dword ptr -30h
var_28          = dword ptr -28h
var_20          = qword ptr -20h
var_18          = xmmword ptr -18h
var_s0          = byte ptr  0
arg_0           = qword ptr  30h
arg_8           = qword ptr  38h
arg_10          = qword ptr  40h

                mov     [rsp-28h+arg_0], rbx
                mov     [rsp-28h+arg_10], rsi
                push    rbp
                push    rdi
                push    r12
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 50h
                lea     r12, [rdx+20h]
                xorps   xmm0, xmm0
                cmp     qword ptr [r12], 0
                mov     sil, r9b
                mov     rbx, rdx
                movups  [rbp+var_18], xmm0
                jz      loc_1408B51CB
                cmp     dword ptr [rdx+28h], 20h ; ' '
                jb      loc_1408B51CB
                mov     rdx, [rdx+10h]
                test    rdx, rdx
                jz      loc_1408B51C4
                mov     r8d, [rbx+18h]
                cmp     r8d, 28h ; '('
                jb      loc_1408B51C4
                mov     r10d, 1
                cmp     [rdx], r10d
                jnz     loc_1408B51C4
                cmp     [rdx+10h], r10d
                jnz     loc_1408B51C4
                movzx   ecx, word ptr [rbx]
                mov     r9d, 18Fh
                movzx   eax, cx
                mov     word ptr [rbp+var_18+2], cx
                sub     ax, r10w
                mov     word ptr [rbp+var_18], cx
                cmp     ax, r9w
                ja      loc_1408B51C4
                test    r10b, cl
                jnz     loc_1408B51C4
                and     [rbp+var_20], 0
                lea     rcx, [rbp+var_20]
                mov     [rsp+50h+var_28], r10d
                xor     r15d, r15d
                xor     r14d, r14d
                mov     [rbp+arg_8], r15
                and     qword ptr [rbp+var_18+8], r14
                mov     r9d, r10d
                mov     byte ptr [rsp+50h+var_30], sil
                call    sub_1406CA210
                mov     edi, eax
                test    eax, eax
                js      loc_1408B5188
                mov     r9, [r12]
                lea     rcx, [rbp+arg_8]
                mov     edx, [rbx+28h]
                mov     r8b, sil
                call    sub_1402B4844
                mov     edi, eax
                test    eax, eax
                js      loc_1408B5184
                movzx   r8d, word ptr [rbx]
                lea     r15d, [r14+1]
                mov     rdx, [rbx+8]
                lea     r9d, [r14+2]
                mov     [rsp+50h+var_28], r15d
                lea     rcx, [rbp+var_18+8]
                mov     byte ptr [rsp+50h+var_30], sil
                call    sub_1406CA210
                mov     edi, eax
                test    eax, eax
                js      loc_1408B5184
                mov     ecx, r15d
                mov     edi, 0C000000Eh
                call    sub_14067926C
                mov     edx, 43706E50h
                lea     rcx, [rbp+var_18]
                call    sub_14067919C
                mov     r15, [rbp+arg_8]
                mov     r14, rax
                test    rax, rax
                jz      short loc_1408B5178
                mov     rcx, [rax+138h]
                mov     rax, [rcx+28h]
                test    rax, rax
                jz      short loc_1408B5178
                cmp     rax, cs:qword_140C44D00
                jz      short loc_1408B5178
                mov     ecx, [rax+12Ch]
                sub     ecx, 313h
                cmp     ecx, 1
                jbe     short loc_1408B5178
                mov     eax, [rbx+28h]
                mov     r9, r15
                mov     rdx, [rbp+var_20]
                mov     rcx, r14
                mov     [rsp+50h+var_30], eax
                call    sub_1408BB0F4
                mov     r8d, [rbx+28h]
                mov     r9d, 1
                and     [rsp+50h+var_28], 0
                mov     rdx, r15
                mov     rcx, r12
                mov     byte ptr [rsp+50h+var_30], sil
                mov     edi, eax
                call    sub_1406CA210
                test    eax, eax
                cmovs   edi, eax

loc_1408B5178:                          ; CODE XREF: sub_1408B4FD0+140↑j
                                        ; sub_1408B4FD0+150↑j ...
                mov     ecx, 1
                call    sub_140679140
                jmp     short loc_1408B5188
; ---------------------------------------------------------------------------

loc_1408B5184:                          ; CODE XREF: sub_1408B4FD0+E8↑j
                                        ; sub_1408B4FD0+115↑j
                mov     r15, [rbp+arg_8]

loc_1408B5188:                          ; CODE XREF: sub_1408B4FD0+CB↑j
                                        ; sub_1408B4FD0+1B2↑j
                mov     rdx, [rbp+var_20]
                mov     cl, sil
                call    sub_1403109F0
                mov     rdx, r15
                mov     cl, sil
                call    sub_1403109F0
                mov     rdx, qword ptr [rbp+var_18+8]
                mov     cl, sil
                call    sub_1403109F0
                test    r14, r14
                jz      short loc_1408B51BD
                mov     edx, 43706E50h
                mov     rcx, r14
                call    ObfDereferenceObjectWithTag

loc_1408B51BD:                          ; CODE XREF: sub_1408B4FD0+1DE↑j
                mov     [rbx+30h], edi
                mov     eax, edi
                jmp     short loc_1408B51D0
; ---------------------------------------------------------------------------

loc_1408B51C4:                          ; CODE XREF: sub_1408B4FD0+46↑j
                                        ; sub_1408B4FD0+54↑j ...
                mov     eax, 0C000000Dh
                jmp     short loc_1408B51D0
; ---------------------------------------------------------------------------

loc_1408B51CB:                          ; CODE XREF: sub_1408B4FD0+2F↑j
                                        ; sub_1408B4FD0+39↑j
                mov     eax, 0C0000023h

loc_1408B51D0:                          ; CODE XREF: sub_1408B4FD0+1F2↑j
                                        ; sub_1408B4FD0+1F9↑j
                lea     r11, [rsp+50h+var_s0]
                mov     rbx, [r11+30h]
                mov     rsi, [r11+40h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r12
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B4FD0   endp

algn_1408B51EA:                         ; DATA XREF: .pdata:000000014011DB40↑o
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B51F0   proc near               ; DATA XREF: .rdata:0000000140002018↑o
                                        ; .pdata:000000014011DB4C↑o

var_30          = byte ptr -30h
var_28          = dword ptr -28h
var_20          = qword ptr -20h
var_18          = xmmword ptr -18h
var_s0          = byte ptr  0
arg_0           = qword ptr  20h
arg_8           = dword ptr  28h
arg_10          = qword ptr  30h
arg_18          = qword ptr  38h

                mov     [rsp-18h+arg_0], rbx
                mov     [rsp-18h+arg_10], rsi
                mov     [rsp-18h+arg_18], rdi
                push    rbp
                push    r13
                push    r15
                mov     rbp, rsp
                sub     rsp, 50h
                movzx   ecx, word ptr [rdx]
                mov     r13d, 1
                movzx   eax, cx
                mov     rbx, rdx
                sub     ax, r13w
                xorps   xmm0, xmm0
                movups  [rbp+var_18], xmm0
                mov     edx, 18Fh
                mov     word ptr [rbp+var_18+2], cx
                mov     word ptr [rbp+var_18], cx
                mov     sil, r9b
                cmp     ax, dx
                ja      loc_1408B5311
                test    r13b, cl
                jnz     loc_1408B5311
                and     [rbp+var_20], 0
                lea     r15, [rbx+18h]
                and     qword ptr [rbp+var_18+8], 0
                mov     eax, [rbx+14h]
                mov     r9, [r15]
                test    eax, eax
                jz      short loc_1408B5269
                test    r9, r9
                jz      short loc_1408B5269
                lea     edx, [rax+rax]
                jmp     short loc_1408B526B
; ---------------------------------------------------------------------------

loc_1408B5269:                          ; CODE XREF: sub_1408B51F0+6D↑j
                                        ; sub_1408B51F0+72↑j
                xor     edx, edx

loc_1408B526B:                          ; CODE XREF: sub_1408B51F0+77↑j
                mov     r8b, sil
                mov     [rbp+arg_8], edx
                lea     rcx, [rbp+var_20]
                call    sub_1402B4844
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B52F5
                movzx   r8d, word ptr [rbp+var_18]
                lea     rcx, [rbp+var_18+8]
                mov     rdx, [rbx+8]
                mov     [rsp+50h+var_28], r13d
                mov     r13d, 2
                mov     r9d, r13d
                mov     [rsp+50h+var_30], sil
                call    sub_1406CA210
                mov     edi, eax
                test    eax, eax
                js      short loc_1408B52F5
                mov     r9, [rbp+var_20]
                lea     r8, [rbp+arg_8]
                mov     edx, [rbx+10h]
                lea     rcx, [rbp+var_18]
                call    sub_1408B57FC
                cmp     [rbp+var_20], 0
                mov     edi, eax
                jz      short loc_1408B52ED
                mov     r8d, [rbx+14h]
                mov     r9d, r13d
                and     [rsp+50h+var_28], 0
                add     r8d, r8d
                mov     rdx, [rbp+var_20]
                mov     rcx, r15
                mov     [rsp+50h+var_30], sil
                call    sub_1406CA210
                test    eax, eax
                cmovs   edi, eax

loc_1408B52ED:                          ; CODE XREF: sub_1408B51F0+D6↑j
                mov     eax, [rbp+arg_8]
                shr     eax, 1
                mov     [rbx+14h], eax

loc_1408B52F5:                          ; CODE XREF: sub_1408B51F0+8E↑j
                                        ; sub_1408B51F0+B9↑j
                mov     rdx, [rbp+var_20]
                mov     cl, sil
                call    sub_1403109F0
                mov     rdx, qword ptr [rbp+var_18+8]
                mov     cl, sil
                call    sub_1403109F0
                mov     eax, edi
                jmp     short loc_1408B5316
; ---------------------------------------------------------------------------

loc_1408B5311:                          ; CODE XREF: sub_1408B51F0+48↑j
                                        ; sub_1408B51F0+51↑j
                mov     eax, 0C000000Dh

loc_1408B5316:                          ; CODE XREF: sub_1408B51F0+11F↑j
                lea     r11, [rsp+50h+var_s0]
                mov     rbx, [r11+20h]
                mov     rsi, [r11+30h]
                mov     rdi, [r11+38h]
                mov     rsp, r11
                pop     r15
                pop     r13
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B51F0   endp

algn_1408B5331:                         ; DATA XREF: .pdata:000000014011DB4C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B5340   proc near               ; DATA XREF: .rdata:0000000140001EF8↑o
                                        ; .pdata:000000014011DB58↑o

var_28          = qword ptr -28h
var_20          = dword ptr -20h
var_18          = byte ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                push    rdi
                sub     rsp, 40h
                movzx   ecx, word ptr [rdx]
                xorps   xmm0, xmm0
                movups  xmmword ptr [rax-18h], xmm0
                mov     [rax-16h], cx
                mov     esi, 1
                mov     [rax-18h], cx
                mov     r8d, 18Fh
                movzx   eax, cx
                mov     dil, r9b
                sub     ax, si
                cmp     ax, r8w
                ja      short loc_1408B53CE
                test    sil, cl
                jnz     short loc_1408B53CE
                mov     rdx, [rdx+8]
                mov     r8d, ecx
                mov     [rsp+48h+var_20], esi
                lea     rcx, [rsp+48h+var_10]
                mov     byte ptr [rsp+48h+var_28], r9b
                lea     r9d, [rsi+1]
                call    sub_1406CA210
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B53CA
                and     [rsp+48h+var_28], 0
                lea     edx, [rsi+0Fh]
                mov     r9d, esi
                lea     rcx, [rsp+48h+var_18]
                call    sub_14072E8E8
                mov     rdx, [rsp+48h+var_10]
                mov     cl, dil
                mov     ebx, eax
                call    sub_1403109F0

loc_1408B53CA:                          ; CODE XREF: sub_1408B5340+63↑j
                mov     eax, ebx
                jmp     short loc_1408B53D3
; ---------------------------------------------------------------------------

loc_1408B53CE:                          ; CODE XREF: sub_1408B5340+3A↑j
                                        ; sub_1408B5340+3F↑j
                mov     eax, 0C000000Dh

loc_1408B53D3:                          ; CODE XREF: sub_1408B5340+8C↑j
                mov     rbx, [rsp+48h+arg_0]
                mov     rsi, [rsp+48h+arg_8]
                add     rsp, 40h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B5340   endp

byte_1408B53E4  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011DB58↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B53EC   proc near               ; CODE XREF: sub_1408B0BC0+543↑p
                                        ; DATA XREF: .pdata:000000014011DB64↑o

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = dword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = qword ptr -8
arg_0           = qword ptr  40h
arg_8           = byte ptr  48h
arg_10          = dword ptr  50h
arg_18          = dword ptr  58h

                mov     [rsp-38h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 80h
                xor     edi, edi
                mov     r13, rcx
                mov     [rbp+var_40], edi
                mov     r12d, edi
                mov     [rbp+arg_10], edi
                mov     [rbp+arg_18], edi
                lea     r15d, [rdi+1]
                mov     [rbp+var_C], edi
                mov     ecx, r15d
                mov     [rbp+var_18], rdi
                mov     [rbp+var_30], rdi
                mov     [rbp+var_20], rdi
                mov     [rbp+var_38], rdi
                call    sub_14067926C
                mov     rax, gs:188h
                dec     word ptr [rax+1E4h]
                mov     dl, r15b
                lea     rcx, unk_140C44D40
                call    ExAcquireResourceExclusiveLite
                mov     ebx, 43706E50h
                mov     [rbp+arg_8], r15b
                mov     edx, ebx
                mov     rcx, r13
                call    sub_14067919C
                mov     [rbp+var_28], rax
                test    rax, rax
                jz      loc_1408B54F9
                mov     edx, ebx
                mov     rcx, rax
                call    ObfDereferenceObjectWithTag
                mov     ebx, edi

loc_1408B5481:                          ; CODE XREF: sub_1408B53EC+11F↓j
                                        ; sub_1408B53EC+132↓j
                mov     rsi, [rbp+var_30]

loc_1408B5485:                          ; CODE XREF: sub_1408B53EC+171↓j
                                        ; sub_1408B53EC+1A5↓j ...
                lea     rcx, unk_140C44D40
                call    ExReleaseResourceLite
                call    KeLeaveCriticalRegion

loc_1408B5496:                          ; CODE XREF: sub_1408B53EC+3FC↓j
                mov     ecx, 1
                call    sub_140679140
                mov     rcx, [rbp+var_38]
                test    rcx, rcx
                jz      short loc_1408B54AE
                call    ZwClose

loc_1408B54AE:                          ; CODE XREF: sub_1408B53EC+BB↑j
                mov     rcx, [rbp+var_18]
                test    rcx, rcx
                jz      short loc_1408B54BC
                call    sub_1406CDB1C

loc_1408B54BC:                          ; CODE XREF: sub_1408B53EC+C9↑j
                test    rsi, rsi
                jz      short loc_1408B54CC
                mov     rdx, r13
                mov     rcx, rsi
                call    sub_1406CA2D4

loc_1408B54CC:                          ; CODE XREF: sub_1408B53EC+D3↑j
                test    r12, r12
                jz      short loc_1408B54DB
                xor     edx, edx
                mov     rcx, r12
                call    ExFreePoolWithTag

loc_1408B54DB:                          ; CODE XREF: sub_1408B53EC+E3↑j
                mov     eax, ebx
                mov     rbx, [rsp+80h+arg_0]
                add     rsp, 80h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408B54F9:                          ; CODE XREF: sub_1408B53EC+83↑j
                mov     r8, r13
                lea     rcx, [rbp+var_30]
                xor     edx, edx
                call    sub_1406CC09C
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B5481
                lea     rcx, [rbp+var_18]
                call    sub_1406C91CC
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B5481
                mov     rsi, [rbp+var_30]
                lea     rax, [rbp+var_38]
                mov     rcx, cs:qword_140CF4378
                xor     r9d, r9d
                mov     [rsp+80h+var_48], rdi
                mov     rdx, rsi
                mov     [rsp+80h+var_50], rax
                mov     byte ptr [rsp+80h+var_58], dil
                lea     r8d, [r9+10h]
                mov     dword ptr [rsp+80h+var_60], 0F003Fh
                call    sub_14062C9F8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B5485
                mov     edx, 200h
                mov     [rbp+var_10], edi
                mov     r8d, 20207050h
                mov     [rbp+arg_10], edx
                mov     ecx, r15d
                mov     [rbp+var_8], rdi
                movzx   r14d, di
                call    ExAllocatePoolWithTag
                mov     r12, rax
                test    rax, rax
                jnz     short loc_1408B5596
                mov     ebx, 0C000009Ah
                jmp     loc_1408B5485
; ---------------------------------------------------------------------------

loc_1408B5596:                          ; CODE XREF: sub_1408B53EC+19E↑j
                mov     r8, [rbp+var_38]
                lea     rax, [rbp+arg_10]
                mov     rcx, cs:qword_140CF4378
                mov     r9d, 5
                mov     dword ptr [rsp+80h+var_48], edi
                mov     rdx, rsi
                mov     [rsp+80h+var_50], rax
                lea     rax, [rbp+arg_18]
                mov     [rsp+80h+var_58], r12
                mov     [rsp+80h+var_60], rax
                call    sub_14062BA8C
                test    eax, eax
                js      short loc_1408B55FA
                cmp     [rbp+arg_18], r15d
                jnz     short loc_1408B55FA
                cmp     [rbp+arg_10], edi
                jz      short loc_1408B55FA
                mov     rdx, r12
                lea     rcx, [rbp+var_10]
                call    RtlInitUnicodeStringEx
                test    eax, eax
                jns     short loc_1408B55F5
                mov     [rbp+var_10], edi
                mov     r14d, edi
                mov     [rbp+var_8], rdi
                jmp     short loc_1408B55FA
; ---------------------------------------------------------------------------

loc_1408B55F5:                          ; CODE XREF: sub_1408B53EC+1FB↑j
                movzx   r14d, word ptr [rbp+var_10]

loc_1408B55FA:                          ; CODE XREF: sub_1408B53EC+1E0↑j
                                        ; sub_1408B53EC+1E6↑j ...
                lea     rcx, [rbp+var_28]
                call    sub_1407C77C8
                mov     r15, [rbp+var_28]
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B57D7
                bts     dword ptr [r15+30h], 0Ch
                lea     rdx, [rbp+var_20]
                mov     rcx, r15
                call    sub_14076A44C
                mov     rdi, [rbp+var_20]
                mov     ebx, eax
                test    rdi, rdi
                jnz     short loc_1408B5643
                cmp     eax, 0C000036Eh
                jnz     loc_1408B57CD
                mov     ebx, 0C000009Ah
                jmp     loc_1408B57CD
; ---------------------------------------------------------------------------

loc_1408B5643:                          ; CODE XREF: sub_1408B53EC+240↑j
                mov     edx, 11h
                mov     rcx, rdi
                call    sub_140736ED4
                mov     edx, 302h
                mov     rcx, rdi
                call    sub_14036D798
                mov     r8, [rbp+var_38]
                lea     rax, [rbp+arg_10]
                mov     rcx, cs:qword_140CF4378
                xor     ebx, ebx
                mov     dword ptr [rsp+80h+var_48], ebx
                mov     rdx, rsi
                mov     [rsp+80h+var_50], rax
                lea     rax, [rbp+var_40]
                mov     [rsp+80h+var_58], rax
                lea     rax, [rbp+arg_18]
                lea     r9d, [rbx+0Bh]
                mov     [rsp+80h+var_60], rax
                mov     [rbp+arg_10], 4
                call    sub_14062BA8C
                test    eax, eax
                js      short loc_1408B56F2
                cmp     [rbp+arg_18], 4
                jnz     short loc_1408B56B1
                cmp     [rbp+arg_10], 4
                jnz     short loc_1408B56B1
                mov     eax, [rbp+var_40]
                jmp     short loc_1408B56B6
; ---------------------------------------------------------------------------

loc_1408B56B1:                          ; CODE XREF: sub_1408B53EC+2B8↑j
                                        ; sub_1408B53EC+2BE↑j
                mov     eax, ebx
                mov     [rbp+var_40], ebx

loc_1408B56B6:                          ; CODE XREF: sub_1408B53EC+2C3↑j
                test    al, 20h
                jz      short loc_1408B56C3
                xor     r8d, r8d
                lea     edx, [r8+12h]
                jmp     short loc_1408B56EA
; ---------------------------------------------------------------------------

loc_1408B56C3:                          ; CODE XREF: sub_1408B53EC+2CC↑j
                bt      eax, 0Dh
                jnb     short loc_1408B56D2
                xor     r8d, r8d
                lea     edx, [r8+10h]
                jmp     short loc_1408B56EA
; ---------------------------------------------------------------------------

loc_1408B56D2:                          ; CODE XREF: sub_1408B53EC+2DB↑j
                test    al, 40h
                jz      short loc_1408B56F2
                mov     rdx, [rbp+var_38]
                mov     rcx, rsi
                call    sub_1408A7FE8
                mov     r8d, eax
                mov     edx, 1Ch

loc_1408B56EA:                          ; CODE XREF: sub_1408B53EC+2D5↑j
                                        ; sub_1408B53EC+2E4↑j
                mov     rcx, rdi
                call    sub_140748CA0

loc_1408B56F2:                          ; CODE XREF: sub_1408B53EC+2B2↑j
                                        ; sub_1408B53EC+2E8↑j
                movzx   edx, word ptr [r13+0]
                mov     rcx, rdi
                add     edx, 2
                call    sub_1407A4CB0
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B57D5
                mov     rdx, r13
                mov     rcx, rdi
                call    sub_1407A4C94
                test    r14w, r14w
                jz      short loc_1408B5733
                lea     rdx, [rbp+var_10]
                lea     rcx, [rdi+38h]
                call    sub_140740B10
                xor     r14d, r14d
                test    eax, eax
                jns     short loc_1408B573E
                jmp     short loc_1408B5736
; ---------------------------------------------------------------------------

loc_1408B5733:                          ; CODE XREF: sub_1408B53EC+32F↑j
                xor     r14d, r14d

loc_1408B5736:                          ; CODE XREF: sub_1408B53EC+345↑j
                mov     [rdi+38h], r14d
                mov     [rdi+40h], r14

loc_1408B573E:                          ; CODE XREF: sub_1408B53EC+343↑j
                mov     rcx, [rdi+20h]
                lea     rdx, [rdi+28h]
                call    sub_14074F100
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B57D5
                mov     rcx, cs:qword_140C44D00
                mov     rdx, rdi
                call    sub_14037E91C
                mov     rcx, r15
                call    ObfReferenceObject
                lea     rcx, unk_140C44D40
                call    ExReleaseResourceLite
                call    KeLeaveCriticalRegion
                mov     rcx, rdi
                mov     [rbp+arg_8], r14b
                call    sub_14073D5EC
                mov     rdx, [rdi+30h]
                mov     r8d, 1
                call    sub_1407378F8
                mov     rdx, [rdi+30h]
                mov     r8d, 0Eh
                call    sub_1407378F8
                mov     rdx, cs:qword_140C44D00
                mov     r8d, 0Fh
                mov     rdx, [rdx+30h]
                call    sub_1407378F8
                mov     rdx, [rdi+20h]
                lea     rcx, qword_14000A610
                call    sub_14073C5E8

loc_1408B57CD:                          ; CODE XREF: sub_1408B53EC+247↑j
                                        ; sub_1408B53EC+252↑j
                xor     edi, edi
                test    ebx, ebx
                jns     short loc_1408B57E4
                jmp     short loc_1408B57D7
; ---------------------------------------------------------------------------

loc_1408B57D5:                          ; CODE XREF: sub_1408B53EC+31A↑j
                                        ; sub_1408B53EC+363↑j
                xor     edi, edi

loc_1408B57D7:                          ; CODE XREF: sub_1408B53EC+21F↑j
                                        ; sub_1408B53EC+3E7↑j
                test    r15, r15
                jz      short loc_1408B57E4
                mov     rcx, r15
                call    IoDeleteDevice

loc_1408B57E4:                          ; CODE XREF: sub_1408B53EC+3E5↑j
                                        ; sub_1408B53EC+3EE↑j
                cmp     [rbp+arg_8], dil
                jz      loc_1408B5496
                jmp     loc_1408B5485
sub_1408B53EC   endp

; ---------------------------------------------------------------------------
byte_1408B57F3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DB64↑o

; =============== S U B R O U T I N E =======================================


sub_1408B57FC   proc near               ; CODE XREF: sub_1408B51F0+CA↑p
                                        ; DATA XREF: .pdata:000000014011DB70↑o

var_38          = qword ptr -38h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+20h], rsi
                mov     [rax+18h], r8
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 30h
                xor     r13d, r13d
                mov     r12, r9
                mov     [rax-38h], r13
                mov     rbp, rcx
                mov     ebx, r13d
                mov     edi, r13d
                lea     eax, [r13+2]
                test    edx, edx
                jz      short loc_1408B586C
                sub     edx, 1
                jz      short loc_1408B5865
                sub     edx, 1
                jz      short loc_1408B5861
                sub     edx, 1
                jz      short loc_1408B585C
                cmp     edx, 1
                jz      short loc_1408B5855
                mov     eax, 0C000000Dh
                jmp     loc_1408B5A78
; ---------------------------------------------------------------------------

loc_1408B5855:                          ; CODE XREF: sub_1408B57FC+4D↑j
                mov     esi, 6
                jmp     short loc_1408B5871
; ---------------------------------------------------------------------------

loc_1408B585C:                          ; CODE XREF: sub_1408B57FC+48↑j
                mov     esi, r13d
                jmp     short loc_1408B5871
; ---------------------------------------------------------------------------

loc_1408B5861:                          ; CODE XREF: sub_1408B57FC+43↑j
                mov     esi, eax
                jmp     short loc_1408B5871
; ---------------------------------------------------------------------------

loc_1408B5865:                          ; CODE XREF: sub_1408B57FC+3E↑j
                mov     esi, 3
                jmp     short loc_1408B5871
; ---------------------------------------------------------------------------

loc_1408B586C:                          ; CODE XREF: sub_1408B57FC+39↑j
                mov     esi, 1

loc_1408B5871:                          ; CODE XREF: sub_1408B57FC+5E↑j
                                        ; sub_1408B57FC+63↑j ...
                xor     ecx, ecx
                call    sub_14067926C
                mov     edx, 43706E50h
                mov     rcx, rbp
                call    sub_14067919C
                mov     r15, rax
                test    rax, rax
                jz      loc_1408B5A3A
                mov     rax, [rax+138h]
                mov     r14, [rax+28h]
                mov     eax, [r14+12Ch]
                sub     eax, 313h
                cmp     eax, 1
                jbe     loc_1408B5A3A
                test    esi, esi
                jnz     short loc_1408B5932
                mov     rax, [r14+8]
                mov     esi, r13d
                jmp     short loc_1408B58C3
; ---------------------------------------------------------------------------

loc_1408B58BE:                          ; CODE XREF: sub_1408B57FC+CA↓j
                mov     rax, [rax]
                inc     esi

loc_1408B58C3:                          ; CODE XREF: sub_1408B57FC+C0↑j
                test    rax, rax
                jnz     short loc_1408B58BE
                mov     edx, esi
                lea     ecx, [rax+1]
                mov     r8d, 20207050h
                lea     rdx, ds:10h[rdx*8]
                call    ExAllocatePoolWithTag
                mov     [rsp+58h+var_38], rax
                mov     r8, rax
                test    rax, rax
                jz      short loc_1408B592B
                mov     [rax], esi
                mov     ebp, r13d
                mov     r14, [r14+8]
                jmp     short loc_1408B591F
; ---------------------------------------------------------------------------

loc_1408B58F8:                          ; CODE XREF: sub_1408B57FC+126↓j
                cmp     ebp, esi
                jnb     short loc_1408B5924
                mov     rcx, [r14+20h]
                mov     edx, 43706E50h
                call    ObfReferenceObjectWithTag
                mov     rcx, [r14+20h]
                mov     rax, [rsp+58h+var_38]
                mov     edx, ebp
                inc     ebp
                mov     [rax+rdx*8+8], rcx
                mov     r14, [r14]

loc_1408B591F:                          ; CODE XREF: sub_1408B57FC+FA↑j
                test    r14, r14
                jnz     short loc_1408B58F8

loc_1408B5924:                          ; CODE XREF: sub_1408B57FC+FE↑j
                mov     r8, [rsp+58h+var_38]
                jmp     short loc_1408B5956
; ---------------------------------------------------------------------------

loc_1408B592B:                          ; CODE XREF: sub_1408B57FC+EF↑j
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B5956
; ---------------------------------------------------------------------------

loc_1408B5932:                          ; CODE XREF: sub_1408B57FC+B7↑j
                lea     r9, [rsp+58h+var_38]
                xor     r8d, r8d
                mov     edx, esi
                mov     rcx, r15
                call    sub_14073A6F8
                mov     r8, [rsp+58h+var_38]
                test    eax, eax
                mov     ebx, eax
                cmovs   r8, r13
                mov     [rsp+58h+var_38], r8

loc_1408B5956:                          ; CODE XREF: sub_1408B57FC+12D↑j
                                        ; sub_1408B57FC+134↑j
                test    r8, r8
                jz      loc_1408B5A3F
                cmp     [r8], r13d
                jbe     loc_1408B5A3F
                mov     r9d, 2
                mov     ebp, r13d
                mov     edi, r9d

loc_1408B5974:                          ; CODE XREF: sub_1408B57FC+210↓j
                mov     r13d, ebp
                mov     rax, [r8+r13*8+8]
                mov     rcx, [rax+138h]
                mov     r14, [rcx+28h]
                test    r14, r14
                jz      short loc_1408B59EB
                lea     rsi, [r14+28h]
                test    rsi, rsi
                jz      short loc_1408B59EB
                movzx   edx, word ptr [rsi]
                cmp     dx, r9w
                jb      short loc_1408B59EB
                test    r12, r12
                jz      short loc_1408B59E3
                mov     rax, [rsp+58h+arg_10]
                lea     ecx, [rdi+rdx]
                add     rcx, r9
                mov     eax, [rax]
                cmp     rax, rcx
                jb      short loc_1408B5A11
                mov     r8d, edx
                mov     rcx, r12
                mov     rdx, [r14+30h]
                call    memmove
                movzx   eax, word ptr [rsi]
                shr     rax, 1
                lea     r12, [r12+rax*2]
                xor     eax, eax
                mov     [r12], ax
                add     r12, 2
                movzx   edx, word ptr [r14+28h]
                mov     r8, [rsp+58h+var_38]

loc_1408B59E3:                          ; CODE XREF: sub_1408B57FC+1A5↑j
                movzx   eax, dx
                add     edi, 2
                add     edi, eax

loc_1408B59EB:                          ; CODE XREF: sub_1408B57FC+18E↑j
                                        ; sub_1408B57FC+197↑j ...
                mov     rcx, [r8+r13*8+8]
                mov     edx, 43706E50h
                call    ObfDereferenceObjectWithTag
                mov     r8, [rsp+58h+var_38]
                inc     ebp
                cmp     ebp, [r8]
                jnb     short loc_1408B5A1B
                mov     r9d, 2
                jmp     loc_1408B5974
; ---------------------------------------------------------------------------

loc_1408B5A11:                          ; CODE XREF: sub_1408B57FC+1B7↑j
                mov     ebx, 0C0000023h
                xor     r13d, r13d
                jmp     short loc_1408B5A3F
; ---------------------------------------------------------------------------

loc_1408B5A1B:                          ; CODE XREF: sub_1408B57FC+208↑j
                xor     r13d, r13d
                test    r12, r12
                jz      short loc_1408B5A3F
                mov     rax, [rsp+58h+arg_10]
                cmp     [rax], edi
                jnb     short loc_1408B5A33
                mov     ebx, 0C0000023h
                jmp     short loc_1408B5A3F
; ---------------------------------------------------------------------------

loc_1408B5A33:                          ; CODE XREF: sub_1408B57FC+22E↑j
                mov     [r12], r13w
                jmp     short loc_1408B5A3F
; ---------------------------------------------------------------------------

loc_1408B5A3A:                          ; CODE XREF: sub_1408B57FC+8F↑j
                                        ; sub_1408B57FC+AF↑j
                mov     ebx, 0C000000Eh

loc_1408B5A3F:                          ; CODE XREF: sub_1408B57FC+15D↑j
                                        ; sub_1408B57FC+166↑j ...
                xor     ecx, ecx
                call    sub_140679140
                mov     rax, [rsp+58h+arg_10]
                test    ebx, ebx
                cmovs   edi, r13d
                mov     [rax], edi
                mov     rcx, [rsp+58h+var_38]
                test    rcx, rcx
                jz      short loc_1408B5A64
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408B5A64:                          ; CODE XREF: sub_1408B57FC+25F↑j
                test    r15, r15
                jz      short loc_1408B5A76
                mov     edx, 43706E50h
                mov     rcx, r15
                call    ObfDereferenceObjectWithTag

loc_1408B5A76:                          ; CODE XREF: sub_1408B57FC+26B↑j
                mov     eax, ebx

loc_1408B5A78:                          ; CODE XREF: sub_1408B57FC+54↑j
                mov     rbx, [rsp+58h+arg_0]
                mov     rbp, [rsp+58h+arg_8]
                mov     rsi, [rsp+58h+arg_18]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B57FC   endp

byte_1408B5A96  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DB70↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B5A9C   proc near               ; CODE XREF: sub_1408A2E50+2C↑p
                                        ; sub_140A712C4+1A84F↓p ...

var_90          = dword ptr -90h
var_88          = dword ptr -88h
var_80          = qword ptr -80h
var_78          = xmmword ptr -78h
var_68          = dword ptr -68h
var_64          = dword ptr -64h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = dword ptr -50h
var_4C          = dword ptr -4Ch
var_48          = xmmword ptr -48h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_8           = qword ptr  18h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_8], rbx
                push    rbp
                lea     rbp, [rsp-57h]
                sub     rsp, 0B0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_10], rax
                and     [rbp+57h+var_80], 0
                lea     r9, [rbp+57h+var_78]
                and     [rbp+57h+var_64], 0
                lea     r8, [rbp+57h+var_68]
                and     [rbp+57h+var_4C], 0
                xorps   xmm0, xmm0
                xorps   xmm1, xmm1
                mov     [rbp+57h+var_58], rcx
                xor     eax, eax
                mov     [rsp+0B0h+var_88], 204022h
                and     [rbp+57h+var_60], rax
                lea     rcx, [rbp+57h+var_80]
                mov     edx, 100180h
                mov     [rbp+57h+var_18], rax
                movups  [rbp+57h+var_78], xmm0
                mov     [rbp+57h+var_68], 30h ; '0'
                movups  [rbp+57h+var_38], xmm1
                mov     [rbp+57h+var_50], 240h
                movups  [rbp+57h+var_28], xmm1
                mov     [rsp+0B0h+var_90], 3
                movdqu  [rbp+57h+var_48], xmm0
                call    ZwOpenFile
                test    eax, eax
                js      short loc_1408B5B9B
                mov     rcx, [rbp+57h+var_80]
                lea     r8, [rbp+57h+var_38]
                mov     r9d, 28h ; '('
                mov     [rsp+0B0h+var_90], 4
                lea     rdx, [rbp+57h+var_78]
                call    ZwQueryInformationFile
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B5B90
                mov     eax, dword ptr [rbp+57h+var_18]
                test    al, 7
                jz      short loc_1408B5B90
                xorps   xmm0, xmm0
                mov     [rsp+0B0h+var_90], 4
                and     eax, 0FFFFFFF8h
                lea     r8, [rbp+57h+var_38]
                mov     ecx, 80h
                lea     rdx, [rbp+57h+var_78]
                cmovz   eax, ecx
                xor     ecx, ecx
                mov     [rbp+57h+var_18], rcx
                movups  [rbp+57h+var_38], xmm0
                mov     dword ptr [rbp+57h+var_18], eax
                lea     r9d, [rcx+28h]
                mov     rcx, [rbp+57h+var_80]
                movups  [rbp+57h+var_28], xmm0
                call    ZwSetInformationFile
                mov     ebx, eax

loc_1408B5B90:                          ; CODE XREF: sub_1408B5A9C+AD↑j
                                        ; sub_1408B5A9C+B4↑j
                mov     rcx, [rbp+57h+var_80]
                call    ZwClose
                mov     eax, ebx

loc_1408B5B9B:                          ; CODE XREF: sub_1408B5A9C+88↑j
                mov     rcx, [rbp+57h+var_10]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0B0h+arg_8]
                add     rsp, 0B0h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B5A9C
sub_1408B5A9C   endp

algn_1408B5BB9:                         ; DATA XREF: .pdata:000000014011DB7C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B5BC0   proc near               ; CODE XREF: sub_140747D98:loc_140837BD0↑p
                                        ; DATA XREF: .pdata:000000014011DB88↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                test    byte ptr [rcx+10h], 2
                mov     rbx, rcx
                jz      short loc_1408B5C26
                mov     rax, cs:off_140C009C0
                mov     rcx, [rcx+8]
                call    sub_1404079D0
                mov     edi, eax
                call    sub_1403F0158
                test    eax, eax
                jnz     short loc_1408B5C09
                test    edi, edi
                js      short loc_1408B5C11
                mov     rcx, [rbx+20h]
                test    rcx, rcx
                jz      short loc_1408B5C09
                mov     rax, cs:off_140C009C0
                call    sub_1404079D0
                mov     edi, eax

loc_1408B5C09:                          ; CODE XREF: sub_1408B5BC0+2C↑j
                                        ; sub_1408B5BC0+39↑j
                test    edi, edi
                js      short loc_1408B5C11
                and     byte ptr [rbx+10h], 0FDh

loc_1408B5C11:                          ; CODE XREF: sub_1408B5BC0+30↑j
                                        ; sub_1408B5BC0+4B↑j
                and     qword ptr [rbx+8], 0
                call    sub_1403F0158
                test    eax, eax
                jnz     short loc_1408B5C28
                and     qword ptr [rbx+20h], 0
                jmp     short loc_1408B5C28
; ---------------------------------------------------------------------------

loc_1408B5C26:                          ; CODE XREF: sub_1408B5BC0+11↑j
                xor     edi, edi

loc_1408B5C28:                          ; CODE XREF: sub_1408B5BC0+5D↑j
                                        ; sub_1408B5BC0+64↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     eax, edi
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B5BC0   endp

byte_1408B5C36  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DB88↑o

; =============== S U B R O U T I N E =======================================


sub_1408B5C3C   proc near               ; CODE XREF: sub_1408B2B64+38↑p
                                        ; sub_1408B2B64+50↑p
                                        ; DATA XREF: ...
                mov     al, [rcx+10h]
                test    al, 1
                jnz     short loc_1408B5C4F
                test    al, 8
                jnz     short loc_1408B5C4F
                test    al, 24h
                jz      short loc_1408B5C4F
                xor     al, al
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408B5C4F:                          ; CODE XREF: sub_1408B5C3C+5↑j
                                        ; sub_1408B5C3C+9↑j ...
                mov     al, 1
                retn
sub_1408B5C3C   endp

; ---------------------------------------------------------------------------
                db 0CCh
byte_1408B5C53  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DB94↑o

; =============== S U B R O U T I N E =======================================


sub_1408B5C5C   proc near               ; CODE XREF: sub_14073DDA8+B4642↑p
                                        ; DATA XREF: .pdata:000000014011DBA0↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                test    byte ptr [rcx+10h], 1
                mov     rbx, rcx
                jz      short loc_1408B5C81
                mov     rax, [rcx]
                test    byte ptr [rax+4], 1
                jnz     short loc_1408B5C81
                xor     edi, edi
                jmp     short loc_1408B5CE0
; ---------------------------------------------------------------------------

loc_1408B5C81:                          ; CODE XREF: sub_1408B5C5C+16↑j
                                        ; sub_1408B5C5C+1F↑j
                mov     rax, cs:off_140C009C8
                lea     rsi, [rcx+8]
                mov     rcx, [rcx]
                mov     rdx, rsi
                call    sub_1404079D0
                mov     edi, eax
                call    sub_1403F0158
                test    eax, eax
                jnz     short loc_1408B5CD8
                test    edi, edi
                js      short loc_1408B5CE0
                mov     rcx, [rbx+18h]
                test    rcx, rcx
                jz      short loc_1408B5CD8
                mov     rax, cs:off_140C009C8
                lea     rdx, [rbx+20h]
                call    sub_1404079D0
                mov     edi, eax
                test    eax, eax
                jns     short loc_1408B5CDC
                mov     rax, cs:off_140C009C0
                mov     rcx, [rsi]
                call    sub_1404079D0
                and     qword ptr [rsi], 0

loc_1408B5CD8:                          ; CODE XREF: sub_1408B5C5C+44↑j
                                        ; sub_1408B5C5C+51↑j
                test    edi, edi
                js      short loc_1408B5CE0

loc_1408B5CDC:                          ; CODE XREF: sub_1408B5C5C+67↑j
                or      byte ptr [rbx+10h], 2

loc_1408B5CE0:                          ; CODE XREF: sub_1408B5C5C+23↑j
                                        ; sub_1408B5C5C+48↑j ...
                mov     rbx, [rsp+28h+arg_0]
                mov     eax, edi
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B5C5C   endp

byte_1408B5CF3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DBA0↑o

; =============== S U B R O U T I N E =======================================


sub_1408B5CFC   proc near               ; CODE XREF: sub_14073BEA8+B4A5D↑p
                                        ; DATA XREF: .pdata:000000014011DBAC↑o

var_58          = qword ptr -58h
var_48          = qword ptr -48h
var_40          = dword ptr -40h
var_3C          = byte ptr -3Ch
var_30          = dword ptr -30h
var_20          = byte ptr -20h
arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 70h
                mov     dil, dl
                mov     rbx, rcx
                xor     edx, edx
                lea     rcx, [rsp+78h+var_48]
                lea     r8d, [rdx+40h]
                call    memset
                mov     rcx, [rbx+20h]
                call    IoGetAttachedDevice
                lea     rcx, [rsp+78h+var_48]
                mov     [rsp+78h+var_48], rax
                mov     [rsp+78h+var_40], 6
                mov     [rsp+78h+var_3C], dil
                call    sub_1407C8A9C
                mov     rbx, rax
                test    rax, rax
                jnz     short loc_1408B5D50
                mov     eax, 0C0000017h
                jmp     short loc_1408B5D88
; ---------------------------------------------------------------------------

loc_1408B5D50:                          ; CODE XREF: sub_1408B5CFC+4B↑j
                mov     rcx, rbx
                call    IoQueueThreadIrp
                mov     rcx, [rsp+78h+var_48]
                mov     rdx, rbx
                call    IofCallDriver
                cmp     eax, 103h
                jnz     short loc_1408B5D88
                and     [rsp+78h+var_58], 0
                lea     rcx, [rsp+78h+var_20]
                xor     r9d, r9d
                xor     r8d, r8d
                xor     edx, edx
                call    KeWaitForSingleObject
                mov     eax, [rsp+78h+var_30]

loc_1408B5D88:                          ; CODE XREF: sub_1408B5CFC+52↑j
                                        ; sub_1408B5CFC+6E↑j
                mov     rbx, [rsp+78h+arg_0]
                add     rsp, 70h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B5CFC   endp

algn_1408B5D97:                         ; DATA XREF: .pdata:000000014011DBAC↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B5DA0   proc near               ; CODE XREF: sub_14073BEA8:loc_1407F08F4↑p
                                        ; DATA XREF: .pdata:000000014011DBB8↑o

var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_10          = dword ptr -10h
arg_8           = byte ptr  10h

                mov     r11, rsp
                push    rbx
                sub     rsp, 50h
                mov     rax, [rcx+30h]
                xor     ebx, ebx
                xor     r9d, r9d
                mov     [rsp+58h+var_10], ebx
                test    dl, dl
                mov     rdx, rax
                lea     r8d, [rbx+1]
                jz      short loc_1408B5DF8
                mov     [r11-18h], r8d
                lea     rcx, [r11+10h]
                mov     [r11-20h], rcx
                lea     rcx, qword_14001E738
                mov     [rsp+58h+var_28], 11h
                mov     [r11-30h], rcx
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+58h+arg_8], 0FFh
                mov     [r11-38h], rbx
                call    sub_1407374DC
                mov     ebx, eax
                jmp     short loc_1408B5E22
; ---------------------------------------------------------------------------

loc_1408B5DF8:                          ; CODE XREF: sub_1408B5DA0+1E↑j
                mov     [rsp+58h+var_18], ebx
                lea     rcx, qword_14001E738
                mov     [rsp+58h+var_20], rbx
                mov     [rsp+58h+var_28], ebx
                mov     [rsp+58h+var_30], rcx
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+58h+var_38], rbx
                call    sub_1407374DC

loc_1408B5E22:                          ; CODE XREF: sub_1408B5DA0+56↑j
                mov     eax, ebx
                add     rsp, 50h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B5DA0   endp

byte_1408B5E2B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DBB8↑o

; =============== S U B R O U T I N E =======================================


sub_1408B5E34   proc near               ; CODE XREF: sub_14057CF10+4C↑p
                                        ; DATA XREF: .pdata:000000014011DBC4↑o
                push    rbx
                sub     rsp, 20h
                mov     rbx, cs:qword_140C44D00
                mov     rax, [rbx+8]
                jmp     short loc_1408B5E4E
; ---------------------------------------------------------------------------

loc_1408B5E47:                          ; CODE XREF: sub_1408B5E34+1D↓j
                mov     rbx, rax
                mov     rax, [rax+8]

loc_1408B5E4E:                          ; CODE XREF: sub_1408B5E34+11↑j
                test    rax, rax
                jnz     short loc_1408B5E47
                jmp     short loc_1408B5E96
; ---------------------------------------------------------------------------

loc_1408B5E55:                          ; CODE XREF: sub_1408B5E34+69↓j
                prefetchw byte ptr [rbx+128h]
                mov     eax, [rbx+128h]

loc_1408B5E62:                          ; CODE XREF: sub_1408B5E34+38↓j
                mov     ecx, eax
                lock cmpxchg [rbx+128h], ecx
                jnz     short loc_1408B5E62
                bt      eax, 8
                jnb     short loc_1408B5E7C
                mov     rcx, rbx
                call    sub_1408E9684

loc_1408B5E7C:                          ; CODE XREF: sub_1408B5E34+3E↑j
                mov     rax, [rbx]
                test    rax, rax
                jz      short loc_1408B5E92

loc_1408B5E84:                          ; CODE XREF: sub_1408B5E34+5A↓j
                mov     rbx, rax
                mov     rax, [rax+8]
                test    rax, rax
                jnz     short loc_1408B5E84
                jmp     short loc_1408B5E96
; ---------------------------------------------------------------------------

loc_1408B5E92:                          ; CODE XREF: sub_1408B5E34+4E↑j
                mov     rbx, [rbx+10h]

loc_1408B5E96:                          ; CODE XREF: sub_1408B5E34+1F↑j
                                        ; sub_1408B5E34+5C↑j
                cmp     rbx, cs:qword_140C44D00
                jnz     short loc_1408B5E55
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B5E34   endp

byte_1408B5EA6  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DBC4↑o

; =============== S U B R O U T I N E =======================================


sub_1408B5EAC   proc near               ; CODE XREF: sub_1408A3C30+24↑p
                                        ; DATA XREF: .pdata:000000014011DBD0↑o

var_18          = qword ptr -18h
var_10          = qword ptr -10h
arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 30h
                and     [rsp+38h+var_18], 0
                mov     ebx, edx
                mov     rdi, rcx
                xor     edx, edx
                lea     rcx, unk_140C44CE0
                xor     r9d, r9d
                xor     r8d, r8d
                call    KeWaitForSingleObject
                mov     ecx, 1
                call    sub_14067926C
                mov     ecx, 1
                mov     cs:qword_140C44CF8, rdi
                call    sub_140679140
                xor     r9d, r9d
                mov     edx, ebx
                lea     r8d, [r9+3]
                lea     ecx, [r9+7]
                call    sub_140773D50
                mov     ebx, eax
                cmp     eax, 0C0000061h
                jnz     short loc_1408B5F26
                and     [rsp+38h+var_10], 0
                mov     r9, rdi
                mov     ecx, 7
                mov     dword ptr [rsp+38h+var_18], 0Ch
                call    sub_1408AD884

loc_1408B5F26:                          ; CODE XREF: sub_1408B5EAC+5D↑j
                mov     ecx, 1
                call    sub_14067926C
                cmp     cs:qword_140C44CF8, 0
                jz      short loc_1408B5F4C
                test    ebx, ebx
                mov     eax, 0C0000001h
                cmovns  ebx, eax
                and     cs:qword_140C44CF8, 0

loc_1408B5F4C:                          ; CODE XREF: sub_1408B5EAC+8C↑j
                mov     ecx, 1
                call    sub_140679140
                xor     r8d, r8d
                lea     rcx, unk_140C44CE0
                xor     edx, edx
                call    KeSetEvent
                mov     eax, ebx
                mov     rbx, [rsp+38h+arg_0]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B5EAC   endp

algn_1408B5F75:                         ; DATA XREF: .pdata:000000014011DBD0↑o
                align 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=280h

sub_1408B5F80   proc near               ; DATA XREF: .pdata:000000014011DBDC↑o
                                        ; sub_14073C0AC+B48E1↑o

var_360         = qword ptr -360h
var_358         = qword ptr -358h
var_350         = qword ptr -350h
var_348         = qword ptr -348h
var_340         = qword ptr -340h
var_338         = qword ptr -338h
var_330         = dword ptr -330h
var_328         = qword ptr -328h
var_320         = dword ptr -320h
var_310         = dword ptr -310h
var_308         = qword ptr -308h
var_300         = dword ptr -300h
var_2F8         = qword ptr -2F8h
var_2F0         = qword ptr -2F0h
var_2E8         = dword ptr -2E8h
var_2E4         = dword ptr -2E4h
var_2E0         = dword ptr -2E0h
var_2D8         = qword ptr -2D8h
var_2D0         = dword ptr -2D0h
var_2CC         = dword ptr -2CCh
var_2C8         = dword ptr -2C8h
var_2C4         = dword ptr -2C4h
var_2C0         = qword ptr -2C0h
var_2B8         = xmmword ptr -2B8h
var_2A8         = xmmword ptr -2A8h
var_298         = xmmword ptr -298h
var_288         = qword ptr -288h
var_280         = xmmword ptr -280h
var_270         = xmmword ptr -270h
var_260         = xmmword ptr -260h
var_250         = xmmword ptr -250h
var_240         = xmmword ptr -240h
var_230         = dword ptr -230h
var_22C         = dword ptr -22Ch
var_220         = qword ptr -220h
var_218         = qword ptr -218h
var_210         = qword ptr -210h
var_208         = qword ptr -208h
var_200         = qword ptr -200h
var_1F8         = xmmword ptr -1F8h
var_1E0         = byte ptr -1E0h
var_1D8         = dword ptr -1D8h
var_1D0         = qword ptr -1D0h
var_1C8         = qword ptr -1C8h
var_1C0         = dword ptr -1C0h
var_1A0         = dword ptr -1A0h
var_198         = qword ptr -198h
var_190         = qword ptr -190h
var_188         = dword ptr -188h
var_168         = dword ptr -168h
var_160         = qword ptr -160h
var_158         = qword ptr -158h
var_150         = dword ptr -150h
var_130         = dword ptr -130h
var_128         = qword ptr -128h
var_120         = qword ptr -120h
var_118         = dword ptr -118h
var_F8          = dword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = dword ptr -0E0h
var_C0          = dword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = dword ptr -0A8h
var_50          = qword ptr -50h

; __unwind { // __GSHandlerCheck
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-248h]
                sub     rsp, 348h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+280h+var_50], rax
                xorps   xmm0, xmm0
                mov     [rsp+380h+var_308], r9
                xorps   xmm1, xmm1
                mov     [rbp+280h+var_218], rcx
                mov     rax, r8
                mov     [rbp+280h+var_2D0], 1
                xor     r8d, r8d
                mov     [rbp+280h+var_220], rax
                mov     [rbp+280h+var_2D8], r8
                mov     rdi, r9
                mov     [rbp+280h+var_2E0], r8d
                mov     r15d, r8d
                mov     [rbp+280h+var_2CC], r8d
                mov     r14d, r8d
                mov     [rbp+280h+var_2E4], r8d
                mov     esi, r8d
                mov     [rbp+280h+var_2E8], r8d
                mov     r12d, r8d
                mov     [rbp+280h+var_2F0], r8
                mov     r13d, r8d
                mov     [rbp+280h+var_300], r8d
                mov     [rbp+280h+var_2F8], r8
                mov     [rbp+280h+var_210], r8
                mov     [rbp+280h+var_2C4], r8d
                mov     [rbp+280h+var_288], r8
                mov     [rbp+280h+var_2C8], r8d
                mov     [rbp+280h+var_2C0], r8
                mov     [rsp+380h+var_310], r8d
                movups  [rbp+280h+var_2B8], xmm0
                movups  [rbp+280h+var_2A8], xmm1
                movups  [rbp+280h+var_298], xmm0
                movups  [rbp+280h+var_1F8], xmm1
                movups  [rbp+280h+var_250], xmm0
                movups  [rbp+280h+var_240], xmm1
                movups  [rbp+280h+var_280], xmm0
                movups  [rbp+280h+var_270], xmm1
                movups  [rbp+280h+var_260], xmm0
                test    rcx, rcx
                jnz     short loc_1408B6049
                mov     ecx, r8d
                jmp     short loc_1408B6050
; ---------------------------------------------------------------------------

loc_1408B6049:                          ; CODE XREF: sub_1408B5F80+C2↑j
                mov     rcx, [rcx+0E0h]

loc_1408B6050:                          ; CODE XREF: sub_1408B5F80+C7↑j
                lea     r8, [rbp+280h+var_2D8]
                xor     r9d, r9d
                mov     [rsp+380h+var_358], r8
                mov     r8, rax
                mov     dword ptr [rsp+380h+var_360], 20019h
                call    sub_14062CECC
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B6592
                xor     edx, edx
                lea     rcx, [rbp+280h+var_1E0]
                mov     r8d, 188h
                call    memset
                mov     edx, 130h
                mov     [rbp+280h+var_118], 4000000h
                mov     ecx, 7000000h
                mov     [rbp+280h+var_1D8], edx
                mov     [rbp+280h+var_1C0], ecx
                lea     rax, aHardwareids ; "HardwareIds"
                mov     [rbp+280h+var_1D0], rax
                lea     r8, [rbp+280h+var_1E0]
                mov     [rbp+280h+var_1A0], edx
                lea     rax, [rbp+280h+var_2B8]
                mov     [rbp+280h+var_1C8], rax
                mov     edx, 120h
                mov     [rbp+280h+var_188], ecx
                lea     rax, aCompatibleids_0 ; "CompatibleIds"
                mov     [rbp+280h+var_198], rax
                mov     ecx, 1000000h
                lea     rax, [rbp+280h+var_2A8]
                mov     [rbp+280h+var_168], edx
                mov     [rbp+280h+var_190], rax
                xor     r9d, r9d
                lea     rax, aContainerid_1 ; "ContainerId"
                mov     [rbp+280h+var_150], ecx
                mov     [rbp+280h+var_160], rax
                lea     rax, [rbp+280h+var_298]
                mov     [rbp+280h+var_158], rax
                lea     rax, aCapabilities_0 ; "Capabilities"
                mov     [rbp+280h+var_128], rax
                lea     rax, [rbp+280h+var_2E0]
                mov     [rbp+280h+var_120], rax
                lea     rax, aDescription_0 ; "Description"
                mov     [rbp+280h+var_F0], rax
                lea     rax, [rbp+280h+var_250]
                mov     [rbp+280h+var_E8], rax
                lea     rax, aLocationinfo ; "LocationInfo"
                mov     [rbp+280h+var_B8], rax
                lea     rax, [rbp+280h+var_240]
                mov     [rbp+280h+var_130], edx
                mov     [rbp+280h+var_F8], edx
                mov     [rbp+280h+var_E0], ecx
                mov     [rbp+280h+var_C0], edx
                mov     rdx, [rbp+280h+var_2D8]
                mov     [rbp+280h+var_A8], ecx
                mov     ecx, 0C0000000h
                mov     [rbp+280h+var_B0], rax
                mov     byte ptr [rsp+380h+var_358], 1
                call    sub_14062B088
                xor     edx, edx
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B6592
                lea     eax, [rdx+2]
                cmp     qword ptr [rbp+280h+var_2B8+8], rdx
                jz      short loc_1408B61C6
                cmp     word ptr [rbp+280h+var_2B8], ax
                ja      short loc_1408B61C6
                lea     rcx, [rbp+280h+var_2B8]
                call    RtlFreeUnicodeString
                xor     edx, edx
                lea     eax, [rdx+2]

loc_1408B61C6:                          ; CODE XREF: sub_1408B5F80+230↑j
                                        ; sub_1408B5F80+236↑j
                cmp     qword ptr [rbp+280h+var_2A8+8], rdx
                jz      short loc_1408B61DD
                cmp     word ptr [rbp+280h+var_2A8], ax
                ja      short loc_1408B61DD
                lea     rcx, [rbp+280h+var_2A8]
                call    RtlFreeUnicodeString
                xor     edx, edx

loc_1408B61DD:                          ; CODE XREF: sub_1408B5F80+24A↑j
                                        ; sub_1408B5F80+250↑j
                mov     rax, qword ptr [rbp+280h+var_298+8]
                test    rax, rax
                jz      short loc_1408B621B
                mov     ecx, 2
                cmp     word ptr [rbp+280h+var_298], cx
                jnb     short loc_1408B6200
                lea     rcx, [rbp+280h+var_298]
                call    RtlFreeUnicodeString
                mov     rax, qword ptr [rbp+280h+var_298+8]
                xor     edx, edx

loc_1408B6200:                          ; CODE XREF: sub_1408B5F80+26F↑j
                test    rax, rax
                jz      short loc_1408B621B
                lea     rdx, [rbp+280h+var_1F8]
                lea     rcx, [rbp+280h+var_298]
                call    RtlGUIDFromString
                xor     edx, edx
                test    eax, eax
                jns     short loc_1408B6225

loc_1408B621B:                          ; CODE XREF: sub_1408B5F80+264↑j
                                        ; sub_1408B5F80+283↑j
                xorps   xmm0, xmm0
                movups  [rbp+280h+var_1F8], xmm0

loc_1408B6225:                          ; CODE XREF: sub_1408B5F80+299↑j
                mov     eax, 2
                cmp     qword ptr [rbp+280h+var_250+8], rdx
                jz      short loc_1408B6244
                cmp     word ptr [rbp+280h+var_250], ax
                jnb     short loc_1408B6244
                lea     rcx, [rbp+280h+var_250]
                call    RtlFreeUnicodeString
                xor     edx, edx
                lea     eax, [rdx+2]

loc_1408B6244:                          ; CODE XREF: sub_1408B5F80+2AE↑j
                                        ; sub_1408B5F80+2B4↑j
                cmp     qword ptr [rbp+280h+var_240+8], rdx
                jz      short loc_1408B625B
                cmp     word ptr [rbp+280h+var_240], ax
                jnb     short loc_1408B625B
                lea     rcx, [rbp+280h+var_240]
                call    RtlFreeUnicodeString
                xor     edx, edx

loc_1408B625B:                          ; CODE XREF: sub_1408B5F80+2C8↑j
                                        ; sub_1408B5F80+2CE↑j
                cmp     qword ptr [rbp+280h+var_2B8+8], rdx
                jnz     short loc_1408B6271
                cmp     qword ptr [rbp+280h+var_2A8+8], rdx
                jnz     short loc_1408B6271
                mov     ebx, 0C00000BBh
                jmp     loc_1408B6592
; ---------------------------------------------------------------------------

loc_1408B6271:                          ; CODE XREF: sub_1408B5F80+2DF↑j
                                        ; sub_1408B5F80+2E5↑j
                mov     rax, qword ptr [rbp+280h+var_2B8+8]
                mov     rsi, [rdi]
                or      rdi, 0FFFFFFFFFFFFFFFFh
                cmp     rsi, cs:qword_140C44D00
                mov     [rbp+280h+var_208], rax
                mov     rax, qword ptr [rbp+280h+var_2A8+8]
                mov     [rbp+280h+var_200], rax
                mov     eax, 2
                mov     [rbp+280h+var_230], eax
                mov     [rbp+280h+var_22C], 3
                jz      loc_1408B654E

loc_1408B62A7:                          ; CODE XREF: sub_1408B5F80+5B6↓j
                mov     rcx, [rsi+20h]
                mov     rax, cs:qword_140C43320
                cmp     [rcx+8], rax
                jnz     loc_1408B652B
                lea     rdx, aSwd       ; "SWD\\"
                lea     rcx, [rbp+280h+var_270]
                call    RtlInitUnicodeString
                lea     rdx, [rsi+28h]
                mov     r8b, 1
                lea     rcx, [rbp+280h+var_270]
                call    RtlPrefixUnicodeString
                xor     edx, edx
                test    al, al
                jz      loc_1408B652B
                mov     rax, [rsi+30h]
                movzx   ecx, word ptr [rbp+280h+var_270]
                shr     rcx, 1
                lea     rdx, [rax+rcx*2]
                lea     rcx, [rbp+280h+var_280]
                call    RtlInitUnicodeString
                lea     rdx, aDriverenum ; "DRIVERENUM"
                lea     rcx, [rbp+280h+var_270]
                call    RtlInitUnicodeString
                mov     r8b, 1
                lea     rdx, [rbp+280h+var_280]
                lea     rcx, [rbp+280h+var_270]
                call    RtlPrefixUnicodeString
                xor     edx, edx
                test    al, al
                jz      loc_1408B652B
                movzx   ecx, word ptr [rbp+280h+var_270]
                mov     rax, qword ptr [rbp+280h+var_280+8]
                shr     rcx, 1
                cmp     word ptr [rax+rcx*2], 5Ch ; '\'
                jnz     loc_1408B652B
                test    r15d, r15d
                jnz     loc_1408B63DB
                mov     rdx, qword ptr [rbp+280h+var_2A8+8]
                lea     r8, [rbp+280h+var_2E4]
                mov     rcx, qword ptr [rbp+280h+var_2B8+8]
                call    sub_1407699D4
                xor     r15d, r15d
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B69CC
                test    byte ptr [rbp+280h+var_2E0], 8
                jnz     short loc_1408B63A1
                lea     rdx, aSwdGenericraw ; "SWD\\GenericRaw"
                lea     rcx, [rbp+280h+var_280]
                call    RtlInitUnicodeString
                lea     r9, [rbp+280h+var_2E8]
                xor     r8d, r8d
                mov     dl, 1
                lea     rcx, [rbp+280h+var_280]
                call    RtlHashUnicodeString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B69CC
                mov     r15d, [rbp+280h+var_2E4]
                add     r15d, [rbp+280h+var_2E8]
                jmp     short loc_1408B63A5
; ---------------------------------------------------------------------------

loc_1408B63A1:                          ; CODE XREF: sub_1408B5F80+3E9↑j
                mov     r15d, [rbp+280h+var_2E4]

loc_1408B63A5:                          ; CODE XREF: sub_1408B5F80+41F↑j
                lea     rdx, aSwdGeneric ; "SWD\\Generic"
                lea     rcx, [rbp+280h+var_280]
                call    RtlInitUnicodeString
                lea     r9, [rbp+280h+var_2E8]
                xor     r8d, r8d
                mov     dl, 1
                lea     rcx, [rbp+280h+var_280]
                call    RtlHashUnicodeString
                xor     edx, edx
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B6419
                add     r15d, [rbp+280h+var_2E8]
                mov     [rbp+280h+var_2CC], r15d
                mov     [rbp+280h+var_2E4], r15d

loc_1408B63DB:                          ; CODE XREF: sub_1408B5F80+3C1↑j
                cmp     [rsi+2ACh], r15d
                jnz     loc_1408B652B
                test    r14, r14
                jnz     short loc_1408B6425
                mov     edi, 800h
                lea     ecx, [r14+1]
                mov     edx, edi
                mov     [rbp+280h+var_300], edi
                mov     r8d, 20207050h
                call    ExAllocatePoolWithTag
                xor     edx, edx
                mov     [rbp+280h+var_2F0], rax
                mov     r14, rax
                test    rax, rax
                jnz     short loc_1408B6428
                mov     ebx, 0C000009Ah

loc_1408B6419:                          ; CODE XREF: sub_1408B5F80+44D↑j
                                        ; sub_1408B5F80+A47↓j
                mov     rsi, [rbp+280h+var_2F8]
                xor     r15d, r15d
                jmp     loc_1408B658D
; ---------------------------------------------------------------------------

loc_1408B6425:                          ; CODE XREF: sub_1408B5F80+46B↑j
                mov     edi, [rbp+280h+var_300]

loc_1408B6428:                          ; CODE XREF: sub_1408B5F80+492↑j
                mov     r15, [rbp+280h+var_2F0]
                lea     r12, [rbp+280h+var_208]
                mov     r14d, edx
                lea     r13, [rbp+280h+var_230]

loc_1408B6437:                          ; CODE XREF: sub_1408B5F80+597↓j
                mov     r9d, [r13+0]
                lea     rax, [rsp+380h+var_310]
                mov     rcx, cs:qword_140CF4378
                xor     r8d, r8d
                mov     dword ptr [rsp+380h+var_348], edx
                mov     [rsp+380h+var_350], rax
                lea     rax, [rbp+280h+var_2D0]
                mov     [rsp+380h+var_310], edi
                mov     rdx, [rsi+30h]
                mov     [rsp+380h+var_358], r15
                mov     [rsp+380h+var_360], rax
                call    sub_14062BA8C
                xor     edx, edx
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B6485
                cmp     [rbp+280h+var_2D0], 7
                jnz     short loc_1408B6485
                lea     eax, [rdx+2]
                cmp     [rsp+380h+var_310], eax
                jnb     short loc_1408B648B

loc_1408B6485:                          ; CODE XREF: sub_1408B5F80+4F4↑j
                                        ; sub_1408B5F80+4FA↑j
                mov     [r15], dx
                mov     ebx, edx

loc_1408B648B:                          ; CODE XREF: sub_1408B5F80+503↑j
                cmp     r14d, 1
                jnz     short loc_1408B64E6
                mov     rdi, r15
                cmp     [r15], dx
                jz      short loc_1408B64E3

loc_1408B649A:                          ; CODE XREF: sub_1408B5F80+55C↓j
                lea     rdx, aSwdGenericraw ; "SWD\\GenericRaw"
                mov     rcx, rdi
                call    _wcsicmp
                xor     edx, edx
                test    eax, eax
                jz      short loc_1408B64E0
                lea     rdx, aSwdGeneric ; "SWD\\Generic"
                mov     rcx, rdi
                call    _wcsicmp
                xor     edx, edx
                test    eax, eax
                jz      short loc_1408B64E0
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408B64C8:                          ; CODE XREF: sub_1408B5F80+54F↓j
                inc     rax
                cmp     [rdi+rax*2], dx
                jnz     short loc_1408B64C8
                lea     rdi, [rdi+rax*2]
                add     rdi, 2
                cmp     [rdi], dx
                jnz     short loc_1408B649A
                jmp     short loc_1408B64E3
; ---------------------------------------------------------------------------

loc_1408B64E0:                          ; CODE XREF: sub_1408B5F80+52D↑j
                                        ; sub_1408B5F80+542↑j
                mov     [rdi], dx

loc_1408B64E3:                          ; CODE XREF: sub_1408B5F80+518↑j
                                        ; sub_1408B5F80+55E↑j
                mov     edi, [rbp+280h+var_300]

loc_1408B64E6:                          ; CODE XREF: sub_1408B5F80+50F↑j
                mov     rcx, [r12]
                test    rcx, rcx
                jz      short loc_1408B6502
                mov     r8b, 1
                mov     rdx, r15
                call    sub_1408B3A04
                xor     edx, edx
                test    al, al
                jz      short loc_1408B651D
                jmp     short loc_1408B6508
; ---------------------------------------------------------------------------

loc_1408B6502:                          ; CODE XREF: sub_1408B5F80+56D↑j
                cmp     [r15], dx
                jnz     short loc_1408B651D

loc_1408B6508:                          ; CODE XREF: sub_1408B5F80+580↑j
                inc     r14d
                add     r13, 4
                add     r12, 8
                cmp     r14d, 2
                jb      loc_1408B6437

loc_1408B651D:                          ; CODE XREF: sub_1408B5F80+57E↑j
                                        ; sub_1408B5F80+586↑j
                mov     r15d, [rbp+280h+var_2CC]
                cmp     r14d, 2
                jnb     short loc_1408B653E
                mov     r14, [rbp+280h+var_2F0]

loc_1408B652B:                          ; CODE XREF: sub_1408B5F80+336↑j
                                        ; sub_1408B5F80+360↑j ...
                mov     rsi, [rsi+10h]
                cmp     rsi, cs:qword_140C44D00
                jnz     loc_1408B62A7
                jmp     short loc_1408B6543
; ---------------------------------------------------------------------------

loc_1408B653E:                          ; CODE XREF: sub_1408B5F80+5A5↑j
                mov     ebx, 0C0000704h

loc_1408B6543:                          ; CODE XREF: sub_1408B5F80+5BC↑j
                mov     r12d, [rbp+280h+var_2C8]
                or      rdi, 0FFFFFFFFFFFFFFFFh
                mov     r13d, r12d

loc_1408B654E:                          ; CODE XREF: sub_1408B5F80+321↑j
                test    ebx, ebx
                js      loc_1408B69C3
                mov     rcx, [rbp+280h+var_2D8]
                lea     r9, [rbp+280h+var_2F8]
                xor     r8d, r8d
                lea     rdx, aSecurity_0 ; "Security"
                call    sub_140739D08
                mov     rsi, [rbp+280h+var_2F8]
                xor     r15d, r15d
                mov     ebx, eax
                test    eax, eax
                jns     loc_1408B6636
                cmp     eax, 0C0000034h
                jz      loc_1408B6659

loc_1408B6589:                          ; CODE XREF: sub_1408B5F80+701↓j
                                        ; sub_1408B5F80+755↓j ...
                mov     r14, [rbp+280h+var_2F0]

loc_1408B658D:                          ; CODE XREF: sub_1408B5F80+4A0↑j
                                        ; sub_1408B5F80+A50↓j
                mov     rdi, [rsp+380h+var_308]

loc_1408B6592:                          ; CODE XREF: sub_1408B5F80+F0↑j
                                        ; sub_1408B5F80+223↑j ...
                lea     rcx, [rbp+280h+var_260]
                call    RtlFreeUnicodeString
                mov     rax, [rbp+280h+var_288]
                test    rax, rax
                jz      short loc_1408B65AE
                xor     edx, edx
                mov     rcx, rax
                call    ExFreePoolWithTag

loc_1408B65AE:                          ; CODE XREF: sub_1408B5F80+622↑j
                lea     rcx, [rbp+280h+var_2B8]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+280h+var_2A8]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+280h+var_298]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+280h+var_250]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+280h+var_240]
                call    RtlFreeUnicodeString
                test    rsi, rsi
                jz      short loc_1408B65EA
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408B65EA:                          ; CODE XREF: sub_1408B5F80+65E↑j
                test    r14, r14
                jz      short loc_1408B65F9
                xor     edx, edx
                mov     rcx, r14
                call    ExFreePoolWithTag

loc_1408B65F9:                          ; CODE XREF: sub_1408B5F80+66D↑j
                mov     rcx, [rbp+280h+var_2D8]
                test    rcx, rcx
                jz      short loc_1408B6607
                call    ZwClose

loc_1408B6607:                          ; CODE XREF: sub_1408B5F80+680↑j
                cmp     [rdi+8], r15d
                jl      short loc_1408B6610
                mov     [rdi+8], ebx

loc_1408B6610:                          ; CODE XREF: sub_1408B5F80+68B↑j
                xor     eax, eax
                mov     rcx, [rbp+280h+var_50]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 348h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 2

loc_1408B6636:                          ; CODE XREF: sub_1408B5F80+5F8↑j
                cmp     dword ptr [rsi+4], 3
                jnz     loc_1408B696A
                mov     eax, [rsi+0Ch]
                mov     [rbp+280h+var_2C4], eax
                cmp     eax, 28h ; '('
                jb      loc_1408B696A
                mov     eax, [rsi+8]
                add     rax, rsi
                mov     [rbp+280h+var_210], rax

loc_1408B6659:                          ; CODE XREF: sub_1408B5F80+603↑j
                mov     rcx, [rsp+380h+var_308]
                mov     rcx, [rcx]
                cmp     rcx, cs:qword_140C44D00
                jz      loc_1408B66FC
                mov     rcx, [rcx+20h]
                lea     r8, [rbp+280h+var_288]
                xor     edx, edx
                call    sub_14076ACF0
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B6589
                mov     r14, [rbp+280h+var_220]
                mov     rcx, rdi

loc_1408B668E:                          ; CODE XREF: sub_1408B5F80+716↓j
                inc     rcx
                cmp     [r14+rcx*2], r15w
                jnz     short loc_1408B668E
                mov     rbx, [rbp+280h+var_288]

loc_1408B669C:                          ; CODE XREF: sub_1408B5F80+724↓j
                inc     rdi
                cmp     [rbx+rdi*2], r15w
                jnz     short loc_1408B669C
                lea     eax, [rcx+2]
                add     ax, di
                add     ax, ax
                mov     word ptr [rbp+280h+var_260+2], ax
                lea     rax, [rdi+rcx]
                lea     rax, ds:4[rax*2]
                movzx   ecx, ax
                call    sub_140704930
                mov     qword ptr [rbp+280h+var_260+8], rax
                test    rax, rax
                jnz     short loc_1408B66DA

loc_1408B66D0:                          ; CODE XREF: sub_1408B5F80+78B↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B6589
; ---------------------------------------------------------------------------

loc_1408B66DA:                          ; CODE XREF: sub_1408B5F80+74E↑j
                mov     r9, rbx
                lea     rdx, aWsWs_0    ; "%ws&%ws"
                mov     r8, r14
                lea     rcx, [rbp+280h+var_260]
                call    sub_14036E1EC
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B6589
                jmp     short loc_1408B670D
; ---------------------------------------------------------------------------

loc_1408B66FC:                          ; CODE XREF: sub_1408B5F80+6E8↑j
                mov     rdx, [rbp+280h+var_220]
                lea     rcx, [rbp+280h+var_260]
                call    RtlCreateUnicodeString
                test    al, al
                jz      short loc_1408B66D0

loc_1408B670D:                          ; CODE XREF: sub_1408B5F80+77A↑j
                mov     rdi, [rbp+280h+var_218]
                lea     rax, [rsp+380h+var_310]
                mov     rdx, [rbp+280h+var_2D8]
                xor     r9d, r9d
                mov     [rsp+380h+var_350], rax
                xor     r8d, r8d
                mov     dword ptr [rsp+380h+var_358], r15d
                mov     rcx, rdi
                mov     [rsp+380h+var_360], r15
                call    sub_140766950
                mov     esi, 0C0000023h
                jmp     short loc_1408B67A7
; ---------------------------------------------------------------------------

loc_1408B673E:                          ; CODE XREF: sub_1408B5F80+82B↓j
                mov     eax, [rsp+380h+var_310]
                cmp     eax, r12d
                jbe     loc_1408B67FE
                test    r13, r13
                jz      short loc_1408B675E
                xor     edx, edx
                mov     rcx, r13
                call    ExFreePoolWithTag
                mov     eax, [rsp+380h+var_310]

loc_1408B675E:                          ; CODE XREF: sub_1408B5F80+7CE↑j
                mov     r12d, eax
                mov     ecx, 1
                mov     r8d, 20207050h
                lea     rdx, [r12+r12*4]
                shl     rdx, 2
                call    ExAllocatePoolWithTag
                mov     r13, rax
                test    rax, rax
                jz      short loc_1408B67F7
                mov     rdx, [rbp+280h+var_2D8]
                lea     rax, [rsp+380h+var_310]
                mov     [rsp+380h+var_350], rax
                xor     r9d, r9d
                mov     dword ptr [rsp+380h+var_358], r12d
                xor     r8d, r8d
                mov     rcx, rdi
                mov     [rsp+380h+var_360], r13
                call    sub_140766950

loc_1408B67A7:                          ; CODE XREF: sub_1408B5F80+7BC↑j
                mov     ebx, eax
                cmp     eax, esi
                jz      short loc_1408B673E
                mov     r12d, [rsp+380h+var_310]

loc_1408B67B2:                          ; CODE XREF: sub_1408B5F80+87C↓j
                test    ebx, ebx
                js      loc_1408B69AB
                test    r12d, r12d
                jz      loc_1408B68EA
                mov     eax, r12d
                mov     r8d, 20207050h
                mov     ecx, 1
                lea     rbx, [rax+rax*2]
                shl     rbx, 4
                mov     rdx, rbx
                call    ExAllocatePoolWithTag
                mov     [rbp+280h+var_2C0], rax
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408B6808
                mov     ebx, 0C000009Ah
                jmp     loc_1408B69AB
; ---------------------------------------------------------------------------

loc_1408B67F7:                          ; CODE XREF: sub_1408B5F80+7FF↑j
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B67B2
; ---------------------------------------------------------------------------

loc_1408B67FE:                          ; CODE XREF: sub_1408B5F80+7C5↑j
                mov     ebx, 0C00000E5h
                jmp     loc_1408B69AB
; ---------------------------------------------------------------------------

loc_1408B6808:                          ; CODE XREF: sub_1408B5F80+86B↑j
                mov     r8, rbx
                xor     edx, edx
                mov     rcx, rdi
                call    memset
                add     rdi, 24h ; '$'
                mov     esi, r15d
                mov     r14, r13

loc_1408B681F:                          ; CODE XREF: sub_1408B5F80+964↓j
                movups  xmm0, xmmword ptr [r14]
                mov     rdx, [rdi+4]
                movups  xmmword ptr [rdi-24h], xmm0
                mov     eax, [r14+10h]
                mov     [rdi-10h], r15d
                mov     [rdi-14h], eax
                mov     eax, esi
                lea     rcx, [rax+rax*4]
                lea     r15, ds:0[rcx*4]
                add     r15, r13

loc_1408B6847:                          ; CODE XREF: sub_1408B5F80+941↓j
                lea     rax, [rsp+380h+var_310]
                mov     r9, r15
                mov     [rsp+380h+var_348], rax
                lea     rcx, [rdi-4]
                mov     eax, [rdi]
                xor     r8d, r8d
                mov     dword ptr [rsp+380h+var_350], eax
                mov     [rsp+380h+var_358], rdx
                mov     rdx, [rbp+280h+var_2D8]
                mov     [rsp+380h+var_360], rcx
                mov     rcx, [rbp+280h+var_218]
                call    sub_1406CD55C
                mov     ebx, eax
                cmp     eax, 0C0000023h
                mov     eax, [rsp+380h+var_310]
                jnz     short loc_1408B68CA
                cmp     eax, [rdi]
                jbe     loc_1408B6960
                mov     rcx, [rdi+4]
                test    rcx, rcx
                jz      short loc_1408B68A1
                xor     edx, edx
                call    ExFreePoolWithTag
                mov     eax, [rsp+380h+var_310]

loc_1408B68A1:                          ; CODE XREF: sub_1408B5F80+914↑j
                mov     [rdi], eax
                mov     ecx, 1
                mov     edx, [rsp+380h+var_310]
                mov     r8d, 20207050h
                call    ExAllocatePoolWithTag
                mov     [rdi+4], rax
                mov     rdx, rax
                test    rax, rax
                jnz     short loc_1408B6847
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B68CC
; ---------------------------------------------------------------------------

loc_1408B68CA:                          ; CODE XREF: sub_1408B5F80+903↑j
                mov     [rdi], eax

loc_1408B68CC:                          ; CODE XREF: sub_1408B5F80+948↑j
                xor     r15d, r15d
                test    ebx, ebx
                js      loc_1408B696F
                inc     esi
                add     rdi, 30h ; '0'
                add     r14, 14h
                cmp     esi, r12d
                jb      loc_1408B681F

loc_1408B68EA:                          ; CODE XREF: sub_1408B5F80+83D↑j
                mov     rax, qword ptr [rbp+280h+var_298+8]
                mov     r9, qword ptr [rbp+280h+var_2B8+8]
                neg     rax
                mov     r8, qword ptr [rbp+280h+var_260+8]
                lea     rax, [rbp+280h+var_1F8]
                mov     [rsp+380h+var_320], r12d
                sbb     rcx, rcx
                and     rcx, rax
                mov     rax, [rsp+380h+var_308]
                mov     rdx, [rax]
                mov     rax, [rbp+280h+var_2C0]
                mov     [rsp+380h+var_328], rax
                mov     eax, [rbp+280h+var_2C4]
                mov     rdx, [rdx+30h]
                mov     [rsp+380h+var_330], eax
                mov     rax, [rbp+280h+var_210]
                mov     [rsp+380h+var_338], rax
                mov     rax, qword ptr [rbp+280h+var_240+8]
                mov     [rsp+380h+var_340], rax
                mov     rax, qword ptr [rbp+280h+var_250+8]
                mov     [rsp+380h+var_348], rax
                mov     eax, [rbp+280h+var_2E0]
                mov     dword ptr [rsp+380h+var_350], eax
                mov     rax, qword ptr [rbp+280h+var_2A8+8]
                mov     [rsp+380h+var_358], rcx
                mov     [rsp+380h+var_360], rax
                call    sub_1408B043C
                mov     ebx, eax
                jmp     short loc_1408B696F
; ---------------------------------------------------------------------------

loc_1408B6960:                          ; CODE XREF: sub_1408B5F80+907↑j
                mov     ebx, 0C00000E5h
                xor     r15d, r15d
                jmp     short loc_1408B696F
; ---------------------------------------------------------------------------

loc_1408B696A:                          ; CODE XREF: sub_1408B5F80+6BA↑j
                                        ; sub_1408B5F80+6C9↑j
                mov     ebx, 0C0000001h

loc_1408B696F:                          ; CODE XREF: sub_1408B5F80+951↑j
                                        ; sub_1408B5F80+9DE↑j ...
                mov     rax, [rbp+280h+var_2C0]
                test    rax, rax
                jz      short loc_1408B69AB
                test    r12d, r12d
                jz      short loc_1408B69A1
                lea     rdi, [rax+28h]
                mov     esi, r12d

loc_1408B6984:                          ; CODE XREF: sub_1408B5F80+A1B↓j
                mov     rcx, [rdi]
                test    rcx, rcx
                jz      short loc_1408B6993
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408B6993:                          ; CODE XREF: sub_1408B5F80+A0A↑j
                add     rdi, 30h ; '0'
                sub     rsi, 1
                jnz     short loc_1408B6984
                mov     rax, [rbp+280h+var_2C0]

loc_1408B69A1:                          ; CODE XREF: sub_1408B5F80+9FB↑j
                xor     edx, edx
                mov     rcx, rax
                call    ExFreePoolWithTag

loc_1408B69AB:                          ; CODE XREF: sub_1408B5F80+834↑j
                                        ; sub_1408B5F80+872↑j ...
                test    r13, r13
                jz      short loc_1408B69BA
                xor     edx, edx
                mov     rcx, r13
                call    ExFreePoolWithTag

loc_1408B69BA:                          ; CODE XREF: sub_1408B5F80+A2E↑j
                mov     rsi, [rbp+280h+var_2F8]
                jmp     loc_1408B6589
; ---------------------------------------------------------------------------

loc_1408B69C3:                          ; CODE XREF: sub_1408B5F80+5D0↑j
                mov     r14, [rbp+280h+var_2F0]
                jmp     loc_1408B6419
; ---------------------------------------------------------------------------

loc_1408B69CC:                          ; CODE XREF: sub_1408B5F80+3DF↑j
                                        ; sub_1408B5F80+411↑j
                mov     rsi, [rbp+280h+var_2F8]
                jmp     loc_1408B658D
; } // starts at 1408B5F80
sub_1408B5F80   endp

; ---------------------------------------------------------------------------
byte_1408B69D5  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DBDC↑o

; =============== S U B R O U T I N E =======================================


sub_1408B69DC   proc near               ; CODE XREF: sub_14073BC38+B4C96↑p
                                        ; DATA XREF: .pdata:000000014011DBE8↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                push    rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                sub     rsp, 20h
                and     qword ptr [rax+18h], 0
                lea     rdx, [rax+10h]
                and     qword ptr [rax+8], 0
                mov     rbp, rcx
                mov     rcx, [rcx+20h]
                xor     esi, esi
                and     qword ptr [rax+10h], 0
                xor     edi, edi
                call    sub_1408B4300
                test    eax, eax
                js      loc_1408B6AFA
                mov     r14, [rsp+48h+arg_8]
                lea     r8, [rsp+48h+arg_0]
                lea     rdx, [rsp+48h+arg_10]
                mov     rax, [r14+20h]
                mov     rcx, [r14+8]
                call    sub_1404079D0
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B6ABF
                mov     rcx, [rsp+48h+arg_10]
                test    rcx, rcx
                jz      short loc_1408B6ABD
                cmp     [rsp+48h+arg_0], rsi
                jz      short loc_1408B6ABD
                call    sub_1408B3D20
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408B6A5F

loc_1408B6A58:                          ; CODE XREF: sub_1408B69DC+93↓j
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B6ABF
; ---------------------------------------------------------------------------

loc_1408B6A5F:                          ; CODE XREF: sub_1408B69DC+7A↑j
                mov     rcx, [rsp+48h+arg_0]
                call    sub_1408B3D20
                mov     rdi, rax
                test    rax, rax
                jz      short loc_1408B6A58
                lea     rcx, unk_140C44CA0
                call    ExAcquireFastMutex
                mov     rcx, [rbp+1A0h]
                test    rcx, rcx
                jz      short loc_1408B6A90
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408B6A90:                          ; CODE XREF: sub_1408B69DC+AB↑j
                mov     rcx, [rbp+1A8h]
                test    rcx, rcx
                jz      short loc_1408B6AA3
                xor     edx, edx
                call    ExFreePoolWithTag

loc_1408B6AA3:                          ; CODE XREF: sub_1408B69DC+BE↑j
                lea     rcx, unk_140C44CA0
                mov     [rbp+1A0h], rsi
                mov     [rbp+1A8h], rdi
                call    KeReleaseGuardedMutex

loc_1408B6ABD:                          ; CODE XREF: sub_1408B69DC+66↑j
                                        ; sub_1408B69DC+6D↑j
                xor     ebx, ebx

loc_1408B6ABF:                          ; CODE XREF: sub_1408B69DC+58↑j
                                        ; sub_1408B69DC+81↑j
                mov     rax, [r14+18h]
                mov     rcx, [r14+8]
                call    sub_1404079D0
                xor     edx, edx
                mov     rcx, r14
                call    ExFreePoolWithTag
                test    ebx, ebx
                jns     short loc_1408B6AF8
                test    rsi, rsi
                jz      short loc_1408B6AE9
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408B6AE9:                          ; CODE XREF: sub_1408B69DC+101↑j
                test    rdi, rdi
                jz      short loc_1408B6AF8
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B6AF8:                          ; CODE XREF: sub_1408B69DC+FC↑j
                                        ; sub_1408B69DC+110↑j
                mov     eax, ebx

loc_1408B6AFA:                          ; CODE XREF: sub_1408B69DC+32↑j
                add     rsp, 20h
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B69DC   endp

byte_1408B6B06  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DBE8↑o

; =============== S U B R O U T I N E =======================================


sub_1408B6B0C   proc near               ; CODE XREF: sub_140738474+248↑p
                                        ; DATA XREF: .pdata:000000014011DBF4↑o

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 30h
                test    cs:byte_140C1313B, 10h
                mov     edi, r8d
                mov     esi, edx
                mov     rbx, rcx
                jz      short loc_1408B6B47
                mov     rax, [rcx+30h]
                lea     rdx, qword_140033F70
                mov     r9d, 1
                mov     [rsp+38h+var_18], rax
                call    sub_14050FFE8

loc_1408B6B47:                          ; CODE XREF: sub_1408B6B0C+1E↑j
                test    edi, edi
                jz      short loc_1408B6B5E
                test    dword ptr [rbx+18Ch], 400000h
                jz      short loc_1408B6B5E
                mov     edi, 0C000022Dh
                jmp     short loc_1408B6B90
; ---------------------------------------------------------------------------

loc_1408B6B5E:                          ; CODE XREF: sub_1408B6B0C+3D↑j
                                        ; sub_1408B6B0C+49↑j
                mov     r8d, esi
                mov     edx, 1
                mov     rcx, rbx
                call    sub_14073D9C8
                mov     esi, 1000000h
                mov     edi, eax
                test    [rbx+18Ch], esi
                jz      short loc_1408B6B90
                mov     rcx, [rbx+20h]
                call    sub_140393DF8
                mov     edx, esi
                mov     rcx, rbx
                call    sub_14073832C

loc_1408B6B90:                          ; CODE XREF: sub_1408B6B0C+50↑j
                                        ; sub_1408B6B0C+6F↑j
                test    cs:byte_140C1313B, 10h
                jz      short loc_1408B6BB4
                mov     rax, [rbx+30h]
                lea     rdx, qword_140033FB0
                mov     r9d, 1
                mov     [rsp+38h+var_18], rax
                call    sub_14050FFE8

loc_1408B6BB4:                          ; CODE XREF: sub_1408B6B0C+8B↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     eax, edi
                mov     rsi, [rsp+38h+arg_8]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B6B0C   endp

algn_1408B6BC7:                         ; DATA XREF: .pdata:000000014011DBF4↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408B6BD0   proc near               ; CODE XREF: sub_140738474+222↑p
                                        ; DATA XREF: .pdata:000000014011DC00↑o

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 30h
                test    cs:byte_140C1313B, 10h
                mov     rbx, rcx
                jz      short loc_1408B6C06
                mov     rax, [rcx+30h]
                lea     rdx, qword_140033F70
                mov     r9d, 2
                mov     [rsp+38h+var_18], rax
                call    sub_14050FFE8

loc_1408B6C06:                          ; CODE XREF: sub_1408B6BD0+19↑j
                mov     edi, [rbx+188h]
                test    edi, edi
                jns     short loc_1408B6C57
                cmp     edi, 0C00002D2h
                jz      short loc_1408B6C1F
                mov     esi, 0Ah
                jmp     short loc_1408B6C33
; ---------------------------------------------------------------------------

loc_1408B6C1F:                          ; CODE XREF: sub_1408B6BD0+46↑j
                mov     rcx, [rbx+30h]
                mov     r8d, 80000000h
                mov     esi, 0Eh
                call    sub_1408A3884

loc_1408B6C33:                          ; CODE XREF: sub_1408B6BD0+4D↑j
                mov     r9d, edi
                mov     r8d, esi
                xor     edx, edx
                mov     rcx, rbx
                call    sub_140745DFC
                cmp     dword ptr [rbx+238h], 0
                jz      short loc_1408B6C86
                mov     rcx, [rbx+20h]
                call    IoRequestDeviceEject
                jmp     short loc_1408B6C86
; ---------------------------------------------------------------------------

loc_1408B6C57:                          ; CODE XREF: sub_1408B6BD0+3E↑j
                mov     edx, 308h
                mov     rcx, rbx
                call    sub_14036D798
                mov     eax, [rbx+2C0h]
                test    al, 20h
                jz      short loc_1408B6C7E
                mov     rcx, [rbx+20h]
                call    sub_14036D8E4
                and     dword ptr [rbx+2C0h], 0FFFFFFDFh

loc_1408B6C7E:                          ; CODE XREF: sub_1408B6BD0+9C↑j
                mov     rcx, rbx
                call    sub_14073D548

loc_1408B6C86:                          ; CODE XREF: sub_1408B6BD0+7A↑j
                                        ; sub_1408B6BD0+85↑j
                test    cs:byte_140C1313B, 10h
                jz      short loc_1408B6CAA
                mov     rcx, [rbx+30h]
                lea     rdx, qword_140033FB0
                mov     r9d, 2
                mov     [rsp+38h+var_18], rcx
                call    sub_14050FFE8

loc_1408B6CAA:                          ; CODE XREF: sub_1408B6BD0+BD↑j
                mov     rbx, [rsp+38h+arg_0]
                mov     eax, edi
                mov     rsi, [rsp+38h+arg_8]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B6BD0   endp

byte_1408B6CBD  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC00↑o

; =============== S U B R O U T I N E =======================================


sub_1408B6CC4   proc near               ; CODE XREF: sub_140738BF8+B6B6F↑p
                                        ; DATA XREF: .pdata:000000014011DC0C↑o

var_48          = xmmword ptr -48h
var_38          = xmmword ptr -38h
var_28          = xmmword ptr -28h
var_8           = byte ptr -8

                mov     r11, rsp
                mov     [r11+8], rbx
                mov     [r11+10h], rbp
                mov     [r11+18h], rsi
                push    rdi
                sub     rsp, 70h
                xorps   xmm0, xmm0
                lea     rdx, qword_140030730
                xor     ebp, ebp
                xor     eax, eax
                movups  [rsp+78h+var_48], xmm0
                mov     rsi, rcx
                mov     rcx, [rcx+20h]
                movups  [rsp+78h+var_38], xmm0
                lea     edi, [rbp+1]
                movups  [rsp+78h+var_28], xmm0
                mov     [r11-18h], rax
                lea     r9d, [rbp+38h]
                lea     rax, [r11-48h]
                mov     r8d, edi
                mov     [r11-50h], rax
                and     [r11-58h], rbp
                call    sub_140764A64
                test    eax, eax
                js      short loc_1408B6D32
                mov     rcx, qword ptr [rsp+78h+var_48+8]
                mov     rax, qword ptr [rsp+78h+var_38+8]
                call    sub_1404079D0
                xor     ebx, ebx
                jmp     short loc_1408B6D67
; ---------------------------------------------------------------------------

loc_1408B6D32:                          ; CODE XREF: sub_1408B6CC4+59↑j
                mov     rcx, rsi
                call    sub_1408B6D94
                mov     ebx, eax
                mov     ebp, eax
                test    eax, eax
                js      short loc_1408B6D49
                mov     edi, 2
                jmp     short loc_1408B6D67
; ---------------------------------------------------------------------------

loc_1408B6D49:                          ; CODE XREF: sub_1408B6CC4+7C↑j
                xor     edx, edx
                mov     r9d, 0C0000022h
                mov     rcx, rsi
                lea     r8d, [rdx+30h]
                call    sub_140745DFC
                mov     ebx, 0C00002CEh
                mov     edi, 3

loc_1408B6D67:                          ; CODE XREF: sub_1408B6CC4+6C↑j
                                        ; sub_1408B6CC4+83↑j
                mov     r8d, ebp
                mov     edx, edi
                mov     rcx, rsi
                call    sub_1408B38D0
                lea     r11, [rsp+78h+var_8]
                mov     eax, ebx
                mov     rbx, [r11+10h]
                mov     rbp, [r11+18h]
                mov     rsi, [r11+20h]
                mov     rsp, r11
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B6CC4   endp

byte_1408B6D8D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC0C↑o

; =============== S U B R O U T I N E =======================================


sub_1408B6D94   proc near               ; CODE XREF: sub_1408B6CC4+71↑p
                                        ; DATA XREF: .pdata:000000014011DC18↑o

var_C8          = qword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = xmmword ptr -0B8h
var_A8          = xmmword ptr -0A8h
var_98          = qword ptr -98h
var_88          = byte ptr -88h
var_80          = qword ptr -80h
var_18          = qword ptr -18h
arg_8           = qword ptr  10h

; __unwind { // __GSHandlerCheck
                mov     [rsp+arg_8], rbx
                push    rdi
                sub     rsp, 0E0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rsp+0E8h+var_18], rax
                mov     rcx, [rcx+20h]
                lea     rdx, qword_140030720
                xor     edi, edi
                xor     eax, eax
                xorps   xmm0, xmm0
                mov     [rsp+0E8h+var_98], rax
                lea     rax, [rsp+0E8h+var_B8]
                mov     [rsp+0E8h+var_C0], rax
                and     [rsp+0E8h+var_C8], rdi
                lea     r9d, [rdi+28h]
                lea     r8d, [rdi+1]
                movups  [rsp+0E8h+var_B8], xmm0
                movups  [rsp+0E8h+var_A8], xmm0
                call    sub_140764A64
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B6E17
                mov     rcx, qword ptr [rsp+0E8h+var_B8+8]
                mov     rax, [rsp+0E8h+var_98]
                call    sub_1404079D0
                mov     rcx, qword ptr [rsp+0E8h+var_B8+8]
                mov     rdi, rax
                mov     rax, qword ptr [rsp+0E8h+var_A8+8]
                call    sub_1404079D0

loc_1408B6E17:                          ; CODE XREF: sub_1408B6D94+60↑j
                test    ebx, ebx
                js      short loc_1408B6E46
                xor     edx, edx
                lea     rcx, [rsp+0E8h+var_88]
                lea     r8d, [rdx+68h]
                call    memset
                mov     edx, 42h ; 'B'
                mov     [rsp+0E8h+var_80], rdi
                lea     r9, [rsp+0E8h+var_88]
                xor     r8d, r8d
                mov     cl, 2
                call    sub_14034DB1C
                mov     ebx, eax

loc_1408B6E46:                          ; CODE XREF: sub_1408B6D94+85↑j
                mov     eax, ebx
                mov     rcx, [rsp+0E8h+var_18]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0E8h+arg_8]
                add     rsp, 0E0h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B6D94
sub_1408B6D94   endp

algn_1408B6E6A:                         ; DATA XREF: .pdata:000000014011DC18↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408B6E70   proc near               ; CODE XREF: sub_140748CA0+EF1AB↑p
                                        ; sub_14074AC04+EE406↑p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                cmp     edx, 16h
                jz      short loc_1408B6E85
                cmp     r8d, 16h
                jnz     short loc_1408B6E98
                lea     edx, [r8-14h]
                jmp     short loc_1408B6E90
; ---------------------------------------------------------------------------

loc_1408B6E85:                          ; CODE XREF: sub_1408B6E70+7↑j
                cmp     r8d, 16h
                jz      short loc_1408B6E98
                mov     edx, 4

loc_1408B6E90:                          ; CODE XREF: sub_1408B6E70+13↑j
                mov     r8b, 1
                call    sub_1408B6EE8

loc_1408B6E98:                          ; CODE XREF: sub_1408B6E70+D↑j
                                        ; sub_1408B6E70+19↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B6E70   endp

byte_1408B6E9E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC24↑o

; =============== S U B R O U T I N E =======================================


sub_1408B6EA4   proc near               ; CODE XREF: sub_140737044+B7EF2↑p
                                        ; sub_14074A9AC+EE601↑p
                                        ; DATA XREF: ...
                sub     rsp, 28h
                mov     r11d, edx
                mov     edx, 1
                test    dl, r11b
                setz    r10b
                test    dl, r8b
                setnz   al
                test    al, r10b
                jnz     short loc_1408B6ED1
                test    dl, r11b
                jz      short loc_1408B6ED9
                test    dl, r8b
                jnz     short loc_1408B6ED9
                mov     edx, 3

loc_1408B6ED1:                          ; CODE XREF: sub_1408B6EA4+1C↑j
                mov     r8b, r9b
                call    sub_1408B6EE8

loc_1408B6ED9:                          ; CODE XREF: sub_1408B6EA4+21↑j
                                        ; sub_1408B6EA4+26↑j
                add     rsp, 28h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B6EA4   endp

byte_1408B6EDF  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC30↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B6EE8   proc near               ; CODE XREF: sub_140737044+B7F38↑p
                                        ; sub_1408B6E70+23↑p ...

var_100         = qword ptr -100h
var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = dword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = dword ptr -0D8h
var_D0          = dword ptr -0D0h
var_C0          = dword ptr -0C0h
var_BC          = dword ptr -0BCh
var_B8          = dword ptr -0B8h
var_B4          = dword ptr -0B4h
var_B0          = byte ptr -0B0h
var_AC          = dword ptr -0ACh
var_A8          = dword ptr -0A8h
var_A4          = dword ptr -0A4h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = xmmword ptr -90h
var_80          = xmmword ptr -80h
var_70          = xmmword ptr -70h
var_60          = byte ptr -60h
var_58          = xmmword ptr -58h
var_48          = xmmword ptr -48h
var_38          = xmmword ptr -38h
var_28          = qword ptr -28h
var_20          = byte ptr -20h

; __unwind { // __GSHandlerCheck
                mov     rax, rsp
                mov     [rax+10h], rbx
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-5Fh]
                sub     rsp, 100h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_28], rax
                xor     edi, edi
                mov     [rbp+57h+var_B0], r8b
                mov     [rbp+57h+var_98], rcx
                xorps   xmm0, xmm0
                mov     [rbp+57h+var_B4], edi
                xorps   xmm1, xmm1
                mov     [rbp+57h+var_A0], rdi
                mov     rbx, rcx
                mov     [rbp+57h+var_A8], edi
                lea     esi, [rdi+1]
                mov     [rbp+57h+var_BC], edi
                mov     r13d, edi
                mov     [rbp+57h+var_B8], edi
                mov     [rbp+57h+var_A4], edi
                mov     [rbp+57h+var_C0], edi
                movups  [rbp+57h+var_48], xmm0
                movups  [rbp+57h+var_38], xmm1
                movups  [rbp+57h+var_58], xmm0
                movups  [rbp+57h+var_80], xmm1
                movups  [rbp+57h+var_70], xmm0
                movups  [rbp+57h+var_90], xmm1
                test    edx, edx
                jz      short loc_1408B6FB3
                sub     edx, esi
                jz      short loc_1408B6FAE
                sub     edx, esi
                jz      short loc_1408B6FA6
                sub     edx, esi
                jz      short loc_1408B6F9E
                sub     edx, esi
                jz      short loc_1408B6F96
                sub     edx, esi
                jz      short loc_1408B6F8E
                cmp     edx, esi
                jz      short loc_1408B6F86
                mov     ebx, 0C0000001h
                jmp     loc_1408B74BB
; ---------------------------------------------------------------------------

loc_1408B6F86:                          ; CODE XREF: sub_1408B6EE8+92↑j
                mov     r14d, 6
                jmp     short loc_1408B6FB6
; ---------------------------------------------------------------------------

loc_1408B6F8E:                          ; CODE XREF: sub_1408B6EE8+8E↑j
                mov     r14d, 5
                jmp     short loc_1408B6FB6
; ---------------------------------------------------------------------------

loc_1408B6F96:                          ; CODE XREF: sub_1408B6EE8+8A↑j
                mov     r14d, 4
                jmp     short loc_1408B6FB6
; ---------------------------------------------------------------------------

loc_1408B6F9E:                          ; CODE XREF: sub_1408B6EE8+86↑j
                mov     r14d, 3
                jmp     short loc_1408B6FB6
; ---------------------------------------------------------------------------

loc_1408B6FA6:                          ; CODE XREF: sub_1408B6EE8+82↑j
                mov     r14d, 2
                jmp     short loc_1408B6FB6
; ---------------------------------------------------------------------------

loc_1408B6FAE:                          ; CODE XREF: sub_1408B6EE8+7E↑j
                mov     r14d, esi
                jmp     short loc_1408B6FB6
; ---------------------------------------------------------------------------

loc_1408B6FB3:                          ; CODE XREF: sub_1408B6EE8+7A↑j
                mov     r14d, edi

loc_1408B6FB6:                          ; CODE XREF: sub_1408B6EE8+A4↑j
                                        ; sub_1408B6EE8+AC↑j ...
                mov     r15d, 200h
                mov     [rbp+57h+var_AC], r15d
                mov     edx, r15d
                jmp     short loc_1408B6FDC
; ---------------------------------------------------------------------------

loc_1408B6FC5:                          ; CODE XREF: sub_1408B6EE8+107↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B74BB
; ---------------------------------------------------------------------------

loc_1408B6FCF:                          ; CODE XREF: sub_1408B6EE8+157↓j
                xor     edx, edx
                mov     rcx, r12
                call    ExFreePoolWithTag
                mov     edx, [rbp+57h+var_AC]

loc_1408B6FDC:                          ; CODE XREF: sub_1408B6EE8+DB↑j
                mov     r8d, 20207050h
                mov     ecx, esi
                call    ExAllocatePoolWithTag
                mov     r12, rax
                test    rax, rax
                jz      short loc_1408B6FC5
                mov     rdx, [rbx+8]
                lea     rax, [rbp+57h+var_AC]
                mov     rcx, cs:qword_140CF4378
                xor     r9d, r9d
                mov     [rsp+120h+var_D0], edi
                mov     r8d, esi
                mov     qword ptr [rsp+120h+var_D8], rax
                mov     eax, [rbp+57h+var_AC]
                mov     dword ptr [rsp+120h+var_E0], eax
                lea     rax, [rbp+57h+var_C0]
                mov     qword ptr [rsp+120h+var_E8], r12
                mov     [rsp+120h+var_F0], rax
                lea     rax, qword_14000D718
                mov     [rsp+120h+var_F8], rax
                mov     [rsp+120h+var_100], rdi
                call    sub_1406CC6BC
                cmp     eax, 0C0000023h
                jz      short loc_1408B6FCF
                test    eax, eax
                js      short loc_1408B7053
                cmp     [rbp+57h+var_C0], 2012h
                jnz     short loc_1408B7053
                mov     eax, [rbp+57h+var_AC]
                jmp     short loc_1408B7065
; ---------------------------------------------------------------------------

loc_1408B7053:                          ; CODE XREF: sub_1408B6EE8+15B↑j
                                        ; sub_1408B6EE8+164↑j
                xor     edx, edx
                mov     rcx, r12
                call    ExFreePoolWithTag
                mov     eax, edi
                mov     r12, rdi
                mov     [rbp+57h+var_AC], eax

loc_1408B7065:                          ; CODE XREF: sub_1408B6EE8+169↑j
                mov     word ptr [rbp+57h+var_70], ax
                mov     rdx, r15
                mov     word ptr [rbp+57h+var_70+2], ax
                mov     qword ptr [rbp+57h+var_70+8], r12
                mov     [rbp+57h+var_BC], r15d
                jmp     short loc_1408B7091
; ---------------------------------------------------------------------------

loc_1408B707A:                          ; CODE XREF: sub_1408B6EE8+1BC↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B749D
; ---------------------------------------------------------------------------

loc_1408B7084:                          ; CODE XREF: sub_1408B6EE8+20C↓j
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag
                mov     edx, [rbp+57h+var_BC]

loc_1408B7091:                          ; CODE XREF: sub_1408B6EE8+190↑j
                mov     r8d, 20207050h
                mov     ecx, esi
                call    ExAllocatePoolWithTag
                mov     r15, rax
                test    rax, rax
                jz      short loc_1408B707A
                mov     rdx, [rbx+8]
                lea     rax, [rbp+57h+var_BC]
                mov     rcx, cs:qword_140CF4378
                xor     r9d, r9d
                mov     [rsp+120h+var_D0], edi
                mov     r8d, esi
                mov     qword ptr [rsp+120h+var_D8], rax
                mov     eax, [rbp+57h+var_BC]
                mov     dword ptr [rsp+120h+var_E0], eax
                lea     rax, [rbp+57h+var_C0]
                mov     qword ptr [rsp+120h+var_E8], r15
                mov     [rsp+120h+var_F0], rax
                lea     rax, qword_140009D60
                mov     [rsp+120h+var_F8], rax
                mov     [rsp+120h+var_100], rdi
                call    sub_1406CC6BC
                cmp     eax, 0C0000023h
                jz      short loc_1408B7084
                test    eax, eax
                js      short loc_1408B7108
                cmp     [rbp+57h+var_C0], 2012h
                jnz     short loc_1408B7108
                mov     eax, [rbp+57h+var_BC]
                jmp     short loc_1408B711A
; ---------------------------------------------------------------------------

loc_1408B7108:                          ; CODE XREF: sub_1408B6EE8+210↑j
                                        ; sub_1408B6EE8+219↑j
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag
                mov     eax, edi
                mov     r15, rdi
                mov     [rbp+57h+var_BC], eax

loc_1408B711A:                          ; CODE XREF: sub_1408B6EE8+21E↑j
                mov     edx, 40h ; '@'
                mov     word ptr [rbp+57h+var_80], ax
                mov     [rbp+57h+var_B8], edx
                mov     word ptr [rbp+57h+var_80+2], ax
                mov     qword ptr [rbp+57h+var_80+8], r15
                jmp     short loc_1408B7147
; ---------------------------------------------------------------------------

loc_1408B7130:                          ; CODE XREF: sub_1408B6EE8+272↓j
                                        ; sub_1408B6EE8+377↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B748E
; ---------------------------------------------------------------------------

loc_1408B713A:                          ; CODE XREF: sub_1408B6EE8+2C2↓j
                xor     edx, edx
                mov     rcx, r13
                call    ExFreePoolWithTag
                mov     edx, [rbp+57h+var_B8]

loc_1408B7147:                          ; CODE XREF: sub_1408B6EE8+246↑j
                mov     r8d, 20207050h
                mov     ecx, esi
                call    ExAllocatePoolWithTag
                mov     r13, rax
                test    rax, rax
                jz      short loc_1408B7130
                mov     rdx, [rbx+8]
                lea     rax, [rbp+57h+var_B8]
                mov     rcx, cs:qword_140CF4378
                xor     r9d, r9d
                mov     [rsp+120h+var_D0], edi
                mov     r8d, esi
                mov     qword ptr [rsp+120h+var_D8], rax
                mov     eax, [rbp+57h+var_B8]
                mov     dword ptr [rsp+120h+var_E0], eax
                lea     rax, [rbp+57h+var_C0]
                mov     qword ptr [rsp+120h+var_E8], r13
                mov     [rsp+120h+var_F0], rax
                lea     rax, qword_14001D248
                mov     [rsp+120h+var_F8], rax
                mov     [rsp+120h+var_100], rdi
                call    sub_1406CC6BC
                cmp     eax, 0C0000023h
                jz      short loc_1408B713A
                test    eax, eax
                js      short loc_1408B71BB
                cmp     [rbp+57h+var_C0], 12h
                jnz     short loc_1408B71BB
                mov     eax, [rbp+57h+var_B8]
                jmp     short loc_1408B71CD
; ---------------------------------------------------------------------------

loc_1408B71BB:                          ; CODE XREF: sub_1408B6EE8+2C6↑j
                                        ; sub_1408B6EE8+2CC↑j
                xor     edx, edx
                mov     rcx, r13
                call    ExFreePoolWithTag
                mov     eax, edi
                mov     r13, rdi
                mov     [rbp+57h+var_B8], eax

loc_1408B71CD:                          ; CODE XREF: sub_1408B6EE8+2D1↑j
                mov     rdx, [rbx+8]
                mov     ecx, 10h
                mov     [rsp+120h+var_D0], edi
                xor     r9d, r9d
                mov     word ptr [rbp+57h+var_90], ax
                mov     r8d, esi
                mov     word ptr [rbp+57h+var_90+2], ax
                lea     rax, [rbp+57h+var_A4]
                mov     qword ptr [rsp+120h+var_D8], rax
                lea     rax, [rbp+57h+var_38]
                mov     dword ptr [rsp+120h+var_E0], ecx
                mov     qword ptr [rsp+120h+var_E8], rax
                lea     rax, [rbp+57h+var_C0]
                mov     [rsp+120h+var_F0], rax
                lea     rax, xmmword_14000AD10
                mov     [rbp+57h+var_A4], ecx
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+120h+var_F8], rax
                mov     [rsp+120h+var_100], rdi
                mov     qword ptr [rbp+57h+var_90+8], r13
                call    sub_1406CC6BC
                test    eax, eax
                js      short loc_1408B723B
                cmp     [rbp+57h+var_C0], 0Dh
                jnz     short loc_1408B723B
                cmp     [rbp+57h+var_A4], 10h
                jz      short loc_1408B7242

loc_1408B723B:                          ; CODE XREF: sub_1408B6EE8+345↑j
                                        ; sub_1408B6EE8+34B↑j
                xorps   xmm0, xmm0
                movups  [rbp+57h+var_38], xmm0

loc_1408B7242:                          ; CODE XREF: sub_1408B6EE8+351↑j
                mov     eax, 20h ; ' '
                mov     ecx, esi
                mov     [rbp+57h+var_A8], eax
                mov     edx, eax

loc_1408B724E:                          ; CODE XREF: sub_1408B6EE8+42E↓j
                mov     r8d, 20207050h
                call    ExAllocatePoolWithTag
                mov     rsi, rax
                test    rax, rax
                jz      loc_1408B7130
                mov     rdx, [rbx+8]
                lea     rax, [rbp+57h+var_A8]
                mov     rcx, cs:qword_140CF4378
                xor     r9d, r9d
                mov     [rsp+120h+var_D0], edi
                mov     qword ptr [rsp+120h+var_D8], rax
                mov     eax, [rbp+57h+var_A8]
                mov     dword ptr [rsp+120h+var_E0], eax
                lea     r8d, [r9+1]
                mov     qword ptr [rsp+120h+var_E8], rsi
                lea     rax, [rbp+57h+var_C0]
                mov     [rsp+120h+var_F0], rax
                lea     rax, qword_14001C9F8
                mov     [rsp+120h+var_F8], rax
                mov     [rsp+120h+var_100], rdi
                call    sub_1406CC6BC
                cmp     eax, 0C0000023h
                jz      short loc_1408B7304
                test    eax, eax
                js      short loc_1408B72C0
                cmp     [rbp+57h+var_C0], 12h
                jz      short loc_1408B72D0

loc_1408B72C0:                          ; CODE XREF: sub_1408B6EE8+3D0↑j
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag
                mov     rsi, rdi
                mov     [rbp+57h+var_A8], edi

loc_1408B72D0:                          ; CODE XREF: sub_1408B6EE8+3D6↑j
                mov     rdx, rsi
                lea     rcx, [rbp+57h+var_58]
                call    RtlInitUnicodeString
                mov     edx, 20h ; ' '
                mov     r8d, 20207050h
                mov     [rbp+57h+var_B4], edx
                lea     ecx, [rdx-1Fh]
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408B731B

loc_1408B72FA:                          ; CODE XREF: sub_1408B6EE8+493↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B747F
; ---------------------------------------------------------------------------

loc_1408B7304:                          ; CODE XREF: sub_1408B6EE8+3CC↑j
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag
                mov     edx, [rbp+57h+var_A8]
                mov     ecx, 1
                jmp     loc_1408B724E
; ---------------------------------------------------------------------------

loc_1408B731B:                          ; CODE XREF: sub_1408B6EE8+410↑j
                and     [rsp+120h+var_D0], 0
                lea     rax, [rbp+57h+var_B4]
                mov     rdx, [rbx+8]
                mov     r8d, 1
                mov     qword ptr [rsp+120h+var_D8], rax
                mov     eax, [rbp+57h+var_B4]
                mov     dword ptr [rsp+120h+var_E0], eax
                lea     rax, [rbp+57h+var_C0]
                mov     qword ptr [rsp+120h+var_E8], rdi
                mov     [rsp+120h+var_F0], rax
                lea     rax, qword_14000A550
                mov     [rsp+120h+var_F8], rax
                jmp     short loc_1408B73BB
; ---------------------------------------------------------------------------

loc_1408B7356:                          ; CODE XREF: sub_1408B6EE8+4EF↓j
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag
                mov     edx, [rbp+57h+var_B4]
                mov     ebx, 1
                mov     ecx, ebx
                mov     r8d, 20207050h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jz      loc_1408B72FA
                and     [rsp+120h+var_D0], 0
                lea     rax, [rbp+57h+var_B4]
                mov     qword ptr [rsp+120h+var_D8], rax
                mov     r8d, ebx
                mov     eax, [rbp+57h+var_B4]
                mov     dword ptr [rsp+120h+var_E0], eax
                lea     rax, [rbp+57h+var_C0]
                mov     qword ptr [rsp+120h+var_E8], rdi
                mov     [rsp+120h+var_F0], rax
                lea     rax, qword_14000A550
                mov     [rsp+120h+var_F8], rax
                mov     rax, [rbp+57h+var_98]
                mov     rdx, [rax+8]

loc_1408B73BB:                          ; CODE XREF: sub_1408B6EE8+46C↑j
                mov     rcx, cs:qword_140CF4378
                xor     r9d, r9d
                and     [rsp+120h+var_100], 0
                call    sub_1406CC6BC
                mov     ebx, eax
                cmp     eax, 0C0000023h
                jz      loc_1408B7356
                test    eax, eax
                js      short loc_1408B7418
                cmp     [rbp+57h+var_C0], 19h
                jnz     short loc_1408B740D
                mov     edx, [rbp+57h+var_B4]
                lea     r9, [rbp+57h+var_60]
                lea     r8, [rbp+57h+var_A0]
                mov     rcx, rdi
                call    sub_1407009E0
                test    eax, eax
                mov     [rbp+57h+var_C0], 12h
                mov     rdx, rdi
                cmovnz  rdx, [rbp+57h+var_A0]
                jmp     short loc_1408B742B
; ---------------------------------------------------------------------------

loc_1408B740D:                          ; CODE XREF: sub_1408B6EE8+4FD↑j
                cmp     [rbp+57h+var_C0], 12h
                jnz     short loc_1408B7418
                mov     rdx, rdi
                jmp     short loc_1408B742B
; ---------------------------------------------------------------------------

loc_1408B7418:                          ; CODE XREF: sub_1408B6EE8+4F7↑j
                                        ; sub_1408B6EE8+529↑j
                xor     edx, edx
                mov     rcx, rdi
                xor     ebx, ebx
                call    ExFreePoolWithTag
                and     [rbp+57h+var_B4], ebx
                xor     edi, edi
                xor     edx, edx

loc_1408B742B:                          ; CODE XREF: sub_1408B6EE8+523↑j
                                        ; sub_1408B6EE8+52E↑j
                lea     rcx, [rbp+57h+var_48]
                call    RtlInitUnicodeString
                mov     al, [rbp+57h+var_B0]
                lea     r9, [rbp+57h+var_80]
                mov     rcx, [rbp+57h+var_98]
                lea     r8, [rbp+57h+var_70]
                mov     byte ptr [rsp+120h+var_E0], al
                lea     rdx, [rbp+57h+var_48]
                mov     [rsp+120h+var_E8], r14d
                lea     rax, [rbp+57h+var_58]
                mov     [rsp+120h+var_F0], rax
                lea     rax, [rbp+57h+var_38]
                mov     [rsp+120h+var_F8], rax
                lea     rax, [rbp+57h+var_90]
                mov     [rsp+120h+var_100], rax
                call    sub_14091F548
                test    rdi, rdi
                jz      short loc_1408B747F
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B747F:                          ; CODE XREF: sub_1408B6EE8+417↑j
                                        ; sub_1408B6EE8+58B↑j
                test    rsi, rsi
                jz      short loc_1408B748E
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408B748E:                          ; CODE XREF: sub_1408B6EE8+24D↑j
                                        ; sub_1408B6EE8+59A↑j
                test    r15, r15
                jz      short loc_1408B749D
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag

loc_1408B749D:                          ; CODE XREF: sub_1408B6EE8+197↑j
                                        ; sub_1408B6EE8+5A9↑j
                test    r12, r12
                jz      short loc_1408B74AC
                xor     edx, edx
                mov     rcx, r12
                call    ExFreePoolWithTag

loc_1408B74AC:                          ; CODE XREF: sub_1408B6EE8+5B8↑j
                test    r13, r13
                jz      short loc_1408B74BB
                xor     edx, edx
                mov     rcx, r13
                call    ExFreePoolWithTag

loc_1408B74BB:                          ; CODE XREF: sub_1408B6EE8+99↑j
                                        ; sub_1408B6EE8+E2↑j ...
                mov     eax, ebx
                mov     rcx, [rbp+57h+var_28]
                xor     rcx, rsp
                call    __security_check_cookie
                lea     r11, [rsp+120h+var_20]
                mov     rbx, [r11+38h]
                mov     rsi, [r11+40h]
                mov     rdi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B6EE8
sub_1408B6EE8   endp

byte_1408B74EB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC3C↑o

; =============== S U B R O U T I N E =======================================


sub_1408B74F4   proc near               ; CODE XREF: sub_14073C170+B4910↑p
                                        ; DATA XREF: .pdata:000000014011DC48↑o

var_28          = dword ptr -28h
var_18          = dword ptr -18h
arg_0           = byte ptr  8
arg_8           = dword ptr  10h
arg_10          = dword ptr  18h

                mov     r11, rsp
                push    rbx
                sub     rsp, 60h
                and     [rsp+68h+var_18], 0
                lea     rax, [r11+18h]
                mov     rdx, [rcx+8]
                xor     r9d, r9d
                and     [rsp+68h+arg_8], 0
                mov     rbx, rcx
                mov     rcx, cs:qword_140CF4378
                mov     [r11-20h], rax
                lea     rax, [r11+8]
                mov     [rsp+68h+var_28], 1
                lea     r8d, [r9+1]
                mov     [r11-30h], rax
                lea     rax, [r11+10h]
                mov     [r11-38h], rax
                lea     rax, qword_14000A568
                mov     [r11-40h], rax
                and     qword ptr [r11-48h], 0
                mov     [rsp+68h+arg_0], 0
                mov     dword ptr [r11+18h], 1
                call    sub_1406CC6BC
                test    eax, eax
                js      short loc_1408B7586
                cmp     [rsp+68h+arg_8], 11h
                jnz     short loc_1408B7586
                cmp     [rsp+68h+arg_10], 1
                jnz     short loc_1408B7586
                cmp     [rsp+68h+arg_0], 0FFh
                jz      short loc_1408B7586
                mov     r8b, 1
                xor     edx, edx
                mov     rcx, rbx
                call    sub_1408B6EE8

loc_1408B7586:                          ; CODE XREF: sub_1408B74F4+6B↑j
                                        ; sub_1408B74F4+72↑j ...
                add     rsp, 60h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B74F4   endp

byte_1408B758D  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC48↑o

; =============== S U B R O U T I N E =======================================


sub_1408B7594   proc near               ; CODE XREF: sub_1407A3328+B2930↑p
                                        ; sub_1407A347C+B287F↑p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                mov     eax, [rcx+40h]
                mov     rbx, rcx
                test    al, 10h
                jz      short loc_1408B75B2
                mov     rcx, [rcx+48h]
                test    rcx, rcx
                jz      short loc_1408B75B2
                call    ZwClose

loc_1408B75B2:                          ; CODE XREF: sub_1408B7594+E↑j
                                        ; sub_1408B7594+17↑j
                mov     rax, [rbx]
                test    rax, rax
                jz      short loc_1408B75D0
                cmp     [rax+8], rbx
                jnz     short loc_1408B762B
                mov     rcx, [rbx+8]
                cmp     [rcx], rbx
                jnz     short loc_1408B762B
                mov     [rcx], rax
                mov     [rax+8], rcx

loc_1408B75D0:                          ; CODE XREF: sub_1408B7594+24↑j
                lea     rcx, [rbx+10h]
                call    RtlFreeUnicodeString
                lea     rcx, [rbx+20h]
                call    RtlFreeUnicodeString
                lea     rcx, [rbx+30h]
                call    RtlFreeUnicodeString
                lea     rcx, [rbx+1F8h]
                call    RtlFreeUnicodeString
                cmp     byte ptr [rbx+0C0h], 0
                jz      short loc_1408B7609
                lea     rcx, [rbx+58h]
                call    ExDeleteResourceLite

loc_1408B7609:                          ; CODE XREF: sub_1408B7594+6A↑j
                mov     rcx, [rbx+1D8h]
                test    rcx, rcx
                jz      short loc_1408B761A
                call    ZwClose

loc_1408B761A:                          ; CODE XREF: sub_1408B7594+7F↑j
                xor     edx, edx
                mov     rcx, rbx
                call    ExFreePoolWithTag
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408B762B:                          ; CODE XREF: sub_1408B7594+2A↑j
                                        ; sub_1408B7594+33↑j
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
sub_1408B7594   endp

; ---------------------------------------------------------------------------
algn_1408B7632:                         ; DATA XREF: .pdata:000000014011DC54↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408B7638   proc near               ; CODE XREF: sub_140A54218+2F7CF↓p
                                        ; DATA XREF: .pdata:000000014011DC60↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, cs:qword_140C43000
                lea     rdi, qword_140C43000
                jmp     short loc_1408B7668
; ---------------------------------------------------------------------------

loc_1408B7652:                          ; CODE XREF: sub_1408B7638+33↓j
                mov     edx, [rbx+40h]
                xor     r8d, r8d
                mov     rcx, [rbx+18h]
                call    sub_1408A8218
                test    al, al
                jz      short loc_1408B766D
                mov     rbx, [rbx]

loc_1408B7668:                          ; CODE XREF: sub_1408B7638+18↑j
                cmp     rbx, rdi
                jnz     short loc_1408B7652

loc_1408B766D:                          ; CODE XREF: sub_1408B7638+2B↑j
                mov     rbx, [rsp+28h+arg_0]
                xor     eax, eax
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B7638   endp

byte_1408B767B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC60↑o

; =============== S U B R O U T I N E =======================================


sub_1408B7684   proc near               ; CODE XREF: sub_1408B935C+10D↓p
                                        ; sub_1408B935C+150↓p ...

var_38          = word ptr -38h
var_30          = qword ptr -30h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 30h
                movups  xmm0, xmmword ptr [rcx]
                xor     ebx, ebx
                mov     rbp, rdx
                mov     r13, rcx
                movups  xmmword ptr [rax-38h], xmm0
                psrldq  xmm0, 8
                movq    rsi, xmm0
                mov     [rax-30h], rsi
                cmp     [rsi], bx
                jz      loc_1408B778A
                movzx   r15d, word ptr [rax-38h]

loc_1408B76CB:                          ; CODE XREF: sub_1408B7684+FB↓j
                mov     r8b, 1
                lea     rcx, [rsp+58h+var_38]
                mov     rdx, rbp
                call    RtlFindUnicodeSubstring
                mov     rdi, rax
                test    rax, rax
                jz      loc_1408B778A
                movzx   r14d, word ptr [rbp+0]
                shr     r14d, 1
                cmp     rax, [r13+8]
                jbe     short loc_1408B7733
                movzx   r12d, word ptr [rax-2]
                mov     rax, [rbp+8]
                movzx   ecx, word ptr [rax]
                cmp     cx, 5Ch ; '\'
                jnz     short loc_1408B771D
                movzx   ecx, r12w
                call    iswalnum
                test    eax, eax
                jnz     short loc_1408B7768
                cmp     r12w, 5Ch ; '\'
                jnz     short loc_1408B7733
                jmp     short loc_1408B7768
; ---------------------------------------------------------------------------

loc_1408B771D:                          ; CODE XREF: sub_1408B7684+81↑j
                call    sub_1403D244C
                test    eax, eax
                jz      short loc_1408B7733
                movzx   ecx, r12w
                call    iswalnum
                test    eax, eax
                jnz     short loc_1408B7768

loc_1408B7733:                          ; CODE XREF: sub_1408B7684+6F↑j
                                        ; sub_1408B7684+95↑j ...
                cmp     r15w, [rbp+0]
                jnz     short loc_1408B7741
                cmp     [rdi+r14*2], bx
                jz      short loc_1408B7787

loc_1408B7741:                          ; CODE XREF: sub_1408B7684+B4↑j
                mov     r8, [rbp+8]
                lea     eax, [r14-1]
                movzx   eax, word ptr [r8+rax*2]
                cmp     ax, 5Ch ; '\'
                jz      short loc_1408B7787
                cmp     word ptr [rdi+r14*2], 5Ch ; '\'
                jz      short loc_1408B7787
                cmp     ax, 25h ; '%'
                jnz     short loc_1408B7768
                cmp     [r8], ax
                jz      short loc_1408B7787

loc_1408B7768:                          ; CODE XREF: sub_1408B7684+8E↑j
                                        ; sub_1408B7684+97↑j ...
                sub     r15w, [rbp+0]
                lea     rsi, [rsi+r14*2]
                mov     [rsp+58h+var_30], rsi
                mov     [rsp+58h+var_38], r15w
                cmp     [rsi], bx
                jnz     loc_1408B76CB
                jmp     short loc_1408B778A
; ---------------------------------------------------------------------------

loc_1408B7787:                          ; CODE XREF: sub_1408B7684+BB↑j
                                        ; sub_1408B7684+CE↑j ...
                mov     rbx, rdi

loc_1408B778A:                          ; CODE XREF: sub_1408B7684+3C↑j
                                        ; sub_1408B7684+5D↑j ...
                mov     rbp, [rsp+58h+arg_8]
                mov     rax, rbx
                mov     rbx, [rsp+58h+arg_0]
                mov     rsi, [rsp+58h+arg_10]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B7684   endp

byte_1408B77AB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC6C↑o

; =============== S U B R O U T I N E =======================================


sub_1408B77B4   proc near               ; CODE XREF: sub_1408B8608+371↓p
                                        ; sub_1408B90C4+F3↓p ...

var_48          = qword ptr -48h
var_40          = qword ptr -40h
var_38          = qword ptr -38h
var_30          = qword ptr -30h
var_28          = dword ptr -28h
var_20          = qword ptr -20h
var_18          = dword ptr -18h
var_8           = byte ptr -8
arg_0           = dword ptr  8
arg_8           = dword ptr  10h

                mov     rax, rsp
                mov     [rax+18h], rbx
                mov     [rax+20h], rsi
                push    rdi
                sub     rsp, 60h
                xor     esi, esi
                mov     rdi, rdx
                mov     rbx, rcx
                mov     r8d, esi
                mov     [rax+8], esi
                mov     [rax+10h], esi
                mov     [rdx], rsi
                cmp     [rcx+200h], rsi
                jnz     loc_1408B78D8
                mov     [rcx+1F8h], si
                mov     ecx, 208h
                mov     [rbx+1FAh], cx
                call    sub_140704930
                mov     [rbx+200h], rax
                mov     rcx, rax
                test    rax, rax
                jnz     short loc_1408B7817
                mov     r8d, 0C000009Ah
                jmp     loc_1408B78F6
; ---------------------------------------------------------------------------

loc_1408B7817:                          ; CODE XREF: sub_1408B77B4+56↑j
                movzx   eax, word ptr [rbx+1FAh]
                lea     rdx, [rsp+68h+arg_8]
                mov     r9, [rbx+48h]
                mov     r8d, 7
                mov     [rsp+68h+var_18], esi
                mov     [rsp+68h+var_20], rdx
                mov     rdx, [rbx+18h]
                mov     [rsp+68h+var_28], eax
                lea     rax, [rsp+68h+arg_0]
                mov     [rsp+68h+var_30], rcx
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+68h+var_38], rax
                lea     rax, qword_14001E190
                mov     [rsp+68h+var_40], rax
                mov     [rsp+68h+var_48], rsi
                call    sub_1406CC6BC
                mov     r8d, eax
                test    eax, eax
                js      short loc_1408B78CB
                cmp     [rsp+68h+arg_0], 12h
                jnz     short loc_1408B78CB
                mov     edx, [rsp+68h+arg_8]
                mov     eax, 2
                cmp     edx, eax
                jbe     short loc_1408B78CB
                mov     r9, [rbx+200h]
                mov     ecx, edx
                shr     rcx, 1
                cmp     [r9+rcx*2-2], si
                jnz     short loc_1408B78CB
                sub     dx, ax
                mov     [rbx+1F8h], dx
                cmp     dx, ax
                jbe     short loc_1408B78D8
                movzx   eax, dx
                shr     rax, 1
                cmp     word ptr [r9+rax*2-2], 5Ch ; '\'
                jnz     short loc_1408B78D8
                mov     [r9+rax*2-2], si
                mov     eax, 0FFFEh
                add     [rbx+1F8h], ax
                jmp     short loc_1408B78D8
; ---------------------------------------------------------------------------

loc_1408B78CB:                          ; CODE XREF: sub_1408B77B4+BB↑j
                                        ; sub_1408B77B4+C2↑j ...
                mov     rax, [rbx+200h]
                mov     r8d, esi
                mov     [rax], si

loc_1408B78D8:                          ; CODE XREF: sub_1408B77B4+2B↑j
                                        ; sub_1408B77B4+F2↑j ...
                mov     rax, [rbx+200h]
                cmp     [rax], si
                jnz     short loc_1408B78EC
                mov     r8d, 0C0000225h
                jmp     short loc_1408B78F6
; ---------------------------------------------------------------------------

loc_1408B78EC:                          ; CODE XREF: sub_1408B77B4+12E↑j
                lea     rax, [rbx+1F8h]
                mov     [rdi], rax

loc_1408B78F6:                          ; CODE XREF: sub_1408B77B4+5E↑j
                                        ; sub_1408B77B4+136↑j
                lea     r11, [rsp+68h+var_8]
                mov     eax, r8d
                mov     rbx, [r11+20h]
                mov     rsi, [r11+28h]
                mov     rsp, r11
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B77B4   endp

byte_1408B790C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC78↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B7914   proc near               ; CODE XREF: sub_1406CAF50+15293D↑p
                                        ; DATA XREF: .pdata:000000014011DC84↑o

var_30          = xmmword ptr -30h
var_20          = xmmword ptr -20h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  10h
arg_8           = qword ptr  18h

                mov     [rsp-8+arg_0], rbx
                push    rbp
                mov     rbp, rsp
                sub     rsp, 50h
                and     [rbp+arg_8], 0
                xorps   xmm0, xmm0
                mov     rbx, rcx
                xorps   xmm1, xmm1
                lea     rcx, [rbp+var_20]
                xor     edx, edx
                movups  [rbp+var_30], xmm0
                movups  [rbp+var_20], xmm0
                movups  [rbp+var_10], xmm1
                call    RtlInitUnicodeString
                xor     edx, edx
                lea     rcx, [rbp+var_10]
                call    RtlInitUnicodeString
                mov     rdx, rbx
                lea     rcx, [rbp+var_30]
                call    RtlInitUnicodeString
                lea     rdx, [rbp+arg_8]
                lea     rcx, [rbp+var_30]
                call    sub_1405102DC
                test    eax, eax
                js      short loc_1408B798A
                mov     rax, [rbp+arg_8]
                mov     ecx, [rax+40h]
                and     cl, 1
                neg     cl
                sbb     ebx, ebx
                and     ebx, 80000022h
                add     ebx, 40000000h
                jmp     short loc_1408B798F
; ---------------------------------------------------------------------------

loc_1408B798A:                          ; CODE XREF: sub_1408B7914+58↑j
                mov     ebx, 0C00000BBh

loc_1408B798F:                          ; CODE XREF: sub_1408B7914+74↑j
                lea     rcx, [rbp+var_20]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+var_10]
                call    RtlFreeUnicodeString
                mov     eax, ebx
                mov     rbx, [rsp+50h+arg_0]
                add     rsp, 50h
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B7914   endp

byte_1408B79AF  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC84↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=37h

sub_1408B79B8   proc near               ; CODE XREF: sub_1408B79B8+3B3↓p
                                        ; sub_1408B7F58+1F9↓p ...

var_C0          = qword ptr -0C0h
var_B8          = qword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = dword ptr -0A0h
var_9C          = dword ptr -9Ch
var_98          = dword ptr -98h
var_94          = dword ptr -94h
var_90          = dword ptr -90h
var_8C          = dword ptr -8Ch
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = dword ptr -78h
var_74          = dword ptr -74h
var_70          = dword ptr -70h
var_6C          = dword ptr -6Ch
var_68          = qword ptr -68h
var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = dword ptr -40h
var_38          = qword ptr -38h
arg_8           = qword ptr  18h
arg_28          = qword ptr  38h
arg_30          = dword ptr  40h
arg_38          = qword ptr  48h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_8], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-7]
                sub     rsp, 0B0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+37h+var_38], rax
                mov     rax, [rbp+37h+arg_28]
                mov     r12, r8
                mov     r13d, [rbp+37h+arg_30]
                xor     r8d, r8d
                mov     [rbp+37h+var_58], rax
                mov     r14, r9
                mov     rax, [rbp+37h+arg_38]
                mov     esi, r8d
                mov     [rbp+37h+var_50], rax
                mov     edi, r8d
                xor     eax, eax
                mov     [rbp+37h+var_88], r8
                mov     [rbp+37h+var_48], rax
                lea     r9d, [r8+8]
                mov     [rbp+37h+var_40], eax
                mov     r15d, r8d
                mov     [rbp+37h+var_68], r8
                lea     rax, [rbp+37h+var_88]
                mov     [rbp+37h+var_60], r8
                mov     [rbp+37h+var_80], r8
                mov     [rbp+37h+var_74], r8d
                mov     [rbp+37h+var_70], r8d
                mov     [rbp+37h+var_A0], r8d
                mov     [rbp+37h+var_94], r8d
                mov     [rbp+37h+var_90], r8d
                mov     [rbp+37h+var_9C], r8d
                mov     [rbp+37h+var_6C], r8d
                mov     [rbp+37h+var_8C], r8d
                mov     r8, rdx
                mov     rdx, rcx
                mov     [rsp+0E0h+var_B8], rax
                xor     ecx, ecx
                mov     dword ptr [rsp+0E0h+var_C0], 20019h
                mov     [rbp+37h+var_78], r13d
                call    sub_14062CECC
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B7EFD
                mov     rcx, [rbp+37h+var_88]
                lea     rax, [rbp+37h+var_8C]
                lea     r9d, [r15+0Ch]
                mov     [rsp+0E0h+var_C0], rax
                lea     r8, [rbp+37h+var_48]
                lea     edx, [r15+5]
                call    ZwQueryKey
                xor     ecx, ecx
                lea     edx, [r15+1]
                test    eax, eax
                js      short loc_1408B7AAF
                test    byte ptr [rbp+37h+var_48+4], 2
                jz      short loc_1408B7AA9
                mov     ebx, 8000002Dh
                jmp     loc_1408B7EFD
; ---------------------------------------------------------------------------

loc_1408B7AA9:                          ; CODE XREF: sub_1408B79B8+E5↑j
                test    byte ptr [rbp+37h+var_48+4], dl
                cmovnz  esi, edx

loc_1408B7AAF:                          ; CODE XREF: sub_1408B79B8+DF↑j
                lea     rax, [rbp+37h+var_70]
                mov     r9d, esi
                mov     [rsp+0E0h+var_A8], rax
                mov     r8, r14
                lea     rax, [rbp+37h+var_68]
                mov     rdx, r12
                mov     [rsp+0E0h+var_B0], rax
                mov     [rsp+0E0h+var_B8], rcx
                mov     dword ptr [rsp+0E0h+var_C0], 6001Fh
                call    sub_1405E5634
                xor     esi, esi
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B7EFD
                mov     rdx, [rbp+37h+var_88]
                lea     rax, [rbp+37h+var_9C]
                mov     [rsp+0E0h+var_B0], rax
                lea     r9, [rbp+37h+var_A0]
                lea     rax, [rbp+37h+var_94]
                xor     r8d, r8d
                mov     [rsp+0E0h+var_B8], rax
                mov     [rsp+0E0h+var_C0], rsi
                call    sub_1405E2F04
                test    eax, eax
                js      short loc_1408B7B51
                mov     eax, [rbp+37h+var_94]
                cmp     [rbp+37h+var_A0], eax
                cmova   eax, [rbp+37h+var_A0]
                lea     r12d, ds:2[rax*2]
                mov     [rbp+37h+var_90], r12d
                test    r12d, r12d
                jz      short loc_1408B7B54
                mov     edx, r12d
                lea     ecx, [rsi+1]
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408B7B54
                mov     ebx, 0C000009Ah
                jmp     loc_1408B7EFD
; ---------------------------------------------------------------------------

loc_1408B7B51:                          ; CODE XREF: sub_1408B79B8+159↑j
                mov     r12d, esi

loc_1408B7B54:                          ; CODE XREF: sub_1408B79B8+174↑j
                                        ; sub_1408B79B8+18D↑j
                mov     eax, [rbp+37h+var_9C]
                test    eax, eax
                jz      short loc_1408B7B7F
                mov     edx, eax
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     r15, rax
                test    rax, rax
                jnz     short loc_1408B7B7F

loc_1408B7B75:                          ; CODE XREF: sub_1408B79B8+1F0↓j
                                        ; sub_1408B79B8+4AE↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B7ECC
; ---------------------------------------------------------------------------

loc_1408B7B7F:                          ; CODE XREF: sub_1408B79B8+1A1↑j
                                        ; sub_1408B79B8+1BB↑j
                cmp     [rbp+37h+var_58], rsi
                jz      short loc_1408B7BAA
                test    r13d, r13d
                jz      short loc_1408B7BAA
                mov     rdx, r13
                mov     ecx, 1
                shl     rdx, 3
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     [rbp+37h+var_60], rax
                test    rax, rax
                jz      short loc_1408B7B75

loc_1408B7BAA:                          ; CODE XREF: sub_1408B79B8+1CB↑j
                                        ; sub_1408B79B8+1D0↑j
                mov     r13d, esi

loc_1408B7BAD:                          ; CODE XREF: sub_1408B79B8+3D4↓j
                mov     rcx, [rbp+37h+var_88]
                lea     r9, [rbp+37h+var_98]
                mov     eax, r12d
                mov     [rbp+37h+var_94], r13d
                shr     eax, 1
                mov     r8, rdi
                mov     edx, r13d
                mov     [rbp+37h+var_98], eax
                call    sub_14076554C
                cmp     eax, 8000001Ah
                jz      loc_1408B7D9D
                cmp     eax, 0C0000023h
                jnz     short loc_1408B7C1F
                mov     eax, [rbp+37h+var_98]
                lea     r12d, [rax+rax]
                mov     [rbp+37h+var_90], r12d
                test    rdi, rdi
                jz      short loc_1408B7BF8
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B7BF8:                          ; CODE XREF: sub_1408B79B8+234↑j
                mov     edx, r12d
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jz      loc_1408B7D91
                dec     r13d
                jmp     loc_1408B7D89
; ---------------------------------------------------------------------------

loc_1408B7C1F:                          ; CODE XREF: sub_1408B79B8+224↑j
                test    eax, eax
                js      loc_1408B7D9B
                mov     rcx, [rbp+37h+var_58]
                mov     r14d, esi
                mov     [rbp+37h+var_A0], esi
                test    rcx, rcx
                jz      loc_1408B7CBC
                mov     esi, [rbp+37h+var_98]
                xor     r9d, r9d
                test    esi, esi
                jz      short loc_1408B7CBA
                mov     r12d, r9d
                cmp     [rbp+37h+var_78], r9d
                jbe     short loc_1408B7CAE
                lea     r13d, [rsi-1]
                mov     r14, rcx

loc_1408B7C54:                          ; CODE XREF: sub_1408B79B8+2E7↓j
                mov     rcx, [r14]
                mov     r8, r13
                mov     rdx, rdi
                call    _wcsnicmp
                xor     r9d, r9d
                test    eax, eax
                jnz     short loc_1408B7C94
                mov     rax, [r14]
                lea     rdx, [rax+rsi*2]
                movzx   eax, word ptr [rdx-2]
                test    ax, ax
                jz      short loc_1408B7CA3
                cmp     ax, 5Ch ; '\'
                jnz     short loc_1408B7C94
                mov     r8, [rbp+37h+var_60]
                test    r8, r8
                jz      short loc_1408B7C94
                mov     ecx, [rbp+37h+var_A0]
                mov     [r8+rcx*8], rdx
                inc     ecx
                mov     [rbp+37h+var_A0], ecx

loc_1408B7C94:                          ; CODE XREF: sub_1408B79B8+2AF↑j
                                        ; sub_1408B79B8+2C5↑j ...
                inc     r12d
                add     r14, 8
                cmp     r12d, [rbp+37h+var_78]
                jb      short loc_1408B7C54
                jmp     short loc_1408B7CA6
; ---------------------------------------------------------------------------

loc_1408B7CA3:                          ; CODE XREF: sub_1408B79B8+2BF↑j
                mov     esi, r9d

loc_1408B7CA6:                          ; CODE XREF: sub_1408B79B8+2E9↑j
                mov     r13d, [rbp+37h+var_94]
                mov     r14d, [rbp+37h+var_A0]

loc_1408B7CAE:                          ; CODE XREF: sub_1408B79B8+293↑j
                mov     r12d, [rbp+37h+var_90]
                test    esi, esi
                jz      loc_1408B7D87

loc_1408B7CBA:                          ; CODE XREF: sub_1408B79B8+28A↑j
                xor     esi, esi

loc_1408B7CBC:                          ; CODE XREF: sub_1408B79B8+27C↑j
                mov     rax, [rbp+37h+var_50]
                test    rax, rax
                jz      short loc_1408B7D3A
                lea     rcx, [rbp+37h+var_80]
                xor     r9d, r9d
                mov     [rsp+0E0h+var_B8], rcx
                mov     r8, rdi
                xor     ecx, ecx
                mov     dword ptr [rsp+0E0h+var_C0], 20019h
                mov     rdx, rax
                call    sub_14062CECC
                cmp     eax, 0C0000034h
                jnz     short loc_1408B7CF6
                mov     [rbp+37h+var_80], rsi
                jmp     loc_1408B7D89
; ---------------------------------------------------------------------------

loc_1408B7CF6:                          ; CODE XREF: sub_1408B79B8+333↑j
                test    eax, eax
                js      loc_1408B7D9B
                mov     rdx, [rbp+37h+var_80]
                lea     r8, [rbp+37h+var_74]
                mov     [rsp+0E0h+var_B0], rsi
                xor     r9d, r9d
                mov     [rsp+0E0h+var_B8], rsi
                mov     [rsp+0E0h+var_C0], rsi
                call    sub_1405E2F04
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B7D9D
                cmp     [rbp+37h+var_74], esi
                jnz     short loc_1408B7D3A
                mov     rcx, [rbp+37h+var_80]
                call    ZwClose
                mov     rdx, rsi
                mov     [rbp+37h+var_80], rdx
                jmp     short loc_1408B7D3E
; ---------------------------------------------------------------------------

loc_1408B7D3A:                          ; CODE XREF: sub_1408B79B8+30B↑j
                                        ; sub_1408B79B8+36E↑j
                mov     rdx, [rbp+37h+var_80]

loc_1408B7D3E:                          ; CODE XREF: sub_1408B79B8+380↑j
                mov     r8, [rbp+37h+var_68]
                mov     eax, r14d
                mov     [rsp+0E0h+var_A8], rdx
                neg     eax
                mov     dword ptr [rsp+0E0h+var_B0], r14d
                mov     r9, rdi
                sbb     rcx, rcx
                mov     rdx, rdi
                and     rcx, [rbp+37h+var_60]
                mov     [rsp+0E0h+var_B8], rcx
                mov     rcx, [rbp+37h+var_88]
                mov     dword ptr [rsp+0E0h+var_C0], esi
                call    sub_1408B79B8
                mov     ebx, eax
                cmp     eax, 8000002Dh
                jnz     short loc_1408B7D7D
                mov     ebx, esi
                jmp     short loc_1408B7D89
; ---------------------------------------------------------------------------

loc_1408B7D7D:                          ; CODE XREF: sub_1408B79B8+3BF↑j
                test    eax, eax
                js      loc_1408B7ECC
                jmp     short loc_1408B7D89
; ---------------------------------------------------------------------------

loc_1408B7D87:                          ; CODE XREF: sub_1408B79B8+2FC↑j
                xor     esi, esi

loc_1408B7D89:                          ; CODE XREF: sub_1408B79B8+262↑j
                                        ; sub_1408B79B8+339↑j ...
                inc     r13d
                jmp     loc_1408B7BAD
; ---------------------------------------------------------------------------

loc_1408B7D91:                          ; CODE XREF: sub_1408B79B8+259↑j
                                        ; sub_1408B79B8+474↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B7EDB
; ---------------------------------------------------------------------------

loc_1408B7D9B:                          ; CODE XREF: sub_1408B79B8+269↑j
                                        ; sub_1408B79B8+340↑j
                mov     ebx, eax

loc_1408B7D9D:                          ; CODE XREF: sub_1408B79B8+219↑j
                                        ; sub_1408B79B8+369↑j
                test    ebx, ebx
                js      loc_1408B7ECC
                mov     r13d, [rbp+37h+var_9C]

loc_1408B7DA9:                          ; CODE XREF: sub_1408B79B8+50D↓j
                mov     rdx, [rbp+37h+var_88]
                lea     rax, [rbp+37h+var_9C]
                mov     [rsp+0E0h+var_A8], rax
                mov     r14d, r12d
                lea     rax, [rbp+37h+var_6C]
                mov     [rsp+0E0h+var_B0], r15
                mov     [rsp+0E0h+var_B8], rax
                mov     r9, rdi
                lea     rax, [rbp+37h+var_98]
                shr     r14d, 1
                mov     r8d, esi
                mov     [rsp+0E0h+var_C0], rax
                mov     [rbp+37h+var_98], r14d
                mov     [rbp+37h+var_9C], r13d
                call    sub_1405E2DCC
                cmp     eax, 8000001Ah
                jz      loc_1408B7ECC
                cmp     eax, 0C0000023h
                jnz     short loc_1408B7E70
                mov     eax, [rbp+37h+var_98]
                cmp     eax, r14d
                jbe     short loc_1408B7E32
                lea     r12d, [rax+rax]
                test    rdi, rdi
                jz      short loc_1408B7E13
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B7E13:                          ; CODE XREF: sub_1408B79B8+44F↑j
                mov     edx, r12d
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jz      loc_1408B7D91

loc_1408B7E32:                          ; CODE XREF: sub_1408B79B8+446↑j
                mov     r14d, [rbp+37h+var_9C]
                cmp     r14d, r13d
                jbe     short loc_1408B7E6C
                mov     r13d, r14d
                test    r15, r15
                jz      short loc_1408B7E4D
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag

loc_1408B7E4D:                          ; CODE XREF: sub_1408B79B8+489↑j
                mov     rdx, r14
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     r15, rax
                test    rax, rax
                jz      loc_1408B7B75

loc_1408B7E6C:                          ; CODE XREF: sub_1408B79B8+481↑j
                dec     esi
                jmp     short loc_1408B7EC3
; ---------------------------------------------------------------------------

loc_1408B7E70:                          ; CODE XREF: sub_1408B79B8+43E↑j
                xor     r14d, r14d
                test    eax, eax
                js      short loc_1408B7ECA
                cmp     [rbp+37h+var_70], 2
                jnz     short loc_1408B7EA3
                mov     rcx, [rbp+37h+var_68]
                lea     rax, [rbp+37h+var_8C]
                xor     r9d, r9d
                mov     [rsp+0E0h+var_C0], rax
                xor     r8d, r8d
                mov     [rbp+37h+var_8C], r14d
                mov     rdx, rdi
                call    sub_14062CB38
                cmp     eax, 0C0000023h
                jz      short loc_1408B7EC3

loc_1408B7EA3:                          ; CODE XREF: sub_1408B79B8+4C3↑j
                mov     eax, [rbp+37h+var_9C]
                mov     r9, r15
                mov     r8d, [rbp+37h+var_6C]
                mov     rdx, rdi
                mov     rcx, [rbp+37h+var_68]
                mov     dword ptr [rsp+0E0h+var_C0], eax
                call    sub_140767814
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B7ECC

loc_1408B7EC3:                          ; CODE XREF: sub_1408B79B8+4B6↑j
                                        ; sub_1408B79B8+4E9↑j
                inc     esi
                jmp     loc_1408B7DA9
; ---------------------------------------------------------------------------

loc_1408B7ECA:                          ; CODE XREF: sub_1408B79B8+4BD↑j
                mov     ebx, eax

loc_1408B7ECC:                          ; CODE XREF: sub_1408B79B8+1C2↑j
                                        ; sub_1408B79B8+3C7↑j ...
                test    rdi, rdi
                jz      short loc_1408B7EDB
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B7EDB:                          ; CODE XREF: sub_1408B79B8+3DE↑j
                                        ; sub_1408B79B8+517↑j
                test    r15, r15
                jz      short loc_1408B7EEA
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag

loc_1408B7EEA:                          ; CODE XREF: sub_1408B79B8+526↑j
                mov     rax, [rbp+37h+var_60]
                test    rax, rax
                jz      short loc_1408B7EFD
                xor     edx, edx
                mov     rcx, rax
                call    ExFreePoolWithTag

loc_1408B7EFD:                          ; CODE XREF: sub_1408B79B8+B3↑j
                                        ; sub_1408B79B8+EC↑j ...
                mov     rcx, [rbp+37h+var_88]
                test    rcx, rcx
                jz      short loc_1408B7F0B
                call    ZwClose

loc_1408B7F0B:                          ; CODE XREF: sub_1408B79B8+54C↑j
                mov     rcx, [rbp+37h+var_68]
                test    rcx, rcx
                jz      short loc_1408B7F19
                call    ZwClose

loc_1408B7F19:                          ; CODE XREF: sub_1408B79B8+55A↑j
                mov     rcx, [rbp+37h+var_80]
                test    rcx, rcx
                jz      short loc_1408B7F27
                call    ZwClose

loc_1408B7F27:                          ; CODE XREF: sub_1408B79B8+568↑j
                mov     eax, ebx
                mov     rcx, [rbp+37h+var_38]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0E0h+arg_8]
                add     rsp, 0B0h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B79B8
sub_1408B79B8   endp

algn_1408B7F51:                         ; DATA XREF: .pdata:000000014011DC90↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B7F58   proc near               ; CODE XREF: sub_1408B9704+3AD↓p
                                        ; DATA XREF: .pdata:000000014011DC9C↑o

var_E0          = qword ptr -0E0h
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = qword ptr -0C8h
var_C0          = dword ptr -0C0h
var_BC          = dword ptr -0BCh
var_B8          = dword ptr -0B8h
var_B4          = dword ptr -0B4h
var_B0          = qword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_98          = qword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_40          = qword ptr -40h
arg_0           = qword ptr  10h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-27h]
                sub     rsp, 0D0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_40], rax
                xor     r12d, r12d
                mov     r14, r8
                mov     rsi, rdx
                mov     [rbp+57h+var_88], r12
                mov     r13, rcx
                xor     edx, edx
                lea     rcx, [rbp+57h+var_80]
                lea     r8d, [r12+40h]
                call    memset
                lea     rdx, aSystem_1  ; "SYSTEM"
                mov     [rbp+57h+var_98], r12
                mov     rcx, rsi
                mov     [rbp+57h+var_A0], r12
                mov     edi, r12d
                mov     [rbp+57h+var_B0], r12
                mov     [rbp+57h+var_90], r12
                mov     [rbp+57h+var_A8], r12
                mov     [rbp+57h+var_B8], r12d
                mov     [rbp+57h+var_B4], r12d
                mov     [rbp+57h+var_BC], r12d
                call    _wcsicmp
                lea     r15, aControlset001S ; "ControlSet001\\Services"
                test    eax, eax
                jnz     short loc_1408B8057
                mov     r8d, [r13+1ECh]
                test    r8b, 10h
                jnz     short loc_1408B7FF4

loc_1408B7FEC:                          ; CODE XREF: sub_1408B7F58+11B↓j
                mov     ebx, r12d
                jmp     loc_1408B831C
; ---------------------------------------------------------------------------

loc_1408B7FF4:                          ; CODE XREF: sub_1408B7F58+92↑j
                lea     rdx, off_140985B88 ; "Select"

loc_1408B7FFB:                          ; CODE XREF: sub_1408B7F58+B6↓j
                mov     rax, [rdx]
                lea     rdx, [rdx+8]
                mov     ecx, edi
                inc     edi
                mov     [rbp+rcx*8+57h+var_80], rax
                cmp     edi, 4
                jb      short loc_1408B7FFB
                test    r8b, 0C0h
                jz      short loc_1408B804E
                lea     rax, [rbp+57h+var_B0]
                xor     r9d, r9d
                mov     [rsp+100h+var_D8], rax
                mov     r8, r15
                mov     rdx, r14
                mov     dword ptr [rsp+100h+var_E0], 20019h
                xor     ecx, ecx
                call    sub_14062CECC
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jnz     short loc_1408B8046
                mov     [rbp+57h+var_B0], r12
                jmp     short loc_1408B804E
; ---------------------------------------------------------------------------

loc_1408B8046:                          ; CODE XREF: sub_1408B7F58+E6↑j
                test    eax, eax
                js      loc_1408B831C

loc_1408B804E:                          ; CODE XREF: sub_1408B7F58+BC↑j
                                        ; sub_1408B7F58+EC↑j
                mov     [rbp+rdi*8+57h+var_80], r15
                inc     edi
                jmp     short loc_1408B8079
; ---------------------------------------------------------------------------

loc_1408B8057:                          ; CODE XREF: sub_1408B7F58+85↑j
                lea     rdx, aSoftware  ; "SOFTWARE"
                mov     rcx, rsi
                call    _wcsicmp
                test    eax, eax
                jnz     short loc_1408B8079
                mov     eax, [r13+1ECh]
                test    al, 20h
                jz      loc_1408B7FEC

loc_1408B8079:                          ; CODE XREF: sub_1408B7F58+FD↑j
                                        ; sub_1408B7F58+110↑j
                mov     eax, edi
                lea     rcx, aSetupResolvefi ; "Setup\\ResolveFilePaths"
                mov     r15d, 80000002h
                lea     r8, aSystemCurrentc_8 ; "System\\CurrentControlSet\\Control\\Sta"...
                xor     r9d, r9d
                mov     edx, r15d
                inc     edi
                mov     [rbp+rax*8+57h+var_80], rcx
                lea     rax, [rbp+57h+var_98]
                mov     [rsp+100h+var_D8], rax
                xor     ecx, ecx
                mov     dword ptr [rsp+100h+var_E0], 20019h
                call    sub_14062CECC
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jnz     short loc_1408B80C3
                mov     [rbp+57h+var_98], r12
                jmp     short loc_1408B8104
; ---------------------------------------------------------------------------

loc_1408B80C3:                          ; CODE XREF: sub_1408B7F58+163↑j
                test    eax, eax
                js      loc_1408B831C
                mov     rdx, [rbp+57h+var_98]
                lea     rax, [rbp+57h+var_A0]
                mov     [rsp+100h+var_D8], rax
                xor     r9d, r9d
                mov     r8, rsi
                mov     dword ptr [rsp+100h+var_E0], 20019h
                xor     ecx, ecx
                call    sub_14062CECC
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jnz     short loc_1408B80FC
                mov     [rbp+57h+var_A0], r12
                jmp     short loc_1408B8104
; ---------------------------------------------------------------------------

loc_1408B80FC:                          ; CODE XREF: sub_1408B7F58+19C↑j
                test    eax, eax
                js      loc_1408B831C

loc_1408B8104:                          ; CODE XREF: sub_1408B7F58+169↑j
                                        ; sub_1408B7F58+1A2↑j
                lea     rax, [rbp+57h+var_88]
                xor     r9d, r9d
                mov     [rsp+100h+var_D8], rax
                mov     r8, rsi
                mov     rdx, r15
                mov     dword ptr [rsp+100h+var_E0], 2001Fh
                xor     ecx, ecx
                call    sub_14062CECC
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B831C
                mov     rax, [rbp+57h+var_A0]
                xor     r9d, r9d
                mov     r8, [rbp+57h+var_88]
                xor     edx, edx
                mov     [rsp+100h+var_C8], rax
                mov     rcx, r14
                lea     rax, [rbp+57h+var_80]
                mov     dword ptr [rsp+100h+var_D0], edi
                mov     [rsp+100h+var_D8], rax
                call    sub_1408B79B8
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B831C
                cmp     [rbp+57h+var_B0], r12
                jz      loc_1408B831C
                mov     edx, 208h
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     r14, rax
                test    rax, rax
                jnz     short loc_1408B8191
                mov     ebx, 0C000009Ah
                jmp     loc_1408B831C
; ---------------------------------------------------------------------------

loc_1408B8191:                          ; CODE XREF: sub_1408B7F58+22D↑j
                mov     r15d, r12d

loc_1408B8194:                          ; CODE XREF: sub_1408B7F58+3B5↓j
                mov     rcx, [rbp+57h+var_B0]
                lea     r9, [rbp+57h+var_C0]
                mov     r8, r14
                mov     [rbp+57h+var_C0], 104h
                mov     edx, r15d
                call    sub_14076554C
                cmp     eax, 8000001Ah
                jz      loc_1408B8312
                test    eax, eax
                js      loc_1408B830A
                mov     rdx, [rbp+57h+var_B0]
                lea     rax, [rbp+57h+var_A8]
                mov     [rsp+100h+var_D8], rax
                xor     r9d, r9d
                mov     r8, r14
                mov     dword ptr [rsp+100h+var_E0], 20019h
                xor     ecx, ecx
                call    sub_14062CECC
                test    eax, eax
                js      loc_1408B830A
                mov     rcx, [rbp+57h+var_A8]
                lea     rax, [rbp+57h+var_C0]
                mov     edi, 4
                mov     [rsp+100h+var_E0], rax
                lea     r9, [rbp+57h+var_B8]
                mov     [rbp+57h+var_C0], edi
                lea     r8, [rbp+57h+var_BC]
                lea     rdx, aType_1    ; "Type"
                call    sub_14062CB38
                test    eax, eax
                js      short loc_1408B8261
                cmp     [rbp+57h+var_BC], edi
                jnz     short loc_1408B8261
                cmp     [rbp+57h+var_C0], edi
                jnz     short loc_1408B8261
                mov     rcx, [rbp+57h+var_A8]
                lea     rax, [rbp+57h+var_C0]
                lea     r9, [rbp+57h+var_B4]
                mov     [rsp+100h+var_E0], rax
                lea     r8, [rbp+57h+var_BC]
                mov     [rbp+57h+var_C0], edi
                lea     rdx, aStart     ; "Start"
                call    sub_14062CB38
                test    eax, eax
                js      short loc_1408B825C
                cmp     [rbp+57h+var_BC], edi
                jnz     short loc_1408B825C
                cmp     [rbp+57h+var_C0], edi
                jnz     short loc_1408B825C
                mov     edi, [rbp+57h+var_B8]
                mov     esi, [rbp+57h+var_B4]
                jmp     short loc_1408B826F
; ---------------------------------------------------------------------------

loc_1408B825C:                          ; CODE XREF: sub_1408B7F58+2F0↑j
                                        ; sub_1408B7F58+2F5↑j ...
                mov     edi, [rbp+57h+var_B8]
                jmp     short loc_1408B8268
; ---------------------------------------------------------------------------

loc_1408B8261:                          ; CODE XREF: sub_1408B7F58+2BE↑j
                                        ; sub_1408B7F58+2C3↑j ...
                mov     edi, r12d
                mov     [rbp+57h+var_B8], r12d

loc_1408B8268:                          ; CODE XREF: sub_1408B7F58+307↑j
                mov     [rbp+57h+var_B4], r12d
                mov     esi, r12d

loc_1408B826F:                          ; CODE XREF: sub_1408B7F58+302↑j
                mov     rcx, [rbp+57h+var_A8]
                call    ZwClose
                test    edi, edi
                jz      loc_1408B830A
                test    dil, 0Bh
                jz      short loc_1408B8298
                cmp     esi, 2
                jz      short loc_1408B8298
                mov     eax, [r13+1ECh]
                test    al, 40h
                jz      short loc_1408B830A
                jmp     short loc_1408B82A3
; ---------------------------------------------------------------------------

loc_1408B8298:                          ; CODE XREF: sub_1408B7F58+32C↑j
                                        ; sub_1408B7F58+331↑j
                mov     eax, [r13+1ECh]
                test    al, al
                jns     short loc_1408B830A

loc_1408B82A3:                          ; CODE XREF: sub_1408B7F58+33E↑j
                mov     r8, [rbp+57h+var_90]
                test    r8, r8
                jnz     short loc_1408B82E6
                mov     rdx, [rbp+57h+var_88]
                lea     rax, [rbp+57h+var_90]
                mov     [rsp+100h+var_C8], r12
                lea     r8, aControlset001S ; "ControlSet001\\Services"
                mov     [rsp+100h+var_D0], rax
                xor     r9d, r9d
                mov     [rsp+100h+var_D8], r12
                xor     ecx, ecx
                mov     dword ptr [rsp+100h+var_E0], 2001Fh
                call    sub_1405E5634
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B8312
                mov     r8, [rbp+57h+var_90]

loc_1408B82E6:                          ; CODE XREF: sub_1408B7F58+352↑j
                mov     rcx, [rbp+57h+var_B0]
                mov     r9, r14
                mov     [rsp+100h+var_C8], r12
                mov     rdx, r14
                mov     dword ptr [rsp+100h+var_D0], r12d
                mov     [rsp+100h+var_D8], r12
                call    sub_1408B79B8
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B8312

loc_1408B830A:                          ; CODE XREF: sub_1408B7F58+263↑j
                                        ; sub_1408B7F58+28D↑j ...
                inc     r15d
                jmp     loc_1408B8194
; ---------------------------------------------------------------------------

loc_1408B8312:                          ; CODE XREF: sub_1408B7F58+25B↑j
                                        ; sub_1408B7F58+388↑j ...
                xor     edx, edx
                mov     rcx, r14
                call    ExFreePoolWithTag

loc_1408B831C:                          ; CODE XREF: sub_1408B7F58+97↑j
                                        ; sub_1408B7F58+F0↑j ...
                mov     rcx, [rbp+57h+var_A0]
                test    rcx, rcx
                jz      short loc_1408B832A
                call    ZwClose

loc_1408B832A:                          ; CODE XREF: sub_1408B7F58+3CB↑j
                mov     rcx, [rbp+57h+var_98]
                test    rcx, rcx
                jz      short loc_1408B8338
                call    ZwClose

loc_1408B8338:                          ; CODE XREF: sub_1408B7F58+3D9↑j
                mov     rcx, [rbp+57h+var_B0]
                test    rcx, rcx
                jz      short loc_1408B8346
                call    ZwClose

loc_1408B8346:                          ; CODE XREF: sub_1408B7F58+3E7↑j
                mov     rcx, [rbp+57h+var_90]
                test    rcx, rcx
                jz      short loc_1408B8354
                call    ZwClose

loc_1408B8354:                          ; CODE XREF: sub_1408B7F58+3F5↑j
                mov     rcx, [rbp+57h+var_88]
                test    rcx, rcx
                jz      short loc_1408B8362
                call    ZwClose

loc_1408B8362:                          ; CODE XREF: sub_1408B7F58+403↑j
                mov     eax, ebx
                mov     rcx, [rbp+57h+var_40]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+100h+arg_0]
                add     rsp, 0D0h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408B7F58
sub_1408B7F58   endp

byte_1408B838C  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011DC9C↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B8394   proc near               ; CODE XREF: sub_140A54218+2F79F↓p
                                        ; sub_140A54218+2F84C↓p
                                        ; DATA XREF: ...

var_60          = qword ptr -60h
var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
var_40          = dword ptr -40h
var_38          = qword ptr -38h
var_30          = dword ptr -30h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = qword ptr -18h
var_10          = qword ptr -10h
var_8           = qword ptr -8
arg_0           = qword ptr  40h
arg_10          = dword ptr  50h
arg_18          = dword ptr  58h

                mov     [rsp-38h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 80h
                xor     r13d, r13d
                mov     r14, rdx
                mov     r15b, r13b
                mov     [rbp+var_18], r13
                mov     [rbp+var_8], r13
                mov     r12b, cl
                mov     [rbp+var_10], r13
                mov     esi, 208h
                mov     [rbp+arg_18], r13d
                mov     [rbp+var_20], r13d
                mov     [rbp+var_1C], r13d
                mov     [rbp+arg_10], r13d
                jmp     short loc_1408B8425
; ---------------------------------------------------------------------------

loc_1408B83DD:                          ; CODE XREF: sub_1408B8394+AA↓j
                lea     rax, [rbp+arg_10]
                xor     r9d, r9d
                mov     [rsp+80h+var_50], rax
                lea     r8, aRegistryMachin_109 ; "\\Registry\\Machine\\System\\DriverData"...
                mov     dword ptr [rsp+80h+var_58], esi
                lea     rcx, aDriverdatabase_0 ; "DriverDatabaseUpdates"
                xor     edx, edx
                mov     [rsp+80h+var_60], rdi
                call    RtlGetPersistedStateLocation
                mov     ebx, eax
                cmp     eax, 80000005h
                jnz     short loc_1408B8485
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag
                mov     rdi, r13
                cmp     [rbp+arg_10], esi
                jbe     short loc_1408B8480
                mov     esi, [rbp+arg_10]

loc_1408B8425:                          ; CODE XREF: sub_1408B8394+47↑j
                mov     r8d, 62647050h
                mov     rdx, rsi
                mov     ecx, 1
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408B83DD
                mov     ebx, 0C000009Ah

loc_1408B8445:                          ; CODE XREF: sub_1408B8394+F3↓j
                                        ; sub_1408B8394+123↓j ...
                mov     rcx, [rbp+var_18]
                test    rcx, rcx
                jz      short loc_1408B8453
                call    ZwClose

loc_1408B8453:                          ; CODE XREF: sub_1408B8394+B8↑j
                test    rdi, rdi
                jz      short loc_1408B8462
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408B8462:                          ; CODE XREF: sub_1408B8394+C2↑j
                mov     eax, ebx
                mov     rbx, [rsp+80h+arg_0]
                add     rsp, 80h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                align 20h

loc_1408B8480:                          ; CODE XREF: sub_1408B8394+8C↑j
                mov     ebx, 0C00000E5h

loc_1408B8485:                          ; CODE XREF: sub_1408B8394+7A↑j
                test    ebx, ebx
                js      short loc_1408B8445
                mov     [rsp+80h+var_48], r13
                lea     rax, [rbp+var_18]
                mov     [rsp+80h+var_50], rax
                xor     r9d, r9d
                mov     [rsp+80h+var_58], r13
                mov     r8, rdi
                xor     edx, edx
                mov     dword ptr [rsp+80h+var_60], 2001Fh
                xor     ecx, ecx
                call    sub_1405E69C0
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B8445
                mov     rsi, cs:qword_140C43000
                jmp     loc_1408B85D8
; ---------------------------------------------------------------------------

loc_1408B84C5:                          ; CODE XREF: sub_1408B8394+24E↓j
                mov     eax, [rsi+40h]
                test    al, 4
                jz      short loc_1408B84D9
                cmp     cs:byte_140C0F3E8, r13b
                jnz     loc_1408B85D5

loc_1408B84D9:                          ; CODE XREF: sub_1408B8394+136↑j
                mov     r9, [rsi+48h]
                lea     rax, [rbp+var_20]
                mov     rdx, [rsi+18h]
                mov     r8d, 7
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+80h+var_30], r13d
                mov     [rsp+80h+var_38], rax
                lea     rax, [rbp+var_8]
                mov     [rsp+80h+var_40], 8
                mov     [rsp+80h+var_48], rax
                lea     rax, [rbp+arg_18]
                mov     [rsp+80h+var_50], rax
                lea     rax, qword_14001E1F8
                mov     [rsp+80h+var_58], rax
                mov     [rsp+80h+var_60], r13
                call    sub_1406CC6BC
                test    eax, eax
                js      loc_1408B85D2
                cmp     [rbp+arg_18], 10h
                jnz     loc_1408B85D2
                cmp     [rbp+var_20], 8
                jnz     loc_1408B85D2
                mov     rdx, [rsi+18h]
                lea     rax, [rbp+arg_10]
                mov     rcx, [rbp+var_18]
                lea     r9, [rbp+var_10]
                lea     r8, [rbp+var_1C]
                mov     [rsp+80h+var_60], rax
                mov     [rbp+arg_10], 8
                call    sub_14062CB38
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B857F
                cmp     [rbp+var_1C], 3
                jnz     short loc_1408B857F
                cmp     [rbp+arg_10], 8
                jz      short loc_1408B8586

loc_1408B857F:                          ; CODE XREF: sub_1408B8394+1DD↑j
                                        ; sub_1408B8394+1E3↑j
                mov     ebx, r13d
                mov     [rbp+var_10], r13

loc_1408B8586:                          ; CODE XREF: sub_1408B8394+1E9↑j
                mov     r8d, 8
                lea     rdx, [rbp+var_10]
                lea     rcx, [rbp+var_8]
                call    RtlCompareMemory
                cmp     rax, 8
                jz      short loc_1408B85D5
                mov     r15b, 1
                test    r12b, r12b
                jz      short loc_1408B85E8
                mov     rdx, [rsi+18h]
                lea     r9, [rbp+var_8]
                mov     rcx, [rbp+var_18]
                mov     r8d, 3
                mov     dword ptr [rsp+80h+var_60], 8
                call    sub_140767814
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B8445
                jmp     short loc_1408B85D5
; ---------------------------------------------------------------------------

loc_1408B85D2:                          ; CODE XREF: sub_1408B8394+19A↑j
                                        ; sub_1408B8394+1A4↑j ...
                mov     ebx, r13d

loc_1408B85D5:                          ; CODE XREF: sub_1408B8394+13F↑j
                                        ; sub_1408B8394+209↑j ...
                mov     rsi, [rsi]

loc_1408B85D8:                          ; CODE XREF: sub_1408B8394+12C↑j
                lea     rax, qword_140C43000
                cmp     rsi, rax
                jnz     loc_1408B84C5

loc_1408B85E8:                          ; CODE XREF: sub_1408B8394+211↑j
                test    ebx, ebx
                js      loc_1408B8445
                test    r14, r14
                jz      loc_1408B8445
                mov     [r14], r15b
                jmp     loc_1408B8445
sub_1408B8394   endp

; ---------------------------------------------------------------------------
algn_1408B8601:                         ; DATA XREF: .pdata:000000014011DCA8↑o
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=60h

sub_1408B8608   proc near               ; CODE XREF: sub_1407A3328+B28B4↑p
                                        ; sub_1408B8A58+DF↓p
                                        ; DATA XREF: ...

var_140         = qword ptr -140h
var_138         = qword ptr -138h
var_130         = xmmword ptr -130h
var_120         = qword ptr -120h
var_118         = xmmword ptr -118h
var_108         = xmmword ptr -108h
var_F8          = qword ptr -0F8h
var_F0          = xmmword ptr -0F0h
var_E0          = dword ptr -0E0h
var_DC          = dword ptr -0DCh
var_D8          = qword ptr -0D8h
var_D0          = qword ptr -0D0h
var_C8          = dword ptr -0C8h
var_C4          = dword ptr -0C4h
var_C0          = xmmword ptr -0C0h
var_B0          = xmmword ptr -0B0h
var_A0          = byte ptr -0A0h
var_98          = dword ptr -98h
var_90          = qword ptr -90h
var_88          = qword ptr -88h
var_80          = dword ptr -80h
arg_0           = dword ptr  10h
arg_8           = qword ptr  18h
arg_10          = qword ptr  20h
arg_18          = qword ptr  28h

                mov     [rsp-8+arg_8], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-30h]
                sub     rsp, 130h
                xor     r13d, r13d
                xorps   xmm0, xmm0
                mov     r12, rdx
                mov     [rbp+60h+var_DC], r13d
                xorps   xmm1, xmm1
                mov     [rbp+60h+var_C4], r13d
                mov     rbx, rcx
                mov     [rbp+60h+arg_18], r13
                mov     rcx, r12
                mov     [rbp+60h+arg_10], r13
                xor     edx, edx
                mov     [rsp+160h+var_120], r13
                movups  [rbp+60h+var_B0], xmm0
                mov     r15d, r13d
                mov     [rbp+60h+arg_0], r13d
                mov     r14d, r13d
                mov     [rsp+160h+var_F8], r13
                movups  [rsp+160h+var_108], xmm0
                movups  [rsp+160h+var_130], xmm1
                movups  [rsp+160h+var_118], xmm0
                movups  [rsp+160h+var_F0], xmm1
                call    RtlInitUnicodeString
                xor     edx, edx
                lea     rcx, [rsp+160h+var_130]
                call    RtlInitUnicodeString
                xor     edx, edx
                lea     rcx, [rsp+160h+var_118]
                call    RtlInitUnicodeString
                xorps   xmm0, xmm0
                mov     dword ptr [rsp+160h+var_138], 21h ; '!'
                lea     r9, [rbp+60h+var_B0]
                mov     [rbp+60h+var_E0], 30h ; '0'
                lea     r8, [rbp+60h+var_E0]
                mov     [rbp+60h+var_D8], r13
                mov     edx, 100080h
                mov     [rbp+60h+var_C8], 240h
                lea     rcx, [rbp+60h+arg_18]
                mov     [rbp+60h+var_D0], rbx
                movdqu  [rbp+60h+var_C0], xmm0
                mov     dword ptr [rsp+160h+var_140], 3
                call    ZwOpenFile
                test    eax, eax
                js      short loc_1408B8756
                mov     r8, cs:IoFileObjectType
                lea     rax, [rsp+160h+var_120]
                mov     rcx, [rbp+60h+arg_18]
                xor     r9d, r9d
                mov     [rsp+160h+var_138], r13
                mov     edx, 80h
                mov     [rsp+160h+var_140], rax
                mov     [rsp+160h+var_120], r13
                call    ObReferenceObjectByHandle
                mov     r15, [rsp+160h+var_120]
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B89FA
                lea     rdx, [rbp+60h+arg_10]
                mov     rcx, r15
                call    IoQueryFileDosDeviceName
                mov     r14, [rbp+60h+arg_10]
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B89FA
                mov     r8, r12
                lea     ecx, [r13+1]
                mov     rdx, r14
                call    RtlDuplicateUnicodeString
                mov     ebx, eax
                jmp     loc_1408B89FA
; ---------------------------------------------------------------------------

loc_1408B8756:                          ; CODE XREF: sub_1408B8608+D8↑j
                movzx   edi, word ptr [rbx]
                mov     esi, 1
                cmp     di, 16h
                jb      short loc_1408B87B8
                mov     r8b, sil
                lea     rcx, qword_140984CE8
                mov     rdx, rbx
                call    RtlPrefixUnicodeString
                test    al, al
                jz      short loc_1408B87B8
                lea     rdx, aSystem_1  ; "SYSTEM"
                lea     rcx, [rsp+160h+var_108]
                call    RtlInitUnicodeString
                movzx   edi, word ptr [rbx]
                cmp     di, 18h
                jbe     loc_1408B8860
                mov     rax, [rbx+8]
                add     rax, 16h
                cmp     word ptr [rax], 5Ch ; '\'
                jnz     loc_1408B8860
                mov     qword ptr [rsp+160h+var_118+8], rax
                sub     di, 16h
                jmp     loc_1408B883C
; ---------------------------------------------------------------------------

loc_1408B87B8:                          ; CODE XREF: sub_1408B8608+15A↑j
                                        ; sub_1408B8608+170↑j
                cmp     di, 1Ch
                jbe     loc_1408B884F
                mov     r8b, sil
                lea     rcx, qword_140984E08
                mov     rdx, rbx
                call    RtlPrefixUnicodeString
                test    al, al
                jz      short loc_1408B884F
                mov     r8, [rbx+8]
                cmp     word ptr [r8+1Ah], 5Ch ; '\'
                jnz     short loc_1408B884F
                lea     rdx, [r8+1Ch]
                movzx   ecx, r13w
                cmp     word ptr [rdx], 5Ch ; '\'
                mov     qword ptr [rsp+160h+var_108+8], rdx
                jz      short loc_1408B880E

loc_1408B87F7:                          ; CODE XREF: sub_1408B8608+204↓j
                movzx   eax, cx
                cmp     [rdx+rax*2], r13w
                jz      short loc_1408B880E
                add     cx, si
                movzx   eax, cx
                cmp     word ptr [rdx+rax*2], 5Ch ; '\'
                jnz     short loc_1408B87F7

loc_1408B880E:                          ; CODE XREF: sub_1408B8608+1ED↑j
                                        ; sub_1408B8608+1F7↑j
                add     cx, cx
                movzx   eax, cx
                shr     rax, 1
                mov     word ptr [rsp+160h+var_108], cx
                mov     word ptr [rsp+160h+var_108+2], cx
                lea     rcx, [rdx+rax*2]
                cmp     word ptr [rcx], 5Ch ; '\'
                jnz     short loc_1408B8860
                mov     qword ptr [rsp+160h+var_118+8], rcx
                sub     rcx, r8
                sar     rcx, 1
                add     cx, cx
                sub     di, cx

loc_1408B883C:                          ; CODE XREF: sub_1408B8608+1AB↑j
                mov     eax, 2
                mov     word ptr [rsp+160h+var_118], di
                add     eax, edi
                mov     word ptr [rsp+160h+var_118+2], ax
                jmp     short loc_1408B8865
; ---------------------------------------------------------------------------

loc_1408B884F:                          ; CODE XREF: sub_1408B8608+1B4↑j
                                        ; sub_1408B8608+1CE↑j ...
                lea     rdx, aSystem_1  ; "SYSTEM"
                lea     rcx, [rsp+160h+var_108]
                call    RtlInitUnicodeString

loc_1408B8860:                          ; CODE XREF: sub_1408B8608+18A↑j
                                        ; sub_1408B8608+19C↑j ...
                movzx   edi, word ptr [rsp+160h+var_118]

loc_1408B8865:                          ; CODE XREF: sub_1408B8608+245↑j
                lea     rdx, [rsp+160h+var_120]
                lea     rcx, [rsp+160h+var_108]
                call    sub_1405102DC
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B89FA
                mov     rcx, [rsp+160h+var_120]
                mov     eax, [rcx+40h]
                test    sil, al
                jz      loc_1408B896C
                lea     rdx, aCWindows  ; "C:\\Windows"
                lea     rcx, [rsp+160h+var_F0]
                call    RtlInitUnicodeString
                movzx   eax, word ptr [rsp+160h+var_F0]
                add     ax, 2
                add     ax, di
                movzx   ecx, ax
                mov     word ptr [rsp+160h+var_130+2], cx
                call    sub_140704930
                mov     qword ptr [rsp+160h+var_130+8], rax
                test    rax, rax
                jnz     short loc_1408B88CD

loc_1408B88C3:                          ; CODE XREF: sub_1408B8608+39C↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B89FA
; ---------------------------------------------------------------------------

loc_1408B88CD:                          ; CODE XREF: sub_1408B8608+2B9↑j
                lea     rdx, [rsp+160h+var_F0]
                lea     rcx, [rsp+160h+var_130]
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B89FA
                cmp     cs:byte_140C4C008, r13b
                jz      loc_1408B89BD
                xor     edx, edx
                lea     rcx, [rbp+60h+var_A0]
                lea     r8d, [rdx+70h]
                call    memset
                xor     r9d, r9d
                mov     [rbp+60h+var_80], 4000000h
                lea     rax, aInstrootdrive ; "InstRootDrive"
                mov     [rbp+60h+var_98], 124h
                mov     [rbp+60h+var_90], rax
                lea     r8, [rbp+60h+var_A0]
                lea     rax, [rbp+60h+arg_0]
                mov     byte ptr [rsp+160h+var_138], sil
                lea     ecx, [r9+2]
                mov     [rbp+60h+var_88], rax
                lea     rdx, aWinpe     ; "WinPE"
                call    sub_14062B088
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B895A
                mov     ecx, [rbp+60h+arg_0]
                lea     eax, [rcx-41h]
                cmp     eax, 19h
                ja      short loc_1408B895A
                mov     rax, qword ptr [rsp+160h+var_130+8]
                mov     [rax], cx
                jmp     short loc_1408B89BD
; ---------------------------------------------------------------------------

loc_1408B895A:                          ; CODE XREF: sub_1408B8608+33B↑j
                                        ; sub_1408B8608+346↑j
                mov     rax, qword ptr [rsp+160h+var_130+8]
                mov     ecx, 58h ; 'X'
                mov     ebx, r13d
                mov     [rax], cx
                jmp     short loc_1408B89BD
; ---------------------------------------------------------------------------

loc_1408B896C:                          ; CODE XREF: sub_1408B8608+281↑j
                test    al, 8
                jz      loc_1408B89F5
                lea     rdx, [rsp+160h+var_F8]
                call    sub_1408B77B4
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B89FA
                mov     rbx, [rsp+160h+var_F8]
                lea     eax, [rdi+2]
                add     ax, [rbx]
                movzx   ecx, ax
                mov     word ptr [rsp+160h+var_130+2], cx
                call    sub_140704930
                mov     qword ptr [rsp+160h+var_130+8], rax
                test    rax, rax
                jz      loc_1408B88C3
                mov     rdx, rbx
                lea     rcx, [rsp+160h+var_130]
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B89FA

loc_1408B89BD:                          ; CODE XREF: sub_1408B8608+2E5↑j
                                        ; sub_1408B8608+350↑j ...
                mov     eax, 2
                cmp     di, ax
                jbe     short loc_1408B89DC
                lea     rdx, [rsp+160h+var_118]
                lea     rcx, [rsp+160h+var_130]
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B89FA

loc_1408B89DC:                          ; CODE XREF: sub_1408B8608+3BD↑j
                movups  xmm0, [rsp+160h+var_130]
                xor     edx, edx
                lea     rcx, [rsp+160h+var_130]
                movdqu  xmmword ptr [r12], xmm0
                call    RtlInitUnicodeString
                jmp     short loc_1408B89FA
; ---------------------------------------------------------------------------

loc_1408B89F5:                          ; CODE XREF: sub_1408B8608+366↑j
                mov     ebx, 0C0000225h

loc_1408B89FA:                          ; CODE XREF: sub_1408B8608+112↑j
                                        ; sub_1408B8608+132↑j ...
                lea     rcx, [rsp+160h+var_130]
                call    RtlFreeUnicodeString
                test    r14, r14
                jz      short loc_1408B8A13
                xor     edx, edx
                mov     rcx, r14
                call    ExFreePoolWithTag

loc_1408B8A13:                          ; CODE XREF: sub_1408B8608+3FF↑j
                test    r15, r15
                jz      short loc_1408B8A20
                mov     rcx, r15
                call    PsDereferenceSiloContext

loc_1408B8A20:                          ; CODE XREF: sub_1408B8608+40E↑j
                mov     rcx, [rbp+60h+arg_18]
                test    rcx, rcx
                jz      short loc_1408B8A31
                call    ZwClose

loc_1408B8A31:                          ; CODE XREF: sub_1408B8608+422↑j
                mov     eax, ebx
                mov     rbx, [rsp+160h+arg_8]
                add     rsp, 130h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B8608   endp

byte_1408B8A4F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DCB4↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B8A58   proc near               ; CODE XREF: sub_1408B90C4+10C↓p
                                        ; sub_1408B91FC+128↓p
                                        ; DATA XREF: ...

var_F8          = qword ptr -0F8h
var_F0          = qword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D0          = dword ptr -0D0h
var_CC          = dword ptr -0CCh
var_C8          = dword ptr -0C8h
var_C0          = qword ptr -0C0h
var_B8          = xmmword ptr -0B8h
var_A8          = dword ptr -0A8h
var_A4          = dword ptr -0A4h
var_A0          = qword ptr -0A0h
var_98          = xmmword ptr -98h
var_88          = qword ptr -88h
var_80          = qword ptr -80h
var_78          = qword ptr -78h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = qword ptr -50h
arg_0           = qword ptr  10h
arg_8           = dword ptr  18h
arg_10          = qword ptr  20h
arg_18          = qword ptr  28h

                mov     rax, rsp
                mov     [rax+20h], r9
                mov     [rax+18h], r8
                mov     [rax+10h], edx
                mov     [rax+8], rcx
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-5Fh]
                sub     rsp, 0D8h
                xor     eax, eax
                xorps   xmm0, xmm0
                mov     r12d, edx
                mov     [rbp+57h+var_88], rax
                mov     rbx, rcx
                mov     [rbp+57h+var_D0], eax
                xorps   xmm1, xmm1
                mov     dword ptr [rbp+57h+var_C0], eax
                xor     edx, edx
                mov     [rbp+57h+var_C8], eax
                lea     rcx, [rbp+57h+var_B8]
                mov     [rbp+57h+var_78], rax
                movups  [rbp+57h+var_B8], xmm0
                mov     r13d, eax
                mov     [rbp+57h+var_CC], eax
                mov     r15d, eax
                mov     [rbp+57h+var_80], rax
                mov     r14d, eax
                mov     [rbp+57h+var_A0], rax
                mov     esi, eax
                mov     [rbp+57h+var_50], rax
                movups  [rbp+57h+var_70], xmm0
                mov     [rbp+57h+var_A8], eax
                mov     rdi, r8
                movups  [rbp+57h+var_98], xmm1
                movups  [rbp+57h+var_60], xmm0
                call    RtlInitUnicodeString
                xor     edx, edx
                lea     rcx, [rbp+57h+var_98]
                call    RtlInitUnicodeString
                xor     edx, edx
                lea     rcx, [rbp+57h+var_60]
                call    RtlInitUnicodeString
                lea     rax, [rbp+57h+var_88]
                xor     r9d, r9d
                mov     [rsp+110h+var_E8], rax
                lea     r8, aSetupResolvefi ; "Setup\\ResolveFilePaths"
                mov     rdx, rbx
                mov     dword ptr [rsp+110h+var_F0], 20019h
                xor     ecx, ecx
                call    sub_14062CECC
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jnz     short loc_1408B8B28
                xor     edi, edi
                mov     ebx, edi
                jmp     loc_1408B907B
; ---------------------------------------------------------------------------

loc_1408B8B28:                          ; CODE XREF: sub_1408B8A58+C5↑j
                test    eax, eax
                js      loc_1408B907B
                lea     rdx, [rbp+57h+var_B8]
                mov     rcx, rdi
                call    sub_1408B8608
                mov     ebx, eax
                xor     eax, eax
                test    ebx, ebx
                jns     short loc_1408B8B51
                xor     edx, edx
                lea     rcx, [rbp+57h+var_B8]
                mov     ebx, eax
                call    RtlInitUnicodeString

loc_1408B8B51:                          ; CODE XREF: sub_1408B8A58+EA↑j
                test    r12b, 2
                jz      short loc_1408B8B93
                test    rdi, rdi
                jz      short loc_1408B8B74
                mov     r8b, 1
                lea     rdx, qword_140984CE8
                mov     rcx, rdi
                call    RtlEqualUnicodeString
                xor     edi, edi
                test    al, al
                jz      short loc_1408B8BCD

loc_1408B8B74:                          ; CODE XREF: sub_1408B8A58+102↑j
                cmp     qword ptr [rbp+57h+var_B8+8], rdi
                jz      short loc_1408B8B95
                mov     r8b, 1
                lea     rdx, qword_140985060
                lea     rcx, [rbp+57h+var_B8]
                call    RtlEqualUnicodeString
                test    al, al
                jz      short loc_1408B8BCD
                jmp     short loc_1408B8B95
; ---------------------------------------------------------------------------

loc_1408B8B93:                          ; CODE XREF: sub_1408B8A58+FD↑j
                xor     edi, edi

loc_1408B8B95:                          ; CODE XREF: sub_1408B8A58+120↑j
                                        ; sub_1408B8A58+139↑j
                test    r12b, 1
                jz      loc_1408B905B
                mov     rax, [rbp+57h+arg_18]
                test    rax, rax
                jz      loc_1408B905B
                cmp     qword ptr [rbp+57h+var_B8+8], rdi
                jz      loc_1408B905B
                mov     r8b, 1
                lea     rdx, [rbp+57h+var_B8]
                mov     rcx, rax
                call    RtlEqualUnicodeString
                test    al, al
                jnz     loc_1408B905B

loc_1408B8BCD:                          ; CODE XREF: sub_1408B8A58+11A↑j
                                        ; sub_1408B8A58+137↑j
                mov     rdx, [rbp+57h+var_88]
                lea     rax, [rbp+57h+var_C0]
                mov     [rsp+110h+var_E0], rax
                xor     r9d, r9d
                lea     rax, [rbp+57h+var_D0]
                xor     r8d, r8d
                mov     [rsp+110h+var_E8], rax
                mov     [rsp+110h+var_F0], rdi
                call    sub_1405E2F04
                test    eax, eax
                js      short loc_1408B8C6A
                mov     eax, [rbp+57h+var_D0]
                mov     r14d, dword ptr [rbp+57h+var_C0]
                mov     [rbp+57h+var_CC], r14d
                lea     r13d, ds:2[rax*2]
                mov     [rbp+57h+var_C8], r13d
                test    r13d, r13d
                jz      short loc_1408B8C3C
                mov     edx, r13d
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     [rbp+57h+var_78], rax
                mov     r15, rax
                test    rax, rax
                jnz     short loc_1408B8C3C
                mov     ebx, 0C000009Ah
                jmp     loc_1408B907B
; ---------------------------------------------------------------------------

loc_1408B8C3C:                          ; CODE XREF: sub_1408B8A58+1B9↑j
                                        ; sub_1408B8A58+1D8↑j
                test    r14d, r14d
                jz      short loc_1408B8C6A
                mov     rdx, r14
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     [rbp+57h+var_80], rax
                mov     rsi, rax
                test    rax, rax
                jnz     short loc_1408B8C6A

loc_1408B8C60:                          ; CODE XREF: sub_1408B8A58+2E5↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B905D
; ---------------------------------------------------------------------------

loc_1408B8C6A:                          ; CODE XREF: sub_1408B8A58+19D↑j
                                        ; sub_1408B8A58+1E7↑j ...
                mov     r12d, edi

loc_1408B8C6D:                          ; CODE XREF: sub_1408B8A58+5F3↓j
                mov     rdx, [rbp+57h+var_88]
                lea     rax, [rbp+57h+var_D0]
                mov     [rsp+38h], rax
                mov     edi, r13d
                lea     rax, [rbp+57h+var_A8]
                mov     [rsp+110h+var_E0], rsi
                mov     [rsp+110h+var_E8], rax
                mov     r9, r15
                lea     rax, [rbp+57h+var_C0]
                shr     edi, 1
                mov     r8d, r12d
                mov     [rsp+110h+var_F0], rax
                mov     [rbp+57h+var_A4], r12d
                mov     dword ptr [rbp+57h+var_C0], edi
                mov     [rbp+57h+var_D0], r14d
                call    sub_1405E2DCC
                cmp     eax, 8000001Ah
                jz      loc_1408B905D
                cmp     eax, 0C0000023h
                jnz     loc_1408B8D4B
                mov     eax, dword ptr [rbp+57h+var_C0]
                cmp     eax, edi
                jbe     short loc_1408B8D03
                lea     r13d, [rax+rax]
                mov     [rbp+57h+var_C8], r13d
                test    r15, r15
                jz      short loc_1408B8CE0
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag

loc_1408B8CE0:                          ; CODE XREF: sub_1408B8A58+27C↑j
                mov     edx, r13d
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     [rbp+57h+var_78], rax
                mov     r15, rax
                test    rax, rax
                jz      loc_1408B9050

loc_1408B8D03:                          ; CODE XREF: sub_1408B8A58+26F↑j
                cmp     [rbp+57h+var_D0], r14d
                jbe     short loc_1408B8D43
                mov     r14d, [rbp+57h+var_D0]
                mov     [rbp+57h+var_CC], r14d
                test    rsi, rsi
                jz      short loc_1408B8D20
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408B8D20:                          ; CODE XREF: sub_1408B8A58+2BC↑j
                mov     rdx, r14
                mov     ecx, 1
                mov     r8d, 62647050h
                call    ExAllocatePoolWithTag
                mov     [rbp+57h+var_80], rax
                mov     rsi, rax
                test    rax, rax
                jz      loc_1408B8C60

loc_1408B8D43:                          ; CODE XREF: sub_1408B8A58+2AF↑j
                dec     r12d
                jmp     loc_1408B9044
; ---------------------------------------------------------------------------

loc_1408B8D4B:                          ; CODE XREF: sub_1408B8A58+264↑j
                xor     edi, edi
                test    eax, eax
                js      loc_1408B9057
                cmp     [rbp+57h+var_A8], 7
                jnz     loc_1408B9044
                cmp     [rbp+57h+var_D0], 4
                jb      loc_1408B9044
                mov     eax, [rbp+57h+var_D0]
                shr     rax, 1
                cmp     [rsi+rax*2-2], di
                jnz     loc_1408B9044
                cmp     [rsi+rax*2-4], di
                jnz     loc_1408B9044
                mov     rdx, [rbp+57h+arg_0]
                lea     rax, [rbp+57h+var_A0]
                mov     [rsp+110h+var_E8], rax
                xor     r9d, r9d
                mov     r8, r15
                mov     dword ptr [rsp+110h+var_F0], 2001Fh
                xor     ecx, ecx
                call    sub_14062CECC
                cmp     eax, 0C0000034h
                jz      loc_1408B9044
                test    eax, eax
                js      loc_1408B9057
                mov     r13, rsi
                cmp     [rsi], di
                jz      loc_1408B9037
                mov     rsi, [rbp+57h+arg_10]
                mov     r15d, [rbp+57h+arg_8]

loc_1408B8DCE:                          ; CODE XREF: sub_1408B8A58+5C9↓j
                lea     rdx, asc_1407D6430 ; " "
                mov     rcx, r13
                call    _wcsicmp
                mov     rcx, [rbp+57h+var_A0]
                lea     rdi, qword_1407D6460
                test    eax, eax
                lea     r9, [rbp+57h+var_50]
                cmovnz  rdi, r13
                xor     r8d, r8d
                mov     rdx, rdi
                mov     [rbp+57h+var_C0], rdi
                call    sub_140739D08
                xor     r8d, r8d
                test    eax, eax
                js      loc_1408B9004
                mov     r14, [rbp+57h+var_50]
                mov     eax, [r14+4]
                test    eax, eax
                jz      loc_1408B8FF3
                cmp     eax, 2
                jbe     loc_1408B8F64
                cmp     eax, 7
                jnz     loc_1408B8FF3
                mov     ecx, [r14+0Ch]
                mov     edi, [r14+8]
                add     rdi, r14
                lea     eax, [rcx-4]
                cmp     eax, 0FFFAh
                ja      loc_1408B8FF3
                mov     eax, ecx
                shr     rax, 1
                cmp     [rdi+rax*2-2], r8w
                jnz     loc_1408B8FF3
                cmp     [rdi+rax*2-4], r8w
                jnz     loc_1408B8FF3
                movzx   eax, r8w
                mov     r12d, r8d
                mov     word ptr [rbp+57h+var_60], ax
                cmp     [rdi], r8w
                jz      loc_1408B8F30

loc_1408B8E79:                          ; CODE XREF: sub_1408B8A58+4CE↓j
                mov     rdx, rdi
                lea     rcx, [rbp+57h+var_70]
                call    RtlInitUnicodeString
                mov     rax, qword ptr [rbp+57h+var_B8+8]
                xor     ecx, ecx
                neg     rax
                mov     word ptr [rbp+57h+var_98], cx
                lea     rax, [rbp+57h+var_B8]
                mov     r8, rsi
                sbb     r9, r9
                lea     rcx, [rbp+57h+var_70]
                and     r9, rax
                mov     edx, r15d
                lea     rax, [rbp+57h+var_98]
                mov     [rsp+110h+var_E8], rax
                mov     rax, [rbp+57h+arg_18]
                mov     [rsp+110h+var_F0], rax
                call    sub_1408B935C
                mov     ebx, eax
                cmp     eax, 0C0000225h
                jz      short loc_1408B8EDE
                cmp     eax, 0C00000BBh
                jz      short loc_1408B8EDE
                test    eax, eax
                js      loc_1408B8FF3
                movzx   eax, word ptr [rbp+57h+var_98]
                inc     r12d
                jmp     short loc_1408B8EE8
; ---------------------------------------------------------------------------

loc_1408B8EDE:                          ; CODE XREF: sub_1408B8A58+46C↑j
                                        ; sub_1408B8A58+473↑j
                xor     r8d, r8d
                mov     eax, r8d
                mov     word ptr [rbp+57h+var_98], ax

loc_1408B8EE8:                          ; CODE XREF: sub_1408B8A58+484↑j
                test    ax, ax
                lea     rcx, [rbp+57h+var_70]
                lea     rdx, [rbp+57h+var_98]
                mov     r9b, 1
                cmovz   rdx, rcx
                xor     r8d, r8d
                lea     rcx, [rbp+57h+var_60]
                call    sub_1408A640C
                xor     r8d, r8d
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B8FF3
                movzx   eax, word ptr [rbp+57h+var_70]
                shr     rax, 1
                lea     rdi, [rdi+rax*2]
                add     rdi, 2
                cmp     [rdi], r8w
                jnz     loc_1408B8E79
                movzx   eax, word ptr [rbp+57h+var_60]

loc_1408B8F30:                          ; CODE XREF: sub_1408B8A58+41B↑j
                test    ebx, ebx
                js      loc_1408B8FF3
                test    r12d, r12d
                jz      loc_1408B8FF3
                mov     r9, qword ptr [rbp+57h+var_60+8]
                mov     rdx, [rbp+57h+var_C0]
                movzx   eax, ax

loc_1408B8F4C:                          ; CODE XREF: sub_1408B8A58+593↓j
                mov     r8d, [r14+4]
                mov     rcx, [rbp+57h+var_A0]
                mov     dword ptr [rsp+110h+var_F0], eax
                call    sub_140767814
                mov     ebx, eax
                jmp     loc_1408B8FF3
; ---------------------------------------------------------------------------

loc_1408B8F64:                          ; CODE XREF: sub_1408B8A58+3C7↑j
                mov     ecx, [r14+0Ch]
                mov     edx, [r14+8]
                add     rdx, r14
                lea     eax, [rcx-3]
                cmp     eax, 0FFFBh
                ja      short loc_1408B8FF3
                mov     eax, ecx
                shr     rax, 1
                cmp     [rdx+rax*2-2], r8w
                jnz     short loc_1408B8FF3
                lea     rcx, [rbp+57h+var_70]
                call    RtlInitUnicodeString
                mov     rax, qword ptr [rbp+57h+var_B8+8]
                lea     rcx, [rbp+57h+var_70]
                xor     r12d, r12d
                mov     r8, rsi
                neg     rax
                mov     word ptr [rbp+57h+var_98], r12w
                lea     rax, [rbp+57h+var_B8]
                mov     edx, r15d
                sbb     r9, r9
                and     r9, rax
                lea     rax, [rbp+57h+var_98]
                mov     [rsp+110h+var_E8], rax
                mov     rax, [rbp+57h+arg_18]
                mov     [rsp+110h+var_F0], rax
                call    sub_1408B935C
                mov     ebx, eax
                cmp     eax, 0C0000225h
                jz      short loc_1408B8FF0
                cmp     eax, 0C00000BBh
                jz      short loc_1408B8FF0
                test    eax, eax
                js      short loc_1408B8FF3
                movzx   eax, word ptr [rbp+57h+var_98]
                mov     rdx, rdi
                mov     r9, qword ptr [rbp+57h+var_98+8]
                add     eax, 2
                jmp     loc_1408B8F4C
; ---------------------------------------------------------------------------

loc_1408B8FF0:                          ; CODE XREF: sub_1408B8A58+578↑j
                                        ; sub_1408B8A58+57F↑j
                mov     ebx, r12d

loc_1408B8FF3:                          ; CODE XREF: sub_1408B8A58+3BE↑j
                                        ; sub_1408B8A58+3D0↑j ...
                xor     edx, edx
                mov     rcx, r14
                call    ExFreePoolWithTag
                xor     r8d, r8d
                test    ebx, ebx
                js      short loc_1408B9027

loc_1408B9004:                          ; CODE XREF: sub_1408B8A58+3AE↑j
                or      rax, 0FFFFFFFFFFFFFFFFh

loc_1408B9008:                          ; CODE XREF: sub_1408B8A58+5B9↓j
                inc     rax
                cmp     [r13+rax*2+0], r8w
                jnz     short loc_1408B9008
                lea     r13, [r13+rax*2+0]
                add     r13, 2
                cmp     [r13+0], r8w
                jnz     loc_1408B8DCE

loc_1408B9027:                          ; CODE XREF: sub_1408B8A58+5AA↑j
                mov     rsi, [rbp+57h+var_80]
                mov     r15, [rbp+57h+var_78]
                mov     r14d, [rbp+57h+var_CC]
                mov     r12d, [rbp+57h+var_A4]

loc_1408B9037:                          ; CODE XREF: sub_1408B8A58+368↑j
                mov     rcx, [rbp+57h+var_A0]
                call    ZwClose
                test    ebx, ebx
                js      short loc_1408B905D

loc_1408B9044:                          ; CODE XREF: sub_1408B8A58+2EE↑j
                                        ; sub_1408B8A58+301↑j ...
                mov     r13d, [rbp+57h+var_C8]
                inc     r12d
                jmp     loc_1408B8C6D
; ---------------------------------------------------------------------------

loc_1408B9050:                          ; CODE XREF: sub_1408B8A58+2A5↑j
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B906C
; ---------------------------------------------------------------------------

loc_1408B9057:                          ; CODE XREF: sub_1408B8A58+2F7↑j
                                        ; sub_1408B8A58+35C↑j
                mov     ebx, eax
                jmp     short loc_1408B905D
; ---------------------------------------------------------------------------

loc_1408B905B:                          ; CODE XREF: sub_1408B8A58+141↑j
                                        ; sub_1408B8A58+14E↑j ...
                mov     ebx, edi

loc_1408B905D:                          ; CODE XREF: sub_1408B8A58+20D↑j
                                        ; sub_1408B8A58+259↑j ...
                test    r15, r15
                jz      short loc_1408B906C
                xor     edx, edx
                mov     rcx, r15
                call    ExFreePoolWithTag

loc_1408B906C:                          ; CODE XREF: sub_1408B8A58+5FD↑j
                                        ; sub_1408B8A58+608↑j
                test    rsi, rsi
                jz      short loc_1408B907B
                xor     edx, edx
                mov     rcx, rsi
                call    ExFreePoolWithTag

loc_1408B907B:                          ; CODE XREF: sub_1408B8A58+CB↑j
                                        ; sub_1408B8A58+D2↑j ...
                lea     rcx, [rbp+57h+var_B8]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+57h+var_98]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+57h+var_60]
                call    RtlFreeUnicodeString
                mov     rcx, [rbp+57h+var_88]
                test    rcx, rcx
                jz      short loc_1408B90A4
                call    ZwClose

loc_1408B90A4:                          ; CODE XREF: sub_1408B8A58+645↑j
                mov     eax, ebx
                add     rsp, 0D8h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B8A58   endp

byte_1408B90BB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DCC0↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B90C4   proc near               ; CODE XREF: sub_1407666DC+DE7DE↑p
                                        ; DATA XREF: .pdata:000000014011DCCC↑o

var_20          = xmmword ptr -20h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  20h
arg_8           = qword ptr  28h
arg_10          = qword ptr  30h
arg_18          = qword ptr  38h

                mov     [rsp-18h+arg_0], rbx
                mov     [rsp-18h+arg_18], rsi
                push    rbp
                push    rdi
                push    r14
                mov     rbp, rsp
                sub     rsp, 40h
                xorps   xmm0, xmm0
                mov     rdi, rcx
                xor     esi, esi
                lea     rcx, [rbp+var_20]
                xor     edx, edx
                mov     [rbp+arg_10], rsi
                movups  [rbp+var_20], xmm0
                mov     [rbp+arg_8], rsi
                movups  [rbp+var_10], xmm0
                call    RtlInitUnicodeString
                lea     rdx, [rbp+var_20]
                mov     rcx, rdi
                call    sub_14073A090
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B91D7
                movzx   eax, word ptr [rbp+var_20]
                lea     r14d, [rsi+2]
                mov     rbx, qword ptr [rbp+var_20+8]
                cmp     ax, r14w
                jb      short loc_1408B914A
                mov     ecx, eax
                shr     rcx, 1
                cmp     word ptr [rbx+rcx*2-2], 5Ch ; '\'
                jnz     short loc_1408B914A
                mov     [rbx+rcx*2-2], si
                mov     ecx, 0FFFEh
                movzx   eax, word ptr [rbp+var_20]
                mov     rbx, qword ptr [rbp+var_20+8]
                add     ax, cx
                mov     word ptr [rbp+var_20], ax

loc_1408B914A:                          ; CODE XREF: sub_1408B90C4+5E↑j
                                        ; sub_1408B90C4+6B↑j
                cmp     ax, 1Ch
                jbe     short loc_1408B9172
                mov     r8b, 1
                lea     rdx, [rbp+var_20]
                lea     rcx, qword_140984E08
                call    RtlPrefixUnicodeString
                test    al, al
                jz      short loc_1408B9172
                cmp     word ptr [rbx+1Ah], 5Ch ; '\'
                lea     rdx, [rbx+1Ch]
                jz      short loc_1408B9179

loc_1408B9172:                          ; CODE XREF: sub_1408B90C4+8A↑j
                                        ; sub_1408B90C4+A1↑j
                lea     rdx, aSystem_1  ; "SYSTEM"

loc_1408B9179:                          ; CODE XREF: sub_1408B90C4+AC↑j
                lea     rcx, [rbp+var_10]
                call    RtlInitUnicodeString
                lea     rdx, [rbp+arg_8]
                lea     rcx, [rbp+var_10]
                call    sub_1405102DC
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B91D7
                mov     rcx, [rbp+arg_8]
                mov     eax, [rcx+1ECh]
                test    al, 1
                jnz     short loc_1408B91A7
                mov     ebx, esi
                jmp     short loc_1408B91D7
; ---------------------------------------------------------------------------

loc_1408B91A7:                          ; CODE XREF: sub_1408B90C4+DD↑j
                call    sub_14035C718
                neg     al
                lea     rdx, [rbp+arg_10]
                sbb     ebx, ebx
                and     ebx, r14d
                call    sub_1408B77B4
                mov     r9, [rbp+arg_10]
                lea     r8, [rbp+var_20]
                test    eax, eax
                lea     edx, [rbx+1]
                mov     rcx, rdi
                cmovs   r9, rsi
                call    sub_1408B8A58
                mov     ebx, eax

loc_1408B91D7:                          ; CODE XREF: sub_1408B90C4+48↑j
                                        ; sub_1408B90C4+CF↑j ...
                lea     rcx, [rbp+var_20]
                call    RtlFreeUnicodeString
                mov     rsi, [rsp+40h+arg_18]
                mov     eax, ebx
                mov     rbx, [rsp+40h+arg_0]
                add     rsp, 40h
                pop     r14
                pop     rdi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B90C4   endp

byte_1408B91F6  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DCCC↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B91FC   proc near               ; CODE XREF: sub_1408B9704+391↓p
                                        ; DATA XREF: .pdata:000000014011DCD8↑o

var_20          = dword ptr -20h
var_18          = qword ptr -18h
var_10          = xmmword ptr -10h
arg_0           = qword ptr  30h
arg_8           = qword ptr  38h
arg_10          = qword ptr  40h

                mov     [rsp-28h+arg_8], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 40h
                mov     r14, rdx
                mov     rsi, rcx
                xor     r15d, r15d
                lea     rcx, [rbp+var_10]
                xorps   xmm0, xmm0
                mov     [rbp+arg_10], r15
                xor     edx, edx
                mov     [rbp+arg_0], r15
                movups  [rbp+var_10], xmm0
                call    RtlInitUnicodeString
                mov     eax, [rsi+1ECh]
                lea     edi, [r15+1]
                test    dil, al
                jnz     short loc_1408B9249

loc_1408B9241:                          ; CODE XREF: sub_1408B91FC+79↓j
                mov     ebx, r15d
                jmp     loc_1408B932B
; ---------------------------------------------------------------------------

loc_1408B9249:                          ; CODE XREF: sub_1408B91FC+43↑j
                lea     rax, [rbp+arg_10]
                xor     r9d, r9d
                mov     [rsp+40h+var_18], rax
                lea     r8, aSetupResolvefi ; "Setup\\ResolveFilePaths"
                mov     rdx, r14
                mov     [rsp+40h+var_20], 20019h
                xor     ecx, ecx
                call    sub_14062CECC
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jz      short loc_1408B9241
                test    eax, eax
                js      loc_1408B932B
                mov     ecx, [rsi+40h]
                test    dil, cl
                jnz     short loc_1408B9296
                call    sub_14035C718
                test    al, al
                mov     edx, 3
                cmovnz  edi, edx

loc_1408B9296:                          ; CODE XREF: sub_1408B91FC+89↑j
                test    cl, 8
                jnz     short loc_1408B92B6
                lea     rdx, aSystemroot_3 ; "\\SystemRoot"
                lea     rcx, [rbp+var_10]
                call    RtlCreateUnicodeString
                test    al, al
                jnz     short loc_1408B9305

loc_1408B92AF:                          ; CODE XREF: sub_1408B91FC+E6↓j
                mov     ebx, 0C000009Ah
                jmp     short loc_1408B932B
; ---------------------------------------------------------------------------

loc_1408B92B6:                          ; CODE XREF: sub_1408B91FC+9D↑j
                movzx   eax, word ptr [rsi+12h]
                add     eax, 1Ch
                cmp     eax, 0FFFEh
                jbe     short loc_1408B92CB
                mov     ebx, 80000005h
                jmp     short loc_1408B932B
; ---------------------------------------------------------------------------

loc_1408B92CB:                          ; CODE XREF: sub_1408B91FC+C6↑j
                mov     ecx, eax
                mov     word ptr [rbp+var_10], r15w
                mov     word ptr [rbp+var_10+2], ax
                call    sub_140704930
                mov     qword ptr [rbp+var_10+8], rax
                test    rax, rax
                jz      short loc_1408B92AF
                lea     r9, [rsi+10h]
                lea     r8, aDriverstores_0 ; "\\DriverStores"
                lea     rdx, aWsWz_0    ; "%ws\\%wZ"
                lea     rcx, [rbp+var_10]
                call    sub_14036E1EC
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B932B

loc_1408B9305:                          ; CODE XREF: sub_1408B91FC+B1↑j
                lea     rdx, [rbp+arg_0]
                mov     rcx, rsi
                call    sub_1408B77B4
                mov     r9, [rbp+arg_0]
                lea     r8, [rbp+var_10]
                test    eax, eax
                mov     edx, edi
                mov     rcx, r14
                cmovs   r9, r15
                call    sub_1408B8A58
                mov     ebx, eax

loc_1408B932B:                          ; CODE XREF: sub_1408B91FC+48↑j
                                        ; sub_1408B91FC+7D↑j ...
                lea     rcx, [rbp+var_10]
                call    RtlFreeUnicodeString
                mov     rcx, [rbp+arg_10]
                test    rcx, rcx
                jz      short loc_1408B9342
                call    ZwClose

loc_1408B9342:                          ; CODE XREF: sub_1408B91FC+13F↑j
                mov     eax, ebx
                mov     rbx, [rsp+40h+arg_8]
                add     rsp, 40h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B91FC   endp

byte_1408B9356  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DCD8↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408B935C   proc near               ; CODE XREF: sub_1408B8A58+460↑p
                                        ; sub_1408B8A58+56C↑p
                                        ; DATA XREF: ...

var_48          = byte ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3C          = dword ptr -3Ch
var_38          = dword ptr -38h
var_28          = xmmword ptr -28h
var_18          = xmmword ptr -18h
arg_0           = qword ptr  48h
arg_8           = dword ptr  50h
arg_10          = qword ptr  58h
arg_18          = qword ptr  60h
arg_20          = qword ptr  68h
arg_28          = qword ptr  70h

                mov     [rsp-40h+arg_18], r9
                mov     [rsp-40h+arg_10], r8
                mov     [rsp-40h+arg_0], rcx
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 68h
                mov     ecx, edx
                mov     r14, r9
                xor     r9d, r9d
                xorps   xmm0, xmm0
                mov     r15b, r9b
                mov     [rbp+var_48], r9b
                mov     dil, r9b
                mov     [rbp+var_3C], r15d
                and     ecx, 2
                mov     [rbp+var_40], edi
                mov     esi, edx
                mov     [rbp+var_44], r9d
                lea     edx, [r9+1]
                mov     [rbp+var_38], ecx
                mov     rax, r8
                mov     ebx, r9d
                movups  [rbp+var_18], xmm0
                mov     r13d, r9d
                jz      short loc_1408B93E5
                test    rax, rax
                jz      short loc_1408B93E5
                mov     r8b, dl
                mov     rcx, rax
                lea     rdx, qword_140984CE8
                call    RtlEqualUnicodeString
                xor     r9d, r9d
                movzx   r15d, dil
                test    al, al
                lea     edx, [r13+1]
                cmovnz  r15d, edx
                mov     [rbp+var_3C], r15d

loc_1408B93E5:                          ; CODE XREF: sub_1408B935C+5B↑j
                                        ; sub_1408B935C+60↑j
                mov     r12, [rbp+arg_20]
                and     esi, edx
                mov     [rbp+arg_8], esi
                jz      short loc_1408B941B
                test    r12, r12
                jz      short loc_1408B941B
                test    r14, r14
                jz      short loc_1408B941B
                mov     r8b, dl
                mov     rcx, r12
                mov     rdx, r14
                call    RtlEqualUnicodeString
                xor     r9d, r9d
                movzx   edi, dil
                test    al, al
                lea     eax, [r9+1]
                cmovnz  edi, eax
                mov     [rbp+var_40], edi

loc_1408B941B:                          ; CODE XREF: sub_1408B935C+92↑j
                                        ; sub_1408B935C+97↑j ...
                mov     rdi, [rbp+arg_28]
                mov     rax, [rbp+arg_0]
                mov     [rdi], r9w
                movups  xmm0, xmmword ptr [rax]
                movaps  [rbp+var_28], xmm0
                psrldq  xmm0, 8
                movq    rax, xmm0
                mov     [rbp+arg_28], rax
                cmp     [rax], r9w
                jz      loc_1408B96E2

loc_1408B9446:                          ; CODE XREF: sub_1408B935C+32B↓j
                mov     rsi, r9
                cmp     [rbp+var_38], r9d
                jz      loc_1408B94D6
                cmp     [rbp+arg_10], r9
                jz      short loc_1408B9490
                test    r15b, r15b
                jnz     short loc_1408B9490
                lea     rdx, qword_140984CE8
                lea     rcx, [rbp+var_28]
                call    sub_1408B7684
                xor     r9d, r9d
                lea     r15d, [r9+1]
                test    rax, rax
                jnz     short loc_1408B9480
                mov     byte ptr [rbp+var_3C], r15b
                jmp     short loc_1408B9496
; ---------------------------------------------------------------------------

loc_1408B9480:                          ; CODE XREF: sub_1408B935C+11C↑j
                mov     r13, [rbp+arg_10]
                mov     rsi, rax
                mov     [rbp+var_44], 16h
                jmp     short loc_1408B9496
; ---------------------------------------------------------------------------

loc_1408B9490:                          ; CODE XREF: sub_1408B935C+FB↑j
                                        ; sub_1408B935C+100↑j
                mov     r15d, 1

loc_1408B9496:                          ; CODE XREF: sub_1408B935C+122↑j
                                        ; sub_1408B935C+132↑j
                test    r14, r14
                jz      short loc_1408B94D6
                cmp     [rbp+var_48], r9b
                jnz     short loc_1408B94D6
                lea     rdx, qword_140985060
                lea     rcx, [rbp+var_28]
                call    sub_1408B7684
                xor     r9d, r9d
                test    rax, rax
                jnz     short loc_1408B94BF
                mov     [rbp+var_48], r15b
                jmp     short loc_1408B94D6
; ---------------------------------------------------------------------------

loc_1408B94BF:                          ; CODE XREF: sub_1408B935C+15B↑j
                test    rsi, rsi
                jz      short loc_1408B94C9
                cmp     rax, rsi
                jnb     short loc_1408B94D6

loc_1408B94C9:                          ; CODE XREF: sub_1408B935C+166↑j
                mov     rsi, rax
                mov     [rbp+var_44], 18h
                mov     r13, r14

loc_1408B94D6:                          ; CODE XREF: sub_1408B935C+F1↑j
                                        ; sub_1408B935C+13D↑j ...
                mov     r10d, 2
                cmp     [rbp+arg_8], r9d
                jz      loc_1408B96AD
                test    r14, r14
                jz      loc_1408B96AD
                cmp     byte ptr [rbp+var_40], r9b
                jnz     loc_1408B96AD
                test    r12, r12
                jz      loc_1408B96AD
                cmp     [r12], r10w
                jbe     loc_1408B96AD
                mov     rdx, r12
                lea     rcx, [rbp+var_28]
                call    sub_1408B7684
                xor     r9d, r9d
                test    rax, rax
                jnz     loc_1408B968C
                lea     eax, [r9+1]
                mov     byte ptr [rbp+var_40], al

loc_1408B952C:                          ; CODE XREF: sub_1408B935C+338↓j
                mov     eax, [rbp+var_44]

loc_1408B952F:                          ; CODE XREF: sub_1408B935C+34C↓j
                mov     r10d, 2

loc_1408B9535:                          ; CODE XREF: sub_1408B935C+354↓j
                test    rsi, rsi
                jz      loc_1408B96BA
                mov     rcx, [rbp+arg_0]
                mov     r15, rsi
                sub     r15, [rbp+arg_28]
                shr     rax, 1
                sar     r15, 1
                movzx   r8d, word ptr [rcx]
                add     r15w, r15w
                mov     word ptr [rbp+var_28], r15w
                lea     r14, [rsi+rax*2]
                mov     eax, r14d
                mov     qword ptr [rbp+var_18+8], r14
                sub     eax, [rcx+8]
                sar     rax, 1
                add     ax, ax
                sub     r8w, ax
                movzx   edx, r8w
                mov     word ptr [rbp+var_18], dx
                lea     eax, [r10+r8]
                mov     word ptr [rbp+var_18+2], ax
                movzx   eax, word ptr [r14]
                test    ax, ax
                jz      short loc_1408B9597
                cmp     ax, 5Ch ; '\'
                jnz     loc_1408B9668

loc_1408B9597:                          ; CODE XREF: sub_1408B935C+22F↑j
                cmp     ax, 5Ch ; '\'
                jnz     short loc_1408B95C6
                movzx   ecx, word ptr [r13+0]
                mov     rax, [r13+8]
                shr     rcx, 1
                cmp     word ptr [rax+rcx*2-2], 5Ch ; '\'
                jnz     short loc_1408B95C6
                add     r14, 2
                mov     word ptr [rbp+var_18+2], r8w
                sub     dx, r10w
                mov     qword ptr [rbp+var_18+8], r14
                mov     word ptr [rbp+var_18], dx

loc_1408B95C6:                          ; CODE XREF: sub_1408B935C+23F↑j
                                        ; sub_1408B935C+253↑j
                movzx   eax, word ptr [rdi]
                movzx   ebx, word ptr [r13+0]
                add     ebx, 2
                movzx   ecx, r15w
                add     ecx, eax
                movzx   eax, dx
                add     ecx, eax
                add     ebx, ecx
                cmp     ebx, 0FFFEh
                ja      loc_1408B96DB
                movzx   eax, word ptr [rdi+2]
                cmp     ebx, eax
                jbe     short loc_1408B9638
                mov     ecx, ebx
                call    sub_140704930
                xor     r9d, r9d
                mov     rsi, rax
                test    rax, rax
                jz      loc_1408B96B5
                mov     rcx, [rdi+8]
                test    rcx, rcx
                jz      short loc_1408B9630
                movzx   eax, word ptr [rdi]
                test    ax, ax
                jz      short loc_1408B962B
                mov     rdx, rcx
                mov     r8d, eax
                mov     rcx, rsi
                call    memmove
                mov     rcx, [rdi+8]

loc_1408B962B:                          ; CODE XREF: sub_1408B935C+2BB↑j
                call    ExFreePoolWithTag

loc_1408B9630:                          ; CODE XREF: sub_1408B935C+2B3↑j
                mov     [rdi+8], rsi
                mov     [rdi+2], bx

loc_1408B9638:                          ; CODE XREF: sub_1408B935C+294↑j
                test    r15w, r15w
                jz      short loc_1408B9654
                lea     rdx, [rbp+var_28]
                mov     rcx, rdi
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B96E7

loc_1408B9654:                          ; CODE XREF: sub_1408B935C+2E0↑j
                mov     rdx, r13
                mov     rcx, rdi
                call    RtlAppendUnicodeStringToString
                xor     r9d, r9d
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B96E7

loc_1408B9668:                          ; CODE XREF: sub_1408B935C+235↑j
                movaps  xmm0, [rbp+var_18]
                movdqa  [rbp+var_28], xmm0
                cmp     [r14], r9w
                jz      short loc_1408B96BA
                mov     rax, qword ptr [rbp+var_28+8]
                mov     r14, [rbp+arg_18]
                mov     r15d, [rbp+var_3C]
                mov     [rbp+arg_28], rax
                jmp     loc_1408B9446
; ---------------------------------------------------------------------------

loc_1408B968C:                          ; CODE XREF: sub_1408B935C+1C3↑j
                test    rsi, rsi
                jz      short loc_1408B969A
                cmp     rax, rsi
                jnb     loc_1408B952C

loc_1408B969A:                          ; CODE XREF: sub_1408B935C+333↑j
                mov     rsi, rax
                mov     r13, r14
                movzx   eax, word ptr [r12]
                mov     [rbp+var_44], eax
                jmp     loc_1408B952F
; ---------------------------------------------------------------------------

loc_1408B96AD:                          ; CODE XREF: sub_1408B935C+184↑j
                                        ; sub_1408B935C+18D↑j ...
                mov     eax, [rbp+var_44]
                jmp     loc_1408B9535
; ---------------------------------------------------------------------------

loc_1408B96B5:                          ; CODE XREF: sub_1408B935C+2A6↑j
                mov     ebx, 0C000009Ah

loc_1408B96BA:                          ; CODE XREF: sub_1408B935C+1DC↑j
                                        ; sub_1408B935C+319↑j
                test    ebx, ebx
                js      short loc_1408B96E7
                cmp     [rdi], r9w
                jz      short loc_1408B96E2
                cmp     word ptr [rbp+var_28], r9w
                jbe     short loc_1408B96E7
                lea     rdx, [rbp+var_28]
                mov     rcx, rdi
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                jmp     short loc_1408B96E7
; ---------------------------------------------------------------------------

loc_1408B96DB:                          ; CODE XREF: sub_1408B935C+288↑j
                mov     ebx, 80000005h
                jmp     short loc_1408B96E7
; ---------------------------------------------------------------------------

loc_1408B96E2:                          ; CODE XREF: sub_1408B935C+E4↑j
                                        ; sub_1408B935C+366↑j
                mov     ebx, 0C0000225h

loc_1408B96E7:                          ; CODE XREF: sub_1408B935C+2F2↑j
                                        ; sub_1408B935C+30A↑j ...
                mov     eax, ebx
                add     rsp, 68h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B935C   endp

byte_1408B96FB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DCE4↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408B9704   proc near               ; CODE XREF: sub_140724C50+130CA0↑p
                                        ; sub_1407A309C+B29AE↑p
                                        ; DATA XREF: ...

var_C0          = qword ptr -0C0h
var_B8          = dword ptr -0B8h
var_B0          = qword ptr -0B0h
var_A8          = dword ptr -0A8h
var_A0          = dword ptr -0A0h
var_98          = dword ptr -98h
var_90          = xmmword ptr -90h
var_80          = xmmword ptr -80h
var_70          = xmmword ptr -70h
var_60          = xmmword ptr -60h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = xmmword ptr -30h
var_20          = byte ptr -20h
arg_10          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rsi
                mov     [rax+20h], rdi
                push    rbp
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rax-5Fh]
                sub     rsp, 0C0h
                xorps   xmm0, xmm0
                xorps   xmm1, xmm1
                mov     rdi, rcx
                xor     esi, esi
                lea     rcx, [rbp+57h+var_70]
                mov     [rbp+57h+arg_10], rsi
                movups  [rbp+57h+var_50], xmm0
                mov     r13b, sil
                mov     r12, rdx
                movups  [rbp+57h+var_40], xmm0
                movups  [rbp+57h+var_30], xmm0
                movups  [rbp+57h+var_70], xmm0
                movups  [rbp+57h+var_80], xmm1
                movups  [rbp+57h+var_90], xmm0
                movups  [rbp+57h+var_60], xmm1
                call    RtlInitUnicodeString
                xor     edx, edx
                lea     rcx, [rbp+57h+var_80]
                call    RtlInitUnicodeString
                xor     edx, edx
                lea     rcx, [rbp+57h+var_90]
                call    RtlInitUnicodeString
                lea     rdx, aSystem_1  ; "SYSTEM"
                mov     rcx, r12
                call    _wcsicmp
                test    eax, eax
                jnz     short loc_1408B97C5
                lea     rax, [rdi+20h]
                mov     dword ptr [rbp+57h+var_50], 30h ; '0'
                xorps   xmm0, xmm0
                mov     qword ptr [rbp+57h+var_40], rax
                lea     r8, [rbp+57h+var_50]
                mov     qword ptr [rbp+57h+var_50+8], rsi
                mov     edx, 0F003Fh
                mov     dword ptr [rbp+57h+var_40+8], 240h
                lea     rcx, [rbp+57h+arg_10]
                movdqu  [rbp+57h+var_30], xmm0
                call    ZwOpenKey
                mov     ebx, eax
                jmp     loc_1408B986D
; ---------------------------------------------------------------------------

loc_1408B97C5:                          ; CODE XREF: sub_1408B9704+84↑j
                mov     eax, [rdi+40h]
                test    al, 8
                jnz     loc_1408B987A
                movzx   eax, word ptr [rbp+57h+var_70]
                add     ax, 26h ; '&'
                mov     word ptr [rbp+57h+var_90], si
                movzx   ecx, ax
                mov     word ptr [rbp+57h+var_90+2], cx
                call    sub_140704930
                mov     qword ptr [rbp+57h+var_90+8], rax
                test    rax, rax
                jnz     short loc_1408B97FB

loc_1408B97F1:                          ; CODE XREF: sub_1408B9704+1A2↓j
                                        ; sub_1408B9704+229↓j
                mov     ebx, 0C000009Ah
                jmp     loc_1408B9ABC
; ---------------------------------------------------------------------------

loc_1408B97FB:                          ; CODE XREF: sub_1408B9704+EB↑j
                lea     rdx, aRegistryMachin_65 ; "\\REGISTRY\\MACHINE\\"
                lea     rcx, [rbp+57h+var_90]
                call    RtlAppendUnicodeToString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B9ABC
                lea     rdx, [rbp+57h+var_70]
                lea     rcx, [rbp+57h+var_90]
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B9ABC
                lea     rax, [rbp+57h+var_90]
                mov     dword ptr [rbp+57h+var_50], 30h ; '0'
                xorps   xmm0, xmm0
                mov     qword ptr [rbp+57h+var_40], rax
                lea     r8, [rbp+57h+var_50]
                mov     qword ptr [rbp+57h+var_50+8], rsi
                mov     edx, 0F003Fh
                mov     dword ptr [rbp+57h+var_40+8], 240h
                lea     rcx, [rbp+57h+arg_10]
                movdqu  [rbp+57h+var_30], xmm0
                call    ZwOpenKey
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jz      loc_1408B9ABA

loc_1408B986D:                          ; CODE XREF: sub_1408B9704+BC↑j
                test    eax, eax
                js      loc_1408B9ABC
                jmp     loc_1408B9A8E
; ---------------------------------------------------------------------------

loc_1408B987A:                          ; CODE XREF: sub_1408B9704+C6↑j
                call    sub_14035C718
                test    al, al
                jz      loc_1408B9ABA
                movzx   eax, word ptr [rdi+32h]
                add     ax, word ptr [rbp+57h+var_70]
                movzx   ecx, ax
                mov     word ptr [rbp+57h+var_80+2], cx
                mov     word ptr [rbp+57h+var_80], si
                call    sub_140704930
                mov     qword ptr [rbp+57h+var_80+8], rax
                test    rax, rax
                jz      loc_1408B97F1
                lea     rdx, [rdi+30h]
                lea     rcx, [rbp+57h+var_80]
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B9ABC
                movzx   ecx, word ptr [rbp+57h+var_80]
                mov     r15d, 2
                cmp     cx, r15w
                jbe     short loc_1408B98F7
                mov     rdx, qword ptr [rbp+57h+var_80+8]

loc_1408B98D7:                          ; CODE XREF: sub_1408B9704+1F1↓j
                movzx   eax, cx
                shr     rax, 1
                cmp     word ptr [rdx+rax*2-2], 5Ch ; '\'
                jz      short loc_1408B98F7
                mov     eax, 0FFFEh
                add     cx, ax
                mov     word ptr [rbp+57h+var_80], cx
                cmp     cx, r15w
                ja      short loc_1408B98D7

loc_1408B98F7:                          ; CODE XREF: sub_1408B9704+1CD↑j
                                        ; sub_1408B9704+1DF↑j
                lea     rdx, [rbp+57h+var_70]
                lea     rcx, [rbp+57h+var_80]
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B9ABC
                movzx   eax, word ptr [rdi+22h]
                add     ax, word ptr [rbp+57h+var_70]
                movzx   ecx, ax
                mov     word ptr [rbp+57h+var_90+2], cx
                mov     word ptr [rbp+57h+var_90], si
                call    sub_140704930
                mov     qword ptr [rbp+57h+var_90+8], rax
                test    rax, rax
                jz      loc_1408B97F1
                lea     rdx, [rdi+20h]
                lea     rcx, [rbp+57h+var_90]
                call    RtlAppendUnicodeStringToString
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B9ABC
                lea     rdx, aDrivers   ; "DRIVERS"
                lea     rcx, [rbp+57h+var_60]
                call    RtlInitUnicodeString
                movzx   esi, word ptr [rbp+57h+var_60]
                movzx   ebx, word ptr [rbp+57h+var_90]
                lea     rax, [r15+rsi]
                mov     r15, qword ptr [rbp+57h+var_90+8]
                cmp     rbx, rax
                jbe     short loc_1408B9994
                mov     r8b, 1
                lea     rdx, [rbp+57h+var_90]
                lea     rcx, [rbp+57h+var_60]
                call    RtlSuffixUnicodeString
                test    al, al
                jz      short loc_1408B9994
                mov     ecx, ebx
                sub     rcx, rsi
                shr     rcx, 1
                cmp     word ptr [r15+rcx*2-2], 5Ch ; '\'
                jnz     short loc_1408B99D7

loc_1408B9994:                          ; CODE XREF: sub_1408B9704+269↑j
                                        ; sub_1408B9704+27D↑j
                lea     rdx, aSystem_1  ; "SYSTEM"
                lea     rcx, [rbp+57h+var_60]
                call    RtlInitUnicodeString
                movzx   esi, word ptr [rbp+57h+var_60]
                lea     rax, [rsi+2]
                cmp     rbx, rax
                jbe     short loc_1408B99DE
                mov     r8b, 1
                lea     rdx, [rbp+57h+var_90]
                lea     rcx, [rbp+57h+var_60]
                call    RtlSuffixUnicodeString
                test    al, al
                jz      short loc_1408B99DE
                mov     rcx, rbx
                sub     rcx, rsi
                shr     rcx, 1
                cmp     word ptr [r15+rcx*2-2], 5Ch ; '\'
                jz      short loc_1408B99DE

loc_1408B99D7:                          ; CODE XREF: sub_1408B9704+28E↑j
                sub     bx, si
                mov     word ptr [rbp+57h+var_90], bx

loc_1408B99DE:                          ; CODE XREF: sub_1408B9704+2AB↑j
                                        ; sub_1408B9704+2BF↑j ...
                lea     rdx, [rbp+57h+var_70]
                lea     rcx, [rbp+57h+var_90]
                call    RtlAppendUnicodeStringToString
                xor     esi, esi
                mov     ebx, eax
                test    eax, eax
                js      loc_1408B9ABC
                lea     r9, [rbp+57h+arg_10]
                mov     r8d, 2000h
                lea     rdx, [rbp+57h+var_80]
                lea     rcx, [rbp+57h+var_90]
                call    sub_140724F34
                mov     ebx, eax
                cmp     eax, 0C0000034h
                jz      loc_1408B9ABA
                test    eax, eax
                js      loc_1408B9ABC
                mov     eax, [rdi+1ECh]
                test    al, 2
                jz      short loc_1408B9A8B
                lea     rdx, aSoftware  ; "SOFTWARE"
                mov     rcx, r12
                call    _wcsicmp
                test    eax, eax
                jnz     short loc_1408B9A8B
                movzx   eax, word ptr [rbp+57h+var_90]
                lea     r8d, [rsi+7]
                mov     r9, [rdi+48h]
                add     eax, 2
                mov     rdx, [rdi+18h]
                mov     rcx, cs:qword_140CF4378
                mov     [rsp+0E0h+var_98], esi
                mov     [rsp+0E0h+var_A0], eax
                mov     rax, qword ptr [rbp+57h+var_90+8]
                mov     qword ptr [rsp+0E0h+var_A8], rax
                lea     rax, qword_14002EE30
                mov     dword ptr [rsp+0E0h+var_B0], 12h
                mov     qword ptr [rsp+0E0h+var_B8], rax
                mov     [rsp+0E0h+var_C0], rsi
                call    sub_1407374DC
                jmp     short loc_1408B9A8E
; ---------------------------------------------------------------------------

loc_1408B9A8B:                          ; CODE XREF: sub_1408B9704+327↑j
                                        ; sub_1408B9704+33A↑j
                mov     r13b, 1

loc_1408B9A8E:                          ; CODE XREF: sub_1408B9704+171↑j
                                        ; sub_1408B9704+385↑j
                mov     rdx, [rbp+57h+arg_10]
                mov     rcx, rdi
                call    sub_1408B91FC
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408B9ABC
                mov     eax, [rdi+40h]
                test    al, 8
                jz      short loc_1408B9ABC
                mov     r8, [rbp+57h+arg_10]
                mov     rdx, r12
                mov     rcx, rdi
                call    sub_1408B7F58
                mov     ebx, eax
                jmp     short loc_1408B9ABC
; ---------------------------------------------------------------------------

loc_1408B9ABA:                          ; CODE XREF: sub_1408B9704+163↑j
                                        ; sub_1408B9704+17D↑j ...
                mov     ebx, esi

loc_1408B9ABC:                          ; CODE XREF: sub_1408B9704+F2↑j
                                        ; sub_1408B9704+10B↑j ...
                mov     rcx, [rbp+57h+arg_10]
                test    rcx, rcx
                jz      short loc_1408B9ACA
                call    ZwClose

loc_1408B9ACA:                          ; CODE XREF: sub_1408B9704+3BF↑j
                test    r13b, r13b
                jz      short loc_1408B9ADA
                xor     edx, edx
                lea     rcx, [rbp+57h+var_90]
                call    sub_140724EE8

loc_1408B9ADA:                          ; CODE XREF: sub_1408B9704+3C9↑j
                lea     rcx, [rbp+57h+var_80]
                call    RtlFreeUnicodeString
                lea     rcx, [rbp+57h+var_90]
                call    RtlFreeUnicodeString
                lea     r11, [rsp+0E0h+var_20]
                mov     eax, ebx
                mov     rbx, [r11+30h]
                mov     rsi, [r11+38h]
                mov     rdi, [r11+48h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B9704   endp

byte_1408B9B10  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011DCF0↑o

; =============== S U B R O U T I N E =======================================


sub_1408B9B18   proc near               ; CODE XREF: sub_1406CAF50+152908↑p
                                        ; sub_1406CAF50+15296C↑p
                                        ; DATA XREF: ...

var_18          = xmmword ptr -18h
arg_8           = qword ptr  10h

                sub     rsp, 38h
                and     [rsp+38h+arg_8], 0
                xorps   xmm0, xmm0
                mov     rdx, rcx
                lea     rcx, [rsp+38h+var_18]
                movups  [rsp+38h+var_18], xmm0
                call    RtlInitUnicodeString
                lea     rdx, [rsp+38h+arg_8]
                lea     rcx, [rsp+38h+var_18]
                call    sub_1405102DC
                mov     ecx, eax
                test    eax, eax
                js      short loc_1408B9B73
                mov     rax, [rsp+38h+arg_8]
                mov     ecx, [rax+40h]
                test    cl, 1
                jz      short loc_1408B9B60
                mov     ecx, 0C0000022h
                jmp     short loc_1408B9B73
; ---------------------------------------------------------------------------

loc_1408B9B60:                          ; CODE XREF: sub_1408B9B18+3F↑j
                and     cl, 10h
                neg     cl
                mov     ecx, 0C0000022h
                sbb     eax, eax
                and     eax, 99h
                add     ecx, eax

loc_1408B9B73:                          ; CODE XREF: sub_1408B9B18+32↑j
                                        ; sub_1408B9B18+46↑j
                mov     eax, ecx
                add     rsp, 38h
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B9B18   endp

byte_1408B9B7B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DCFC↑o

; =============== S U B R O U T I N E =======================================


sub_1408B9B84   proc near               ; CODE XREF: sub_1408B9C14+9↓p
                                        ; sub_1408B9E18+EE↓p ...

var_18          = qword ptr -18h

                push    rbx
                sub     rsp, 30h
                cmp     dword ptr [rcx+12Ch], 309h
                mov     rbx, rcx
                jnz     short loc_1408B9C07
                mov     eax, [rcx+2C0h]
                mov     r9d, 20h ; ' '
                test    r9b, al
                jnz     short loc_1408B9BC2
                and     [rsp+38h+var_18], 0
                lea     edx, [r9-13h]
                mov     r8, rcx
                mov     ecx, 0CAh
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_1408B9BC2:                          ; CODE XREF: sub_1408B9B84+24↑j
                mov     rcx, [rcx+20h]
                call    sub_14036D8E4
                mov     rdx, [rbx+20h]
                mov     cl, 6
                and     dword ptr [rbx+2C0h], 0FFFFFFDFh
                call    sub_1408B44A0
                mov     rcx, rbx
                call    sub_14036F358
                test    dword ptr [rbx+18Ch], 1000000h
                jz      short loc_1408B9C07
                mov     rcx, [rbx+20h]
                call    sub_140393DF8
                mov     edx, 1000000h
                mov     rcx, rbx
                call    sub_14073832C

loc_1408B9C07:                          ; CODE XREF: sub_1408B9B84+13↑j
                                        ; sub_1408B9B84+6B↑j
                add     rsp, 30h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B9B84   endp

byte_1408B9C0E  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DD08↑o

; =============== S U B R O U T I N E =======================================


sub_1408B9C14   proc near               ; CODE XREF: sub_1408B9C14+17↓p
                                        ; sub_1408BA044+19A↓p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                call    sub_1408B9B84
                mov     rbx, [rbx+8]
                jmp     short loc_1408B9C33
; ---------------------------------------------------------------------------

loc_1408B9C28:                          ; CODE XREF: sub_1408B9C14+22↓j
                mov     rcx, rbx
                call    sub_1408B9C14
                mov     rbx, [rbx]

loc_1408B9C33:                          ; CODE XREF: sub_1408B9C14+12↑j
                test    rbx, rbx
                jnz     short loc_1408B9C28
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B9C14   endp

byte_1408B9C3F  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DD14↑o

; =============== S U B R O U T I N E =======================================


sub_1408B9C48   proc near               ; CODE XREF: sub_1408BA044+135↓p
                                        ; DATA XREF: .pdata:000000014011DD20↑o

var_28          = qword ptr -28h
var_20          = byte ptr -20h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = byte ptr  28h
arg_28          = qword ptr  30h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 30h
                mov     rsi, r9
                mov     r12, r8
                mov     rbx, rdx
                test    ecx, ecx
                jnz     short loc_1408B9CF0
                test    rdx, rdx
                jz      short loc_1408B9CF0
                mov     rdi, [rsp+48h+arg_28]
                mov     [rdi+28h], rdx
                mov     ecx, [rdx+12Ch]
                mov     edx, 308h
                cmp     ecx, edx
                jz      short loc_1408B9C93
                mov     rbx, [rbx+10h]

loc_1408B9C93:                          ; CODE XREF: sub_1408B9C48+45↑j
                xor     eax, eax
                cmp     ecx, edx
                setnz   al
                inc     eax
                mov     [rdi+8], eax
                test    rbx, rbx
                jz      loc_1408B9D35
                mov     r15b, [rsp+48h+arg_20]
                lea     rbp, [rdi+50h]

loc_1408B9CB1:                          ; CODE XREF: sub_1408B9C48+93↓j
                mov     [rsp+48h+var_20], r15b
                lea     r9, [rdi+40h]
                mov     r8, rsi
                mov     [rsp+48h+var_28], rbp
                mov     rdx, r12
                mov     rcx, rbx
                call    sub_1408B9D60
                cmp     eax, 119h
                jnz     short loc_1408B9CDD
                mov     rbx, [rbx+10h]
                test    rbx, rbx
                jnz     short loc_1408B9CB1

loc_1408B9CDD:                          ; CODE XREF: sub_1408B9C48+8A↑j
                test    rbx, rbx
                jz      short loc_1408B9D35
                shr     eax, 1Fh
                xor     al, 1
                mov     [rdi+20h], al
                mov     [rdi+18h], rbx
                jmp     short loc_1408B9D35
; ---------------------------------------------------------------------------

loc_1408B9CF0:                          ; CODE XREF: sub_1408B9C48+28↑j
                                        ; sub_1408B9C48+2D↑j
                mov     rdi, [rsp+48h+arg_28]
                mov     r8, rsi
                mov     eax, ecx
                mov     rdx, r12
                lea     rcx, [rdi+50h]
                lea     rcx, [rcx+rax*4]
                lea     r9, [rdi+40h]
                lea     r9, [r9+rax*8]
                mov     al, [rsp+48h+arg_20]
                mov     [rsp+48h+var_20], al
                mov     [rsp+48h+var_28], rcx
                mov     rcx, cs:qword_140C44D00
                call    sub_1408B9D60
                mov     rax, cs:qword_140C44D00
                mov     [rdi+18h], rax
                mov     byte ptr [rdi+20h], 1

loc_1408B9D35:                          ; CODE XREF: sub_1408B9C48+5A↑j
                                        ; sub_1408B9C48+98↑j ...
                mov     eax, [rsi]
                mov     rbx, [rsp+48h+arg_0]
                mov     rbp, [rsp+48h+arg_8]
                mov     rsi, [rsp+48h+arg_10]
                mov     [rdi], eax
                mov     rdi, [rsp+48h+arg_18]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     r12
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B9C48   endp

algn_1408B9D59:                         ; DATA XREF: .pdata:000000014011DD20↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408B9D60   proc near               ; CODE XREF: sub_1408B9C48+80↑p
                                        ; sub_1408B9C48+D9↑p ...

var_38          = qword ptr -38h
var_30          = byte ptr -30h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_20          = qword ptr  28h
arg_28          = byte ptr  30h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 30h
                mov     rdi, [rcx+8]
                xor     ebx, ebx
                mov     r12b, [rsp+58h+arg_28]
                mov     rbp, r9
                mov     r13, [rsp+58h+arg_20]
                mov     r14, r8
                mov     r15, rdx
                mov     rsi, rcx
                test    rdi, rdi
                jz      short loc_1408B9DD4

loc_1408B9DA3:                          ; CODE XREF: sub_1408B9D60+6E↓j
                mov     [rsp+58h+var_30], r12b
                mov     r9, rbp
                mov     r8, r14
                mov     [rsp+58h+var_38], r13
                mov     rdx, r15
                mov     rcx, rdi
                call    sub_1408B9D60
                mov     rdi, [rdi]
                test    eax, eax
                mov     ecx, 0C0000001h
                cmovs   ebx, ecx
                test    rdi, rdi
                jnz     short loc_1408B9DA3
                test    ebx, ebx
                js      short loc_1408B9DF1

loc_1408B9DD4:                          ; CODE XREF: sub_1408B9D60+41↑j
                mov     [rsp+58h+var_30], r12b
                mov     r9, rbp
                mov     r8, r14
                mov     [rsp+58h+var_38], r13
                mov     rdx, r15
                mov     rcx, rsi
                call    sub_1408B9E18
                mov     ebx, eax

loc_1408B9DF1:                          ; CODE XREF: sub_1408B9D60+72↑j
                mov     rbp, [rsp+58h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+58h+arg_0]
                mov     rsi, [rsp+58h+arg_10]
                add     rsp, 30h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B9D60   endp

algn_1408B9E11:                         ; DATA XREF: .pdata:000000014011DD2C↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408B9E18   proc near               ; CODE XREF: sub_1408B9D60+8A↑p
                                        ; DATA XREF: .pdata:000000014011DD38↑o

arg_0           = dword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_20          = qword ptr  28h
arg_28          = byte ptr  30h

                mov     [rsp+arg_8], rbx
                mov     [rsp+arg_10], r8
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 20h
                and     [rsp+58h+arg_0], 0
                xor     r15d, r15d
                mov     eax, [rcx+12Ch]
                mov     r12, r9
                mov     r14, [rsp+58h+arg_20]
                mov     rdi, r8
                mov     r13, rdx
                mov     rbp, rcx
                cmp     eax, 308h
                jnz     loc_1408B9F2F
                test    dword ptr [rcx+18Ch], 1000h
                jnz     loc_1408B9F43
                mov     dl, [rsp+58h+arg_28]
                call    sub_1408B9FB4
                mov     r15d, eax
                test    eax, eax
                js      loc_1408B9F19
                cmp     eax, 119h
                jnz     short loc_1408B9E99
                mov     edx, 400h
                mov     rcx, rbp
                call    sub_140736ED4

loc_1408B9E99:                          ; CODE XREF: sub_1408B9E18+72↑j
                mov     edi, [rdi]
                xor     edx, edx
                mov     rbx, [rbp+20h]
                mov     esi, edi
                shl     rsi, 6
                add     rsi, r13
                mov     rcx, rsi
                lea     r8d, [rdx+40h]
                call    memset
                lea     edx, [rdi+1]
                mov     [rsi], rbx
                shl     rdx, 6
                lea     r8, [rsp+58h+arg_0]
                add     rdx, r13
                mov     dword ptr [rsi+0Ch], 4
                mov     rcx, rsi
                call    sub_14074C60C
                mov     rcx, [rsp+58h+arg_10]
                mov     r8d, [rcx]
                mov     eax, r8d
                shl     rax, 6
                mov     edx, [rax+r13+38h]
                test    edx, edx
                js      short loc_1408B9F00
                mov     eax, [rax+r13+8]
                test    al, 20h
                jnz     short loc_1408B9F71
                lea     eax, [r8+1]
                mov     [rcx], eax
                jmp     short loc_1408B9F71
; ---------------------------------------------------------------------------

loc_1408B9F00:                          ; CODE XREF: sub_1408B9E18+D5↑j
                mov     rcx, rbp
                mov     r15d, edx
                call    sub_1408B9B84
                test    r14, r14
                jz      short loc_1408B9F71
                mov     dword ptr [r14], 2
                jmp     short loc_1408B9F71
; ---------------------------------------------------------------------------

loc_1408B9F19:                          ; CODE XREF: sub_1408B9E18+67↑j
                mov     rcx, rbp
                call    sub_1408B9B84
                test    r14, r14
                jz      short loc_1408B9F71
                mov     dword ptr [r14], 1
                jmp     short loc_1408B9F71
; ---------------------------------------------------------------------------

loc_1408B9F2F:                          ; CODE XREF: sub_1408B9E18+40↑j
                add     eax, 0FFFFFCFFh
                cmp     eax, 11h
                ja      short loc_1408B9F43
                mov     ecx, 30107h
                bt      ecx, eax
                jb      short loc_1408B9F65

loc_1408B9F43:                          ; CODE XREF: sub_1408B9E18+50↑j
                                        ; sub_1408B9E18+11F↑j
                test    dword ptr [rbp+18Ch], 40000h
                jnz     short loc_1408B9F65
                mov     rax, r14
                mov     r15d, 0C0000001h
                test    rax, rax
                jz      short loc_1408B9F76
                mov     dword ptr [rax], 3
                jmp     short loc_1408B9F76
; ---------------------------------------------------------------------------

loc_1408B9F65:                          ; CODE XREF: sub_1408B9E18+129↑j
                                        ; sub_1408B9E18+135↑j
                test    r14, r14
                jz      short loc_1408B9F81
                mov     dword ptr [r14], 4

loc_1408B9F71:                          ; CODE XREF: sub_1408B9E18+DE↑j
                                        ; sub_1408B9E18+E6↑j ...
                test    r15d, r15d
                jns     short loc_1408B9F81

loc_1408B9F76:                          ; CODE XREF: sub_1408B9E18+143↑j
                                        ; sub_1408B9E18+14B↑j
                test    r12, r12
                jz      short loc_1408B9F94
                mov     [r12], rbp
                jmp     short loc_1408B9F94
; ---------------------------------------------------------------------------

loc_1408B9F81:                          ; CODE XREF: sub_1408B9E18+150↑j
                                        ; sub_1408B9E18+15C↑j
                test    r12, r12
                jz      short loc_1408B9F8B
                and     qword ptr [r12], 0

loc_1408B9F8B:                          ; CODE XREF: sub_1408B9E18+16C↑j
                test    r14, r14
                jz      short loc_1408B9F94
                and     dword ptr [r14], 0

loc_1408B9F94:                          ; CODE XREF: sub_1408B9E18+161↑j
                                        ; sub_1408B9E18+167↑j ...
                mov     rbx, [rsp+58h+arg_8]
                mov     eax, r15d
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B9E18   endp

byte_1408B9FAD  db 7 dup(0CCh)          ; DATA XREF: .pdata:000000014011DD38↑o

; =============== S U B R O U T I N E =======================================


sub_1408B9FB4   proc near               ; CODE XREF: sub_1408B9E18+5D↑p
                                        ; DATA XREF: .pdata:000000014011DD44↑o

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                cmp     dword ptr [rcx+12Ch], 308h
                mov     rbx, rcx
                mov     edi, 0C0000001h
                jnz     short loc_1408BA02D
                test    dl, dl
                jz      short loc_1408B9FDF
                call    sub_140510498
                test    al, al
                jnz     short loc_1408BA02D

loc_1408B9FDF:                          ; CODE XREF: sub_1408B9FB4+20↑j
                mov     rcx, [rbx+20h]
                call    sub_14036FC24
                test    rax, rax
                jz      short loc_1408BA003
                mov     rcx, [rbx+20h]
                call    sub_140393D9C
                mov     edx, 1000000h
                mov     rcx, rbx
                call    sub_140736ED4

loc_1408BA003:                          ; CODE XREF: sub_1408B9FB4+37↑j
                mov     rcx, [rbx+20h]
                call    sub_14036DA64
                mov     rdx, [rbx+20h]
                mov     cl, 5
                or      dword ptr [rbx+2C0h], 20h
                call    sub_1408B44A0
                mov     edx, 309h
                mov     rcx, rbx
                mov     edi, eax
                call    sub_14036D798

loc_1408BA02D:                          ; CODE XREF: sub_1408B9FB4+1C↑j
                                        ; sub_1408B9FB4+29↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     eax, edi
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408B9FB4   endp

byte_1408BA03B  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DD44↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=57h

sub_1408BA044   proc near               ; CODE XREF: sub_1405105FC+A1↑p
                                        ; sub_14074C228+ED625↑p ...

var_110         = byte ptr -110h
var_108         = qword ptr -108h
var_100         = byte ptr -100h
var_FC          = dword ptr -0FCh
var_F8          = qword ptr -0F8h
var_F0          = dword ptr -0F0h
var_E8          = qword ptr -0E8h
var_E0          = qword ptr -0E0h
var_D8          = xmmword ptr -0D8h
var_C0          = xmmword ptr -0C0h
var_B0          = xmmword ptr -0B0h
var_98          = qword ptr -98h
var_90          = xmmword ptr -90h
var_80          = xmmword ptr -80h
var_70          = qword ptr -70h
var_50          = qword ptr -50h

; __unwind { // __GSHandlerCheck
                push    rbp
                push    rbx
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                lea     rbp, [rsp-1Fh]
                sub     rsp, 0F8h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+57h+var_50], rax
                mov     r14, rcx
                mov     esi, r8d
                mov     rcx, [rcx+2C8h]
                mov     bl, r9b
                mov     [rsp+130h+var_100], bl
                xorps   xmm0, xmm0
                mov     [rsp+130h+var_E0], rdx
                mov     r15, rdx
                movups  [rsp+130h+var_D8], xmm0
                test    rcx, rcx
                jz      short loc_1408BA09F
                xor     edx, edx
                lea     r8d, [rdx+58h]
                call    memset

loc_1408BA09F:                          ; CODE XREF: sub_1408BA044+4E↑j
                xor     edx, edx
                lea     rcx, [rbp+57h+var_C0]
                lea     r8d, [rdx+70h]
                call    memset
                mov     rax, cs:qword_140C44D00
                lea     r12, [r14+28h]
                mov     [rbp+57h+var_98], rax
                lea     rcx, qword_140033FC0
                mov     qword ptr [rbp+57h+var_B0+8], rax
                mov     rdx, r12
                mov     rax, 0FFFFF78000000008h
                mov     rax, [rax]
                mov     qword ptr [rbp+57h+var_90+8], rax
                mov     byte ptr [rbp+57h+var_90], bl
                call    sub_140364E18
                mov     edx, cs:dword_140C44A90
                mov     ecx, 1
                shl     rdx, 6
                mov     r8d, 30706E50h
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408BA117
                mov     dword ptr [rbp+57h+var_B0], 2
                mov     ebx, 0C000009Ah
                jmp     loc_1408BA20C
; ---------------------------------------------------------------------------

loc_1408BA117:                          ; CODE XREF: sub_1408BA044+C0↑j
                test    esi, esi
                jz      short loc_1408BA12D
                mov     r8, rsi
                mov     rdx, r15
                shl     r8, 6
                mov     rcx, rdi
                call    memmove

loc_1408BA12D:                          ; CODE XREF: sub_1408BA044+D5↑j
                xor     r12d, r12d
                lea     r15, [rbp+57h+var_B0]
                mov     rax, rsi
                mov     [rsp+130h+var_FC], r12d
                shl     rax, 6
                xor     ebx, ebx
                xor     r13d, r13d
                mov     [rsp+130h+var_E8], rax
                add     rax, rdi
                mov     [rsp+130h+var_F8], rax

loc_1408BA152:                          ; CODE XREF: sub_1408BA044+279↓j
                inc     dword ptr [rbp+57h+var_C0+4]
                lea     rcx, [rbp+57h+var_C0]
                mov     [rsp+130h+var_108], rcx
                lea     r9, [rsp+130h+var_FC]
                mov     cl, [rsp+130h+var_100]
                mov     r8, rax
                mov     [rsp+130h+var_110], cl
                mov     rdx, r14
                mov     ecx, r13d
                mov     [rsp+130h+var_F0], r12d
                call    sub_1408B9C48
                mov     r12d, [rsp+130h+var_FC]
                test    esi, esi
                jnz     loc_1408BA263
                cmp     [rsp+130h+var_100], sil
                jnz     loc_1408BA263
                xor     ecx, ecx
                test    r12d, r12d
                jz      short loc_1408BA1B8
                mov     rdx, [r14+20h]

loc_1408BA1A1:                          ; CODE XREF: sub_1408BA044+172↓j
                mov     eax, ecx
                shl     rax, 6
                cmp     [rax+rdi], rdx
                jz      loc_1408BA263
                inc     ecx
                cmp     ecx, r12d
                jb      short loc_1408BA1A1

loc_1408BA1B8:                          ; CODE XREF: sub_1408BA044+157↑j
                cmp     dword ptr [r14+12Ch], 309h
                mov     ebx, 0C0000001h
                jz      loc_1408BA2C2
                mov     dword ptr [rbp+r13*4+57h+var_B0], 3

loc_1408BA1D7:                          ; CODE XREF: sub_1408BA044+289↓j
                mov     rcx, cs:qword_140C44D00
                call    sub_1408B9C14
                mov     r15, [rsp+130h+var_F8]

loc_1408BA1E8:                          ; CODE XREF: sub_1408BA044+2D4↓j
                                        ; sub_1408BA044+2EC↓j
                lea     edx, [rsi+r12]
                mov     rcx, r15
                shl     rdx, 6
                add     rdx, rdi
                call    sub_14074F550
                mov     edx, 30706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag
                lea     r12, [r14+28h]

loc_1408BA20C:                          ; CODE XREF: sub_1408BA044+CE↑j
                lea     rcx, [rbp+57h+var_C0]
                call    sub_1408B3544
                mov     rcx, [r14+2C8h]
                test    ebx, ebx
                jns     loc_1408BA335
                test    rcx, rcx
                jz      loc_1408BA34C
                movaps  xmm0, [rbp+57h+var_C0]
                movups  xmmword ptr [rcx], xmm0
                movaps  xmm1, [rbp+57h+var_B0]
                movups  xmmword ptr [rcx+10h], xmm1
                movaps  xmm0, xmmword ptr [rbp-49h]
                movups  xmmword ptr [rcx+20h], xmm0
                movaps  xmm1, [rbp+57h+var_90]
                movups  xmmword ptr [rcx+30h], xmm1
                movaps  xmm0, [rbp+57h+var_80]
                movups  xmmword ptr [rcx+40h], xmm0
                movsd   xmm1, [rbp+57h+var_70]
                movsd   qword ptr [rcx+50h], xmm1
                jmp     loc_1408BA34C
; ---------------------------------------------------------------------------

loc_1408BA263:                          ; CODE XREF: sub_1408BA044+141↑j
                                        ; sub_1408BA044+14C↑j ...
                cmp     [rsp+130h+var_F0], r12d
                jz      short loc_1408BA290
                lea     edx, [rsi+r12]
                mov     rcx, rdi
                lea     r8, [rsp+130h+var_D8]
                call    sub_14074EC24
                mov     ebx, eax
                test    eax, eax
                jns     short loc_1408BA2D3
                cmp     dword ptr [r15], 0
                jnz     short loc_1408BA2AB
                mov     dword ptr [r15], 6
                jmp     short loc_1408BA2AB
; ---------------------------------------------------------------------------

loc_1408BA290:                          ; CODE XREF: sub_1408BA044+224↑j
                cmp     dword ptr [r15], 0
                jnz     short loc_1408BA29D
                mov     dword ptr [r15], 5

loc_1408BA29D:                          ; CODE XREF: sub_1408BA044+250↑j
                cmp     ebx, 0C0000908h
                mov     eax, 0C0000001h
                cmovnz  ebx, eax

loc_1408BA2AB:                          ; CODE XREF: sub_1408BA044+241↑j
                                        ; sub_1408BA044+24A↑j
                inc     r13d
                add     r15, 4
                cmp     r13d, 2
                jnb     short loc_1408BA2CB
                mov     rax, [rsp+130h+var_F8]
                jmp     loc_1408BA152
; ---------------------------------------------------------------------------

loc_1408BA2C2:                          ; CODE XREF: sub_1408BA044+184↑j
                mov     dword ptr [rbp+r13*4+57h+var_B0], 4

loc_1408BA2CB:                          ; CODE XREF: sub_1408BA044+272↑j
                test    ebx, ebx
                js      loc_1408BA1D7

loc_1408BA2D3:                          ; CODE XREF: sub_1408BA044+23B↑j
                mov     rcx, cs:qword_140C44D00
                call    sub_1408BA388
                lea     rcx, [rsp+130h+var_D8]
                call    sub_14074EB80
                mov     r15, [rsp+130h+var_F8]
                test    esi, esi
                jz      short loc_1408BA300
                xor     r8d, r8d
                mov     rdx, r15
                mov     rcx, rdi
                call    sub_14074BA8C

loc_1408BA300:                          ; CODE XREF: sub_1408BA044+2AC↑j
                lea     edx, [rsi+r12]
                mov     r8b, 1
                shl     rdx, 6
                mov     rcx, r15
                add     rdx, rdi
                call    sub_14074BA8C
                test    esi, esi
                jz      loc_1408BA1E8
                mov     r8, [rsp+130h+var_E8]
                mov     rdx, rdi
                mov     rcx, [rsp+130h+var_E0]
                call    memmove
                jmp     loc_1408BA1E8
; ---------------------------------------------------------------------------

loc_1408BA335:                          ; CODE XREF: sub_1408BA044+1DA↑j
                test    rcx, rcx
                jz      short loc_1408BA34C
                mov     edx, 62655250h
                call    ExFreePoolWithTag
                and     qword ptr [r14+2C8h], 0

loc_1408BA34C:                          ; CODE XREF: sub_1408BA044+1E3↑j
                                        ; sub_1408BA044+21A↑j ...
                mov     r8d, ebx
                lea     rcx, qword_140033F30
                mov     rdx, r12
                call    sub_140364F94
                mov     eax, ebx
                mov     rcx, [rbp+57h+var_50]
                xor     rcx, rsp
                call    __security_check_cookie
                add     rsp, 0F8h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbx
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408BA044
sub_1408BA044   endp

algn_1408BA381:                         ; DATA XREF: .pdata:000000014011DD50↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408BA388   proc near               ; CODE XREF: sub_1408BA044+296↑p
                                        ; sub_1408BA388+16↓p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8

                mov     [rsp+arg_0], rbx
                push    rdi
                sub     rsp, 20h
                mov     rbx, [rcx+8]
                mov     rdi, rcx
                jmp     short loc_1408BA3A6
; ---------------------------------------------------------------------------

loc_1408BA39B:                          ; CODE XREF: sub_1408BA388+21↓j
                mov     rcx, rbx
                call    sub_1408BA388
                mov     rbx, [rbx]

loc_1408BA3A6:                          ; CODE XREF: sub_1408BA388+11↑j
                test    rbx, rbx
                jnz     short loc_1408BA39B
                cmp     dword ptr [rdi+12Ch], 309h
                jnz     short loc_1408BA3CF
                mov     rdx, [rdi+20h]
                mov     cl, 4
                call    sub_1408B44A0
                mov     edx, 30Ah
                mov     rcx, rdi
                call    sub_14036D798

loc_1408BA3CF:                          ; CODE XREF: sub_1408BA388+2D↑j
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BA388   endp

byte_1408BA3DB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DD5C↑o

; =============== S U B R O U T I N E =======================================


sub_1408BA3E4   proc near               ; CODE XREF: sub_1408AC8FC+1B1↑p
                                        ; DATA XREF: .pdata:000000014011DD68↑o

var_48          = qword ptr -48h
var_38          = qword ptr -38h
var_28          = byte ptr -28h
arg_18          = qword ptr  20h
arg_20          = qword ptr  28h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], r9
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 40h
                mov     rdi, rdx
                mov     esi, r8d
                mov     edx, r8d
                mov     ecx, 200h
                shl     edx, 4
                mov     r8d, 33706E50h
                call    ExAllocatePoolWithTag
                xor     ebx, ebx
                mov     [rsp+68h+var_38], rax
                mov     r15, rax
                test    rax, rax
                jnz     short loc_1408BA439
                mov     ebx, 0C000009Ah
                jmp     loc_1408BA591
; ---------------------------------------------------------------------------

loc_1408BA439:                          ; CODE XREF: sub_1408BA3E4+49↑j
                mov     ebp, 1
                test    esi, esi
                jz      short loc_1408BA4AD
                mov     rbx, r15
                mov     r14, rsi
                mov     r12, rsi

loc_1408BA44B:                          ; CODE XREF: sub_1408BA3E4+7D↓j
                mov     rdx, [rdi]
                mov     rcx, rbx
                call    RtlInitUnicodeString
                add     rbx, 10h
                lea     rdi, [rdi+8]
                sub     r12, rbp
                jnz     short loc_1408BA44B
                lea     r13d, [rsi-1]
                xor     ebx, ebx

loc_1408BA469:                          ; CODE XREF: sub_1408BA3E4+C7↓j
                test    r13d, r13d
                jz      short loc_1408BA4A8
                mov     rdi, r15
                mov     r12d, r13d
                lea     rbx, [r15+10h]

loc_1408BA478:                          ; CODE XREF: sub_1408BA3E4+C0↓j
                lea     rcx, [rbx-10h]
                xor     r8d, r8d
                mov     rdx, rbx
                call    RtlCompareUnicodeString
                test    eax, eax
                jle     short loc_1408BA499
                movups  xmm1, xmmword ptr [rdi]
                movups  xmm0, xmmword ptr [rbx]
                movdqu  xmmword ptr [rbx], xmm1
                movdqu  xmmword ptr [rdi], xmm0

loc_1408BA499:                          ; CODE XREF: sub_1408BA3E4+A5↑j
                add     rbx, 10h
                add     rdi, 10h
                sub     r12, rbp
                jnz     short loc_1408BA478
                xor     ebx, ebx

loc_1408BA4A8:                          ; CODE XREF: sub_1408BA3E4+88↑j
                sub     r14, rbp
                jnz     short loc_1408BA469

loc_1408BA4AD:                          ; CODE XREF: sub_1408BA3E4+5C↑j
                mov     r14d, ebx
                test    esi, esi
                jz      short loc_1408BA4C9
                mov     rdx, r15
                mov     r8, rsi

loc_1408BA4BA:                          ; CODE XREF: sub_1408BA3E4+E3↓j
                movzx   eax, word ptr [rdx]
                lea     rdx, [rdx+10h]
                add     r14d, eax
                sub     r8, rbp
                jnz     short loc_1408BA4BA

loc_1408BA4C9:                          ; CODE XREF: sub_1408BA3E4+CE↑j
                add     r14d, 2
                mov     ecx, 200h
                mov     edx, r14d
                mov     r8d, 33706E50h
                add     rdx, 6
                call    ExAllocatePoolWithTag
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408BA4F3
                mov     ebx, 0C000009Ah
                jmp     short loc_1408BA572
; ---------------------------------------------------------------------------

loc_1408BA4F3:                          ; CODE XREF: sub_1408BA3E4+106↑j
                lea     r13, [rax+4]
                mov     r12, r13
                test    esi, esi
                jz      short loc_1408BA52F
                mov     r13, r15
                mov     r15, rsi

loc_1408BA504:                          ; CODE XREF: sub_1408BA3E4+13E↓j
                movzx   ebx, word ptr [r13+0]
                mov     rcx, r12
                mov     rdx, [r13+8]
                mov     r8d, ebx
                call    memmove
                add     r12, rbx
                lea     r13, [r13+10h]
                sub     r15, rbp
                jnz     short loc_1408BA504
                mov     r15, [rsp+68h+var_38]
                lea     r13, [rdi+4]
                xor     ebx, ebx

loc_1408BA52F:                          ; CODE XREF: sub_1408BA3E4+118↑j
                mov     [r12], bx
                mov     [rdi+2], r14w
                cmp     esi, ebp
                ja      short loc_1408BA544
                cmp     bx, [r13+0]
                jz      short loc_1408BA549

loc_1408BA544:                          ; CODE XREF: sub_1408BA3E4+157↑j
                mov     ebp, 2

loc_1408BA549:                          ; CODE XREF: sub_1408BA3E4+15E↑j
                mov     rax, [rsp+68h+arg_20]
                lea     rdx, sub_140725430
                mov     [rdi], bp
                mov     rcx, rdi
                mov     r9, [rsp+68h+arg_18]
                mov     [rsp+68h+var_48], rax
                call    sub_1407A53B8
                mov     ebx, eax

loc_1408BA572:                          ; CODE XREF: sub_1408BA3E4+10D↑j
                mov     edx, 33706E50h
                mov     rcx, r15
                call    ExFreePoolWithTag
                test    rdi, rdi
                jz      short loc_1408BA591
                mov     edx, 33706E50h
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408BA591:                          ; CODE XREF: sub_1408BA3E4+50↑j
                                        ; sub_1408BA3E4+19E↑j
                lea     r11, [rsp+68h+var_28]
                mov     eax, ebx
                mov     rbx, [r11+30h]
                mov     rbp, [r11+38h]
                mov     rsi, [r11+40h]
                mov     rsp, r11
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BA3E4   endp

algn_1408BA5B2:                         ; DATA XREF: .pdata:000000014011DD68↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408BA5B8   proc near               ; CODE XREF: sub_14067C1A4:loc_14067C1D6↑p
                                        ; DATA XREF: .pdata:000000014011DD74↑o

var_38          = dword ptr -38h
var_28          = qword ptr -28h
var_20          = qword ptr -20h
var_18          = qword ptr -18h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                push    rdi
                sub     rsp, 50h
                and     qword ptr [rax-18h], 0
                mov     rbp, 0FFFFF78000000008h
                and     dword ptr [rax-0Ch], 0
                xor     ebx, ebx
                xor     edi, edi
                mov     rsi, rcx
                mov     rbp, [rbp+0]
                test    rcx, rcx
                jz      loc_1408BA679
                lea     edi, [rbx+40h]
                mov     r8d, 4B706E50h
                mov     edx, edi
                mov     ecx, 200h
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408BA679
                mov     r8d, edi
                xor     edx, edx
                mov     rcx, rax
                call    memset
                mov     dword ptr [rbx], 1
                mov     rax, 346DC5D63886594Bh
                mov     [rbx+4], edi
                mov     rcx, [rsi+18h]
                sub     rbp, [rcx]
                mul     rbp
                shr     rdx, 0Bh
                mov     [rbx+0Ch], edx
                mov     rax, [rsi+8]
                mov     [rbx+18h], rax
                mov     rax, [rsi+10h]
                mov     [rbx+20h], rax
                mov     rax, [rsi]
                mov     [rbx+10h], rax
                mov     rax, cs:qword_140C4C3E0
                mov     [rbx+28h], rax
                mov     rax, cs:qword_140CECAC0
                mov     [rbx+30h], rax
                mov     rax, cs:qword_140C452E0
                mov     [rbx+38h], rax

loc_1408BA679:                          ; CODE XREF: sub_1408BA5B8+35↑j
                                        ; sub_1408BA5B8+56↑j
                and     [rsp+58h+var_18], 0
                lea     rdx, [rsp+58h+var_28]
                and     [rsp+58h+var_C], 0
                xor     r9d, r9d
                and     [rsp+58h+var_38], 0
                mov     [rsp+58h+var_10], 0Bh
                mov     [rsp+58h+var_28], rbx
                lea     r8d, [r9+20h]
                mov     [rsp+58h+var_20], rdi
                lea     ecx, [r9+5Eh]
                call    sub_14067A140
                test    rbx, rbx
                jz      short loc_1408BA6C2
                mov     edx, 4B706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag

loc_1408BA6C2:                          ; CODE XREF: sub_1408BA5B8+FB↑j
                mov     rbx, [rsp+58h+arg_0]
                mov     rbp, [rsp+58h+arg_8]
                mov     rsi, [rsp+58h+arg_10]
                add     rsp, 50h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BA5B8   endp

algn_1408BA6D8:                         ; DATA XREF: .pdata:000000014011DD74↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408BA6E0   proc near               ; CODE XREF: sub_140745F30+F0E39↑p
                                        ; DATA XREF: .pdata:000000014011DD80↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rbp
                mov     [rsp+arg_10], rsi
                push    rdi
                push    r14
                push    r15
                sub     rsp, 20h
                mov     rsi, [rcx+98h]
                mov     r14b, r8b
                mov     r15, rdx
                mov     rdi, rcx
                mov     edx, 70h ; 'p'
                mov     ecx, 200h
                mov     r8d, 20207050h
                mov     rbp, r9
                call    ExAllocatePoolWithTag
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408BA753
                mov     rcx, rsi
                mov     [rax+30h], rdi
                call    ObfReferenceObject
                mov     [rbx+38h], rsi
                mov     [rbx+40h], r15
                mov     [rbx+58h], r14b
                mov     ecx, [rdi+90h]
                shr     ecx, 3
                and     cl, 1
                mov     [rbx+60h], rbp
                mov     [rbx+59h], cl

loc_1408BA753:                          ; CODE XREF: sub_1408BA6E0+46↑j
                mov     rbp, [rsp+38h+arg_8]
                mov     rax, rbx
                mov     rbx, [rsp+38h+arg_0]
                mov     rsi, [rsp+38h+arg_10]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BA6E0   endp

byte_1408BA770  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011DD80↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1408BA778   proc near               ; CODE XREF: sub_140745F30+F0C88↑p
                                        ; DATA XREF: .pdata:000000014011DD8C↑o

var_20          = qword ptr -20h
var_10          = qword ptr -10h
arg_0           = qword ptr  30h
arg_8           = dword ptr  38h
arg_10          = qword ptr  40h

                mov     [rsp-28h+arg_0], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r14
                push    r15
                mov     rbp, rsp
                sub     rsp, 40h
                xor     ebx, ebx
                movsxd  r15, ecx
                mov     [rbp+var_10], rbx
                mov     rdi, r9
                mov     [rbp+arg_8], ebx
                mov     r14, r8
                mov     rsi, rdx
                mov     [rbp+arg_10], 1

loc_1408BA7A8:                          ; CODE XREF: sub_1408BA778+68↓j
                                        ; sub_1408BA778+71↓j
                xor     r9d, r9d
                mov     [rsp+40h+var_20], rbx
                lea     r8, [rbp+var_10]
                mov     rcx, r14
                lea     rdx, [rbp+arg_10]
                call    sub_140747BB8
                test    al, al
                jz      short loc_1408BA7EB
                mov     rax, [rbp+var_10]
                test    rax, rax
                jz      short loc_1408BA7DA
                mov     rax, [rax+138h]
                mov     rcx, [rax+28h]
                jmp     short loc_1408BA7DD
; ---------------------------------------------------------------------------

loc_1408BA7DA:                          ; CODE XREF: sub_1408BA778+53↑j
                mov     rcx, rbx

loc_1408BA7DD:                          ; CODE XREF: sub_1408BA778+60↑j
                test    rcx, rcx
                jz      short loc_1408BA7A8
                and     dword ptr [rcx+2C0h], 0FFFFFFFDh
                jmp     short loc_1408BA7A8
; ---------------------------------------------------------------------------

loc_1408BA7EB:                          ; CODE XREF: sub_1408BA778+4A↑j
                mov     rax, [rsi+28h]
                mov     ecx, [rax+0D8h]
                mov     edx, ecx
                mov     rax, [r14]
                and     edx, 1
                and     ecx, 2
                cmp     dword ptr [rax], 1
                jnz     short loc_1408BA856
                mov     rcx, [rsi+98h]
                test    rcx, rcx
                jz      short loc_1408BA81E
                mov     rax, [rcx+138h]
                mov     rdx, [rax+28h]
                jmp     short loc_1408BA821
; ---------------------------------------------------------------------------

loc_1408BA81E:                          ; CODE XREF: sub_1408BA778+97↑j
                mov     rdx, rbx

loc_1408BA821:                          ; CODE XREF: sub_1408BA778+A4↑j
                cmp     dword ptr [rdx+12Ch], 314h
                jnz     short loc_1408BA848
                movsxd  r9, dword ptr [rdi]
                mov     r8, r15
                mov     edx, 0Eh
                mov     [rsp+40h+var_20], r14
                mov     ecx, 0CAh
                call    KeBugCheckEx
                int     3               ; Trap to Debugger
; ---------------------------------------------------------------------------

loc_1408BA848:                          ; CODE XREF: sub_1408BA778+B3↑j
                bts     dword ptr [rcx+30h], 1Ah
                xor     edx, edx
                call    sub_14073BE28
                jmp     short loc_1408BA8C6
; ---------------------------------------------------------------------------

loc_1408BA856:                          ; CODE XREF: sub_1408BA778+8B↑j
                test    dl, dl
                jz      short loc_1408BA85F
                cmp     dword ptr [rdi], 5
                jz      short loc_1408BA863

loc_1408BA85F:                          ; CODE XREF: sub_1408BA778+E0↑j
                test    ecx, ecx
                jz      short loc_1408BA8C1

loc_1408BA863:                          ; CODE XREF: sub_1408BA778+E5↑j
                mov     [rbp+arg_10], 1

loc_1408BA86B:                          ; CODE XREF: sub_1408BA778+12D↓j
                                        ; sub_1408BA778+139↓j ...
                lea     r9, [rbp+arg_8]
                mov     [rsp+40h+var_20], rbx
                lea     r8, [rbp+var_10]
                mov     rcx, r14
                lea     rdx, [rbp+arg_10]
                call    sub_140747BB8
                test    al, al
                jz      short loc_1408BA8C6
                mov     rcx, [rbp+var_10]
                test    rcx, rcx
                jz      short loc_1408BA89E
                mov     rax, [rcx+138h]
                mov     rdx, [rax+28h]
                jmp     short loc_1408BA8A1
; ---------------------------------------------------------------------------

loc_1408BA89E:                          ; CODE XREF: sub_1408BA778+117↑j
                mov     rdx, rbx

loc_1408BA8A1:                          ; CODE XREF: sub_1408BA778+124↑j
                cmp     [rbp+arg_8], 1
                jz      short loc_1408BA86B
                cmp     dword ptr [rdx+12Ch], 314h
                jz      short loc_1408BA86B
                bts     dword ptr [rcx+30h], 1Ah
                xor     edx, edx
                call    sub_14073BE28
                jmp     short loc_1408BA86B
; ---------------------------------------------------------------------------

loc_1408BA8C1:                          ; CODE XREF: sub_1408BA778+E9↑j
                mov     ebx, 80000028h

loc_1408BA8C6:                          ; CODE XREF: sub_1408BA778+DC↑j
                                        ; sub_1408BA778+10E↑j
                mov     eax, ebx
                mov     rbx, [rsp+40h+arg_0]
                add     rsp, 40h
                pop     r15
                pop     r14
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BA778   endp

algn_1408BA8DA:                         ; DATA XREF: .pdata:000000014011DD8C↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408BA8E0   proc near               ; CODE XREF: sub_14073198C+1026DD↑p
                                        ; sub_140731C2C+10269B↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                test    edx, edx
                jz      short locret_1408BA962
                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     edi, edx
                mov     rsi, rcx
                xor     ebx, ebx

loc_1408BA8FA:                          ; CODE XREF: sub_1408BA8E0+71↓j
                mov     eax, edi
                sub     eax, ebx
                dec     eax
                mov     rdx, [rsi+rax*8]
                test    rdx, rdx
                jz      short loc_1408BA916
                mov     rax, [rdx+138h]
                mov     rcx, [rax+28h]
                jmp     short loc_1408BA918
; ---------------------------------------------------------------------------

loc_1408BA916:                          ; CODE XREF: sub_1408BA8E0+27↑j
                xor     ecx, ecx

loc_1408BA918:                          ; CODE XREF: sub_1408BA8E0+34↑j
                test    rcx, rcx
                jz      short loc_1408BA93B
                mov     r8d, [rcx+12Ch]
                lea     eax, [r8-301h]
                test    eax, 0FFFFFFEEh
                jnz     short loc_1408BA93B
                cmp     r8d, 311h
                jnz     short loc_1408BA94D

loc_1408BA93B:                          ; CODE XREF: sub_1408BA8E0+3B↑j
                                        ; sub_1408BA8E0+50↑j
                xor     r9d, r9d
                lea     rcx, xmmword_14000AB70
                xor     r8d, r8d
                call    sub_14069FDE0

loc_1408BA94D:                          ; CODE XREF: sub_1408BA8E0+59↑j
                inc     ebx
                cmp     ebx, edi
                jb      short loc_1408BA8FA
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi

locret_1408BA962:                       ; CODE XREF: sub_1408BA8E0+2↑j
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BA8E0   endp

byte_1408BA964  db 8 dup(0CCh)          ; DATA XREF: .pdata:000000014011DD98↑o

; =============== S U B R O U T I N E =======================================


sub_1408BA96C   proc near               ; CODE XREF: sub_140731A20+10266F↑p
                                        ; DATA XREF: .pdata:000000014011DDA4↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_20          = qword ptr  28h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     rsi, [rsp+28h+arg_20]
                mov     rax, rdx
                mov     rbx, r8
                mov     edx, ecx
                mov     r8, r9
                mov     rcx, rax
                mov     dword ptr [rsi], 5
                call    sub_1408AD384
                xor     edi, edi
                test    rbx, rbx
                jz      short loc_1408BA9D2
                mov     rcx, rbx
                call    IoGetDeviceAttachmentBaseRef
                mov     rbx, rax
                test    rax, rax
                jz      short loc_1408BA9BB
                mov     rcx, [rax+138h]
                mov     rdi, [rcx+28h]

loc_1408BA9BB:                          ; CODE XREF: sub_1408BA96C+42↑j
                lea     rdx, [rdi+28h]
                lea     rcx, [rsi+8]
                call    RtlCopyUnicodeString
                mov     rcx, rbx
                call    PsDereferenceSiloContext
                jmp     short loc_1408BA9DD
; ---------------------------------------------------------------------------

loc_1408BA9D2:                          ; CODE XREF: sub_1408BA96C+32↑j
                lea     rcx, [rsi+8]
                xor     edx, edx
                call    RtlInitUnicodeString

loc_1408BA9DD:                          ; CODE XREF: sub_1408BA96C+64↑j
                mov     rbx, [rsp+28h+arg_0]
                mov     rsi, [rsp+28h+arg_8]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BA96C   endp

byte_1408BA9EE  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DDA4↑o

; =============== S U B R O U T I N E =======================================


sub_1408BA9F4   proc near               ; CODE XREF: sub_1408B2BE8+30↑p
                                        ; DATA XREF: .pdata:000000014011DDB0↑o
                push    rbx
                sub     rsp, 20h
                mov     rax, gs:188h
                mov     rbx, rcx
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C42F80
                call    ExAcquireResourceExclusiveLite
                lea     rdx, qword_140C42FF0

loc_1408BAA22:                          ; CODE XREF: sub_1408BA9F4+6B↓j
                mov     rax, cs:qword_140C42FF0
                cmp     rax, rdx
                jz      short loc_1408BAA68
                cmp     [rax+8], rdx
                jnz     short loc_1408BAA61
                mov     rcx, [rax]
                cmp     [rcx+8], rax
                jnz     short loc_1408BAA61
                mov     cs:qword_140C42FF0, rcx
                mov     [rcx+8], rdx
                mov     rcx, [rbx+8]
                cmp     [rcx], rbx
                jnz     short loc_1408BAA61
                mov     [rax], rbx
                mov     [rax+8], rcx
                mov     [rcx], rax
                mov     [rbx+8], rax
                jmp     short loc_1408BAA22
; ---------------------------------------------------------------------------

loc_1408BAA61:                          ; CODE XREF: sub_1408BA9F4+3E↑j
                                        ; sub_1408BA9F4+47↑j ...
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408BAA68:                          ; CODE XREF: sub_1408BA9F4+38↑j
                lea     rcx, unk_140C42F80
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BA9F4   endp

algn_1408BAA89:                         ; DATA XREF: .pdata:000000014011DDB0↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408BAA90   proc near               ; CODE XREF: sub_140747D98+EFEEC↑p
                                        ; DATA XREF: .pdata:000000014011DDBC↑o

arg_0           = qword ptr  8
arg_8           = qword ptr  10h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 20h
                mov     edx, 18h
                mov     rsi, rcx
                mov     r8d, 64706E50h
                lea     ecx, [rdx-17h]
                call    ExAllocatePoolWithTag
                xor     ebx, ebx
                mov     rdi, rax
                test    rax, rax
                jz      short loc_1408BAADA
                mov     edx, 64706E50h
                mov     rcx, rsi
                call    ObfReferenceObjectWithTag
                mov     rcx, rdi
                mov     [rdi+10h], rsi
                call    sub_1408BAB30
                jmp     short loc_1408BAADF
; ---------------------------------------------------------------------------

loc_1408BAADA:                          ; CODE XREF: sub_1408BAA90+2D↑j
                mov     ebx, 0C000009Ah

loc_1408BAADF:                          ; CODE XREF: sub_1408BAA90+48↑j
                mov     rsi, [rsp+28h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+28h+arg_0]
                add     rsp, 20h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BAA90   endp

algn_1408BAAF2:                         ; DATA XREF: .pdata:000000014011DDBC↑o
                align 8

; =============== S U B R O U T I N E =======================================


sub_1408BAAF8   proc near               ; CODE XREF: sub_140510748+82↑p
                                        ; sub_1408B2BE8+86↑p
                                        ; DATA XREF: ...
                push    rbx
                sub     rsp, 20h
                mov     rbx, rcx
                mov     edx, 64706E50h
                mov     rcx, [rcx+10h]
                call    ObfDereferenceObjectWithTag
                and     qword ptr [rbx+10h], 0
                mov     edx, 64706E50h
                mov     rcx, rbx
                call    ExFreePoolWithTag
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BAAF8   endp

algn_1408BAB28:                         ; DATA XREF: .pdata:000000014011DDC8↑o
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1408BAB30   proc near               ; CODE XREF: sub_1408BAA90+43↑p
                                        ; DATA XREF: .pdata:000000014011DDD4↑o
                push    rbx
                sub     rsp, 20h
                mov     rax, gs:188h
                mov     rbx, rcx
                dec     word ptr [rax+1E4h]
                mov     dl, 1
                lea     rcx, unk_140C42F80
                call    ExAcquireResourceExclusiveLite
                mov     rax, cs:qword_140C42FF8
                lea     rcx, qword_140C42FF0
                cmp     [rax], rcx
                jz      short loc_1408BAB71
                mov     ecx, 3
                int     29h             ; Win8: RtlFailFast(ecx)
; ---------------------------------------------------------------------------

loc_1408BAB71:                          ; CODE XREF: sub_1408BAB30+38↑j
                mov     [rbx], rcx
                lea     rcx, unk_140C42F80
                mov     [rbx+8], rax
                mov     [rax], rbx
                mov     cs:qword_140C42FF8, rbx
                call    ExReleaseResourceLite
                mov     rcx, gs:188h
                call    sub_14021E1F0
                add     rsp, 20h
                pop     rbx
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BAB30   endp

byte_1408BABA3  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DDD4↑o

; =============== S U B R O U T I N E =======================================


sub_1408BABAC   proc near               ; CODE XREF: sub_1408BB18C+1E8↓p
                                        ; sub_1408BB18C+221↓p
                                        ; DATA XREF: ...

var_58          = qword ptr -58h
var_50          = qword ptr -50h
var_48          = qword ptr -48h
arg_0           = qword ptr  8
arg_8           = dword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h
arg_20          = dword ptr  28h
arg_28          = dword ptr  30h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_18], r9
                mov     [rsp+arg_10], r8
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r13
                push    r14
                push    r15
                sub     rsp, 40h
                xor     edi, edi
                mov     r13, r9
                mov     [rsp+78h+arg_8], edi
                mov     rsi, r8
                mov     ebx, edx
                mov     r12, rcx
                mov     ebp, edi
                test    edx, edx
                jz      short loc_1408BAC36
                lea     r14d, [rdi+1]

loc_1408BABE8:                          ; CODE XREF: sub_1408BABAC+88↓j
                mov     eax, ebp
                mov     rcx, r12
                lea     r15, [rax+rax*2]
                mov     rdx, [rsi+r15*8]
                call    sub_1405107E0
                test    al, al
                jz      short loc_1408BAC2D
                cmp     r14d, ebx
                jnb     short loc_1408BAC20
                lea     eax, [rbx-1]
                lea     rax, [rax+rax*2]
                movups  xmm0, xmmword ptr [rsi+rax*8]
                movups  xmmword ptr [rsi+r15*8], xmm0
                movsd   xmm1, qword ptr [rsi+rax*8+10h]
                movsd   qword ptr [rsi+r15*8+10h], xmm1

loc_1408BAC20:                          ; CODE XREF: sub_1408BABAC+55↑j
                or      r11d, 0FFFFFFFFh
                add     ebx, r11d
                add     ebp, r11d
                add     r14d, r11d

loc_1408BAC2D:                          ; CODE XREF: sub_1408BABAC+50↑j
                inc     ebp
                inc     r14d
                cmp     ebp, ebx
                jb      short loc_1408BABE8

loc_1408BAC36:                          ; CODE XREF: sub_1408BABAC+36↑j
                                        ; sub_1408BABAC+18B↓j
                mov     r12d, edi
                mov     r14d, 1

loc_1408BAC3F:                          ; CODE XREF: sub_1408BABAC+13F↓j
                cmp     r12d, ebx
                jnb     loc_1408BAD3C
                mov     eax, r12d
                mov     [rsp+78h+var_48], rax
                lea     rcx, [rax+rax*2]
                mov     [rsp+78h+var_50], rcx
                cmp     [rsi+rcx*8], rdi
                jz      loc_1408BACE5
                mov     ebp, r14d
                cmp     r14d, ebx
                jnb     short loc_1408BACE5
                lea     r15d, [r14+1]

loc_1408BAC6F:                          ; CODE XREF: sub_1408BABAC+137↓j
                mov     rcx, [rsi+rcx*8]
                mov     eax, ebp
                lea     rax, [rax+rax*2]
                mov     rdx, [rsi+rax*8]
                mov     [rsp+78h+var_58], rax
                call    sub_1405107E0
                test    al, al
                jz      short loc_1408BACBC
                cmp     r15d, ebx
                jnb     short loc_1408BACB0
                mov     rcx, [rsp+78h+var_58]
                lea     eax, [rbx-1]
                lea     rax, [rax+rax*2]
                movups  xmm0, xmmword ptr [rsi+rax*8]
                movups  xmmword ptr [rsi+rcx*8], xmm0
                movsd   xmm1, qword ptr [rsi+rax*8+10h]
                movsd   qword ptr [rsi+rcx*8+10h], xmm1

loc_1408BACB0:                          ; CODE XREF: sub_1408BABAC+E2↑j
                or      eax, 0FFFFFFFFh
                add     ebx, eax
                add     ebp, eax
                add     r15d, eax
                jmp     short loc_1408BACD7
; ---------------------------------------------------------------------------

loc_1408BACBC:                          ; CODE XREF: sub_1408BABAC+DD↑j
                mov     rdx, [rsp+78h+var_50]
                mov     rcx, [rsp+78h+var_58]
                mov     rdx, [rsi+rdx*8]
                mov     rcx, [rsi+rcx*8]
                call    sub_1405107E0
                test    al, al
                jnz     short loc_1408BACF0

loc_1408BACD7:                          ; CODE XREF: sub_1408BABAC+10E↑j
                mov     rcx, [rsp+78h+var_50]
                inc     ebp
                inc     r15d
                cmp     ebp, ebx
                jb      short loc_1408BAC6F

loc_1408BACE5:                          ; CODE XREF: sub_1408BABAC+B1↑j
                                        ; sub_1408BABAC+BD↑j
                inc     r12d
                inc     r14d
                jmp     loc_1408BAC3F
; ---------------------------------------------------------------------------

loc_1408BACF0:                          ; CODE XREF: sub_1408BABAC+129↑j
                mov     eax, ebp
                lea     rdx, [rax+rax*2]
                mov     rax, [rsp+78h+var_48]
                movups  xmm0, xmmword ptr [rsi+rdx*8]
                lea     rax, [rax+rax*2]
                movups  xmmword ptr [rsi+rax*8], xmm0
                movsd   xmm1, qword ptr [rsi+rdx*8+10h]
                movsd   qword ptr [rsi+rax*8+10h], xmm1
                lea     eax, [rbp+1]
                cmp     eax, ebx
                jnb     short loc_1408BAD35
                lea     eax, [rbx-1]
                lea     rax, [rax+rax*2]
                movups  xmm0, xmmword ptr [rsi+rax*8]
                movups  xmmword ptr [rsi+rdx*8], xmm0
                movsd   xmm1, qword ptr [rsi+rax*8+10h]
                movsd   qword ptr [rsi+rdx*8+10h], xmm1

loc_1408BAD35:                          ; CODE XREF: sub_1408BABAC+16C↑j
                dec     ebx
                jmp     loc_1408BAC36
; ---------------------------------------------------------------------------

loc_1408BAD3C:                          ; CODE XREF: sub_1408BABAC+96↑j
                mov     r9d, edi
                test    ebx, ebx
                jz      loc_1408BADDD
                mov     rax, rsi

loc_1408BAD4A:                          ; CODE XREF: sub_1408BABAC+1B0↓j
                lea     edx, [r9+1]
                cmp     [rax], rdi
                jz      short loc_1408BAD60
                add     rax, 18h
                mov     r9d, edx
                cmp     edx, ebx
                jb      short loc_1408BAD4A
                jmp     short loc_1408BADDD
; ---------------------------------------------------------------------------

loc_1408BAD60:                          ; CODE XREF: sub_1408BABAC+1A5↑j
                cmp     edx, ebx
                jnb     short loc_1408BADAA
                lea     r8d, [rdx+1]
                or      r11d, 0FFFFFFFFh

loc_1408BAD6C:                          ; CODE XREF: sub_1408BABAC+1FC↓j
                lea     r10, [rdx+rdx*2]
                cmp     [rsi+r10*8], rdi
                jnz     short loc_1408BADA1
                cmp     r8d, ebx
                jnb     short loc_1408BAD98
                lea     eax, [rbx-1]
                lea     rax, [rax+rax*2]
                movups  xmm0, xmmword ptr [rsi+rax*8]
                movups  xmmword ptr [rsi+r10*8], xmm0
                movsd   xmm1, qword ptr [rsi+rax*8+10h]
                movsd   qword ptr [rsi+r10*8+10h], xmm1

loc_1408BAD98:                          ; CODE XREF: sub_1408BABAC+1CD↑j
                add     ebx, r11d
                add     edx, r11d
                add     r8d, r11d

loc_1408BADA1:                          ; CODE XREF: sub_1408BABAC+1C8↑j
                inc     edx
                inc     r8d
                cmp     edx, ebx
                jb      short loc_1408BAD6C

loc_1408BADAA:                          ; CODE XREF: sub_1408BABAC+1B6↑j
                cmp     ebx, 1
                jz      short loc_1408BADDD
                lea     eax, [r9+1]
                lea     r8d, [rbx-1]
                cmp     eax, ebx
                jnb     short loc_1408BADDA
                lea     rdx, [r8+r8*2]
                mov     eax, r9d
                movups  xmm0, xmmword ptr [rsi+rdx*8]
                lea     rcx, [rax+rax*2]
                movups  xmmword ptr [rsi+rcx*8], xmm0
                movsd   xmm1, qword ptr [rsi+rdx*8+10h]
                movsd   qword ptr [rsi+rcx*8+10h], xmm1

loc_1408BADDA:                          ; CODE XREF: sub_1408BABAC+20D↑j
                mov     ebx, r8d

loc_1408BADDD:                          ; CODE XREF: sub_1408BABAC+195↑j
                                        ; sub_1408BABAC+1B2↑j ...
                mov     r8d, [rsp+78h+arg_28]
                mov     ebp, edi
                mov     r12d, [rsp+78h+arg_20]
                test    r8d, r8d
                jz      short loc_1408BADFC
                cmp     r12d, 4Ah ; 'J'
                setnb   bpl

loc_1408BADFC:                          ; CODE XREF: sub_1408BABAC+246↑j
                mov     eax, r8d
                mov     edx, ebp
                neg     eax
                mov     dword ptr [rsp+78h+var_58], edx
                mov     r15d, ebp
                sbb     r14d, r14d
                and     r14d, 2Ah
                add     r14d, 20h ; ' '
                test    ebx, ebx
                jz      short loc_1408BAE83
                mov     r13, rsi
                mov     esi, ebx

loc_1408BAE1E:                          ; CODE XREF: sub_1408BABAC+2B9↓j
                mov     rcx, [r13+0]
                lea     r8, [rsp+78h+arg_20]
                xor     r9d, r9d
                mov     [rsp+78h+arg_20], edi
                xor     edx, edx
                call    sub_1408BAFE0
                mov     eax, [rsp+78h+arg_20]
                lea     r14d, [r14+rax*2]
                add     r14d, 28h ; '('
                cmp     r14d, r12d
                ja      short loc_1408BAE52
                add     r15d, eax

loc_1408BAE52:                          ; CODE XREF: sub_1408BABAC+2A1↑j
                cmp     r14d, r12d
                lea     eax, [rbp+1]
                cmova   eax, ebp
                add     r13, 18h
                mov     ebp, eax
                sub     rsi, 1
                jnz     short loc_1408BAE1E
                mov     rsi, [rsp+78h+arg_10]
                mov     r13, [rsp+78h+arg_18]
                mov     edx, dword ptr [rsp+78h+var_58]
                mov     r8d, [rsp+78h+arg_28]

loc_1408BAE83:                          ; CODE XREF: sub_1408BABAC+26B↑j
                lea     eax, [rdx+rbx]
                mov     [r13+10h], r14d
                mov     [r13+8], eax
                mov     eax, ebp
                mov     [r13+0Ch], ebp
                lea     rcx, ds:3[rax*4]
                add     rcx, rax
                lea     r14, ds:0[rcx*8]
                lea     rcx, [r12-8]
                add     r14, r13
                add     rcx, r13
                cmp     r14, rcx
                jbe     short loc_1408BAEC1
                mov     edi, 0C0000023h
                jmp     loc_1408BAFBC
; ---------------------------------------------------------------------------

loc_1408BAEC1:                          ; CODE XREF: sub_1408BABAC+309↑j
                or      dword ptr [r14], 0FFFFFFFFh
                test    edx, edx
                jz      short loc_1408BAEF7
                mov     ecx, 1
                mov     [r13+18h], edi
                mov     [r13+1Ch], r8d
                dec     r15d
                mov     [r13+20h], edi
                mov     [r13+28h], rdi
                mov     [r13+30h], rdi
                mov     [r13+38h], edi
                mov     [rsp+78h+arg_8], ecx
                mov     [r14+4], di
                jmp     short loc_1408BAEF9
; ---------------------------------------------------------------------------

loc_1408BAEF7:                          ; CODE XREF: sub_1408BABAC+31B↑j
                mov     ecx, edi

loc_1408BAEF9:                          ; CODE XREF: sub_1408BABAC+349↑j
                mov     [rsp+78h+arg_28], edi
                mov     r8d, edi
                mov     ebx, ecx
                cmp     ecx, ebp
                jnb     loc_1408BAFB4
                mov     eax, ecx
                lea     rax, [rax+rax*4]
                lea     r12, ds:1Ch[rax*8]
                add     r12, r13

loc_1408BAF1E:                          ; CODE XREF: sub_1408BABAC+402↓j
                mov     eax, ecx
                mov     [r12-4], ebx
                mov     [r12], rdi
                mov     qword ptr [r12+0Ch], 1
                lea     rcx, [rax+rax*4]
                mov     [r12+14h], rdi
                lea     r9, ds:1Ch[rcx*8]
                mov     [r12+1Ch], edi
                mov     eax, ebx
                add     r9, r13
                add     rax, 2
                mov     [rsp+78h+arg_20], r15d
                lea     rdx, [r14+rax*2]
                mov     eax, r8d
                lea     r8, [rsp+78h+arg_20]
                lea     rcx, [rax+rax*2]
                mov     rcx, [rsi+rcx*8]
                call    sub_1408BAFE0
                mov     r8d, [rsp+78h+arg_28]
                lea     r12, [r12+28h]
                mov     ecx, [rsp+78h+arg_8]
                inc     r8d
                sub     r15d, [rsp+78h+arg_20]
                inc     ecx
                add     ebx, [rsp+78h+arg_20]
                mov     [rsp+78h+arg_28], r8d
                mov     [rsp+78h+arg_8], ecx
                cmp     ecx, ebp
                jb      loc_1408BAF1E

loc_1408BAFB4:                          ; CODE XREF: sub_1408BABAC+35B↑j
                mov     ecx, ebx
                mov     [r14+rcx*2+4], di

loc_1408BAFBC:                          ; CODE XREF: sub_1408BABAC+310↑j
                mov     rbx, [rsp+78h+arg_0]
                mov     eax, edi
                add     rsp, 40h
                pop     r15
                pop     r14
                pop     r13
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BABAC   endp

algn_1408BAFD7:                         ; DATA XREF: .pdata:000000014011DDE0↑o
                align 20h

; =============== S U B R O U T I N E =======================================


sub_1408BAFE0   proc near               ; CODE XREF: sub_1408BABAC+28A↑p
                                        ; sub_1408BABAC+3C4↑p
                                        ; DATA XREF: ...

arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_10          = qword ptr  18h
arg_18          = qword ptr  20h

                mov     rax, rsp
                mov     [rax+8], rbx
                mov     [rax+10h], rbp
                mov     [rax+18h], rsi
                mov     [rax+20h], rdi
                push    r12
                push    r14
                push    r15
                sub     rsp, 20h
                xor     r12d, r12d
                mov     rsi, r9
                mov     r15, r8
                mov     r14, rdx
                mov     ebp, r12d
                mov     r10d, r12d
                mov     edi, r12d
                test    r8, r8
                jz      short loc_1408BB01A
                mov     ebp, [r8]

loc_1408BB01A:                          ; CODE XREF: sub_1408BAFE0+35↑j
                test    rsi, rsi
                jz      short loc_1408BB022
                mov     edi, [r9]

loc_1408BB022:                          ; CODE XREF: sub_1408BAFE0+3D↑j
                test    rcx, rcx
                jz      short loc_1408BB092
                test    dword ptr [rcx+30h], 1000h
                jnz     short loc_1408BB042
                mov     rbx, [rcx+8]

loc_1408BB034:                          ; CODE XREF: sub_1408BAFE0+106↓j
                test    rbx, rbx
                jz      short loc_1408BB092
                add     rbx, 38h ; '8'
                or      edi, 1
                jmp     short loc_1408BB067
; ---------------------------------------------------------------------------

loc_1408BB042:                          ; CODE XREF: sub_1408BAFE0+4E↑j
                mov     rbx, [rcx+138h]
                test    rbx, rbx
                jz      short loc_1408BB092
                mov     rbx, [rbx+28h]
                test    rbx, rbx
                jz      short loc_1408BB092
                cmp     rbx, cs:qword_140C44D00
                jnz     short loc_1408BB0D9
                or      edi, 2

loc_1408BB063:                          ; CODE XREF: sub_1408BAFE0+FD↓j
                add     rbx, 28h ; '('

loc_1408BB067:                          ; CODE XREF: sub_1408BAFE0+60↑j
                test    rbx, rbx
                jz      short loc_1408BB092
                test    r14, r14
                jz      short loc_1408BB08B
                movzx   r8d, word ptr [rbx]
                mov     eax, ebp
                add     rax, rax
                cmp     rax, r8
                jbe     short loc_1408BB08B
                mov     rdx, [rbx+8]
                mov     rcx, r14
                call    memmove

loc_1408BB08B:                          ; CODE XREF: sub_1408BAFE0+8F↑j
                                        ; sub_1408BAFE0+9D↑j
                movzx   r10d, word ptr [rbx]
                shr     r10d, 1

loc_1408BB092:                          ; CODE XREF: sub_1408BAFE0+45↑j
                                        ; sub_1408BAFE0+57↑j ...
                test    r14, r14
                jz      short loc_1408BB0A4
                cmp     ebp, r10d
                jbe     short loc_1408BB0A4
                mov     eax, r10d
                mov     [r14+rax*2], r12w

loc_1408BB0A4:                          ; CODE XREF: sub_1408BAFE0+B5↑j
                                        ; sub_1408BAFE0+BA↑j
                test    r15, r15
                jz      short loc_1408BB0B0
                lea     eax, [r10+1]
                mov     [r15], eax

loc_1408BB0B0:                          ; CODE XREF: sub_1408BAFE0+C7↑j
                test    rsi, rsi
                jz      short loc_1408BB0B7
                mov     [rsi], edi

loc_1408BB0B7:                          ; CODE XREF: sub_1408BAFE0+D3↑j
                mov     rbx, [rsp+38h+arg_0]
                xor     eax, eax
                mov     rbp, [rsp+38h+arg_8]
                mov     rsi, [rsp+38h+arg_10]
                mov     rdi, [rsp+38h+arg_18]
                add     rsp, 20h
                pop     r15
                pop     r14
                pop     r12
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; ---------------------------------------------------------------------------

loc_1408BB0D9:                          ; CODE XREF: sub_1408BAFE0+7E↑j
                cmp     [rbx+10h], r12
                jnz     short loc_1408BB063
                mov     rbx, [rbx+1B0h]
                jmp     loc_1408BB034
sub_1408BAFE0   endp

; ---------------------------------------------------------------------------
byte_1408BB0EB  db 9 dup(0CCh)          ; DATA XREF: .pdata:000000014011DDEC↑o

; =============== S U B R O U T I N E =======================================


sub_1408BB0F4   proc near               ; CODE XREF: sub_1408B4FD0+17D↑p
                                        ; DATA XREF: .pdata:000000014011DDF8↑o

var_18          = qword ptr -18h
arg_0           = qword ptr  8
arg_8           = qword ptr  10h
arg_20          = dword ptr  28h

                mov     [rsp+arg_0], rbx
                mov     [rsp+arg_8], rsi
                push    rdi
                sub     rsp, 30h
                mov     rax, gs:188h
                mov     rsi, r9
                mov     rbx, rdx
                mov     rdi, rcx
                dec     word ptr [rax+1E4h]
                and     [rsp+38h+var_18], 0
                lea     rcx, unk_140C44AA0
                xor     r9d, r9d
                xor     r8d, r8d
                lea     edx, [r9+4]
                call    KeWaitForSingleObject
                mov     eax, [rsp+38h+arg_20]
                mov     r9, rsi
                mov     rdx, rbx
                mov     dword ptr [rsp+38h+var_18], eax
                mov     rcx, rdi
                call    sub_1408BB18C
                xor     r9d, r9d
                lea     rcx, unk_140C44AA0
                xor     edx, edx
                mov     ebx, eax
                lea     r8d, [r9+1]
                call    KeReleaseSemaphore
                mov     rcx, gs:188h
                call    sub_14021E1F0
                mov     rsi, [rsp+38h+arg_8]
                mov     eax, ebx
                mov     rbx, [rsp+38h+arg_0]
                add     rsp, 30h
                pop     rdi
                retn
; ---------------------------------------------------------------------------
                db 0CCh
sub_1408BB0F4   endp

byte_1408BB186  db 6 dup(0CCh)          ; DATA XREF: .pdata:000000014011DDF8↑o

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame fpd=47h

sub_1408BB18C   proc near               ; CODE XREF: sub_1408BB0F4+55↑p
                                        ; DATA XREF: .pdata:000000014011DE04↑o

var_C0          = dword ptr -0C0h
var_B8          = dword ptr -0B8h
var_B0          = dword ptr -0B0h
var_A8          = qword ptr -0A8h
var_A0          = qword ptr -0A0h
var_90          = qword ptr -90h
var_84          = dword ptr -84h
var_78          = qword ptr -78h
var_50          = xmmword ptr -50h
var_40          = xmmword ptr -40h
var_30          = qword ptr -30h
arg_10          = qword ptr  20h
arg_20          = dword ptr  30h

; __unwind { // __GSHandlerCheck
                mov     [rsp-8+arg_10], rbx
                push    rbp
                push    rsi
                push    rdi
                push    r12
                push    r14
                lea     rbp, [rsp-27h]
                sub     rsp, 0C0h
                mov     rax, cs:__security_cookie
                xor     rax, rsp
                mov     [rbp+47h+var_30], rax
                and     [rbp+47h+var_B0], 0
                xorps   xmm0, xmm0
                and     [rbp+47h+var_A8], 0
                mov     rbx, rdx
                xor     edx, edx
                mov     rsi, rcx
                lea     rcx, [rbp+47h+var_90]
                mov     r14, r9
                movups  [rbp+47h+var_50], xmm0
                lea     r8d, [rdx+40h]
                movups  [rbp+47h+var_40], xmm0
                call    memset
                and     [rbp+47h+var_A0], 0
                and     dword ptr [r14+8], 0
                and     dword ptr [r14+0Ch], 0
                mov     dword ptr [r14+10h], 20h ; ' '
                test    rsi, rsi
                jz      short loc_1408BB207
                mov     rax, [rsi+138h]
                mov     rdx, [rax+28h]
                jmp     short loc_1408BB209
; ---------------------------------------------------------------------------

loc_1408BB207:                          ; CODE XREF: sub_1408BB18C+6C↑j
                xor     edx, edx

loc_1408BB209:                          ; CODE XREF: sub_1408BB18C+79↑j
                test    rdx, rdx
                jnz     short loc_1408BB218
                mov     ebx, 0C000000Eh
                jmp     loc_1408BB3CC
; ---------------------------------------------------------------------------

loc_1408BB218:                          ; CODE XREF: sub_1408BB18C+80↑j
                movzx   ecx, byte ptr [rbx+14h]
                sub     ecx, 1
                jz      short loc_1408BB23F
                sub     ecx, 1
                jz      short loc_1408BB24C
                sub     ecx, 1
                jz      short loc_1408BB23F
                sub     ecx, 1
                jz      short loc_1408BB24C
                cmp     ecx, 3
                jz      short loc_1408BB23F
                mov     ebx, 0C000000Dh
                jmp     loc_1408BB3CC
; ---------------------------------------------------------------------------

loc_1408BB23F:                          ; CODE XREF: sub_1408BB18C+93↑j
                                        ; sub_1408BB18C+9D↑j ...
                cmp     dword ptr [rbx+20h], 0
                jnz     short loc_1408BB24C
                xor     ebx, ebx
                jmp     loc_1408BB3CC
; ---------------------------------------------------------------------------

loc_1408BB24C:                          ; CODE XREF: sub_1408BB18C+98↑j
                                        ; sub_1408BB18C+A2↑j ...
                mov     ecx, [rdx+1C8h]
                mov     r12d, 1
                mov     r8, [rdx+1B8h]
                cmp     ecx, 0FFFFFFFFh
                jnz     short loc_1408BB275
                test    r8, r8
                jz      short loc_1408BB272
                mov     ecx, [r8+4]
                cmp     ecx, 0FFFFFFFFh
                jnz     short loc_1408BB275

loc_1408BB272:                          ; CODE XREF: sub_1408BB18C+DB↑j
                mov     ecx, r12d

loc_1408BB275:                          ; CODE XREF: sub_1408BB18C+D6↑j
                                        ; sub_1408BB18C+E4↑j
                cmp     ecx, 8
                mov     eax, ecx
                cmovz   eax, r12d
                or      ecx, 0FFFFFFFFh
                mov     [rbx+4], eax
                mov     eax, [rdx+1CCh]
                cmp     eax, ecx
                jnz     short loc_1408BB29D
                test    r8, r8
                jz      short loc_1408BB29B
                mov     eax, [r8+8]
                cmp     eax, ecx
                jnz     short loc_1408BB29D

loc_1408BB29B:                          ; CODE XREF: sub_1408BB18C+105↑j
                xor     eax, eax

loc_1408BB29D:                          ; CODE XREF: sub_1408BB18C+100↑j
                                        ; sub_1408BB18C+10D↑j
                xor     r8d, r8d
                mov     [rbx+8], eax
                mov     rdx, rbx
                call    sub_1407B5920
                mov     rdi, rax
                test    rax, rax
                jnz     short loc_1408BB2BD
                mov     ebx, 0C000000Dh
                jmp     loc_1408BB3BE
; ---------------------------------------------------------------------------

loc_1408BB2BD:                          ; CODE XREF: sub_1408BB18C+125↑j
                or      [rbp+47h+var_84], 0FFFFFFFFh
                lea     rdx, [rbp+47h+var_A0]
                lea     rcx, [rbp+47h+var_90]
                mov     [rbp+47h+var_90], rsi
                mov     [rbp+47h+var_78], rdi
                call    sub_14074DD94
                mov     ebx, eax
                test    eax, eax
                js      loc_1408BB3B4
                mov     rcx, [rbp+47h+var_A0]
                test    rcx, rcx
                jnz     short loc_1408BB2F3

loc_1408BB2E9:                          ; CODE XREF: sub_1408BB18C+176↓j
                                        ; sub_1408BB18C+180↓j
                mov     ebx, 0C000000Dh
                jmp     loc_1408BB3B4
; ---------------------------------------------------------------------------

loc_1408BB2F3:                          ; CODE XREF: sub_1408BB18C+15B↑j
                lea     rax, [rcx+28h]
                mov     rdx, [rax]
                mov     [rcx+10h], rax
                cmp     [rdx+14h], r12d
                jnz     short loc_1408BB2E9
                mov     rax, [rdx+18h]
                cmp     byte ptr [rax+8], 0
                jz      short loc_1408BB2E9
                mov     r10, [rax+120h]
                mov     rax, [rax+20h]
                mov     rcx, [rax+40h]
                mov     al, [rcx+1]
                cmp     al, 80h
                jz      short loc_1408BB328
                cmp     al, 0F0h
                jnz     short loc_1408BB32C

loc_1408BB328:                          ; CODE XREF: sub_1408BB18C+196↑j
                add     rcx, 20h ; ' '

loc_1408BB32C:                          ; CODE XREF: sub_1408BB18C+19A↑j
                lea     rax, [rbp+47h+var_B0]
                mov     qword ptr [rbp+47h+var_50+8], rcx
                mov     qword ptr [rbp+47h+var_40], rax
                lea     r8, [rbp+47h+var_50]
                lea     rax, [rbp+47h+var_A8]
                mov     qword ptr [rbp+47h+var_50], rsi
                mov     edx, 6
                mov     qword ptr [rbp+47h+var_40+8], rax
                mov     rcx, r10
                call    sub_14074E824
                mov     ebx, eax
                test    eax, eax
                js      short loc_1408BB38D
                mov     eax, [rbp+47h+arg_20]
                mov     r9, r14
                and     [rsp+0E0h+var_B8], 0
                mov     rcx, rsi
                mov     r8, [rbp+47h+var_A8]
                mov     edx, [rbp+47h+var_B0]
                mov     [rsp+0E0h+var_C0], eax
                call    sub_1408BABAC
                mov     rcx, [rbp+47h+var_A8]
                mov     ebx, eax
                test    rcx, rcx
                jz      short loc_1408BB3B4
                xor     edx, edx
                call    ExFreePoolWithTag
                jmp     short loc_1408BB3B4
; ---------------------------------------------------------------------------

loc_1408BB38D:                          ; CODE XREF: sub_1408BB18C+1CD↑j
                cmp     eax, 0C000028Ch
                jnz     short loc_1408BB3B4
                mov     eax, [rbp+47h+arg_20]
                mov     r9, r14
                mov     [rsp+0E0h+var_B8], 4
                xor     r8d, r8d
                xor     edx, edx
                mov     [rsp+0E0h+var_C0], eax
                xor     ecx, ecx
                call    sub_1408BABAC
                mov     ebx, eax

loc_1408BB3B4:                          ; CODE XREF: sub_1408BB18C+14E↑j
                                        ; sub_1408BB18C+162↑j ...
                xor     edx, edx
                mov     rcx, rdi
                call    ExFreePoolWithTag

loc_1408BB3BE:                          ; CODE XREF: sub_1408BB18C+12C↑j
                mov     rcx, [rbp+47h+var_A0]
                test    rcx, rcx
                jz      short loc_1408BB3CC
                call    sub_14074F5A8

loc_1408BB3CC:                          ; CODE XREF: sub_1408BB18C+87↑j
                                        ; sub_1408BB18C+AE↑j ...
                mov     eax, ebx
                mov     rcx, [rbp+47h+var_30]
                xor     rcx, rsp
                call    __security_check_cookie
                mov     rbx, [rsp+0E0h+arg_10]
                add     rsp, 0C0h
                pop     r14
                pop     r12
                pop     rdi
                pop     rsi
                pop     rbp
                retn
; ---------------------------------------------------------------------------
                db 0CCh
; } // starts at 1408BB18C
sub_1408BB18C   endp

algn_1408BB3F2:                         ; DATA XREF: .pdata:000000014011DE04↑o
                align 20h
; Exported entry 1090. KdSystemDebugControl

; =============== S U B R O U T I N E =======================================


